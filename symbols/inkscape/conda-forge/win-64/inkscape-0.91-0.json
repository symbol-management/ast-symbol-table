{
 "*": {
  "data": {
   "imports": [
    "_imaginggl"
   ]
  },
  "type": "star-import"
 },
 "PIL": {
  "data": {},
  "type": "module"
 },
 "PIL.BmpImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.BmpImagePlugin.BmpImageFile",
    "PIL.BmpImagePlugin.Image",
    "PIL.BmpImagePlugin._accept",
    "PIL.BmpImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.BmpImagePlugin.BIT2MODE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "PIL.BmpImagePlugin.BmpImageFile": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "PIL.BmpImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.BmpImagePlugin.BmpImageFile._bitmap": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "PIL.BmpImagePlugin.BIT2MODE",
    "PIL.BmpImagePlugin.ImageFile",
    "PIL.BmpImagePlugin.ImagePalette",
    "PIL.BmpImagePlugin.i16",
    "PIL.BmpImagePlugin.i32",
    "PIL.BmpImagePlugin.string",
    "chr",
    "len",
    "range",
    "read"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.BmpImageFile._open": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "PIL.BmpImagePlugin.i32",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.DibImageFile": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "PIL.BmpImagePlugin.BmpImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.BmpImagePlugin.DibImageFile._open": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.BmpImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.BmpImagePlugin.ImagePalette": {
  "data": {
   "shadows": "ImagePalette"
  },
  "type": "import"
 },
 "PIL.BmpImagePlugin.SAVE": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "PIL.BmpImagePlugin.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "PIL.BmpImagePlugin._accept": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin._save": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "PIL.BmpImagePlugin.ImageFile",
    "PIL.BmpImagePlugin.SAVE",
    "PIL.BmpImagePlugin.o16",
    "PIL.BmpImagePlugin.o32",
    "chr",
    "range"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.i16": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.i32": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.o16": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.o32": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "PIL.BmpImagePlugin.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "PIL.BufrStubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.BufrStubImagePlugin.BufrStubImageFile",
    "PIL.BufrStubImagePlugin.Image",
    "PIL.BufrStubImagePlugin._accept",
    "PIL.BufrStubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.BufrStubImagePlugin.BufrStubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "PIL.BufrStubImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.BufrStubImagePlugin.BufrStubImageFile._load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "PIL.BufrStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.BufrStubImagePlugin.BufrStubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PIL.BufrStubImagePlugin._accept",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.BufrStubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.BufrStubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.BufrStubImagePlugin._accept": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "PIL.BufrStubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "PIL.BufrStubImagePlugin._save": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "IOError",
    "PIL.BufrStubImagePlugin._handler",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.BufrStubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "PIL.BufrStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.ContainerIO": {
  "data": {},
  "type": "module"
 },
 "PIL.ContainerIO.ContainerIO": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "PIL.ContainerIO.ContainerIO.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "PIL.ContainerIO.ContainerIO.isatty": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "PIL.ContainerIO.ContainerIO.read": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "PIL.ContainerIO.ContainerIO.readline": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "PIL.ContainerIO.ContainerIO.readlines": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "PIL.ContainerIO.ContainerIO.seek": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "PIL.ContainerIO.ContainerIO.tell": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "PIL.ExifTags": {
  "data": {},
  "type": "module"
 },
 "PIL.ExifTags.GPSTAGS": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "PIL.ExifTags.TAGS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "PIL.FitsStubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.FitsStubImagePlugin.FITSStubImageFile",
    "PIL.FitsStubImagePlugin.Image",
    "PIL.FitsStubImagePlugin._accept",
    "PIL.FitsStubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.FitsStubImagePlugin.FITSStubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "PIL.FitsStubImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.FitsStubImagePlugin.FITSStubImageFile._load": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "PIL.FitsStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.FitsStubImagePlugin.FITSStubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PIL.FitsStubImagePlugin._accept",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.FitsStubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.FitsStubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.FitsStubImagePlugin._accept": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "PIL.FitsStubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "PIL.FitsStubImagePlugin._save": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "IOError",
    "PIL.FitsStubImagePlugin._handler",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.FitsStubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "PIL.FitsStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.FontFile": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "PIL.FontFile.FontFile": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "PIL.FontFile.FontFile.__getitem__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "PIL.FontFile.FontFile.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "PIL.FontFile.FontFile.compile": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "PIL.FontFile.Image",
    "PIL.FontFile.WIDTH",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "PIL.FontFile.FontFile.save1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "PIL.FontFile.os",
    "PIL.FontFile.puti16",
    "id",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "PIL.FontFile.FontFile.save2": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "PIL.FontFile.marshal",
    "PIL.FontFile.os",
    "PIL.FontFile.zlib",
    "open"
   ]
  },
  "type": "function"
 },
 "PIL.FontFile.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.FontFile.WIDTH": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "PIL.FontFile.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "PIL.FontFile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "PIL.FontFile.puti16": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "PIL.FontFile.zlib": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "PIL.GdImageFile": {
  "data": {},
  "type": "module"
 },
 "PIL.GdImageFile.GdImageFile": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "PIL.GdImageFile.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.GdImageFile.GdImageFile._open": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "PIL.GdImageFile.ImagePalette",
    "PIL.GdImageFile.i16"
   ]
  },
  "type": "function"
 },
 "PIL.GdImageFile.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.GdImageFile.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.GdImageFile.ImagePalette": {
  "data": {
   "shadows": "ImagePalette"
  },
  "type": "import"
 },
 "PIL.GdImageFile.__builtin__": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "PIL.GdImageFile.__version__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "PIL.GdImageFile.i16": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.GdImageFile.open": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "IOError",
    "PIL.GdImageFile.GdImageFile",
    "PIL.GdImageFile.__builtin__",
    "SyntaxError",
    "ValueError",
    "type"
   ]
  },
  "type": "function"
 },
 "PIL.GdImageFile.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "PIL.GribStubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.GribStubImagePlugin.GribStubImageFile",
    "PIL.GribStubImagePlugin.Image",
    "PIL.GribStubImagePlugin._accept",
    "PIL.GribStubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.GribStubImagePlugin.GribStubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "PIL.GribStubImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.GribStubImagePlugin.GribStubImageFile._load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "PIL.GribStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.GribStubImagePlugin.GribStubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PIL.GribStubImagePlugin._accept",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.GribStubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.GribStubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.GribStubImagePlugin._accept": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "PIL.GribStubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "PIL.GribStubImagePlugin._save": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "IOError",
    "PIL.GribStubImagePlugin._handler",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.GribStubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "PIL.GribStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.Hdf5StubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.Hdf5StubImagePlugin.HDF5StubImageFile",
    "PIL.Hdf5StubImagePlugin.Image",
    "PIL.Hdf5StubImagePlugin._accept",
    "PIL.Hdf5StubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.Hdf5StubImagePlugin.HDF5StubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "PIL.Hdf5StubImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.Hdf5StubImagePlugin.HDF5StubImageFile._load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "PIL.Hdf5StubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.Hdf5StubImagePlugin.HDF5StubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PIL.Hdf5StubImagePlugin._accept",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.Hdf5StubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.Hdf5StubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.Hdf5StubImagePlugin._accept": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "PIL.Hdf5StubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "PIL.Hdf5StubImagePlugin._save": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "IOError",
    "PIL.Hdf5StubImagePlugin._handler",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.Hdf5StubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "PIL.Hdf5StubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.ImageChops": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageChops.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageChops.add": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "PIL.ImageChops.add_modulo": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "PIL.ImageChops.blend": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "PIL.ImageChops.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageChops.composite": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "PIL.ImageChops.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageChops.constant": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "PIL.ImageChops.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageChops.darker": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "PIL.ImageChops.difference": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "PIL.ImageChops.duplicate": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "PIL.ImageChops.invert": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "PIL.ImageChops.lighter": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "PIL.ImageChops.logical_and": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "PIL.ImageChops.logical_or": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "PIL.ImageChops.logical_xor": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "PIL.ImageChops.multiply": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "PIL.ImageChops.offset": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "PIL.ImageChops.screen": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "PIL.ImageChops.subtract": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "PIL.ImageChops.subtract_modulo": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "PIL.ImageColor": {
  "data": {
   "symbols_in_volume": [
    "PIL.ImageColor.string",
    "TypeError",
    "int"
   ]
  },
  "type": "module"
 },
 "PIL.ImageColor.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageColor.colormap": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "PIL.ImageColor.getcolor": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "PIL.ImageColor.Image",
    "PIL.ImageColor.getrgb"
   ]
  },
  "type": "function"
 },
 "PIL.ImageColor.getrgb": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "KeyError",
    "PIL.ImageColor.re",
    "PIL.ImageColor.str2int",
    "PIL.ImageColor.string",
    "ValueError",
    "colorsys.hls_to_rgb",
    "float",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "PIL.ImageColor.hls_to_rgb": {
  "data": {
   "shadows": "colorsys.hls_to_rgb"
  },
  "type": "import"
 },
 "PIL.ImageColor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "PIL.ImageColor.str2int": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "PIL.ImageColor.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "PIL.ImageColor.x": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "PIL.ImageDraw": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "PIL.ImageDraw.Image"
   ]
  },
  "type": "module"
 },
 "PIL.ImageDraw.Draw": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "AttributeError",
    "PIL.ImageDraw.ImageDraw"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageDraw.ImageColor": {
  "data": {
   "shadows": "ImageColor"
  },
  "type": "import"
 },
 "PIL.ImageDraw.ImageDraw": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "PIL.ImageDraw.ImageDraw.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "PIL.ImageDraw.Image",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw._getink": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "PIL.ImageDraw.Image",
    "PIL.ImageDraw.ImageColor"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.arc": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.bitmap": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.chord": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.ellipse": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.getfont": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "PIL.ImageDraw.ImageFont"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.line": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.pieslice": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.point": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.polygon": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.rectangle": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.setfill": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PIL.ImageDraw.warnings"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.setfont": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.setink": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "DeprecationWarning",
    "PIL.ImageDraw.Image",
    "PIL.ImageDraw.ImageColor",
    "PIL.ImageDraw.warnings"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.shape": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.text": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw.textsize": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "PIL.ImageDraw.ImageDraw2": {
  "data": {
   "shadows": "ImageDraw2"
  },
  "type": "import"
 },
 "PIL.ImageDraw.ImageFont": {
  "data": {
   "shadows": "ImageFont"
  },
  "type": "import"
 },
 "PIL.ImageDraw.Outline": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "PIL.ImageDraw._imagingagg": {
  "data": {
   "shadows": "_imagingagg"
  },
  "type": "import"
 },
 "PIL.ImageDraw.floodfill": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.getdraw": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ImportError",
    "PIL.ImageDraw.ImageDraw2",
    "PIL.ImageDraw._imagingagg"
   ]
  },
  "type": "function"
 },
 "PIL.ImageDraw.warnings": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "PIL.ImageEnhance": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageEnhance.Brightness": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "PIL.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "PIL.ImageEnhance.Brightness.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "PIL.ImageEnhance.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageEnhance.Color": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "PIL.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "PIL.ImageEnhance.Color.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "PIL.ImageEnhance.Contrast": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "PIL.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "PIL.ImageEnhance.Contrast.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "PIL.ImageEnhance.Image",
    "reduce"
   ]
  },
  "type": "function"
 },
 "PIL.ImageEnhance.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageEnhance.ImageFilter": {
  "data": {
   "shadows": "ImageFilter"
  },
  "type": "import"
 },
 "PIL.ImageEnhance.Sharpness": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "PIL.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "PIL.ImageEnhance.Sharpness.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "PIL.ImageEnhance.ImageFilter"
   ]
  },
  "type": "function"
 },
 "PIL.ImageEnhance._Enhance": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "PIL.ImageEnhance._Enhance.enhance": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "PIL.ImageEnhance.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageFilter": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageFilter.BLUR": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.BuiltinFilter": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "PIL.ImageFilter.Kernel"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.BuiltinFilter.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "PIL.ImageFilter.CONTOUR": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.DETAIL": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.EDGE_ENHANCE": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.EDGE_ENHANCE_MORE": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.EMBOSS": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.FIND_EDGES": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.Filter": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "PIL.ImageFilter.Kernel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "PIL.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.Kernel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "reduce"
   ]
  },
  "type": "function"
 },
 "PIL.ImageFilter.Kernel.filter": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "apply"
   ]
  },
  "type": "function"
 },
 "PIL.ImageFilter.MaxFilter": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "PIL.ImageFilter.RankFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.MaxFilter.__init__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "PIL.ImageFilter.MedianFilter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "PIL.ImageFilter.RankFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.MedianFilter.__init__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "PIL.ImageFilter.MinFilter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "PIL.ImageFilter.RankFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.MinFilter.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "PIL.ImageFilter.ModeFilter": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "PIL.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.ModeFilter.__init__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "PIL.ImageFilter.ModeFilter.filter": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "PIL.ImageFilter.RankFilter": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "PIL.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.RankFilter.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "PIL.ImageFilter.RankFilter.filter": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "PIL.ImageFilter.SHARPEN": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.SMOOTH": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageFilter.SMOOTH_MORE": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "PIL.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "PIL.ImageGL": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageGL.TextureFactory": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "PIL.ImageGL._imaginggl": {
  "data": {
   "shadows": "_imaginggl"
  },
  "type": "import"
 },
 "PIL.ImageGrab": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "PIL.ImageGrab.Image",
    "PIL.ImageGrab._grabscreen"
   ]
  },
  "type": "module"
 },
 "PIL.ImageGrab.BmpImagePlugin": {
  "data": {
   "shadows": "BmpImagePlugin"
  },
  "type": "import"
 },
 "PIL.ImageGrab.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageGrab.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "PIL.ImageGrab._grabscreen": {
  "data": {
   "shadows": "_grabscreen"
  },
  "type": "import"
 },
 "PIL.ImageGrab.grab": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "PIL.ImageGrab.Image",
    "PIL.ImageGrab.grabber"
   ]
  },
  "type": "function"
 },
 "PIL.ImageGrab.grabber": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "PIL.ImageGrab.grabclipboard": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "PIL.ImageGrab.BmpImagePlugin",
    "PIL.ImageGrab.Image",
    "PIL.ImageGrab.StringIO"
   ]
  },
  "type": "function"
 },
 "PIL.ImageMode": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageMode.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageMode.ModeDescriptor": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "PIL.ImageMode.ModeDescriptor.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "PIL.ImageMode.ModeDescriptor.__str__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "PIL.ImageMode._modes": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "PIL.ImageMode.getmode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PIL.ImageMode.Image",
    "PIL.ImageMode.ModeDescriptor",
    "PIL.ImageMode._modes"
   ]
  },
  "type": "function"
 },
 "PIL.ImagePath": {
  "data": {
   "symbols_in_volume": [
    "PIL.ImagePath.Image"
   ]
  },
  "type": "module"
 },
 "PIL.ImagePath.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImagePath.Path": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "PIL.ImagePath.Path.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "PIL.ImagePath.Path.compact": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "PIL.ImagePath.Path.getbbox": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "PIL.ImagePath.Path.map": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "PIL.ImagePath.Path.tolist": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "PIL.ImagePath.Path.transform": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "PIL.ImageQt": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageQt.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageQt.ImageQt": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "PyQt4.QtGui.QImage"
   ]
  },
  "type": "class"
 },
 "PIL.ImageQt.ImageQt.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "PIL.ImageQt.Image",
    "PIL.ImageQt.rgb",
    "PyQt4.QtGui.QImage.Format_ARGB32",
    "PyQt4.QtGui.QImage.Format_Indexed8",
    "PyQt4.QtGui.QImage.Format_Mono",
    "PyQt4.QtGui.QImage.Format_RGB32",
    "PyQt4.QtGui.QImage.__init__",
    "SystemError",
    "ValueError",
    "format",
    "hasattr",
    "len",
    "range",
    "unicode"
   ]
  },
  "type": "function"
 },
 "PIL.ImageQt.QImage": {
  "data": {
   "shadows": "PyQt4.QtGui.QImage"
  },
  "type": "import"
 },
 "PIL.ImageQt.qRgb": {
  "data": {
   "shadows": "PyQt4.QtGui.qRgb"
  },
  "type": "import"
 },
 "PIL.ImageQt.rgb": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "PyQt4.QtGui.qRgb"
   ]
  },
  "type": "function"
 },
 "PIL.ImageSequence": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageSequence.Iterator": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "PIL.ImageSequence.Iterator.__getitem__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "EOFError",
    "IndexError"
   ]
  },
  "type": "function"
 },
 "PIL.ImageSequence.Iterator.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.ImageTransform": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageTransform.AffineTransform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "PIL.ImageTransform.Image",
    "PIL.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "PIL.ImageTransform.ExtentTransform": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "PIL.ImageTransform.Image",
    "PIL.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "PIL.ImageTransform.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageTransform.MeshTransform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "PIL.ImageTransform.Image",
    "PIL.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "PIL.ImageTransform.QuadTransform": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "PIL.ImageTransform.Image",
    "PIL.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "PIL.ImageTransform.Transform": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "PIL.ImageTransform.Transform.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "PIL.ImageTransform.Transform.getdata": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "PIL.ImageWin": {
  "data": {},
  "type": "module"
 },
 "PIL.ImageWin.Dib": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "PIL.ImageWin.Dib.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "PIL.ImageWin.Image",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Dib.draw": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "PIL.ImageWin.HWND",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Dib.expose": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "PIL.ImageWin.HWND",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Dib.fromstring": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "PIL.ImageWin.Dib.paste": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "PIL.ImageWin.Dib.query_palette": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "PIL.ImageWin.HWND",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Dib.tostring": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "PIL.ImageWin.HDC": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "PIL.ImageWin.HDC.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "PIL.ImageWin.HDC.__int__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "PIL.ImageWin.HWND": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "PIL.ImageWin.HWND.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "PIL.ImageWin.HWND.__int__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "PIL.ImageWin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.ImageWin.ImageWindow": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "PIL.ImageWin.Window"
   ]
  },
  "type": "class"
 },
 "PIL.ImageWin.ImageWindow.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "PIL.ImageWin.Dib",
    "PIL.ImageWin.Window",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.ImageWindow.ui_handle_repair": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "PIL.ImageWin.Window": {
  "data": {
   "lineno": 174
  },
  "type": "class"
 },
 "PIL.ImageWin.Window.__dispatcher": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "apply",
    "getattr"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "PIL.ImageWin.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.mainloop": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "PIL.ImageWin.Image"
   ]
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.ui_handle_clear": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.ui_handle_damage": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.ui_handle_destroy": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.ui_handle_repair": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "PIL.ImageWin.Window.ui_handle_resize": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.APP",
    "PIL.JpegImagePlugin.COM",
    "PIL.JpegImagePlugin.DQT",
    "PIL.JpegImagePlugin.Image",
    "PIL.JpegImagePlugin.JpegImageFile",
    "PIL.JpegImagePlugin.SOF",
    "PIL.JpegImagePlugin.Skip",
    "PIL.JpegImagePlugin._accept",
    "PIL.JpegImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.JpegImagePlugin.APP": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.ImageFile",
    "PIL.JpegImagePlugin.i16",
    "divmod",
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.COM": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.ImageFile",
    "PIL.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.DQT": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.ImageFile",
    "PIL.JpegImagePlugin.array",
    "PIL.JpegImagePlugin.i16",
    "SyntaxError",
    "len",
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.JpegImageFile": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.JpegImagePlugin.JpegImageFile._getexif": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "KeyError",
    "PIL.JpegImagePlugin.StringIO",
    "PIL.JpegImagePlugin.TiffImagePlugin",
    "fixup"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.JpegImageFile._getexif.fixup": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.JpegImageFile._open": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.MARKER",
    "PIL.JpegImagePlugin.i16",
    "SyntaxError",
    "handler",
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.JpegImageFile.draft": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.JpegImageFile.load_djpeg": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.Image",
    "PIL.JpegImagePlugin.os",
    "PIL.JpegImagePlugin.tempfile"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.MARKER": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "PIL.JpegImagePlugin.RAWMODE": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "PIL.JpegImagePlugin.SOF": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.ImageFile",
    "PIL.JpegImagePlugin.i16",
    "SyntaxError",
    "len",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.Skip": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.ImageFile",
    "PIL.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.TiffImagePlugin": {
  "data": {
   "shadows": "TiffImagePlugin"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.__version__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "PIL.JpegImagePlugin._accept": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin._save": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "PIL.JpegImagePlugin.ImageFile",
    "PIL.JpegImagePlugin.RAWMODE"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin._save_cjpeg": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "PIL.JpegImagePlugin.os"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.i16": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.i32": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.JpegImagePlugin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "PIL.JpegImagePlugin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "PIL.PdfImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.PdfImagePlugin.Image",
    "PIL.PdfImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.PdfImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.PdfImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.PdfImagePlugin.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "PIL.PdfImagePlugin.__version__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "PIL.PdfImagePlugin._endobj": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "PIL.PdfImagePlugin._obj": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "dict.items"
   ]
  },
  "type": "function"
 },
 "PIL.PdfImagePlugin._save": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "PIL.PdfImagePlugin.Image",
    "PIL.PdfImagePlugin.ImageFile",
    "PIL.PdfImagePlugin.StringIO",
    "PIL.PdfImagePlugin.__version__",
    "PIL.PdfImagePlugin._endobj",
    "PIL.PdfImagePlugin._obj",
    "ValueError",
    "filter",
    "len",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "PIL.TiffTags": {
  "data": {},
  "type": "module"
 },
 "PIL.TiffTags.TAGS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "PIL.TiffTags.TYPES": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "PIL.WbmpImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.WbmpImagePlugin.Image",
    "PIL.WbmpImagePlugin.WbmpImageFile",
    "PIL.WbmpImagePlugin._accept",
    "PIL.WbmpImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.WbmpImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.WbmpImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.WbmpImagePlugin.ImagePalette": {
  "data": {
   "shadows": "ImagePalette"
  },
  "type": "import"
 },
 "PIL.WbmpImagePlugin.SAVE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "PIL.WbmpImagePlugin.WbmpImageFile": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "PIL.WbmpImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.WbmpImagePlugin.WbmpImageFile._open": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "PIL.WbmpImagePlugin._accept",
    "PIL.WbmpImagePlugin._frommb",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.WbmpImagePlugin.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "PIL.WbmpImagePlugin._accept": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "PIL.WbmpImagePlugin._frommb",
    "ord",
    "type"
   ]
  },
  "type": "function"
 },
 "PIL.WbmpImagePlugin._frommb": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.WbmpImagePlugin._save": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "KeyError",
    "PIL.WbmpImagePlugin.ImageFile",
    "PIL.WbmpImagePlugin.SAVE",
    "PIL.WbmpImagePlugin._tomb",
    "ValueError",
    "chr"
   ]
  },
  "type": "function"
 },
 "PIL.WbmpImagePlugin._tomb": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "PIL.WbmpImagePlugin.string",
    "chr"
   ]
  },
  "type": "function"
 },
 "PIL.WbmpImagePlugin.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "PIL.WmfImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "PIL.WmfImagePlugin.Image",
    "PIL.WmfImagePlugin.WmfStubImageFile",
    "PIL.WmfImagePlugin._accept",
    "PIL.WmfImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "PIL.WmfImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "PIL.WmfImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "PIL.WmfImagePlugin.WmfStubImageFile": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "PIL.WmfImagePlugin.ImageFile",
    "format"
   ]
  },
  "type": "class"
 },
 "PIL.WmfImagePlugin.WmfStubImageFile._load": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "PIL.WmfImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.WmfStubImageFile._open": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "PIL.WmfImagePlugin.long",
    "PIL.WmfImagePlugin.short",
    "PIL.WmfImagePlugin.word",
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "PIL.WmfImagePlugin._accept": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin._handler": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "PIL.WmfImagePlugin._save": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "IOError",
    "PIL.WmfImagePlugin._handler",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.dword": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.long": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "PIL.WmfImagePlugin.dword"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.register_handler": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "PIL.WmfImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.short": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "PIL.WmfImagePlugin.word": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "lxml": {
  "data": {},
  "type": "module"
 },
 "lxml.ElementInclude": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "lxml.ElementInclude.XINCLUDE",
    "set"
   ]
  },
  "type": "module"
 },
 "lxml.ElementInclude.FatalIncludeError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "lxml.etree.LxmlSyntaxError"
   ]
  },
  "type": "class"
 },
 "lxml.ElementInclude.XINCLUDE": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "lxml.ElementInclude.XINCLUDE_FALLBACK": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "lxml.ElementInclude.XINCLUDE_INCLUDE": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "lxml.ElementInclude._include": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "list",
    "load_include",
    "loader",
    "lxml.ElementInclude.FatalIncludeError",
    "lxml.ElementInclude.XINCLUDE_FALLBACK",
    "lxml.ElementInclude.XINCLUDE_INCLUDE",
    "lxml.ElementInclude._lxml_default_loader",
    "lxml.ElementInclude._wrap_et_loader",
    "sets.Set",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "lxml.ElementInclude._lxml_default_loader": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "lxml.etree.parse",
    "open",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "lxml.ElementInclude._wrap_et_loader": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "lxml.ElementInclude._wrap_et_loader.load": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "loader"
   ]
  },
  "type": "function"
 },
 "lxml.ElementInclude.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "lxml.ElementInclude.default_loader": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "lxml.etree.parse",
    "open"
   ]
  },
  "type": "function"
 },
 "lxml.ElementInclude.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.ElementInclude.include": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_include",
    "hasattr",
    "loader"
   ]
  },
  "type": "function"
 },
 "lxml.ElementInclude.set": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "lxml.ElementInclude.urljoin": {
  "data": {
   "shadows": "urllib.parse.urljoin"
  },
  "type": "import"
 },
 "lxml.ElementInclude.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "lxml._elementpath": {
  "data": {
   "symbols_in_volume": [
    "lxml._elementpath.prepare_dot",
    "lxml._elementpath.prepare_dot_dot",
    "lxml._elementpath.prepare_iter",
    "lxml._elementpath.prepare_predicate",
    "lxml._elementpath.prepare_star",
    "lxml._elementpath.prepare_tag",
    "lxml._elementpath.re"
   ]
  },
  "type": "module"
 },
 "lxml._elementpath._build_path_iterator": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "StopIteration",
    "SyntaxError",
    "_next",
    "iter",
    "len",
    "lxml._elementpath._cache",
    "lxml._elementpath.ops",
    "lxml._elementpath.xpath_tokenizer"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath._build_path_iterator._next": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath._cache": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "lxml._elementpath.find": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "AttributeError",
    "StopIteration",
    "_next",
    "lxml._elementpath.iterfind",
    "next"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.findall": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "list",
    "lxml._elementpath.iterfind"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.findtext": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "lxml._elementpath.find"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.iterfind": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "iter",
    "lxml._elementpath._build_path_iterator",
    "select"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.ops": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "lxml._elementpath.prepare_dot": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_dot.select": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_dot_dot": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_dot_dot.select": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_iter": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "SyntaxError",
    "next"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_iter.select": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_predicate": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "SyntaxError",
    "next"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_predicate.select": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "find"
   ]
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_star": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_star.select": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_tag": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "lxml._elementpath.prepare_tag.select": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "lxml._elementpath.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml._elementpath.xpath_tokenizer": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "lxml.builder": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "callable",
    "lxml.builder.ElementMaker",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.builder.E": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "lxml.builder.ET": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.builder.ElementMaker": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.builder.ElementMaker.__call__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "get",
    "item",
    "lxml.builder.callable",
    "lxml.etree.iselement",
    "t",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.builder.ElementMaker.__getattr__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "lxml.builder.ElementMaker.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "dict",
    "lxml.builder.callable",
    "lxml.builder.unicode",
    "lxml.etree.Element",
    "str"
   ]
  },
  "type": "function"
 },
 "lxml.builder.ElementMaker.__init__.add_dict": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "lxml.builder.basestring",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.builder.ElementMaker.__init__.add_text": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.builder.basestring": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "lxml.builder.callable": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "lxml.builder.partial": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "lxml.builder.unicode": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "lxml.cssselect": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "chr",
    "lxml.cssselect._make_lower_case",
    "lxml.cssselect.ns",
    "lxml.cssselect.re",
    "lxml.etree.FunctionNamespace",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.cssselect.Attrib": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Attrib.__init__": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "lxml.cssselect.Attrib.__repr__": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "lxml.cssselect.Attrib._format_attrib": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "lxml.cssselect.Attrib._xpath_attrib": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "lxml.cssselect.Attrib.xpath": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "len",
    "xpath_literal"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.CSSSelector": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "lxml.etree.XPath"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.CSSSelector.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "css_to_xpath",
    "lxml.etree.XPath.__init__"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.CSSSelector.__repr__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "abs",
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Class": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Class.__init__": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "lxml.cssselect.Class.__repr__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "lxml.cssselect.Class.xpath": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "xpath_literal"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.CombinedSelector.__init__": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector.__repr__": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector._xpath_child": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector._xpath_descendant": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector._xpath_direct_adjacent": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector._xpath_indirect_adjacent": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "lxml.cssselect.CombinedSelector.xpath": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "getattr",
    "lxml.cssselect.ExpressionError",
    "method"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Element": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Element.__init__": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "lxml.cssselect.Element.__repr__": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "lxml.cssselect.Element._format_element": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "lxml.cssselect.Element.xpath": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "XPathExpr"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.ExpressionError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Function": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Function.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Function.__repr__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "lxml.cssselect.Function._xpath_contains": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "isinstance",
    "xpath_literal"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Function._xpath_not": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "lxml.cssselect.Function._xpath_nth_child": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "parse_series",
    "str"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Function._xpath_nth_last_child": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "lxml.cssselect.Function._xpath_nth_last_of_type": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "lxml.cssselect.Function._xpath_nth_of_type": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Function.xpath": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "lxml.cssselect.ExpressionError",
    "method"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Hash": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Hash.__init__": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Hash.__repr__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "lxml.cssselect.Hash.xpath": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "xpath_literal"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Or": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Or.__init__": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "lxml.cssselect.Or.__repr__": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "lxml.cssselect.Or.xpath": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "XPathExprOr"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Pseudo.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo.__repr__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_checked": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_empty": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_first_child": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_first_of_type": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_last_child": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_last_of_type": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_only_child": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_only_of_type": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo._xpath_root": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.Pseudo.xpath": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "lxml.cssselect.ExpressionError",
    "method"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.SelectorSyntaxError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.String": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "lxml.cssselect._UniToken"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Symbol": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "lxml.cssselect._UniToken"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.Token": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "lxml.cssselect._UniToken"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.TokenStream": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.TokenStream.__init__": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "AttributeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.TokenStream.__iter__": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.TokenStream.next": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "StopIteration",
    "next"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.TokenStream.peek": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.XPathExpr.__init__": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.__repr__": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.__str__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "lxml.cssselect._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.add_condition": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.add_name_test": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "xpath_literal"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.add_path": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.add_prefix": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.add_star_prefix": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExpr.join": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "lxml.cssselect._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExprOr": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "lxml.cssselect.XPathExpr"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect.XPathExprOr.__init__": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "lxml.cssselect.XPathExprOr.__str__": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "lxml.cssselect._UniToken": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "lxml.cssselect._unicode"
   ]
  },
  "type": "class"
 },
 "lxml.cssselect._UniToken.__new__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "lxml.cssselect._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect._UniToken.__repr__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "lxml.cssselect._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "lxml.cssselect._basestring": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "lxml.cssselect._class_re": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "lxml.cssselect._comment_re": {
  "data": {
   "lineno": 839
  },
  "type": "constant"
 },
 "lxml.cssselect._count_re": {
  "data": {
   "lineno": 841
  },
  "type": "constant"
 },
 "lxml.cssselect._el_re": {
  "data": {
   "lineno": 506
  },
  "type": "constant"
 },
 "lxml.cssselect._id_re": {
  "data": {
   "lineno": 507
  },
  "type": "constant"
 },
 "lxml.cssselect._illegal_symbol": {
  "data": {
   "lineno": 926
  },
  "type": "constant"
 },
 "lxml.cssselect._make_lower_case": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "lxml.cssselect._unichr": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "lxml.cssselect._unicode": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "lxml.cssselect._whitespace_re": {
  "data": {
   "lineno": 837
  },
  "type": "constant"
 },
 "lxml.cssselect.css_to_xpath": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "isinstance",
    "lxml.cssselect._basestring",
    "lxml.cssselect._class_re",
    "lxml.cssselect._el_re",
    "lxml.cssselect._id_re",
    "lxml.cssselect._unicode",
    "parse",
    "repr"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.cssselect.is_int": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.ns": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "lxml.cssselect.parse": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "TokenStream",
    "lxml.cssselect.SelectorSyntaxError",
    "lxml.cssselect.sys",
    "parse_selector_group",
    "tokenize",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.parse_attrib": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "isinstance",
    "lxml.cssselect.Attrib",
    "lxml.cssselect.SelectorSyntaxError",
    "lxml.cssselect.String",
    "lxml.cssselect.Symbol"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.parse_selector": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "len",
    "lxml.cssselect.CombinedSelector",
    "lxml.cssselect.SelectorSyntaxError",
    "parse_simple_selector"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.parse_selector_group": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "len",
    "lxml.cssselect.Or",
    "parse_selector"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.parse_series": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "lxml.cssselect.Element"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.parse_simple_selector": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "int",
    "is_int",
    "isinstance",
    "lxml.cssselect.Class",
    "lxml.cssselect.Element",
    "lxml.cssselect.Function",
    "lxml.cssselect.Hash",
    "lxml.cssselect.Pseudo",
    "lxml.cssselect.SelectorSyntaxError",
    "lxml.cssselect.String",
    "lxml.cssselect.Symbol",
    "next",
    "parse_attrib",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml.cssselect.split_at_single_quotes": {
  "data": {
   "lineno": 622
  },
  "type": "constant"
 },
 "lxml.cssselect.split_at_string_escapes": {
  "data": {
   "lineno": 884
  },
  "type": "constant"
 },
 "lxml.cssselect.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lxml.cssselect.tokenize": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "len",
    "lxml.cssselect.String",
    "lxml.cssselect.Symbol",
    "lxml.cssselect.Token",
    "lxml.cssselect._comment_re",
    "lxml.cssselect._count_re",
    "lxml.cssselect._whitespace_re",
    "tokenize_escaped_string",
    "tokenize_symbol"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.tokenize_escaped_string": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "lxml.cssselect.SelectorSyntaxError",
    "lxml.cssselect.unescape_string_literal",
    "next"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.tokenize_symbol": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "len",
    "lxml.cssselect.SelectorSyntaxError",
    "lxml.cssselect._illegal_symbol",
    "lxml.cssselect.sys"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.unescape_string_literal": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "int",
    "len",
    "lxml.cssselect.SelectorSyntaxError",
    "lxml.cssselect._unichr",
    "lxml.cssselect.split_at_string_escapes"
   ]
  },
  "type": "function"
 },
 "lxml.cssselect.xpath_literal": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "isinstance",
    "lxml.cssselect.Element",
    "lxml.cssselect._unicode",
    "lxml.cssselect.split_at_single_quotes"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "__name__",
    "bytes",
    "lxml.doctestcompare.doctest",
    "lxml.doctestcompare.re",
    "lxml.doctestcompare.sys",
    "lxml.etree.HTMLParser",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.doctestcompare.LHTMLOutputChecker": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "lxml.doctestcompare.LXMLOutputChecker"
   ]
  },
  "type": "class"
 },
 "lxml.doctestcompare.LHTMLOutputChecker.get_default_parser": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "lxml.doctestcompare.html_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "lxml.doctestcompare.OutputChecker"
   ]
  },
  "type": "class"
 },
 "lxml.doctestcompare.LXMLOutputChecker._looks_like_markup": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "lxml.doctestcompare._repr_re"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.check_output": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "getattr",
    "lxml.doctestcompare.OutputChecker",
    "lxml.etree.XMLSyntaxError",
    "parser",
    "super_method"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.collect_diff": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len",
    "list",
    "lxml.doctestcompare.strip"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.collect_diff_end_tag": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.collect_diff_tag": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "any",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.collect_diff_text": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "lxml.doctestcompare.strip"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.compare_docs": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.format_doc": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len",
    "lxml.doctestcompare.strip"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.format_end_tag": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "isinstance",
    "lxml.etree.CommentBase"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.format_tag": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "isinstance",
    "lxml.etree.CommentBase",
    "sorted"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.format_text": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "lxml.doctestcompare.cgi",
    "lxml.doctestcompare.strip"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.get_default_parser": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "lxml.etree.XML"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.get_parser": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "lxml.doctestcompare.NOPARSE_MARKUP",
    "lxml.doctestcompare.PARSE_HTML",
    "lxml.doctestcompare.PARSE_XML",
    "lxml.doctestcompare.html_fromstring",
    "lxml.etree.XML",
    "parser"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.html_empty_tag": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.output_difference": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "lxml.doctestcompare.OutputChecker",
    "lxml.doctestcompare.html_fromstring",
    "lxml.doctestcompare.sys",
    "lxml.etree.XMLSyntaxError",
    "parser"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.tag_compare": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "lxml.doctestcompare._basestring"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.LXMLOutputChecker.text_compare": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "lxml.doctestcompare.norm_whitespace",
    "lxml.doctestcompare.re",
    "lxml.doctestcompare.strip"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.NOPARSE_MARKUP": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "lxml.doctestcompare.OutputChecker": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "lxml.doctestcompare.PARSE_HTML": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "lxml.doctestcompare.PARSE_XML": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "lxml.doctestcompare._IS_PYTHON_3": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "lxml.doctestcompare._RestoreChecker": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.doctestcompare._RestoreChecker.__call__": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.__init__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.call_super": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.install_clone": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "lxml.doctestcompare._IS_PYTHON_3"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.install_dt_self": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.uninstall_clone": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "lxml.doctestcompare._IS_PYTHON_3"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.uninstall_dt_self": {
  "data": {
   "lineno": 451
  },
  "type": "function"
 },
 "lxml.doctestcompare._RestoreChecker.uninstall_module": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "delattr",
    "lxml.doctestcompare.sys"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "lxml.doctestcompare.__test__": {
  "data": {
   "lineno": 488
  },
  "type": "constant"
 },
 "lxml.doctestcompare._basestring": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "lxml.doctestcompare._find_doctest_frame": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "LookupError",
    "lxml.doctestcompare.sys"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare._html_parser": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "lxml.doctestcompare._norm_whitespace_re": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "lxml.doctestcompare._repr_re": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "lxml.doctestcompare.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "lxml.doctestcompare.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "lxml.doctestcompare.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.doctestcompare.html_fromstring": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "lxml.doctestcompare._html_parser",
    "lxml.etree.fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.install": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "lxml.doctestcompare.LHTMLOutputChecker",
    "lxml.doctestcompare.LXMLOutputChecker",
    "lxml.doctestcompare.doctest"
   ]
  },
  "type": "function"
 },
 "lxml.doctestcompare.norm_whitespace": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "lxml.doctestcompare.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml.doctestcompare.strip": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "lxml.doctestcompare.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lxml.doctestcompare.temp_install": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "Checker",
    "_RestoreChecker",
    "_find_doctest_frame",
    "lxml.doctestcompare.LHTMLOutputChecker",
    "lxml.doctestcompare.LXMLOutputChecker",
    "lxml.doctestcompare._IS_PYTHON_3",
    "lxml.doctestcompare.doctest",
    "lxml.etree"
   ]
  },
  "type": "function"
 },
 "lxml.html": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "lxml.etree.XPath",
    "lxml.html.FormElement",
    "lxml.html.HTMLParser",
    "lxml.html.HtmlElementClassLookup",
    "lxml.html.InputElement",
    "lxml.html.LabelElement",
    "lxml.html.SelectElement",
    "lxml.html.TextareaElement",
    "lxml.html.XHTMLParser",
    "lxml.html.XHTML_NAMESPACE",
    "lxml.html._MethodFunc",
    "lxml.html.__fix_docstring",
    "lxml.html.bytes",
    "lxml.html.re",
    "lxml.html.tostring",
    "set",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.html.CheckboxGroup": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.CheckboxGroup.__repr__": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "list.__repr__"
   ]
  },
  "type": "function"
 },
 "lxml.html.CheckboxGroup._value__del": {
  "data": {
   "lineno": 1196
  },
  "type": "function"
 },
 "lxml.html.CheckboxGroup._value__get": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "CheckboxValues"
   ]
  },
  "type": "function"
 },
 "lxml.html.CheckboxGroup._value__set": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "lxml.html.CheckboxValues": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "lxml.html._setmixin.SetMixin"
   ]
  },
  "type": "class"
 },
 "lxml.html.CheckboxValues.__init__": {
  "data": {
   "lineno": 1211
  },
  "type": "function"
 },
 "lxml.html.CheckboxValues.__iter__": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "lxml.html.CheckboxValues.__repr__": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "lxml.html.CheckboxValues.add": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html.CheckboxValues.remove": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html.DictMixin": {
  "data": {
   "shadows": "lxml.html._dictmixin.DictMixin"
  },
  "type": "import"
 },
 "lxml.html.Element": {
  "data": {
   "lineno": 1483
  },
  "type": "function"
 },
 "lxml.html.ElementSoup": {
  "data": {},
  "type": "module"
 },
 "lxml.html.ElementSoup.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "lxml.html.ElementSoup.__doc__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "lxml.html.ElementSoup._parse": {
  "data": {
   "shadows": "soupparser.parse"
  },
  "type": "import"
 },
 "lxml.html.ElementSoup.convert_tree": {
  "data": {
   "shadows": "soupparser.convert_tree"
  },
  "type": "import"
 },
 "lxml.html.ElementSoup.parse": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "soupparser.parse"
   ]
  },
  "type": "function"
 },
 "lxml.html.FieldsDict": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "lxml.html._dictmixin.DictMixin"
   ]
  },
  "type": "class"
 },
 "lxml.html.FieldsDict.__contains__": {
  "data": {
   "lineno": 850
  },
  "type": "function"
 },
 "lxml.html.FieldsDict.__delitem__": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html.FieldsDict.__getitem__": {
  "data": {
   "lineno": 841
  },
  "type": "function"
 },
 "lxml.html.FieldsDict.__init__": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "lxml.html.FieldsDict.__repr__": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "lxml.html.FieldsDict.__setitem__": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "lxml.html.FieldsDict.keys": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "lxml.html.FormElement": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "lxml.html.HtmlElement",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.FormElement._action__del": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "lxml.html.FormElement._action__get": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "lxml.html.FormElement._action__set": {
  "data": {
   "lineno": 771
  },
  "type": "function"
 },
 "lxml.html.FormElement._fields__get": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "FieldsDict"
   ]
  },
  "type": "function"
 },
 "lxml.html.FormElement._fields__set": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "lxml.html.FormElement._method__get": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "lxml.html.FormElement._method__set": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "lxml.html.FormElement._name": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "list",
    "lxml.html.XHTML_NAMESPACE",
    "str"
   ]
  },
  "type": "function"
 },
 "lxml.html.FormElement.form_values": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "lxml.html._nons"
   ]
  },
  "type": "function"
 },
 "lxml.html.FormElement.inputs": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "InputGetter"
   ]
  },
  "type": "function"
 },
 "lxml.html.HTMLParser": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "lxml.etree.HTMLParser"
   ]
  },
  "type": "class"
 },
 "lxml.html.HTMLParser.__init__": {
  "data": {
   "lineno": 1474,
   "symbols_in_volume": [
    "lxml.html.HTMLParser",
    "lxml.html.HtmlElementClassLookup",
    "super"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlComment": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "lxml.etree.CommentBase",
    "lxml.html.HtmlMixin"
   ]
  },
  "type": "class"
 },
 "lxml.html.HtmlElement": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "lxml.etree.ElementBase",
    "lxml.html.HtmlMixin"
   ]
  },
  "type": "class"
 },
 "lxml.html.HtmlElementClassLookup": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "lxml.etree.CustomElementClassLookup"
   ]
  },
  "type": "class"
 },
 "lxml.html.HtmlElementClassLookup.__init__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "lxml.etree.CustomElementClassLookup.__init__",
    "lxml.html.HtmlElement",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlElementClassLookup.lookup": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "lxml.html.HtmlComment",
    "lxml.html.HtmlElement",
    "lxml.html.HtmlEntity",
    "lxml.html.HtmlProcessingInstruction"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlEntity": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "lxml.etree.EntityBase",
    "lxml.html.HtmlMixin"
   ]
  },
  "type": "class"
 },
 "lxml.html.HtmlMixin": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.HtmlMixin._label__del": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin._label__get": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "id",
    "lxml.html._label_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin._label__set": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TypeError",
    "id",
    "lxml.html._nons"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.base_url": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.body": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "lxml.html.XHTML_NAMESPACE"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.cssselect": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "lxml.cssselect.CSSSelector"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.drop_tag": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "lxml.html.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.drop_tree": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.find_class": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "lxml.html._class_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.find_rel_links": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "lxml.html._rel_links_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.forms": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "lxml.html._forms_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.get_element_by_id": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "id",
    "lxml.html._id_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.head": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "lxml.html.XHTML_NAMESPACE"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.iterlinks": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "lxml.html._archive_re",
    "lxml.html._css_import_re",
    "lxml.html._css_url_re",
    "lxml.html._nons",
    "lxml.html._unquote_match",
    "lxml.html.defs.link_attrs",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.make_links_absolute": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.make_links_absolute.link_repl": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.resolve_base_href": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "lxml.html.XHTML_NAMESPACE"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.rewrite_links": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "link_repl_func"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlMixin.text_content": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "lxml.html._collect_string_content"
   ]
  },
  "type": "function"
 },
 "lxml.html.HtmlProcessingInstruction": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "lxml.etree.PIBase",
    "lxml.html.HtmlMixin"
   ]
  },
  "type": "class"
 },
 "lxml.html.InputElement": {
  "data": {
   "lineno": 1247,
   "symbols_in_volume": [
    "lxml.html.HtmlElement",
    "lxml.html.InputMixin",
    "property",
    "type"
   ]
  },
  "type": "class"
 },
 "lxml.html.InputElement._checked__get": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputElement._checked__set": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputElement._type__get": {
  "data": {
   "lineno": 1295
  },
  "type": "function"
 },
 "lxml.html.InputElement._type__set": {
  "data": {
   "lineno": 1300
  },
  "type": "function"
 },
 "lxml.html.InputElement._value__del": {
  "data": {
   "lineno": 1287
  },
  "type": "function"
 },
 "lxml.html.InputElement._value__get": {
  "data": {
   "lineno": 1263
  },
  "type": "function"
 },
 "lxml.html.InputElement._value__set": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "isinstance",
    "lxml.html.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputElement.checkable": {
  "data": {
   "lineno": 1304
  },
  "type": "function"
 },
 "lxml.html.InputGetter": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "lxml.etree.XPath",
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.html.InputGetter.__contains__": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputGetter.__getitem__": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "CheckboxGroup",
    "KeyError",
    "RadioGroup",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputGetter.__init__": {
  "data": {
   "lineno": 877
  },
  "type": "function"
 },
 "lxml.html.InputGetter.__iter__": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputGetter.__repr__": {
  "data": {
   "lineno": 880
  },
  "type": "function"
 },
 "lxml.html.InputGetter.keys": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "list",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputMixin": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.InputMixin.__repr__": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "getattr",
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.InputMixin._name__del": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "lxml.html.InputMixin._name__get": {
  "data": {
   "lineno": 931
  },
  "type": "function"
 },
 "lxml.html.InputMixin._name__set": {
  "data": {
   "lineno": 936
  },
  "type": "function"
 },
 "lxml.html.LabelElement": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "lxml.html.HtmlElement",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.LabelElement._for_element__del": {
  "data": {
   "lineno": 1356
  },
  "type": "function"
 },
 "lxml.html.LabelElement._for_element__get": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "lxml.html.LabelElement._for_element__set": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "TypeError",
    "id"
   ]
  },
  "type": "function"
 },
 "lxml.html.MultipleSelectOptions": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "lxml.html._setmixin.SetMixin",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.MultipleSelectOptions.__init__": {
  "data": {
   "lineno": 1078
  },
  "type": "function"
 },
 "lxml.html.MultipleSelectOptions.__iter__": {
  "data": {
   "lineno": 1088
  },
  "type": "function"
 },
 "lxml.html.MultipleSelectOptions.__repr__": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "lxml.html.MultipleSelectOptions.add": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "lxml.html.MultipleSelectOptions.options": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "iter",
    "lxml.html._options_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.MultipleSelectOptions.remove": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "lxml.html.RadioGroup": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.RadioGroup.__repr__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "list.__repr__"
   ]
  },
  "type": "function"
 },
 "lxml.html.RadioGroup._value__del": {
  "data": {
   "lineno": 1155
  },
  "type": "function"
 },
 "lxml.html.RadioGroup._value__get": {
  "data": {
   "lineno": 1130
  },
  "type": "function"
 },
 "lxml.html.RadioGroup._value__set": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "lxml.html.RadioGroup.value_options": {
  "data": {
   "lineno": 1160
  },
  "type": "function"
 },
 "lxml.html.SelectElement": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "lxml.html.HtmlElement",
    "lxml.html.InputMixin",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.SelectElement._multiple__get": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "lxml.html.SelectElement._multiple__set": {
  "data": {
   "lineno": 1061
  },
  "type": "function"
 },
 "lxml.html.SelectElement._value__del": {
  "data": {
   "lineno": 1031
  },
  "type": "function"
 },
 "lxml.html.SelectElement._value__get": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "MultipleSelectOptions",
    "lxml.html._options_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.SelectElement._value__set": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "lxml.html._options_xpath",
    "lxml.html.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html.SelectElement.value_options": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "lxml.html._options_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.SetMixin": {
  "data": {
   "shadows": "lxml.html._setmixin.SetMixin"
  },
  "type": "import"
 },
 "lxml.html.TextareaElement": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "lxml.html.HtmlElement",
    "lxml.html.InputMixin",
    "property"
   ]
  },
  "type": "class"
 },
 "lxml.html.TextareaElement._value__del": {
  "data": {
   "lineno": 965
  },
  "type": "function"
 },
 "lxml.html.TextareaElement._value__get": {
  "data": {
   "lineno": 958
  },
  "type": "function"
 },
 "lxml.html.TextareaElement._value__set": {
  "data": {
   "lineno": 963
  },
  "type": "function"
 },
 "lxml.html.XHTMLParser": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "lxml.etree.XMLParser"
   ]
  },
  "type": "class"
 },
 "lxml.html.XHTMLParser.__init__": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "lxml.html.HtmlElementClassLookup",
    "lxml.html.XHTMLParser",
    "super"
   ]
  },
  "type": "function"
 },
 "lxml.html.XHTML_NAMESPACE": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "lxml.html._MethodFunc": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.html._MethodFunc.__call__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "TypeError",
    "fromstring",
    "getattr",
    "isinstance",
    "lxml.html._transform_result",
    "lxml.html.basestring",
    "lxml.html.copy",
    "meth",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html._MethodFunc.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "getattr",
    "lxml.html.HtmlMixin",
    "lxml.html.copy"
   ]
  },
  "type": "function"
 },
 "lxml.html.__all__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "lxml.html.__bytes_replace_meta_content_type": {
  "data": {
   "lineno": 1400
  },
  "type": "constant"
 },
 "lxml.html.__fix_docstring": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "lxml.html.re",
    "lxml.html.sys",
    "sub"
   ]
  },
  "type": "function"
 },
 "lxml.html.__str_replace_meta_content_type": {
  "data": {
   "lineno": 1398
  },
  "type": "constant"
 },
 "lxml.html._archive_re": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "lxml.html._class_xpath": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "lxml.html._collect_string_content": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "lxml.html._contains_block_level_tag": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "lxml.html._nons",
    "lxml.html.defs.block_tags"
   ]
  },
  "type": "function"
 },
 "lxml.html._css_import_re": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "lxml.html._css_url_re": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "lxml.html._dictmixin": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "lxml.html._dictmixin.DictMixin": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "lxml.html._dictmixin.DictMixin.__cmp__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "UserDict.DictMixin",
    "cmp",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.__contains__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.__iter__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.__len__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.__repr__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dict",
    "repr"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.clear": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.get": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.has_key": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.items": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.iteritems": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.iterkeys": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.itervalues": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.pop": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.popitem": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.setdefault": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.update": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "lxml.html._dictmixin.DictMixin.values": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "lxml.html._dictmixin.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "lxml.html._element_name": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "isinstance",
    "lxml.etree.CommentBase",
    "lxml.html._nons",
    "lxml.html.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html._forms_xpath": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "lxml.html._html5builder": {
  "data": {},
  "type": "module"
 },
 "lxml.html._html5builder.Document": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.html._html5builder.Document.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "lxml.html._html5builder.Document.appendChild": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "lxml.html._html5builder.DocumentType": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.html._html5builder.DocumentType.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "html5lib.treebuilders._base.TreeBuilder",
    "lxml.html._html5builder.Document",
    "lxml.html._html5builder.DocumentType"
   ]
  },
  "type": "class"
 },
 "lxml.html._html5builder.TreeBuilder.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "html5lib.treebuilders._base.TreeBuilder.__init__",
    "html5lib.treebuilders.etree.getETreeModule",
    "lxml.etree",
    "lxml.html"
   ]
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder.getDocument": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder.getFragment": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder.insertComment": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "html5lib.treebuilders._base.TreeBuilder.insertComment"
   ]
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder.insertDoctype": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder.insertRoot": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "lxml.etree.Comment",
    "lxml.html.fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html._html5builder.TreeBuilder.reset": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "html5lib.treebuilders._base.TreeBuilder.reset"
   ]
  },
  "type": "function"
 },
 "lxml.html._html5builder._base": {
  "data": {
   "shadows": "html5lib.treebuilders._base"
  },
  "type": "import"
 },
 "lxml.html._html5builder.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.html._html5builder.etree_builders": {
  "data": {
   "shadows": "html5lib.treebuilders.etree"
  },
  "type": "import"
 },
 "lxml.html._html5builder.html": {
  "data": {
   "shadows": "lxml.html"
  },
  "type": "import"
 },
 "lxml.html._id_xpath": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "lxml.html._label_xpath": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "lxml.html._nons": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "lxml.html.XHTML_NAMESPACE",
    "lxml.html.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html._options_xpath": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "lxml.html._rel_links_xpath": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "lxml.html._setmixin": {
  "data": {},
  "type": "module"
 },
 "lxml.html._setmixin.SetMixin": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.html._setmixin.SetMixin.__and__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__contains__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__iand__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__ior__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__isub__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__ixor__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__len__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__or__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__sub__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.__xor__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.clear": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.copy": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.difference": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.difference_update": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.discard": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.intersection": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.intersection_update": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.issubset": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.issuperset": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.symmetric_difference": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.symmetric_difference_update": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.union": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "lxml.html._setmixin.SetMixin.update": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "lxml.html._transform_result": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "issubclass",
    "lxml.html.bytes",
    "lxml.html.unicode",
    "tostring"
   ]
  },
  "type": "function"
 },
 "lxml.html._unquote_match": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "lxml.html.basestring": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "lxml.html.builder": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "getattr",
    "lxml.builder.ElementMaker",
    "lxml.html.builder.E",
    "lxml.html.html_parser.makeelement"
   ]
  },
  "type": "module"
 },
 "lxml.html.builder.A": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "lxml.html.builder.ABBR": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "lxml.html.builder.ACRONYM": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "lxml.html.builder.ADDRESS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "lxml.html.builder.APPLET": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "lxml.html.builder.AREA": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "lxml.html.builder.ATTR": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "lxml.html.builder.B": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "lxml.html.builder.BASE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "lxml.html.builder.BASEFONT": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "lxml.html.builder.BDO": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "lxml.html.builder.BIG": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "lxml.html.builder.BLOCKQUOTE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "lxml.html.builder.BODY": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "lxml.html.builder.BR": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "lxml.html.builder.BUTTON": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "lxml.html.builder.CAPTION": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "lxml.html.builder.CENTER": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "lxml.html.builder.CITE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "lxml.html.builder.CLASS": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "lxml.html.builder.CODE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "lxml.html.builder.COL": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "lxml.html.builder.COLGROUP": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "lxml.html.builder.DD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "lxml.html.builder.DEL": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "lxml.html.builder.DFN": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "lxml.html.builder.DIR": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "lxml.html.builder.DIV": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "lxml.html.builder.DL": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "lxml.html.builder.DT": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "lxml.html.builder.E": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "lxml.html.builder.EM": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "lxml.html.builder.ElementMaker": {
  "data": {
   "shadows": "lxml.builder.ElementMaker"
  },
  "type": "import"
 },
 "lxml.html.builder.FIELDSET": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "lxml.html.builder.FONT": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "lxml.html.builder.FOR": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "lxml.html.builder.FORM": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "lxml.html.builder.FRAME": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "lxml.html.builder.FRAMESET": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "lxml.html.builder.H1": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "lxml.html.builder.H2": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "lxml.html.builder.H3": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "lxml.html.builder.H4": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "lxml.html.builder.H5": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "lxml.html.builder.H6": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "lxml.html.builder.HEAD": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "lxml.html.builder.HR": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "lxml.html.builder.HTML": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "lxml.html.builder.I": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "lxml.html.builder.IFRAME": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "lxml.html.builder.IMG": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "lxml.html.builder.INPUT": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "lxml.html.builder.INS": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "lxml.html.builder.ISINDEX": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "lxml.html.builder.KBD": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "lxml.html.builder.LABEL": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "lxml.html.builder.LEGEND": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "lxml.html.builder.LI": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "lxml.html.builder.LINK": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "lxml.html.builder.MAP": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "lxml.html.builder.MENU": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "lxml.html.builder.META": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "lxml.html.builder.NOFRAMES": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "lxml.html.builder.NOSCRIPT": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "lxml.html.builder.OBJECT": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "lxml.html.builder.OL": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "lxml.html.builder.OPTGROUP": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "lxml.html.builder.OPTION": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "lxml.html.builder.P": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "lxml.html.builder.PARAM": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "lxml.html.builder.PRE": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "lxml.html.builder.Q": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "lxml.html.builder.S": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "lxml.html.builder.SAMP": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "lxml.html.builder.SCRIPT": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "lxml.html.builder.SELECT": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "lxml.html.builder.SMALL": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "lxml.html.builder.SPAN": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "lxml.html.builder.STRIKE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "lxml.html.builder.STRONG": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "lxml.html.builder.STYLE": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "lxml.html.builder.SUB": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "lxml.html.builder.SUP": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "lxml.html.builder.TABLE": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "lxml.html.builder.TBODY": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "lxml.html.builder.TD": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "lxml.html.builder.TEXTAREA": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "lxml.html.builder.TFOOT": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "lxml.html.builder.TH": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "lxml.html.builder.THEAD": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "lxml.html.builder.TITLE": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "lxml.html.builder.TR": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "lxml.html.builder.TT": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "lxml.html.builder.U": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "lxml.html.builder.UL": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "lxml.html.builder.VAR": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "lxml.html.builder.html_parser": {
  "data": {
   "shadows": "lxml.html.html_parser"
  },
  "type": "import"
 },
 "lxml.html.bytes": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "lxml.html.clean": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "chr",
    "lxml.etree.XPath",
    "lxml.html.XHTML_NAMESPACE",
    "lxml.html.clean.Cleaner",
    "lxml.html.clean.autolink",
    "lxml.html.clean.autolink_html",
    "lxml.html.clean.bytes",
    "lxml.html.clean.clean",
    "lxml.html.clean.re",
    "set",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.html.clean.Cleaner": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "lxml.html.clean.re",
    "object",
    "sets.Set"
   ]
  },
  "type": "class"
 },
 "lxml.html.clean.Cleaner.__call__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "list",
    "lxml.etree.Comment",
    "lxml.etree.ProcessingInstruction",
    "lxml.etree.strip_attributes",
    "lxml.html._nons",
    "lxml.html.clean._css_import_re",
    "lxml.html.clean._css_javascript_re",
    "lxml.html.clean._find_external_links",
    "lxml.html.clean._find_styled_elements",
    "lxml.html.clean.basestring",
    "lxml.html.defs.frame_tags",
    "lxml.html.defs.safe_attrs",
    "lxml.html.defs.tags",
    "sets.Set"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner._has_sneaky_javascript": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "lxml.html.clean._substitute_whitespace"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner._kill_elements": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "condition"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner._remove_javascript_link": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "lxml.html.clean._javascript_scheme_re",
    "lxml.html.clean._substitute_whitespace"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner.allow_element": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner.allow_embedded_url": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner.allow_follow": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner.clean_html": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "isinstance",
    "lxml.html._transform_result",
    "lxml.html.clean.basestring",
    "lxml.html.clean.copy",
    "lxml.html.fromstring",
    "self",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.Cleaner.kill_conditional_comments": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "lxml.etree.Comment",
    "lxml.html.clean._conditional_comment_re"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.XHTML_NAMESPACE": {
  "data": {
   "shadows": "lxml.html.XHTML_NAMESPACE"
  },
  "type": "import"
 },
 "lxml.html.clean.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "lxml.html.clean._avoid_classes": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "lxml.html.clean._avoid_elements": {
  "data": {
   "lineno": 504
  },
  "type": "constant"
 },
 "lxml.html.clean._avoid_hosts": {
  "data": {
   "lineno": 506
  },
  "type": "constant"
 },
 "lxml.html.clean._avoid_word_break_classes": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "lxml.html.clean._avoid_word_break_elements": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "lxml.html.clean._break_prefer_re": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "lxml.html.clean._break_text": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "_insert_break",
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean._conditional_comment_re": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "lxml.html.clean._css_import_re": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "lxml.html.clean._css_javascript_re": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "lxml.html.clean._find_external_links": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "lxml.html.clean._find_styled_elements": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "lxml.html.clean._insert_break": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "len",
    "list",
    "lxml.html.clean._break_prefer_re"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean._javascript_scheme_re": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "lxml.html.clean._link_regexes": {
  "data": {
   "lineno": 498
  },
  "type": "constant"
 },
 "lxml.html.clean._link_text": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "factory"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean._nons": {
  "data": {
   "shadows": "lxml.html._nons"
  },
  "type": "import"
 },
 "lxml.html.clean._substitute_whitespace": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "lxml.html.clean._transform_result": {
  "data": {
   "shadows": "lxml.html._transform_result"
  },
  "type": "import"
 },
 "lxml.html.clean.autolink": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "_link_text",
    "list",
    "lxml.html.clean._avoid_classes",
    "lxml.html.clean._avoid_elements",
    "lxml.html.clean._avoid_hosts",
    "lxml.html.clean._link_regexes"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.autolink_html": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "isinstance",
    "lxml.html._transform_result",
    "lxml.html.clean.autolink",
    "lxml.html.clean.basestring",
    "lxml.html.clean.copy",
    "lxml.html.fromstring",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.basestring": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "lxml.html.clean.bytes": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "lxml.html.clean.clean": {
  "data": {
   "lineno": 491
  },
  "type": "constant"
 },
 "lxml.html.clean.clean_html": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "lxml.html.clean.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "lxml.html.clean.defs": {
  "data": {
   "shadows": "lxml.html.defs"
  },
  "type": "import"
 },
 "lxml.html.clean.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.html.clean.fromstring": {
  "data": {
   "shadows": "lxml.html.fromstring"
  },
  "type": "import"
 },
 "lxml.html.clean.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml.html.clean.set": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "lxml.html.clean.tostring": {
  "data": {
   "shadows": "lxml.html.tostring"
  },
  "type": "import"
 },
 "lxml.html.clean.unichr": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "lxml.html.clean.unicode": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "lxml.html.clean.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "lxml.html.clean.word_break": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "_break_text",
    "lxml.html.clean._avoid_word_break_classes",
    "lxml.html.clean._avoid_word_break_elements",
    "lxml.html.clean.unichr"
   ]
  },
  "type": "function"
 },
 "lxml.html.clean.word_break_html": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "lxml.html._transform_result",
    "lxml.html.clean.word_break",
    "lxml.html.fromstring",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "lxml.html.cssselect": {
  "data": {
   "shadows": "lxml.cssselect"
  },
  "type": "import"
 },
 "lxml.html.defs": {
  "data": {
   "shadows": "lxml.html.defs"
  },
  "type": "import"
 },
 "lxml.html.defs.block_tags": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "lxml.html.defs.deprecated_tags": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "lxml.html.defs.empty_tags": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "lxml.html.defs.event_attrs": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "lxml.html.defs.font_style_tags": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "lxml.html.defs.form_tags": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "lxml.html.defs.frame_tags": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "lxml.html.defs.frozenset": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "lxml.html.defs.general_block_tags": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "lxml.html.defs.head_tags": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "lxml.html.defs.link_attrs": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "lxml.html.defs.list_tags": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "lxml.html.defs.nonstandard_tags": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "lxml.html.defs.phrase_tags": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "lxml.html.defs.safe_attrs": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "lxml.html.defs.special_inline_tags": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "lxml.html.defs.table_tags": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "lxml.html.defs.tags": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "lxml.html.defs.top_level_tags": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "lxml.html.diff": {
  "data": {
   "symbols_in_volume": [
    "KeyError",
    "NameError",
    "__name__",
    "lxml.html._diffcommand.main",
    "lxml.html.diff.re",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.html.diff.DEL_END": {
  "data": {
   "lineno": 252
  },
  "type": "class"
 },
 "lxml.html.diff.DEL_START": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "lxml.html.diff.InsensitiveSequenceMatcher": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "lxml.html.diff.difflib"
   ]
  },
  "type": "class"
 },
 "lxml.html.diff.InsensitiveSequenceMatcher.get_matching_blocks": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "len",
    "lxml.html.diff.difflib",
    "min"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.NoDeletes": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "lxml.html.diff.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "lxml.html.diff._body_re": {
  "data": {
   "lineno": 549
  },
  "type": "constant"
 },
 "lxml.html.diff._contains_block_level_tag": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "lxml.html.diff.block_level_container_tags",
    "lxml.html.diff.block_level_tags"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff._diffcommand": {
  "data": {
   "shadows": "lxml.html._diffcommand"
  },
  "type": "import"
 },
 "lxml.html.diff._end_body_re": {
  "data": {
   "lineno": 550
  },
  "type": "constant"
 },
 "lxml.html.diff._fixup_ins_del_tags": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "_contains_block_level_tag",
    "_move_el_inside_block"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff._ins_del_re": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "lxml.html.diff._merge_element_contents": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff._move_el_inside_block": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "list",
    "lxml.etree.Element",
    "lxml.html.diff._contains_block_level_tag"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff._unicode": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "lxml.html.diff.basestring": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "lxml.html.diff.block_level_container_tags": {
  "data": {
   "lineno": 659
  },
  "type": "constant"
 },
 "lxml.html.diff.block_level_tags": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "lxml.html.diff.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "lxml.html.diff.cleanup_delete": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "locate_unbalanced_end",
    "locate_unbalanced_start",
    "lxml.html.diff.NoDeletes",
    "split_delete",
    "split_unbalanced"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.cleanup_html": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "lxml.html.diff._body_re",
    "lxml.html.diff._end_body_re",
    "lxml.html.diff._ins_del_re"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.compress_merge_back": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "lxml.html.diff._unicode",
    "token",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.compress_tokens": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "compress_merge_back"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.copy_annotations": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.default_markup": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "lxml.html.diff._unicode",
    "lxml.html.diff.cgi"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "lxml.html.diff.empty_tags": {
  "data": {
   "lineno": 628
  },
  "type": "constant"
 },
 "lxml.html.diff.end_tag": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "lxml.html.diff.start_whitespace_re"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.end_whitespace_re": {
  "data": {
   "lineno": 567
  },
  "type": "constant"
 },
 "lxml.html.diff.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.html.diff.expand_tokens": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "token",
    "token.hide_when_equal",
    "token.html",
    "token.post_tags",
    "token.pre_tags",
    "token.trailing_whitespace"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.fixup_chunks": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "is_end_tag",
    "is_start_tag",
    "is_word",
    "isinstance",
    "lxml.html.diff.href_token",
    "lxml.html.diff.tag_token",
    "lxml.html.diff.token",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.fixup_ins_del_tags": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "_fixup_ins_del_tags",
    "lxml.html.diff.parse_html",
    "serialize_html_fragment"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.flatten_el": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "end_tag",
    "len",
    "lxml.html.diff.cgi",
    "lxml.html.diff.empty_tags",
    "split_words",
    "start_tag"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.fragment_fromstring": {
  "data": {
   "shadows": "lxml.html.fragment_fromstring"
  },
  "type": "import"
 },
 "lxml.html.diff.href_token": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "lxml.html.diff.token"
   ]
  },
  "type": "class"
 },
 "lxml.html.diff.href_token.html": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "lxml.html.diff.html_annotate": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "compress_tokens",
    "html_annotate_merge_annotations",
    "lxml.html.diff.default_markup",
    "markup_serialize_tokens",
    "tokenize_annotated"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.html_annotate_merge_annotations": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "InsensitiveSequenceMatcher",
    "copy_annotations"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.htmldiff": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "fixup_ins_del_tags",
    "htmldiff_tokens",
    "tokenize"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.htmldiff_tokens": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "InsensitiveSequenceMatcher",
    "cleanup_delete",
    "expand_tokens",
    "merge_delete",
    "merge_insert"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.is_end_tag": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "lxml.html.diff.is_start_tag": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "lxml.html.diff.is_word": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "lxml.html.diff.locate_unbalanced_end": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "lxml.html.diff.DEL_END",
    "next",
    "next.split",
    "next.startswith"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.locate_unbalanced_start": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "lxml.html.diff.DEL_START",
    "next",
    "next.split",
    "next.startswith"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.markup_serialize_tokens": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "markup_func",
    "token",
    "token.annotation",
    "token.html",
    "token.post_tags",
    "token.pre_tags",
    "token.trailing_whitespace"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.merge_delete": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "lxml.html.diff.DEL_END",
    "lxml.html.diff.DEL_START"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.merge_insert": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "split_unbalanced"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.parse_html": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "cleanup_html",
    "lxml.html.fragment_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml.html.diff.serialize_html_fragment": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "isinstance",
    "lxml.etree.tostring",
    "lxml.html.diff._unicode",
    "lxml.html.diff.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.split_delete": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError",
    "lxml.html.diff.DEL_END",
    "lxml.html.diff.DEL_START",
    "lxml.html.diff.NoDeletes"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.split_unbalanced": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.split_words": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "lxml.html.diff.end_whitespace_re"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.start_tag": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "lxml.html.diff.cgi"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.start_whitespace_re": {
  "data": {
   "lineno": 711
  },
  "type": "constant"
 },
 "lxml.html.diff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lxml.html.diff.tag_token": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "lxml.html.diff.token"
   ]
  },
  "type": "class"
 },
 "lxml.html.diff.tag_token.__new__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "lxml.html.diff.token",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.tag_token.__repr__": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "lxml.html.diff.tag_token.html": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "lxml.html.diff.token": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "lxml.html.diff._unicode"
   ]
  },
  "type": "class"
 },
 "lxml.html.diff.token.__new__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "lxml.html.diff._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.token.__repr__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "lxml.html.diff._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.token.html": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "lxml.html.diff._unicode"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.tokenize": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "fixup_chunks",
    "flatten_el",
    "lxml.etree.iselement",
    "parse_html"
   ]
  },
  "type": "function"
 },
 "lxml.html.diff.tokenize_annotated": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tokenize"
   ]
  },
  "type": "function"
 },
 "lxml.html.document_fromstring": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "lxml.etree.ParserError",
    "lxml.etree.fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.html.find_class": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "lxml.html.find_rel_links": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "lxml.html.formfill": {
  "data": {
   "symbols_in_volume": [
    "KeyError",
    "NameError",
    "lxml.etree.XPath",
    "lxml.html.XHTML_NAMESPACE",
    "lxml.html.formfill.DefaultErrorCreator",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.html.formfill.DefaultErrorCreator": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.html.formfill.DefaultErrorCreator.__call__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "isinstance",
    "lxml.etree.ElementBase",
    "lxml.html.formfill.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill.DefaultErrorCreator.__init__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill.ElementBase": {
  "data": {
   "shadows": "lxml.etree.ElementBase"
  },
  "type": "import"
 },
 "lxml.html.formfill.FormNotFound": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "LookupError"
   ]
  },
  "type": "class"
 },
 "lxml.html.formfill.XHTML_NAMESPACE": {
  "data": {
   "shadows": "lxml.html.XHTML_NAMESPACE"
  },
  "type": "import"
 },
 "lxml.html.formfill.XPath": {
  "data": {
   "shadows": "lxml.etree.XPath"
  },
  "type": "import"
 },
 "lxml.html.formfill.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "lxml.html.formfill._add_class": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "lxml.html.formfill._check": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "lxml.html.formfill._fill_form": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "IndexError",
    "_fill_multiple",
    "_fill_single",
    "_takes_multiple",
    "hasattr",
    "input",
    "input.get",
    "isinstance",
    "list",
    "lxml.html.formfill._input_xpath",
    "tuple"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._fill_multiple": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "_check",
    "_select",
    "input",
    "input.get",
    "input.tag",
    "isinstance",
    "lxml.html._nons",
    "lxml.html._options_xpath",
    "lxml.html.formfill.basestring",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._fill_single": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "input.clear",
    "input.set",
    "input.tag",
    "input.text",
    "lxml.html._nons"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._find_elements_for_name": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "lxml.html.formfill._name_xpath",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._find_form": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "IndexError",
    "_find_form_ids",
    "id",
    "len",
    "lxml.html._forms_xpath",
    "lxml.html.formfill.FormNotFound",
    "lxml.html.formfill._form_name_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._find_form_ids": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "enumerate",
    "lxml.html._forms_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._form_name_xpath": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "lxml.html.formfill._forms_xpath": {
  "data": {
   "shadows": "lxml.html._forms_xpath"
  },
  "type": "import"
 },
 "lxml.html.formfill._input_xpath": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "lxml.html.formfill._insert_error": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "_add_class",
    "error_creator",
    "lxml.html._nons",
    "lxml.html.defs.empty_tags",
    "lxml.html.formfill._label_for_xpath"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._label_for_xpath": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "lxml.html.formfill._name_xpath": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "lxml.html.formfill._nons": {
  "data": {
   "shadows": "lxml.html._nons"
  },
  "type": "import"
 },
 "lxml.html.formfill._options_xpath": {
  "data": {
   "shadows": "lxml.html._options_xpath"
  },
  "type": "import"
 },
 "lxml.html.formfill._select": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "lxml.html.formfill._takes_multiple": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "input.get",
    "input.tag",
    "lxml.html._nons",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill._transform_result": {
  "data": {
   "shadows": "lxml.html._transform_result"
  },
  "type": "import"
 },
 "lxml.html.formfill.basestring": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "lxml.html.formfill.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "lxml.html.formfill.default_error_creator": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "lxml.html.formfill.defs": {
  "data": {
   "shadows": "lxml.html.defs"
  },
  "type": "import"
 },
 "lxml.html.formfill.fill_form": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_fill_form",
    "_find_form"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill.fill_form_html": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "isinstance",
    "lxml.html._transform_result",
    "lxml.html.formfill.basestring",
    "lxml.html.formfill.copy",
    "lxml.html.formfill.fill_form",
    "lxml.html.fromstring",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill.fromstring": {
  "data": {
   "shadows": "lxml.html.fromstring"
  },
  "type": "import"
 },
 "lxml.html.formfill.insert_errors": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "_find_elements_for_name",
    "_insert_error",
    "isinstance",
    "lxml.etree.ElementBase",
    "lxml.html.formfill._find_form",
    "lxml.html.formfill.basestring",
    "lxml.html.formfill.default_error_creator",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill.insert_errors_html": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "isinstance",
    "lxml.html._transform_result",
    "lxml.html.formfill.basestring",
    "lxml.html.formfill.copy",
    "lxml.html.formfill.insert_errors",
    "lxml.html.fromstring",
    "type"
   ]
  },
  "type": "function"
 },
 "lxml.html.formfill.tostring": {
  "data": {
   "shadows": "lxml.html.tostring"
  },
  "type": "import"
 },
 "lxml.html.fragment_fromstring": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "_element_name",
    "isinstance",
    "len",
    "lxml.etree.ParserError",
    "lxml.html.basestring",
    "lxml.html.fragments_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.fragments_fromstring": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "len",
    "lxml.etree.ParserError",
    "lxml.html._nons",
    "lxml.html.document_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.fromstring": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "_contains_block_level_tag",
    "len",
    "lxml.html.XHTML_NAMESPACE",
    "lxml.html.document_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "bytes",
    "html5lib.HTMLParser",
    "html5lib.XHTMLParser",
    "str"
   ]
  },
  "type": "module"
 },
 "lxml.html.html5parser.HTMLParser": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "html5lib.HTMLParser"
   ]
  },
  "type": "class"
 },
 "lxml.html.html5parser.HTMLParser.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "html5lib.HTMLParser.__init__",
    "lxml.html._html5builder.TreeBuilder"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.TreeBuilder": {
  "data": {
   "shadows": "lxml.html._html5builder.TreeBuilder"
  },
  "type": "import"
 },
 "lxml.html.html5parser.XHTMLParser": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "html5lib.XHTMLParser"
   ]
  },
  "type": "class"
 },
 "lxml.html.html5parser.XHTMLParser.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "html5lib.XHTMLParser.__init__",
    "lxml.html._html5builder.TreeBuilder"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.XHTML_NAMESPACE": {
  "data": {
   "shadows": "lxml.html.XHTML_NAMESPACE"
  },
  "type": "import"
 },
 "lxml.html.html5parser._HTMLParser": {
  "data": {
   "shadows": "html5lib.HTMLParser"
  },
  "type": "import"
 },
 "lxml.html.html5parser._XHTMLParser": {
  "data": {
   "shadows": "html5lib.XHTMLParser"
  },
  "type": "import"
 },
 "lxml.html.html5parser._contains_block_level_tag": {
  "data": {
   "shadows": "lxml.html._contains_block_level_tag"
  },
  "type": "import"
 },
 "lxml.html.html5parser._find_tag": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "lxml.html.XHTML_NAMESPACE"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser._strings": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "lxml.html.html5parser.document_fromstring": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "lxml.html.html5parser._strings"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.html.html5parser.fragment_fromstring": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "lxml.etree.ParserError",
    "lxml.html.html5parser._strings",
    "lxml.html.html5parser.fragments_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.fragments_fromstring": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "lxml.etree.ParserError",
    "lxml.html.html5parser._strings"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.fromstring": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "lxml.html._contains_block_level_tag",
    "lxml.html.html5parser._find_tag",
    "lxml.html.html5parser._strings",
    "lxml.html.html5parser.document_fromstring"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.html_parser": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "lxml.html.html5parser.parse": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "isinstance",
    "lxml.html.html5parser.urllib"
   ]
  },
  "type": "function"
 },
 "lxml.html.html5parser.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "lxml.html.html5parser.xhtml_parser": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "lxml.html.html_parser": {
  "data": {
   "lineno": 1491
  },
  "type": "constant"
 },
 "lxml.html.html_to_xhtml": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "lxml.html.XHTML_NAMESPACE",
    "lxml.html.basestring"
   ]
  },
  "type": "function"
 },
 "lxml.html.iterlinks": {
  "data": {
   "lineno": 447
  },
  "type": "constant"
 },
 "lxml.html.make_links_absolute": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "lxml.html.open_http_urllib": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "lxml.html.urllib"
   ]
  },
  "type": "function"
 },
 "lxml.html.open_in_browser": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "AttributeError",
    "lxml.etree.ElementTree",
    "lxml.html.os",
    "lxml.html.webbrowser",
    "print",
    "write_doc"
   ]
  },
  "type": "function"
 },
 "lxml.html.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "lxml.html.parse": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "lxml.etree.parse"
   ]
  },
  "type": "function"
 },
 "lxml.html.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml.html.resolve_base_href": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "lxml.html.rewrite_links": {
  "data": {
   "lineno": 448
  },
  "type": "constant"
 },
 "lxml.html.set": {
  "data": {
   "shadows": "sets.Set"
  },
  "type": "import"
 },
 "lxml.html.soupparser": {
  "data": {
   "symbols_in_volume": [
    "lxml.html.soupparser.re"
   ]
  },
  "type": "module"
 },
 "lxml.html.soupparser.BeautifulSoup": {
  "data": {
   "shadows": "BeautifulSoup.BeautifulSoup"
  },
  "type": "import"
 },
 "lxml.html.soupparser.Comment": {
  "data": {
   "shadows": "BeautifulSoup.Comment"
  },
  "type": "import"
 },
 "lxml.html.soupparser.NavigableString": {
  "data": {
   "shadows": "BeautifulSoup.NavigableString"
  },
  "type": "import"
 },
 "lxml.html.soupparser.ProcessingInstruction": {
  "data": {
   "shadows": "BeautifulSoup.ProcessingInstruction"
  },
  "type": "import"
 },
 "lxml.html.soupparser.Tag": {
  "data": {
   "shadows": "BeautifulSoup.Tag"
  },
  "type": "import"
 },
 "lxml.html.soupparser.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "lxml.html.soupparser.__doc__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "lxml.html.soupparser._append_text": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "lxml.html.soupparser._convert_children": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "BeautifulSoup.Comment",
    "BeautifulSoup.NavigableString",
    "BeautifulSoup.ProcessingInstruction",
    "BeautifulSoup.Tag",
    "SubElement",
    "_append_text",
    "dict",
    "isinstance",
    "lxml.etree.Comment",
    "lxml.etree.ProcessingInstruction",
    "lxml.etree.SubElement",
    "makeelement",
    "type",
    "unescape"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser._convert_tree": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "_convert_children",
    "dict",
    "makeelement"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser._parse": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "BeautifulSoup.BeautifulSoup",
    "_convert_tree",
    "beautifulsoup",
    "len",
    "lxml.html.html_parser.makeelement"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser.convert_tree": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_convert_tree",
    "lxml.html.html_parser.makeelement"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.html.soupparser.fromstring": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_parse"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser.handle_entities": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "lxml.html.soupparser.html": {
  "data": {
   "shadows": "lxml.html"
  },
  "type": "import"
 },
 "lxml.html.soupparser.name2codepoint": {
  "data": {
   "shadows": "htmlentitydefs.name2codepoint"
  },
  "type": "import"
 },
 "lxml.html.soupparser.parse": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_parse",
    "hasattr",
    "lxml.etree.ElementTree",
    "open"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "lxml.html.soupparser.unescape": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "lxml.html.soupparser.handle_entities"
   ]
  },
  "type": "function"
 },
 "lxml.html.soupparser.unescape.unescape_entity": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "KeyError",
    "htmlentitydefs.name2codepoint",
    "unichr"
   ]
  },
  "type": "function"
 },
 "lxml.html.submit_form": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "hasattr",
    "open_http"
   ]
  },
  "type": "function"
 },
 "lxml.html.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "lxml.html.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "lxml.html.tostring": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "isinstance",
    "lxml.etree.tostring",
    "lxml.html.__bytes_replace_meta_content_type",
    "lxml.html.__str_replace_meta_content_type",
    "lxml.html.bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "lxml.html.unicode": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "lxml.html.urljoin": {
  "data": {
   "shadows": "urllib.parse.urljoin"
  },
  "type": "import"
 },
 "lxml.html.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "lxml.html.usedoctest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "lxml.doctestcompare.temp_install"
   ]
  },
  "type": "module"
 },
 "lxml.html.usedoctest.doctestcompare": {
  "data": {
   "shadows": "lxml.doctestcompare"
  },
  "type": "import"
 },
 "lxml.html.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "lxml.html.xhtml_parser": {
  "data": {
   "lineno": 1492
  },
  "type": "constant"
 },
 "lxml.html.xhtml_to_html": {
  "data": {
   "lineno": 1383,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "lxml.html.XHTML_NAMESPACE"
   ]
  },
  "type": "function"
 },
 "lxml.pyclasslookup": {
  "data": {},
  "type": "module"
 },
 "lxml.pyclasslookup.PythonElementClassLookup": {
  "data": {
   "shadows": "etree.PythonElementClassLookup"
  },
  "type": "import"
 },
 "lxml.sax": {
  "data": {},
  "type": "module"
 },
 "lxml.sax.Comment": {
  "data": {
   "shadows": "lxml.etree.Comment"
  },
  "type": "import"
 },
 "lxml.sax.ContentHandler": {
  "data": {
   "shadows": "xml.sax.handler.ContentHandler"
  },
  "type": "import"
 },
 "lxml.sax.ElementTree": {
  "data": {
   "shadows": "lxml.etree.ElementTree"
  },
  "type": "import"
 },
 "lxml.sax.ElementTreeContentHandler": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "lxml.etree",
    "property",
    "xml.sax.handler.ContentHandler"
   ]
  },
  "type": "class"
 },
 "lxml.sax.ElementTreeContentHandler.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "lxml.etree.Element"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler._get_etree": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "lxml.etree.ElementTree"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.characters": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.endDocument": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.endElement": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.endElementNS": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "lxml.sax.SaxError",
    "lxml.sax._getNsTag"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.endPrefixMapping": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.processingInstruction": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "lxml.etree.ProcessingInstruction"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.setDocumentLocator": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.startDocument": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.startElement": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.startElementNS": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "lxml.etree.SubElement"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeContentHandler.startPrefixMapping": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeProducer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "lxml.sax.ElementTreeProducer.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AttributeError",
    "xml.sax.xmlreader.AttributesNSImpl"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeProducer._build_qname": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "KeyError",
    "len"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeProducer._recursive_saxify": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "build_qname",
    "lxml.etree.Comment",
    "lxml.etree.ProcessingInstruction",
    "lxml.sax._getNsTag"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ElementTreeProducer.saxify": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "lxml.etree.ProcessingInstruction"
   ]
  },
  "type": "function"
 },
 "lxml.sax.ProcessingInstruction": {
  "data": {
   "shadows": "lxml.etree.ProcessingInstruction"
  },
  "type": "import"
 },
 "lxml.sax.SaxError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "lxml.etree.LxmlError"
   ]
  },
  "type": "class"
 },
 "lxml.sax.SubElement": {
  "data": {
   "shadows": "lxml.etree.SubElement"
  },
  "type": "import"
 },
 "lxml.sax._getNsTag": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "lxml.sax.attr_class": {
  "data": {
   "shadows": "xml.sax.xmlreader.AttributesNSImpl"
  },
  "type": "import"
 },
 "lxml.sax.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "lxml.sax.saxify": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "lxml.sax.ElementTreeProducer"
   ]
  },
  "type": "function"
 },
 "lxml.usedoctest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "lxml.doctestcompare.temp_install"
   ]
  },
  "type": "module"
 },
 "lxml.usedoctest.doctestcompare": {
  "data": {
   "shadows": "lxml.doctestcompare"
  },
  "type": "import"
 },
 "numpy.add_newdocs": {
  "data": {
   "symbols_in_volume": [
    "lib.add_newdoc"
   ]
  },
  "type": "module"
 },
 "numpy.add_newdocs.add_newdoc": {
  "data": {
   "shadows": "lib.add_newdoc"
  },
  "type": "import"
 },
 "numpy.compat": {
  "data": {
   "symbols_in_volume": [
    "numpy.compat.__all__",
    "numpy.compat._inspect"
   ]
  },
  "type": "module"
 },
 "numpy.compat.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.compat._inspect": {
  "data": {
   "shadows": "_inspect"
  },
  "type": "import"
 },
 "numpy.compat.formatargspec": {
  "data": {
   "shadows": "_inspect.formatargspec"
  },
  "type": "import"
 },
 "numpy.compat.getargspec": {
  "data": {
   "shadows": "_inspect.getargspec"
  },
  "type": "import"
 },
 "numpy.compat.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.compat.setup.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "numpy.compat.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.compat.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.compat.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.compat.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.compat.setupscons.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "numpy.compat.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.compat.setupscons.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.compat.setupscons.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.compat.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.core": {
  "data": {
   "symbols_in_volume": [
    "numerictypes",
    "numerictypes.sctypeDict",
    "numpy.core.__all__",
    "numpy.core.multiarray",
    "numpy.testing.Tester",
    "records.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.core.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.core.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.core.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.core.__version__": {
  "data": {
   "shadows": "numpy.version.version"
  },
  "type": "import"
 },
 "numpy.core._internal": {
  "data": {
   "shadows": "_internal"
  },
  "type": "import"
 },
 "numpy.core._sort": {
  "data": {
   "shadows": "_sort"
  },
  "type": "import"
 },
 "numpy.core.abs": {
  "data": {
   "shadows": "numeric.absolute"
  },
  "type": "import"
 },
 "numpy.core.arrayprint": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.arrayprint.sys"
   ]
  },
  "type": "module"
 },
 "numpy.core.arrayprint.ComplexFormat": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.ComplexFormat.__call__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.ComplexFormat.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.core.arrayprint.FloatFormat"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.arrayprint.FloatFormat.__call__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "len",
    "numpy.core.arrayprint._inf_str",
    "numpy.core.arrayprint._nan_str",
    "umath.isinf",
    "umath.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat.__init__": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "numpy.core.arrayprint.FloatFormat.fillFormat": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "_digits",
    "format",
    "int",
    "len",
    "max",
    "min",
    "numeric.any",
    "numeric.seterr",
    "numpy.core.arrayprint._inf_str",
    "numpy.core.arrayprint._nan_str",
    "str",
    "umath.absolute",
    "umath.isinf",
    "umath.isnan",
    "umath.maximum.reduce",
    "umath.minimum.reduce",
    "umath.not_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._MAXINT": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._MININT": {
  "data": {
   "lineno": 465
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.__docformat__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._array2string": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AttributeError",
    "ComplexFormat",
    "FloatFormat",
    "_clongfloatFormatter",
    "_formatArray",
    "_formatInteger",
    "_longfloatFormatter",
    "format",
    "fromnumeric.ravel",
    "issubclass",
    "len",
    "max",
    "numerictypes.bool_",
    "numerictypes.clongfloat",
    "numerictypes.complexfloating",
    "numerictypes.floating",
    "numerictypes.integer",
    "numerictypes.longfloat",
    "numerictypes.string_",
    "numerictypes.unicode_",
    "numpy.core.arrayprint._boolFormatter",
    "numpy.core.arrayprint._float_output_precision",
    "numpy.core.arrayprint._float_output_suppress_small",
    "numpy.core.arrayprint._leading_trailing",
    "numpy.core.arrayprint._line_width",
    "numpy.core.arrayprint._summaryEdgeItems",
    "numpy.core.arrayprint._summaryThreshold",
    "repr",
    "str",
    "umath.maximum.reduce",
    "umath.minimum.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._boolFormatter": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "numpy.core.arrayprint._clongfloatFormatter": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "numpy.core.arrayprint._clongfloatFormatter.formatter": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "multiarray.format_longfloat"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._convert_arrays": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "isinstance",
    "numeric.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._digits": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "format",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._extendLine": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._float_output_precision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._float_output_suppress_small": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._formatArray": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "format_function",
    "isinstance",
    "len",
    "max",
    "numpy.core.arrayprint._convert_arrays",
    "numpy.core.arrayprint._extendLine",
    "str",
    "tuple",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._formatInteger": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "format",
    "numpy.core.arrayprint._MAXINT",
    "numpy.core.arrayprint._MININT"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._inf_str": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._leading_trailing": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len",
    "min",
    "numeric.concatenate",
    "numpy.core.arrayprint._summaryEdgeItems",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._line_width": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._longfloatFormatter": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "numpy.core.arrayprint._longfloatFormatter.formatter": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "multiarray.format_longfloat",
    "numpy.core.arrayprint._inf_str",
    "numpy.core.arrayprint._nan_str",
    "umath.isinf",
    "umath.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint._nan_str": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._nc": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.arrayprint._nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.arrayprint._summaryEdgeItems": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.core.arrayprint._summaryThreshold": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.core.arrayprint.absolute": {
  "data": {
   "shadows": "umath.absolute"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.array2string": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "numpy.core.arrayprint._array2string",
    "numpy.core.arrayprint._convert_arrays",
    "numpy.core.arrayprint.product",
    "reduce",
    "repr",
    "style",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.format_longfloat": {
  "data": {
   "shadows": "multiarray.format_longfloat"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.get_printoptions": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict",
    "numpy.core.arrayprint._float_output_precision",
    "numpy.core.arrayprint._float_output_suppress_small",
    "numpy.core.arrayprint._inf_str",
    "numpy.core.arrayprint._line_width",
    "numpy.core.arrayprint._nan_str",
    "numpy.core.arrayprint._summaryEdgeItems",
    "numpy.core.arrayprint._summaryThreshold"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.isinf": {
  "data": {
   "shadows": "umath.isinf"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.isnan": {
  "data": {
   "shadows": "umath.isnan"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.maximum": {
  "data": {
   "shadows": "umath.maximum"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.minimum": {
  "data": {
   "shadows": "umath.minimum"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.not_equal": {
  "data": {
   "shadows": "umath.not_equal"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.product": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "numpy.core.arrayprint.ravel": {
  "data": {
   "shadows": "fromnumeric.ravel"
  },
  "type": "import"
 },
 "numpy.core.arrayprint.set_printoptions": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.core.arrayprint._float_output_precision",
    "numpy.core.arrayprint._float_output_suppress_small",
    "numpy.core.arrayprint._inf_str",
    "numpy.core.arrayprint._line_width",
    "numpy.core.arrayprint._nan_str",
    "numpy.core.arrayprint._summaryEdgeItems",
    "numpy.core.arrayprint._summaryThreshold"
   ]
  },
  "type": "function"
 },
 "numpy.core.arrayprint.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.bench": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.core.char": {
  "data": {
   "shadows": "defchararray"
  },
  "type": "import"
 },
 "numpy.core.chararray": {
  "data": {
   "shadows": "defchararray.chararray"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "numerictypes.sctype2char",
    "numpy.core.fromnumeric.types",
    "sum"
   ]
  },
  "type": "module"
 },
 "numpy.core.fromnumeric.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.core.fromnumeric.__docformat__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.core.fromnumeric._dt_": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.core.fromnumeric._gentype": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.core.fromnumeric._sum_": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.core.fromnumeric._wrapit": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "multiarray.ndarray",
    "numeric.asarray",
    "wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.alen": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.all": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.alltrue": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "AttributeError",
    "all",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.amax": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.amin": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.any": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.argmax": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.argmin": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.argsort": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.around": {
  "data": {
   "lineno": 2144,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit",
    "round"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.array": {
  "data": {
   "shadows": "numeric.array"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.asanyarray": {
  "data": {
   "shadows": "numeric.asanyarray"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.asarray": {
  "data": {
   "shadows": "numeric.asarray"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.choose": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.clip": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.compress": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.concatenate": {
  "data": {
   "shadows": "numeric.concatenate"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.cumprod": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.cumproduct": {
  "data": {
   "lineno": 1646,
   "symbols_in_volume": [
    "AttributeError",
    "cumprod",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.cumsum": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.diagonal": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.mean": {
  "data": {
   "lineno": 2235,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.mu": {
  "data": {
   "shadows": "multiarray"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.ndim": {
  "data": {
   "lineno": 2015,
   "symbols_in_volume": [
    "AttributeError",
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.nonzero": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.prod": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.product": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit",
    "prod"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.ptp": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.put": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.rank": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "AttributeError",
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.ravel": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.repeat": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.reshape": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.resize": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "multiarray.zeros",
    "numeric.concatenate",
    "numerictypes.integer",
    "numpy.core.fromnumeric.reshape",
    "ravel",
    "umath.multiply.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.round_": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit",
    "round"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.searchsorted": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.shape": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "AttributeError",
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.size": {
  "data": {
   "lineno": 2098,
   "symbols_in_volume": [
    "AttributeError",
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.sometrue": {
  "data": {
   "lineno": 1409,
   "symbols_in_volume": [
    "AttributeError",
    "any",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.sort": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numeric.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.squeeze": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.std": {
  "data": {
   "lineno": 2313,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.sum": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "numpy.core.fromnumeric._gentype",
    "numpy.core.fromnumeric._sum_",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.swapaxes": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.take": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.trace": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numeric.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.transpose": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.fromnumeric.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.um": {
  "data": {
   "shadows": "umath"
  },
  "type": "import"
 },
 "numpy.core.fromnumeric.var": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.core.fromnumeric._wrapit"
   ]
  },
  "type": "function"
 },
 "numpy.core.function_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.function_base.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.core.function_base._nx": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.function_base.array": {
  "data": {
   "shadows": "numeric.array"
  },
  "type": "import"
 },
 "numpy.core.function_base.linspace": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "float",
    "int",
    "numeric.arange",
    "numeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.function_base.logspace": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numeric.power",
    "numpy.core.function_base.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api": {
  "data": {},
  "type": "module"
 },
 "numpy.core.generate_numpy_api.BoolValuesApi": {
  "data": {
   "shadows": "genapi.BoolValuesApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.FunctionApi": {
  "data": {
   "shadows": "genapi.FunctionApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.GlobalVarApi": {
  "data": {
   "shadows": "genapi.GlobalVarApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.TypeApi": {
  "data": {
   "shadows": "genapi.TypeApi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.c_api_header": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.c_template": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.do_generate_api": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "genapi.BoolValuesApi",
    "genapi.FunctionApi",
    "genapi.GlobalVarApi",
    "genapi.TypeApi",
    "len",
    "numpy.core.generate_numpy_api.c_api_header",
    "numpy.core.generate_numpy_api.c_template",
    "numpy.core.generate_numpy_api.genapi",
    "numpy.core.generate_numpy_api.h_template",
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api.genapi": {
  "data": {
   "shadows": "genapi"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.generate_api": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "do_generate_api",
    "numpy.core.generate_numpy_api.genapi",
    "numpy.core.generate_numpy_api.numpy_api",
    "numpy.core.generate_numpy_api.os"
   ]
  },
  "type": "function"
 },
 "numpy.core.generate_numpy_api.h_template": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.core.generate_numpy_api.numpy_api": {
  "data": {
   "shadows": "numpy_api"
  },
  "type": "import"
 },
 "numpy.core.generate_numpy_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.info": {
  "data": {},
  "type": "module"
 },
 "numpy.core.info.__doc__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.core.info.depends": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "numpy.core.info.global_symbols": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "numpy.core.max": {
  "data": {
   "shadows": "fromnumeric.amax"
  },
  "type": "import"
 },
 "numpy.core.min": {
  "data": {
   "shadows": "fromnumeric.amin"
  },
  "type": "import"
 },
 "numpy.core.multiarray": {
  "data": {
   "shadows": "multiarray"
  },
  "type": "import"
 },
 "numpy.core.nt": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.core.rec": {
  "data": {
   "shadows": "records"
  },
  "type": "import"
 },
 "numpy.core.round": {
  "data": {
   "shadows": "fromnumeric.round_"
  },
  "type": "import"
 },
 "numpy.core.scalarmath": {
  "data": {
   "shadows": "scalarmath"
  },
  "type": "import"
 },
 "numpy.core.scons_support": {
  "data": {
   "symbols_in_volume": [
    "SCons.Action.Action",
    "SCons.Builder.Builder",
    "code_generators.generate_umath",
    "numpy.core.scons_support.do_generate_numpy_api",
    "numpy.core.scons_support.do_generate_ufunc_api",
    "numpy.core.scons_support.generate_api_emitter",
    "numpy.core.scons_support.generate_from_template",
    "numpy.core.scons_support.generate_from_template_emitter",
    "numpy.core.scons_support.generate_umath_emitter"
   ]
  },
  "type": "module"
 },
 "numpy.core.scons_support.Action": {
  "data": {
   "shadows": "SCons.Action.Action"
  },
  "type": "import"
 },
 "numpy.core.scons_support.Builder": {
  "data": {
   "shadows": "SCons.Builder.Builder"
  },
  "type": "import"
 },
 "numpy.core.scons_support.CheckBrokenMathlib": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.CheckGCC4": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "numpy.core.scons_support.CheckInline": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "numpy.core.scons_support.CheckLongDoubleRepresentation": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "setup_common.LONG_DOUBLE_REPRESENTATION_SRC",
    "setup_common.long_double_representation",
    "setup_common.pyod",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.LONG_DOUBLE_REPRESENTATION_SRC": {
  "data": {
   "shadows": "setup_common.LONG_DOUBLE_REPRESENTATION_SRC"
  },
  "type": "import"
 },
 "numpy.core.scons_support.SCons": {
  "data": {
   "shadows": "SCons"
  },
  "type": "import"
 },
 "numpy.core.scons_support.SCons.Node": {
  "data": {
   "shadows": "SCons.Node"
  },
  "type": "import"
 },
 "numpy.core.scons_support._check_api_version": {
  "data": {
   "shadows": "setup_common.check_api_version"
  },
  "type": "import"
 },
 "numpy.core.scons_support.array_api_gen_bld": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "numpy.core.scons_support.check_api_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.core.scons_support.code_generators",
    "os.path.dirname",
    "setup_common.check_api_version"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.check_mlib": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.check_mlibs": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.core.scons_support.SCons",
    "numpy.core.scons_support.check_mlib"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.code_generators": {
  "data": {
   "shadows": "code_generators"
  },
  "type": "import"
 },
 "numpy.core.scons_support.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "numpy.core.scons_support.define_no_smp": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "KeyError",
    "numpy.core.scons_support.os",
    "numpy.core.scons_support.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.do_generate_from_template": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numscons.numdist.process_c_str",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.do_generate_numpy_api": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "code_generators.generate_numpy_api.do_generate_api",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.do_generate_ufunc_api": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "code_generators.generate_ufunc_api.do_generate_api",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.do_generate_umath": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "code_generators.generate_umath.__file__",
    "code_generators.generate_umath.defdict",
    "code_generators.generate_umath.make_code",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.generate_api_emitter": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dir",
    "numpy.core.scons_support.split_ext",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.generate_from_template": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.core.scons_support.do_generate_from_template",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.generate_from_template_emitter": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.core.scons_support.split_ext",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.generate_umath": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.core.scons_support.do_generate_umath",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.generate_umath_emitter": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.is_npy_no_signal": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.core.scons_support.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.long_double_representation": {
  "data": {
   "shadows": "setup_common.long_double_representation"
  },
  "type": "import"
 },
 "numpy.core.scons_support.nowrap_do_generate_numpy_api": {
  "data": {
   "shadows": "code_generators.generate_numpy_api.do_generate_api"
  },
  "type": "import"
 },
 "numpy.core.scons_support.nowrap_do_generate_ufunc_api": {
  "data": {
   "shadows": "code_generators.generate_ufunc_api.do_generate_api"
  },
  "type": "import"
 },
 "numpy.core.scons_support.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.scons_support.pbasename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "numpy.core.scons_support.pdirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.core.scons_support.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.core.scons_support.process_str": {
  "data": {
   "shadows": "numscons.numdist.process_c_str"
  },
  "type": "import"
 },
 "numpy.core.scons_support.pyod": {
  "data": {
   "shadows": "setup_common.pyod"
  },
  "type": "import"
 },
 "numpy.core.scons_support.split_ext": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.scons_support.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.scons_support.template_bld": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "numpy.core.scons_support.ufunc_api_gen_bld": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "numpy.core.scons_support.umath_bld": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "numpy.core.setup_common": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.setup_common.C99_FUNCS",
    "numpy.core.setup_common._IEEE_DOUBLE_BE",
    "numpy.core.setup_common._IEEE_QUAD_PREC_BE"
   ]
  },
  "type": "module"
 },
 "numpy.core.setup_common.C99_COMPLEX_FUNCS": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_COMPLEX_TYPES": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS_EXTENDED": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C99_FUNCS_SINGLE": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C_ABI_VERSION": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.core.setup_common.C_API_VERSION": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.core.setup_common.CompileError": {
  "data": {
   "shadows": "distutils.ccompiler.CompileError"
  },
  "type": "import"
 },
 "numpy.core.setup_common.LONG_DOUBLE_REPRESENTATION_SRC": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "numpy.core.setup_common.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "numpy.core.setup_common.MANDATORY_FUNCS": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.core.setup_common.MismatchCAPIWarning": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "numpy.core.setup_common.OPTIONAL_STDFUNCS": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "numpy.core.setup_common.OPTIONAL_STDFUNCS_MAYBE": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "numpy.core.setup_common._AFTER_SEQ": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.core.setup_common._BEFORE_SEQ": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_DOUBLE_BE": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_DOUBLE_LE": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_QUAD_PREC_BE": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "numpy.core.setup_common._IEEE_QUAD_PREC_LE": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "numpy.core.setup_common._INTEL_EXTENDED_12B": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "numpy.core.setup_common._INTEL_EXTENDED_16B": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "numpy.core.setup_common.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "numpy.core.setup_common.check_api_version": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.core.setup_common.MismatchCAPIWarning",
    "numpy.core.setup_common.get_api_versions",
    "numpy.core.setup_common.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.check_long_double_representation": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "long_double_representation",
    "object",
    "pyod",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.core.setup_common.fname2def": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "numpy.core.setup_common.get_api_versions": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "__import__",
    "numpy.core.setup_common.sys",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.is_released": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.core.setup_common.long_double_representation": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "numpy.core.setup_common._AFTER_SEQ",
    "numpy.core.setup_common._BEFORE_SEQ",
    "numpy.core.setup_common._IEEE_DOUBLE_BE",
    "numpy.core.setup_common._IEEE_DOUBLE_LE",
    "numpy.core.setup_common._IEEE_QUAD_PREC_BE",
    "numpy.core.setup_common._IEEE_QUAD_PREC_LE",
    "numpy.core.setup_common._INTEL_EXTENDED_12B",
    "numpy.core.setup_common._INTEL_EXTENDED_16B",
    "numpy.core.setup_common.copy"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.pyod": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.core.setup_common.binascii",
    "oct",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.setup_common.sym2def": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "numpy.core.setup_common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.setup_common.type2def": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "numpy.core.setup_common.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.setupscons.configuration",
    "numpy.distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "numpy.core.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.core.setupscons.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "numpy.core.setupscons.configuration": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.core.setupscons.glob",
    "numpy.core.setupscons.sys",
    "numpy.distutils.misc_util.Configuration",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setupscons.configuration.add_array_api": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.distutils.command.scons.get_scons_pkg_build_dir",
    "numscons.get_scons_build_dir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setupscons.configuration.add_config_header": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.core.setupscons.os",
    "numpy.distutils.command.scons.get_scons_pkg_build_dir",
    "numscons.get_scons_build_dir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setupscons.configuration.add_generated_files": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "add_array_api",
    "add_config_header",
    "add_numpyconfig_header",
    "add_ufunc_api"
   ]
  },
  "type": "function"
 },
 "numpy.core.setupscons.configuration.add_numpyconfig_header": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.core.setupscons.os",
    "numpy.distutils.command.scons.get_scons_pkg_build_dir",
    "numscons.get_scons_build_dir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setupscons.configuration.add_ufunc_api": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.distutils.command.scons.get_scons_pkg_build_dir",
    "numscons.get_scons_build_dir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.setupscons.default_lib_dirs": {
  "data": {
   "shadows": "numpy.distutils.system_info.default_lib_dirs"
  },
  "type": "import"
 },
 "numpy.core.setupscons.dot_join": {
  "data": {
   "shadows": "numpy.distutils.misc_util.dot_join"
  },
  "type": "import"
 },
 "numpy.core.setupscons.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.core.setupscons.get_scons_build_dir": {
  "data": {
   "shadows": "numscons.get_scons_build_dir"
  },
  "type": "import"
 },
 "numpy.core.setupscons.get_scons_pkg_build_dir": {
  "data": {
   "shadows": "numpy.distutils.command.scons.get_scons_pkg_build_dir"
  },
  "type": "import"
 },
 "numpy.core.setupscons.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.core.setupscons.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.core.setupscons.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.core.setupscons.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.core.setupscons.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.shape_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.shape_base.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.core.shape_base._nx": {
  "data": {
   "shadows": "numeric"
  },
  "type": "import"
 },
 "numpy.core.shape_base.array": {
  "data": {
   "shadows": "numeric.array"
  },
  "type": "import"
 },
 "numpy.core.shape_base.asarray": {
  "data": {
   "shadows": "numeric.asarray"
  },
  "type": "import"
 },
 "numpy.core.shape_base.atleast_1d": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "numeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.atleast_2d": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "numeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.atleast_3d": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "numeric.asarray",
    "numeric.newaxis"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.hstack": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "map",
    "numeric.concatenate",
    "numpy.core.shape_base.atleast_1d"
   ]
  },
  "type": "function"
 },
 "numpy.core.shape_base.newaxis": {
  "data": {
   "shadows": "numeric.newaxis"
  },
  "type": "import"
 },
 "numpy.core.shape_base.vstack": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "map",
    "numeric.concatenate",
    "numpy.core.shape_base.atleast_2d"
   ]
  },
  "type": "function"
 },
 "numpy.core.test": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.core.tests.test_blasdot": {
  "data": {},
  "type": "module"
 },
 "numpy.core.tests.test_blasdot.DECPREC": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.core.tests.test_blasdot.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.TestInner": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_blasdot.TestInner.test_vecself": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.core.float64",
    "numpy.core.multiarray.inner",
    "numpy.core.tests.test_blasdot.DECPREC",
    "numpy.core.zeros",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_blasdot.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.float64": {
  "data": {
   "shadows": "numpy.core.float64"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.inner_": {
  "data": {
   "shadows": "numpy.core.multiarray.inner"
  },
  "type": "import"
 },
 "numpy.core.tests.test_blasdot.zeros": {
  "data": {
   "shadows": "numpy.core.zeros"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_defchararray.TestBasic": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "numpy.array",
    "numpy.char.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_object_array_unicode": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "numpy.array",
    "numpy.char.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "assert_equal",
    "issubclass",
    "len",
    "numpy.char.array",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_string_array": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "numpy.array",
    "numpy.char.array",
    "numpy.char.asarray",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "assert_equal",
    "issubclass",
    "len",
    "numpy.char.array",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "assert_array_equal",
    "assert_equal",
    "numpy.array",
    "numpy.char.array",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_from_unicode_array.fail": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.char.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestBasic.test_unicode_upconvert": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "issubclass",
    "numpy.char.array",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar": {
  "data": {
   "lineno": 126
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestChar.setUp": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestChar.test_it": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.setUp": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_equal": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_greater_equal": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_less_equal": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisons.test_not_equal": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.core.tests.test_defchararray.TestComparisons"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed1.setUp": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.core.tests.test_defchararray.TestComparisons",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.core.tests.test_defchararray.TestComparisons"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestComparisonsMixed2.setUp": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray",
    "numpy.core.tests.test_defchararray.TestComparisons",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation": {
  "data": {
   "lineno": 175
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestInformation.setUp": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_count": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_endswith.fail": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_find": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "numpy.char.index",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_index.fail": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalnum": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isalpha": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isdigit": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_islower": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isspace": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_istitle": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_isupper": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_len": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.char.str_len",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rfind": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "issubclass",
    "numpy.char.rindex",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_rindex.fail": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestInformation.test_startswith.fail": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods": {
  "data": {
   "lineno": 273
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestMethods.setUp": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_capitalize": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_center": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.all",
    "numpy.array",
    "numpy.char.center",
    "numpy.char.str_len",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_decode": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.char.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_encode": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_expandtabs": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isdecimal.fail": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "TypeError",
    "assert_array_equal",
    "issubclass",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_isnumeric.fail": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_join": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.char.join",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_ljust": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.all",
    "numpy.array",
    "numpy.char.ljust",
    "numpy.char.str_len",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lower": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_lstrip": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_partition": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.core.tests.test_defchararray.sys",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_replace": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rjust": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.all",
    "numpy.array",
    "numpy.char.rjust",
    "numpy.char.str_len",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rpartition": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.core.tests.test_defchararray.sys",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rsplit": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "assert_equal",
    "issubclass",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_rstrip": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_split": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "assert_equal",
    "issubclass",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_splitlines": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "issubclass",
    "len",
    "numpy.char.array",
    "numpy.object_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_strip": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_swapcase": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_title": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestMethods.test_upper": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "assert_array_equal",
    "issubclass",
    "numpy.string_",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations": {
  "data": {
   "lineno": 524
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestOperations.setUp": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_add": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mod": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_mul": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.array",
    "numpy.chararray",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_radd": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmod": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "TypeError",
    "object",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestOperations.test_rmul": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "numpy.array",
    "numpy.chararray",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_broadcast_error.fail": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_args_tuple.fail": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_function_args.fail": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_result_type.fail": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_invalid_type_descr.fail": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_existent_method.fail": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestVecString.test_non_string_array.fail": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.core.multiarray._vec_string",
    "numpy.string_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.setUp": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.chararray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray.TestWhitespace.test1": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "all",
    "negative"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_defchararray._vec_string": {
  "data": {
   "shadows": "numpy.core.multiarray._vec_string"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_defchararray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_dtype": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_dtype.TestBuiltin": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestBuiltin.test_run": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "hash",
    "numpy.complex",
    "numpy.dtype",
    "numpy.float",
    "numpy.int",
    "numpy.int32",
    "numpy.object",
    "numpy.str",
    "numpy.unicode"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_rejects_nondict": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_metadata_takes_dict": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_nested_metadata": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMetadata.test_no_metadata": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestMonsterType": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestMonsterType.test1": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_names": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_different_titles": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestRecord.test_equivalent_record": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_equivalent_record": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_nonequivalent_record": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.TestSubarray.test_single_subarray": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "hash",
    "numpy.dtype",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_dtype.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base": {
  "data": {},
  "type": "module"
 },
 "numpy.core.tests.test_function_base.TestLinspace": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_basic": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_corner": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "list",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLinspace.test_type": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.TestLogspace": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.core.tests.test_function_base.TestLogspace.test_basic": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "numpy.logspace"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_function_base.linspace": {
  "data": {
   "shadows": "numpy.linspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_function_base.logspace": {
  "data": {
   "shadows": "numpy.logspace"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "reload",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_getlimits.TestDouble": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestDouble.test_singleton": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "assert_equal",
    "id",
    "numpy.core.finfo",
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_basic": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "numpy.core.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestIinfo.test_unsigned_max": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "T",
    "assert_equal",
    "numpy.core.iinfo",
    "numpy.sctypes"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestLongdouble.test_singleton": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_equal",
    "id",
    "numpy.core.finfo",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestPythonFloat.test_singleton": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "id",
    "numpy.core.finfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.TestSingle": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "numpy.core.tests.test_getlimits.TestSingle.test_singleton": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "assert_equal",
    "id",
    "numpy.core.finfo",
    "numpy.single"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_getlimits.double": {
  "data": {
   "shadows": "numpy.double"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.finfo": {
  "data": {
   "shadows": "numpy.core.finfo"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.iinfo": {
  "data": {
   "shadows": "numpy.core.iinfo"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.longdouble": {
  "data": {
   "shadows": "numpy.longdouble"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.numpy.lib": {
  "data": {
   "shadows": "numpy.lib"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.single": {
  "data": {
   "shadows": "numpy.single"
  },
  "type": "import"
 },
 "numpy.core.tests.test_getlimits.test_instances": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.core.finfo",
    "numpy.core.iinfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_memmap.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.TestMemmap": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.arange",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.tearDown": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_del": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.memmap",
    "numpy.memmap._close"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_del.ViewCloseError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_del.replace_close": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ViewCloseError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_flush": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.core.tests.test_memmap.warnings",
    "numpy.memmap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_open_with_filename": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.core.tests.test_memmap.os",
    "numpy.memmap",
    "tempfile.mktemp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.TestMemmap.test_roundtrip": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.allclose",
    "numpy.memmap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_memmap.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.memmap": {
  "data": {
   "shadows": "numpy.memmap"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.mktemp": {
  "data": {
   "shadows": "tempfile.mktemp"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.tests.test_memmap.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_multiarray.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.NEIGH_MODE": {
  "data": {
   "lineno": 1114
  },
  "type": "constant"
 },
 "numpy.core.tests.test_multiarray.TestArgmax": {
  "data": {
   "lineno": 637
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestArgmax.test_all": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "all",
    "numpy.random.normal",
    "range",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.setUp": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "arange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_attributes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "arange",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_dtypeattr": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "assert_equal",
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_fill": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "empty"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "assert_equal",
    "make_array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_set_stridesattr.make_array": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_stridesattr": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "assert_equal",
    "make_array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestAttributes.test_stridesattr.make_array": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestBool": {
  "data": {
   "lineno": 256
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestBool.test_test_interning": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "array",
    "bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose": {
  "data": {
   "lineno": 1086
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestChoose.setUp": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "int",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_basic": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.choose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_broadcast1": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.choose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestChoose.test_broadcast2": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.choose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip": {
  "data": {
   "lineno": 668
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestClip._check_range": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "numpy.all",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip._clip_type": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "assert_equal",
    "dtype",
    "numpy.core.tests.test_multiarray.sys",
    "numpy.dtype",
    "numpy.random.random",
    "numpy.sctypes",
    "x",
    "x.clip",
    "x.dtype.byteorder"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_basic": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_max_or_min": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.array",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestClip.test_record_array": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation": {
  "data": {
   "lineno": 240
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute.x": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_attribute.x.__array__": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestCreation.test_from_string": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "int",
    "numpy.typecodes",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestDtypedescr.test_construction": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "assert_equal",
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing": {
  "data": {
   "lineno": 585
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_list": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "ones",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFancyIndexing.test_tuple": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "ones",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFlags.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "arange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_otherflags": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFlags.test_writeable": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "locals"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer": {
  "data": {
   "lineno": 1003
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.test_ip_basic": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "dtype",
    "float",
    "int",
    "numpy.complex",
    "numpy.dtype",
    "numpy.random.random",
    "x",
    "x.flat",
    "x.tostring"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestFromBuffer.tst_basic": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.frombuffer"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestIO._check_from": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.fromfile",
    "numpy.fromstring",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO._run_in_foreign_locale": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "numpy.testing.dec.knownfailureif",
    "test_print.in_foreign_locale"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.setUp": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "numpy.complex",
    "numpy.core.tests.test_multiarray.tempfile",
    "numpy.random.random",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.tearDown": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.os"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_ascii": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_binary": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_counted_string": {
  "data": {
   "lineno": 941
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_counted_string_with_ws": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_dtype": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_empty_files_binary": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "assert_",
    "fromfile",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_empty_files_text": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "assert_",
    "fromfile",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_inf": {
  "data": {
   "lineno": 925
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_locale": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "numpy.core.tests.test_multiarray.TestIO"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_long_sep": {
  "data": {
   "lineno": 960
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_malformed": {
  "data": {
   "lineno": 957
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_nan": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_numbers": {
  "data": {
   "lineno": 929
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_binary_str": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_file": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.core.tests.test_multiarray.os",
    "numpy.fromfile",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_filename": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_repr": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "assert_array_equal",
    "map",
    "numpy.fromstring",
    "repr",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_roundtrip_str": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "assert_array_equal",
    "map",
    "numpy.fromstring",
    "numpy.isfinite",
    "str",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_string": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_string_with_ws": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_tofile_format": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "numpy.array",
    "open",
    "x",
    "x.tofile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestIO.test_tofile_sep": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "numpy.array",
    "numpy.core.tests.test_multiarray.os",
    "open",
    "x",
    "x.tofile"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestLexsort": {
  "data": {
   "lineno": 827
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestLexsort.test_basic": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.lexsort",
    "numpy.sort",
    "numpy.vstack",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods": {
  "data": {
   "lineno": 268
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_argsort": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "chr",
    "numpy.arange",
    "numpy.array",
    "numpy.complex",
    "numpy.unicode",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_flatten": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_searchsorted": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.nan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "assert_equal",
    "chr",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.nan",
    "numpy.unicode",
    "numpy.zeros",
    "range",
    "sort"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_sort_order": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.array",
    "numpy.rec.fromarrays"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_test_round": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMethods.test_transpose": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax": {
  "data": {
   "lineno": 647
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_axis": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_raises",
    "numpy.amax"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestMinMax.test_scalar": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_raises",
    "numpy.amax",
    "numpy.amin"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter": {
  "data": {
   "lineno": 1115
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_circular": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.linspace",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_mirror": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.linspace",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_mirror2d": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_simple": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.linspace",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter._test_simple2d": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_circular": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_circular_object": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.core.tests.test_multiarray.can_use_decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror2d": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror2d_object": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.core.tests.test_multiarray.can_use_decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_mirror_object": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.core.tests.test_multiarray.can_use_decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple2d": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple2d_object": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.core.tests.test_multiarray.can_use_decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple_float": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNeighborhoodIter.test_simple_object": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.core.tests.test_multiarray.can_use_decimal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestNewaxis": {
  "data": {
   "lineno": 661
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestNewaxis.test_basic": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling": {
  "data": {
   "lineno": 537
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_both": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.core.tests.test_multiarray.pickle",
    "transpose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_float32": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_int8": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version0_object": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_float32": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_int8": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPickling.test_version1_object": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "loads"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask": {
  "data": {
   "lineno": 729
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_ip_byteorder": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_ip_types": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "T",
    "numpy.random.random",
    "numpy.sctypes.itervalues",
    "numpy.void",
    "object",
    "str",
    "x",
    "x.copy"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_mask_size": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.putmask"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_masked_array": {
  "data": {
   "lineno": 769
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.test_record_array": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.putmask"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.tst_basic": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "T",
    "numpy.all",
    "numpy.putmask",
    "x",
    "x.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestPutmask.tst_byteorder": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "assert_array_equal",
    "dtype",
    "numpy.array",
    "numpy.putmask",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestRecord": {
  "data": {
   "lineno": 1029
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestRecord.test_field_rename": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize": {
  "data": {
   "lineno": 1016
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_basic": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "x",
    "x.flat",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestResize.test_check_reference": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "x",
    "x.resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.setUp": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_ellipsis_subscript": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_empty_subscript": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_newaxis": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_newaxis.subscript": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "IndexError",
    "array",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript_assignment": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_invalid_subscript_assignment.assign": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestScalarIndexing.test_newaxis": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter": {
  "data": {
   "lineno": 1234
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_circular": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_const": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_mirror": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStackedNeighborhoodIter.test_simple_strict_within": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.core.multiarray_tests.test_neighborhood_iterator_oob",
    "numpy.core.tests.test_multiarray.NEIGH_MODE",
    "numpy.float64",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats": {
  "data": {
   "lineno": 1047
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "TestArray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray.__array_finalize__": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStats.test_subclass.TestArray.__new__": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare": {
  "data": {
   "lineno": 604
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_mixed": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_string": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "array",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestStringCompare.test_unicode": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "array",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSubscripting": {
  "data": {
   "lineno": 530
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestSubscripting.test_test_zero_rank": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "array",
    "int",
    "isinstance",
    "ndarray",
    "type",
    "x"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSummarization": {
  "data": {
   "lineno": 1066
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestSummarization.test_1d": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "numpy.arange",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestSummarization.test_2d": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "numpy.arange",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake": {
  "data": {
   "lineno": 776
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_clip": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.random.random",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_ip_byteorder": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "dtype"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_ip_types": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "T",
    "numpy.random.random",
    "numpy.sctypes.itervalues",
    "numpy.void",
    "object",
    "str",
    "x",
    "x.copy",
    "x.shape"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_raise": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "IndexError",
    "assert_array_equal",
    "numpy.random.random",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_record_array": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.test_wrap": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.random.random",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.tst_basic": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "assert_array_equal",
    "range",
    "x",
    "x.shape",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestTake.tst_byteorder": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "assert_array_equal",
    "dtype",
    "numpy.array",
    "x",
    "x.take"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestView": {
  "data": {
   "lineno": 1036
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestView.test_basic": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.int8",
    "x",
    "x.view"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank": {
  "data": {
   "lineno": 120
  },
  "type": "class"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.setUp": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "array",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_constructor": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_ellipsis_subscript": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_ellipsis_subscript_assignment": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_empty_subscript": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_empty_subscript_assignment": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_newaxis": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_newaxis.subscript": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "IndexError",
    "array",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript_assignment": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "IndexError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_invalid_subscript_assignment.assign": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_newaxis": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.TestZeroRank.test_output": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.can_use_decimal": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_multiarray.in_foreign_locale": {
  "data": {
   "shadows": "test_print.in_foreign_locale"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_neighborhood_iterator": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_neighborhood_iterator"
  },
  "type": "import"
 },
 "numpy.core.tests.test_multiarray.test_neighborhood_iterator_oob": {
  "data": {
   "shadows": "numpy.core.multiarray_tests.test_neighborhood_iterator_oob"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_numeric.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.TestArgwhere": {
  "data": {
   "lineno": 945
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_2D": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.argwhere"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArgwhere.test_list": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.argwhere"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons": {
  "data": {
   "lineno": 304
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equal": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "array",
    "array_equal",
    "bool",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestArrayComparisons.test_array_equiv": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "array",
    "array_equiv",
    "bool",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_large": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "assert_equal",
    "binary_repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_negative": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "assert_equal",
    "binary_repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBinaryRepr.test_zero": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "assert_equal",
    "binary_repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_and": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_or": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_bitwise_xor": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestBoolScalar.test_logical": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip": {
  "data": {
   "lineno": 358
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_data_complex": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_flt_data": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int32_data": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_int_data": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._generate_non_native_data": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip._neg_byteorder": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "asarray",
    "numpy.core.tests.test_numeric.sys"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.clip": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "greater",
    "less"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.fastclip": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.setUp": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_array_double": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_func_takes_out": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "clip",
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_array": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_inplace_simple": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_non_contig": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_int32": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "float64",
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_array_outint32": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple2": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "float64",
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_clip_with_out_simple_int32": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_noncontig_inplace": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_complex": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_double": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_01": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_inplace_02": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "int",
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_inout": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "float64",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int32_out": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_inout": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "float64",
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_int64_out": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_nonnative": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_simple_out": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_01": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_02": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_03": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "float64",
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_04": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "float32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_05": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_06": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_07": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_08": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_09": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_10": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "float32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_11": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.assert_array_strict_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestClip.test_type_cast_12": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "float32",
    "int32",
    "numpy.core.tests.test_numeric.assert_array_strict_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric._TestCorrelate"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCorrelate._setup": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric._TestCorrelate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_complex": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.array",
    "numpy.complex",
    "numpy.correlate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_float": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric._TestCorrelate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelate.test_object": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric._TestCorrelate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestCorrelateNew": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric._TestCorrelate"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestCorrelateNew.test_complex": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.array",
    "numpy.complex",
    "numpy.correlate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestDot.setUp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_all": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_columnvect1": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_columnvect2": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_matmat": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_matvec": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_matvec2": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecmat": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecmat2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecmat3": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecobject": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "array",
    "ascontiguousarray",
    "assert_equal",
    "numpy.core.multiarray.dot",
    "numpy.core.tests.test_numeric.Vec",
    "transpose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecscalar": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecscalar2": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecvecinner": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestDot.test_vecvecouter": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.multiarray.dot"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestFromiter.makegen": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_lengths": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "fromiter",
    "int",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_types": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "dtype",
    "float",
    "fromiter"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestFromiter.test_values": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "alltrue",
    "array",
    "fromiter",
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestIndex": {
  "data": {
   "lineno": 282
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestIndex.test_boolean": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "array",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs": {
  "data": {
   "lineno": 865
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.setUp": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "array",
    "float32",
    "int32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_empty_like": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "dtype",
    "zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestLikeFuncs.test_zeros_like": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "abs",
    "all",
    "dtype",
    "zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_cumproduct": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "all",
    "array",
    "cumproduct"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_mean": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "all",
    "array",
    "mean"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_size": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "size"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_squeeze": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "squeeze"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_std": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "std"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestNonarrayArgs.test_var": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestResize.test_copies": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestResize.test_zeroresize": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "resize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr": {
  "data": {
   "lineno": 223
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_divide_err": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "FloatingPointError",
    "array",
    "seterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestSeterr.test_set": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "geterr",
    "seterr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar": {
  "data": {
   "lineno": 835
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVar.setUp": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_basic": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "assert_almost_equal",
    "std",
    "var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof1": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float",
    "len",
    "std",
    "var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVar.test_ddof2": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "assert_almost_equal",
    "float",
    "len",
    "std",
    "var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex": {
  "data": {
   "lineno": 857
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.TestStdVarComplex.test_basic": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "std",
    "var"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.Vec.__add__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.Vec"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__mul__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.Vec"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__rmul__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.Vec.__sub__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.core.tests.test_numeric.Vec"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric._TestCorrelate": {
  "data": {
   "lineno": 886
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric._TestCorrelate._setup": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric._TestCorrelate.test_float": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.correlate",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric._TestCorrelate.test_object": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "decimal.Decimal",
    "numpy.correlate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.assert_array_strict_equal": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.dot_": {
  "data": {
   "shadows": "numpy.core.multiarray.dot"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numeric.test_allclose_inf": {
  "data": {
   "lineno": 778
  },
  "type": "class"
 },
 "numpy.core.tests.test_numeric.test_allclose_inf.test_ip_allclose": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "arange",
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.test_allclose_inf.test_ip_not_allclose": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "arange",
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.test_allclose_inf.test_no_parameter_modification": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "allclose",
    "array",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.test_allclose_inf.tst_allclose": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numeric.test_allclose_inf.tst_not_allclose": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "allclose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.core.tests.test_numerictypes.sys",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_numerictypes.NbufferT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.Ndescr": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.PbufferT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.Pdescr": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType": {
  "data": {
   "lineno": 339
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses1": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.find_common_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_loses2": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.find_common_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.find_common_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins2": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.find_common_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestCommonType.test_scalar_wins3": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "numpy.find_common_type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField": {
  "data": {
   "lineno": 332
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestEmptyField.test_assign": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields": {
  "data": {
   "lineno": 356
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields._bad_call": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.setUp": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_no_tuple": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.TestMultipleFields.test_return": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.byteorder": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "numpy.core.tests.test_numerictypes.create_values": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.create_values.test_list_of_list_of_tuple": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.normalize_descr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_values.test_list_of_tuple": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.normalize_descr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_values.test_tuple": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.core.tests.test_numerictypes.normalize_descr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_zeros": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.create_zeros.test_zeros0D": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.void",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_zeros.test_zerosMD": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.uint8",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.create_zeros.test_zerosSD": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.tests.test_numerictypes.normalize_descr",
    "numpy.void",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.normalize_descr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "numpy.core.tests.test_numerictypes.byteorder",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_access_top_fields": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested1_acessors": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested1_descriptor": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested2_acessors": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_nested.test_nested2_descriptor": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.read_values_plain": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.read_values_plain.test_access_fields": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_numerictypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_nested_multiple": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.create_values"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_nested_single": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.create_values"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_plain_multiple": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.create_values"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_values_plain_single": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.create_values"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_zeros_nested": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.create_zeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_create_zeros_plain": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.create_zeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_nested_multiple": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.read_values_nested"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_nested_single": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.NbufferT",
    "numpy.core.tests.test_numerictypes.Ndescr",
    "numpy.core.tests.test_numerictypes.read_values_nested"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_plain_multiple": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.read_values_plain"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_numerictypes.test_read_values_plain_single": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.core.tests.test_numerictypes.PbufferT",
    "numpy.core.tests.test_numerictypes.Pdescr",
    "numpy.core.tests.test_numerictypes.read_values_plain"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_records": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_records.TestFromrecords": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.rec.fromrecords"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_fromrecords_with_explicit_dtype": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "numpy.dtype",
    "numpy.object",
    "numpy.rec.fromrecords"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_method_array2": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_conflict_fields": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "assert_array_equal",
    "callable",
    "numpy.rec.array",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_names": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "numpy.rec.array",
    "numpy.rec.fromrecords",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_obj": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.rec.fromarrays",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_from_repr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_equal",
    "eval",
    "isinstance",
    "numpy.int8",
    "numpy.rec.array",
    "numpy.recarray",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromarrays": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.rec.fromarrays"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_fromfile": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.rec.fromfile",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestFromrecords.test_recarray_slices": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.rec.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "numpy.core.tests.test_records.TestRecord.setUp": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.rec.fromrecords"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment1": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_assignment2": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.TestRecord.test_invalid_assignment.assign_invalid_column": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "numpy.core.tests.test_records.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.core.tests.test_records.test_find_duplicate": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.rec.find_duplicate"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.bool_",
    "numpy.byte",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.int_",
    "numpy.intc",
    "numpy.longdouble",
    "numpy.longlong",
    "numpy.short",
    "numpy.single",
    "numpy.ubyte",
    "numpy.uint",
    "numpy.uintc",
    "numpy.ulonglong",
    "numpy.ushort",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_scalarmath.TestConversion": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestConversion.test_int_from_long": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "map",
    "numpy.array",
    "numpy.float64",
    "numpy.int64",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_large_types": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.longdouble",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestPower.test_small_types": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.int8",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestRepr._test_type_repr": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "eval",
    "numpy.array",
    "numpy.dtype",
    "numpy.finfo",
    "numpy.uint8",
    "repr",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestRepr.test_float_repr": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_add": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "atype",
    "btype",
    "enumerate",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.types"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_type_create": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_equal",
    "atype",
    "enumerate",
    "numpy.array",
    "numpy.core.tests.test_scalarmath.types"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.TestTypes.test_types": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "atype",
    "numpy.core.tests.test_scalarmath.types"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_scalarmath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_scalarmath.types": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.core.tests.test_ufunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_ufunc.TestUfunc": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "assert_equal",
    "broadcastable",
    "numpy.array",
    "numpy.core.umath_tests.matrix_multiply",
    "numpy.newaxis",
    "numpy.newaxis.swapaxes",
    "numpy.sum",
    "permute_n",
    "rand",
    "slice",
    "slice_n",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.broadcastable": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.permute_n": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "permute_n",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.compare_matrix_multiply_results.slice_n": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "slice",
    "slice_n"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_all_ufunc": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_broadcast": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "assert_array_equal",
    "assert_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_endian": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_almost_equal",
    "fone",
    "foo",
    "ftwo",
    "len",
    "numpy.abs",
    "numpy.add",
    "numpy.all",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.csingle",
    "numpy.double",
    "numpy.exp",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.longdouble",
    "numpy.object",
    "numpy.ones",
    "numpy.single",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo.logical_and": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_generic_loops.foo.logical_not": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_get_signature": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.umath_tests.inner1d.signature"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_incontiguous_array": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_inner1d": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_innerwt": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.core.umath_tests.innerwt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_matrix_multiply": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.double",
    "numpy.long"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_output_argument": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_reduceat_shifting_sum": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.add.reduceat",
    "numpy.arange",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_signature": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "numpy.core.umath_tests.test_signature"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.TestUfunc.test_type_cast": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "assert_array_equal",
    "numpy.arange",
    "numpy.core.umath_tests.inner1d",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_ufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_ufunc.umt": {
  "data": {
   "shadows": "numpy.core.umath_tests"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_ninf": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.NINF",
    "numpy.core.umath.arctan2",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_any_pinf": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_arctan2_isnzero",
    "numpy.core.tests.test_umath.assert_arctan2_ispzero",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_any": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.arctan2",
    "numpy.inf",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_ninf": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.arctan2",
    "numpy.inf",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_inf_pinf": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.arctan2",
    "numpy.inf",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_nan_any": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_arctan2_isnan",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_negative_zero": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_one_one": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.arctan2",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_positive_zero": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_negative": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_nzero": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath.arctan2",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_positive": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.tests.test_umath.assert_arctan2_isnzero",
    "numpy.core.tests.test_umath.assert_arctan2_ispzero"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestArctan2SpecialValues.test_zero_pzero": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.tests.test_umath.assert_arctan2_isnzero",
    "numpy.core.tests.test_umath.assert_arctan2_ispzero"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestAttributes": {
  "data": {
   "lineno": 765
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestAttributes.test_attributes": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.umath.add"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestChoose": {
  "data": {
   "lineno": 564
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestChoose.test_mixed": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.choose"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.cos",
    "numpy.exp",
    "numpy.exp2",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.tan",
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.check_loss_of_precision": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "check",
    "dtype",
    "func",
    "numpy.absolute",
    "numpy.all",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.array",
    "numpy.finfo",
    "numpy.logspace",
    "numpy.longcomplex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.check_loss_of_precision.check": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "abs",
    "dtype",
    "func",
    "numpy.all",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_against_cmath": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "AttributeError",
    "abs",
    "cfunc",
    "complex",
    "func",
    "getattr",
    "numpy.complex",
    "numpy.complex_",
    "numpy.core.tests.test_umath.cmath",
    "numpy.core.tests.test_umath.sys",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_branch_cuts_failing": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.log2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_it": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "assert_almost_equal",
    "f",
    "numpy.arccosh",
    "numpy.complex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "dtype",
    "numpy.complex64",
    "numpy.complex_"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_loss_of_precision_longcomplex": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.is_longdouble_finfo_bogus",
    "numpy.longcomplex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestComplexFunctions.test_precisions_consistent": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "assert_almost_equal",
    "f",
    "numpy.cdouble",
    "numpy.clongdouble",
    "numpy.csingle"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDegrees": {
  "data": {
   "lineno": 395
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDegrees.test_degrees": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.degrees",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_complex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.complex128"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_division_int": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestDivision.test_floor_division_complex": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.complex128",
    "numpy.floor_divide"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp": {
  "data": {
   "lineno": 147
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp.test_exp_values": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExp2": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExp2.test_exp2_values": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.exp2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestExpm1": {
  "data": {
   "lineno": 201
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestExpm1.test_expm1": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.exp",
    "numpy.core.umath.expm1"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint": {
  "data": {
   "lineno": 391
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFloatingPoint.test_floating_point": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.umath.FLOATING_POINT_SUPPORT"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax": {
  "data": {
   "lineno": 351
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmax.test_complex_nans": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.complex",
    "numpy.fmax",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_float_nans": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.fmax",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmax.test_reduce_complex": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.fmax.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin": {
  "data": {
   "lineno": 371
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestFmin.test_complex_nans": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.complex",
    "numpy.fmin",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_float_nans": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.fmin",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestFmin.test_reduce_complex": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.fmin.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypot": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypot.test_simple": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.hypot",
    "numpy.core.umath.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestHypotSpecialValues.test_nan_outputs": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath.assert_hypot_isinf",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog.test_log_values": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog1p": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog1p.test_log1p": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.log",
    "numpy.core.umath.log1p"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLog2": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLog2.test_log2_values": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_inf": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.inf",
    "numpy.logaddexp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_range": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.logaddexp"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_logaddexp_values": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.log",
    "numpy.logaddexp",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp.test_nan": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isnan",
    "numpy.logaddexp",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_inf": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.inf",
    "numpy.logaddexp2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_range": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.logaddexp2"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_logaddexp2_values": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.log2",
    "numpy.logaddexp2",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestLogAddExp2.test_nan": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isnan",
    "numpy.logaddexp2",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum": {
  "data": {
   "lineno": 311
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_complex_nans": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.complex",
    "numpy.maximum",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_float_nans": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.maximum",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMaximum.test_reduce_complex": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.maximum.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum": {
  "data": {
   "lineno": 331
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_complex_nans": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.complex",
    "numpy.minimum",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_float_nans": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.minimum",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestMinimum.test_reduce_complex": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.minimum.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_complex_equal",
    "assert_equal",
    "complex",
    "numpy.array",
    "numpy.complex_",
    "numpy.core.umath.sqrt",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_complex.assert_complex_equal": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestPower.test_power_float": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "numpy.array",
    "numpy.core.umath.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestRadians": {
  "data": {
   "lineno": 400
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestRadians.test_radians": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.core.umath.radians",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods": {
  "data": {
   "lineno": 405
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "A",
    "B",
    "C",
    "assert_equal",
    "numpy.core.umath.maximum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.A": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.A.__array__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.B": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.B.__array__": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.C": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_array_with_context.C.__array__": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.umath.minimum",
    "numpy.ndarray",
    "numpy.zeros",
    "type",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_default_prepare.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "A",
    "RuntimeError",
    "numpy.core.umath.maximum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_prepare.A.__array_prepare__": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "A",
    "RuntimeError",
    "numpy.core.umath.maximum"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_failing_wrap.A.__array_wrap__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.core.umath.minimum",
    "numpy.zeros",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_old_wrap.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.add",
    "numpy.array",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_prepare.with_prepare.__array_prepare__": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "A",
    "B",
    "C",
    "f",
    "numpy.core.umath.exp",
    "numpy.core.umath.minimum",
    "numpy.ndarray",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array__": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.A.__array_wrap__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.B": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority.C": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "A"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "A",
    "assert_array_equal",
    "isinstance",
    "numpy.array",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_priority_with_scalar.A.__new__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "numpy.core.umath.minimum",
    "numpy.zeros",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "assert_array_equal",
    "isinstance",
    "numpy.array",
    "numpy.core.umath.multiply",
    "with_wrap"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__array_wrap__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSpecialMethods.test_wrap_with_iterable.with_wrap.__new__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass": {
  "data": {
   "lineno": 776
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "assert_equal",
    "simple"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath.TestSubclass.test_subclass_op.simple.__new__": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "numpy.ndarray.__new__",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._check_branch_cut": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "dtype",
    "f",
    "numpy.absolute",
    "numpy.all",
    "numpy.atleast_1d",
    "numpy.complex",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_nextafter": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.isnan",
    "numpy.nan",
    "numpy.nextafter",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath._test_spacing": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.spacing",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnan": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isninf": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_isnzero": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.signbit"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispinf": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_arctan2_ispzero": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.core.umath.arctan2",
    "numpy.signbit"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isinf": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.core.umath.hypot",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.assert_hypot_isnan": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.core.umath.hypot",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.cmath": {
  "data": {
   "shadows": "cmath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.is_longdouble_finfo_bogus": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.longcomplex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.ncu": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath.test_copysign": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "numpy.copysign",
    "numpy.nan",
    "numpy.signbit"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_nextafter",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafter_vs_spacing": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "f",
    "numpy.float32",
    "numpy.float64",
    "numpy.nextafter",
    "numpy.spacing",
    "t"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterf": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_nextafter",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_nextafterl": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_nextafter",
    "numpy.core.tests.test_umath.sys",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_pos_nan": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.signbit"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_reduceat": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.add.reduce",
    "numpy.add.reduceat",
    "numpy.array",
    "numpy.dtype",
    "numpy.empty",
    "numpy.float32",
    "numpy.int64",
    "numpy.setbufsize"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_spacing",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacing_gfortran": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.spacing",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingf": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_spacing",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath.test_spacingl": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "numpy.core.tests.test_umath._test_spacing",
    "numpy.core.tests.test_umath.sys",
    "numpy.longdouble"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_umath_complex.TestCabs": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_cabs_inf_nan": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "f",
    "g",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_cabs_inf_nan.f": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.conj"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_cabs_inf_nan.g": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.complex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_fabs": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "assert_array_equal",
    "complex",
    "numpy.NZERO",
    "numpy.abs",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.nan",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCabs.test_simple": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "assert_almost_equal",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCarg": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCarg.test_simple": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "check_real_value",
    "numpy.PZERO",
    "numpy.core.umath._arg",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCarg.test_special_values": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "check_real_value",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath._arg",
    "numpy.inf",
    "numpy.nan",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCarg.test_zero": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "check_real_value",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.core.umath._arg",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_simple": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.complex",
    "numpy.cos",
    "numpy.exp",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "f",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.complex",
    "numpy.cos",
    "numpy.exp",
    "numpy.inf",
    "numpy.nan",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_inf_inf": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AssertionError",
    "f",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_inf_nan": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AssertionError",
    "f",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_ninf_inf": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AssertionError",
    "f",
    "numpy.array",
    "numpy.complex",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values._check_ninf_nan": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "AssertionError",
    "f",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCexp.test_special_values2": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "f",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestClog": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestClog.test_simple": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "assert_almost_equal",
    "len",
    "numpy.abs",
    "numpy.angle",
    "numpy.array",
    "numpy.log",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestClog.test_special_values": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "assert_almost_equal",
    "complex",
    "len",
    "numpy.NZERO",
    "numpy.array",
    "numpy.complex",
    "numpy.conj",
    "numpy.inf",
    "numpy.log",
    "numpy.nan",
    "numpy.pi",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow": {
  "data": {
   "lineno": 305
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.test_array": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "assert_almost_equal",
    "complex",
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.test_scalar": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "assert_almost_equal",
    "complex",
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCpow.test_simple": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "assert_almost_equal",
    "len",
    "numpy.array",
    "numpy.inf",
    "numpy.nan",
    "numpy.power",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_simple": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_simple_conjugate": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "f",
    "numpy.complex",
    "numpy.conj",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_simple_conjugate.f": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_special_values": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "f",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.inf",
    "numpy.nan",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.TestCsqrt.test_special_values._check_ninf_nan": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.complex",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.nan",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.check_complex_value": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "complex",
    "f",
    "numpy.array",
    "numpy.complex"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.check_real_value": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "complex",
    "f",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_umath_complex.ncu": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.core.tests.test_umath_complex.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "buffer",
    "len",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.core.tests.test_unicode.assign_values": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.assign_values.content_check": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "buffer",
    "int",
    "len",
    "numpy.core.tests.test_unicode.ucs4",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.assign_values.test_values0D": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.assign_values.test_valuesMD": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.assign_values.test_valuesSD": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.byteorder_values": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.byteorder_values.test_values0D": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.byteorder_values.test_valuesMD": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.byteorder_values.test_valuesSD": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.create_values.content_check": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "buffer",
    "int",
    "len",
    "numpy.core.tests.test_unicode.ucs4",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values.test_values0D": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values.test_valuesMD": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_values.test_valuesSD": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.create_zeros.content_check": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "buffer",
    "int",
    "len",
    "numpy.core.tests.test_unicode.ucs4"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros.test_zeros0D": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros.test_zerosMD": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.create_zeros.test_zerosSD": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.core.tests.test_unicode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1009_ucs2": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.assign_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1009_ucs4": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.assign_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1_ucs2": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.assign_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_1_ucs4": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.assign_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_2_ucs2": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.assign_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_assign_values_2_ucs4": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.assign_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1009_ucs2": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.byteorder_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1009_ucs4": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.byteorder_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1_ucs2": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.byteorder_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_1_ucs4": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.byteorder_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_2_ucs2": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.byteorder_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_byteorder_2_ucs4": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.byteorder_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1009_ucs2": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1009_ucs4": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1_ucs2": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_1_ucs4": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_2_ucs2": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_values",
    "numpy.core.tests.test_unicode.ucs2_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_values_2_ucs4": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_values",
    "numpy.core.tests.test_unicode.ucs4_value"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_zeros_1": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_zeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_zeros_1009": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_zeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.test_create_zeros_2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.core.tests.test_unicode.create_zeros"
   ]
  },
  "type": "class"
 },
 "numpy.core.tests.test_unicode.ucs2_value": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.ucs4": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.core.tests.test_unicode.ucs4_value": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.core.umath": {
  "data": {
   "shadows": "umath"
  },
  "type": "import"
 },
 "numpy.distutils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.distutils._INSTALLED",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.distutils._INSTALLED": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.distutils.__config__": {
  "data": {
   "shadows": "__config__"
  },
  "type": "import"
 },
 "numpy.distutils.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.distutils.__version__": {
  "data": {
   "shadows": "__version__.version"
  },
  "type": "import"
 },
 "numpy.distutils.__version__.major": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.micro": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.minor": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.distutils.__version__.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.distutils.bench": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.distutils.ccompiler": {
  "data": {
   "shadows": "ccompiler"
  },
  "type": "import"
 },
 "numpy.distutils.command": {
  "data": {
   "symbols_in_volume": [
    "__import__",
    "globals",
    "locals",
    "numpy.distutils.command.distutils_all"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.distutils.command.__revision__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.distutils.command.autodist": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.autodist.check_compiler_gcc4": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "numpy.distutils.command.autodist.check_inline": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "numpy.distutils.command.bdist_rpm": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.bdist_rpm.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.command.bdist_rpm.bdist_rpm"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.bdist_rpm.bdist_rpm._make_spec_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "distutils.command.bdist_rpm.bdist_rpm._make_spec_file",
    "numpy.distutils.command.bdist_rpm.os",
    "numpy.distutils.command.bdist_rpm.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.bdist_rpm.old_bdist_rpm": {
  "data": {
   "shadows": "distutils.command.bdist_rpm.bdist_rpm"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.bdist_rpm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build.build": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "distutils.command.build.build",
    "distutils.command.build.build.has_ext_modules",
    "distutils.command.build.build.help_options",
    "distutils.command.build.build.sub_commands",
    "distutils.command.build.build.user_options",
    "numpy.distutils.command.config_compiler.show_fortran_compilers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build.build.finalize_options": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "distutils.command.build.build.finalize_options",
    "distutils.util.get_platform",
    "numpy.distutils.command.build.os",
    "numpy.distutils.command.build.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build.build.initialize_options": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "distutils.command.build.build.initialize_options"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build.build.run": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "distutils.command.build.build.run"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build.get_platform": {
  "data": {
   "shadows": "distutils.util.get_platform"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.old_build": {
  "data": {
   "shadows": "distutils.command.build.build"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.show_fortran_compilers": {
  "data": {
   "shadows": "numpy.distutils.command.config_compiler.show_fortran_compilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_py.build_py": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_py.build_py.find_modules": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py.find_modules",
    "filter",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.build_py.find_package_modules": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py.find_package_modules"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_py.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_py.old_build_py": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.build_scripts.build_scripts": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "distutils.command.build_scripts.build_scripts"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.build_scripts.build_scripts.generate_scripts": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "func",
    "list",
    "numpy.distutils.log.info",
    "numpy.distutils.misc_util.is_string"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.get_source_files": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_script_files"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.build_scripts.run": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "distutils.command.build_scripts.build_scripts.run"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.build_scripts.get_script_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_script_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.is_string": {
  "data": {
   "shadows": "numpy.distutils.misc_util.is_string"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.build_scripts.old_build_scripts": {
  "data": {
   "shadows": "distutils.command.build_scripts.build_scripts"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.config_compiler.Command": {
  "data": {
   "shadows": "distutils.core.Command"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.config_cc": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "distutils.core.Command"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_cc.finalize_options": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.initialize_options": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_cc.run": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "distutils.core.Command",
    "numpy.distutils.command.config_compiler.show_fortran_compilers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.config_compiler.config_fc.finalize_options": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "len",
    "numpy.distutils.log.info",
    "numpy.distutils.log.warn",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.initialize_options": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.config_fc.run": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "numpy.distutils.command.config_compiler.distutils.core": {
  "data": {
   "shadows": "distutils.core"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.log": {
  "data": {
   "shadows": "numpy.distutils.log"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.show_fcompilers": {
  "data": {
   "shadows": "numpy.distutils.fcompiler.show_fcompilers"
  },
  "type": "import"
 },
 "numpy.distutils.command.config_compiler.show_fortran_compilers": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.distutils.fcompiler.show_fcompilers"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.develop": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.develop.develop": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "__doc__",
    "setuptools.command.develop.develop",
    "setuptools.command.develop.develop.__doc__"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.develop.develop.install_for_development": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "setuptools.command.develop.develop.install_for_development"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.develop.old_develop": {
  "data": {
   "shadows": "setuptools.command.develop.develop"
  },
  "type": "import"
 },
 "numpy.distutils.command.distutils_all": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.distutils.command.egg_info": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.egg_info._egg_info": {
  "data": {
   "shadows": "setuptools.command.egg_info.egg_info"
  },
  "type": "import"
 },
 "numpy.distutils.command.egg_info.egg_info": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "setuptools.command.egg_info.egg_info"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.egg_info.egg_info.run": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "setuptools.command.egg_info.egg_info.run"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install": {
  "data": {
   "symbols_in_volume": [
    "distutils.command.install.install",
    "numpy.distutils.command.install.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.install.have_setuptools": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.command.install.install": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.distutils.command.install.old_install"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install.install.finalize_options": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.distutils.command.install.old_install"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install.install.run": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "distutils.file_util.write_file",
    "numpy.distutils.command.install.have_setuptools",
    "numpy.distutils.command.install.old_install",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install.install.setuptools_run": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "distutils.command.install._install.run",
    "numpy.distutils.command.install.sys"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install.old_install": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.distutils.command.install.old_install_mod": {
  "data": {
   "shadows": "distutils.command.install"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.install.write_file": {
  "data": {
   "shadows": "distutils.file_util.write_file"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.install_clib.Command": {
  "data": {
   "shadows": "distutils.core.Command"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.get_cmd": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_cmd"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.install_clib": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "distutils.core.Command"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install_clib.install_clib.finalize_options": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.get_outputs": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.initialize_options": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.install_clib.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "distutils.ccompiler.new_compiler",
    "numpy.distutils.command.install_clib.os",
    "numpy.distutils.misc_util.get_cmd"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install_clib.new_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.new_compiler"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_clib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.install_data.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.install_data.have_setuptools": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.distutils.command.install_data.install_data": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "distutils.command.install_data.install_data"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install_data.install_data.finalize_options": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "numpy.distutils.command.install_data.install_data.run": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "distutils.command.install_data.install_data.run",
    "numpy.distutils.command.install_data.have_setuptools"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install_data.old_install_data": {
  "data": {
   "shadows": "distutils.command.install_data.install_data"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_data.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.command.install_headers.install_headers": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "distutils.command.install_headers.install_headers"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.install_headers.install_headers.run": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "isinstance",
    "numpy.distutils.command.install_headers.os",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.install_headers.old_install_headers": {
  "data": {
   "shadows": "distutils.command.install_headers.install_headers"
  },
  "type": "import"
 },
 "numpy.distutils.command.install_headers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.command.sdist.sys"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.command.sdist.get_data_files": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_data_files"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.old_sdist": {
  "data": {
   "shadows": "distutils.command.sdist.sdist"
  },
  "type": "import"
 },
 "numpy.distutils.command.sdist.sdist": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "distutils.command.sdist.sdist"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.command.sdist.sdist.add_defaults": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "distutils.command.sdist.sdist.add_defaults",
    "isinstance",
    "numpy.distutils.misc_util.get_data_files",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.command.sdist.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.extension": {
  "data": {
   "symbols_in_volume": [
    "numpy.distutils.extension.re"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.extension.Extension": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "distutils.extension.Extension"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.extension.Extension.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "distutils.extension.Extension.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_cxx_sources": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.distutils.extension.cxx_ext_re",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension.Extension.has_f2py_sources": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.distutils.extension.fortran_pyf_ext_re"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.extension.__revision__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.distutils.extension.cxx_ext_re": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.distutils.extension.fortran_pyf_ext_re": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.distutils.extension.old_Extension": {
  "data": {
   "shadows": "distutils.extension.Extension"
  },
  "type": "import"
 },
 "numpy.distutils.extension.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.distutils.info": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.info.postpone_import": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.intelccompiler": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.IntelCCompiler.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "distutils.unixccompiler.UnixCCompiler.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.intelccompiler.IntelItaniumCCompiler": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "map",
    "numpy.distutils.exec_command.find_executable",
    "numpy.distutils.intelccompiler.IntelCCompiler"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.intelccompiler.UnixCCompiler": {
  "data": {
   "shadows": "distutils.unixccompiler.UnixCCompiler"
  },
  "type": "import"
 },
 "numpy.distutils.intelccompiler.find_executable": {
  "data": {
   "shadows": "numpy.distutils.exec_command.find_executable"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.numpy_distribution.Distribution": {
  "data": {
   "shadows": "distutils.core.Distribution"
  },
  "type": "import"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "distutils.core.Distribution"
   ]
  },
  "type": "class"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "distutils.core.Distribution.__init__"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.numpy_distribution.NumpyDistribution.has_scons_scripts": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.setupscons.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.setupscons.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "numpy.distutils.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.test": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.distutils.tests.f2py_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.f2py_ext.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.tests.f2py_ext.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.setup.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.TestFib2": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.TestFib2.test_fib": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "assert_array_equal",
    "f2py_ext.fib2.fib"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.fib2": {
  "data": {
   "shadows": "f2py_ext.fib2"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_ext.tests.test_fib2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.tests.f2py_f90_ext.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_f90_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.TestFoo": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.TestFoo.test_foo_free": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "assert_equal",
    "f2py_f90_ext.foo.foo_free.bar13"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.foo": {
  "data": {
   "shadows": "f2py_f90_ext.foo"
  },
  "type": "import"
 },
 "numpy.distutils.tests.f2py_f90_ext.tests.test_foo.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.gen_ext.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.tests.gen_ext.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.gen_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.configuration": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "numpy.distutils.tests.gen_ext.setup.source_func"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.gen_ext.setup.fib3_f": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.distutils.tests.gen_ext.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.setup.source_func": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "distutils.dep_util.newer",
    "numpy.distutils.tests.gen_ext.setup.fib3_f",
    "numpy.distutils.tests.gen_ext.setup.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.TestFib3": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.TestFib3.test_fib": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "assert_array_equal",
    "gen_ext.fib3.fib"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.fib3": {
  "data": {
   "shadows": "gen_ext.fib3"
  },
  "type": "import"
 },
 "numpy.distutils.tests.gen_ext.tests.test_fib3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.pyrex_ext.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.tests.pyrex_ext.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.pyrex_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.setup.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.pyrex_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.TestPrimes": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.TestPrimes.test_simple": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "assert_equal",
    "pyrex_ext.primes.primes"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.primes": {
  "data": {
   "shadows": "pyrex_ext.primes.primes"
  },
  "type": "import"
 },
 "numpy.distutils.tests.pyrex_ext.tests.test_primes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.tests.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.setup.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.distutils.tests.swig_ext.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.setup.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.TestExample": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.TestExample.test_cvar": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "assert_equal",
    "swig_ext.example.cvar.My_variable"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.TestExample.test_fact": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "assert_equal",
    "swig_ext.example.fact"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.example": {
  "data": {
   "shadows": "swig_ext.example"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.TestExample2": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.TestExample2.test_zoo": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "swig_ext.example2.Zoo"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.example2": {
  "data": {
   "shadows": "swig_ext.example2"
  },
  "type": "import"
 },
 "numpy.distutils.tests.swig_ext.tests.test_example2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_fcompiler_gnu": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_g77_version": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestG77Versions.test_not_g77": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGortranVersions": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGortranVersions.test_gfortran_version": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.TestGortranVersions.test_not_gfortran": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.g77_version_strings": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.gfortran_version_strings": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_fcompiler_gnu.numpy.distutils.fcompiler": {
  "data": {
   "shadows": "numpy.distutils.fcompiler"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config": {
  "data": {},
  "type": "module"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.read_config",
    "numpy.distutils.tests.test_npy_pkg_config.os",
    "numpy.distutils.tests.test_npy_pkg_config.simple",
    "numpy.distutils.tests.test_npy_pkg_config.simple_d",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestLibraryInfo.test_simple_variable": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.read_config",
    "numpy.distutils.tests.test_npy_pkg_config.os",
    "numpy.distutils.tests.test_npy_pkg_config.simple_variable",
    "numpy.distutils.tests.test_npy_pkg_config.simple_variable_d",
    "tempfile.mkstemp"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_cflags": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.parse_flags"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.TestParseFlags.test_simple_lflags": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.distutils.npy_pkg_config.parse_flags"
   ]
  },
  "type": "function"
 },
 "numpy.distutils.tests.test_npy_pkg_config.mkstemp": {
  "data": {
   "shadows": "tempfile.mkstemp"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.parse_flags": {
  "data": {
   "shadows": "numpy.distutils.npy_pkg_config.parse_flags"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.read_config": {
  "data": {
   "shadows": "numpy.distutils.npy_pkg_config.read_config"
  },
  "type": "import"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_d": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_variable": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.distutils.tests.test_npy_pkg_config.simple_variable_d": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.distutils.unixccompiler": {
  "data": {
   "shadows": "unixccompiler"
  },
  "type": "import"
 },
 "numpy.doc": {
  "data": {
   "symbols_in_volume": [
    "__import__",
    "__name__",
    "numpy.doc.__all__",
    "numpy.doc.os",
    "numpy.doc.ref_dir"
   ]
  },
  "type": "module"
 },
 "numpy.doc.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.doc.__doc__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.doc.basics": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.broadcasting": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.byteswapping": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.constants": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "dict",
    "numpy.doc.constants.add_newdoc",
    "numpy.doc.constants.constants",
    "numpy.doc.constants.constants_str",
    "numpy.doc.constants.lines",
    "numpy.doc.constants.m",
    "numpy.doc.constants.new_lines",
    "numpy.doc.constants.prev",
    "numpy.doc.constants.re",
    "numpy.doc.constants.s",
    "numpy.doc.constants.textwrap"
   ]
  },
  "type": "module"
 },
 "numpy.doc.constants.__doc__": {
  "data": {
   "lineno": 387
  },
  "type": "constant"
 },
 "numpy.doc.constants.add_newdoc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.doc.constants.constants"
   ]
  },
  "type": "function"
 },
 "numpy.doc.constants.constants": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.doc.constants.constants_str": {
  "data": {
   "lineno": 385
  },
  "type": "constant"
 },
 "numpy.doc.constants.lines": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "numpy.doc.constants.m": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "numpy.doc.constants.new_lines": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "numpy.doc.constants.prev": {
  "data": {
   "lineno": 376
  },
  "type": "constant"
 },
 "numpy.doc.constants.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.doc.constants.s": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "numpy.doc.constants.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "numpy.doc.creation": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.glossary": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.howtofind": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.indexing": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.internals": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.io": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.jargon": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.methods_vs_functions": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.misc": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.doc.performance": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.ref_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.doc.structured_arrays": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.subclassing": {
  "data": {},
  "type": "module"
 },
 "numpy.doc.ufuncs": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py": {
  "data": {
   "symbols_in_volume": [
    "numpy.f2py.f2py2e"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.f2py.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.f2py.__version__": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__svn_version__.version",
    "numpy.f2py.__version__.major",
    "numpy.f2py.__version__.version_info",
    "str"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.__version__.major": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.f2py.__version__.version": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.f2py.__version__.version_info": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules": {
  "data": {
   "symbols_in_volume": [
    "l_and",
    "l_not",
    "l_or",
    "numpy.f2py.cb_rules.__version__",
    "numpy.f2py.cb_rules.pprint",
    "numpy.f2py.cb_rules.sys",
    "throw_error"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.cb_rules.__version__": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.buildcallback": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "applyrules",
    "dictappend",
    "enumerate",
    "getargs",
    "isoptional",
    "isrequired",
    "numpy.f2py.cb_rules.capi_maps",
    "numpy.f2py.cb_rules.cb_arg_rules",
    "numpy.f2py.cb_rules.cb_map",
    "numpy.f2py.cb_rules.cb_rout_rules",
    "numpy.f2py.cb_rules.cb_routine_rules",
    "numpy.f2py.cb_rules.cfuncs",
    "numpy.f2py.cb_rules.outmess",
    "numpy.f2py.cb_rules.types",
    "replace",
    "stripcomma",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cb_rules.buildcallbacks": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "buildcallback",
    "numpy.f2py.cb_rules.cb_map",
    "numpy.f2py.cb_rules.errmess"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.cb_rules.capi_maps": {
  "data": {
   "shadows": "capi_maps"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.cb_arg_rules": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_map": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_rout_rules": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cb_routine_rules": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.cfuncs": {
  "data": {
   "shadows": "cfuncs"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.errmess": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.f2py_version": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.outmess": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.show": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.f2py.cb_rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.cb_rules.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.f2py.commands": {
  "data": {
   "shadows": "commands"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules": {
  "data": {
   "symbols_in_volume": [
    "numpy.f2py.common_rules.__version__",
    "numpy.f2py.common_rules.pprint",
    "numpy.f2py.common_rules.sys"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.common_rules.__version__": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.buildhooks": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cadd",
    "crackfortran.rmbadname",
    "dadd",
    "fadd",
    "hasnote",
    "iadd",
    "isintent_hide",
    "len",
    "map",
    "numpy.f2py.common_rules.capi_maps",
    "numpy.f2py.common_rules.findcommonblocks",
    "numpy.f2py.common_rules.func2subr",
    "numpy.f2py.common_rules.outmess",
    "type",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.cadd": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.dadd": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.fadd": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.buildhooks.iadd": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.capi_maps": {
  "data": {
   "shadows": "capi_maps"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.errmess": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.f2py_version": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.findcommonblocks": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "hasbody",
    "hascommon",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.common_rules.func2subr": {
  "data": {
   "shadows": "func2subr"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.outmess": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.rmbadname": {
  "data": {
   "shadows": "crackfortran.rmbadname"
  },
  "type": "import"
 },
 "numpy.f2py.common_rules.show": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.common_rules.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.compile": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "OSError",
    "numpy.distutils.exec_command.exec_command",
    "numpy.f2py.os",
    "numpy.f2py.sys",
    "numpy.f2py.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.docs.pytest": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.docs.pytest.Numeric": {
  "data": {
   "shadows": "Numeric"
  },
  "type": "import"
 },
 "numpy.f2py.docs.pytest.foo": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.f2py.docs.pytest.Numeric",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.docs.usersguide.setup_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.f2py.docs.usersguide.setup_example.ext1",
    "numpy.f2py.docs.usersguide.setup_example.ext2",
    "numpy_distutils.core.Extension",
    "numpy_distutils.core.setup"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.docs.usersguide.setup_example.Extension": {
  "data": {
   "shadows": "numpy_distutils.core.Extension"
  },
  "type": "import"
 },
 "numpy.f2py.docs.usersguide.setup_example.ext1": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.f2py.docs.usersguide.setup_example.ext2": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.f2py.docs.usersguide.setup_example.setup": {
  "data": {
   "shadows": "numpy_distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.f2py.exec_command": {
  "data": {
   "shadows": "numpy.distutils.exec_command.exec_command"
  },
  "type": "import"
 },
 "numpy.f2py.f2py2e": {
  "data": {
   "shadows": "f2py2e"
  },
  "type": "import"
 },
 "numpy.f2py.f2py_testing": {
  "data": {
   "shadows": "f2py_testing"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr": {
  "data": {
   "symbols_in_volume": [
    "numpy.f2py.func2subr.pprint",
    "numpy.f2py.func2subr.sys"
   ]
  },
  "type": "module"
 },
 "numpy.f2py.func2subr.__version__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.assubr": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "getfortranname",
    "isfunction_wrap",
    "isintent_out",
    "numpy.f2py.func2subr.copy",
    "numpy.f2py.func2subr.createfuncwrapper",
    "numpy.f2py.func2subr.outmess"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.createfuncwrapper": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "add",
    "getfortranname",
    "isexternal",
    "isfunction",
    "islogicalfunction",
    "ismoduleroutine",
    "isscalar",
    "numpy.f2py.func2subr.var2fixfortran",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.createfuncwrapper.add": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "numpy.f2py.func2subr.errmess": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.f2py_version": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.outmess": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.pprint": {
  "data": {
   "shadows": "pprint"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.show": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.f2py.func2subr.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.func2subr.var2fixfortran": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.f2py.func2subr.outmess",
    "numpy.f2py.func2subr.show",
    "vars"
   ]
  },
  "type": "function"
 },
 "numpy.f2py.info": {
  "data": {},
  "type": "module"
 },
 "numpy.f2py.info.postpone_import": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.f2py.main": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.f2py.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.f2py.run_main": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.f2py.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.f2py.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.fft": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.fft.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.fft.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.fft.bench": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.fft.helper": {
  "data": {},
  "type": "module"
 },
 "numpy.fft.helper.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.fft.helper.arange": {
  "data": {
   "shadows": "numpy.core.arange"
  },
  "type": "import"
 },
 "numpy.fft.helper.asarray": {
  "data": {
   "shadows": "numpy.core.asarray"
  },
  "type": "import"
 },
 "numpy.fft.helper.concatenate": {
  "data": {
   "shadows": "numpy.core.concatenate"
  },
  "type": "import"
 },
 "numpy.fft.helper.empty": {
  "data": {
   "shadows": "numpy.core.empty"
  },
  "type": "import"
 },
 "numpy.fft.helper.fftfreq": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.core.arange",
    "numpy.core.empty",
    "numpy.core.integer",
    "numpy.fft.helper.types"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.fftshift": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "numpy.core.arange",
    "numpy.core.asarray",
    "numpy.core.concatenate",
    "numpy.core.take",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.ifftshift": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "numpy.core.arange",
    "numpy.core.asarray",
    "numpy.core.concatenate",
    "numpy.core.take",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.fft.helper.integer": {
  "data": {
   "shadows": "numpy.core.integer"
  },
  "type": "import"
 },
 "numpy.fft.helper.take": {
  "data": {
   "shadows": "numpy.core.take"
  },
  "type": "import"
 },
 "numpy.fft.helper.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.fft.info": {
  "data": {},
  "type": "module"
 },
 "numpy.fft.info.depends": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "numpy.fft.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.fft.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.fft.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.fft.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.fft.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.fft.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.fft.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.fft.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.fft.setupscons.configuration": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.fft.setupscons.get_numpy_include_dirs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_numpy_include_dirs"
  },
  "type": "import"
 },
 "numpy.fft.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.fft.test": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.fft.tests.test_fftpack": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFT1D.test_basic": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.fft.fft",
    "numpy.fft.tests.test_fftpack.fft1",
    "numpy.random.random",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.TestFFTShift": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.fft.tests.test_fftpack.TestFFTShift.test_fft_n": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "numpy.fft.fft"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.fft1": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange",
    "numpy.exp",
    "numpy.pi",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_fftpack.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTFreq.test_definition": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.fft.fftfreq",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_definition": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.fft.fftshift",
    "numpy.fft.ifftshift"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.TestFFTShift.test_inverse": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.fft.fftshift",
    "numpy.fft.ifftshift",
    "numpy.fft.tests.test_helper.random"
   ]
  },
  "type": "function"
 },
 "numpy.fft.tests.test_helper.fftfreq": {
  "data": {
   "shadows": "numpy.fft.fftfreq"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.fftshift": {
  "data": {
   "shadows": "numpy.fft.fftshift"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.ifftshift": {
  "data": {
   "shadows": "numpy.fft.ifftshift"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.fft.tests.test_helper.random": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib": {
  "data": {
   "symbols_in_volume": [
    "numpy.lib.__all__",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.lib.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.lib.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.lib.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.lib.__version__": {
  "data": {
   "shadows": "numpy.version.version"
  },
  "type": "import"
 },
 "numpy.lib._iotools": {
  "data": {},
  "type": "module"
 },
 "numpy.lib._iotools.ConversionWarning": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.ConverterError": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.ConverterLockError": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.lib._iotools.ConverterError"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter": {
  "data": {
   "lineno": 124
  },
  "type": "class"
 },
 "numpy.lib._iotools.LineSplitter.__call__": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "__builtin__.int",
    "hasattr",
    "list",
    "numpy.cumsum",
    "numpy.lib._iotools._is_string_like",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._delimited_splitter": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._fixedwidth_splitter": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter._variablewidth_splitter": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "numpy.lib._iotools.LineSplitter.autostrip": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "input",
    "method"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.NameValidator.__call__": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.NameValidator.validate": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "case_converter",
    "dict",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "__builtin__.complex",
    "__builtin__.float",
    "__builtin__.int",
    "__builtin__.str",
    "numpy.core.numeric.bool_",
    "numpy.core.numeric.floating",
    "numpy.core.numeric.integer",
    "numpy.core.numeric.nan",
    "numpy.core.numeric.string_",
    "numpy.lib._iotools.str2bool",
    "zip"
   ]
  },
  "type": "class"
 },
 "numpy.lib._iotools.StringConverter.__call__": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.__init__": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "__builtin__.bool",
    "__builtin__.float",
    "__builtin__.int",
    "enumerate",
    "hasattr",
    "isinstance",
    "list",
    "numpy.bool",
    "numpy.dtype",
    "numpy.issubdtype",
    "numpy.lib._iotools.str2bool",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._getsubdtype": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "classmethod",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._loose_call": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter._strict_call": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.iterupgrade": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "map",
    "numpy.lib._iotools.ConverterError",
    "numpy.lib._iotools.ConverterLockError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.update": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "func",
    "hasattr",
    "numpy.lib._iotools._is_string_like"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.lib._iotools.ConverterError",
    "numpy.lib._iotools.ConverterLockError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.StringConverter.upgrade_mapper": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.__docformat__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.lib._iotools._is_string_like": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "TypeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools._to_filehandle": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "file",
    "hasattr",
    "numpy.lib._iotools._is_string_like",
    "numpy.lib._iotools.bz2",
    "numpy.lib._iotools.gzip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.bool": {
  "data": {
   "shadows": "__builtin__.bool"
  },
  "type": "import"
 },
 "numpy.lib._iotools.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "numpy.lib._iotools.complex": {
  "data": {
   "shadows": "__builtin__.complex"
  },
  "type": "import"
 },
 "numpy.lib._iotools.easy_dtype": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "len",
    "numpy.dtype",
    "numpy.lib._iotools.NameValidator",
    "range",
    "tuple",
    "validate",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.flatten_dtype": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "__builtin__.int",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.float": {
  "data": {
   "shadows": "__builtin__.float"
  },
  "type": "import"
 },
 "numpy.lib._iotools.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "numpy.lib._iotools.has_nested_fields": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "numpy.lib._iotools.int": {
  "data": {
   "shadows": "__builtin__.int"
  },
  "type": "import"
 },
 "numpy.lib._iotools.long": {
  "data": {
   "shadows": "__builtin__.long"
  },
  "type": "import"
 },
 "numpy.lib._iotools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib._iotools.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib._iotools.object": {
  "data": {
   "shadows": "__builtin__.object"
  },
  "type": "import"
 },
 "numpy.lib._iotools.str": {
  "data": {
   "shadows": "__builtin__.str"
  },
  "type": "import"
 },
 "numpy.lib._iotools.str2bool": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "numpy.lib._iotools.unicode": {
  "data": {
   "shadows": "__builtin__.unicode"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arraysetops.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.lib.arraysetops.deprecate": {
  "data": {
   "shadows": "numpy.lib.utils.deprecate"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.ediff1d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "numpy.asanyarray",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.in1d": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.intersect1d": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.intersect1d_nu": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique1d",
    "numpy.lib.utils.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.arraysetops.setdiff1d": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.lib.arraysetops.in1d",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.setmember1d": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.lib.utils.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.setxor1d": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.union1d": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.lib.arraysetops.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.unique": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.empty",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.unique1d": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.lib.arraysetops.warnings",
    "numpy.lib.utils.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arraysetops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.arrayterator.Arrayterator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.arrayterator.Arrayterator.__array__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getattr__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__getitem__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Ellipsis",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "min",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.__iter__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "min",
    "operator.mul",
    "range",
    "reduce",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.flat": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.Arrayterator.shape": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "property",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.arrayterator.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.lib.arrayterator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.lib.arrayterator.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "numpy.lib.bench": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "numpy.lib.emath": {
  "data": {
   "shadows": "scimath"
  },
  "type": "import"
 },
 "numpy.lib.financial": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.financial.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.lib.financial._convert_when": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError",
    "numpy.lib.financial._when_to_num"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial._g_div_gp": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "numpy.lib.financial._when_to_num": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "numpy.lib.financial.fv": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "map",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.lib.financial._convert_when",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.ipmt": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.irr": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "numpy.lib.financial.rate",
    "numpy.nan",
    "numpy.roots"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.mirr": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.asarray",
    "numpy.double",
    "numpy.lib.financial.npv",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.financial.nper": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "map",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.pmt",
    "numpy.log",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.npv": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.lib.financial.rate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.pmt": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "map",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial.fv",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.ppmt": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "numpy.lib.financial.fv",
    "numpy.lib.financial.ipmt",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.pv": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "map",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.financial.rate": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "abs",
    "iter",
    "map",
    "numpy.all",
    "numpy.asarray",
    "numpy.lib.financial._convert_when",
    "numpy.lib.financial._g_div_gp",
    "numpy.lib.financial.fv",
    "numpy.lib.financial.nper",
    "numpy.lib.financial.pmt",
    "numpy.lib.financial.pv",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.info": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.info.depends": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "numpy.lib.info.global_symbols": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "numpy.lib.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions": {
  "data": {
   "symbols_in_volume": [
    "numpy.ma.core._check_fill_value"
   ]
  },
  "type": "module"
 },
 "numpy.lib.recfunctions.MaskedArray": {
  "data": {
   "shadows": "numpy.ma.MaskedArray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.lib.recfunctions._check_fill_value": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.lib.recfunctions._fix_defaults": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._fix_output": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ma.filled",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._is_string_like": {
  "data": {
   "shadows": "numpy.lib._iotools._is_string_like"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions._izip_fields": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "numpy.void",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions._izip_fields_flat": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "isinstance",
    "numpy.void",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.append_fields": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.merge_arrays",
    "numpy.lib.recfunctions.recursive_fill_fields",
    "numpy.ma.masked_all",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.drop_fields": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "_drop_descr",
    "numpy.empty",
    "numpy.lib._iotools._is_string_like",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.recursive_fill_fields",
    "set"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.drop_fields._drop_descr": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "_drop_descr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.find_duplicates": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.concatenate",
    "numpy.lib.recfunctions.get_fieldstructure"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.flatten_descr": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_fieldstructure": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.get_names_flat": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.iterchain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.iterizip": {
  "data": {
   "shadows": "itertools.izip"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.iterrepeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.izip_records": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "IndexError",
    "itertools.chain",
    "itertools.izip",
    "itertools.repeat",
    "numpy.lib.recfunctions._izip_fields",
    "numpy.lib.recfunctions._izip_fields_flat",
    "sentinel",
    "tuple",
    "zipfunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.izip_records.sentinel": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "counter",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.join_by": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.concatenate",
    "numpy.lib.recfunctions._fix_defaults",
    "numpy.lib.recfunctions._fix_output",
    "numpy.lib.recfunctions.drop_fields",
    "numpy.ma.concatenate",
    "numpy.ma.masked_all",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.merge_arrays": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "itertools.chain",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.fromiter",
    "numpy.lib.recfunctions._check_fill_value",
    "numpy.lib.recfunctions.izip_records",
    "numpy.lib.recfunctions.zip_descr",
    "numpy.ma.MaskedArray",
    "numpy.ma.array",
    "numpy.ma.getdata",
    "numpy.ma.getmaskarray",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.ones",
    "numpy.ndarray",
    "numpy.recarray",
    "numpy.void",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.rec_append_fields": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.append_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_drop_fields": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "numpy.lib.recfunctions.drop_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rec_join": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "dict",
    "numpy.lib.recfunctions.join_by"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.lib.recfunctions.recursive_fill_fields": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "input",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "_recursive_rename_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.rename_fields._recursive_rename_fields": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "_recursive_rename_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.stack_arrays": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.asanyarray",
    "numpy.cumsum",
    "numpy.dtype",
    "numpy.lib.recfunctions._fix_defaults",
    "numpy.lib.recfunctions._fix_output",
    "numpy.ma.concatenate",
    "numpy.ma.masked_all",
    "numpy.ndarray",
    "numpy.r_",
    "numpy.sum",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.recfunctions.zip_descr": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.lib.recfunctions.flatten_descr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.numeric.log"
   ]
  },
  "type": "module"
 },
 "numpy.lib.scimath.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.lib.scimath._fix_int_lt_zero": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.core.numeric.any",
    "numpy.core.numeric.asarray",
    "numpy.lib.type_check.isreal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_abs_gt_1": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "abs",
    "numpy.core.numeric.any",
    "numpy.core.numeric.asarray",
    "numpy.lib.scimath._tocomplex",
    "numpy.lib.type_check.isreal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath._fix_real_lt_zero": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.core.numeric.any",
    "numpy.core.numeric.asarray",
    "numpy.lib.scimath._tocomplex",
    "numpy.lib.type_check.isreal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath._ln2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "numpy.lib.scimath._tocomplex": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "issubclass",
    "numpy.core.numerictypes.byte",
    "numpy.core.numerictypes.cdouble",
    "numpy.core.numerictypes.csingle",
    "numpy.core.numerictypes.short",
    "numpy.core.numerictypes.single",
    "numpy.core.numerictypes.ubyte",
    "numpy.core.numerictypes.ushort"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.any": {
  "data": {
   "shadows": "numpy.core.numeric.any"
  },
  "type": "import"
 },
 "numpy.lib.scimath.arccos": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "numpy.core.numeric.arccos",
    "numpy.lib.scimath._fix_real_abs_gt_1"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.arcsin": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.core.numeric.arcsin",
    "numpy.lib.scimath._fix_real_abs_gt_1"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.arctanh": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.core.numeric.arctanh",
    "numpy.lib.scimath._fix_real_abs_gt_1"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.asarray": {
  "data": {
   "shadows": "numpy.core.numeric.asarray"
  },
  "type": "import"
 },
 "numpy.lib.scimath.isreal": {
  "data": {
   "shadows": "numpy.lib.type_check.isreal"
  },
  "type": "import"
 },
 "numpy.lib.scimath.log": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.core.numeric.log",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.log10": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.core.numeric.log10",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.log2": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.core.numeric.log2",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.logn": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.core.numeric.log",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.nt": {
  "data": {
   "shadows": "numpy.core.numerictypes"
  },
  "type": "import"
 },
 "numpy.lib.scimath.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.lib.scimath.power": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.core.numeric.power",
    "numpy.lib.scimath._fix_int_lt_zero",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.scimath.sqrt": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.core.numeric.sqrt",
    "numpy.lib.scimath._fix_real_lt_zero"
   ]
  },
  "type": "function"
 },
 "numpy.lib.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.lib.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.lib.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.lib.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.lib.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.lib.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.lib.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.lib.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.lib.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.lib.setupscons.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.lib.setupscons.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.lib.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.lib.stride_tricks": {
  "data": {},
  "type": "module"
 },
 "numpy.lib.stride_tricks.DummyArray": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.lib.stride_tricks.DummyArray.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.lib.stride_tricks.as_strided": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dict",
    "numpy.asarray",
    "numpy.lib.stride_tricks.DummyArray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.broadcast_arrays": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "map",
    "max",
    "numpy.asarray",
    "numpy.lib.stride_tricks.as_strided",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.test": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_arraysetops": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arraysetops.TestAso": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_ediff1d": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_array_equal",
    "ediff1d",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_in1d": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "assert_array_equal",
    "in1d",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_in1d_char_array": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "assert_array_equal",
    "in1d",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_intersect1d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_array_equal",
    "intersect1d",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_intersect1d_nu": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Warning",
    "assert_array_equal",
    "intersect1d_nu",
    "numpy.array",
    "numpy.lib.tests.test_arraysetops.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_manyways": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "assert_array_equal",
    "intersect1d",
    "numpy.array",
    "setdiff1d",
    "setxor1d",
    "union1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_setdiff1d": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.array",
    "setdiff1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_setdiff1d_char_array": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "setdiff1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_setmember1d": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Warning",
    "assert_array_equal",
    "numpy.array",
    "numpy.lib.tests.test_arraysetops.warnings",
    "setmember1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_setxor1d": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "setxor1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_union1d": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "union1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.TestAso.test_unique": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Warning",
    "assert_array_equal",
    "numpy.array",
    "numpy.lib.tests.test_arraysetops.warnings",
    "unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_arraysetops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arraysetops.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_arrayterator.Arrayterator": {
  "data": {
   "shadows": "numpy.lib.Arrayterator"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.randint": {
  "data": {
   "shadows": "numpy.random.randint"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_arrayterator.test": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.lib.Arrayterator",
    "numpy.random.randint",
    "numpy.random.seed",
    "operator.mul",
    "range",
    "reduce",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_financial.TestFinancial": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_fv": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.fv"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_irr": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.irr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_mirr": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "assert_",
    "assert_almost_equal",
    "numpy.isnan",
    "numpy.mirr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_nper": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.nper"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_npv": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.npv"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pmt": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.pmt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_pv": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.pv"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.TestFinancial.test_rate": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.rate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_financial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_financial.test_unimplemented": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_raises",
    "numpy.ipmt",
    "numpy.ppmt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.lib.tests.test_format.NbufferT",
    "numpy.lib.tests.test_format.Ndescr",
    "numpy.lib.tests.test_format.PbufferT",
    "numpy.lib.tests.test_format.Pdescr",
    "numpy.lib.tests.test_format.basic",
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.dtype",
    "numpy.lib.tests.test_format.scalars",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "object",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_format.NbufferT": {
  "data": {
   "lineno": 391
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.Ndescr": {
  "data": {
   "lineno": 372
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.PbufferT": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.Pdescr": {
  "data": {
   "lineno": 347
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.StringIO": {
  "data": {
   "shadows": "cStringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.assert_equal": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.bad_version_magic": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.basic": {
  "data": {
   "lineno": 323
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.basic_arrays": {
  "data": {
   "lineno": 319
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.dtype": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.format": {
  "data": {
   "shadows": "numpy.lib.format"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.malformed_magic": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.record_arrays": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.roundtrip": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "cStringIO.StringIO",
    "numpy.lib.format.read_array",
    "numpy.lib.format.write_array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.scalars": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.setup_module": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.tempdir",
    "numpy.lib.tests.test_format.tempfile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.teardown_module": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.shutil",
    "numpy.lib.tests.test_format.tempdir"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.tempdir": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_format.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_format.test_bad_header": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "cStringIO.StringIO",
    "numpy.lib.format.read_array_header_1_0",
    "numpy.lib.format.write_array_header_1_0"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_bad_magic_args": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "numpy.lib.format.magic"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_large_header": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "cStringIO.StringIO",
    "numpy.lib.format.write_array_header_1_0"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_memmap_roundtrip": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "numpy.lib.format.open_memmap",
    "numpy.lib.format.write_array",
    "numpy.lib.tests.test_format.assert_equal",
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.os",
    "numpy.lib.tests.test_format.record_arrays",
    "numpy.lib.tests.test_format.sys",
    "numpy.lib.tests.test_format.tempdir",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_magic_bad_magic": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ValueError",
    "cStringIO.StringIO",
    "numpy.lib.format.read_magic",
    "numpy.lib.tests.test_format.malformed_magic",
    "raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_read_version_1_0_bad_magic": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ValueError",
    "cStringIO.StringIO",
    "numpy.lib.format.read_array",
    "numpy.lib.tests.test_format.bad_version_magic",
    "numpy.lib.tests.test_format.malformed_magic",
    "raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_roundtrip": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.lib.tests.test_format.basic_arrays",
    "numpy.lib.tests.test_format.record_arrays",
    "numpy.lib.tests.test_format.roundtrip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_format.test_write_version_1_0": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "cStringIO.StringIO",
    "numpy.arange",
    "numpy.lib.format.write_array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_function_base.TestAll": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_basic": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "all",
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAll.test_nd": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "all",
    "alltrue",
    "assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmax": {
  "data": {
   "lineno": 144
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmax.test_basic": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "amax",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAmin": {
  "data": {
   "lineno": 154
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAmin.test_basic": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "amin",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAngle": {
  "data": {
   "lineno": 267
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAngle.test_basic": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "angle",
    "arctan",
    "array",
    "assert_array_almost_equal",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_basic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAny.test_nd": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "any",
    "assert_array_equal",
    "sometrue"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_basic": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "assert_array_equal",
    "average",
    "numpy.matrix",
    "ones",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_returned": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "assert_equal",
    "average"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestAverage.test_weights": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_almost_equal",
    "assert_array_equal",
    "assert_equal",
    "average"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite": {
  "data": {
   "lineno": 640
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCheckFinite.test_simple": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef": {
  "data": {
   "lineno": 727
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCorrCoef.test_simple": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "corrcoef"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumprod": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumprod.test_basic": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ArithmeticError",
    "array",
    "assert_array_equal",
    "cumprod"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestCumsum": {
  "data": {
   "lineno": 174
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestCumsum.test_basic": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "cumsum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_basic": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "diff"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDiff.test_nd": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "assert_array_equal",
    "diff",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize": {
  "data": {
   "lineno": 338
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_forward": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "arange",
    "assert_array_equal",
    "digitize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_random": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "all",
    "bin",
    "digitize",
    "linspace",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestDigitize.test_reverse": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "arange",
    "assert_array_equal",
    "digitize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins": {
  "data": {
   "lineno": 295
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_basic": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "extract"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_both": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "assert_array_equal",
    "extract",
    "place",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestExtins.test_place": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "place"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows": {
  "data": {
   "lineno": 362
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_bartlett": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_array_almost_equal",
    "bartlett",
    "flipud",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_blackman": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_array_almost_equal",
    "blackman",
    "flipud",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hamming": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_array_almost_equal",
    "flipud",
    "hamming",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestFilterwindows.test_hanning": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_array_almost_equal",
    "flipud",
    "hanning",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient": {
  "data": {
   "lineno": 254
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_badargs": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "SyntaxError",
    "array",
    "assert_raises",
    "gradient"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestGradient.test_basic": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "gradient"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram": {
  "data": {
   "lineno": 443
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.setUp": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.lib.tests.test_function_base.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.tearDown": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "numpy.lib.tests.test_function_base.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_normed": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "assert_almost_equal",
    "diff",
    "histogram",
    "rand",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_one_bin": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "assert_array_equal",
    "histogram"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_outliers": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "diff",
    "histogram"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_simple": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "histogram",
    "linspace",
    "rand",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_simple_old": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "histogram",
    "linspace",
    "rand",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_type": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "arange",
    "float",
    "histogram",
    "int",
    "issubdtype",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogram.test_weights": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_array_almost_equal",
    "assert_array_equal",
    "concatenate",
    "histogram",
    "linspace",
    "ones",
    "rand",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd": {
  "data": {
   "lineno": 557
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_identical_samples": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "histogramdd",
    "int",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_shape_3d": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "histogramdd",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_shape_4d": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "histogramdd",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_simple": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "all",
    "arange",
    "array",
    "asarray",
    "assert_array_almost_equal",
    "assert_array_equal",
    "histogramdd",
    "range",
    "split",
    "squeeze",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestHistogramdd.test_weights": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "assert_array_equal",
    "histogramdd",
    "int",
    "ones",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestInsert": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestInsert.test_basic": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "assert_equal",
    "insert"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser": {
  "data": {
   "lineno": 773
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_int_beta": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "kaiser"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestKaiser.test_simple": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "isfinite",
    "kaiser"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid": {
  "data": {
   "lineno": 798
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMeshgrid.test_simple": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "all",
    "array",
    "meshgrid"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestMsort": {
  "data": {
   "lineno": 788
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestMsort.test_simple": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "msort"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts": {
  "data": {
   "lineno": 649
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts.setUp": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts.test_nanargmin": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "nanargmin"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts.test_nanmax": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "nanmax"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts.test_nanmin": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "nanmin"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts.test_nanmin_allnan_on_axis": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "assert_array_equal",
    "isnan",
    "nanmin"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestNaNFuncts.test_nansum": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "nansum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise": {
  "data": {
   "lineno": 811
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_0d": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "array",
    "piecewise"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_default": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "assert_array_equal",
    "piecewise"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPiecewise.test_simple": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "piecewise"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestProd": {
  "data": {
   "lineno": 190
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestProd.test_basic": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ArithmeticError",
    "array",
    "assert_array_equal",
    "assert_equal",
    "prod"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestPtp": {
  "data": {
   "lineno": 164
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestPtp.test_basic": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "assert_equal",
    "ptp"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSelect._select": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSelect.test_basic": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "assert_equal",
    "len",
    "select"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestSinc": {
  "data": {
   "lineno": 436
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestSinc.test_simple": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "flipud",
    "linspace",
    "sinc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz": {
  "data": {
   "lineno": 392
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_ndim": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "assert_almost_equal",
    "linspace",
    "ones_like",
    "trapz"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrapz.test_simple": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "arange",
    "assert_almost_equal",
    "exp",
    "sqrt",
    "sum",
    "trapz"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros": {
  "data": {
   "lineno": 278
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_basic": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "trim_zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_leading_skip": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "trim_zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestTrimZeros.test_trailing_skip": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "trim_zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnique": {
  "data": {
   "lineno": 629
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnique.test_simple": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "all",
    "array",
    "unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap": {
  "data": {
   "lineno": 354
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestUnwrap.test_simple": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "all",
    "assert_array_equal",
    "diff",
    "rand",
    "unwrap"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize": {
  "data": {
   "lineno": 313
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_large": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "assert_array_equal",
    "f",
    "linspace",
    "vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "assert_array_equal",
    "f",
    "vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_scalar.addsubtract": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "assert_array_equal",
    "f",
    "vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.TestVectorize.test_simple.addsubtract": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.Test_i0": {
  "data": {
   "lineno": 755
  },
  "type": "class"
 },
 "numpy.lib.tests.test_function_base.Test_i0.test_simple": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "i0"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.compare_results": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_function_base.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.numpy.lib": {
  "data": {
   "shadows": "numpy.lib"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_function_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_1d": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.ones",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_2d": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.r_",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_mixed_type": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestConcatenator.test_more_mixed_type": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_basic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_linspace_equivalence": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_array_almost_equal",
    "numpy.linspace",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestGrid.test_nd": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "assert_array_equal",
    "numpy.mgrid",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestNdenumerate.test_basic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_equal",
    "list",
    "numpy.array",
    "numpy.ndenumerate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.TestUnravelIndex": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.lib.tests.test_index_tricks.TestUnravelIndex.test_basic": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.diag_indices": {
  "data": {
   "shadows": "numpy.diag_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.diag_indices_from": {
  "data": {
   "shadows": "numpy.diag_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.fill_diagonal": {
  "data": {
   "shadows": "numpy.fill_diagonal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.mgrid": {
  "data": {
   "shadows": "numpy.mgrid"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ndenumerate": {
  "data": {
   "shadows": "numpy.ndenumerate"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_array_equal",
    "int",
    "numpy.array",
    "numpy.diag_indices",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_diag_indices_from": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.diag_indices_from",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.test_fill_diagonal": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "int",
    "numpy.array",
    "numpy.fill_diagonal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_index_tricks.unravel_index": {
  "data": {
   "shadows": "numpy.unravel_index"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.where": {
  "data": {
   "shadows": "numpy.where"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_index_tricks.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_polynomial.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_polynomial.TestDocs": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_complex": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_doctests": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "rundocs"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_integ_coeffs": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_objects": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "decimal.Decimal",
    "numpy.issubdtype",
    "numpy.object_",
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_polyfit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.array",
    "numpy.concatenate",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.polyfit",
    "numpy.polyval"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_roots": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.roots"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.TestDocs.test_str_leading_zeros": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.poly1d",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.lib.recfunctions.get_names",
    "numpy.lib.recfunctions.get_names_flat",
    "numpy.lib.recfunctions.zip_descr",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_recfunctions.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields": {
  "data": {
   "lineno": 331
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.setUp": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_double": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "append_fields",
    "assert_equal",
    "int",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_flex": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "append_fields",
    "assert_equal",
    "float",
    "int",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_on_nested": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "append_fields",
    "assert_equal",
    "float",
    "int",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestAppendFields.test_append_single": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "append_fields",
    "assert_equal",
    "int",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy": {
  "data": {
   "lineno": 533
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestJoinBy.test_base": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "join_by",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays": {
  "data": {
   "lineno": 216
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.setUp": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "merge_arrays",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_flatten_wflexible": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "merge_arrays",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "merge_arrays",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_solo_w_flatten": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "merge_arrays",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_standard": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "merge_arrays",
    "numpy.array",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_shorter_flex": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "float",
    "int",
    "merge_arrays",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_w_singlefield": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "merge_arrays",
    "numpy.array",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestMergeArrays.test_wmasked_arrays": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "isinstance",
    "merge_arrays",
    "numpy.ma.array",
    "numpy.ma.mrecords.MaskedRecords"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_drop_fields": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "assert_equal",
    "drop_fields",
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "assert_equal",
    "find_duplicates",
    "float",
    "int",
    "numpy.ma.array",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_find_duplicates_ignoremask": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "assert_equal",
    "find_duplicates",
    "int",
    "numpy.ma.array",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_fieldstructure": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "get_fieldstructure",
    "int",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_recfunctions.get_names"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_get_names_flat": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_recfunctions.get_names_flat"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_rename_fields": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.array",
    "rename_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecFunctions.test_zip_descr": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.dtype",
    "numpy.lib.tests.test_recfunctions.zip_descr"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields": {
  "data": {
   "lineno": 189
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_masked_flexible": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.ma.array",
    "numpy.ma.zeros",
    "recursive_fill_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestRecursiveFillFields.test_simple_flexible": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.array",
    "numpy.zeros",
    "recursive_fill_fields"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.setUp": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_autoconversion": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "assert_equal",
    "bool",
    "float",
    "int",
    "numpy.ma.array",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_checktitles": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "float",
    "int",
    "numpy.ma.array",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_defaults": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "numpy.array",
    "numpy.ma.array",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_matching_named_fields": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.array",
    "numpy.ma.array",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_solo": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "assert_equal",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_and_named_fields": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.ma.array",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.TestStackArrays.test_unnamed_fields": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "stack_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_recfunctions.get_names": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_recfunctions.get_names_flat": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_recfunctions.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_recfunctions.zip_descr": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_asfarray_none": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.asfarray",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_cov_parameters": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.cov",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_hist_bins_as_list": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Warning",
    "assert_array_equal",
    "numpy.histogram",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.lib.tests.test_regression.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_histogramdd_too_many_bins": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "numpy.histogramdd",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.dtype",
    "numpy.intp",
    "numpy.lib.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.ix_",
    "numpy.ones",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_large_fancy_indexing.dp2": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.ix_",
    "numpy.ones",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_digitize": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.digitize",
    "numpy.lib.tests.test_regression.rlevel",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_insert": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.lib.place",
    "numpy.lib.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_polymul": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.polymul"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_string_concat": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.array",
    "numpy.lib.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mem_vectorise": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.vectorize",
    "numpy.zeros",
    "vt"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_mgrid_single_element": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_ndenumerate_crash": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ndenumerate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly1d_nan_roots": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "getattr",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.linalg.LinAlgError",
    "numpy.nan",
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_div": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.poly1d",
    "numpy.polydiv"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_poly_eq": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.poly1d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polydiv_type": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "assert_",
    "numpy.complex",
    "numpy.float",
    "numpy.int",
    "numpy.ones",
    "numpy.polydiv"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyfit_build": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.polyfit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_polyint_type": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "assert_",
    "numpy.complex",
    "numpy.float",
    "numpy.int",
    "numpy.ones",
    "numpy.polyint"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.testing.utils._assert_valid_refcount",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_refcount_vectorize.p": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_unique_zero_sized": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_void_coercion": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.r_.dtype",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression.TestRegression.test_who_with_0dim_array": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.lib.tests.test_regression.os",
    "numpy.lib.tests.test_regression.rlevel",
    "numpy.lib.tests.test_regression.sys",
    "numpy.who",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_regression._assert_valid_refcount": {
  "data": {
   "shadows": "numpy.testing.utils._assert_valid_refcount"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.rlevel": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_regression.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_shape_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_3d": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "apply_along_axis",
    "arange",
    "assert_array_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_simple": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "apply_along_axis",
    "assert_array_equal",
    "len",
    "ones",
    "shape"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyAlongAxis.test_simple101": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "apply_along_axis",
    "assert_array_equal",
    "len",
    "ones",
    "shape"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestApplyOverAxes": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestApplyOverAxes.test_simple": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "apply_over_axes",
    "arange",
    "array",
    "assert_array_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_index_split_high_bound": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "arange",
    "array",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_index_split_low_bound": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "arange",
    "array",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_index_split_simple": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "arange",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_0_split": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "arange",
    "array_split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "arange",
    "array",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_cols": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "arange",
    "array",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_default": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "arange",
    "array",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestArraySplit.test_integer_split_2D_rows": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "arange",
    "array",
    "array_split",
    "compare_results"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_2D_array": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "dsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDsplit.test_3D_array": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "array",
    "compare_results",
    "dsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack": {
  "data": {
   "lineno": 157
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_0D_array": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "dstack"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_1D_array": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "dstack"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_2D_array": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "dstack"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestDstack.test_2D_array2": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "dstack"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit": {
  "data": {
   "lineno": 185
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_0D_array": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "hsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_1D_array": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "array",
    "compare_results",
    "hsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestHsplit.test_2D_array": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "array",
    "compare_results",
    "hsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestKron": {
  "data": {
   "lineno": 262
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestKron.test_return_type": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "assert_equal",
    "kron",
    "myarray",
    "numpy.asmatrix",
    "numpy.matrix",
    "ones",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestKron.test_return_type.myarray": {
  "data": {
   "lineno": 270
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestSplit": {
  "data": {
   "lineno": 137
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestSplit.test_equal_split": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "arange",
    "compare_results",
    "split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestSplit.test_unequal_split": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "arange",
    "split"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestSqueeze": {
  "data": {
   "lineno": 252
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestSqueeze.test_basic": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "assert_array_equal",
    "rand",
    "reshape",
    "squeeze"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_basic": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "tile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_empty": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "tile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestTile.test_kroncompare": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "assert_equal",
    "kron",
    "numpy.random.randint",
    "ones",
    "shape",
    "tile"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit": {
  "data": {
   "lineno": 210
  },
  "type": "class"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit.test_1D_array": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "array",
    "vsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.TestVsplit.test_2D_array": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "array",
    "compare_results",
    "vsplit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_shape_base.compare_results": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "assert_array_equal",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_shape_base.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_shape_base.nr": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "assert_array_equal",
    "int",
    "numpy.arange",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.multiply.reduce",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.assert_shapes_correct": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "numpy.lib.stride_tricks.broadcast_arrays",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.broadcast_arrays": {
  "data": {
   "shadows": "numpy.lib.stride_tricks.broadcast_arrays"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_stride_tricks.test_incompatible_shapes_raise_valueerror": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_incompatible_shapes_raise"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_one_off": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.lib.stride_tricks.broadcast_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.lib.stride_tricks.broadcast_arrays"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_as_ufunc": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_same_as_ufunc"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_same_input_shapes": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_ones_input_shapes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_stride_tricks.test_two_compatible_by_prepending_ones_input_shapes": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.lib.tests.test_stride_tricks.assert_shapes_correct"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_diag_bounds": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_failure": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_fortran_order": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.lib.tests.test_twodim_base.get_mat"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_matrix": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.diag",
    "numpy.lib.tests.test_twodim_base.get_mat",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestDiag.test_vector": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.diag",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_2d": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_basic": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_bool": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_diag2d": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_eye_bounds": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestEye.test_strings": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr": {
  "data": {
   "lineno": 119
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFliplr.test_basic": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "numpy.fliplr",
    "numpy.lib.tests.test_twodim_base.get_mat",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud": {
  "data": {
   "lineno": 131
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestFlipud.test_basic": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.flipud",
    "numpy.lib.tests.test_twodim_base.get_mat"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d": {
  "data": {
   "lineno": 172
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_all_outliers": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.histogram2d",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_asym": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "assert_array_equal",
    "numpy.array",
    "numpy.histogram2d",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_norm": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.array",
    "numpy.histogram2d"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestHistogram2d.test_simple": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.eye",
    "numpy.histogram2d",
    "numpy.linspace",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestRot90": {
  "data": {
   "lineno": 142
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestRot90.test_axes": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.ones",
    "numpy.rot90"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestRot90.test_basic": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "numpy.ones",
    "numpy.rot90",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.TestTri": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "numpy.lib.tests.test_twodim_base.TestTri.test_dtype": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "assert_array_equal",
    "bool",
    "numpy.array",
    "numpy.tri"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.eye": {
  "data": {
   "shadows": "numpy.eye"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.fliplr": {
  "data": {
   "shadows": "numpy.fliplr"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.flipud": {
  "data": {
   "shadows": "numpy.flipud"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.get_mat": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.add.outer",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.histogram2d": {
  "data": {
   "shadows": "numpy.histogram2d"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.mask_indices": {
  "data": {
   "shadows": "numpy.mask_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.rot90": {
  "data": {
   "shadows": "numpy.rot90"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.test_mask_indices": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.mask_indices",
    "numpy.triu"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_tril_indices": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.tril_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.test_triu_indices": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "numpy.triu_indices"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_twodim_base.tri": {
  "data": {
   "shadows": "numpy.tri"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.tril_indices": {
  "data": {
   "shadows": "numpy.tril_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.tril_indices_from": {
  "data": {
   "shadows": "numpy.tril_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.triu_indices": {
  "data": {
   "shadows": "numpy.triu_indices"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.triu_indices_from": {
  "data": {
   "shadows": "numpy.triu_indices_from"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_twodim_base.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_ufunclike": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_ufunclike.test": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "rundocs"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.lib.deprecate",
    "numpy.lib.tests.test_utils.old_func3",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.lib.tests.test_utils.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.deprecate": {
  "data": {
   "shadows": "numpy.lib.deprecate"
  },
  "type": "import"
 },
 "numpy.lib.tests.test_utils.new_func3": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.lib.tests.test_utils.old_func": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.lib.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func2": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.lib.deprecate"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.old_func3": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.lib.tests.test_utils.old_func"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_decorator_message": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.lib.tests.test_utils.old_func2"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_deprecate_fn": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.lib.tests.test_utils.new_func3"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.test_lookfor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "numpy.lib.utils.lookfor"
   ]
  },
  "type": "function"
 },
 "numpy.lib.tests.test_utils.utils": {
  "data": {
   "shadows": "numpy.lib.utils"
  },
  "type": "import"
 },
 "numpy.lib.ufunclike": {
  "data": {
   "symbols_in_volume": [
    "numpy.core.numeric.log"
   ]
  },
  "type": "module"
 },
 "numpy.lib.ufunclike.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.lib.ufunclike._log2": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "numpy.lib.ufunclike.fix": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.ceil",
    "numpy.core.numeric.floor",
    "numpy.core.numeric.where",
    "numpy.core.numeric.zeros_like"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.isneginf": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.bool_",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.isinf",
    "numpy.core.numeric.logical_and",
    "numpy.core.numeric.signbit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.isposinf": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.core.numeric.asarray",
    "numpy.core.numeric.bool_",
    "numpy.core.numeric.empty",
    "numpy.core.numeric.isinf",
    "numpy.core.numeric.logical_and",
    "numpy.core.numeric.signbit"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.log2": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.core.numeric.asanyarray",
    "numpy.core.numeric.log",
    "numpy.lib.ufunclike._log2"
   ]
  },
  "type": "function"
 },
 "numpy.lib.ufunclike.nx": {
  "data": {
   "shadows": "numpy.core.numeric"
  },
  "type": "import"
 },
 "numpy.linalg": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.linalg.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.linalg.bench": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "numpy.linalg.info": {
  "data": {},
  "type": "module"
 },
 "numpy.linalg.info.depends": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "numpy.linalg.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.linalg.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.linalg.setupscons.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.setupscons.get_info": {
  "data": {
   "shadows": "numpy.distutils.system_info.get_info"
  },
  "type": "import"
 },
 "numpy.linalg.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.linalg.test": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_build": {
  "data": {},
  "type": "module"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "subprocess.PIPE",
    "subprocess.call"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.get_dependencies": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "RuntimeError",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.FindDependenciesLdd.grep_dependencies": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dict",
    "numpy.linalg.tests.test_build.re"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_build.TestF77Mismatch.test_lapack": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.lapack_lite.__file__",
    "numpy.linalg.tests.test_build.FindDependenciesLdd",
    "numpy.linalg.tests.test_build.sys",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_build.call": {
  "data": {
   "shadows": "subprocess.call"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.dec": {
  "data": {
   "shadows": "numpy.testing.dec"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.lapack_lite": {
  "data": {
   "shadows": "numpy.linalg.lapack_lite"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_build.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.linalg.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eig_build": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.linalg.eig",
    "numpy.linalg.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_eigh_build": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.array",
    "numpy.linalg.eigh",
    "numpy.linalg.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_norm_vector_badarg": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.TestRegression.test_svd_build": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.array",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.linalg.tests.test_regression.rlevel",
    "numpy.transpose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.linalg.tests.test_regression.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.linalg.tests.test_regression.rlevel": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.linalg.tests.test_regression.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.ma": {
  "data": {
   "symbols_in_volume": [
    "numpy.ma.__all__",
    "numpy.ma.core",
    "numpy.ma.extras",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.ma.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.ma.__all__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "numpy.ma.__author__": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.ma.__date__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.ma.__revision__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.ma.__version__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.ma.bench": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "numpy.ma.core": {
  "data": {
   "shadows": "core"
  },
  "type": "import"
 },
 "numpy.ma.extras": {
  "data": {
   "shadows": "extras"
  },
  "type": "import"
 },
 "numpy.ma.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.ma.setup.config",
    "numpy.ma.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.ma.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.ma.setup.__author__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.ma.setup.__date__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.ma.setup.__revision__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.ma.setup.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.ma.setup.config": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.ma.setup.configuration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.ma.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ma.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.ma.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.ma.setupscons.config",
    "numpy.ma.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.ma.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.ma.setupscons.__author__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.ma.setupscons.__date__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.ma.setupscons.__revision__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.ma.setupscons.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.ma.setupscons.config": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.ma.setupscons.configuration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.ma.setupscons.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ma.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.ma.test": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.pi",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_core.TestFillingValues": {
  "data": {
   "lineno": 1219
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_check_on_fields": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "_check_fill_value",
    "assert_equal",
    "default_fill_value",
    "float",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.ma.core._check_fill_value",
    "numpy.ndarray",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_check_on_scalar": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "_check_fill_value",
    "assert_equal",
    "default_fill_value",
    "int",
    "numpy.ma.core._check_fill_value"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_extremum_fill_value": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "default_fill_value",
    "int",
    "maximum_fill_value",
    "minimum_fill_value"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "masked_array",
    "numpy.asarray",
    "numpy.ma.tests.test_core.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_conversion": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "default_fill_value",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestFillingValues.test_fillvalue_exotic_dtype": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "_check_fill_value",
    "assert_equal",
    "default_fill_value",
    "float",
    "int",
    "numpy.array",
    "numpy.dtype",
    "numpy.ma.core._check_fill_value"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.setUp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "masked_array",
    "numpy.array",
    "numpy.ma.tests.test_core.pi",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_asarray": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "asarray",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basic0d": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "masked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basic1d": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "count",
    "fail_if_equal",
    "filled",
    "int",
    "isMaskedArray",
    "len",
    "numpy.shape",
    "reduce"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basic2d": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "assert_equal",
    "count",
    "filled",
    "isMaskedArray",
    "len",
    "reduce",
    "shape"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_basicattributes": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_concatenate_alongaxis": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "assert_equal",
    "concatenate",
    "numpy.concatenate",
    "numpy.reshape",
    "ones",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_concatenate_basic": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "assert_equal",
    "concatenate",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_concatenate_flexible": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "assert_equal_records",
    "concatenate",
    "float",
    "int",
    "masked_array",
    "numpy.arange",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_copy": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "DeprecationWarning",
    "allequal",
    "arange",
    "array",
    "assert_equal",
    "assert_not_equal",
    "concatenate",
    "filled",
    "getmask",
    "make_mask",
    "masked_array",
    "numpy.arange",
    "numpy.ma.tests.test_core.warnings",
    "repeat",
    "resize"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_maskcreation": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "MaskedArray",
    "arange",
    "assert_equal",
    "fail_if_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_ndmin": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_ndmin_from_maskedarray": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_creation_with_list_of_maskedarrays": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_deepcopy": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "assert_not_equal",
    "copy.deepcopy",
    "id"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_fancy_printoptions": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "int",
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_w_flexible_dtype": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "default_fill_value",
    "float",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_filled_w_nested_dtype": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_fix_invalid": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "assert_equal",
    "fix_invalid",
    "masked_array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_flatten_structured_array": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "flatten_structured_array",
    "float",
    "int",
    "numpy.array",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_indexing": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "allequal",
    "array",
    "assert_equal",
    "getmask",
    "masked_array",
    "masked_values",
    "numpy.arange",
    "numpy.array",
    "numpy.sort",
    "object",
    "repr",
    "sort",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_maskedelement": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "filled",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_oddfeatures_1": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "conjugate",
    "count",
    "masked_where",
    "shape",
    "str",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_oddfeatures_2": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_oddfeatures_3": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_optinfo_propagation": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "numpy.ma.tests.test_core.cPickle"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_keepalignment": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "numpy.ma.tests.test_core.cPickle"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_subbaseclass": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "isinstance",
    "numpy.ma.tests.test_core.cPickle",
    "numpy.matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_pickling_wstructured": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "int",
    "numpy.ma.tests.test_core.cPickle"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_set_element_as_object": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "assert_equal",
    "empty",
    "numpy.ma.tests.test_core.datetime",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_single_element_subscript": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArray.test_topython": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "TypeError",
    "UserWarning",
    "array",
    "assert_equal",
    "float",
    "int",
    "numpy.isnan",
    "numpy.ma.tests.test_core.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic": {
  "data": {
   "lineno": 571
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.setUp": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "masked_array",
    "numpy.array",
    "numpy.ma.tests.test_core.pi",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_TakeTransposeInnerOuter": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "filled",
    "inner",
    "numpy.arange",
    "numpy.inner",
    "numpy.outer",
    "numpy.take",
    "numpy.transpose",
    "object",
    "outer",
    "take",
    "transpose"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_addsumprod": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "add.accumulate",
    "add.reduce",
    "array",
    "assert_equal",
    "concatenate",
    "filled",
    "len",
    "numpy.add.accumulate",
    "numpy.add.reduce",
    "numpy.concatenate",
    "numpy.product",
    "numpy.sum",
    "product",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_arithmetic_with_masked_singleton": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_arithmetic_with_masked_singleton_on_1d_singleton": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_basic_arithmetic": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "abs",
    "add",
    "array",
    "assert_equal",
    "divide",
    "masked_array",
    "multiply",
    "numpy.add",
    "numpy.divide",
    "numpy.multiply",
    "numpy.subtract",
    "subtract"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_basic_ufuncs": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "abs",
    "absolute",
    "arccos",
    "arcsin",
    "arctan",
    "arctan2",
    "assert_equal",
    "conjugate",
    "cos",
    "cosh",
    "equal",
    "exp",
    "greater",
    "greater_equal",
    "less",
    "less_equal",
    "log",
    "log10",
    "not_equal",
    "numpy.absolute",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.arctan",
    "numpy.arctan2",
    "numpy.conjugate",
    "numpy.cos",
    "numpy.cosh",
    "numpy.equal",
    "numpy.exp",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.less_equal",
    "numpy.log",
    "numpy.log10",
    "numpy.not_equal",
    "numpy.sin",
    "numpy.sinh",
    "numpy.sqrt",
    "numpy.tan",
    "numpy.tanh",
    "sin",
    "sinh",
    "sqrt",
    "tan",
    "tanh"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_binops_d2D": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_count_func": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "count",
    "getmask",
    "int",
    "isinstance",
    "numpy.ma.tests.test_core.types",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_divide_on_different_shapes": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_domained_binops_d2D": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_eq_on_structured": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_imag_real": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_limits_arithmetic": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "getmaskarray",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_masked_singleton_arithmetic": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "array",
    "maximum",
    "minimum"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_masked_singleton_equality": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_methods_with_output": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "empty",
    "float",
    "getattr",
    "int",
    "npfunc",
    "numpy",
    "numpy.empty",
    "numpy.random.uniform",
    "xmmeth"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minimummaximum_func": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "isinstance",
    "maximum",
    "maximum.outer",
    "minimum",
    "minimum.outer",
    "numpy.maximum",
    "numpy.maximum.outer",
    "numpy.minimum",
    "numpy.minimum.outer",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_func": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "greater",
    "less",
    "max",
    "maximum",
    "min",
    "minimum",
    "numpy.ravel",
    "ravel",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_funcs_with_output": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "array",
    "float",
    "getattr",
    "int",
    "mafunc",
    "npfunc",
    "numpy",
    "numpy.empty",
    "numpy.ma.core",
    "numpy.random.rand",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_methods": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_minmax_reduce": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.maximum.reduce"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_mixed_arithmetic": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "MaskedArray",
    "array",
    "isinstance",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_mod": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "assert_equal",
    "mask_or",
    "mod",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_ne_on_structured": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_noshrinking": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_numpyarithmetics": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "assert_equal",
    "log",
    "masked_array",
    "numpy.log",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayArithmetic.test_scalar_arithmetic": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes": {
  "data": {
   "lineno": 1082
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_flat": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_hardmask": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "filled",
    "make_mask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_hardmask_again": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "make_mask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_hardmask_oncemore_yay": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_keepmask": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_shrink_mask": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayAttributes.test_smallmask": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions": {
  "data": {
   "lineno": 2603
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.setUp": {
  "data": {
   "lineno": 2606,
   "symbols_in_volume": [
    "masked_array",
    "numpy.array",
    "numpy.ma.tests.test_core.pi",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_choose": {
  "data": {
   "lineno": 2846,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "choose"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_choose_with_out": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "choose",
    "empty",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_flatten_mask": {
  "data": {
   "lineno": 3018,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "flatten_mask",
    "numpy.array",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_identity": {
  "data": {
   "lineno": 2726,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "identity",
    "isinstance",
    "numpy.identity"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_make_mask": {
  "data": {
   "lineno": 2949,
   "symbols_in_volume": [
    "assert_equal",
    "make_mask",
    "numpy.array",
    "numpy.bool",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_make_mask_descr": {
  "data": {
   "lineno": 2920,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "float",
    "make_mask_descr",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_mask_or": {
  "data": {
   "lineno": 2982,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "mask_or",
    "numpy.array",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_equal_fill_value": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": [
    "assert_equal",
    "masked_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_equal_wlist": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "assert_equal",
    "masked_equal",
    "masked_not_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_otherfunctions": {
  "data": {
   "lineno": 2675,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "masked_equal",
    "masked_inside",
    "masked_not_equal",
    "masked_outside",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_bool": {
  "data": {
   "lineno": 2620,
   "symbols_in_volume": [
    "assert_equal",
    "masked_where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_condition": {
  "data": {
   "lineno": 2641,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "equal",
    "greater",
    "greater_equal",
    "less",
    "less_equal",
    "masked_equal",
    "masked_greater",
    "masked_greater_equal",
    "masked_less",
    "masked_less_equal",
    "masked_not_equal",
    "masked_where",
    "not_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_oddities": {
  "data": {
   "lineno": 2655,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "masked_where",
    "ones",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_masked_where_shape_constraint": {
  "data": {
   "lineno": 2663,
   "symbols_in_volume": [
    "AssertionError",
    "IndexError",
    "arange",
    "assert_equal",
    "masked_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_on_ndarray": {
  "data": {
   "lineno": 3037,
   "symbols_in_volume": [
    "anom",
    "array",
    "assert_equal",
    "numpy.array",
    "reshape"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_power": {
  "data": {
   "lineno": 2732,
   "symbols_in_volume": [
    "array",
    "assert_almost_equal",
    "assert_equal",
    "power"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_reshape": {
  "data": {
   "lineno": 2893,
   "symbols_in_volume": [
    "MaskedArray",
    "arange",
    "assert_equal",
    "isinstance",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_round": {
  "data": {
   "lineno": 2684,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "empty_like",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_round_with_output": {
  "data": {
   "lineno": 2707,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "empty",
    "float",
    "numpy.empty",
    "numpy.random.uniform",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where": {
  "data": {
   "lineno": 2754,
   "symbols_in_volume": [
    "assert_equal",
    "int",
    "masked_array",
    "numpy.array",
    "numpy.ma.tests.test_core.pi",
    "numpy.where",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_type": {
  "data": {
   "lineno": 2837,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.find_common_type",
    "numpy.float32",
    "numpy.int32",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_with_masked_choice": {
  "data": {
   "lineno": 2786,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayFunctions.test_where_with_masked_condition": {
  "data": {
   "lineno": 2808,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "getmask",
    "where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics": {
  "data": {
   "lineno": 1454
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.setUp": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "arange",
    "float"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_add": {
  "data": {
   "lineno": 1586,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_add_arrays": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_div": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_mul": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_mul_arrays": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_pow": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_sub": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_datafriendly_sub_arrays": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_addition_array": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "float",
    "mask_or"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_addition_scalar": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "DeprecationWarning",
    "assert_equal",
    "numpy.ma.tests.test_core.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_array_float": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "float",
    "mask_or"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_misc": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.ma.tests.test_core.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_scalar_float": {
  "data": {
   "lineno": 1545,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_division_scalar_int": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "arange",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_multiplication_array": {
  "data": {
   "lineno": 1522,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "float",
    "mask_or"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_multiplication_scalar": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_subtraction_array": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "float",
    "mask_or"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayInPlaceArithmetics.test_inplace_subtraction_scalar": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods": {
  "data": {
   "lineno": 2342
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.setUp": {
  "data": {
   "lineno": 2344,
   "symbols_in_volume": [
    "array",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_axis_methods_nomask": {
  "data": {
   "lineno": 2528,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_cumsumprod": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_cumsumprod_with_output": {
  "data": {
   "lineno": 2391,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "empty",
    "float",
    "getattr",
    "int",
    "npfunc",
    "numpy",
    "numpy.empty",
    "numpy.random.uniform",
    "xmmeth"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_diag": {
  "data": {
   "lineno": 2513,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "diag",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_meananom_object": {
  "data": {
   "lineno": 2442,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_prod_object": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.object",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_ptp": {
  "data": {
   "lineno": 2413,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.float",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_sum_object": {
  "data": {
   "lineno": 2428,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.object",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_trace": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_varstd": {
  "data": {
   "lineno": 2458,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethods.test_varstd_specialcases": {
  "data": {
   "lineno": 2478,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "empty",
    "float",
    "getattr",
    "method",
    "numpy.empty",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethodsComplex": {
  "data": {
   "lineno": 2550
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethodsComplex.setUp": {
  "data": {
   "lineno": 2552,
   "symbols_in_volume": [
    "array",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMathMethodsComplex.test_varstd": {
  "data": {
   "lineno": 2585,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods": {
  "data": {
   "lineno": 1740
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.setUp": {
  "data": {
   "lineno": 1742,
   "symbols_in_volume": [
    "array",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allany": {
  "data": {
   "lineno": 1815,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.array",
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allany_oddities": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": [
    "array",
    "bool",
    "empty"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allany_onmatrices": {
  "data": {
   "lineno": 1845,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.array",
    "numpy.bool_",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_allclose": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "allclose",
    "masked_array",
    "numpy.inf",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_argmax_argmin": {
  "data": {
   "lineno": 1891,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_arraymethod": {
  "data": {
   "lineno": 2328,
   "symbols_in_volume": [
    "MaskedArray.cumsum",
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_clip": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_compress": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_compressed": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "isinstance",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_empty": {
  "data": {
   "lineno": 1982,
   "symbols_in_volume": [
    "assert_equal",
    "empty",
    "empty_like",
    "float",
    "int",
    "len",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_fromflex": {
  "data": {
   "lineno": 2309,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "fromflex",
    "int"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_generic_methods": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_put": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": [
    "arange",
    "array",
    "asarray",
    "assert_array_equal",
    "assert_equal",
    "make_mask",
    "masked_array",
    "put"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_put_hardmask": {
  "data": {
   "lineno": 2030,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "make_mask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_putmask": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "putmask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_ravel": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_reshape": {
  "data": {
   "lineno": 2095,
   "symbols_in_volume": [
    "arange",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_sort": {
  "data": {
   "lineno": 2106,
   "symbols_in_volume": [
    "MaskedArray",
    "array",
    "assert_equal",
    "isinstance",
    "numpy.int8",
    "numpy.uint8",
    "sort",
    "sorted"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_sort_2d": {
  "data": {
   "lineno": 2140,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_sort_flexible": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "int",
    "sort"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_squeeze": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_swapaxes": {
  "data": {
   "lineno": 2214,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_take": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "masked_array",
    "take"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_toflex": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "assert_equal_records",
    "float",
    "int",
    "numpy.arange",
    "numpy.dtype",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedArrayMethods.test_tolist": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "int",
    "numpy.arange",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields": {
  "data": {
   "lineno": 3048
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.setUp": {
  "data": {
   "lineno": 3050,
   "symbols_in_volume": [
    "array",
    "bool",
    "dict",
    "float",
    "int",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_getitem": {
  "data": {
   "lineno": 3150,
   "symbols_in_volume": [
    "MaskedArray",
    "array",
    "assert_equal_records",
    "bool",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "numpy.void",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_getmaskarray": {
  "data": {
   "lineno": 3118,
   "symbols_in_volume": [
    "assert_equal",
    "empty",
    "float",
    "getmaskarray",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_mask_element": {
  "data": {
   "lineno": 3108,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_set_record_element": {
  "data": {
   "lineno": 3079,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.ma.tests.test_core.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_set_record_slice": {
  "data": {
   "lineno": 3094,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.ma.tests.test_core.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_set_records_masks": {
  "data": {
   "lineno": 3060,
   "symbols_in_volume": [
    "assert_equal_records",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedFields.test_view": {
  "data": {
   "lineno": 3130,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "bool",
    "float",
    "isinstance",
    "numpy.arange",
    "numpy.array",
    "numpy.matrix",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView": {
  "data": {
   "lineno": 3170
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestMaskedView.setUp": {
  "data": {
   "lineno": 3172,
   "symbols_in_volume": [
    "array",
    "bool",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.random.rand",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_dtype_and_type": {
  "data": {
   "lineno": 3241,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "float",
    "isinstance",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_flexible_dtype": {
  "data": {
   "lineno": 3203,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_nothing": {
  "data": {
   "lineno": 3180,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_simple_dtype": {
  "data": {
   "lineno": 3195,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_subdtype": {
  "data": {
   "lineno": 3224,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestMaskedView.test_view_to_type": {
  "data": {
   "lineno": 3188,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "assert_equal_records",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs": {
  "data": {
   "lineno": 1382
  },
  "type": "class"
 },
 "numpy.ma.tests.test_core.TestUfuncs.setUp": {
  "data": {
   "lineno": 1384,
   "symbols_in_volume": [
    "array",
    "numpy.ma.tests.test_core.pi"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_minmax": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "arange",
    "assert_equal",
    "masked_where"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_ndarray_mask": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "MaskedArray",
    "assert_equal",
    "isinstance",
    "masked_array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_reduce": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "add.reduce",
    "alltrue",
    "assert_equal",
    "numpy.ma.tests.test_core.pi",
    "product",
    "sometrue",
    "sum"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.TestUfuncs.test_testUfuncRegression": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "AttributeError",
    "assert_equal",
    "assert_mask_equal",
    "getattr",
    "mf",
    "numpy.core.fromnumeric",
    "numpy.ma.core",
    "uf"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_core.cPickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.fromnumeric": {
  "data": {
   "shadows": "numpy.core.fromnumeric"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.numpy.ma.core": {
  "data": {
   "shadows": "numpy.ma.core"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.pi": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_core.test_masked_array": {
  "data": {
   "lineno": 3249,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.argwhere",
    "numpy.ma.array"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_core.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.testing.run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions.test_compress2d": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "compress_rowcols",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions.test_dot": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "assert_equal",
    "dot",
    "masked_array",
    "numpy.arange",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.Test2DFunctions.test_mask_rowcols": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "mask_rowcols",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "apply_along_axis",
    "arange",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestApplyAlongAxis.test_3d.myfunc": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "ediff1d",
    "masked_array",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_ndarray": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "ediff1d",
    "isinstance",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "ediff1d",
    "masked_array",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_tobegin_toend": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "ediff1d",
    "masked_array",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_ediff1d_toend": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "ediff1d",
    "masked_array",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_in1d": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "assert_equal",
    "in1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_intersect1d": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "intersect1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "setdiff1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setdiff1d_char_array": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.array",
    "setdiff1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_setxor1d": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "assert_equal",
    "isinstance",
    "setxor1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_union1d": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "assert_equal",
    "union1d"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_allmasked": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onlist": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "assert_equal",
    "isinstance",
    "masked_array",
    "unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestArraySetOps.test_unique_onmaskedarray": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "unique"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_onintegers_with_mask": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "average"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage1": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "average"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage2": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "average",
    "count",
    "masked_array",
    "numpy.add.reduce",
    "numpy.arange",
    "ones",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestAverage.test_testAverage3": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "average",
    "float",
    "masked_array",
    "ones",
    "shape"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.TestConcatenator": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_1d": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "array",
    "assert_array_equal",
    "isinstance",
    "masked_array",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestConcatenator.test_2d": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "assert_array_equal",
    "masked_array",
    "numpy.r_",
    "numpy.round_",
    "rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.setUp": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "array",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_w_missing": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ValueError",
    "assert_almost_equal",
    "corrcoef",
    "numpy.corrcoef"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_1d_wo_missing": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "assert_almost_equal",
    "corrcoef",
    "numpy.corrcoef"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_w_missing": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "assert_almost_equal",
    "corrcoef",
    "numpy.corrcoef"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCorrcoef.test_2d_wo_missing": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "assert_almost_equal",
    "corrcoef",
    "numpy.corrcoef"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestCov.setUp": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "array",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_w_missing": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "ValueError",
    "assert_almost_equal",
    "cov",
    "numpy.cov"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_1d_wo_missing": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "assert_almost_equal",
    "cov",
    "numpy.cov"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_w_missing": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "assert_almost_equal",
    "cov",
    "getmaskarray",
    "int",
    "numpy.cov",
    "numpy.dot",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestCov.test_2d_wo_missing": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "assert_almost_equal",
    "cov",
    "numpy.cov"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_masked": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_equal",
    "clump_masked",
    "masked_array",
    "numpy.arange",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_clump_unmasked": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "assert_equal",
    "clump_unmasked",
    "masked_array",
    "numpy.arange",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "masked_all",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestGeneric.test_masked_all_like": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "array",
    "assert_equal",
    "float",
    "masked_all_like",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "len",
    "masked_array",
    "median",
    "numpy.arange",
    "numpy.empty",
    "numpy.linspace",
    "numpy.random.shuffle",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_2d_waxis": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "median",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestMedian.test_3d": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "assert_equal",
    "median",
    "numpy.ma.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_contiguous": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "masked_array",
    "notmasked_contiguous",
    "numpy.arange",
    "slice"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestNotMasked.test_edges": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "assert_equal",
    "masked_array",
    "notmasked_edges",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestPolynomial": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestPolynomial.test_polyfit": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polyfit",
    "numpy.random.rand",
    "polyfit",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.TestShapeBase": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_extras.TestShapeBase.test_atleast1d": {
  "data": {
   "lineno": 800
  },
  "type": "function"
 },
 "numpy.ma.tests.test_extras.__author__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.__date__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.__revision__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_extras.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_extras.run_module_suite": {
  "data": {
   "shadows": "numpy.testing.run_module_suite"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_mrecords.MaskedRecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.MaskedRecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.setup": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.ma.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_byview": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "isinstance",
    "numpy.ma.mrecords.mrecarray",
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_exotic_formats": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "float",
    "int",
    "numpy.array",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_filled": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.array",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_get": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "getattr",
    "isinstance",
    "numpy.array",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_hardmask": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "numpy.ma.make_mask",
    "numpy.ma.make_mask_none",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_pickling": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.tests.test_mrecords.cPickle"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_elements": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "numpy.array",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "int",
    "numpy.array",
    "numpy.ma.array",
    "numpy.ma.getdata",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.tests.test_mrecords.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_fields_mask": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.arange",
    "numpy.ma.masked",
    "numpy.ma.mrecords.fromarrays",
    "numpy.ma.mrecords.mrecarray",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "numpy.array",
    "numpy.ma.getmaskarray",
    "numpy.ma.masked",
    "numpy.ma.mrecords.mrecarray",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromarray": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.ma.mrecords.mrecarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_set_mask_fromfields": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "assert_equal",
    "bool",
    "numpy.array",
    "numpy.ma.mrecords.mrecarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_setslices_hardmask": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "NotImplementedError",
    "TypeError",
    "assert_equal",
    "numpy.ma.mrecords.mrecarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_tolist": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "int",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecords.test_withnames": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "numpy.ma.mrecords.mrecarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport": {
  "data": {
   "lineno": 381
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.__init__": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.setup": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.core.records.fromarrays",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_addfield": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.ma.array",
    "numpy.ma.mrecords.addfield"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromarrays": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "float",
    "getattr",
    "int",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "float",
    "getattr",
    "int",
    "numpy.core.records.fromrecords",
    "numpy.ma.mrecords.fromrecords",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromrecords_wmask": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "numpy.ma.mrecords.fromrecords"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestMRecordsImport.test_fromtextfile": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "assert_equal",
    "isinstance",
    "numpy.ma.mrecords.MaskedRecords",
    "numpy.ma.mrecords.fromtextfile",
    "numpy.ma.tests.test_mrecords.os",
    "numpy.ma.tests.test_mrecords.tempfile"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView": {
  "data": {
   "lineno": 341
  },
  "type": "class"
 },
 "numpy.ma.tests.test_mrecords.TestView.setUp": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.float",
    "numpy.ma.array",
    "numpy.ma.mrecords.fromarrays",
    "numpy.random.rand",
    "numpy.recarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_by_itself": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "assert_equal_records",
    "isinstance",
    "numpy.ma.mrecords.MaskedRecords"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_flexible_type": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "assert_equal",
    "assert_equal_records",
    "isinstance",
    "numpy.dtype",
    "numpy.float",
    "numpy.ma.masked",
    "numpy.ma.mrecords.MaskedRecords"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.TestView.test_view_simple_dtype": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "assert_equal",
    "isinstance",
    "numpy.array",
    "numpy.float",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_mrecords.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_mrecords.__date__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_mrecords.__revision__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_mrecords.addfield": {
  "data": {
   "shadows": "numpy.ma.mrecords.addfield"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.cPickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromarrays": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromrecords": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.fromtextfile": {
  "data": {
   "shadows": "numpy.ma.mrecords.fromtextfile"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.masked": {
  "data": {
   "shadows": "numpy.ma.masked"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.mrecarray": {
  "data": {
   "shadows": "numpy.ma.mrecords.mrecarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.nomask": {
  "data": {
   "shadows": "numpy.ma.nomask"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.numpy.ma.testutils": {
  "data": {
   "shadows": "numpy.ma.testutils"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recarray": {
  "data": {
   "shadows": "numpy.recarray"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recfromarrays": {
  "data": {
   "shadows": "numpy.core.records.fromarrays"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.recfromrecords": {
  "data": {
   "shadows": "numpy.core.records.fromrecords"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_mrecords.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "numpy.ma.tests.test_regression.MaskType": {
  "data": {
   "shadows": "numpy.ma.MaskType"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_create": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.ma.masked_array",
    "numpy.ma.nonzero",
    "numpy.ma.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_multiply": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "numpy.ma.tests.test_regression.rlevel",
    "numpy.ma.zeros",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repeat": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.ma.array",
    "numpy.ma.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_masked_array_repr_unicode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.ma.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.TestRegression.test_mem_masked_where": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.ma.MaskType",
    "numpy.ma.masked_where",
    "numpy.ma.tests.test_regression.rlevel",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_regression.masked_where": {
  "data": {
   "shadows": "numpy.ma.masked_where"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_regression.rlevel": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.ma.tests.test_subclassing.MMatrix",
    "numpy.ma.tests.test_subclassing.MSubArray",
    "numpy.ma.tests.test_subclassing.SubArray",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.ma.tests.test_subclassing.MMatrix": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.matrix",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MMatrix.__array_finalize__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.matrix.__array_finalize__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix.__new__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MMatrix._get_series": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray",
    "property"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.MSubArray.__array_finalize__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray.__new__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.ma.tests.test_subclassing.SubArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.MSubArray._get_series": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__add__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.ndarray.__add__"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__array_finalize__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.SubArray.__new__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing": {
  "data": {
   "lineno": 70
  },
  "type": "class"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.setUp": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.ma.tests.test_subclassing.mmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_attributepropagation": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_equal",
    "hasattr",
    "isinstance",
    "masked_array",
    "numpy.ma.tests.test_subclassing.MSubArray",
    "numpy.ma.tests.test_subclassing.SubArray",
    "numpy.ma.tests.test_subclassing.msubarray",
    "numpy.ma.tests.test_subclassing.subarray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_data_subclassing": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "assert_equal",
    "isinstance",
    "masked_array",
    "numpy.arange",
    "numpy.ma.tests.test_subclassing.SubArray"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_binary_operations": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "assert_equal",
    "divide",
    "isinstance",
    "masked_array",
    "numpy.ma.tests.test_subclassing.mmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_masked_unary_operations": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "assert_equal",
    "isinstance",
    "log",
    "numpy.log",
    "numpy.ma.tests.test_subclassing.mmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_maskedarray_subclassing": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.TestSubclassing.test_subclasspreservation": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "asanyarray",
    "asarray",
    "assert_equal",
    "isinstance",
    "masked_array",
    "numpy.arange",
    "numpy.ma.tests.test_subclassing.MSubArray",
    "zip"
   ]
  },
  "type": "function"
 },
 "numpy.ma.tests.test_subclassing.__author__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.__date__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.__revision__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.mmatrix": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.msubarray": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "numpy.ma.tests.test_subclassing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.tests.test_subclassing.subarray": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "numpy.ma.testutils": {
  "data": {
   "symbols_in_volume": [
    "numpy.ma.testutils.assert_almost_equal",
    "numpy.ma.testutils.fail_if_equal"
   ]
  },
  "type": "module"
 },
 "numpy.ma.testutils.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.ma.testutils.__date__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.ma.testutils.__revision__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.ma.testutils.__version__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.ma.testutils._assert_equal_on_sequences": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.almost": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "core.filled",
    "core.getmask",
    "core.mask_or",
    "core.masked_array",
    "numpy.abs",
    "numpy.around",
    "numpy.equal",
    "numpy.float_"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.approx": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "core.filled",
    "core.getmask",
    "core.mask_or",
    "core.masked_array",
    "numpy.core.umath.absolute",
    "numpy.equal",
    "numpy.float_",
    "numpy.less_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_almost_equal": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "assert_array_almost_equal",
    "build_err_msg",
    "isinstance",
    "numpy.ndarray",
    "round"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_almost_equal": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.ma.testutils.assert_array_compare"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_almost_equal.compare": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.ma.testutils.almost"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_approx_equal": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.ma.testutils.assert_array_compare"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_approx_equal.compare": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.ma.testutils.approx"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_compare": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "build_err_msg",
    "core.getmask",
    "core.mask_or",
    "core.masked",
    "core.masked_array",
    "numpy.testing.utils.assert_array_compare"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_equal": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.ma.testutils.assert_array_compare",
    "numpy.ma.testutils.operator"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_array_less": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "numpy.ma.testutils.assert_array_compare",
    "numpy.ma.testutils.operator"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_close": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "numpy.ma.testutils.assert_equal": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "assert_array_equal",
    "build_err_msg",
    "core.masked",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.ma.testutils._assert_equal_on_sequences",
    "numpy.ndarray",
    "repr",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_equal_records": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "assert_equal",
    "core.masked",
    "numpy.ma.testutils.operator"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_mask_equal": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "core.nomask",
    "numpy.ma.testutils.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.assert_not_equal": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "numpy.ma.testutils.equal": {
  "data": {
   "shadows": "core.equal"
  },
  "type": "import"
 },
 "numpy.ma.testutils.fail_if_array_equal": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.ma.testutils.assert_array_compare"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.fail_if_array_equal.compare": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.alltrue",
    "numpy.ma.testutils.approx"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.fail_if_equal": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AssertionError",
    "build_err_msg",
    "dict",
    "fail_if_array_equal",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "range",
    "repr",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.ma.testutils.filled": {
  "data": {
   "shadows": "core.filled"
  },
  "type": "import"
 },
 "numpy.ma.testutils.float_": {
  "data": {
   "shadows": "numpy.float_"
  },
  "type": "import"
 },
 "numpy.ma.testutils.getmask": {
  "data": {
   "shadows": "core.getmask"
  },
  "type": "import"
 },
 "numpy.ma.testutils.less": {
  "data": {
   "shadows": "core.less"
  },
  "type": "import"
 },
 "numpy.ma.testutils.mask_or": {
  "data": {
   "shadows": "core.mask_or"
  },
  "type": "import"
 },
 "numpy.ma.testutils.masked": {
  "data": {
   "shadows": "core.masked"
  },
  "type": "import"
 },
 "numpy.ma.testutils.masked_array": {
  "data": {
   "shadows": "core.masked_array"
  },
  "type": "import"
 },
 "numpy.ma.testutils.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.ma.testutils.nomask": {
  "data": {
   "shadows": "core.nomask"
  },
  "type": "import"
 },
 "numpy.ma.testutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.ma.testutils.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.ma.testutils.umath": {
  "data": {
   "shadows": "numpy.core.umath"
  },
  "type": "import"
 },
 "numpy.ma.testutils.utils": {
  "data": {
   "shadows": "numpy.testing.utils"
  },
  "type": "import"
 },
 "numpy.ma.version": {
  "data": {
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.ma.version.core",
    "numpy.ma.version.extras",
    "numpy.ma.version.release",
    "numpy.ma.version.revision",
    "numpy.ma.version.version"
   ]
  },
  "type": "module"
 },
 "numpy.ma.version.core": {
  "data": {
   "shadows": "core"
  },
  "type": "import"
 },
 "numpy.ma.version.extras": {
  "data": {
   "shadows": "extras"
  },
  "type": "import"
 },
 "numpy.ma.version.release": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.ma.version.revision": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.ma.version.version": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.matlib": {
  "data": {
   "symbols_in_volume": [
    "numpy.__all__",
    "numpy.__version__",
    "numpy.matlib.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.matlib.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "numpy.matlib.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.matlib.asmatrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.asmatrix"
  },
  "type": "import"
 },
 "numpy.matlib.empty": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.eye": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "float",
    "numpy.eye",
    "numpy.matrixlib.defmatrix.asmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.identity": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "array",
    "numpy.matlib.empty"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.matrix": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix"
  },
  "type": "import"
 },
 "numpy.matlib.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matlib.ones": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.rand": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrixlib.defmatrix.asmatrix",
    "numpy.random.rand",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.randn": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "isinstance",
    "numpy.matrixlib.defmatrix.asmatrix",
    "numpy.random.randn",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.repmat": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "asanyarray"
   ]
  },
  "type": "function"
 },
 "numpy.matlib.zeros": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.matrixlib.defmatrix.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.matrixlib.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.matrixlib.bench": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.matrixlib.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.matrixlib.setup.config",
    "numpy.matrixlib.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.config": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.matrixlib.setup.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.matrixlib.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.matrixlib.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.matrixlib.setupscons.config",
    "numpy.matrixlib.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.matrixlib.setupscons.config": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "numpy.matrixlib.setupscons.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.setupscons.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.matrixlib.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.matrixlib.test": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.matrixlib.tests.test_defmatrix": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_basic": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "allclose",
    "array",
    "dot",
    "identity",
    "numpy.linalg.inv",
    "numpy.matrix",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_notimplemented": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "numpy.matrix",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestAlgebra.test_pow": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "assert_array_almost_equal",
    "numpy.dot",
    "numpy.eye",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCasting.test_basic": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "all",
    "arange",
    "numpy.matrix",
    "ones"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_basic": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "all",
    "arange",
    "array",
    "numpy.bmat",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestCtor.test_bmat_nondefault_str": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "array",
    "assert_raises",
    "numpy.bmat"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing": {
  "data": {
   "lineno": 288
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestIndexing.test_basic": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "numpy.asmatrix",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestMatrixReturn.test_instance_methods": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "callable",
    "dir",
    "eval",
    "f",
    "numpy.matrix",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing": {
  "data": {
   "lineno": 297
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.setUp": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_from_matrix_list": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "array",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_array_to_list": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_boolean_indexing": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "arange",
    "array",
    "assert_array_equal",
    "numpy.asmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_dimesions": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_fancy_indexing": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "assert_equal",
    "isinstance",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_list_indexing": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "arange",
    "assert_array_equal",
    "numpy.asmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_matrix_element": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_row_column_indexing": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.asmatrix",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestNewScalarIndexing.test_scalar_indexing": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "assert_equal",
    "float",
    "numpy.asmatrix",
    "zeros"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_list": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.matrixlib.defmatrix.matrix_power"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestPower.test_returntype": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "array",
    "numpy.matrix",
    "numpy.matrixlib.defmatrix.matrix_power",
    "numpy.matrixlib.mat",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_asmatrix": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "arange",
    "numpy.asmatrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_basic": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "all",
    "allclose",
    "array",
    "conjugate",
    "numpy.linalg.inv",
    "numpy.matrix",
    "transpose"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_comparisons": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "abs",
    "all",
    "any",
    "arange",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_max": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "all",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_min": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "all",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_noaxis": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_pinv": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "arange",
    "assert_almost_equal",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_prod": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "all",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_ptp": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "all",
    "array",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_repr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.matrix",
    "repr"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_sum": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_array_equal",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.TestProperties.test_var": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.arange",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_defmatrix.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.bmat": {
  "data": {
   "shadows": "numpy.bmat"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.mat": {
  "data": {
   "shadows": "numpy.matrixlib.mat"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.matrix_power": {
  "data": {
   "shadows": "numpy.matrixlib.defmatrix.matrix_power"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_defmatrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_multiarray": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_keywords": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "assert_array_equal",
    "assert_equal",
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "numpy.int8",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.TestView.test_type": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_multiarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_numeric.TestCase": {
  "data": {
   "shadows": "numpy.testing.TestCase"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_numeric.TestDot.test_matscalar": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "complex",
    "numpy.core.ones",
    "numpy.matrix",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_numeric.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_numeric.ones": {
  "data": {
   "shadows": "numpy.core.ones"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_kron_matrix": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.kron",
    "numpy.matrix",
    "numpy.matrixlib.tests.test_regression.rlevel",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "numpy.matrixlib.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_multiply_by_1d_vector.mul": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.mat",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_properties": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "float",
    "numpy.matrix",
    "numpy.matrixlib.tests.test_regression.rlevel",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.TestRegression.test_matrix_std_argmax": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.asmatrix",
    "numpy.matrixlib.tests.test_regression.rlevel",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "numpy.matrixlib.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.matrixlib.tests.test_regression.rlevel": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.numarray": {
  "data": {
   "symbols_in_volume": [
    "numpy.numarray.__all__",
    "numpy.numarray.compat",
    "numpy.numarray.functions",
    "numpy.numarray.numerictypes",
    "numpy.numarray.session",
    "numpy.numarray.ufuncs",
    "numpy.numarray.util",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.numarray.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.numarray.alter_code1.converttree",
    "numpy.numarray.alter_code1.re",
    "numpy.numarray.alter_code1.sys"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.alter_code1.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1._func": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.convertall",
    "numpy.numarray.alter_code1.convertsrc"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.addimport": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.os"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.changeimports": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "numpy.numarray.alter_code1.re"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.convertall": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.convertfile",
    "numpy.numarray.alter_code1.glob",
    "numpy.numarray.alter_code1.os"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.convertfile": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.fromstr",
    "numpy.numarray.alter_code1.makenewfile",
    "numpy.numarray.alter_code1.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.convertsrc": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.glob",
    "numpy.numarray.alter_code1.header_re",
    "numpy.numarray.alter_code1.makenewfile",
    "numpy.numarray.alter_code1.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.converttree": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1._func",
    "numpy.numarray.alter_code1.os"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.flatindex_re": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.fromargs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.convertfile"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.fromstr": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.changeimports",
    "numpy.numarray.alter_code1.datetime",
    "numpy.numarray.alter_code1.os",
    "numpy.numarray.alter_code1.replaceattr",
    "numpy.numarray.alter_code1.replaceother",
    "numpy.numarray.alter_code1.sys"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.header_re": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.info_re": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.isbyte_re": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.iscarr_re": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.isfarr_re": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.makenewfile": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "file"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.new_re": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.repeat_re": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.replaceattr": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.flatindex_re"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.replaceother": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.numarray.alter_code1.addimport",
    "numpy.numarray.alter_code1.info_re",
    "numpy.numarray.alter_code1.isbyte_re",
    "numpy.numarray.alter_code1.iscarr_re",
    "numpy.numarray.alter_code1.isfarr_re",
    "numpy.numarray.alter_code1.new_re",
    "numpy.numarray.alter_code1.repeat_re",
    "numpy.numarray.alter_code1.setimag_re",
    "numpy.numarray.alter_code1.setimaginary_re",
    "numpy.numarray.alter_code1.setreal_re",
    "numpy.numarray.alter_code1.setshape_re",
    "numpy.numarray.alter_code1.toggle_re",
    "numpy.numarray.alter_code1.type_re"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code1.setimag_re": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.setimaginary_re": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.setreal_re": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.setshape_re": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code1.toggle_re": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code1.type_re": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.numarray.alter_code2.fromargs",
    "numpy.numarray.alter_code2.sys",
    "numpy.numarray.alter_code2.warnings"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.alter_code2.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.numarray.alter_code2._func": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.numarray.alter_code2.convertall"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.convertall": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.numarray.alter_code2.convertfile",
    "numpy.numarray.alter_code2.glob",
    "numpy.numarray.alter_code2.os"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.convertfile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "fromstr",
    "numpy.numarray.alter_code2.getandcopy",
    "numpy.numarray.alter_code2.makenewfile"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.converttree": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.numarray.alter_code2._func",
    "numpy.numarray.alter_code2.os"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.fromargs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.numarray.alter_code2.convertfile"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.getandcopy": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "file",
    "numpy.numarray.alter_code2.makenewfile",
    "numpy.numarray.alter_code2.os"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.makenewfile": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "file"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.alter_code2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.alter_code2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.numarray.bench": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.numarray.compat": {
  "data": {
   "shadows": "compat"
  },
  "type": "import"
 },
 "numpy.numarray.compat.ArrayType": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "numpy.numarray.compat.NewAxis": {
  "data": {
   "shadows": "numpy.newaxis"
  },
  "type": "import"
 },
 "numpy.numarray.compat.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.numarray.convolve": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.numarray.convolve.msg"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.convolve.msg": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.numarray.fft": {
  "data": {
   "symbols_in_volume": [
    "numpy.oldnumeric.fft",
    "numpy.oldnumeric.fft.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.fft.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.numarray.fft.nof": {
  "data": {
   "shadows": "numpy.oldnumeric.fft"
  },
  "type": "import"
 },
 "numpy.numarray.functions": {
  "data": {
   "shadows": "functions"
  },
  "type": "import"
 },
 "numpy.numarray.functions.CLIP": {
  "data": {
   "shadows": "numpy.CLIP"
  },
  "type": "import"
 },
 "numpy.numarray.functions.EarlyEOFError": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.functions.FileSeekWarning": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.functions.RAISE": {
  "data": {
   "shadows": "numpy.RAISE"
  },
  "type": "import"
 },
 "numpy.numarray.functions.SizeMismatchError": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.functions.SizeMismatchWarning": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.functions.WRAP": {
  "data": {
   "shadows": "numpy.WRAP"
  },
  "type": "import"
 },
 "numpy.numarray.functions._BLOCKSIZE": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "numpy.numarray.functions.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.numarray.functions._warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.numarray.functions.all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "numpy.numarray.functions.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.numarray.functions.alltrue": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.alltrue"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.and_": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "numpy.numarray.functions.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "numpy.numarray.functions.arange": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.numarray.functions.type2dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.argmax": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.argmin": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "numpy.argmin"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.argsort": {
  "data": {
   "shadows": "numpy.argsort"
  },
  "type": "import"
 },
 "numpy.numarray.functions.around": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.array": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.empty",
    "numpy.frombuffer",
    "numpy.numarray.functions.copy",
    "numpy.numarray.functions.fromfile",
    "numpy.numarray.functions.fromstring",
    "numpy.numarray.functions.type2dtype",
    "numpy.shape",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.array2list": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "numpy.numarray.functions.array_equal": {
  "data": {
   "shadows": "numpy.array_equal"
  },
  "type": "import"
 },
 "numpy.numarray.functions.array_equiv": {
  "data": {
   "shadows": "numpy.array_equiv"
  },
  "type": "import"
 },
 "numpy.numarray.functions.array_repr": {
  "data": {
   "shadows": "numpy.array_repr"
  },
  "type": "import"
 },
 "numpy.numarray.functions.array_str": {
  "data": {
   "shadows": "numpy.array_str"
  },
  "type": "import"
 },
 "numpy.numarray.functions.arrayrange": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "numpy.numarray.functions.asarray": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "numpy.numarray.functions.array",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.average": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "numpy.average"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.choose": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.RAISE",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.clip": {
  "data": {
   "shadows": "numpy.clip"
  },
  "type": "import"
 },
 "numpy.numarray.functions.compress": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.compress"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.concatenate": {
  "data": {
   "shadows": "numpy.concatenate"
  },
  "type": "import"
 },
 "numpy.numarray.functions.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.numarray.functions.copy_reg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "numpy.numarray.functions.cumproduct": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.cumsum": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "numpy.asarray",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.diagonal": {
  "data": {
   "shadows": "numpy.diagonal"
  },
  "type": "import"
 },
 "numpy.numarray.functions.divide_remainder": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "asarray"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.numarray.functions.e": {
  "data": {
   "shadows": "numpy.e"
  },
  "type": "import"
 },
 "numpy.numarray.functions.explicit_type": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "numpy.numarray.functions.flush_caches": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromfile": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "ValueError",
    "_resizebuf",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.empty",
    "numpy.ndarray",
    "numpy.newbuffer",
    "numpy.not_equal",
    "numpy.numarray.functions.EarlyEOFError",
    "numpy.numarray.functions.FileSeekWarning",
    "numpy.numarray.functions.SizeMismatchError",
    "numpy.numarray.functions.SizeMismatchWarning",
    "numpy.numarray.functions._BLOCKSIZE",
    "numpy.numarray.functions.type2dtype",
    "numpy.product",
    "numpy.shape",
    "numpy.shape.index",
    "open",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromfunction": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.fromfunction",
    "numpy.numarray.functions.type2dtype",
    "numpy.shape",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromlist": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.numarray.functions.type2dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.fromstring": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "numpy.fromstring",
    "numpy.numarray.functions.type2dtype",
    "numpy.product",
    "numpy.shape",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.getShape": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "TypeError",
    "issubclass",
    "len",
    "numpy.MAXDIMS",
    "numpy.array",
    "numpy.integer",
    "numpy.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.getTypeObject": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "numerictypes.typefrom",
    "numpy.array",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.identity": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.identity",
    "numpy.numarray.functions.type2dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.indices": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.indices",
    "numpy.shape",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.info": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "bp",
    "getattr",
    "hex",
    "int",
    "len",
    "numerictypes.typefrom",
    "numpy",
    "numpy.numarray.functions.sys",
    "print",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.innerproduct": {
  "data": {
   "shadows": "numpy.inner"
  },
  "type": "import"
 },
 "numpy.numarray.functions.inputarray": {
  "data": {
   "lineno": 317
  },
  "type": "constant"
 },
 "numpy.numarray.functions.isBigEndian": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "numpy.numarray.functions.kroneckerproduct": {
  "data": {
   "shadows": "numpy.kron"
  },
  "type": "import"
 },
 "numpy.numarray.functions.lexsort": {
  "data": {
   "shadows": "numpy.lexsort"
  },
  "type": "import"
 },
 "numpy.numarray.functions.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.numarray.functions.matrixmultiply": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.numarray.functions.newobj": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.empty_like",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.nonzero": {
  "data": {
   "shadows": "numpy.nonzero"
  },
  "type": "import"
 },
 "numpy.numarray.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.numarray.functions.ones": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.numarray.functions.type2dtype",
    "numpy.ones",
    "numpy.shape",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "numpy.numarray.functions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.numarray.functions.outerproduct": {
  "data": {
   "shadows": "numpy.outer"
  },
  "type": "import"
 },
 "numpy.numarray.functions.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.numarray.functions.put": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "list",
    "numpy.RAISE",
    "numpy.integer",
    "numpy.ndarray",
    "numpy.numarray.functions.array",
    "numpy.numarray.functions.asarray",
    "numpy.numarray.functions.indices",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.putmask": {
  "data": {
   "shadows": "numpy.putmask"
  },
  "type": "import"
 },
 "numpy.numarray.functions.rank": {
  "data": {
   "shadows": "numpy.rank"
  },
  "type": "import"
 },
 "numpy.numarray.functions.ravel": {
  "data": {
   "shadows": "numpy.ravel"
  },
  "type": "import"
 },
 "numpy.numarray.functions.repeat": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.numarray.functions.array",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.reshape": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "len",
    "numpy.numarray.functions.array",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.resize": {
  "data": {
   "shadows": "numpy.resize"
  },
  "type": "import"
 },
 "numpy.numarray.functions.round": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.numarray.functions.around",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.searchsorted": {
  "data": {
   "shadows": "numpy.searchsorted"
  },
  "type": "import"
 },
 "numpy.numarray.functions.shape": {
  "data": {
   "shadows": "numpy.shape"
  },
  "type": "import"
 },
 "numpy.numarray.functions.size": {
  "data": {
   "shadows": "numpy.size"
  },
  "type": "import"
 },
 "numpy.numarray.functions.sometrue": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.numarray.functions.array",
    "numpy.sometrue"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "numpy.numarray.functions.swapaxes": {
  "data": {
   "shadows": "numpy.swapaxes"
  },
  "type": "import"
 },
 "numpy.numarray.functions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.numarray.functions.take": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "list",
    "numpy.RAISE",
    "numpy.asarray",
    "numpy.integer",
    "numpy.numarray.functions.array",
    "numpy.numarray.functions.indices",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.tensormultiply": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.dot",
    "numpy.reshape",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.tname": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.numarray.functions.togglebyteorder": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "numpy.numarray.functions.trace": {
  "data": {
   "shadows": "numpy.trace"
  },
  "type": "import"
 },
 "numpy.numarray.functions.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.numarray.functions.type2dtype": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.dtype",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.typefrom": {
  "data": {
   "shadows": "numerictypes.typefrom"
  },
  "type": "import"
 },
 "numpy.numarray.functions.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.numarray.functions.vdot": {
  "data": {
   "shadows": "numpy.vdot"
  },
  "type": "import"
 },
 "numpy.numarray.functions.where": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.functions.zeros": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.numarray.functions.type2dtype",
    "numpy.shape",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.image": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.numarray.image.msg"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.image.msg": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.numarray.linear_algebra": {
  "data": {
   "symbols_in_volume": [
    "list",
    "numpy.numarray.linear_algebra.__all__",
    "numpy.oldnumeric.linear_algebra.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.linear_algebra.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.numarray.linear_algebra._qr": {
  "data": {
   "shadows": "numpy.linalg.qr"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.nol": {
  "data": {
   "shadows": "numpy.oldnumeric.linear_algebra"
  },
  "type": "import"
 },
 "numpy.numarray.linear_algebra.qr_decomposition": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.linalg.qr"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.ma": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.matrix": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.matrix.Matrix": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.matrix"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.matrix.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.numarray.matrix._matrix": {
  "data": {
   "shadows": "numpy.matrix"
  },
  "type": "import"
 },
 "numpy.numarray.mlab": {
  "data": {
   "symbols_in_volume": [
    "numpy.oldnumeric.mlab",
    "numpy.oldnumeric.mlab.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.mlab.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.numarray.mlab.nom": {
  "data": {
   "shadows": "numpy.oldnumeric.mlab"
  },
  "type": "import"
 },
 "numpy.numarray.nd_image": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.numarray.nd_image.msg"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.nd_image.msg": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes": {
  "data": {
   "shadows": "numerictypes"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.Any": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.AnyType": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.NumericType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Bool": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.BooleanType": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.NumericType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Byte": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Complex": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Complex32": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Complex64": {
  "data": {
   "lineno": 192
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.ComplexType": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.NumericType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Float": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Float32": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Float64": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.FloatingType": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.NumericType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.HasUInt64": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int16": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int32": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int64": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Int8": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.IntegralType": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.NumericType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.IsType": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "isinstance",
    "numpy.numarray.numerictypes.typeDict"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.LP64": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.Long": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.MAX_ALIGN": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.MAX_INT_SIZE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.MaximumType": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes._MaximumType"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.MaybeLong": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.NumericType": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.NumericType.__getnewargs__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.NumericType.__getstate__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.NumericType.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "numpy.numarray.numerictypes._register",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.NumericType.__new__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "numpy.numarray.numerictypes.typeDict",
    "object.__new__",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.Object": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.ObjectType": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.NumericType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.Short": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.SignedIntegralType": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.IntegralType",
    "numpy.numarray.numerictypes.SignedType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.SignedType": {
  "data": {
   "lineno": 140
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.UInt16": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UInt32": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UInt64": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UInt8": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.UnsignedIntegralType": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes.IntegralType",
    "numpy.numarray.numerictypes.UnsignedType"
   ]
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes.UnsignedType": {
  "data": {
   "lineno": 144
  },
  "type": "class"
 },
 "numpy.numarray.numerictypes._MaximumType": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._initGenericCoercions": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "min",
    "numpy.numarray.numerictypes.IntegralType",
    "numpy.numarray.numerictypes.MAX_INT_SIZE",
    "numpy.numarray.numerictypes.SignedIntegralType",
    "numpy.numarray.numerictypes.genericTypeRank",
    "numpy.numarray.numerictypes.pythonTypeMap",
    "numpy.numarray.numerictypes.pythonTypeRank",
    "numpy.numarray.numerictypes.scalarTypeMap",
    "numpy.numarray.numerictypes.typeDict",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes._register": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "numpy.numarray.numerictypes.typeDict",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes._scipy_alias": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "eval",
    "globals",
    "numpy.numarray.numerictypes._register"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes._scipy_dtypechar": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._scipy_dtypechar_inverse": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tAny": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tBool": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tComplex32": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tComplex64": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tFloat32": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tFloat64": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt16": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt32": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt64": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tInt8": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tObject": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt16": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt32": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt64": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._tUInt8": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes._val": {
  "data": {
   "lineno": 530
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.genericPromotionExclusions": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.genericTypeRank": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.getType": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "numpy.numarray.numerictypes.NumericType",
    "numpy.numarray.numerictypes.typeDict",
    "type"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.numerictypes.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.numarray.numerictypes.pythonTypeMap": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.pythonTypeRank": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.scalarTypeMap": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.scalarTypes": {
  "data": {
   "lineno": 509
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.typeDict": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.typecodes": {
  "data": {
   "lineno": 445
  },
  "type": "constant"
 },
 "numpy.numarray.numerictypes.typefrom": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "numpy.numarray.numerictypes._scipy_dtypechar_inverse"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.random_array": {
  "data": {},
  "type": "module"
 },
 "numpy.numarray.random_array.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.numarray.session": {
  "data": {
   "shadows": "session"
  },
  "type": "import"
 },
 "numpy.numarray.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.numarray.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.numarray.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.numarray.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.numarray.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.numarray.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.numarray.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.numarray.setupscons.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.numarray.setupscons.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.numarray.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.numarray.test": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "numpy.numarray.ufuncs": {
  "data": {
   "shadows": "ufuncs"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.numarray.ufuncs.abs": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.absolute": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arccosh": {
  "data": {
   "shadows": "numpy.arccosh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arcsin": {
  "data": {
   "shadows": "numpy.arcsin"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arcsinh": {
  "data": {
   "shadows": "numpy.arcsinh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arctan": {
  "data": {
   "shadows": "numpy.arctan"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.arctanh": {
  "data": {
   "shadows": "numpy.arctanh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_and": {
  "data": {
   "shadows": "numpy.bitwise_and"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_not": {
  "data": {
   "shadows": "numpy.invert"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_or": {
  "data": {
   "shadows": "numpy.bitwise_or"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.bitwise_xor": {
  "data": {
   "shadows": "numpy.bitwise_xor"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.conjugate": {
  "data": {
   "shadows": "numpy.conjugate"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.cosh": {
  "data": {
   "shadows": "numpy.cosh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.divide": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.equal": {
  "data": {
   "shadows": "numpy.equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.fabs": {
  "data": {
   "shadows": "numpy.fabs"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.floor_divide": {
  "data": {
   "shadows": "numpy.floor_divide"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.fmod": {
  "data": {
   "shadows": "numpy.fmod"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.greater": {
  "data": {
   "shadows": "numpy.greater"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.greater_equal": {
  "data": {
   "shadows": "numpy.greater_equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.hypot": {
  "data": {
   "shadows": "numpy.hypot"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.less": {
  "data": {
   "shadows": "numpy.less"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.less_equal": {
  "data": {
   "shadows": "numpy.less_equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.log10": {
  "data": {
   "shadows": "numpy.log10"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_and": {
  "data": {
   "shadows": "numpy.logical_and"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_not": {
  "data": {
   "shadows": "numpy.logical_not"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.logical_xor": {
  "data": {
   "shadows": "numpy.logical_xor"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.lshift": {
  "data": {
   "shadows": "numpy.left_shift"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.maximum": {
  "data": {
   "shadows": "numpy.maximum"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.minimum": {
  "data": {
   "shadows": "numpy.minimum"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.minus": {
  "data": {
   "shadows": "numpy.negative"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.negative": {
  "data": {
   "shadows": "numpy.negative"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.not_equal": {
  "data": {
   "shadows": "numpy.not_equal"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.power": {
  "data": {
   "shadows": "numpy.power"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.product": {
  "data": {
   "shadows": "numpy.product"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.remainder": {
  "data": {
   "shadows": "numpy.remainder"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.rshift": {
  "data": {
   "shadows": "numpy.right_shift"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sinh": {
  "data": {
   "shadows": "numpy.sinh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.subtract": {
  "data": {
   "shadows": "numpy.subtract"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.sum": {
  "data": {
   "shadows": "numpy.sum"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.tan": {
  "data": {
   "shadows": "numpy.tan"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.tanh": {
  "data": {
   "shadows": "numpy.tanh"
  },
  "type": "import"
 },
 "numpy.numarray.ufuncs.true_divide": {
  "data": {
   "shadows": "numpy.true_divide"
  },
  "type": "import"
 },
 "numpy.numarray.util": {
  "data": {
   "shadows": "util"
  },
  "type": "import"
 },
 "numpy.oldnumeric": {
  "data": {
   "symbols_in_volume": [
    "numpy.oldnumeric.__all__",
    "numpy.oldnumeric.compat",
    "numpy.oldnumeric.functions",
    "numpy.oldnumeric.misc",
    "numpy.oldnumeric.numpy",
    "numpy.oldnumeric.precision",
    "numpy.oldnumeric.ufuncs",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.oldnumeric.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "numpy.oldnumeric.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "numpy.oldnumeric._move_axis_to_0": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "range",
    "transpose"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.oldnumeric.alter_code1._astr",
    "numpy.oldnumeric.alter_code1._chars",
    "numpy.oldnumeric.alter_code1._func2",
    "numpy.oldnumeric.alter_code1._func4",
    "numpy.oldnumeric.alter_code1._meth1",
    "numpy.oldnumeric.alter_code1._types",
    "numpy.oldnumeric.alter_code1.fromargs",
    "numpy.oldnumeric.alter_code1.func_re",
    "numpy.oldnumeric.alter_code1.istest_re",
    "numpy.oldnumeric.alter_code1.meth_re",
    "numpy.oldnumeric.alter_code1.re",
    "numpy.oldnumeric.alter_code1.sys"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.alter_code1.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._astr": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._chars": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._func": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.convertall",
    "numpy.oldnumeric.alter_code1.convertsrc"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1._func2": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._func4": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._meth1": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1._types": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.changeimports": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "numpy.oldnumeric.alter_code1.re"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.convertall": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.convertfile",
    "numpy.oldnumeric.alter_code1.glob",
    "numpy.oldnumeric.alter_code1.os"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.convertfile": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.fromstr",
    "numpy.oldnumeric.alter_code1.makenewfile",
    "numpy.oldnumeric.alter_code1.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.convertsrc": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.glob",
    "numpy.oldnumeric.alter_code1.header_re",
    "numpy.oldnumeric.alter_code1.makenewfile",
    "numpy.oldnumeric.alter_code1.os",
    "open"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.converttree": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1._func",
    "numpy.oldnumeric.alter_code1.os"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.fixistesting": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1._types",
    "numpy.oldnumeric.alter_code1.istest_re"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.fixtypechars": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1._chars",
    "numpy.oldnumeric.alter_code1._func2",
    "numpy.oldnumeric.alter_code1._func4",
    "numpy.oldnumeric.alter_code1._meth1",
    "numpy.oldnumeric.alter_code1.func_re",
    "numpy.oldnumeric.alter_code1.meth_re"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.flatindex_re": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.fromargs": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "converttree"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.fromstr": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.changeimports",
    "numpy.oldnumeric.alter_code1.datetime",
    "numpy.oldnumeric.alter_code1.fixistesting",
    "numpy.oldnumeric.alter_code1.fixtypechars",
    "numpy.oldnumeric.alter_code1.os",
    "numpy.oldnumeric.alter_code1.replaceattr",
    "numpy.oldnumeric.alter_code1.replaceother",
    "numpy.oldnumeric.alter_code1.sys"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.func_re": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.header_re": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.istest_re": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.makenewfile": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "file"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.meth_re": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code1.replaceattr": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.flatindex_re"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.replaceother": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code1.svspc2",
    "numpy.oldnumeric.alter_code1.svspc3"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code1.svspc2": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.svspc3": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code1.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.oldnumeric.alter_code2.fromargs",
    "numpy.oldnumeric.alter_code2.sys",
    "numpy.oldnumeric.alter_code2.warnings"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.alter_code2.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.oldnumeric.alter_code2._func": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2.convertall"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.changeimports": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.convertall": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2.convertfile",
    "numpy.oldnumeric.alter_code2.glob",
    "numpy.oldnumeric.alter_code2.os"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.convertfile": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2.fromstr",
    "numpy.oldnumeric.alter_code2.getandcopy",
    "numpy.oldnumeric.alter_code2.makenewfile"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.converttree": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2._func",
    "numpy.oldnumeric.alter_code2.os"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.fromargs": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2.convertfile"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.fromstr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2.changeimports",
    "numpy.oldnumeric.alter_code2.datetime",
    "numpy.oldnumeric.alter_code2.os",
    "numpy.oldnumeric.alter_code2.replaceattr",
    "numpy.oldnumeric.alter_code2.replaceother",
    "numpy.oldnumeric.alter_code2.sys"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.getandcopy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "file",
    "numpy.oldnumeric.alter_code2.makenewfile",
    "numpy.oldnumeric.alter_code2.os"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.makenewfile": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "file"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.replaceattr": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.replaceother": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.oldnumeric.alter_code2.re"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.replacetypechars": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "numpy.oldnumeric.alter_code2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.oldnumeric.alter_code2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.oldnumeric.array_printer": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.array_printer.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.oldnumeric.array_printer._array2string": {
  "data": {
   "shadows": "numpy.array2string"
  },
  "type": "import"
 },
 "numpy.oldnumeric.array_printer.array2string": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.array2string",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.bench": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.oldnumeric.compat": {
  "data": {
   "shadows": "compat"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.fft.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.oldnumeric.fft.fft": {
  "data": {
   "shadows": "numpy.fft.fft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.fft2d": {
  "data": {
   "shadows": "numpy.fft.fft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.fftnd": {
  "data": {
   "shadows": "numpy.fft.fftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.hermite_fft": {
  "data": {
   "shadows": "numpy.fft.hfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_fft": {
  "data": {
   "shadows": "numpy.fft.ifft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_fft2d": {
  "data": {
   "shadows": "numpy.fft.ifft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_fftnd": {
  "data": {
   "shadows": "numpy.fft.ifftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_hermite_fft": {
  "data": {
   "shadows": "numpy.fft.ihfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_real_fft": {
  "data": {
   "shadows": "numpy.fft.irfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_real_fft2d": {
  "data": {
   "shadows": "numpy.fft.irfft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.inverse_real_fftnd": {
  "data": {
   "shadows": "numpy.fft.irfftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.real_fft": {
  "data": {
   "shadows": "numpy.fft.rfft"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.real_fft2d": {
  "data": {
   "shadows": "numpy.fft.rfft2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.fft.real_fftnd": {
  "data": {
   "shadows": "numpy.fft.rfftn"
  },
  "type": "import"
 },
 "numpy.oldnumeric.functions": {
  "data": {
   "shadows": "functions"
  },
  "type": "import"
 },
 "numpy.oldnumeric.linear_algebra": {
  "data": {
   "symbols_in_volume": [
    "numpy.linalg.LinAlgError"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.linear_algebra.Heigenvalues": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.linalg.eigvalsh"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.Heigenvectors": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.core.transpose",
    "numpy.linalg.eigh"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.LinAlgError": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.oldnumeric.linear_algebra.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "numpy.oldnumeric.linear_algebra.cholesky_decomposition": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.linalg.cholesky"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.determinant": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.eigenvalues": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.linalg.eigvals"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.eigenvectors": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.core.transpose",
    "numpy.linalg.eig"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.generalized_inverse": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.inverse": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "numpy.oldnumeric.linear_algebra.linear_least_squares": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.linalg.lstsq"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.singular_value_decomposition": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.solve_linear_equations": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.linear_algebra.transpose": {
  "data": {
   "shadows": "numpy.core.transpose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc": {
  "data": {
   "shadows": "misc"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "numpy.oldnumeric.misc.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.argsort": {
  "data": {
   "shadows": "numpy.argsort"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.around": {
  "data": {
   "shadows": "numpy.around"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.array2string": {
  "data": {
   "shadows": "array_printer.array2string"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.array_repr": {
  "data": {
   "shadows": "numpy.array_repr"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.array_str": {
  "data": {
   "shadows": "numpy.array_str"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.choose": {
  "data": {
   "shadows": "numpy.choose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.clip": {
  "data": {
   "shadows": "numpy.clip"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.concatenate": {
  "data": {
   "shadows": "numpy.concatenate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.convolve": {
  "data": {
   "shadows": "numpy.convolve"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.copy_reg": {
  "data": {
   "shadows": "copy_reg"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.cross_correlate": {
  "data": {
   "shadows": "numpy.correlate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.diagonal": {
  "data": {
   "shadows": "numpy.diagonal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.e": {
  "data": {
   "shadows": "numpy.e"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.innerproduct": {
  "data": {
   "shadows": "numpy.inner"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.insert": {
  "data": {
   "shadows": "numpy.place"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.outerproduct": {
  "data": {
   "shadows": "numpy.outer"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.put": {
  "data": {
   "shadows": "numpy.put"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.putmask": {
  "data": {
   "shadows": "numpy.putmask"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.rank": {
  "data": {
   "shadows": "numpy.rank"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.resize": {
  "data": {
   "shadows": "numpy.resize"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.searchsorted": {
  "data": {
   "shadows": "numpy.searchsorted"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.shape": {
  "data": {
   "shadows": "numpy.shape"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.size": {
  "data": {
   "shadows": "numpy.size"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.swapaxes": {
  "data": {
   "shadows": "numpy.swapaxes"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "numpy.oldnumeric.misc.vdot": {
  "data": {
   "shadows": "numpy.vdot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.precision": {
  "data": {
   "shadows": "precision"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng_stats": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.rng_stats.Numeric": {
  "data": {
   "shadows": "numpy.oldnumeric"
  },
  "type": "import"
 },
 "numpy.oldnumeric.rng_stats.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "numpy.oldnumeric.rng_stats.average": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "len",
    "numpy.oldnumeric.add.reduce",
    "numpy.oldnumeric.array"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng_stats.histogram": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.oldnumeric.Float",
    "numpy.oldnumeric.Int",
    "numpy.oldnumeric.NewAxis",
    "numpy.oldnumeric.add.reduce",
    "numpy.oldnumeric.arange",
    "numpy.oldnumeric.array",
    "numpy.oldnumeric.equal",
    "numpy.oldnumeric.floor",
    "numpy.oldnumeric.greater_equal",
    "numpy.oldnumeric.less_equal",
    "numpy.oldnumeric.logical_and",
    "numpy.oldnumeric.maximum.reduce",
    "numpy.oldnumeric.minimum.reduce",
    "numpy.oldnumeric.repeat",
    "numpy.oldnumeric.transpose",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng_stats.standardDeviation": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.oldnumeric.array",
    "numpy.oldnumeric.rng_stats.variance",
    "numpy.oldnumeric.sqrt"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.rng_stats.variance": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "numpy.oldnumeric.add.reduce",
    "numpy.oldnumeric.array",
    "numpy.oldnumeric.rng_stats.average"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.oldnumeric.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.oldnumeric.setup.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.oldnumeric.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.oldnumeric.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.oldnumeric.setupscons.configuration": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.oldnumeric.test": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "numpy.oldnumeric.tests.test_oldnumeric": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.oldnumeric.tests.test_oldnumeric.nose"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.complex128": {
  "data": {
   "shadows": "numpy.core.numeric.complex128"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.complex64": {
  "data": {
   "shadows": "numpy.core.numeric.complex64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.float32": {
  "data": {
   "shadows": "numpy.core.numeric.float32"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.float64": {
  "data": {
   "shadows": "numpy.core.numeric.float64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int16": {
  "data": {
   "shadows": "numpy.core.numeric.int16"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int32": {
  "data": {
   "shadows": "numpy.core.numeric.int32"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int64": {
  "data": {
   "shadows": "numpy.core.numeric.int64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.int8": {
  "data": {
   "shadows": "numpy.core.numeric.int8"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.test_oldtypes": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.oldnumeric.tests.test_oldnumeric.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.test_oldtypes.test_oldtypes": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NameError",
    "assert_array_equal",
    "complex",
    "float",
    "int",
    "numpy.array",
    "numpy.core.numeric.complex128",
    "numpy.core.numeric.complex64",
    "numpy.core.numeric.float32",
    "numpy.core.numeric.float64",
    "numpy.core.numeric.int16",
    "numpy.core.numeric.int32",
    "numpy.core.numeric.int64",
    "numpy.core.numeric.int8",
    "numpy.core.numeric.uint",
    "numpy.core.numeric.uint16",
    "numpy.core.numeric.uint32",
    "numpy.core.numeric.uint64",
    "numpy.core.numeric.uint8"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint": {
  "data": {
   "shadows": "numpy.core.numeric.uint"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint16": {
  "data": {
   "shadows": "numpy.core.numeric.uint16"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint32": {
  "data": {
   "shadows": "numpy.core.numeric.uint32"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint64": {
  "data": {
   "shadows": "numpy.core.numeric.uint64"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.uint8": {
  "data": {
   "shadows": "numpy.core.numeric.uint8"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_oldnumeric.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression": {
  "data": {},
  "type": "module"
 },
 "numpy.oldnumeric.tests.test_regression.TestRegression": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.oldnumeric.tests.test_regression.TestRegression.test_numeric_random": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.oldnumeric.random_array.randint",
    "numpy.oldnumeric.tests.test_regression.rlevel"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.tests.test_regression.randint": {
  "data": {
   "shadows": "numpy.oldnumeric.random_array.randint"
  },
  "type": "import"
 },
 "numpy.oldnumeric.tests.test_regression.rlevel": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv": {
  "data": {
   "symbols_in_volume": [
    "int",
    "numpy.byte",
    "numpy.dtype",
    "numpy.oldnumeric.typeconv._oldtypecodes",
    "numpy.short",
    "numpy.uintc",
    "numpy.ushort"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.typeconv.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv._changedtypes": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv._oldtypecodes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "numpy.oldnumeric.typeconv._oldtypecodes.__getitem__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "KeyError",
    "numpy.dtype",
    "numpy.oldnumeric.typeconv._changedtypes"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.typeconv.convtypecode": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.oldnumeric.typeconv.oldtype2dtype"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.typeconv.convtypecode2": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.oldnumeric.typeconv.oldtype2dtype"
   ]
  },
  "type": "function"
 },
 "numpy.oldnumeric.typeconv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.oldnumeric.typeconv.oldtype2dtype": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.oldnumeric.typeconv.oldtypecodes": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "numpy.oldnumeric.ufuncs": {
  "data": {
   "shadows": "ufuncs"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "numpy.oldnumeric.ufuncs.absolute": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.add": {
  "data": {
   "shadows": "numpy.add"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arccos": {
  "data": {
   "shadows": "numpy.arccos"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arccosh": {
  "data": {
   "shadows": "numpy.arccosh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arcsin": {
  "data": {
   "shadows": "numpy.arcsin"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arcsinh": {
  "data": {
   "shadows": "numpy.arcsinh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arctan": {
  "data": {
   "shadows": "numpy.arctan"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.arctanh": {
  "data": {
   "shadows": "numpy.arctanh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.bitwise_and": {
  "data": {
   "shadows": "numpy.bitwise_and"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.bitwise_or": {
  "data": {
   "shadows": "numpy.bitwise_or"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.bitwise_xor": {
  "data": {
   "shadows": "numpy.bitwise_xor"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.conjugate": {
  "data": {
   "shadows": "numpy.conjugate"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.cosh": {
  "data": {
   "shadows": "numpy.cosh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.divide": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.divide_safe": {
  "data": {
   "shadows": "numpy.divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.equal": {
  "data": {
   "shadows": "numpy.equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.fabs": {
  "data": {
   "shadows": "numpy.fabs"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.floor": {
  "data": {
   "shadows": "numpy.floor"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.floor_divide": {
  "data": {
   "shadows": "numpy.floor_divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.fmod": {
  "data": {
   "shadows": "numpy.fmod"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.greater": {
  "data": {
   "shadows": "numpy.greater"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.greater_equal": {
  "data": {
   "shadows": "numpy.greater_equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.hypot": {
  "data": {
   "shadows": "numpy.hypot"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.invert": {
  "data": {
   "shadows": "numpy.invert"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.left_shift": {
  "data": {
   "shadows": "numpy.left_shift"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.less": {
  "data": {
   "shadows": "numpy.less"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.less_equal": {
  "data": {
   "shadows": "numpy.less_equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.log10": {
  "data": {
   "shadows": "numpy.log10"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_and": {
  "data": {
   "shadows": "numpy.logical_and"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_not": {
  "data": {
   "shadows": "numpy.logical_not"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.logical_xor": {
  "data": {
   "shadows": "numpy.logical_xor"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.maximum": {
  "data": {
   "shadows": "numpy.maximum"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.minimum": {
  "data": {
   "shadows": "numpy.minimum"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.multiply": {
  "data": {
   "shadows": "numpy.multiply"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.negative": {
  "data": {
   "shadows": "numpy.negative"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.not_equal": {
  "data": {
   "shadows": "numpy.not_equal"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.power": {
  "data": {
   "shadows": "numpy.power"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.remainder": {
  "data": {
   "shadows": "numpy.remainder"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.right_shift": {
  "data": {
   "shadows": "numpy.right_shift"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.sinh": {
  "data": {
   "shadows": "numpy.sinh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.subtract": {
  "data": {
   "shadows": "numpy.subtract"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.tan": {
  "data": {
   "shadows": "numpy.tan"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.tanh": {
  "data": {
   "shadows": "numpy.tanh"
  },
  "type": "import"
 },
 "numpy.oldnumeric.ufuncs.true_divide": {
  "data": {
   "shadows": "numpy.true_divide"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array": {
  "data": {
   "symbols_in_volume": [
    "numpy.oldnumeric",
    "numpy.oldnumeric.__all__",
    "numpy.oldnumeric.user_array.__all__"
   ]
  },
  "type": "module"
 },
 "numpy.oldnumeric.user_array.UserArray": {
  "data": {
   "shadows": "numpy.lib.user_array.container"
  },
  "type": "import"
 },
 "numpy.oldnumeric.user_array.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.oldnumeric.user_array.nold": {
  "data": {
   "shadows": "numpy.oldnumeric"
  },
  "type": "import"
 },
 "numpy.polynomial": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.polynomial.bench": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "numpy.polynomial.polytemplate": {
  "data": {
   "symbols_in_volume": [
    "numpy.polynomial.polytemplate.string"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.polytemplate.polytemplate": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.polynomial.polytemplate.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial.polyutils.PolyBase": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyDomainError": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.polynomial.polyutils.PolyError"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.PolyError": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.RankWarning": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.polyutils.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "numpy.polynomial.polyutils.any": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.as_series": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "numpy.array",
    "numpy.common_type",
    "numpy.dtype",
    "numpy.empty",
    "numpy.polynomial.polyutils.any",
    "numpy.polynomial.polyutils.trimseq",
    "object"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.exceptions": {
  "data": {
   "shadows": "exceptions"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.getdomain": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.polynomial.polyutils.as_series",
    "numpy.typecodes"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapdomain": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.polynomial.polyutils.as_series",
    "numpy.polynomial.polyutils.mapparms"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.mapparms": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.polyutils.trimcoef": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.abs",
    "numpy.polynomial.polyutils.as_series",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.trimseq": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.polyutils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.polynomial.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.polynomial.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.polynomial.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.polynomial.test": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev": {
  "data": {
   "symbols_in_volume": [
    "numpy.polynomial.tests.test_chebyshev.T0",
    "numpy.polynomial.tests.test_chebyshev.T1",
    "numpy.polynomial.tests.test_chebyshev.T2",
    "numpy.polynomial.tests.test_chebyshev.T3",
    "numpy.polynomial.tests.test_chebyshev.T4",
    "numpy.polynomial.tests.test_chebyshev.T5",
    "numpy.polynomial.tests.test_chebyshev.T6",
    "numpy.polynomial.tests.test_chebyshev.T7",
    "numpy.polynomial.tests.test_chebyshev.T8",
    "numpy.polynomial.tests.test_chebyshev.T9"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_chebyshev.T0": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T4": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T5": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T6": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T7": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T8": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.T9": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebadd": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "assert_equal",
    "max",
    "numpy.polynomial.chebyshev.chebadd",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebdiv": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.chebadd",
    "numpy.polynomial.chebyshev.chebdiv",
    "numpy.polynomial.chebyshev.chebmul",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebmul": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abs",
    "assert_equal",
    "numpy.polynomial.chebyshev.chebmul",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebsub": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "assert_equal",
    "max",
    "numpy.polynomial.chebyshev.chebsub",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebval": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "f",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestArithmetic.test_chebval.f": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCalculus": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCalculus.test_chebder": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.chebyshev.chebder",
    "numpy.polynomial.chebyshev.chebint",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestCalculus.test_chebint": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.chebyshev.cheb2poly",
    "numpy.polynomial.chebyshev.chebint",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.polynomial.chebyshev.poly2cheb",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_add": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_call": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_convert": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_copy": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "assert_",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_deriv": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "assert_almost_equal",
    "p",
    "p.deriv"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_divmod": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "assert_",
    "divmod",
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_equal": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_fit": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "assert_almost_equal",
    "f",
    "numpy.linspace",
    "numpy.polynomial.chebyshev.Chebyshev.fit",
    "p",
    "p.domain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_fit.f": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_floordiv": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_fromroots": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.chebyshev.Chebyshev.fromroots",
    "numpy.polynomial.chebyshev.poly2cheb",
    "p",
    "p.coef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_identity": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace",
    "numpy.polynomial.chebyshev.Chebyshev.identity",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_integ": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.chebyshev.chebint",
    "p",
    "p.coef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_mapparms": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_mod": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_mul": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_not_equal": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_pow": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.chebyshev.Chebyshev",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_roots": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.chebyshev.Chebyshev",
    "numpy.polynomial.chebyshev.poly2cheb",
    "p",
    "p.roots"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_sub": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.chebyshev.Chebyshev"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_trim": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.Chebyshev",
    "p",
    "p.trim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestChebyshevClass.test_truncate": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebdomain": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.chebdomain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebone": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.chebone"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebx": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.chebx"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestConstants.test_chebzero": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.chebzero"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc": {
  "data": {
   "lineno": 235
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_cheb2poly": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.cheb2poly",
    "numpy.polynomial.tests.test_chebyshev.Tlist",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebfit": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "assert_raises",
    "exceptions.TypeError",
    "exceptions.ValueError",
    "f",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebfit",
    "numpy.polynomial.chebyshev.chebval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebfit.f": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebfromroots": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.chebyshev.chebfromroots",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebline": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.chebline"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebroots": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace",
    "numpy.polynomial.chebyshev.chebfromroots",
    "numpy.polynomial.chebyshev.chebroots",
    "numpy.polynomial.tests.test_chebyshev.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebtrim": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.chebyshev.chebtrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_chebvander": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "assert_",
    "assert_almost_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.chebyshev.chebval",
    "numpy.polynomial.chebyshev.chebvander",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestMisc.test_poly2cheb": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.chebyshev.poly2cheb",
    "numpy.polynomial.tests.test_chebyshev.Tlist",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__cseries_to_zseries": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.double",
    "numpy.polynomial.chebyshev._cseries_to_zseries",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.TestPrivate.test__zseries_to_cseries": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.array",
    "numpy.double",
    "numpy.polynomial.chebyshev._zseries_to_cseries",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_chebyshev.Tlist": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_chebyshev.TypeError": {
  "data": {
   "shadows": "exceptions.TypeError"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.ValueError": {
  "data": {
   "shadows": "exceptions.ValueError"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.ch": {
  "data": {
   "shadows": "numpy.polynomial.chebyshev"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_chebyshev.trim": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.polynomial.chebyshev.chebtrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial": {
  "data": {
   "symbols_in_volume": [
    "numpy.polynomial.tests.test_polynomial.T0",
    "numpy.polynomial.tests.test_polynomial.T1",
    "numpy.polynomial.tests.test_polynomial.T2",
    "numpy.polynomial.tests.test_polynomial.T3",
    "numpy.polynomial.tests.test_polynomial.T4",
    "numpy.polynomial.tests.test_polynomial.T5",
    "numpy.polynomial.tests.test_polynomial.T6",
    "numpy.polynomial.tests.test_polynomial.T7",
    "numpy.polynomial.tests.test_polynomial.T8",
    "numpy.polynomial.tests.test_polynomial.T9"
   ]
  },
  "type": "module"
 },
 "numpy.polynomial.tests.test_polynomial.T0": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T1": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T3": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T4": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T5": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T6": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T7": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T8": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.T9": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polyadd": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "assert_equal",
    "max",
    "numpy.polynomial.polynomial.polyadd",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polydiv": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "assert_equal",
    "assert_raises",
    "numpy.polynomial.polynomial.polyadd",
    "numpy.polynomial.polynomial.polydiv",
    "numpy.polynomial.polynomial.polymul",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polymul": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.polymul",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polysub": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_equal",
    "max",
    "numpy.polynomial.polynomial.polysub",
    "numpy.polynomial.tests.test_polynomial.trim",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polyval": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "f",
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyval",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestArithmetic.test_polyval.f": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCalculus": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestCalculus.test_polyder": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.polynomial.polyder",
    "numpy.polynomial.polynomial.polyint",
    "numpy.polynomial.tests.test_polynomial.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestCalculus.test_polyint": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.polynomial.polyint",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.tests.test_polynomial.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polydomain": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.polydomain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyone": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.polyone"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyx": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.polyx"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestConstants.test_polyzero": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.polyzero"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc": {
  "data": {
   "lineno": 218
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "assert_almost_equal",
    "assert_equal",
    "assert_raises",
    "exceptions.TypeError",
    "exceptions.ValueError",
    "f",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyfit",
    "numpy.polynomial.polynomial.polyval"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfit.f": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyfromroots": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.polynomial.polynomial.polyfromroots",
    "numpy.polynomial.tests.test_polynomial.Tlist",
    "numpy.polynomial.tests.test_polynomial.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyline": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.polyline"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyroots": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace",
    "numpy.polynomial.polynomial.polyfromroots",
    "numpy.polynomial.polynomial.polyroots",
    "numpy.polynomial.tests.test_polynomial.trim",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polytrim": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.polynomial.polytrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestMisc.test_polyvander": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "assert_",
    "assert_almost_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.polynomial.polynomial.polyval",
    "numpy.polynomial.polynomial.polyvander",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_add": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_call": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_convert": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_copy": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "assert_",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_deriv": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "assert_almost_equal",
    "p",
    "p.deriv"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_divmod": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "assert_",
    "divmod",
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_equal": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_fit": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "assert_almost_equal",
    "f",
    "numpy.linspace",
    "numpy.polynomial.polynomial.Polynomial.fit",
    "p",
    "p.domain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_fit.f": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_floordiv": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_fromroots": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.polynomial.Polynomial.fromroots",
    "p",
    "p.coef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_identity": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.linspace",
    "numpy.polynomial.polynomial.Polynomial.identity",
    "p"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_integ": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.polynomial.polyint",
    "p",
    "p.coef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_mapparms": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_mod": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_mul": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_not_equal": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "assert_"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_pow": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.polynomial.Polynomial",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_roots": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.polynomial.Polynomial",
    "p",
    "p.roots"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_sub": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "assert_",
    "numpy.polynomial.polynomial.Polynomial"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_trim": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polynomial.Polynomial",
    "p",
    "p.trim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.TestPolynomialClass.test_truncate": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polynomial.Tlist": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "numpy.polynomial.tests.test_polynomial.TypeError": {
  "data": {
   "shadows": "exceptions.TypeError"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.ValueError": {
  "data": {
   "shadows": "exceptions.ValueError"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.poly": {
  "data": {
   "shadows": "numpy.polynomial.polynomial"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polynomial.trim": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.polynomial.polynomial.polytrim"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils": {
  "data": {},
  "type": "module"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain": {
  "data": {
   "lineno": 44
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_getdomain": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.polyutils.getdomain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapdomain": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.polyutils.mapdomain"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestDomain.test_mapparms": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "assert_almost_equal",
    "numpy.polynomial.polyutils.mapparms"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_as_series": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "assert_",
    "assert_raises",
    "exceptions.ValueError",
    "len",
    "numpy.ones",
    "numpy.polynomial.polyutils.as_series",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimcoef": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "exceptions.ValueError",
    "numpy.polynomial.polyutils.trimcoef"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TestMisc.test_trimseq": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "assert_equal",
    "numpy.polynomial.polyutils.trimseq",
    "range"
   ]
  },
  "type": "function"
 },
 "numpy.polynomial.tests.test_polyutils.TypeError": {
  "data": {
   "shadows": "exceptions.TypeError"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.ValueError": {
  "data": {
   "shadows": "exceptions.ValueError"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.polynomial.tests.test_polyutils.pu": {
  "data": {
   "shadows": "numpy.polynomial.polyutils"
  },
  "type": "import"
 },
 "numpy.random": {
  "data": {
   "symbols_in_volume": [
    "info.__all__.extend",
    "numpy.testing.Tester"
   ]
  },
  "type": "module"
 },
 "numpy.random.Tester": {
  "data": {
   "shadows": "numpy.testing.Tester"
  },
  "type": "import"
 },
 "numpy.random.__RandomState_ctor": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "RandomState"
   ]
  },
  "type": "function"
 },
 "numpy.random.__all__": {
  "data": {
   "shadows": "info.__all__"
  },
  "type": "import"
 },
 "numpy.random.__doc__": {
  "data": {
   "shadows": "info.__doc__"
  },
  "type": "import"
 },
 "numpy.random.bench": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "numpy.random.info": {
  "data": {},
  "type": "module"
 },
 "numpy.random.info.__all__": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "numpy.random.info.depends": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "numpy.random.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.random.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.random.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.random.setup.configuration": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "numpy.random.setup.needs_mingw_ftime_workaround",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.random.setup.configuration.generate_libraries": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.get_mathlibs",
    "testcode_wincrypt"
   ]
  },
  "type": "function"
 },
 "numpy.random.setup.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "numpy.random.setup.get_mathlibs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_mathlibs"
  },
  "type": "import"
 },
 "numpy.random.setup.get_msvc_build_version": {
  "data": {
   "shadows": "distutils.msvccompiler.get_build_version"
  },
  "type": "import"
 },
 "numpy.random.setup.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.random.setup.needs_mingw_ftime_workaround": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "distutils.msvccompiler.get_build_version"
   ]
  },
  "type": "function"
 },
 "numpy.random.setup.newer": {
  "data": {
   "shadows": "distutils.dep_util.newer"
  },
  "type": "import"
 },
 "numpy.random.setup.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.random.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.random.setup.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "numpy.random.setup.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.random.setup.testcode_wincrypt": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "numpy.random.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.random.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.random.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.random.setupscons.configuration": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "numpy.random.setupscons.get_mathlibs": {
  "data": {
   "shadows": "numpy.distutils.misc_util.get_mathlibs"
  },
  "type": "import"
 },
 "numpy.random.setupscons.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "numpy.random.setupscons.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "numpy.random.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.random.setupscons.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "numpy.random.setupscons.testcode_wincrypt": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "numpy.random.test": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "numpy.random.tests.test_random": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.random.tests.test_random.TestMultinomial": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_basic": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.random.multinomial"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_int_negative_interval": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestMultinomial.test_zero_probability": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.random.multinomial"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRegression": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestRegression.test_VonMises_range": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.mtrand.vonmises"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRegression.test_hypergeometric_range": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "assert_",
    "numpy.all",
    "numpy.random.hypergeometric"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestRegression.test_logseries_convergence": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "assert_",
    "float",
    "numpy.random.logseries",
    "numpy.random.seed",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "numpy.random.tests.test_random.TestSetState.setUp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_backwards_compatibility": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_basic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_gaussian_reset_in_media_res": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.TestSetState.test_negative_binomial": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "numpy.random.tests.test_random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.random.tests.test_random.random": {
  "data": {
   "shadows": "numpy.random"
  },
  "type": "import"
 },
 "numpy.testing": {
  "data": {
   "symbols_in_volume": [
    "nosetester.NoseTester"
   ]
  },
  "type": "module"
 },
 "numpy.testing.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "numpy.testing.Tester": {
  "data": {
   "shadows": "nosetester.NoseTester"
  },
  "type": "import"
 },
 "numpy.testing.dec": {
  "data": {
   "shadows": "decorators"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses": {
  "data": {
   "symbols_in_volume": [
    "numpy.testing.noseclasses.numpy"
   ]
  },
  "type": "module"
 },
 "numpy.testing.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.KnownFailure": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "nose.plugins.errorclass.ErrorClass",
    "nose.plugins.errorclass.ErrorClassPlugin",
    "numpy.testing.noseclasses.KnownFailureTest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.KnownFailure.configure": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.KnownFailure.options": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.KnownFailureTest": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDocTestCase": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "nose.plugins.doctests.DocTestCase"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDocTestCase.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDocTestCase.id": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "nose.util.getpackage"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDocTestFinder": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDocTestFinder._find": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "inspect.isclass",
    "inspect.isfunction",
    "inspect.ismethod",
    "inspect.ismodule",
    "inspect.isroutine",
    "isinstance",
    "numpy.testing.noseclasses.doctest",
    "property",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDocTestFinder._from_module": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "numpy.testing.noseclasses.inspect",
    "object",
    "object.__module__",
    "object.func_globals",
    "object.im_class.__module__",
    "property"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "nose.plugins.doctests.Doctest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyDoctest.afterContext": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.numpy",
    "numpy.testing.noseclasses.print_state"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.configure": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "nose.plugins.base.Plugin.configure",
    "numpy.testing.noseclasses.NumpyDocTestFinder",
    "numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "AttributeError",
    "__import__",
    "nose.plugins.doctests.log.debug",
    "nose.util.src",
    "nosetester.get_package_name",
    "numpy.testing.noseclasses.NumpyDocTestCase",
    "numpy.testing.noseclasses.NumpyOutputChecker",
    "numpy.testing.noseclasses.doctest",
    "numpy.testing.noseclasses.numpy",
    "numpy.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.options": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "nose.plugins.base.Plugin.options",
    "numpy.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyDoctest.wantFile": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "nose.plugins.doctests.Doctest.wantFile",
    "numpy.testing.noseclasses._doctest_ignore",
    "numpy.testing.noseclasses.os"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyOutputChecker": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyOutputChecker.check_output": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.NumpyTestProgram": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.nose"
   ]
  },
  "type": "class"
 },
 "numpy.testing.noseclasses.NumpyTestProgram.runTests": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "numpy.testing.noseclasses.nose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.noseclasses.Plugin": {
  "data": {
   "shadows": "nose.plugins.base.Plugin"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses._doctest_ignore": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "numpy.testing.noseclasses.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.get_package_name": {
  "data": {
   "shadows": "nosetester.get_package_name"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.getpackage": {
  "data": {
   "shadows": "nose.util.getpackage"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.ismodule": {
  "data": {
   "shadows": "inspect.ismodule"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.isroutine": {
  "data": {
   "shadows": "inspect.isroutine"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.npd": {
  "data": {
   "shadows": "nose.plugins.doctests"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.testing.noseclasses.print_state": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "numpy.testing.noseclasses.src": {
  "data": {
   "shadows": "nose.util.src"
  },
  "type": "import"
 },
 "numpy.testing.run_module_suite": {
  "data": {
   "shadows": "nosetester.run_module_suite"
  },
  "type": "import"
 },
 "numpy.testing.setup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.testing.setup.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.testing.setup.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.testing.setup.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.testing.setup.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.testing.setupscons": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "numpy.distutils.core.setup",
    "numpy.testing.setupscons.configuration"
   ]
  },
  "type": "module"
 },
 "numpy.testing.setupscons.Configuration": {
  "data": {
   "shadows": "numpy.distutils.misc_util.Configuration"
  },
  "type": "import"
 },
 "numpy.testing.setupscons.configuration": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.distutils.misc_util.Configuration"
   ]
  },
  "type": "function"
 },
 "numpy.testing.setupscons.setup": {
  "data": {
   "shadows": "numpy.distutils.core.setup"
  },
  "type": "import"
 },
 "numpy.testing.test": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "numpy.testing.tests.test_decorators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.testing.tests.test_decorators.DidntSkipException": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_decorators.KnownFailureTest": {
  "data": {
   "shadows": "numpy.testing.noseclasses.KnownFailureTest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_decorators.test_setastest": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_default": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_isnottest": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_setastest.f_istest": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "f1",
    "f2",
    "numpy.testing.tests.test_decorators.DidntSkipException",
    "numpy.testing.tests.test_decorators.nose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.f1": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.f2": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_callable.skip_tester": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "f1",
    "f2",
    "numpy.testing.tests.test_decorators.DidntSkipException",
    "numpy.testing.tests.test_decorators.nose"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded.f1": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_functions_hardcoded.f2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Exception",
    "g1",
    "g2",
    "numpy.testing.noseclasses.KnownFailureTest",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.g1": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.g2": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.testing.tests.test_decorators.DidntSkipException",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_callable.skip_tester": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Exception",
    "g1",
    "g2",
    "numpy.testing.noseclasses.KnownFailureTest",
    "numpy.testing.tests.test_decorators.DidntSkipException"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded.g1": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_skip_generators_hardcoded.g2": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.testing.tests.test_decorators.DidntSkipException",
    "xrange"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_slow": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "numpy.testing.tests.test_decorators.test_slow.slow_func": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "run_module_suite"
   ]
  },
  "type": "module"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils._GenericTest",
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.setUp": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_complex_item": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "complex",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_inf_item": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_nan_item": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestAlmostEqual.test_simple_item": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.setUp": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_array": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_nan_items": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_arrays": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestApproxEqual.test_simple_items": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils._GenericTest",
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.setUp": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_nan": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqual.test_simple": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_big_float32": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "assert_array_almost_equal_nulp",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_big_float64": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_big_float64.failure": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex.failure": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_complex2": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "assert_array_almost_equal_nulp",
    "numpy.array",
    "numpy.complex",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_simple": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "assert_array_almost_equal_nulp",
    "numpy.finfo",
    "numpy.float64",
    "numpy.max",
    "numpy.ones",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_simple2": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayAlmostEqualNulp.test_simple2.failure": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "assert_array_almost_equal_nulp"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils._GenericTest",
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.setUp": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "foo"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank1.foo": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "foo"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_generic_rank3.foo": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_nan_array": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_recarrays": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestArrayEqual.test_string_arrays": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.TestArrayEqual"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestEqual.setUp": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "complex",
    "numpy.array",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_complex_item": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "complex",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_inf_items": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_nan_items": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_negative_zero": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.NZERO",
    "numpy.PZERO"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestEqual.test_non_numeric": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.does_not_raise_exception": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.raises_exception": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setUp": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.setUp.MyException": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_catch_no_raise": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "AssertionError",
    "raises"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_correct_catch": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "raises"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestRaises.test_wrong_exception": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "raises"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestULP.test_double": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "assert_array_max_ulp",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.ones",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_equal": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "assert_array_max_ulp",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_inf": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "assert_array_max_ulp",
    "numpy.array",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_nan": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "AssertionError",
    "assert_array_max_ulp",
    "numpy.NZERO",
    "numpy.PZERO",
    "numpy.array",
    "numpy.finfo",
    "numpy.float32",
    "numpy.float64",
    "numpy.inf",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestULP.test_single": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "assert_array_max_ulp",
    "numpy.finfo",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "UserWarning",
    "assert_equal",
    "assert_warns",
    "numpy.testing.tests.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn.f": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "assert_warns",
    "numpy.testing.tests.test_utils.sys"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.TestWarns.test_warn_wrong_warning.f": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "DeprecationWarning",
    "numpy.testing.tests.test_utils.warnings"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_equal": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest._test_not_equal": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_diffshape": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_eq": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank1_noteq": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_array_rank2_eq": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils._GenericTest.test_objarray": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "numpy.testing.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "numpy.testing.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "numpy.version": {
  "data": {
   "symbols_in_volume": [
    "numpy.version.imp",
    "numpy.version.os",
    "numpy.version.release",
    "numpy.version.svn",
    "numpy.version.svn_version_file",
    "numpy.version.version",
    "open"
   ]
  },
  "type": "module"
 },
 "numpy.version.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "numpy.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "numpy.version.release": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "numpy.version.short_version": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "numpy.version.svn": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "numpy.version.svn_version_file": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "numpy.version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.libpdf",
    "sk1libs.sys"
   ]
  },
  "type": "module"
 },
 "sk1libs.filters.export.aisaver": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.export.aisaver.AISaver": {
  "data": {
   "lineno": 53
  },
  "type": "class"
 },
 "sk1libs.filters.export.aisaver.AISaver.BeginGroup": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.BeginLayer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "app.Lib.psmisc.quote_ps_string",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.EndGroup": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.EndLayer": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.Image": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "app._sketch.write_ps_hex",
    "len",
    "object.Data",
    "object.Trafo",
    "object.bounding_rect",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.PolyBezier": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "app.Bezier",
    "app.ContAngle",
    "len",
    "range",
    "tuple",
    "type",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.Save": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.SimpleText": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "app.Lib.psmisc.quote_ps_string",
    "object.FullTrafo",
    "object.Properties",
    "object.Text",
    "object.bounding_rect",
    "trafo",
    "trafo.coeff",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.analyze": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object.has_fill",
    "object.has_font",
    "object.properties.fill_pattern",
    "object.properties.font"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.close": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.gradient_id": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.init_style": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.save_objects": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "object",
    "object.GetObjects",
    "object.Paths",
    "object.Properties",
    "object.bounding_rect",
    "object.is_Bezier",
    "object.is_Compound",
    "object.is_Ellipse",
    "object.is_Image",
    "object.is_Rectangle",
    "object.is_SimpleText"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.write_gradient": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "app.Rotation",
    "app.Translation",
    "math.atan2",
    "math.hypot",
    "math.pi",
    "max",
    "rot",
    "trafo",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.write_header": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "app.Lib.encoding.iso_latin_1",
    "len",
    "math.ceil",
    "math.floor",
    "range",
    "sk1libs.filters.export.aisaver.cmyk",
    "type",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.write_properties": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "sk1libs.filters.export.aisaver.cmyk",
    "sk1libs.filters.export.aisaver.ps_cap",
    "sk1libs.filters.export.aisaver.ps_join",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.AISaver.write_standard_encoding": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "app.Lib.encoding.adobe_standard",
    "len",
    "range",
    "write"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.Bezier": {
  "data": {
   "shadows": "app.Bezier"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.ContAngle": {
  "data": {
   "shadows": "app.ContAngle"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.ContSmooth": {
  "data": {
   "shadows": "app.ContSmooth"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.ContSymmetrical": {
  "data": {
   "shadows": "app.ContSymmetrical"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.Line": {
  "data": {
   "shadows": "app.Line"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.RectanglePath": {
  "data": {
   "shadows": "app.RectanglePath"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.Rotation": {
  "data": {
   "shadows": "app.Rotation"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.TransformRectangle": {
  "data": {
   "shadows": "app.TransformRectangle"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.UnitRect": {
  "data": {
   "shadows": "app.UnitRect"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver._sketch": {
  "data": {
   "shadows": "app._sketch"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.approx_arc": {
  "data": {
   "shadows": "app.approx_arc"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.cmyk": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "sk1libs.filters.export.aisaver.encoding": {
  "data": {
   "shadows": "app.Lib.encoding"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.format_name": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sk1libs.filters.export.aisaver.hypot": {
  "data": {
   "shadows": "math.hypot"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.ps_cap": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "sk1libs.filters.export.aisaver.ps_join": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sk1libs.filters.export.aisaver.quote_ps_string": {
  "data": {
   "shadows": "app.Lib.psmisc.quote_ps_string"
  },
  "type": "import"
 },
 "sk1libs.filters.export.aisaver.save": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "sk1libs.filters.export.aisaver.AISaver"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.export.pdfgensaver.Bezier": {
  "data": {
   "shadows": "app.Bezier"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.Image": {
  "data": {
   "shadows": "sk1libs.imaging.Image"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.Concat": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "apply"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.DrawBezierPath": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sk1libs.filters.export.pdfgensaver.make_pdf_path"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.DrawCircle": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.DrawLine": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.DrawLineXY": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.DrawRectangle": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.FillBezierPath": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "sk1libs.filters.export.pdfgensaver.make_pdf_path"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.FillCircle": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.FillPolygon": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "apply"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.FillRectangle": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.PopTrafo": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.PushTrafo": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.Rotate": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.Scale": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.SetFillColor": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.SetLineAttributes": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.SetLineColor": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.Translate": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFDevice.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver": {
  "data": {
   "lineno": 159
  },
  "type": "class"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.Save": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "app._",
    "int",
    "len",
    "sk1libs.filters.export.pdfgensaver.app"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "sk1libs.filters.export.pdfgensaver.PDF_VERSION_DEFAULT"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.axial_gradient": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "app.Rotation",
    "app.Translation",
    "app._sketch.fill_axial_gradient",
    "apply",
    "int",
    "math.atan2",
    "math.pi",
    "rot",
    "round",
    "sk1libs.imaging.Image.new"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.close": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.draw_arrow": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.execute_pattern": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "sk1libs.filters.export.pdfgensaver.PDFDevice"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.make_pdf_path": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "sk1libs.filters.export.pdfgensaver.make_pdf_path"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.mask_group": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "object.Mask",
    "object.MaskedObjects"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.path_text": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "active_fill",
    "apply",
    "len",
    "object.CharacterTransformations",
    "object.Properties",
    "object.Text",
    "object.bounding_rect",
    "range"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.polybezier": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "active_fill",
    "app.Graphics.curveop.arrow_trafos",
    "method"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.raster_image": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "apply",
    "object.Data",
    "object.Trafo"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.save_objects": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "object",
    "object.Duplicate",
    "object.GetObjects",
    "object.Paths",
    "object.Properties",
    "object.bounding_rect",
    "object.is_Bezier",
    "object.is_Compound",
    "object.is_Ellipse",
    "object.is_Image",
    "object.is_MaskGroup",
    "object.is_PathTextText",
    "object.is_Rectangle",
    "object.is_SimpleText"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.set_properties": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDFGenSaver.simple_text": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "active_fill",
    "apply",
    "object.FullTrafo",
    "object.Properties",
    "object.Text",
    "object.bounding_rect"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.PDF_VERSION_DEFAULT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pdfgensaver.Rotation": {
  "data": {
   "shadows": "app.Rotation"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver._sketch": {
  "data": {
   "shadows": "app._sketch"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.arrow_trafos": {
  "data": {
   "shadows": "app.Graphics.curveop.arrow_trafos"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.make_pdf_path": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "app.Bezier",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pdfgensaver.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.reportlab.pdfgen.canvas": {
  "data": {
   "shadows": "reportlab.pdfgen.canvas"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pdfgensaver.save": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "app._",
    "sk1libs.filters.export.pdfgensaver.PDFGenSaver",
    "sk1libs.filters.export.pdfgensaver.app"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver": {
  "data": {
   "symbols_in_volume": [
    "math.pi"
   ]
  },
  "type": "module"
 },
 "sk1libs.filters.export.pltsaver.Bezier": {
  "data": {
   "shadows": "app.Bezier"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.EPS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pltsaver.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.FlattenPath": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "abs",
    "sk1libs.filters.export.pltsaver.EPS",
    "sk1libs.filters.export.pltsaver.cr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver": {
  "data": {
   "lineno": 118
  },
  "type": "class"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.PathToSeq": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "app.Bezier",
    "app.Point",
    "range",
    "sk1libs.filters.export.pltsaver.FlattenPath",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.PolyBezier": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "map",
    "sk1libs.filters.export.pltsaver.rndtoint"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.SaveDocument": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "app.Trafo",
    "int",
    "map",
    "sk1libs.filters.export.pltsaver.rndtoint",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.SaveLayers": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.SaveObjects": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "object",
    "object.AsBezier",
    "object.GetObjects",
    "object.Paths",
    "object.Properties",
    "object.is_Bezier",
    "object.is_Compound",
    "object.is_Ellipse",
    "object.is_Rectangle",
    "object.is_SimpleText"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sk1libs.filters.export.pltsaver.command",
    "sk1libs.filters.export.pltsaver.plt_options"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.close": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.putpolyrec": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.write_headers": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.PLTSaver.write_terminator": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pltsaver.command": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pltsaver.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.cr": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.degrees": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pltsaver.format_name": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pltsaver.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pltsaver.plt_options": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sk1libs.filters.export.pltsaver.rndtoint": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.save": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "sk1libs.filters.export.pltsaver.PLTSaver"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pltsaver.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pssaver": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.export.pssaver.PostScriptDevice": {
  "data": {
   "shadows": "app.PostScriptDevice"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pssaver.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "sk1libs.filters.export.pssaver.save": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_",
    "app.PostScriptDevice",
    "dev",
    "sk1libs.filters.export.pssaver.app",
    "sk1libs.utils.system.current_date",
    "sk1libs.utils.system.get_real_username",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.pssaver.system": {
  "data": {
   "shadows": "sk1libs.utils.system"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.export.wmfsaver.Bezier": {
  "data": {
   "shadows": "app.Bezier"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.EMPTY_PATTERN": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.EMPTY_PEN": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.EPS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.FlattenPath": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abs",
    "sk1libs.filters.export.wmfsaver.EPS",
    "sk1libs.filters.export.wmfsaver.cr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.MAX_OBJECTS": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.MIN_OBJECT": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.CreateSelectBrush": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "sk1libs.filters.export.wmfsaver.rndtoint",
    "sk1libs.filters.export.wmfsaver.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.CreateSelectPen": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "len",
    "sk1libs.filters.export.wmfsaver.rndtoint",
    "sk1libs.filters.export.wmfsaver.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.DeleteObject": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.Ellipse": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "app.Point",
    "app.Polar",
    "app.conf.const.ArcArc",
    "app.conf.const.ArcChord",
    "app.conf.const.ArcPieSlice",
    "map",
    "sk1libs.filters.export.wmfsaver.rndtoint",
    "trf",
    "trf.m11",
    "trf.m12",
    "trf.m21",
    "trf.m22"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.FillStyle": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "sk1libs.filters.export.wmfsaver.EMPTY_PATTERN"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.LineStyle": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "sk1libs.filters.export.wmfsaver.EMPTY_PEN",
    "sk1libs.filters.export.wmfsaver.rndtoint"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.PathToSeq": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "app.Bezier",
    "range",
    "sk1libs.filters.export.wmfsaver.FlattenPath",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.PolyBezier": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "apply",
    "len",
    "map",
    "set",
    "set.append",
    "sk1libs.filters.export.wmfsaver.rndtoint",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.Rectangle": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "abs",
    "trf",
    "trf.m11",
    "trf.m12",
    "trf.m21",
    "trf.m22"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.SaveDocument": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "app.Trafo",
    "map",
    "max",
    "sk1libs.filters.export.wmfsaver.MIN_OBJECT",
    "sk1libs.filters.export.wmfsaver.rndtoint",
    "sk1libs.filters.export.wmfsaver.struct",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.SaveLayers": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.SaveObjects": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "object",
    "object.GetObjects",
    "object.Paths",
    "object.Properties",
    "object.is_Compound",
    "object.is_Ellipse",
    "object.is_Rectangle",
    "object.is_Text",
    "object.is_curve"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.SelectObject": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.Text": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "object.Paths",
    "object.Properties"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.__init__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.add_select_object": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "sk1libs.filters.export.wmfsaver.MAX_OBJECTS",
    "sk1libs.filters.export.wmfsaver.MIN_OBJECT"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.close": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.get_placeable": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "sk1libs.filters.export.wmfsaver.rx_magic",
    "sk1libs.filters.export.wmfsaver.struct",
    "sk1libs.filters.export.wmfsaver.struct_placeable_header"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.pack": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "apply",
    "sk1libs.filters.export.wmfsaver.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.packrec": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "apply",
    "max",
    "sk1libs.filters.export.wmfsaver.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.putpolyrec": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "apply",
    "len",
    "max",
    "sk1libs.filters.export.wmfsaver.struct",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.rect_to_ltrb": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "app.Point",
    "max",
    "min",
    "sk1libs.filters.export.wmfsaver.rndtoint",
    "trf"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.WMFSaver.write_headers": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "max",
    "sk1libs.filters.export.wmfsaver.struct",
    "sk1libs.filters.export.wmfsaver.struct_placeable_header",
    "sk1libs.filters.export.wmfsaver.struct_wmf_header",
    "sum"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.const": {
  "data": {
   "shadows": "app.conf.const"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.cr": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.format_name": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.rndtoint": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.rx_magic": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.save": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "sk1libs.filters.export.wmfsaver.WMFSaver"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.export.wmfsaver.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sk1libs.filters.export.wmfsaver.struct_placeable_header": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "sk1libs.filters.export.wmfsaver.struct_wmf_header": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sk1libs.filters.formats": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.import.bziploader": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.import.bziploader.BZIP2Loader": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sk1libs.filters.import.bziploader.BZIP2Loader.Load": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "app.io.load.load_drawing_from_file",
    "sk1libs.filters.import.bziploader.os",
    "sk1libs.utils.sh_quote"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.bziploader.BZIP2Loader.Messages": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "sk1libs.filters.import.bziploader.BZIP2Loader.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "sk1libs.filters.import.bziploader.BZIP2Loader.set_doc_class": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "sk1libs.filters.import.bziploader.SketchLoadError": {
  "data": {
   "shadows": "app.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.bziploader.load": {
  "data": {
   "shadows": "app.io.load"
  },
  "type": "import"
 },
 "sk1libs.filters.import.bziploader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.filters.import.bziploader.sh_quote": {
  "data": {
   "shadows": "sk1libs.utils.sh_quote"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.import.cdrloader.Arrow": {
  "data": {
   "shadows": "app.Arrow"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.BezierNode": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.BinaryInput": {
  "data": {
   "shadows": "streamfilter.BinaryInput"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.CDRCurve": {
  "data": {
   "lineno": 201
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.CDRCurve.__init__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.CDREllipse": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.CDREllipse.__init__": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.CDRLoader": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "app.io.load.GenericLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.CDRLoader.Load": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "app._",
    "app.events.warn.USER",
    "app.events.warn.warn",
    "app.io.load.SketchLoadError",
    "sk1libs.filters.import.cdrloader.RiffChunk",
    "sk1libs.filters.import.cdrloader.RiffEOF",
    "sk1libs.filters.import.cdrloader.app",
    "sk1libs.filters.import.cdrloader.sys",
    "sk1libs.filters.import.cdrloader.traceback"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.CDRLoader.__init__": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "app.io.load.GenericLoader.__init__"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.CDRLoader.import_curves": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "app.PolyBezier",
    "app._",
    "int",
    "len",
    "object",
    "object.Duplicate",
    "sk1libs.filters.import.cdrloader.app",
    "tuple",
    "type",
    "types.TupleType"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.CDRLoader.set_style": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "app.SolidPattern"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.CDRRectangle": {
  "data": {
   "lineno": 216
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.CDRRectangle.__init__": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.ConicalGradient": {
  "data": {
   "shadows": "app.ConicalGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.ContAngle": {
  "data": {
   "shadows": "app.ContAngle"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.ContSmooth": {
  "data": {
   "shadows": "app.ContSmooth"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.ContSymmetrical": {
  "data": {
   "shadows": "app.ContSymmetrical"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.CreateCMYKColor": {
  "data": {
   "shadows": "app.CreateCMYKColor"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.CreateRGBColor": {
  "data": {
   "shadows": "app.CreateRGBColor"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.EmptyCompositeError": {
  "data": {
   "shadows": "app.io.load.EmptyCompositeError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.GenericLoader": {
  "data": {
   "shadows": "app.io.load.GenericLoader"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.INTERNAL": {
  "data": {
   "shadows": "app.events.warn.INTERNAL"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.Image": {
  "data": {
   "shadows": "sk1libs.imaging.Image"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.ImageData": {
  "data": {
   "shadows": "app.ImageData"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.ImageTilePattern": {
  "data": {
   "shadows": "app.ImageTilePattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector": {
  "data": {
   "lineno": 252
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.check_trafo": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.extract_bmp": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "bytes",
    "ord",
    "range",
    "sk1libs.filters.import.cdrloader.StringIO",
    "sk1libs.filters.import.cdrloader.math",
    "sk1libs.filters.import.cdrloader.struct",
    "sk1libs.imaging.Image.fromstring",
    "sk1libs.imaging.Image.open"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.get_page_size": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "sk1libs.filters.import.cdrloader.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.get_trafo": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "app.Scale",
    "app.Trafo",
    "cmp",
    "min",
    "obj_trafo",
    "sk1libs.filters.import.cdrloader.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.loda_coords": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "abs",
    "app.ContAngle",
    "app.ContSmooth",
    "app.ContSymmetrical",
    "app.CreatePath",
    "app.Point",
    "app.Trafo",
    "ord",
    "range",
    "round",
    "sk1libs.filters.import.cdrloader.math",
    "sk1libs.filters.import.cdrloader.struct",
    "trafo",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.loda_fild": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.loda_outl": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.process_fill": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "app.CreateCMYKColor",
    "app.CreateRGBColor",
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.process_outline": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "app.CreateCMYKColor",
    "app.CreateRGBColor",
    "ord",
    "range",
    "sk1libs.filters.import.cdrloader.Outline",
    "sk1libs.filters.import.cdrloader.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.process_paths": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "list.contents",
    "ord",
    "range",
    "sk1libs.filters.import.cdrloader.CDRCurve",
    "sk1libs.filters.import.cdrloader.CDREllipse",
    "sk1libs.filters.import.cdrloader.CDRRectangle",
    "sk1libs.filters.import.cdrloader.struct",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.process_properties": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.InfoCollector.validate_heap": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.LinearGradient": {
  "data": {
   "shadows": "app.LinearGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.MaskGroup": {
  "data": {
   "shadows": "app.MaskGroup"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.MultiGradient": {
  "data": {
   "shadows": "app.MultiGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.Outline": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.RadialGradient": {
  "data": {
   "shadows": "app.RadialGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.RiffChunk": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.RiffChunk.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "InfoCollector"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.RiffChunk.chunk_name": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.RiffChunk.full_name": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.RiffChunk.load": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len",
    "sk1libs.filters.import.cdrloader.RiffChunk",
    "sk1libs.filters.import.cdrloader.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.RiffChunk.loadcompressed": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "len",
    "range",
    "sk1libs.filters.import.cdrloader.RiffChunk",
    "sk1libs.filters.import.cdrloader.struct",
    "sk1libs.filters.import.cdrloader.zlib"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.RiffEOF": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrloader.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.SketchLoadError": {
  "data": {
   "shadows": "app.io.load.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.calcsize": {
  "data": {
   "shadows": "struct.calcsize"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.load_file": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RiffChunk",
    "open"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrloader.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.units": {
  "data": {
   "shadows": "app.Lib.units"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.warn": {
  "data": {
   "shadows": "app.events.warn.warn"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrloader.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrziploader": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.import.cdrziploader.CDRZIPLoader": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "sk1libs.filters.import.cdrziploader.CDRZIPLoader.Load": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "app.io.load.load_drawing_from_file",
    "sk1libs.filters.import.cdrziploader.os",
    "tempfile.NamedTemporaryFile",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrziploader.CDRZIPLoader.Messages": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrziploader.CDRZIPLoader.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrziploader.CDRZIPLoader.set_doc_class": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sk1libs.filters.import.cdrziploader.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrziploader.SketchLoadError": {
  "data": {
   "shadows": "app.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrziploader.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrziploader.load": {
  "data": {
   "shadows": "app.io.load"
  },
  "type": "import"
 },
 "sk1libs.filters.import.cdrziploader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "float",
    "sk1libs.filters.formats.drawfile.units_per_point",
    "sk1libs.filters.import.drawinput.cStringIO"
   ]
  },
  "type": "module"
 },
 "sk1libs.filters.import.drawinput.Arrow": {
  "data": {
   "shadows": "app.Arrow"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.ContSmooth": {
  "data": {
   "shadows": "app.ContSmooth"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.CreateCMYKColor": {
  "data": {
   "shadows": "app.CreateCMYKColor"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.CreateRGBColor": {
  "data": {
   "shadows": "app.CreateRGBColor"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Document": {
  "data": {
   "shadows": "app.Document"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "app.io.load.GenericLoader",
    "sk1libs.filters.import.drawinput.format_name"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.Load": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "app.Graphics.pagelayout.PageLayout",
    "sk1libs.filters.formats.drawfile.drawfile",
    "sk1libs.filters.import.drawinput.scale"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "app.io.load.GenericLoader.__init__"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.make_safe": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.read_objects": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "app.Arrow",
    "app.CreatePath",
    "app.CreateRGBColor",
    "app.EmptyPattern",
    "app.GetFont",
    "app.Graphics.pagelayout.Landscape",
    "app.Graphics.pagelayout.PageLayout",
    "app.Graphics.pagelayout.Portrait",
    "app.Scale",
    "app.SimpleText",
    "app.SolidPattern",
    "app.Trafo",
    "app.Translation",
    "app.const.CapButt",
    "app.const.JoinMiter",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "object",
    "object.background",
    "object.baseline",
    "object.columns",
    "object.columns.x1",
    "object.columns.x2",
    "object.columns.y1",
    "object.columns.y2",
    "object.commands",
    "object.dpi_x",
    "object.dpi_y",
    "object.fill",
    "object.font_table",
    "object.foreground",
    "object.image",
    "object.object",
    "object.objects",
    "object.options",
    "object.outline",
    "object.path",
    "object.pattern",
    "object.size",
    "object.sprite",
    "object.style",
    "object.text",
    "object.transform",
    "object.width",
    "object.x1",
    "object.x2",
    "object.y1",
    "object.y2",
    "sk1libs.filters.formats.drawfile.font_table",
    "sk1libs.filters.formats.drawfile.group",
    "sk1libs.filters.formats.drawfile.jpeg",
    "sk1libs.filters.formats.drawfile.options",
    "sk1libs.filters.formats.drawfile.path",
    "sk1libs.filters.formats.drawfile.sprite",
    "sk1libs.filters.formats.drawfile.tagged",
    "sk1libs.filters.formats.drawfile.text",
    "sk1libs.filters.formats.drawfile.text_area",
    "sk1libs.filters.import.drawinput.RISCOSFont",
    "sk1libs.filters.import.drawinput.StringIO",
    "sk1libs.filters.import.drawinput.papersizes",
    "sk1libs.filters.import.drawinput.scale",
    "sk1libs.imaging.Image.fromstring",
    "sk1libs.imaging.Image.open",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.relative": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "sk1libs.filters.import.drawinput.scale"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.ta_new_line": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.ta_next_column": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "object.columns.x1",
    "object.columns.x2",
    "object.columns.y2",
    "sk1libs.filters.import.drawinput.scale"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.ta_set_colour": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "app.CreateRGBColor",
    "app.EmptyPattern",
    "app.SolidPattern",
    "float",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.DrawfileLoader.ta_write_line": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "app.SimpleText",
    "app.Translation",
    "len",
    "next",
    "sk1libs.filters.import.drawinput.RISCOSFont"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.EmptyCompositeError": {
  "data": {
   "shadows": "app.io.load.EmptyCompositeError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.GenericLoader": {
  "data": {
   "shadows": "app.io.load.GenericLoader"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.GetFont": {
  "data": {
   "shadows": "app.GetFont"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.GridLayer": {
  "data": {
   "shadows": "app.GridLayer"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Image": {
  "data": {
   "shadows": "sk1libs.imaging.Image"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Layer": {
  "data": {
   "shadows": "app.Layer"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.LinearGradient": {
  "data": {
   "shadows": "app.LinearGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.MultiGradient": {
  "data": {
   "shadows": "app.MultiGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.PathText": {
  "data": {
   "shadows": "app.PathText"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.RISCOSFont": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "app.GetFont",
    "len",
    "sk1libs.filters.import.drawinput.string"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.drawinput.RadialGradient": {
  "data": {
   "shadows": "app.RadialGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.SimpleText": {
  "data": {
   "shadows": "app.SimpleText"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.UnionRects": {
  "data": {
   "shadows": "app.UnionRects"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.cStringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.const": {
  "data": {
   "shadows": "app.const"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.drawfile": {
  "data": {
   "shadows": "sk1libs.filters.formats.drawfile"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.format_name": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sk1libs.filters.import.drawinput.orientations": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "sk1libs.filters.import.drawinput.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.pagelayout": {
  "data": {
   "shadows": "app.Graphics.pagelayout"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.papersizes": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sk1libs.filters.import.drawinput.scale": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sk1libs.filters.import.drawinput.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.filters.import.drawinput.version": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sk1libs.filters.import.gziploader": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.import.gziploader.GZIPLoader": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "sk1libs.filters.import.gziploader.GZIPLoader.Load": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "app.SketchLoadError",
    "app.io.load.load_drawing_from_file",
    "sk1libs.filters.import.gziploader.os",
    "sk1libs.utils.sh_quote"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.gziploader.GZIPLoader.Messages": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "sk1libs.filters.import.gziploader.GZIPLoader.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "sk1libs.filters.import.gziploader.GZIPLoader.set_doc_class": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "sk1libs.filters.import.gziploader.SketchLoadError": {
  "data": {
   "shadows": "app.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.gziploader.load": {
  "data": {
   "shadows": "app.io.load"
  },
  "type": "import"
 },
 "sk1libs.filters.import.gziploader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.filters.import.gziploader.sh_quote": {
  "data": {
   "shadows": "sk1libs.utils.sh_quote"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader": {
  "data": {
   "symbols_in_volume": [
    "app.StandardColors.black",
    "app.StandardColors.blue",
    "app.StandardColors.cyan",
    "app.StandardColors.darkgray",
    "app.StandardColors.green",
    "app.StandardColors.magenta",
    "app.StandardColors.red",
    "app.StandardColors.white",
    "app.StandardColors.yellow",
    "math.pi"
   ]
  },
  "type": "module"
 },
 "sk1libs.filters.import.pltloader.ArcArc": {
  "data": {
   "shadows": "app.conf.const.ArcArc"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.CapRound": {
  "data": {
   "shadows": "app.conf.const.CapRound"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.GenericLoader": {
  "data": {
   "shadows": "app.io.load.GenericLoader"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.INTERNAL": {
  "data": {
   "shadows": "app.events.warn.INTERNAL"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.JoinRound": {
  "data": {
   "shadows": "app.conf.const.JoinRound"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.PLTLoader": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "app.io.load.GenericLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.Load": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "app._"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "app.io.load.GenericLoader.__init__"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.arc": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "app.conf.const.ArcArc",
    "apply",
    "float",
    "math.atan2",
    "math.cos",
    "math.hypot",
    "math.sin",
    "sk1libs.filters.import.pltloader.degrees"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.arc_absolute": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.arc_relative": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.bezier": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.io.load.GenericLoader.bezier"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.circle_plot": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "apply",
    "float",
    "sk1libs.filters.import.pltloader.plu"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.get_compiled": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.get_position": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "float",
    "sk1libs.filters.import.pltloader.plu"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.initialize": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.Style",
    "app.conf.const.CapRound",
    "app.conf.const.JoinRound"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.interpret": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "app._",
    "is_number",
    "open",
    "sk1libs.filters.import.pltloader.app",
    "sk1libs.filters.import.pltloader.os",
    "sk1libs.filters.import.pltloader.shlex",
    "type",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.interpret.is_number": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.linetype": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "abs",
    "int"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.move": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.pen_down": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.pen_sizes": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.pen_up": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.plot_absolute": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.plot_relative": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.run": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "app.events.warn.INTERNAL",
    "app.events.warn.warn_tb",
    "apply",
    "len",
    "method"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.PLTLoader.select_pen": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "app.SolidPattern",
    "sk1libs.filters.import.pltloader.colors",
    "sk1libs.filters.import.pltloader.def_width_pen"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.pltloader.SketchLoadError": {
  "data": {
   "shadows": "app.io.load.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.StringType": {
  "data": {
   "shadows": "types.StringType"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.Style": {
  "data": {
   "shadows": "app.Style"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.colors": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "sk1libs.filters.import.pltloader.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.def_width_pen": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sk1libs.filters.import.pltloader.degrees": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "sk1libs.filters.import.pltloader.hypot": {
  "data": {
   "shadows": "math.hypot"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.pdebug": {
  "data": {
   "shadows": "app.events.warn.pdebug"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.plu": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sk1libs.filters.import.pltloader.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sk1libs.filters.import.pltloader.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.csscolor"
   ]
  },
  "type": "module"
 },
 "sk1libs.filters.import.stitchloader.CHANGECOLOR": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "sk1libs.filters.import.stitchloader.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.CreateRGBColor": {
  "data": {
   "shadows": "app.CreateRGBColor"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "app.io.load.GenericLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.Load": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "app._",
    "len",
    "sk1libs.filters.import.stitchloader.CHANGECOLOR",
    "sk1libs.filters.import.stitchloader.JUMP",
    "sk1libs.filters.import.stitchloader.NORMAL",
    "sk1libs.filters.import.stitchloader.UNKNOWN",
    "sk1libs.filters.import.stitchloader.app",
    "sk1libs.filters.import.stitchloader.os",
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "app.io.load.GenericLoader.__init__",
    "sk1libs.filters.import.stitchloader.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.bezier": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.io.load.GenericLoader.bezier"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.decode_flag": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.CHANGECOLOR",
    "sk1libs.filters.import.stitchloader.END",
    "sk1libs.filters.import.stitchloader.JUMP",
    "sk1libs.filters.import.stitchloader.NORMAL",
    "sk1libs.filters.import.stitchloader.UNKNOWN"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.decode_x": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.byte"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.decode_y": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.byte"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.get_position": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.initialize": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.Style",
    "app.const.CapRound",
    "app.const.JoinRound",
    "sk1libs.filters.import.stitchloader.Palette"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.jump": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.needle_down": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.needle_move": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.needle_up": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.readInt32": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.readInt8": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "int",
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.DSTLoader.readheader": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.END": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "sk1libs.filters.import.stitchloader.EXPLoader": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.DSTLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.stitchloader.EXPLoader.Load": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "app._",
    "sk1libs.filters.import.stitchloader.CHANGECOLOR",
    "sk1libs.filters.import.stitchloader.END",
    "sk1libs.filters.import.stitchloader.JUMP",
    "sk1libs.filters.import.stitchloader.NORMAL",
    "sk1libs.filters.import.stitchloader.UNKNOWN",
    "sk1libs.filters.import.stitchloader.app",
    "sk1libs.filters.import.stitchloader.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.EXPLoader.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.DSTLoader"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.GenericLoader": {
  "data": {
   "shadows": "app.io.load.GenericLoader"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.INTERNAL": {
  "data": {
   "shadows": "app.events.warn.INTERNAL"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.JUMP": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "sk1libs.filters.import.stitchloader.NORMAL": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "sk1libs.filters.import.stitchloader.PCSLoader": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.DSTLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.stitchloader.PCSLoader.Load": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "app._",
    "len",
    "sk1libs.filters.import.stitchloader.app",
    "sk1libs.filters.import.stitchloader.os",
    "struct.unpack",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.PCSLoader.__init__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.DSTLoader"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.PCSLoader.readheader": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.PESLoader": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.DSTLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.stitchloader.PESLoader.Load": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "app._",
    "sk1libs.filters.import.stitchloader.CHANGECOLOR",
    "sk1libs.filters.import.stitchloader.END",
    "sk1libs.filters.import.stitchloader.JUMP",
    "sk1libs.filters.import.stitchloader.NORMAL",
    "sk1libs.filters.import.stitchloader.app",
    "sk1libs.filters.import.stitchloader.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.PESLoader.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "sk1libs.filters.import.stitchloader.DSTLoader"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.PESLoader.readheader": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "xrange"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.Palette": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "sk1libs.filters.import.stitchloader.Palette.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.Palette.load_palette": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "app.CreateRGBColor",
    "len",
    "open",
    "sk1libs.filters.import.stitchloader.colors",
    "sk1libs.filters.import.stitchloader.os",
    "struct.unpack",
    "type",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.Palette.next_color": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "app.SolidPattern",
    "app.StandardColors.black"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.SketchLoadError": {
  "data": {
   "shadows": "app.io.load.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.StitchLoader": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "app.io.load.GenericLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.import.stitchloader.StitchLoader.Load": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "app._",
    "app.io.load.SketchLoadError",
    "sk1libs.filters.import.stitchloader.DSTLoader",
    "sk1libs.filters.import.stitchloader.EXPLoader",
    "sk1libs.filters.import.stitchloader.PCSLoader",
    "sk1libs.filters.import.stitchloader.PESLoader"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.StitchLoader.__init__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "app.io.load.GenericLoader.__init__",
    "sk1libs.filters.import.stitchloader.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.StringType": {
  "data": {
   "shadows": "types.StringType"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.Style": {
  "data": {
   "shadows": "app.Style"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.UNKNOWN": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "sk1libs.filters.import.stitchloader._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.atoi": {
  "data": {
   "shadows": "string.atoi"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.byte": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.byte2bin": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str",
    "xrange"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.colors": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sk1libs.filters.import.stitchloader.const": {
  "data": {
   "shadows": "app.const"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.csscolor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "app.CreateRGBColor",
    "app.StandardColors.black",
    "len",
    "str",
    "str.strip",
    "string.atoi"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.import.stitchloader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.pdebug": {
  "data": {
   "shadows": "app.events.warn.pdebug"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "sk1libs.filters.import.stitchloader.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview": {
  "data": {},
  "type": "module"
 },
 "sk1libs.filters.preview.cdrpreview.Arrow": {
  "data": {
   "shadows": "app.Arrow"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.BezierCurve": {
  "data": {
   "lineno": 201
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.BezierCurve.__init__": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.BezierNode": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.BinaryInput": {
  "data": {
   "shadows": "streamfilter.BinaryInput"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.CDRLoader": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "app.io.load.GenericLoader"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.CDRLoader.Load": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "app._",
    "app.events.warn.USER",
    "app.events.warn.warn",
    "app.io.load.SketchLoadError",
    "sk1libs.filters.preview.cdrpreview.RiffChunk",
    "sk1libs.filters.preview.cdrpreview.RiffEOF",
    "sk1libs.filters.preview.cdrpreview.app",
    "sk1libs.filters.preview.cdrpreview.sys",
    "sk1libs.filters.preview.cdrpreview.traceback"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.CDRLoader.__init__": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "app.io.load.GenericLoader.__init__"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.CDRLoader.import_curves": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "app.EmptyPattern",
    "app.PolyBezier",
    "app.SolidPattern",
    "app._",
    "int",
    "len",
    "object",
    "object.Duplicate",
    "sk1libs.filters.preview.cdrpreview.app",
    "tuple",
    "type",
    "types.TupleType"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.ConicalGradient": {
  "data": {
   "shadows": "app.ConicalGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.ContAngle": {
  "data": {
   "shadows": "app.ContAngle"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.ContSmooth": {
  "data": {
   "shadows": "app.ContSmooth"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.ContSymmetrical": {
  "data": {
   "shadows": "app.ContSymmetrical"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.CreateCMYKColor": {
  "data": {
   "shadows": "app.CreateCMYKColor"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.CreateRGBColor": {
  "data": {
   "shadows": "app.CreateRGBColor"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.EmptyCompositeError": {
  "data": {
   "shadows": "app.io.load.EmptyCompositeError"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.EmptyPattern": {
  "data": {
   "shadows": "app.EmptyPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.GenericLoader": {
  "data": {
   "shadows": "app.io.load.GenericLoader"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.INTERNAL": {
  "data": {
   "shadows": "app.events.warn.INTERNAL"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.Image": {
  "data": {
   "shadows": "sk1libs.imaging.Image"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.ImageData": {
  "data": {
   "shadows": "app.ImageData"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.ImageTilePattern": {
  "data": {
   "shadows": "app.ImageTilePattern"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector": {
  "data": {
   "lineno": 213
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.check_trafo": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.extract_bmp": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bytes",
    "ord",
    "range",
    "sk1libs.filters.preview.cdrpreview.StringIO",
    "sk1libs.filters.preview.cdrpreview.math",
    "sk1libs.filters.preview.cdrpreview.struct",
    "sk1libs.imaging.Image.fromstring",
    "sk1libs.imaging.Image.open"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.get_page_size": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "sk1libs.filters.preview.cdrpreview.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.get_trafo": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "app.Trafo",
    "cmp",
    "min",
    "sk1libs.filters.preview.cdrpreview.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.loda_coords": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "app.ContAngle",
    "app.ContSmooth",
    "app.ContSymmetrical",
    "app.CreatePath",
    "app.Point",
    "ord",
    "range",
    "sk1libs.filters.preview.cdrpreview.struct",
    "trafo",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.loda_fild": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.loda_outl": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.process_fill": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "app.CreateCMYKColor",
    "app.CreateRGBColor",
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.process_outline": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "app.CreateCMYKColor",
    "app.CreateRGBColor",
    "ord",
    "range",
    "sk1libs.filters.preview.cdrpreview.Outline",
    "sk1libs.filters.preview.cdrpreview.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.process_paths": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "list.contents",
    "ord",
    "range",
    "sk1libs.filters.preview.cdrpreview.BezierCurve",
    "sk1libs.filters.preview.cdrpreview.struct",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.process_properties": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.InfoCollector.validate_heap": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.LinearGradient": {
  "data": {
   "shadows": "app.LinearGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.MaskGroup": {
  "data": {
   "shadows": "app.MaskGroup"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.MultiGradient": {
  "data": {
   "shadows": "app.MultiGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.Outline": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.RadialGradient": {
  "data": {
   "shadows": "app.RadialGradient"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.RiffChunk": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.RiffChunk.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "InfoCollector"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.RiffChunk.chunk_name": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.RiffChunk.full_name": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.RiffChunk.load": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len",
    "sk1libs.filters.preview.cdrpreview.RiffChunk",
    "sk1libs.filters.preview.cdrpreview.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.RiffChunk.loadcompressed": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "len",
    "range",
    "sk1libs.filters.preview.cdrpreview.RiffChunk",
    "sk1libs.filters.preview.cdrpreview.struct",
    "sk1libs.filters.preview.cdrpreview.zlib"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.RiffEOF": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "sk1libs.filters.preview.cdrpreview.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.SketchLoadError": {
  "data": {
   "shadows": "app.io.load.SketchLoadError"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.calcsize": {
  "data": {
   "shadows": "struct.calcsize"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.load_file": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "RiffChunk",
    "open"
   ]
  },
  "type": "function"
 },
 "sk1libs.filters.preview.cdrpreview.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.units": {
  "data": {
   "shadows": "app.Lib.units"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.warn": {
  "data": {
   "shadows": "app.events.warn.warn"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "sk1libs.filters.preview.cdrpreview.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "sk1libs.imaging": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.BmpImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.BmpImagePlugin.BmpImageFile",
    "sk1libs.imaging.BmpImagePlugin.Image",
    "sk1libs.imaging.BmpImagePlugin._accept",
    "sk1libs.imaging.BmpImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.BmpImagePlugin.BIT2MODE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sk1libs.imaging.BmpImagePlugin.BmpImageFile": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.BmpImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.BmpImagePlugin.BmpImageFile._bitmap": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "chr",
    "len",
    "range",
    "read",
    "sk1libs.imaging.BmpImagePlugin.BIT2MODE",
    "sk1libs.imaging.BmpImagePlugin.ImageFile",
    "sk1libs.imaging.BmpImagePlugin.ImagePalette",
    "sk1libs.imaging.BmpImagePlugin.i16",
    "sk1libs.imaging.BmpImagePlugin.i32",
    "sk1libs.imaging.BmpImagePlugin.string"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.BmpImageFile._open": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "SyntaxError",
    "sk1libs.imaging.BmpImagePlugin.i32"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.DibImageFile": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.BmpImagePlugin.BmpImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.BmpImagePlugin.DibImageFile._open": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.BmpImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.BmpImagePlugin.ImagePalette": {
  "data": {
   "shadows": "ImagePalette"
  },
  "type": "import"
 },
 "sk1libs.imaging.BmpImagePlugin.SAVE": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "sk1libs.imaging.BmpImagePlugin.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sk1libs.imaging.BmpImagePlugin._accept": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin._save": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "chr",
    "range",
    "sk1libs.imaging.BmpImagePlugin.ImageFile",
    "sk1libs.imaging.BmpImagePlugin.SAVE",
    "sk1libs.imaging.BmpImagePlugin.o16",
    "sk1libs.imaging.BmpImagePlugin.o32"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.i16": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.i32": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.o16": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.o32": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BmpImagePlugin.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.imaging.BufrStubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.BufrStubImagePlugin.BufrStubImageFile",
    "sk1libs.imaging.BufrStubImagePlugin.Image",
    "sk1libs.imaging.BufrStubImagePlugin._accept",
    "sk1libs.imaging.BufrStubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.BufrStubImagePlugin.BufrStubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.BufrStubImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.BufrStubImagePlugin.BufrStubImageFile._load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sk1libs.imaging.BufrStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BufrStubImagePlugin.BufrStubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SyntaxError",
    "sk1libs.imaging.BufrStubImagePlugin._accept"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BufrStubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.BufrStubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.BufrStubImagePlugin._accept": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sk1libs.imaging.BufrStubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sk1libs.imaging.BufrStubImagePlugin._save": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "IOError",
    "hasattr",
    "sk1libs.imaging.BufrStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.BufrStubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sk1libs.imaging.BufrStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.isatty": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.read": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "min"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.readline": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.readlines": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.seek": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ContainerIO.ContainerIO.tell": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "sk1libs.imaging.ExifTags": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ExifTags.GPSTAGS": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "sk1libs.imaging.ExifTags.TAGS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sk1libs.imaging.FitsStubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.FitsStubImagePlugin.FITSStubImageFile",
    "sk1libs.imaging.FitsStubImagePlugin.Image",
    "sk1libs.imaging.FitsStubImagePlugin._accept",
    "sk1libs.imaging.FitsStubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.FitsStubImagePlugin.FITSStubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.FitsStubImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.FitsStubImagePlugin.FITSStubImageFile._load": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "sk1libs.imaging.FitsStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FitsStubImagePlugin.FITSStubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SyntaxError",
    "sk1libs.imaging.FitsStubImagePlugin._accept"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FitsStubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.FitsStubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.FitsStubImagePlugin._accept": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sk1libs.imaging.FitsStubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sk1libs.imaging.FitsStubImagePlugin._save": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "IOError",
    "hasattr",
    "sk1libs.imaging.FitsStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FitsStubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sk1libs.imaging.FitsStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.FontFile.FontFile": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "sk1libs.imaging.FontFile.FontFile.__getitem__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile.FontFile.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile.FontFile.compile": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "max",
    "range",
    "sk1libs.imaging.FontFile.Image",
    "sk1libs.imaging.FontFile.WIDTH"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile.FontFile.save1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "id",
    "open",
    "range",
    "sk1libs.imaging.FontFile.os",
    "sk1libs.imaging.FontFile.puti16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile.FontFile.save2": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "open",
    "sk1libs.imaging.FontFile.marshal",
    "sk1libs.imaging.FontFile.os",
    "sk1libs.imaging.FontFile.zlib"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.FontFile.WIDTH": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sk1libs.imaging.FontFile.marshal": {
  "data": {
   "shadows": "marshal"
  },
  "type": "import"
 },
 "sk1libs.imaging.FontFile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.imaging.FontFile.puti16": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.FontFile.zlib": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sk1libs.imaging.GdImageFile": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.GdImageFile.GdImageFile": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.GdImageFile.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.GdImageFile.GdImageFile._open": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "sk1libs.imaging.GdImageFile.ImagePalette",
    "sk1libs.imaging.GdImageFile.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GdImageFile.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.GdImageFile.ImagePalette": {
  "data": {
   "shadows": "ImagePalette"
  },
  "type": "import"
 },
 "sk1libs.imaging.GdImageFile.__builtin__": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "sk1libs.imaging.GdImageFile.__version__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sk1libs.imaging.GdImageFile.i16": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GdImageFile.open": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "IOError",
    "SyntaxError",
    "ValueError",
    "sk1libs.imaging.GdImageFile.GdImageFile",
    "sk1libs.imaging.GdImageFile.__builtin__",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GribStubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.GribStubImagePlugin.GribStubImageFile",
    "sk1libs.imaging.GribStubImagePlugin.Image",
    "sk1libs.imaging.GribStubImagePlugin._accept",
    "sk1libs.imaging.GribStubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.GribStubImagePlugin.GribStubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.GribStubImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.GribStubImagePlugin.GribStubImageFile._load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sk1libs.imaging.GribStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GribStubImagePlugin.GribStubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SyntaxError",
    "sk1libs.imaging.GribStubImagePlugin._accept"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GribStubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.GribStubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.GribStubImagePlugin._accept": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GribStubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sk1libs.imaging.GribStubImagePlugin._save": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "IOError",
    "hasattr",
    "sk1libs.imaging.GribStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.GribStubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sk1libs.imaging.GribStubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.Hdf5StubImagePlugin.HDF5StubImageFile",
    "sk1libs.imaging.Hdf5StubImagePlugin.Image",
    "sk1libs.imaging.Hdf5StubImagePlugin._accept",
    "sk1libs.imaging.Hdf5StubImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin.HDF5StubImageFile": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.Hdf5StubImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin.HDF5StubImageFile._load": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "sk1libs.imaging.Hdf5StubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin.HDF5StubImageFile._open": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SyntaxError",
    "sk1libs.imaging.Hdf5StubImagePlugin._accept"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin._accept": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin._handler": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin._save": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "IOError",
    "hasattr",
    "sk1libs.imaging.Hdf5StubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.Hdf5StubImagePlugin.register_handler": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sk1libs.imaging.Hdf5StubImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageChops.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageChops.add": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.add_modulo": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.blend": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageChops.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.composite": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageChops.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.constant": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageChops.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.darker": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.difference": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.duplicate": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.invert": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.lighter": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.logical_and": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.logical_or": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.logical_xor": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.multiply": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.offset": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.screen": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.subtract": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageChops.subtract_modulo": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageColor": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "int",
    "sk1libs.imaging.ImageColor.string"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.ImageColor.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageColor.colormap": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageColor.getcolor": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageColor.Image",
    "sk1libs.imaging.ImageColor.getrgb"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageColor.getrgb": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "colorsys.hls_to_rgb",
    "float",
    "int",
    "isinstance",
    "sk1libs.imaging.ImageColor.re",
    "sk1libs.imaging.ImageColor.str2int",
    "sk1libs.imaging.ImageColor.string",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageColor.hls_to_rgb": {
  "data": {
   "shadows": "colorsys.hls_to_rgb"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageColor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageColor.str2int": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageColor.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageColor.x": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageDraw": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sk1libs.imaging.ImageDraw.Image"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.ImageDraw.Draw": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "AttributeError",
    "sk1libs.imaging.ImageDraw.ImageDraw"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageDraw.ImageColor": {
  "data": {
   "shadows": "ImageColor"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "sk1libs.imaging.ImageDraw.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw._getink": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageDraw.Image",
    "sk1libs.imaging.ImageDraw.ImageColor"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.arc": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.bitmap": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.chord": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.ellipse": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.getfont": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageDraw.ImageFont"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.line": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.pieslice": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.point": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.polygon": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.rectangle": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.setfill": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sk1libs.imaging.ImageDraw.warnings"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.setfont": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.setink": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "DeprecationWarning",
    "sk1libs.imaging.ImageDraw.Image",
    "sk1libs.imaging.ImageDraw.ImageColor",
    "sk1libs.imaging.ImageDraw.warnings"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.shape": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.text": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw.textsize": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.ImageDraw2": {
  "data": {
   "shadows": "ImageDraw2"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageDraw.ImageFont": {
  "data": {
   "shadows": "ImageFont"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageDraw.Outline": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageDraw._imagingagg": {
  "data": {
   "shadows": "_imagingagg"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageDraw.floodfill": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.getdraw": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "ImportError",
    "sk1libs.imaging.ImageDraw.ImageDraw2",
    "sk1libs.imaging.ImageDraw._imagingagg"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageDraw.warnings": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageEnhance": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageEnhance.Brightness": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageEnhance.Brightness.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageEnhance.Color": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageEnhance.Color.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageEnhance.Contrast": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageEnhance.Contrast.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "int",
    "sk1libs.imaging.ImageEnhance.Image",
    "sk1libs.imaging.ImageEnhance.ImageStat"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageEnhance.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageEnhance.ImageFilter": {
  "data": {
   "shadows": "ImageFilter"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageEnhance.ImageStat": {
  "data": {
   "shadows": "ImageStat"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageEnhance.Sharpness": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance._Enhance"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageEnhance.Sharpness.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance.ImageFilter"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageEnhance._Enhance": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageEnhance._Enhance.enhance": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageEnhance.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFileIO": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageFileIO.ImageFileIO": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "StringIO.StringIO"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFileIO.ImageFileIO.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "StringIO.StringIO.__init__"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFileIO.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageFilter": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageFilter.BLUR": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.BuiltinFilter": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.Kernel"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.BuiltinFilter.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.CONTOUR": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.DETAIL": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.EDGE_ENHANCE": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.EDGE_ENHANCE_MORE": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.EMBOSS": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.FIND_EDGES": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.Filter": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.GaussianBlur": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.GaussianBlur.__init__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.GaussianBlur.filter": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.Kernel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.Kernel.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "reduce"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.Kernel.filter": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "apply"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.MaxFilter": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.RankFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.MaxFilter.__init__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.MedianFilter": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.RankFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.MedianFilter.__init__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.MinFilter": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.RankFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.MinFilter.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.ModeFilter": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.ModeFilter.__init__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.ModeFilter.filter": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.RankFilter": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.RankFilter.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.RankFilter.filter": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.SHARPEN": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.SMOOTH": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.SMOOTH_MORE": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.BuiltinFilter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.UnsharpMask": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageFilter.Filter"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageFilter.UnsharpMask.__init__": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageFilter.UnsharpMask.filter": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageGL": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageGL.TextureFactory": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageGL._imaginggl": {
  "data": {
   "shadows": "_imaginggl"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageGrab": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "sk1libs.imaging.ImageGrab.Image",
    "sk1libs.imaging.ImageGrab._grabscreen"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.ImageGrab.BmpImagePlugin": {
  "data": {
   "shadows": "BmpImagePlugin"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageGrab.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageGrab.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageGrab._grabscreen": {
  "data": {
   "shadows": "_grabscreen"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageGrab.grab": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageGrab.Image",
    "sk1libs.imaging.ImageGrab.grabber"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageGrab.grabber": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageGrab.grabclipboard": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageGrab.BmpImagePlugin",
    "sk1libs.imaging.ImageGrab.Image",
    "sk1libs.imaging.ImageGrab.StringIO"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageMode": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageMode.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageMode.ModeDescriptor": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageMode.ModeDescriptor.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageMode.ModeDescriptor.__str__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageMode._modes": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImageMode.getmode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageMode.Image",
    "sk1libs.imaging.ImageMode.ModeDescriptor",
    "sk1libs.imaging.ImageMode._modes"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImagePath": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.ImagePath.Image"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.ImagePath.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImagePath.Path": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sk1libs.imaging.ImagePath.Path.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sk1libs.imaging.ImagePath.Path.compact": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "sk1libs.imaging.ImagePath.Path.getbbox": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "sk1libs.imaging.ImagePath.Path.map": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sk1libs.imaging.ImagePath.Path.tolist": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "sk1libs.imaging.ImagePath.Path.transform": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageQt": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageQt.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageQt.ImageQt": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "PyQt4.QtGui.QImage"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageQt.ImageQt.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "PyQt4.QtGui.QImage.Format_ARGB32",
    "PyQt4.QtGui.QImage.Format_Indexed8",
    "PyQt4.QtGui.QImage.Format_Mono",
    "PyQt4.QtGui.QImage.Format_RGB32",
    "PyQt4.QtGui.QImage.__init__",
    "SystemError",
    "ValueError",
    "format",
    "hasattr",
    "len",
    "range",
    "sk1libs.imaging.ImageQt.Image",
    "sk1libs.imaging.ImageQt.rgb",
    "unicode"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageQt.QImage": {
  "data": {
   "shadows": "PyQt4.QtGui.QImage"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageQt.qRgb": {
  "data": {
   "shadows": "PyQt4.QtGui.qRgb"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageQt.rgb": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "PyQt4.QtGui.qRgb"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageSequence": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageSequence.Iterator": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageSequence.Iterator.__getitem__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "EOFError",
    "IndexError"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageSequence.Iterator.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageTransform": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageTransform.AffineTransform": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageTransform.Image",
    "sk1libs.imaging.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageTransform.ExtentTransform": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageTransform.Image",
    "sk1libs.imaging.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageTransform.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageTransform.MeshTransform": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageTransform.Image",
    "sk1libs.imaging.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageTransform.QuadTransform": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageTransform.Image",
    "sk1libs.imaging.ImageTransform.Transform"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageTransform.Transform": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageTransform.Image"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageTransform.Transform.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageTransform.Transform.getdata": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageTransform.Transform.transform": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.ImageWin.Dib": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageWin.Dib.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hasattr",
    "sk1libs.imaging.ImageWin.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Dib.draw": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "isinstance",
    "sk1libs.imaging.ImageWin.HWND"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Dib.expose": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "isinstance",
    "sk1libs.imaging.ImageWin.HWND"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Dib.fromstring": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Dib.paste": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Dib.query_palette": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "isinstance",
    "sk1libs.imaging.ImageWin.HWND"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Dib.tostring": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.HDC": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageWin.HDC.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.HDC.__int__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.HWND": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageWin.HWND.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.HWND.__int__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.ImageWin.ImageWindow": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageWin.Window"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageWin.ImageWindow.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "isinstance",
    "sk1libs.imaging.ImageWin.Dib",
    "sk1libs.imaging.ImageWin.Window"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.ImageWindow.ui_handle_repair": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window": {
  "data": {
   "lineno": 174
  },
  "type": "class"
 },
 "sk1libs.imaging.ImageWin.Window.__dispatcher": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "apply",
    "getattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageWin.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.mainloop": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "sk1libs.imaging.ImageWin.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.ui_handle_clear": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.ui_handle_damage": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.ui_handle_destroy": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.ui_handle_repair": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "sk1libs.imaging.ImageWin.Window.ui_handle_resize": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.JpegImagePlugin.APP",
    "sk1libs.imaging.JpegImagePlugin.COM",
    "sk1libs.imaging.JpegImagePlugin.DQT",
    "sk1libs.imaging.JpegImagePlugin.Image",
    "sk1libs.imaging.JpegImagePlugin.JpegImageFile",
    "sk1libs.imaging.JpegImagePlugin.SOF",
    "sk1libs.imaging.JpegImagePlugin.Skip",
    "sk1libs.imaging.JpegImagePlugin._accept",
    "sk1libs.imaging.JpegImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.JpegImagePlugin.APP": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "divmod",
    "ord",
    "sk1libs.imaging.JpegImagePlugin.ImageFile",
    "sk1libs.imaging.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.COM": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sk1libs.imaging.JpegImagePlugin.ImageFile",
    "sk1libs.imaging.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.DQT": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "SyntaxError",
    "len",
    "ord",
    "sk1libs.imaging.JpegImagePlugin.ImageFile",
    "sk1libs.imaging.JpegImagePlugin.array",
    "sk1libs.imaging.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.JpegImageFile": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.JpegImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.JpegImagePlugin.JpegImageFile._getexif": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "KeyError",
    "fixup",
    "sk1libs.imaging.JpegImagePlugin.StringIO",
    "sk1libs.imaging.JpegImagePlugin.TiffImagePlugin"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.JpegImageFile._getexif.fixup": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.JpegImageFile._open": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "SyntaxError",
    "handler",
    "ord",
    "sk1libs.imaging.JpegImagePlugin.MARKER",
    "sk1libs.imaging.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.JpegImageFile.draft": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.JpegImageFile.load_djpeg": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "sk1libs.imaging.JpegImagePlugin.Image",
    "sk1libs.imaging.JpegImagePlugin.os",
    "sk1libs.imaging.JpegImagePlugin.tempfile"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.MARKER": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "sk1libs.imaging.JpegImagePlugin.RAWMODE": {
  "data": {
   "lineno": 410
  },
  "type": "constant"
 },
 "sk1libs.imaging.JpegImagePlugin.SOF": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "SyntaxError",
    "len",
    "ord",
    "range",
    "sk1libs.imaging.JpegImagePlugin.ImageFile",
    "sk1libs.imaging.JpegImagePlugin.i16",
    "sk1libs.imaging.JpegImagePlugin.string"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.Skip": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "sk1libs.imaging.JpegImagePlugin.ImageFile",
    "sk1libs.imaging.JpegImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.TiffImagePlugin": {
  "data": {
   "shadows": "TiffImagePlugin"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.__version__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sk1libs.imaging.JpegImagePlugin._accept": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin._save": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "chr",
    "len",
    "sk1libs.imaging.JpegImagePlugin.ImageFile",
    "sk1libs.imaging.JpegImagePlugin.RAWMODE",
    "sk1libs.imaging.JpegImagePlugin.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin._save_cjpeg": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "sk1libs.imaging.JpegImagePlugin.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.array": {
  "data": {
   "shadows": "array"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.i16": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.i32": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.JpegImagePlugin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sk1libs.imaging.JpegImagePlugin.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sk1libs.imaging.McIdasImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.McIdasImagePlugin.Image",
    "sk1libs.imaging.McIdasImagePlugin.McIdasImageFile",
    "sk1libs.imaging.McIdasImagePlugin._accept"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.McIdasImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.McIdasImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.McIdasImagePlugin.McIdasImageFile": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.McIdasImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.McIdasImagePlugin.McIdasImageFile._open": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "SyntaxError",
    "len",
    "list",
    "sk1libs.imaging.McIdasImagePlugin._accept",
    "sk1libs.imaging.McIdasImagePlugin.struct"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.McIdasImagePlugin.__version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sk1libs.imaging.McIdasImagePlugin._accept": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "sk1libs.imaging.McIdasImagePlugin.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "sk1libs.imaging.PdfImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.PdfImagePlugin.Image",
    "sk1libs.imaging.PdfImagePlugin._save"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.PdfImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.PdfImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.PdfImagePlugin.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "sk1libs.imaging.PdfImagePlugin.__version__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sk1libs.imaging.PdfImagePlugin._endobj": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "sk1libs.imaging.PdfImagePlugin._obj": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "dict.items"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.PdfImagePlugin._save": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "filter",
    "int",
    "len",
    "ord",
    "range",
    "sk1libs.imaging.PdfImagePlugin.Image",
    "sk1libs.imaging.PdfImagePlugin.ImageFile",
    "sk1libs.imaging.PdfImagePlugin.StringIO",
    "sk1libs.imaging.PdfImagePlugin.__version__",
    "sk1libs.imaging.PdfImagePlugin._endobj",
    "sk1libs.imaging.PdfImagePlugin._obj"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.SgiImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.imaging.SgiImagePlugin.Image",
    "sk1libs.imaging.SgiImagePlugin.SgiImageFile",
    "sk1libs.imaging.SgiImagePlugin._accept"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.SgiImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.SgiImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.SgiImagePlugin.SgiImageFile": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.SgiImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.SgiImagePlugin.SgiImageFile._open": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "SyntaxError",
    "ord",
    "sk1libs.imaging.SgiImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.SgiImagePlugin.__version__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sk1libs.imaging.SgiImagePlugin._accept": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sk1libs.imaging.SgiImagePlugin.i16"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.SgiImagePlugin.i16": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.SgiImagePlugin.i32": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.TiffTags": {
  "data": {},
  "type": "module"
 },
 "sk1libs.imaging.TiffTags.TAGS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sk1libs.imaging.TiffTags.TYPES": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "sk1libs.imaging.WmfImagePlugin": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "sk1libs.imaging.WmfImagePlugin.Image",
    "sk1libs.imaging.WmfImagePlugin.WmfHandler",
    "sk1libs.imaging.WmfImagePlugin.WmfStubImageFile",
    "sk1libs.imaging.WmfImagePlugin._accept",
    "sk1libs.imaging.WmfImagePlugin._save",
    "sk1libs.imaging.WmfImagePlugin.register_handler"
   ]
  },
  "type": "module"
 },
 "sk1libs.imaging.WmfImagePlugin.Image": {
  "data": {
   "shadows": "Image"
  },
  "type": "import"
 },
 "sk1libs.imaging.WmfImagePlugin.ImageFile": {
  "data": {
   "shadows": "ImageFile"
  },
  "type": "import"
 },
 "sk1libs.imaging.WmfImagePlugin.WmfHandler": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "sk1libs.imaging.WmfImagePlugin.WmfHandler.load": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sk1libs.imaging.WmfImagePlugin.Image"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.WmfHandler.open": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.WmfStubImageFile": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "format",
    "sk1libs.imaging.WmfImagePlugin.ImageFile"
   ]
  },
  "type": "class"
 },
 "sk1libs.imaging.WmfImagePlugin.WmfStubImageFile._load": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "sk1libs.imaging.WmfImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.WmfStubImageFile._open": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "SyntaxError",
    "sk1libs.imaging.WmfImagePlugin.long",
    "sk1libs.imaging.WmfImagePlugin.short",
    "sk1libs.imaging.WmfImagePlugin.word"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.__version__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sk1libs.imaging.WmfImagePlugin._accept": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin._handler": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sk1libs.imaging.WmfImagePlugin._save": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "IOError",
    "hasattr",
    "sk1libs.imaging.WmfImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.dword": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.long": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sk1libs.imaging.WmfImagePlugin.dword"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.register_handler": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "sk1libs.imaging.WmfImagePlugin._handler"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.short": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.imaging.WmfImagePlugin.word": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sk1libs.libpdf.sys",
    "sk1libs.libpdf.warning"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.Version": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sk1libs.libpdf.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.getMonitor": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "sk1libs.libpdf.getStory": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sk1libs.libpdf.os",
    "sk1libs.libpdf.yaml"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.os"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.lib.RL_DEBUG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.boxstuff": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.lib.boxstuff.__doc__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.boxstuff.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.boxstuff.aspectRatioFix": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abs",
    "float",
    "min"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sk1libs.libpdf.lib.corp.test"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.lib.corp.Color": {
  "data": {
   "shadows": "reportlab.lib.colors.Color"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.Drawing": {
  "data": {
   "shadows": "reportlab.graphics.shapes.Drawing"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.Group": {
  "data": {
   "shadows": "reportlab.graphics.shapes.Group"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.PolyLine": {
  "data": {
   "shadows": "reportlab.graphics.shapes.PolyLine"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.RL_BusinessCard": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "AttrMap",
    "AttrMapValue",
    "reportlab.graphics.widgetbase.Widget",
    "reportlab.lib.units.cm"
   ]
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.corp.RL_BusinessCard.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "reportlab.lib.colors.ReportLabBlue",
    "reportlab.lib.colors.black",
    "reportlab.lib.colors.white",
    "reportlab.lib.units.cm"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_BusinessCard.demo": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.Drawing"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_BusinessCard.draw": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "range",
    "reportlab.graphics.shapes.Group",
    "reportlab.graphics.shapes.Rect",
    "reportlab.graphics.shapes.String",
    "reportlab.lib.colors.black",
    "reportlab.lib.units.cm",
    "sk1libs.libpdf.lib.corp.RL_CorpLogo"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogo": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttrMap",
    "AttrMapValue",
    "reportlab.graphics.widgetbase.Widget"
   ]
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogo.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "reportlab.lib.colors.ReportLabBlue",
    "reportlab.lib.colors.white"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogo._paintLogo": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.definePath",
    "reportlab.lib.colors.white"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogo.demo": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.Drawing"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogo.draw": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "float",
    "getattr",
    "reportlab.graphics.shapes.Group",
    "reportlab.graphics.shapes.Rect",
    "reportlab.lib.colors.Color"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoReversed": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.corp.RL_CorpLogo"
   ]
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoReversed.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "reportlab.lib.colors.ReportLabBlue",
    "reportlab.lib.colors.white",
    "sk1libs.libpdf.lib.corp.RL_CorpLogo"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "AttrMap",
    "AttrMapValue",
    "reportlab.graphics.widgetbase.Widget"
   ]
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "reportlab.lib.colors.ReportLabBlue",
    "reportlab.lib.colors.white"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin._addPage": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.PolyLine"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin._getText": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.String"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin._sw": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "reportlab.pdfbase.pdfmetrics.stringWidth"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin.demo": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.Drawing"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.RL_CorpLogoThin.draw": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.Group",
    "reportlab.graphics.shapes.Rect",
    "reportlab.lib.colors.Color"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.Rect": {
  "data": {
   "shadows": "reportlab.graphics.shapes.Rect"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.ReportLabBlue": {
  "data": {
   "shadows": "reportlab.lib.colors.ReportLabBlue"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.ReportLabLogo": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.corp.ReportLabLogo.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "reportlab.lib.units.inch"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.ReportLabLogo.draw": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "reportlab.graphics.renderPDF.draw",
    "sk1libs.libpdf.lib.corp.RL_CorpLogo"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.String": {
  "data": {
   "shadows": "reportlab.graphics.shapes.String"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.Widget": {
  "data": {
   "shadows": "reportlab.graphics.widgetbase.Widget"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.corp.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.corp.black": {
  "data": {
   "shadows": "reportlab.lib.colors.black"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.cm": {
  "data": {
   "shadows": "reportlab.lib.units.cm"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.definePath": {
  "data": {
   "shadows": "reportlab.graphics.shapes.definePath"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.inch": {
  "data": {
   "shadows": "reportlab.lib.units.inch"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.renderPDF": {
  "data": {
   "shadows": "reportlab.graphics.renderPDF"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.stringWidth": {
  "data": {
   "shadows": "reportlab.pdfbase.pdfmetrics.stringWidth"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.corp.test": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "reportlab.graphics.shapes.Drawing",
    "reportlab.lib.colors.Color",
    "sk1libs.libpdf.lib.corp.RL_BusinessCard",
    "sk1libs.libpdf.lib.corp.RL_CorpLogo",
    "sk1libs.libpdf.lib.corp.RL_CorpLogoReversed"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.corp.white": {
  "data": {
   "shadows": "reportlab.lib.colors.white"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.enums": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.lib.enums.TA_CENTER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.enums.TA_JUSTIFY": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.enums.TA_LEFT": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.enums.TA_RIGHT": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.enums.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.enums.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.geomutils": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.lib.geomutils.__doc__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.geomutils.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.geomutils.normalizeTRBL": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.logger.Logger",
    "sk1libs.libpdf.lib.logger.WarnOnce"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.lib.logger.Logger": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.logger.Logger.__call__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.Logger.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "sys.stderr"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.Logger.add": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "open",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.Logger.remove": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.Logger.write": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.WarnOnce": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "sk1libs.libpdf.lib.logger.WarnOnce.__call__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.WarnOnce.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.WarnOnce.once": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.logger.logger"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.logger.__doc__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.logger.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.logger.infoOnce": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.logger.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.logger.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.logger.warnOnce": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.pagesizes": {
  "data": {
   "symbols_in_volume": [
    "reportlab.lib.units.cm",
    "reportlab.lib.units.inch",
    "sk1libs.libpdf.lib.pagesizes.ELEVENSEVENTEEN",
    "sk1libs.libpdf.lib.pagesizes.LEGAL",
    "sk1libs.libpdf.lib.pagesizes.LETTER"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.lib.pagesizes.A0": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.A1": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.A2": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.A3": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.A4": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.A5": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.A6": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B0": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B1": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B2": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B3": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B4": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B5": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.B6": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.ELEVENSEVENTEEN": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.LEGAL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.LETTER": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.__version__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.cm": {
  "data": {
   "shadows": "reportlab.lib.units.cm"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.pagesizes.elevenSeventeen": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.inch": {
  "data": {
   "shadows": "reportlab.lib.units.inch"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.pagesizes.landscape": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.pagesizes.legal": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.letter": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.pagesizes.portrait": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.rltempfile": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.lib.rltempfile.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.rltempfile.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.rltempfile.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.rltempfile._rl_getuid": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hasattr",
    "sk1libs.libpdf.lib.rltempfile.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.rltempfile._rl_tempdir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.rltempfile.get_rl_tempdir": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.rltempfile._rl_getuid",
    "sk1libs.libpdf.lib.rltempfile._rl_tempdir",
    "sk1libs.libpdf.lib.rltempfile.os",
    "sk1libs.libpdf.lib.rltempfile.tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.rltempfile.get_rl_tempfile": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.rltempfile.get_rl_tempdir",
    "sk1libs.libpdf.lib.rltempfile.os",
    "sk1libs.libpdf.lib.rltempfile.tempfile"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.rltempfile.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.rltempfile.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.set_ops": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.lib.set_ops.__doc__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.set_ops.__set_coerce": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "list",
    "sk1libs.libpdf.lib.set_ops.string",
    "sk1libs.libpdf.lib.set_ops.types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.set_ops.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.set_ops.intersect": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "list",
    "sk1libs.libpdf.lib.set_ops.__set_coerce",
    "sk1libs.libpdf.lib.set_ops.types",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.set_ops.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.set_ops.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.set_ops.union": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "list",
    "sk1libs.libpdf.lib.set_ops.types",
    "sk1libs.libpdf.lib.set_ops.unique",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.set_ops.unique": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sk1libs.libpdf.lib.set_ops.__set_coerce",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.textsplit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sk1libs.libpdf.lib.textsplit.CANNOT_END_LINE",
    "sk1libs.libpdf.lib.textsplit.CANNOT_START_LINE",
    "sk1libs.libpdf.lib.textsplit.doctest",
    "sk1libs.libpdf.lib.textsplit.re",
    "sk1libs.libpdf.lib.textsplit.textsplit"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.lib.textsplit.ALL_CANNOT_END": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.textsplit.ALL_CANNOT_START": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.textsplit.CANNOT_END_LINE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.textsplit.CANNOT_START_LINE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.textsplit.StringType": {
  "data": {
   "shadows": "types.StringType"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.UnicodeType": {
  "data": {
   "shadows": "types.UnicodeType"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit._FUZZ": {
  "data": {
   "shadows": "reportlab.rl_config._FUZZ"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.__version__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.textsplit.cjkwrap": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "reduce",
    "sk1libs.libpdf.lib.textsplit.rx",
    "unicode"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.textsplit.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.dumbSplit": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "enumerate",
    "reportlab.rl_config._FUZZ",
    "sk1libs.libpdf.lib.textsplit.ALL_CANNOT_START",
    "type",
    "types.UnicodeType"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.textsplit.getCharWidths": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "reportlab.pdfbase.pdfmetrics.stringWidth"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.textsplit.kinsokuShoriSplit": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "sk1libs.libpdf.lib.textsplit.CANNOT_END_LINE"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.lib.textsplit.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.rx": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "sk1libs.libpdf.lib.textsplit.stringWidth": {
  "data": {
   "shadows": "reportlab.pdfbase.pdfmetrics.stringWidth"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.textsplit": {
  "data": {
   "shadows": "textsplit"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "sk1libs.libpdf.lib.textsplit.wordSplit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dumbSplit",
    "sk1libs.libpdf.lib.textsplit.getCharWidths",
    "type",
    "types.UnicodeType"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfbase": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.pdfbase.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.libpdf.pdfbase._cidfontdata.CIDFontInfo",
    "sk1libs.libpdf.pdfbase._cidfontdata.allowedEncodings",
    "sk1libs.libpdf.pdfbase._cidfontdata.encodings_chs",
    "sk1libs.libpdf.pdfbase._cidfontdata.encodings_cht",
    "sk1libs.libpdf.pdfbase._cidfontdata.encodings_jpn",
    "sk1libs.libpdf.pdfbase._cidfontdata.encodings_kor",
    "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_chs",
    "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_cht",
    "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_jpn",
    "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_kor",
    "sk1libs.libpdf.pdfbase._cidfontdata.widthsByUnichar"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.CIDFontInfo": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.__doc__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.allowedEncodings": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.allowedTypeFaces": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.defaultUnicodeEncodings": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.encodings_chs": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.encodings_cht": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.encodings_jpn": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.encodings_kor": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.languages": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.message1": {
  "data": {
   "lineno": 472
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.message2": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_chs": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_cht": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_jpn": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.typeFaces_kor": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.unicode_encodings": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfbase._cidfontdata.widthsByUnichar": {
  "data": {
   "lineno": 462
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.pdfgen.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen.pathobject": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject._init_code_append": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "code_append"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.arc": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str",
    "reportlab.pdfgen.pdfgeom.bezierArc"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.arcTo": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str",
    "reportlab.pdfgen.pdfgeom.bezierArc"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.circle": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.close": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.curveTo": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.ellipse": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str",
    "reportlab.pdfgen.pdfgeom.bezierArc"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.getCode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "sk1libs.libpdf.pdfgen.pathobject.string"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.lineTo": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.moveTo": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.PDFPathObject.rect": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "reportlab.lib.utils.fp_str"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pathobject.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen.pathobject.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen.pathobject.fp_str": {
  "data": {
   "shadows": "reportlab.lib.utils.fp_str"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfgen.pathobject.pdfgeom": {
  "data": {
   "shadows": "reportlab.pdfgen.pdfgeom"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfgen.pathobject.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom": {
  "data": {},
  "type": "module"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.bezierArc": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abs",
    "float",
    "int",
    "math.ceil",
    "math.cos",
    "math.pi",
    "math.sin",
    "max",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "sk1libs.libpdf.pdfgen.pdfgeom.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "sk1libs.libpdf.reportlab.monitor": {
  "data": {
   "shadows": "reportlab.monitor"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.libpdf.rl_config._startUp"
   ]
  },
  "type": "module"
 },
 "sk1libs.libpdf.rl_config.CMapSearchPath": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.T1SearchPath": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.TTFSearchPath": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.ZLIB_WARNINGS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config._FUZZ": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config._SAVED": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.__doc__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config._registered_resets": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config._reset": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "c",
    "f",
    "sk1libs.libpdf.rl_config._registered_resets",
    "sk1libs.libpdf.rl_config._startUp"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.rl_config._setOpt": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "conv",
    "globals",
    "os.environ",
    "os.environ.has_key"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.rl_config._startUp": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "_unset_",
    "conv",
    "float",
    "getattr",
    "globals",
    "int",
    "isinstance",
    "reportlab.lib.pagesizes",
    "reportlab.lib.utils.rl_isdir",
    "sk1libs.libpdf.rl_config._SAVED",
    "sk1libs.libpdf.rl_config._setOpt",
    "sk1libs.libpdf.rl_config.os",
    "sk1libs.libpdf.rl_config.reportlab",
    "sk1libs.libpdf.rl_config.sys",
    "sk1libs.libpdf.rl_config.sys_version",
    "type"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.rl_config._startUp._unset_": {
  "data": {
   "lineno": 180
  },
  "type": "class"
 },
 "sk1libs.libpdf.rl_config.allowShortTableRows": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.allowTableBoundsErrors": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.autoConvertEncoding": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.canvas_baseColor": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.canvas_basefontname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.defaultEncoding": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.defaultGraphicsFontName": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.defaultImageCaching": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.defaultPageSize": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.emptyTableAction": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.eps_preview": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.eps_preview_transparent": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.eps_ttf_embed": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.eps_ttf_embed_uid": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.fsEncodings": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.imageReaderFlags": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.invariant": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.longTableOptimize": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.odbc_driver": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.overlapAttachedSpace": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.pageCompression": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.pagesizes": {
  "data": {
   "shadows": "reportlab.lib.pagesizes"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.paraFontSizeHeightOffset": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.platypus_link_underline": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.register_reset": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "sk1libs.libpdf.rl_config._registered_resets",
    "weakref.ref",
    "x"
   ]
  },
  "type": "function"
 },
 "sk1libs.libpdf.rl_config.reportlab": {
  "data": {
   "shadows": "reportlab"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.rl_isdir": {
  "data": {
   "shadows": "reportlab.lib.utils.rl_isdir"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.shapeChecking": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.showBoundary": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sk1libs.libpdf.rl_config.sys_version": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.verbose": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.warnOnMissingFontGlyphs": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "sk1libs.libpdf.rl_config.wrapA85": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "sk1libs.libpdf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sk1libs.libpdf.warning": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "sk1libs.libpdf.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "sk1libs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "sk1libs.utils": {
  "data": {
   "symbols_in_volume": [
    "sk1libs.utils.re"
   ]
  },
  "type": "module"
 },
 "sk1libs.utils.Empty": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "sk1libs.utils.Empty.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.ListType": {
  "data": {
   "shadows": "types.ListType"
  },
  "type": "import"
 },
 "sk1libs.utils.flatten": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "list",
    "type",
    "types.ListType"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.format": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "converter",
    "dict",
    "len",
    "sk1libs.utils.rx_format",
    "sk1libs.utils.string"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sk1libs.utils.rx_format": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "sk1libs.utils.sh_quote": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "sk1libs.utils.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "sk1libs.utils.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.utils.system": {
  "data": {},
  "type": "module"
 },
 "sk1libs.utils.system.Fedora": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "sk1libs.utils.system.GENERIC": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "sk1libs.utils.system.LINUX": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Leopard": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "sk1libs.utils.system.LinuxOther": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "sk1libs.utils.system.MACOSX": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "sk1libs.utils.system.MacOther": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Mandriva": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Mint": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "sk1libs.utils.system.SnowLeopard": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Suse": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Ubuntu": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Unix": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "sk1libs.utils.system.WINDOWS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "sk1libs.utils.system.Win7": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "sk1libs.utils.system.WinOther": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "sk1libs.utils.system.WinVista": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "sk1libs.utils.system.WinXP": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "sk1libs.utils.system.current_date": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "format",
    "sk1libs.utils.system.time"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.get_os_arch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bin",
    "sk1libs.utils.system.p128bit",
    "sk1libs.utils.system.p32bit",
    "sk1libs.utils.system.p64bit",
    "sk1libs.utils.system.platform",
    "sk1libs.utils.system.pxxbit"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.get_os_family": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sk1libs.utils.system.GENERIC",
    "sk1libs.utils.system.LINUX",
    "sk1libs.utils.system.MACOSX",
    "sk1libs.utils.system.WINDOWS",
    "sk1libs.utils.system.platform"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.get_os_name": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sk1libs.utils.system.Fedora",
    "sk1libs.utils.system.LINUX",
    "sk1libs.utils.system.Leopard",
    "sk1libs.utils.system.LinuxOther",
    "sk1libs.utils.system.MACOSX",
    "sk1libs.utils.system.MacOther",
    "sk1libs.utils.system.Mandriva",
    "sk1libs.utils.system.Mint",
    "sk1libs.utils.system.SnowLeopard",
    "sk1libs.utils.system.Suse",
    "sk1libs.utils.system.Ubuntu",
    "sk1libs.utils.system.Unix",
    "sk1libs.utils.system.WINDOWS",
    "sk1libs.utils.system.Win7",
    "sk1libs.utils.system.WinOther",
    "sk1libs.utils.system.WinVista",
    "sk1libs.utils.system.WinXP",
    "sk1libs.utils.system.get_os_family",
    "sk1libs.utils.system.platform"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.get_pwd": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "sk1libs.utils.system.getenv",
    "sk1libs.utils.system.os",
    "sk1libs.utils.system.pwd"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.get_real_username": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "sk1libs.utils.system.get_pwd"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.getenv": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "sk1libs.utils.system.os"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.gethostname": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "sk1libs.utils.system.getenv",
    "sk1libs.utils.system.socket"
   ]
  },
  "type": "function"
 },
 "sk1libs.utils.system.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "sk1libs.utils.system.p128bit": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "sk1libs.utils.system.p32bit": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "sk1libs.utils.system.p64bit": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "sk1libs.utils.system.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "sk1libs.utils.system.pwd": {
  "data": {
   "shadows": "pwd"
  },
  "type": "import"
 },
 "sk1libs.utils.system.pxxbit": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "sk1libs.utils.system.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "sk1libs.utils.system.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "sk1libs.utils.system.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "sk1libs.utils.system.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "sk1libs.utils.system.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "sk1libs.utils.xbm_string": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sk1libs.utils.string"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.arrow": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.arrow.Arrow": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.BoundingRect": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "app.Trafo",
    "dir.x",
    "dir.y",
    "math.atan2",
    "math.cos",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.Draw": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.IsFilled": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.Paths": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.SaveRepr": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.__cmp__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "__debug__",
    "app.events.warn.pdebug",
    "cmp",
    "id",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.__hash__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hash",
    "id"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Arrow.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "app.CreatePath",
    "apply",
    "len",
    "type",
    "types.ListType",
    "types.TupleType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.ListType": {
  "data": {
   "shadows": "types.ListType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.StandardArrows": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "app._",
    "app.config.preferences.arrows",
    "app.config.std_res_dir",
    "app.events.warn.USER",
    "app.events.warn.warn_tb",
    "uniconvertor.app.Graphics.arrow.os",
    "uniconvertor.app.Graphics.arrow.read_arrows",
    "uniconvertor.app.Graphics.arrow.std_arrows"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.config": {
  "data": {
   "shadows": "app.config"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.pdebug": {
  "data": {
   "shadows": "app.events.warn.pdebug"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.read_arrows": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "app._",
    "app.io.loadres.read_resource_file",
    "dict"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.read_arrows.arrow": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "list.append",
    "uniconvertor.app.Graphics.arrow.Arrow"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.arrow.read_resource_file": {
  "data": {
   "shadows": "app.io.loadres.read_resource_file"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.arrow.std_arrows": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.arrow.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.clone.Bounded": {
  "data": {
   "shadows": "base.Bounded"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.CHANGED": {
  "data": {
   "shadows": "app.conf.const.CHANGED"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.Clone": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "base.Bounded",
    "base.HierarchyNode"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.clone.Clone.DrawShape": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.GetObjectHandle": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "app.PointType",
    "app.Translation",
    "map",
    "trafo",
    "type"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.GetSnapPoints": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "app.Translation",
    "map"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.Hit": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.Info": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.LayoutPoint": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.SelectSubobject": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.Transform": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "trafo",
    "trafo.matrix"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.Translate": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.__getattr__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "base.Bounded.__getattr__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "app.NullPoint",
    "base.HierarchyNode.__init__"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone._set_offset": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.offset_center": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.orig_changed": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.register": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "app.conf.const.CHANGED",
    "uniconvertor.app.Graphics.clone._register_clone"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.unregister": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "app.conf.const.CHANGED",
    "uniconvertor.app.Graphics.clone._unregister_clone"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.Clone.update_rects": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.CreateClone": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "object",
    "object.parent.ReplaceChild",
    "uniconvertor.app.Graphics.clone.Clone"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone.HierarchyNode": {
  "data": {
   "shadows": "base.HierarchyNode"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.NullPoint": {
  "data": {
   "shadows": "app.NullPoint"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.NullUndo": {
  "data": {
   "shadows": "app.NullUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.PointType": {
  "data": {
   "shadows": "app.PointType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone.Undo": {
  "data": {
   "shadows": "app.Undo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.clone._after_handler": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "app.Undo",
    "list"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone._clone_registry": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.clone._register_clone": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "id",
    "uniconvertor.app.Graphics.clone._clone_registry"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone._transform": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "app.Trafo",
    "apply",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone._undo": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "app.NullUndo",
    "list",
    "uniconvertor.app.Graphics.clone._after_handler"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.clone._unregister_clone": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "id",
    "uniconvertor.app.Graphics.clone._clone_registry"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.curveop": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.curveop.Bezier": {
  "data": {
   "shadows": "app._sketch.Bezier"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.ContAngle": {
  "data": {
   "shadows": "app._sketch.ContAngle"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.ContSmooth": {
  "data": {
   "shadows": "app._sketch.ContSmooth"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.ContSymmetrical": {
  "data": {
   "shadows": "app._sketch.ContSymmetrical"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.Line": {
  "data": {
   "shadows": "app._sketch.Line"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.Rotation": {
  "data": {
   "shadows": "app.Rotation"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.curveop.arrow_trafos": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "app.Rotation",
    "app.Scale",
    "app.Translation",
    "uniconvertor.app.Graphics.curveop.arrow_vectors"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.curveop.arrow_vectors": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abs",
    "app._sketch.Bezier",
    "dir",
    "type"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.dashes": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.dashes.StandardDashes": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "app._",
    "app.config.preferences.dashes",
    "app.config.std_res_dir",
    "app.events.warn.USER",
    "app.events.warn.warn_tb",
    "app.io.loadres.read_resource_file",
    "uniconvertor.app.Graphics.dashes.os",
    "uniconvertor.app.Graphics.dashes.std_dashes"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.dashes.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.dashes._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.dashes.config": {
  "data": {
   "shadows": "app.config"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.dashes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.dashes.read_resource_file": {
  "data": {
   "shadows": "app.io.loadres.read_resource_file"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.dashes.std_dashes": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.dashes.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse": {
  "data": {
   "symbols_in_volume": [
    "app.RegisterCommands",
    "uniconvertor.app.Graphics.ellipse.Ellipse"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Graphics.ellipse.AlternateMask": {
  "data": {
   "shadows": "app.conf.const.AlternateMask"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.ArcArc": {
  "data": {
   "shadows": "app.conf.const.ArcArc"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.ArcChord": {
  "data": {
   "shadows": "app.conf.const.ArcChord"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.ArcPieSlice": {
  "data": {
   "shadows": "app.conf.const.ArcPieSlice"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Blend": {
  "data": {
   "shadows": "blend.Blend"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.ConstraintMask": {
  "data": {
   "shadows": "app.conf.const.ConstraintMask"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.CreateMultiUndo": {
  "data": {
   "shadows": "app.CreateMultiUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Creator": {
  "data": {
   "shadows": "base.Creator"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.DefaultGraphicsProperties": {
  "data": {
   "shadows": "properties.DefaultGraphicsProperties"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Editor": {
  "data": {
   "shadows": "base.Editor"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "base.RectangularPrimitive",
    "base.RectangularPrimitive.commands"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Angles": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.ArcType": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.AsBezier": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bezier.PolyBezier"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Blend": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "app.conf.const.ArcArc",
    "app.conf.const.ArcChord",
    "app.conf.const.ArcPieSlice",
    "base.RectangularPrimitive.Blend"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.DrawShape": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "base.Primitive.DrawShape"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Editor": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "EllipseEditor"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.GetSnapPoints": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "app.Point",
    "app.Polar",
    "math.floor",
    "math.pi",
    "t",
    "t.offset"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Hit": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Info": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "app._",
    "dict",
    "math.hypot",
    "trafo",
    "trafo.m11",
    "trafo.m12",
    "trafo.m21",
    "trafo.m22",
    "trafo.offset"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Paths": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "app._sketch.approx_arc"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.SaveToFile": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "base.Primitive.SaveToFile"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.SetAngles": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.SetArcType": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.Snap": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "abs",
    "app.Polar",
    "app.SingularMatrix",
    "app.conf.const.ArcArc",
    "app.conf.const.ArcChord",
    "app.conf.const.ArcPieSlice",
    "math.pi",
    "min",
    "uniconvertor.app.Graphics.ellipse.snap_to_line"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "app.Trafo",
    "app.conf.const.ArcPieSlice",
    "base.RectangularPrimitive.__init__"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.normalize": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "math.fmod",
    "math.pi"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.Ellipse.update_rects": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "app.Point",
    "app.Polar",
    "app.Rect",
    "app.UnionRects",
    "app.conf.const.ArcArc",
    "dir",
    "math.atan2",
    "math.cos",
    "math.pi",
    "math.sin",
    "trafo",
    "trafo.DTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "app._",
    "base.RectangularCreator"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator.ButtonUp": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "base.Creator.DragStop"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator.CreatedObject": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "properties.DefaultGraphicsProperties",
    "uniconvertor.app.Graphics.ellipse.Ellipse"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator.CurrentInfoText": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "abs",
    "app._",
    "round",
    "t",
    "t.m11",
    "t.m22",
    "t.offset"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator.DrawDragged": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator.MouseMove": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "base.Creator.MouseMove"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseCreator.compute_trafo": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "abs",
    "app.Trafo",
    "app.conf.const.AlternateMask",
    "app.conf.const.ConstraintMask"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "base.Editor",
    "uniconvertor.app.Graphics.ellipse.Ellipse"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.ButtonDown": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "base.Editor.DragStart",
    "math.cos",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.ButtonUp": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "app.CreateMultiUndo",
    "base.Editor.DragStop"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.DrawDragged": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.GetHandles": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "math.cos",
    "math.sin",
    "trafo",
    "uniconvertor.app.Graphics.ellipse.handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.MouseMove": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "base.Editor.MouseMove"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.SelectHandle": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.ellipse.handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.SelectPoint": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.angles": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "abs",
    "app.SingularMatrix",
    "app.conf.const.ArcArc",
    "app.conf.const.ArcChord",
    "app.conf.const.ArcPieSlice",
    "inverse",
    "math.atan2",
    "math.fmod",
    "math.pi"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.EllipseEditor.apply_constraint": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "abs",
    "app.Polar",
    "app.SingularMatrix",
    "app.conf.const.ConstraintMask",
    "inverse",
    "math.floor",
    "math.fmod",
    "math.pi"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.ellipse.NullUndo": {
  "data": {
   "shadows": "app.NullUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.PolyBezier": {
  "data": {
   "shadows": "bezier.PolyBezier"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Primitive": {
  "data": {
   "shadows": "base.Primitive"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Rect": {
  "data": {
   "shadows": "app.Rect"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.RectangularCreator": {
  "data": {
   "shadows": "base.RectangularCreator"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.RectangularPrimitive": {
  "data": {
   "shadows": "base.RectangularPrimitive"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.RegisterCommands": {
  "data": {
   "shadows": "app.RegisterCommands"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.SingularMatrix": {
  "data": {
   "shadows": "app.SingularMatrix"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.UnionRects": {
  "data": {
   "shadows": "app.UnionRects"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse._sketch": {
  "data": {
   "shadows": "app._sketch"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.fmod": {
  "data": {
   "shadows": "math.fmod"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.handle": {
  "data": {
   "shadows": "handle"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.hypot": {
  "data": {
   "shadows": "math.hypot"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.ellipse.snap_to_line": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abs",
    "min"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external": {
  "data": {
   "symbols_in_volume": [
    "app.SKCache"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Graphics.external.EmptyProperties": {
  "data": {
   "shadows": "properties.EmptyProperties"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.ExternalData": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.external.ExternalData.Filename": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalData.__del__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.external.instance_cache"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalData.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.external.instance_cache"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "base.GraphicsObject",
    "base.RectangularObject"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.AddStyle": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.Data": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.GetSnapPoints": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.Hit": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.Info": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.Properties": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "properties.EmptyProperties"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.RemoveTransformation": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "app.IdentityMatrix",
    "app.NullUndo",
    "app.Trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.SetData": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.SetLowerLeftCorner": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "app.Trafo",
    "apply",
    "tuple"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.SetProperties": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.Snap": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "abs",
    "max",
    "min",
    "round"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "base.GraphicsObject.__init__",
    "base.RectangularObject.__init__"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.ExternalGraphics.update_rects": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "app.Rect"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.GraphicsObject": {
  "data": {
   "shadows": "base.GraphicsObject"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.IdentityMatrix": {
  "data": {
   "shadows": "app.IdentityMatrix"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.NullUndo": {
  "data": {
   "shadows": "app.NullUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.Rect": {
  "data": {
   "shadows": "app.Rect"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.RectangularObject": {
  "data": {
   "shadows": "base.RectangularObject"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.SKCache": {
  "data": {
   "shadows": "app.SKCache"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.external.get_cached": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.external.instance_cache"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.external.instance_cache": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.guide": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.guide.Draggable": {
  "data": {
   "shadows": "base.Draggable"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.guide.GraphicsObject": {
  "data": {
   "shadows": "base.GraphicsObject"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.guide.GuideLine": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "base.Draggable",
    "base.GraphicsObject"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.ButtonDown": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "app.Point"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.ButtonUp": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.Coordinates": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.CurrentInfoText": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "app._",
    "dict"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.DrawDragged": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.DrawShape": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.Hit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "app.Point"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.SaveToFile": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.SetPoint": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "app.Point",
    "app.PointType",
    "apply",
    "type"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.Snap": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.get_clear_rect": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.GuideLine.update_rects": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "app.InfinityRect"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.guide.InfinityRect": {
  "data": {
   "shadows": "app.InfinityRect"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.guide.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.guide.PointType": {
  "data": {
   "shadows": "app.PointType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.guide._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.handle": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.handle.Handle": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.handle.Handle.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "app.conf.const.CurHandle",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.Handle.__repr__": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.Handle.__str__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeCaretHandle": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "app.conf.const.Handle_Caret",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeControlHandle": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "app.conf.const.HandleControlPoint",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeCurveHandle": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "app.conf.const.HandleCurvePoint",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeHandle": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "app.conf.const.CurHandle",
    "type",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeLineHandle": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "app.conf.const.HandleLine",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeNodeHandle": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "app.conf.const.HandleNode",
    "app.conf.const.HandleSelectedNode",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeObjectHandleList": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "app.conf.const.Handle_SmallOpenRectList",
    "list",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakeOffsetHandle": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "app.conf.const.CurHandle",
    "app.conf.const.Handle",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakePathTextHandle": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "app.conf.const.Handle_PathText",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.MakePixmapHandle": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "app.conf.const.CurHandle",
    "app.conf.const.Handle_Pixmap",
    "uniconvertor.app.Graphics.handle.Handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.handle.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.handle.const": {
  "data": {
   "shadows": "app.conf.const"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup": {
  "data": {
   "symbols_in_volume": [
    "app.RegisterCommands",
    "uniconvertor.app.Graphics.maskgroup.MaskGroup"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Graphics.maskgroup.EditableCompound": {
  "data": {
   "shadows": "compound.EditableCompound"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup.EmptyFillStyle": {
  "data": {
   "shadows": "properties.EmptyFillStyle"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup.EmptyLineStyle": {
  "data": {
   "shadows": "properties.EmptyLineStyle"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup.INTERNAL": {
  "data": {
   "shadows": "app.events.warn.INTERNAL"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup.IntersectRects": {
  "data": {
   "shadows": "app.IntersectRects"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "compound.EditableCompound",
    "compound.EditableCompound._lazy_attrs.copy",
    "compound.EditableCompound.commands"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.Blend": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Blend",
    "app.events.warn.INTERNAL",
    "app.events.warn.warn_tb",
    "len",
    "min",
    "range",
    "uniconvertor.app.Graphics.maskgroup.MaskGroup"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.ChildChanged": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "compound.EditableCompound.ChildChanged"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.DrawShape": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "app.IntersectRects",
    "test"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.Hit": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "compound.EditableCompound.Hit"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.Info": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "app._",
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.Mask": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.MaskedObjects": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.SaveToFile": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.SelectMask": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.Ungroup": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "compound.EditableCompound.GetObjects"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "compound.EditableCompound.__init__"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.permute_objects": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "compound.EditableCompound.permute_objects",
    "list"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.update_mask_attrs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "properties.EmptyFillStyle",
    "properties.EmptyLineStyle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.MaskGroup.update_rects": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.maskgroup.RegisterCommands": {
  "data": {
   "shadows": "app.RegisterCommands"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.maskgroup.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.pagelayout": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.pagelayout.Landscape": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.FormatName": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.Height": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.pagelayout.Portrait"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.Orientation": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.SaveToFile": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.Size": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.pagelayout.Portrait"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.Width": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.pagelayout.Portrait"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.PageLayout.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "app.config.preferences.default_page_orientation",
    "app.config.preferences.default_paper_format",
    "papersize.Papersize",
    "uniconvertor.app.Graphics.pagelayout.Landscape",
    "uniconvertor.app.Graphics.pagelayout.Portrait"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.pagelayout.Papersize": {
  "data": {
   "shadows": "papersize.Papersize"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.pagelayout.Portrait": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.pagelayout.config": {
  "data": {
   "shadows": "app.config"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.plugobj.Compound": {
  "data": {
   "shadows": "compound.Compound"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.CreateListUndo": {
  "data": {
   "shadows": "app.CreateListUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.Identity": {
  "data": {
   "shadows": "app.Identity"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.PluginCompound": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "compound.Compound"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.plugobj.PluginCompound.SaveToFile": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "app.SketchError",
    "apply"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.PluginCompound.SetParameters": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.SketchError": {
  "data": {
   "shadows": "app.SketchError"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.LayoutPoint": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.RemoveTransformation": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "app.Translation"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.SetParameters": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "app.Undo",
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.Trafo": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.Transform": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "app.CreateListUndo",
    "app.Undo",
    "map",
    "trafo",
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.Translate": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "app.Translation"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "app.Identity",
    "app.Scale",
    "app.Trafo",
    "app.TrafoType",
    "apply",
    "isinstance",
    "type",
    "types.TupleType",
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.recompute": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoPlugin.set_transformation": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.TrafoType": {
  "data": {
   "shadows": "app.TrafoType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.Undo": {
  "data": {
   "shadows": "app.Undo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin.Info": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin.SaveToFile": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "apply",
    "len",
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin._changed": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin.disguise": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "object",
    "object.AsBezier",
    "object.Paths",
    "object.is_curve"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj.UnknownPlugin.load_Done": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.plugobj.PluginCompound"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.plugobj._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.selinfo": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Graphics.selinfo.ListType": {
  "data": {
   "shadows": "types.ListType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.selinfo.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.selinfo.build_info": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.common_prefix": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.get_parent": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.list_to_tree": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "dict.append",
    "dict.items"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.list_to_tree2": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "dict.append",
    "dict.items",
    "len",
    "range",
    "type",
    "types.TupleType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.list_to_tree_sliced": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "list",
    "type",
    "types.ListType",
    "uniconvertor.app.Graphics.selinfo.list_to_tree2"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.prepend_idx": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "len",
    "range",
    "type",
    "types.ListType",
    "types.TupleType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.select_all": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.select_range": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "map",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.selinfo.tree_to_list": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text": {
  "data": {
   "symbols_in_volume": [
    "app.Lib.encoding.iso_latin_1",
    "app.Lib.encoding.notdef",
    "app.RegisterCommands",
    "chr",
    "len",
    "range",
    "uniconvertor.app.Graphics.text.CommonTextEditor",
    "uniconvertor.app.Graphics.text.InternalPathTextEditor",
    "uniconvertor.app.Graphics.text.PathText",
    "uniconvertor.app.Graphics.text.SimpleText",
    "uniconvertor.app.Graphics.text.SimpleTextEditor",
    "uniconvertor.app.Graphics.text.codecs",
    "uniconvertor.app.Graphics.text.iso_latin_1"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Graphics.text.ALIGN_BASE": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.ALIGN_BOTTOM": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.ALIGN_CENTER": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.ALIGN_LEFT": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.ALIGN_RIGHT": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.ALIGN_TOP": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.Blend": {
  "data": {
   "shadows": "blend.Blend"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.BlendTrafo": {
  "data": {
   "shadows": "blend.BlendTrafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.CanCreatePathText": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CombineBeziers": {
  "data": {
   "shadows": "bezier.CombineBeziers"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.CommonText": {
  "data": {
   "lineno": 119
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.CommonText.Font": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.FontSize": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.SetAlign": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "app.conf.const.ALIGN_BASE",
    "app.conf.const.ALIGN_CENTER"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.SetFont": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.SetFontSize": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.SetGap": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.SetText": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.Text": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.__init__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.set_editor": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonText.unset_editor": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "base.Editor",
    "uniconvertor.app.Graphics.text.CommonText"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.ButtonDown": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "base.Editor.DragStart"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.ButtonUp": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "base.Editor.DragStop"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.Caret": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.DeleteCharBackward": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.DeleteCharForward": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "app.NullUndo",
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.Destroy": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.InsertCharacter": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.InsertEOL": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.InsertTAB": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.InsertTextFromClipboard": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "app.NullUndo",
    "len",
    "uniconvertor.app.Graphics.text.app"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveBackwardChar": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveForwardChar": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "app.NullUndo",
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveToBeginningOfLine": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveToBeginningOfText": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveToEndOfLine": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "app.NullUndo",
    "len",
    "string.split"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveToEndOfText": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "app.NullUndo",
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveToNextLine": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "app.NullUndo",
    "len",
    "string.split"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.MoveToPreviousLine": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "app.NullUndo",
    "len",
    "string.split"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.SetCaret": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "base.Editor.__init__",
    "object",
    "object.set_editor"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.get_position": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "len",
    "string.split"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.CommonTextEditor.update_selection": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.Compound": {
  "data": {
   "shadows": "compound.Compound"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.CreateMultiUndo": {
  "data": {
   "shadows": "app.CreateMultiUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.CreatePathText": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "len",
    "uniconvertor.app.Graphics.text.PathText"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.Creator": {
  "data": {
   "shadows": "base.Creator"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.DefaultTextProperties": {
  "data": {
   "shadows": "properties.DefaultTextProperties"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Editor": {
  "data": {
   "shadows": "base.Editor"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.EmptyRect": {
  "data": {
   "shadows": "app.EmptyRect"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.FactoryTextStyle": {
  "data": {
   "shadows": "properties.FactoryTextStyle"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Group": {
  "data": {
   "shadows": "group.Group"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Identity": {
  "data": {
   "shadows": "app.Identity"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.IdentityMatrix": {
  "data": {
   "shadows": "app.IdentityMatrix"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.InternalPathText": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "base.Primitive",
    "base.Primitive._lazy_attrs.copy",
    "base.Primitive.commands",
    "uniconvertor.app.Graphics.text.CommonText"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Blend": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "blend.BlendTrafo",
    "blend.MismatchError",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.CharacterTransformations": {
  "data": {
   "lineno": 786
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Disconnect": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "base.Primitive.Disconnect"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.DrawShape": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "base.Primitive.DrawShape",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Editor": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "InternalPathTextEditor"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Hit": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "app.Trafo",
    "bbox",
    "len",
    "range",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Info": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Model": {
  "data": {
   "lineno": 774
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.PathChanged": {
  "data": {
   "lineno": 765
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.RemoveTransformation": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "app.Identity"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.SaveToFile": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "base.Primitive.SaveToFile"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.SetModel": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.SetStartPos": {
  "data": {
   "lineno": 777
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.SetText": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.CommonText"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.StartPos": {
  "data": {
   "lineno": 783
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Transform": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.Translate": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "app.NullUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.__init__": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "app.Identity",
    "base.Primitive.__init__",
    "isinstance",
    "trafo",
    "uniconvertor.app.Graphics.text.CommonText",
    "uniconvertor.app.Graphics.text.PATHTEXT_ROTATE"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.set_transformation": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.update_paths": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "app.SingularMatrix",
    "tuple"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.update_rects": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "app.EmptyRect",
    "app.Rect",
    "app.UnionRects",
    "apply",
    "len",
    "map",
    "reduce"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathText.update_trafos": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "map",
    "uniconvertor.app.Graphics.text.pathtext"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.CommonTextEditor",
    "uniconvertor.app.Graphics.text.InternalPathText"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.ButtonDown": {
  "data": {
   "lineno": 905
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.ButtonUp": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.CommonTextEditor"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.DrawDragged": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "len",
    "map",
    "range",
    "uniconvertor.app.Graphics.text.pathtext"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.GetHandles": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "len",
    "min",
    "trafo",
    "trafo.DTransform",
    "uniconvertor.app.Graphics.text.handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.SelectHandle": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "app.conf.const.SelectSet",
    "uniconvertor.app.Graphics.text.handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.SelectPoint": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "abs",
    "len",
    "min",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.InternalPathTextEditor.nearest_start_pos": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "app.SingularMatrix"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.MismatchError": {
  "data": {
   "shadows": "blend.MismatchError"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.NullPoint": {
  "data": {
   "shadows": "app.NullPoint"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.NullUndo": {
  "data": {
   "shadows": "app.NullUndo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.PATHTEXT_ROTATE": {
  "data": {
   "lineno": 642
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.PATHTEXT_SKEW": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.PathText": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "compound.Compound",
    "compound.Compound.commands"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.PathText.Blend": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "blend.Blend",
    "blend.MismatchError"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.ChildChanged": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "compound.Compound.ChildChanged"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.Info": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.Model": {
  "data": {
   "lineno": 1036
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.ReplaceChild": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "SketchError",
    "object",
    "object.SetDocument",
    "object.SetParent",
    "object.is_curve"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.SaveToFile": {
  "data": {
   "lineno": 1014
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.SelectPathObject": {
  "data": {
   "lineno": 1024
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.SelectSubobject": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.selinfo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.SelectTextObject": {
  "data": {
   "lineno": 1020
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.SetModel": {
  "data": {
   "lineno": 1031
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.__init__": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "compound.Compound.__init__",
    "uniconvertor.app.Graphics.text.InternalPathText",
    "uniconvertor.app.Graphics.text.PATHTEXT_ROTATE"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.get_paths": {
  "data": {
   "lineno": 1028
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.PathText.load_AppendObject": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "compound.Compound.load_AppendObject",
    "len",
    "object"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.PolyBezier": {
  "data": {
   "shadows": "bezier.PolyBezier"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Primitive": {
  "data": {
   "shadows": "base.Primitive"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.PropertyStack": {
  "data": {
   "shadows": "properties.PropertyStack"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Rect": {
  "data": {
   "shadows": "app.Rect"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.RectangularPrimitive": {
  "data": {
   "shadows": "base.RectangularPrimitive"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.RegisterCommands": {
  "data": {
   "shadows": "app.RegisterCommands"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Rotation": {
  "data": {
   "shadows": "app.Rotation"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.SimpleText": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "base.RectangularPrimitive",
    "base.RectangularPrimitive._lazy_attrs.copy",
    "base.RectangularPrimitive.commands",
    "uniconvertor.app.Graphics.text.CommonText"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Alignment": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.AsBezier": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "app.Scale",
    "base_trafo",
    "bezier.PolyBezier",
    "string.split"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Blend": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "blend.BlendTrafo",
    "blend.MismatchError"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Disconnect": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "base.RectangularPrimitive.Disconnect"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.DrawShape": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "app.Scale",
    "base.RectangularPrimitive.DrawShape",
    "base_trafo",
    "bezier.PolyBezier"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Editor": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "SimpleTextEditor"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.FullTrafo": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.GetObjectHandle": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "app.NullPoint",
    "app.Scale",
    "map",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Hit": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "app.Trafo",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Info": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "app._",
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.Paths": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "app.Scale",
    "base_trafo",
    "bezier.PolyBezier",
    "string.split"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.RemoveTransformation": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "app.CreateMultiUndo",
    "app.IdentityMatrix",
    "app.NullUndo",
    "app.SingularMatrix",
    "app.Translation",
    "base.Primitive.Transform",
    "trafo",
    "trafo.inverse",
    "trafo.offset"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.SaveToFile": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "base.RectangularPrimitive.SaveToFile"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.SetAlignment": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.__init__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "app.conf.const.ALIGN_BASE",
    "app.conf.const.ALIGN_LEFT",
    "base.RectangularPrimitive.__init__",
    "properties.FactoryTextStyle",
    "properties.PropertyStack",
    "uniconvertor.app.Graphics.text.CommonText"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.update_atrafo": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "app.Translation"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleText.update_rects": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "app.Rect",
    "apply",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "app._",
    "base.Creator"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.ButtonDown": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "base.Creator.DragStart"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.ButtonUp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "base.Creator.DragStop"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.CreatedObject": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "app.Rotation",
    "app.Translation",
    "properties.DefaultTextProperties",
    "trafo",
    "uniconvertor.app.Graphics.text.SimpleText"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.DrawDragged": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.MouseMove": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "base.Creator.MouseMove"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "base.Creator.__init__"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextCreator.apply_constraint": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "app.Polar",
    "app.conf.const.ConstraintMask",
    "math.floor",
    "math.pi"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextEditor": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.CommonTextEditor",
    "uniconvertor.app.Graphics.text.SimpleText"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Graphics.text.SimpleTextEditor.Destroy": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.CommonTextEditor"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextEditor.GetHandles": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "uniconvertor.app.Graphics.text.handle"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SimpleTextEditor.SelectPoint": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "abs",
    "app.Scale",
    "len",
    "min",
    "range",
    "trafo",
    "trafo.inverse"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.SingularMatrix": {
  "data": {
   "shadows": "app.SingularMatrix"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.UnionRects": {
  "data": {
   "shadows": "app.UnionRects"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.atan2": {
  "data": {
   "shadows": "math.atan2"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.color": {
  "data": {
   "shadows": "color"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.config": {
  "data": {
   "shadows": "app.config"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.const": {
  "data": {
   "shadows": "app.conf.const"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.coord_sys_at": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "app.Trafo",
    "len",
    "range",
    "type",
    "uniconvertor.app.Graphics.text.PATHTEXT_SKEW"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.encoding": {
  "data": {
   "shadows": "app.Lib.encoding"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.fmod": {
  "data": {
   "shadows": "math.fmod"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.handle": {
  "data": {
   "shadows": "handle"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.hypot": {
  "data": {
   "shadows": "math.hypot"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.iso_latin_1": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.maybe_remove_text": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.pathtext": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "app.Scale",
    "app.Translation",
    "len",
    "map",
    "ord",
    "range",
    "trafo",
    "type",
    "uniconvertor.app.Graphics.text.coord_sys_at"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Graphics.text.pattern": {
  "data": {
   "shadows": "pattern"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.printable": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "uniconvertor.app.Graphics.text.selinfo": {
  "data": {
   "shadows": "selinfo"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "uniconvertor.app.Graphics.text.split": {
  "data": {
   "shadows": "string.split"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Lib.encoding": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.Lib.encoding.notdef"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Lib.encoding.Reencoder": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "uniconvertor.app.Lib.encoding.Reencoder.__call__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "uniconvertor.app.Lib.encoding.string"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.encoding.Reencoder.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "uniconvertor.app.Lib.encoding.notdef"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.encoding.Reencoder.build_mapping": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "chr",
    "dict",
    "dict.get",
    "len",
    "map",
    "range",
    "uniconvertor.app.Lib.encoding.notdef",
    "uniconvertor.app.Lib.encoding.operator",
    "uniconvertor.app.Lib.encoding.string"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.encoding.adobe_standard": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.encoding.iso_latin_1": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.encoding.notdef": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.encoding.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.encoding.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.psmisc": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.Lib.psmisc.make_ps_quote_table"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Lib.psmisc.join": {
  "data": {
   "shadows": "string.join"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.psmisc.make_ps_quote_table": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "chr",
    "oct",
    "ord",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.psmisc.make_textline": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "uniconvertor.app.Lib.psmisc.quote_ps_string"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.psmisc.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.psmisc.quote_ps_string": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "map",
    "ord",
    "string.join",
    "uniconvertor.app.Lib.psmisc.operator",
    "uniconvertor.app.Lib.psmisc.quote_table"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.psmisc.quote_table": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.skcompleter": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Lib.skcompleter.Completer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "uniconvertor.app.Lib.skcompleter.Completer.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "uniconvertor.app.Lib.skcompleter.__main__"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.skcompleter.Completer.attr_matches": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dir",
    "eval",
    "len",
    "uniconvertor.app.Lib.skcompleter.re"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.skcompleter.Completer.complete": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.skcompleter.Completer.global_matches": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "list",
    "uniconvertor.app.Lib.skcompleter.__builtin__",
    "uniconvertor.app.Lib.skcompleter.keyword"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.skcompleter.__builtin__": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.skcompleter.__main__": {
  "data": {
   "shadows": "__main__"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.skcompleter.install": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "uniconvertor.app.Lib.skcompleter.Completer",
    "uniconvertor.app.Lib.skcompleter.readline"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Lib.skcompleter.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.skcompleter.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.skcompleter.readline": {
  "data": {
   "shadows": "readline"
  },
  "type": "import"
 },
 "uniconvertor.app.Lib.units": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.Lib.units.cm_to_pt",
    "uniconvertor.app.Lib.units.in_to_pt",
    "uniconvertor.app.Lib.units.mm_to_pt",
    "uniconvertor.app.Lib.units.pt_to_cm",
    "uniconvertor.app.Lib.units.pt_to_in"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Lib.units.cm_to_pt": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.in_to_pt": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.m_to_pt": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.mm_to_pt": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.pt_to_cm": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.pt_to_in": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.pt_to_m": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.pt_to_mm": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.unit_dict": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "uniconvertor.app.Lib.units.unit_names": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "uniconvertor.app.Scripting": {
  "data": {
   "symbols_in_volume": [
    "registry.ScriptRegistry",
    "uniconvertor.app.Scripting.Registry"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.Scripting.Add": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "uniconvertor.app.Scripting.AddFunction": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "uniconvertor.app.Scripting.AdvancedScript": {
  "data": {
   "shadows": "script.AdvancedScript"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.Registry": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "uniconvertor.app.Scripting.SafeScript": {
  "data": {
   "shadows": "script.SafeScript"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.ScriptRegistry": {
  "data": {
   "shadows": "registry.ScriptRegistry"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.registry": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Scripting.registry.DictType": {
  "data": {
   "shadows": "types.DictType"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.registry.SafeScript": {
  "data": {
   "shadows": "script.SafeScript"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.registry.ScriptRegistry": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "uniconvertor.app.Scripting.registry.ScriptRegistry.Add": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "app.events.warn.USER",
    "app.events.warn.warn",
    "type",
    "types.DictType",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.registry.ScriptRegistry.AddFunction": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "script.SafeScript",
    "script_type"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.registry.ScriptRegistry.MenuTree": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "make_menu_tree"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.registry.ScriptRegistry.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.registry.StringType": {
  "data": {
   "shadows": "types.StringType"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.registry.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.registry.make_menu_tree": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dict.items",
    "type",
    "types.DictType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.registry.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.registry.warn": {
  "data": {
   "shadows": "app.events.warn.warn"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.script": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.Scripting.script.AdvancedScript": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "uniconvertor.app.Scripting.script.Script"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Scripting.script.AdvancedScript.Execute": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "uniconvertor.app.Scripting.script.Context"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.script.Context": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "uniconvertor.app.Scripting.script.Context.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "uniconvertor.app.Scripting.script.app"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.script.DocumentWrapper": {
  "data": {
   "shadows": "wrapper.DocumentWrapper"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.script.SafeScript": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "uniconvertor.app.Scripting.script.Script"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.Scripting.script.SafeScript.Execute": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "uniconvertor.app.Scripting.script.Context",
    "wrapper.DocumentWrapper"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.script.Script": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "uniconvertor.app.Scripting.script.Script.Title": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.script.Script.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.script.Script.execute": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "app.events.warn.USER",
    "app.events.warn.warn_tb",
    "apply"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.Scripting.script.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.script.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "uniconvertor.app.Scripting.script.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "uniconvertor.app.conf": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.conf.const": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.conf.const.Button1Mask",
    "uniconvertor.app.conf.const.Button2Mask",
    "uniconvertor.app.conf.const.Button3Mask",
    "uniconvertor.app.conf.const.ControlMask",
    "uniconvertor.app.conf.const.Handle_FilledCircle",
    "uniconvertor.app.conf.const.Handle_FilledRect",
    "uniconvertor.app.conf.const.Handle_Line",
    "uniconvertor.app.conf.const.Handle_OpenRect",
    "uniconvertor.app.conf.const.Handle_SmallFilledRect",
    "uniconvertor.app.conf.const.MetaMask",
    "uniconvertor.app.conf.const.Mod1Mask",
    "uniconvertor.app.conf.const.ShiftMask"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.conf.const.ADD_TO_SPECIAL_MENU": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ALIGN_BASE": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ALIGN_BOTTOM": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ALIGN_CENTER": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ALIGN_LEFT": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ALIGN_RIGHT": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ALIGN_TOP": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.APP_INITIALIZED": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.AllButtonsMask": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.AllowedModifierMask": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.AlternateMask": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ArcArc": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ArcChord": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ArcPieSlice": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Button1Mask": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Button2Mask": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Button3Mask": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Button4Mask": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Button5Mask": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CHANGED": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CLIPBOARD": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CLOSED": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.COLOR1": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.COLOR2": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.COMMAND": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CURRENTINFO": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CapButt": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CapProjecting": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CapRound": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ConstraintMask": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ControlMask": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurCreate": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurDown": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurDragColor": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurEdit": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurHGuide": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurHandle": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurHelp": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurMove": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurPick": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurPlace": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurStd": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurStd1": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurTurn": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurUp": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurUpDown": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurVGuide": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurWait": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.CurZoom": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.DOCUMENT": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.DROP_COLOR": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.EDITED": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.GRID": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.GUIDE_LINES": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.HandleControlPoint": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.HandleCurvePoint": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.HandleLine": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.HandleNode": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.HandleSelectedNode": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_Caret": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_FilledCircle": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_FilledRect": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_Line": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_OpenCircle": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_OpenRect": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_PathText": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_Pixmap": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_SmallFilledCircle": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_SmallFilledRect": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_SmallOpenCircle": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_SmallOpenRect": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Handle_SmallOpenRectList": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.INITIALIZE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.INIT_READLINE": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.JoinBevel": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.JoinMiter": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.JoinRound": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LAYER": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LAYER_ACTIVE": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LAYER_COLOR": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LAYER_ORDER": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LAYER_STATE": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LAYOUT": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LineDoubleDash": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LineOnOffDash": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LineSolid": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.LockMask": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.MODE": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.MOVING": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.MetaMask": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Mod1Mask": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Mod2Mask": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Mod3Mask": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Mod4Mask": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.Mod5Mask": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.PAGE": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.POSITION": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.REDRAW": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SCRIPT_GET": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SCRIPT_OBJECT": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SCRIPT_OBJECTLIST": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SCRIPT_UNDO": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SELECTION": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.STATE": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.STYLE": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SelectAdd": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SelectDrag": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SelectGuide": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SelectSet": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SelectSubobjects": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.SelectSubtract": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.ShiftMask": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.UNDO": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.UPDATE": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.VIEW": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "uniconvertor.app.conf.const.corners": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "uniconvertor.app.events": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.events.skexceptions": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.events.skexceptions.SketchError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.events.skexceptions.SketchIOError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "uniconvertor.app.events.skexceptions.SketchError"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.events.skexceptions.SketchIOError.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "uniconvertor.app.events.skexceptions.SketchInternalError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "uniconvertor.app.events.skexceptions.SketchError"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.events.skexceptions.SketchLoadError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "uniconvertor.app.events.skexceptions.SketchError"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.events.undo": {
  "data": {
   "symbols_in_volume": [
    "app.config.preferences",
    "uniconvertor.app.events.undo._NullUndo"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.events.undo.CreateListUndo": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "list",
    "uniconvertor.app.events.undo.UndoList"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.CreateMultiUndo": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "list",
    "uniconvertor.app.events.undo.CreateListUndo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.INTERNAL": {
  "data": {
   "shadows": "app.events.warn.INTERNAL"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo.NullUndo": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "uniconvertor.app.events.undo.StringType": {
  "data": {
   "shadows": "types.StringType"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo.TupleType": {
  "data": {
   "shadows": "types.TupleType"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo.Undo": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "app.events.warn.INTERNAL",
    "app.events.warn.warn",
    "app.events.warn.warn_tb",
    "apply",
    "callable",
    "type",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoAfter": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "uniconvertor.app.events.undo.Undo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoList": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "map",
    "uniconvertor.app.events.undo.Undo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "uniconvertor.app.events.undo.UndoRedo.AddUndo": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "len",
    "uniconvertor.app.events.undo.check_info"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.CanRedo": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.CanUndo": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.Redo": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len",
    "uniconvertor.app.events.undo.Undo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.RedoText": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "app._",
    "type",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.Reset": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.ResetUndoCount": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.SetUndoLimit": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sys.maxint"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.Undo": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "uniconvertor.app.events.undo.Undo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.UndoCount": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.UndoText": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "app._",
    "type",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "uniconvertor.app.events.undo.preferences"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoRedo.add_redo": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "uniconvertor.app.events.undo.check_info"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.UndoTypeError": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.events.undo._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo._NullUndo": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo._get_callable": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "type",
    "types.StringType"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.check_info": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "callable",
    "len",
    "type",
    "types.StringType",
    "types.TupleType",
    "uniconvertor.app.events.undo.UndoTypeError"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.check_info_silently": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "uniconvertor.app.events.undo.UndoTypeError",
    "uniconvertor.app.events.undo.check_info"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.undo.config": {
  "data": {
   "shadows": "app.config"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo.maxint": {
  "data": {
   "shadows": "sys.maxint"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo.preferences": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "uniconvertor.app.events.undo.warn": {
  "data": {
   "shadows": "app.events.warn.warn"
  },
  "type": "import"
 },
 "uniconvertor.app.events.undo.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.events.warn.Dict"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.events.warn.Dict": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "uniconvertor.app.events.warn.DictionaryType": {
  "data": {
   "shadows": "types.DictionaryType"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn.INTERNAL": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "uniconvertor.app.events.warn.PRINT_DEBUG_MESSAGES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "uniconvertor.app.events.warn.PRINT_INTERNAL_WARNINGS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "uniconvertor.app.events.warn.StringType": {
  "data": {
   "shadows": "types.StringType"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn.USER": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "uniconvertor.app.events.warn.WARN_METHOD": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "uniconvertor.app.events.warn._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn._levels": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "uniconvertor.app.events.warn.flexible_format": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "format",
    "map",
    "str",
    "uniconvertor.app.events.warn.string"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.warn.pdebug": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "type",
    "types.DictionaryType",
    "types.StringType",
    "uniconvertor.app.events.warn.PRINT_DEBUG_MESSAGES",
    "uniconvertor.app.events.warn._levels",
    "uniconvertor.app.events.warn.flexible_format",
    "uniconvertor.app.events.warn.write_error"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.warn.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "uniconvertor.app.events.warn.warn": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "uniconvertor.app.events.warn.INTERNAL",
    "uniconvertor.app.events.warn.PRINT_INTERNAL_WARNINGS",
    "uniconvertor.app.events.warn.flexible_format",
    "uniconvertor.app.events.warn.write_error"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.warn.warn_tb": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "uniconvertor.app.events.warn.INTERNAL",
    "uniconvertor.app.events.warn.PRINT_INTERNAL_WARNINGS",
    "uniconvertor.app.events.warn.flexible_format",
    "uniconvertor.app.events.warn.traceback",
    "uniconvertor.app.events.warn.write_error"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.events.warn.write_error": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "uniconvertor.app.events.warn.sys"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.io": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.io.loadres": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.io.loadres.SketchError": {
  "data": {
   "shadows": "app.events.skexceptions.SketchError"
  },
  "type": "import"
 },
 "uniconvertor.app.io.loadres.USER": {
  "data": {
   "shadows": "app.events.warn.USER"
  },
  "type": "import"
 },
 "uniconvertor.app.io.loadres.parse_sk_line": {
  "data": {
   "shadows": "app.skread.parse_sk_line"
  },
  "type": "import"
 },
 "uniconvertor.app.io.loadres.read_resource_file": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "app.events.skexceptions.SketchError",
    "app.events.warn.USER",
    "app.events.warn.warn_tb",
    "app.skread.parse_sk_line",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.io.loadres.warn_tb": {
  "data": {
   "shadows": "app.events.warn.warn_tb"
  },
  "type": "import"
 },
 "uniconvertor.app.managers": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.managers.colormanager": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.managers.colormanager.COLORB": {
  "data": {
   "shadows": "sk1libs.pycms.COLORB"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.ColorManager": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.ImageCMYKtoRGB": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "sk1libs.pycms.TYPE_CMYK_8",
    "sk1libs.pycms.TYPE_RGB_8",
    "sk1libs.pycms.cmsDoBitmapTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.ImageRGBtoCMYK": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "sk1libs.pycms.TYPE_CMYK_8",
    "sk1libs.pycms.cmsDoBitmapTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.add_to_image_pool": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.add_to_pool": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.convertCMYK": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "int",
    "round",
    "sk1libs.pycms.COLORB",
    "sk1libs.pycms.cmsDoTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.convertRGB": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "int",
    "round",
    "sk1libs.pycms.COLORB",
    "sk1libs.pycms.cmsDoTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.processCMYK": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "round",
    "sk1libs.pycms.COLORB",
    "sk1libs.pycms.cmsDoTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.processRGB": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int",
    "round",
    "sk1libs.pycms.COLORB",
    "sk1libs.pycms.cmsDoTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.refresh_profiles": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "sk1libs.pycms.INTENT_PERCEPTUAL",
    "sk1libs.pycms.INTENT_RELATIVE_COLORIMETRIC",
    "sk1libs.pycms.TYPE_CMYK_8",
    "sk1libs.pycms.TYPE_RGB_8",
    "sk1libs.pycms.cmsCreateCMYKProfile",
    "sk1libs.pycms.cmsCreateRGBProfile",
    "sk1libs.pycms.cmsCreateTransform",
    "sk1libs.pycms.cmsFLAGS_NOTPRECALC",
    "sk1libs.pycms.cmsOpenProfileFromFile",
    "uniconvertor.app.managers.colormanager.app",
    "uniconvertor.app.managers.colormanager.os"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.remove_from_image_pool": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.remove_from_pool": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.terminate": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "sk1libs.pycms.cmsCloseProfile",
    "sk1libs.pycms.cmsDeleteTransform"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.ColorManager.update": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "uniconvertor.app.managers.colormanager.INTENT_PERCEPTUAL": {
  "data": {
   "shadows": "sk1libs.pycms.INTENT_PERCEPTUAL"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.INTENT_RELATIVE_COLORIMETRIC": {
  "data": {
   "shadows": "sk1libs.pycms.INTENT_RELATIVE_COLORIMETRIC"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.TYPE_CMYK_8": {
  "data": {
   "shadows": "sk1libs.pycms.TYPE_CMYK_8"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.TYPE_RGB_8": {
  "data": {
   "shadows": "sk1libs.pycms.TYPE_RGB_8"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsCloseProfile": {
  "data": {
   "shadows": "sk1libs.pycms.cmsCloseProfile"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsCreateCMYKProfile": {
  "data": {
   "shadows": "sk1libs.pycms.cmsCreateCMYKProfile"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsCreateGrayProfile": {
  "data": {
   "shadows": "sk1libs.pycms.cmsCreateGrayProfile"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsCreateLabProfile": {
  "data": {
   "shadows": "sk1libs.pycms.cmsCreateLabProfile"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsCreateRGBProfile": {
  "data": {
   "shadows": "sk1libs.pycms.cmsCreateRGBProfile"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsCreateTransform": {
  "data": {
   "shadows": "sk1libs.pycms.cmsCreateTransform"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsDeleteTransform": {
  "data": {
   "shadows": "sk1libs.pycms.cmsDeleteTransform"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsDoBitmapTransform": {
  "data": {
   "shadows": "sk1libs.pycms.cmsDoBitmapTransform"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsDoTransform": {
  "data": {
   "shadows": "sk1libs.pycms.cmsDoTransform"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsFLAGS_NOTPRECALC": {
  "data": {
   "shadows": "sk1libs.pycms.cmsFLAGS_NOTPRECALC"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.cmsOpenProfileFromFile": {
  "data": {
   "shadows": "sk1libs.pycms.cmsOpenProfileFromFile"
  },
  "type": "import"
 },
 "uniconvertor.app.managers.colormanager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.scripts.abut_horizontal": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.abut_horizontal.abut_horizontal"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.abut_horizontal.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.abut_horizontal.abut_horizontal": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "app.Point",
    "next"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.abut_horizontal.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.abut_vertical": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.abut_vertical.abut_vertical"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.abut_vertical.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.abut_vertical.abut_vertical": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "app.Point",
    "next"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.abut_vertical.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.average_points": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.average_points.run"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.average_points.AVERAGE_BOTH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.average_points.AVERAGE_X": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.average_points.AVERAGE_Y": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.average_points.AverageDialog": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "app.UI.sketchdlg.SKModal"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.scripts.average_points.AverageDialog.build_dlg": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Button",
    "IntVar",
    "Label",
    "Radiobutton",
    "uniconvertor.app.scripts.average_points.AVERAGE_BOTH",
    "uniconvertor.app.scripts.average_points.AVERAGE_X",
    "uniconvertor.app.scripts.average_points.AVERAGE_Y"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.average_points.AverageDialog.ok": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.average_points.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.average_points.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.average_points.SKModal": {
  "data": {
   "shadows": "app.UI.sketchdlg.SKModal"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.average_points._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.average_points.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.average_points.average_points": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.Point",
    "float",
    "len",
    "list",
    "object",
    "object.Paths",
    "object.SetPaths",
    "object.is_Bezier",
    "range",
    "tuple",
    "type",
    "uniconvertor.app.scripts.average_points.AVERAGE_X",
    "uniconvertor.app.scripts.average_points.AVERAGE_Y",
    "uniconvertor.app.scripts.average_points.AverageDialog"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.average_points.run": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "uniconvertor.app.scripts.average_points.average_points"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_spiral": {
  "data": {
   "symbols_in_volume": [
    "app._",
    "uniconvertor.app.scripts.create_spiral.create_spiral"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.create_spiral.ContAngle": {
  "data": {
   "shadows": "app.ContAngle"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.ContSmooth": {
  "data": {
   "shadows": "app.ContSmooth"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.ContSymmetrical": {
  "data": {
   "shadows": "app.ContSymmetrical"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.CreateStarDlg": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "app.UI.sketchdlg.SKModal",
    "app._"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.scripts.create_spiral.CreateStarDlg.build_dlg": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Button",
    "Entry",
    "IntVar",
    "Label",
    "StringVar",
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_spiral.CreateStarDlg.ok": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_spiral.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.SKModal": {
  "data": {
   "shadows": "app.UI.sketchdlg.SKModal"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.cos": {
  "data": {
   "shadows": "math.cos"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.create_spiral": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "app.PolyBezier",
    "apply",
    "uniconvertor.app.scripts.create_spiral.CreateStarDlg"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_spiral.create_spiral_path": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "app.ContSymmetrical",
    "app.CreatePath",
    "app.Point",
    "app.Polar",
    "math.pi",
    "range",
    "tangent",
    "uniconvertor.app.scripts.create_spiral.unit"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_spiral.create_spiral_path.tangent": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "app.Point",
    "math.cos",
    "math.sin"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_spiral.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.sin": {
  "data": {
   "shadows": "math.sin"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_spiral.unit": {
  "data": {
   "shadows": "unit"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star": {
  "data": {
   "symbols_in_volume": [
    "app._",
    "uniconvertor.app.scripts.create_star.create_star"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.create_star.Button": {
  "data": {
   "shadows": "Tkinter.Button"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.CreateStarDlg": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "app.UI.sketchdlg.SKModal",
    "app._"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.scripts.create_star.CreateStarDlg.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "app.UI.sketchdlg.SKModal.__init__",
    "apply"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star.CreateStarDlg.build_dlg": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Tkinter.Button",
    "Tkinter.DoubleVar",
    "Tkinter.Entry",
    "Tkinter.Frame",
    "Tkinter.IntVar",
    "Tkinter.Label",
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star.CreateStarDlg.ok": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star.DoubleVar": {
  "data": {
   "shadows": "Tkinter.DoubleVar"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.Entry": {
  "data": {
   "shadows": "Tkinter.Entry"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.Frame": {
  "data": {
   "shadows": "Tkinter.Frame"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.IntVar": {
  "data": {
   "shadows": "Tkinter.IntVar"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.Label": {
  "data": {
   "shadows": "Tkinter.Label"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.SKModal": {
  "data": {
   "shadows": "app.UI.sketchdlg.SKModal"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star.create_star": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "app.PolyBezier",
    "app.SolidPattern",
    "app.StandardColors.blue",
    "uniconvertor.app.scripts.create_star.CreateStarDlg",
    "uniconvertor.app.scripts.create_star.create_star_path"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star.create_star_path": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.Point",
    "app.Polar",
    "math.pi",
    "range"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline": {
  "data": {
   "symbols_in_volume": [
    "app._",
    "uniconvertor.app.scripts.create_star_outline.create_star_outline"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.create_star_outline.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline.CreateStarDlg": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "app.UI.sketchdlg.SKModal",
    "app._"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.scripts.create_star_outline.CreateStarDlg.build_dlg": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Button",
    "Entry",
    "IntVar",
    "Label",
    "StringVar",
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star_outline.CreateStarDlg.ok": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star_outline.Polar": {
  "data": {
   "shadows": "app.Polar"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline.SKModal": {
  "data": {
   "shadows": "app.UI.sketchdlg.SKModal"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline.create_star_outline": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "app.PolyBezier",
    "apply",
    "uniconvertor.app.scripts.create_star_outline.CreateStarDlg"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star_outline.create_star_path": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.Polar",
    "range",
    "uniconvertor.app.scripts.create_star_outline.math",
    "uniconvertor.app.scripts.create_star_outline.unit"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.create_star_outline.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_star_outline.unit": {
  "data": {
   "shadows": "unit"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.create_text.create_text"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.create_text.GetFont": {
  "data": {
   "shadows": "app.GetFont"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text.SimpleText": {
  "data": {
   "shadows": "app.SimpleText"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text.SolidPattern": {
  "data": {
   "shadows": "app.SolidPattern"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text.StandardColors": {
  "data": {
   "shadows": "app.StandardColors"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.create_text.create_text": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "app.GetFont",
    "app.SimpleText",
    "app.SolidPattern",
    "app.StandardColors.green",
    "app.Translation"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster": {
  "data": {
   "symbols_in_volume": [
    "app._",
    "uniconvertor.app.scripts.export_raster.export_raster_interactive",
    "uniconvertor.app.scripts.export_raster.export_raster_more_interactive"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.export_raster.CreateRasterParametersDlg": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "app.UI.sketchdlg.SKModal",
    "app._"
   ]
  },
  "type": "class"
 },
 "uniconvertor.app.scripts.export_raster.CreateRasterParametersDlg.build_dlg": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "BooleanVar",
    "Button",
    "Checkbutton",
    "Entry",
    "IntVar",
    "Label",
    "app._"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.CreateRasterParametersDlg.ok": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.Image": {
  "data": {
   "shadows": "sk1libs.imaging.Image"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster.ImageChops": {
  "data": {
   "shadows": "sk1libs.imaging.ImageChops"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster.PostScriptDevice": {
  "data": {
   "shadows": "app.PostScriptDevice"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster.SKModal": {
  "data": {
   "shadows": "app.UI.sketchdlg.SKModal"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster.alpha_prolog": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.export_raster.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster.export_alpha": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "round",
    "uniconvertor.app.scripts.export_raster.alpha_prolog",
    "uniconvertor.app.scripts.export_raster.make_ps",
    "uniconvertor.app.scripts.export_raster.render_ps"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.export_raster": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "format",
    "round",
    "uniconvertor.app.scripts.export_raster.make_ps",
    "uniconvertor.app.scripts.export_raster.os",
    "uniconvertor.app.scripts.export_raster.render_ps"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.export_raster_interactive": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "app._",
    "tuple",
    "uniconvertor.app.scripts.export_raster.export_alpha",
    "uniconvertor.app.scripts.export_raster.export_raster",
    "uniconvertor.app.scripts.export_raster.filelist",
    "uniconvertor.app.scripts.export_raster.os"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.export_raster_more_interactive": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "export_raster_interactive",
    "uniconvertor.app.scripts.export_raster.CreateRasterParametersDlg"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.filelist": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.export_raster.make_ps": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "app.PostScriptDevice",
    "uniconvertor.app.scripts.export_raster.tempfile"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.export_raster.render_ps": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "locals",
    "uniconvertor.app.scripts.export_raster.os",
    "uniconvertor.app.scripts.export_raster.tempfile"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.export_raster.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.footprints.foot_prints_along_path"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.footprints.Group": {
  "data": {
   "shadows": "app.Group"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints.PATHTEXT_ROTATE": {
  "data": {
   "shadows": "app.Graphics.text.PATHTEXT_ROTATE"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints.Scale": {
  "data": {
   "shadows": "app.Scale"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints.Translation": {
  "data": {
   "shadows": "app.Translation"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints.coord_sys_at": {
  "data": {
   "shadows": "app.Graphics.text.coord_sys_at"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.footprints.foot_prints_along_path": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "app.Graphics.text.PATHTEXT_ROTATE",
    "app.Graphics.text.coord_sys_at",
    "app.Group",
    "app.Scale",
    "app.Translation",
    "len",
    "trafo"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.read_gimp_path": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.read_gimp_path.app",
    "uniconvertor.app.scripts.read_gimp_path.re",
    "uniconvertor.app.scripts.read_gimp_path.read_gimp_path"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.read_gimp_path.BEZIER_ANCHOR": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.read_gimp_path.BEZIER_CONTROL": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.read_gimp_path.BEZIER_MOVE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.read_gimp_path.CreatePath": {
  "data": {
   "shadows": "app.CreatePath"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.Point": {
  "data": {
   "shadows": "app.Point"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.PolyBezier": {
  "data": {
   "shadows": "app.PolyBezier"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.Trafo": {
  "data": {
   "shadows": "app.Trafo"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.lstrip": {
  "data": {
   "shadows": "string.lstrip"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.read_gimp_path.read_gimp_path": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "app.PolyBezier",
    "app.Trafo",
    "object",
    "object.Transform",
    "uniconvertor.app.scripts.read_gimp_path.read_path"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.read_gimp_path.read_path": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "app.CreatePath",
    "app.Point",
    "float",
    "int",
    "open",
    "string.lstrip",
    "string.split",
    "tuple",
    "type",
    "uniconvertor.app.scripts.read_gimp_path.BEZIER_ANCHOR",
    "uniconvertor.app.scripts.read_gimp_path.BEZIER_CONTROL",
    "uniconvertor.app.scripts.read_gimp_path.BEZIER_MOVE",
    "uniconvertor.app.scripts.read_gimp_path.rx_point"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.read_gimp_path.rx_point": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "uniconvertor.app.scripts.read_gimp_path.split": {
  "data": {
   "shadows": "string.split"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.reload_image": {
  "data": {
   "symbols_in_volume": [
    "app._",
    "uniconvertor.app.scripts.reload_image.app",
    "uniconvertor.app.scripts.reload_image.reload_image"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.reload_image._": {
  "data": {
   "shadows": "app._"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.reload_image.app": {
  "data": {
   "shadows": "app"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.reload_image.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.reload_image.eps": {
  "data": {
   "shadows": "app.Graphics.eps"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.reload_image.external": {
  "data": {
   "shadows": "app.Graphics.external"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.reload_image.reload_image": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "app.Graphics.eps.load_eps",
    "app.Graphics.external.ExternalGraphics",
    "app.Graphics.external.instance_cache",
    "app.Graphics.external.instance_cache.has_key",
    "isinstance",
    "uniconvertor.app.scripts.reload_image.app"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.save_selection": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.save_selection.save_selection_as_ps"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.save_selection.Document": {
  "data": {
   "shadows": "app.Document"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.save_selection.PostScriptDevice": {
  "data": {
   "shadows": "app.PostScriptDevice"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.save_selection.UI": {
  "data": {
   "shadows": "app.UI"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.save_selection.app.Scripting": {
  "data": {
   "shadows": "app.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.save_selection.get_ps_filename": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "app.UI.skapp.psfiletypes",
    "dir",
    "uniconvertor.app.scripts.save_selection.os"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.save_selection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.save_selection.save_selection_as_ps": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "app.PostScriptDevice",
    "tuple",
    "uniconvertor.app.scripts.save_selection.get_ps_filename",
    "uniconvertor.app.scripts.save_selection.selection_as_document"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.save_selection.selection_as_document": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "app.Document"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.select_same_fill_color": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.select_same_fill_color.select_same_fill_color"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.select_same_fill_color.Sketch.Scripting": {
  "data": {
   "shadows": "Sketch.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.select_same_fill_color.select_same_fill_color": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.select_same_fill_color.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.select_same_line_color": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.select_same_line_color.select_same_line_color"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.select_same_line_color.Sketch.Scripting": {
  "data": {
   "shadows": "Sketch.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.select_same_line_color.select_same_line_color": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "uniconvertor.app.scripts.usersguide": {
  "data": {
   "symbols_in_volume": [
    "uniconvertor.app.scripts.usersguide.hello_world"
   ]
  },
  "type": "module"
 },
 "uniconvertor.app.scripts.usersguide.Sketch.Scripting": {
  "data": {
   "shadows": "Sketch.Scripting"
  },
  "type": "import"
 },
 "uniconvertor.app.scripts.usersguide.hello_world": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "uniconvertor.app.utils": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.utils.locale_utils": {
  "data": {},
  "type": "module"
 },
 "uniconvertor.app.utils.locale_utils.UTF_CODEC": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "uniconvertor.app.utils.locale_utils.cmd_iconv": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "uniconvertor.app.utils.locale_utils.os"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.utils.locale_utils.config": {
  "data": {
   "shadows": "app.config"
  },
  "type": "import"
 },
 "uniconvertor.app.utils.locale_utils.get_locale": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "app.config.preferences.system_encoding"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.utils.locale_utils.getshell_var": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "uniconvertor.app.utils.locale_utils.os"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.utils.locale_utils.locale_to_utf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "cmd_iconv",
    "get_locale",
    "strip_line",
    "uniconvertor.app.utils.locale_utils.UTF_CODEC"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.utils.locale_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "uniconvertor.app.utils.locale_utils.strip_line": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "uniconvertor.app.utils.locale_utils.utf_to_locale": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "cmd_iconv",
    "get_locale",
    "strip_line",
    "uniconvertor.app.utils.locale_utils.UTF_CODEC"
   ]
  },
  "type": "function"
 }
}