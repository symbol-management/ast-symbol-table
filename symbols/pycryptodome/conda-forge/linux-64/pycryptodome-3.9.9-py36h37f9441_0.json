{
 "*": {
  "data": {
   "imports": [
    "Crypto.Util.py3compat"
   ]
  },
  "type": "star-import"
 },
 "Crypto": {
  "data": {
   "symbols_in_volume": {
    "Crypto.version_info": {
     "line number": [
      6
     ]
    },
    "str": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cbc._create_cbc_cipher": {
     "line number": [
      40
     ]
    },
    "Crypto.Cipher._mode_ccm._create_ccm_cipher": {
     "line number": [
      48
     ]
    },
    "Crypto.Cipher._mode_cfb._create_cfb_cipher": {
     "line number": [
      41
     ]
    },
    "Crypto.Cipher._mode_ctr._create_ctr_cipher": {
     "line number": [
      43
     ]
    },
    "Crypto.Cipher._mode_eax._create_eax_cipher": {
     "line number": [
      45
     ]
    },
    "Crypto.Cipher._mode_ecb._create_ecb_cipher": {
     "line number": [
      39
     ]
    },
    "Crypto.Cipher._mode_gcm._create_gcm_cipher": {
     "line number": [
      50
     ]
    },
    "Crypto.Cipher._mode_ocb._create_ocb_cipher": {
     "line number": [
      51
     ]
    },
    "Crypto.Cipher._mode_ofb._create_ofb_cipher": {
     "line number": [
      42
     ]
    },
    "Crypto.Cipher._mode_openpgp._create_openpgp_cipher": {
     "line number": [
      44
     ]
    },
    "Crypto.Cipher._mode_siv._create_siv_cipher": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.AES": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Cipher.AES._cproto": {
     "line number": [
      67,
      74
     ]
    },
    "Crypto.Util._cpu_features.have_aes_ni": {
     "line number": [
      72
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      66,
      73
     ]
    },
    "OSError": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.AES.MODE_CBC": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_CCM": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_CFB": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_CTR": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_EAX": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_ECB": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_GCM": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_OCB": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_OFB": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_OPENPGP": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.MODE_SIV": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES._cproto": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES._cpu_features": {
  "data": {
   "shadows": "Crypto.Util._cpu_features"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES._create_base_cipher": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "Crypto.Cipher.AES._raw_aes_lib": {
     "line number": [
      99,
      100
     ]
    },
    "Crypto.Cipher.AES._raw_aesni_lib": {
     "line number": [
      95,
      96,
      97
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      109
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      102
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      103
     ]
    },
    "KeyError": {
     "line number": [
      89
     ]
    },
    "TypeError": {
     "line number": [
      90
     ]
    },
    "ValueError": {
     "line number": [
      93,
      107
     ]
    },
    "len": {
     "line number": [
      92,
      93,
      104
     ]
    },
    "start_operation": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.AES._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES._derive_Poly1305_key_pair": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      126
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      122
     ]
    },
    "ValueError": {
     "line number": [
      119,
      124
     ]
    },
    "len": {
     "line number": [
      118,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.AES._raw_aes_lib": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES._raw_aesni_lib": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.block_size": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES.key_size": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "Crypto.Cipher.AES.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.AES.new": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.sys": {
     "line number": [
      232
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      232
     ]
    },
    "__name__": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.AES.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.ARC2.MODE_CBC": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.MODE_CFB": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.MODE_CTR": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.MODE_EAX": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.MODE_ECB": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.MODE_OFB": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.MODE_OPENPGP": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2._create_base_cipher": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2._raw_arc2_lib": {
     "line number": [
      80,
      81
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      92
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      83
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      85,
      86
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      84
     ]
    },
    "KeyError": {
     "line number": [
      68
     ]
    },
    "TypeError": {
     "line number": [
      69
     ]
    },
    "ValueError": {
     "line number": [
      74,
      77,
      89
     ]
    },
    "len": {
     "line number": [
      73,
      74,
      85
     ]
    },
    "start_operation": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ARC2._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2._raw_arc2_lib": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.block_size": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2.key_size": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC2.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC2.new": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2.sys": {
     "line number": [
      162
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      162
     ]
    },
    "__name__": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ARC2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      30
     ]
    },
    "range": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.ARC4.ARC4Cipher": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "Crypto.Cipher.ARC4.ARC4Cipher.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4._raw_arc4_lib": {
     "line number": [
      60,
      67
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      66
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      59
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      61
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      60
     ]
    },
    "ValueError": {
     "line number": [
      56,
      64
     ]
    },
    "len": {
     "line number": [
      49,
      55,
      57,
      61,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ARC4.ARC4Cipher.decrypt": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107,
      108
     ]
    },
    "str": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ARC4.ARC4Cipher.encrypt": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4._raw_arc4_lib": {
     "line number": [
      88
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      91
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      89
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      87
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      94
     ]
    },
    "ValueError": {
     "line number": [
      93
     ]
    },
    "len": {
     "line number": [
      87,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ARC4.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4._raw_arc4_lib": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC4.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.block_size": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC4.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.key_size": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "Crypto.Cipher.ARC4.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.ARC4.new": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4.ARC4Cipher": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Blowfish": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      41
     ]
    },
    "range": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.Blowfish.MODE_CBC": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.MODE_CFB": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.MODE_CTR": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.MODE_EAX": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.MODE_ECB": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.MODE_OFB": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.MODE_OPENPGP": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Blowfish.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Blowfish._create_base_cipher": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Cipher.Blowfish._raw_blowfish_lib": {
     "line number": [
      73,
      74
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      83
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      76
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      78
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      77
     ]
    },
    "KeyError": {
     "line number": [
      67
     ]
    },
    "TypeError": {
     "line number": [
      68
     ]
    },
    "ValueError": {
     "line number": [
      71,
      81
     ]
    },
    "len": {
     "line number": [
      70,
      71,
      78
     ]
    },
    "start_operation": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Blowfish._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher.Blowfish._raw_blowfish_lib": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.block_size": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.Blowfish.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.Blowfish.key_size": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "Crypto.Cipher.Blowfish.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.Blowfish.new": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Cipher.Blowfish.sys": {
     "line number": [
      146
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      146
     ]
    },
    "__name__": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Blowfish.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      42
     ]
    },
    "range": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.CAST.MODE_CBC": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.MODE_CFB": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.MODE_CTR": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.MODE_EAX": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.MODE_ECB": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.MODE_OFB": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.MODE_OPENPGP": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST._create_base_cipher": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Cipher.CAST._raw_cast_lib": {
     "line number": [
      72,
      73
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      83
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      75
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      76
     ]
    },
    "KeyError": {
     "line number": [
      66
     ]
    },
    "TypeError": {
     "line number": [
      67
     ]
    },
    "ValueError": {
     "line number": [
      70,
      80
     ]
    },
    "len": {
     "line number": [
      69,
      70,
      77
     ]
    },
    "start_operation": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.CAST._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST._raw_cast_lib": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.block_size": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST.key_size": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "Crypto.Cipher.CAST.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.CAST.new": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Cipher.CAST.sys": {
     "line number": [
      146
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      146
     ]
    },
    "__name__": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.CAST.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.ChaCha20.ChaCha20Cipher": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "object": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher.ChaCha20.ChaCha20Cipher.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20._HChaCha20": {
     "line number": [
      100
     ]
    },
    "Crypto.Cipher.ChaCha20._raw_chacha20_lib": {
     "line number": [
      111,
      121
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      120
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      110
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      114,
      116
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      113
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      106
     ]
    },
    "ValueError": {
     "line number": [
      118
     ]
    },
    "len": {
     "line number": [
      99,
      114,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20.ChaCha20Cipher._encrypt": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20._raw_chacha20_lib": {
     "line number": [
      156
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      160
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      158,
      159
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      145
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      165
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      149
     ]
    },
    "TypeError": {
     "line number": [
      150
     ]
    },
    "ValueError": {
     "line number": [
      153,
      162
     ]
    },
    "len": {
     "line number": [
      145,
      152,
      152,
      154,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20.ChaCha20Cipher.decrypt": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      183
     ]
    },
    "ValueError": {
     "line number": [
      188,
      189
     ]
    },
    "str": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20.ChaCha20Cipher.encrypt": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20.ChaCha20Cipher.seek": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20._raw_chacha20_lib": {
     "line number": [
      203
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      205,
      206
     ]
    },
    "ValueError": {
     "line number": [
      210
     ]
    },
    "divmod": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20._HChaCha20": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20._raw_chacha20_lib": {
     "line number": [
      72
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      73,
      74,
      75
     ]
    },
    "ValueError": {
     "line number": [
      77
     ]
    },
    "bytearray": {
     "line number": [
      71
     ]
    },
    "len": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20._derive_Poly1305_key_pair": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      238
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      223
     ]
    },
    "ValueError": {
     "line number": [
      220,
      236
     ]
    },
    "len": {
     "line number": [
      219,
      224,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20._raw_chacha20_lib": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "Crypto.Cipher.ChaCha20.block_size": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "Crypto.Cipher.ChaCha20.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.c_ulong": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_ulong"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.key_size": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "Crypto.Cipher.ChaCha20.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20.new": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.ChaCha20Cipher": {
     "line number": [
      280
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      269
     ]
    },
    "KeyError": {
     "line number": [
      264
     ]
    },
    "TypeError": {
     "line number": [
      265,
      278
     ]
    },
    "ValueError": {
     "line number": [
      272,
      275
     ]
    },
    "len": {
     "line number": [
      271,
      274
     ]
    },
    "str": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305._enum": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20": {
  "data": {
   "shadows": "Crypto.Cipher.ChaCha20"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20": {
     "line number": [
      71
     ]
    },
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      73
     ]
    },
    "Crypto.Cipher.ChaCha20_Poly1305._CipherStatus": {
     "line number": [
      79
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      71
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher._compute_mac": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305._CipherStatus": {
     "line number": [
      168,
      171,
      173,
      179
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      181,
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher._pad_aad": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305._CipherStatus": {
     "line number": [
      105,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.decrypt": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305._CipherStatus": {
     "line number": [
      155
     ]
    },
    "TypeError": {
     "line number": [
      153
     ]
    },
    "len": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.decrypt_and_verify": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.digest": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.encrypt": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305._CipherStatus": {
     "line number": [
      126
     ]
    },
    "TypeError": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.encrypt_and_digest": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.hexdigest": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.hexverify": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.update": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      98
     ]
    },
    "len": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher.verify": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      230,
      232
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      226
     ]
    },
    "TypeError": {
     "line number": [
      222
     ]
    },
    "ValueError": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.Poly1305": {
  "data": {
   "shadows": "Crypto.Hash.Poly1305"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305._CipherStatus": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "Crypto.Cipher.ChaCha20_Poly1305._HChaCha20": {
  "data": {
   "shadows": "Crypto.Cipher.ChaCha20._HChaCha20"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305._enum": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "type": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.is_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.key_size": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.new": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20._HChaCha20": {
     "line number": [
      321
     ]
    },
    "Crypto.Cipher.ChaCha20_Poly1305.ChaCha20Poly1305Cipher": {
     "line number": [
      332
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      316
     ]
    },
    "Crypto.Util._raw_api.is_buffer": {
     "line number": [
      326
     ]
    },
    "KeyError": {
     "line number": [
      306
     ]
    },
    "TypeError": {
     "line number": [
      307,
      327,
      330
     ]
    },
    "ValueError": {
     "line number": [
      312,
      324
     ]
    },
    "len": {
     "line number": [
      309,
      311,
      318,
      320
     ]
    },
    "str": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.ChaCha20_Poly1305.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.DES.MODE_CBC": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.MODE_CFB": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.MODE_CTR": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.MODE_EAX": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.MODE_ECB": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.MODE_OFB": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.MODE_OPENPGP": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES._create_base_cipher": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Cipher.DES._raw_des_lib": {
     "line number": [
      72,
      73
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      82
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      75
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      76
     ]
    },
    "KeyError": {
     "line number": [
      66
     ]
    },
    "TypeError": {
     "line number": [
      67
     ]
    },
    "ValueError": {
     "line number": [
      70,
      80
     ]
    },
    "len": {
     "line number": [
      69,
      70,
      77
     ]
    },
    "start_operation": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.DES._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES._raw_des_lib": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.block_size": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES.key_size": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES.new": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.Cipher.DES.sys": {
     "line number": [
      145
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      145
     ]
    },
    "__name__": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.DES.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.DES3.MODE_CBC": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.MODE_CFB": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.MODE_CTR": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.MODE_EAX": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.MODE_ECB": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.MODE_OFB": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.MODE_OPENPGP": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3._create_base_cipher": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3._raw_des3_lib": {
     "line number": [
      101,
      102
     ]
    },
    "Crypto.Cipher.DES3.adjust_key_parity": {
     "line number": [
      99
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      111
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      106
     ]
    },
    "Crypto.Util.py3compat.bstr": {
     "line number": [
      99
     ]
    },
    "KeyError": {
     "line number": [
      96
     ]
    },
    "TypeError": {
     "line number": [
      97
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    },
    "len": {
     "line number": [
      106
     ]
    },
    "start_operation": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.DES3._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3._raw_des3_lib": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.adjust_key_parity": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      82
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      82
     ]
    },
    "ValueError": {
     "line number": [
      80,
      85
     ]
    },
    "len": {
     "line number": [
      79
     ]
    },
    "parity_byte": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.DES3.adjust_key_parity.parity_byte": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "range": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.DES3.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.block_size": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.bstr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bstr"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.key_size": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "Crypto.Cipher.DES3.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.DES3.new": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.sys": {
     "line number": [
      174
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      174
     ]
    },
    "__name__": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.DES3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP": {
  "data": {},
  "type": "module"
 },
 "Crypto.Cipher.PKCS1_OAEP.Crypto.Hash.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.Crypto.Util.number": {
  "data": {
   "shadows": "Crypto.Util.number"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.MGF1": {
  "data": {
   "shadows": "Crypto.Signature.pss.MGF1"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.Signature.pss.MGF1": {
     "line number": [
      71
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher.can_decrypt": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher.can_encrypt": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher.decrypt": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      169
     ]
    },
    "Crypto.Util.number.ceil_div": {
     "line number": [
      162
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      173
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      193,
      196,
      198
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      185,
      189,
      194
     ]
    },
    "ValueError": {
     "line number": [
      167,
      200
     ]
    },
    "int": {
     "line number": [
      193
     ]
    },
    "len": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher.encrypt": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      135
     ]
    },
    "Crypto.Util.number.ceil_div": {
     "line number": [
      108
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      139
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      121
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      127,
      131
     ]
    },
    "ValueError": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_OAEP.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.ceil_div": {
  "data": {
   "shadows": "Crypto.Util.number.ceil_div"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_OAEP.new": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.PKCS1OAEP_Cipher": {
     "line number": [
      238
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_OAEP.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5": {
  "data": {},
  "type": "module"
 },
 "Crypto.Cipher.PKCS1_v1_5.Crypto.Util.number": {
  "data": {
   "shadows": "Crypto.Util.number"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher.can_decrypt": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher.can_encrypt": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher.decrypt": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      167
     ]
    },
    "Crypto.Util.number.ceil_div": {
     "line number": [
      161
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      171
     ]
    },
    "ValueError": {
     "line number": [
      165
     ]
    },
    "len": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher.encrypt": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      96
     ]
    },
    "Crypto.Util.number.ceil_div": {
     "line number": [
      78
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      100
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      94
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      88
     ]
    },
    "ValueError": {
     "line number": [
      83
     ]
    },
    "len": {
     "line number": [
      79,
      86,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.PKCS1_v1_5.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "Crypto.Cipher.PKCS1_v1_5._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.ceil_div": {
  "data": {
   "shadows": "Crypto.Util.number.ceil_div"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.PKCS1_v1_5.new": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.PKCS115_Cipher": {
     "line number": [
      198
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Salsa20": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher.Salsa20.Salsa20Cipher": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "Crypto.Cipher.Salsa20.Salsa20Cipher.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20._raw_salsa20_lib": {
     "line number": [
      69,
      78
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      68
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      71,
      73
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      70,
      72
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      66
     ]
    },
    "ValueError": {
     "line number": [
      60,
      63,
      76
     ]
    },
    "len": {
     "line number": [
      59,
      60,
      62,
      64,
      71,
      73,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Salsa20.Salsa20Cipher.decrypt": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136,
      137
     ]
    },
    "str": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Salsa20.Salsa20Cipher.encrypt": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20._raw_salsa20_lib": {
     "line number": [
      108
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      112
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      110,
      111
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      97
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      117
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      101
     ]
    },
    "TypeError": {
     "line number": [
      102
     ]
    },
    "ValueError": {
     "line number": [
      105,
      114
     ]
    },
    "len": {
     "line number": [
      97,
      104,
      104,
      106,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher.Salsa20.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20._raw_salsa20_lib": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.Cipher.Salsa20.block_size": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "Crypto.Cipher.Salsa20.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.key_size": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.Cipher.Salsa20.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher.Salsa20.new": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.Salsa20Cipher": {
     "line number": [
      160
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._EKSBlowfish": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      38
     ]
    },
    "range": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._EKSBlowfish.MODE_ECB": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "Crypto.Cipher._EKSBlowfish.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish._create_base_cipher": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "Crypto.Cipher._EKSBlowfish._raw_blowfish_lib": {
     "line number": [
      77,
      78
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      91
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      80
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      82,
      84
     ]
    },
    "Crypto.Util._raw_api.c_uint": {
     "line number": [
      85,
      86
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      81,
      83
     ]
    },
    "KeyError": {
     "line number": [
      70
     ]
    },
    "TypeError": {
     "line number": [
      71
     ]
    },
    "ValueError": {
     "line number": [
      75,
      89
     ]
    },
    "int": {
     "line number": [
      86
     ]
    },
    "len": {
     "line number": [
      74,
      75,
      82,
      84
     ]
    },
    "start_operation": {
     "line number": [
      81
     ]
    },
    "str": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._EKSBlowfish._create_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._create_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish._raw_blowfish_lib": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "Crypto.Cipher._EKSBlowfish.block_size": {
  "data": {
   "lineno": 129
  },
  "type": "constant"
 },
 "Crypto.Cipher._EKSBlowfish.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish.c_uint": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish.key_size": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "Crypto.Cipher._EKSBlowfish.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._EKSBlowfish.new": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.Cipher._EKSBlowfish.sys": {
     "line number": [
      123
     ]
    },
    "Crypto.Cipher._create_cipher": {
     "line number": [
      123
     ]
    },
    "__name__": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._EKSBlowfish.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_cbc_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_cbc._create_cbc_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_ccm_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_ccm._create_ccm_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_cfb_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_cfb._create_cfb_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_cipher": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Cipher._extra_modes": {
     "line number": [
      60
     ]
    },
    "Crypto.Cipher._modes": {
     "line number": [
      58
     ]
    },
    "TypeError": {
     "line number": [
      67,
      71,
      75,
      77
     ]
    },
    "ValueError": {
     "line number": [
      62
     ]
    },
    "dict": {
     "line number": [
      58
     ]
    },
    "len": {
     "line number": [
      66,
      70,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._create_ctr_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_ctr._create_ctr_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_eax_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_eax._create_eax_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_ecb_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_ecb._create_ecb_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_gcm_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_gcm._create_gcm_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_ocb_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_ocb._create_ocb_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_ofb_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_ofb._create_ofb_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_openpgp_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_openpgp._create_openpgp_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._create_siv_cipher": {
  "data": {
   "shadows": "Crypto.Cipher._mode_siv._create_siv_cipher"
  },
  "type": "import"
 },
 "Crypto.Cipher._extra_modes": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_cbc": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_cbc.CbcMode": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "object": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_cbc.CbcMode.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cbc.raw_cbc_lib": {
     "line number": [
      96,
      107
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      106
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      95
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      98
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      97
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      116
     ]
    },
    "ValueError": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      98,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cbc.CbcMode.decrypt": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cbc.raw_cbc_lib": {
     "line number": [
      240
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      243
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      241,
      242
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      229
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      250
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      233
     ]
    },
    "TypeError": {
     "line number": [
      225,
      234
     ]
    },
    "ValueError": {
     "line number": [
      237,
      246,
      247
     ]
    },
    "len": {
     "line number": [
      229,
      236,
      236,
      238,
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cbc.CbcMode.encrypt": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cbc.raw_cbc_lib": {
     "line number": [
      177
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      180
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      178,
      179
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      166
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      187
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      170
     ]
    },
    "TypeError": {
     "line number": [
      162,
      171
     ]
    },
    "ValueError": {
     "line number": [
      174,
      183,
      184
     ]
    },
    "len": {
     "line number": [
      166,
      173,
      173,
      175,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cbc.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_cbc._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc._create_cbc_cipher": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cbc.CbcMode": {
     "line number": [
      293
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      279
     ]
    },
    "TypeError": {
     "line number": [
      282,
      291
     ]
    },
    "ValueError": {
     "line number": [
      287
     ]
    },
    "len": {
     "line number": [
      286
     ]
    },
    "str": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cbc.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cbc.raw_cbc_lib": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ccm": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.enum": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_ccm.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.CcmMode": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "object": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.MacStatus": {
     "line number": [
      154
     ]
    },
    "Crypto.Cipher._mode_ccm.struct": {
     "line number": [
      174
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      122,
      126
     ]
    },
    "ValueError": {
     "line number": [
      135,
      140,
      145
     ]
    },
    "len": {
     "line number": [
      144,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode._digest": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      496
     ]
    },
    "ValueError": {
     "line number": [
      481,
      488
     ]
    },
    "isinstance": {
     "line number": [
      475
     ]
    },
    "len": {
     "line number": [
      476
     ]
    },
    "list": {
     "line number": [
      475
     ]
    },
    "sum": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode._pad_cache_and_update": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.MacStatus": {
     "line number": [
      222
     ]
    },
    "len": {
     "line number": [
      223,
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode._start_mac": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.MacStatus": {
     "line number": [
      186,
      217
     ]
    },
    "Crypto.Cipher._mode_ccm.struct": {
     "line number": [
      194
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      194,
      208
     ]
    },
    "isinstance": {
     "line number": [
      188
     ]
    },
    "len": {
     "line number": [
      191
     ]
    },
    "list": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode._update": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.MacStatus": {
     "line number": [
      276
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      277
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      278,
      287,
      288,
      298
     ]
    },
    "len": {
     "line number": [
      282,
      284,
      285,
      286,
      290,
      297
     ]
    },
    "min": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.decrypt": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.MacStatus": {
     "line number": [
      438,
      443
     ]
    },
    "TypeError": {
     "line number": [
      413
     ]
    },
    "ValueError": {
     "line number": [
      425,
      436
     ]
    },
    "isinstance": {
     "line number": [
      419
     ]
    },
    "len": {
     "line number": [
      420,
      430,
      434
     ]
    },
    "list": {
     "line number": [
      419
     ]
    },
    "sum": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.decrypt_and_verify": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.digest": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.encrypt": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.MacStatus": {
     "line number": [
      365,
      370
     ]
    },
    "TypeError": {
     "line number": [
      340
     ]
    },
    "ValueError": {
     "line number": [
      352,
      363
     ]
    },
    "isinstance": {
     "line number": [
      346
     ]
    },
    "len": {
     "line number": [
      347,
      357,
      361
     ]
    },
    "list": {
     "line number": [
      346
     ]
    },
    "sum": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.encrypt_and_digest": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.hexdigest": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.hexverify": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      553
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.update": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      256
     ]
    },
    "ValueError": {
     "line number": [
      265
     ]
    },
    "len": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.CcmMode.verify": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      534,
      535
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      532
     ]
    },
    "TypeError": {
     "line number": [
      527
     ]
    },
    "ValueError": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.MacStatus": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ccm.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ccm._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm._create_ccm_cipher": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ccm.CcmMode": {
     "line number": [
      649
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      643
     ]
    },
    "KeyError": {
     "line number": [
      638
     ]
    },
    "TypeError": {
     "line number": [
      639
     ]
    },
    "dict": {
     "line number": [
      647
     ]
    },
    "str": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.enum": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "type": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ccm.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ccm.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_cfb.CfbMode": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_cfb.CfbMode.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cfb.raw_cfb_lib": {
     "line number": [
      95,
      106
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      105
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      97,
      98
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      96
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      115
     ]
    },
    "ValueError": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      97,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cfb.CfbMode.decrypt": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cfb.raw_cfb_lib": {
     "line number": [
      234
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      237
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      235,
      236
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      223
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      242
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      227
     ]
    },
    "TypeError": {
     "line number": [
      219,
      228
     ]
    },
    "ValueError": {
     "line number": [
      231,
      239
     ]
    },
    "len": {
     "line number": [
      223,
      230,
      230,
      232,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cfb.CfbMode.encrypt": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cfb.raw_cfb_lib": {
     "line number": [
      173
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      176
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      174,
      175
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      162
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      181
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      166
     ]
    },
    "TypeError": {
     "line number": [
      158,
      167
     ]
    },
    "ValueError": {
     "line number": [
      170,
      178
     ]
    },
    "len": {
     "line number": [
      162,
      169,
      169,
      171,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cfb.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_cfb._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb._create_cfb_cipher": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_cfb.CfbMode": {
     "line number": [
      293
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      276
     ]
    },
    "TypeError": {
     "line number": [
      279,
      292
     ]
    },
    "ValueError": {
     "line number": [
      284,
      289
     ]
    },
    "divmod": {
     "line number": [
      287
     ]
    },
    "len": {
     "line number": [
      283
     ]
    },
    "str": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_cfb.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_cfb.raw_cfb_lib": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ctr": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_ctr.CtrMode": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "object": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_ctr.CtrMode.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ctr.raw_ctr_lib": {
     "line number": [
      126,
      140
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      139
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      125
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      128,
      129
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      127
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      122
     ]
    },
    "ValueError": {
     "line number": [
      134
     ]
    },
    "len": {
     "line number": [
      121,
      128,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ctr.CtrMode.decrypt": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ctr.raw_ctr_lib": {
     "line number": [
      265
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      268
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      266,
      267
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      253
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      276
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      257
     ]
    },
    "OverflowError": {
     "line number": [
      271
     ]
    },
    "TypeError": {
     "line number": [
      249,
      258
     ]
    },
    "ValueError": {
     "line number": [
      261,
      273
     ]
    },
    "len": {
     "line number": [
      253,
      260,
      260,
      262,
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ctr.CtrMode.encrypt": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ctr.raw_ctr_lib": {
     "line number": [
      200
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      203
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      201,
      202
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      189
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      211
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      193
     ]
    },
    "OverflowError": {
     "line number": [
      206
     ]
    },
    "TypeError": {
     "line number": [
      185,
      194
     ]
    },
    "ValueError": {
     "line number": [
      197,
      208
     ]
    },
    "len": {
     "line number": [
      189,
      196,
      196,
      198,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ctr.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ctr._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr._create_ctr_cipher": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ctr.CtrMode": {
     "line number": [
      356,
      392
     ]
    },
    "Crypto.Cipher._mode_ctr.struct": {
     "line number": [
      380
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      336
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      350
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      347
     ]
    },
    "KeyError": {
     "line number": [
      373
     ]
    },
    "TypeError": {
     "line number": [
      324,
      327,
      334,
      374
     ]
    },
    "ValueError": {
     "line number": [
      339,
      349,
      353,
      388
     ]
    },
    "dict": {
     "line number": [
      366
     ]
    },
    "len": {
     "line number": [
      338,
      342,
      352,
      353,
      358,
      382,
      387,
      389,
      393
     ]
    },
    "max": {
     "line number": [
      382
     ]
    },
    "str": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ctr.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.is_native_int": {
  "data": {
   "shadows": "Crypto.Util.py3compat.is_native_int"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ctr.raw_ctr_lib": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ctr.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax": {
  "data": {},
  "type": "module"
 },
 "Crypto.Cipher._mode_eax.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.CMAC": {
  "data": {
   "shadows": "Crypto.Hash.CMAC"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.EaxMode": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "object": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_eax.EaxMode.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_eax.struct": {
     "line number": [
      109
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      108
     ]
    },
    "Crypto.Util._raw_api.is_buffer": {
     "line number": [
      104
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      120
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      86
     ]
    },
    "TypeError": {
     "line number": [
      105
     ]
    },
    "ValueError": {
     "line number": [
      98,
      103
     ]
    },
    "len": {
     "line number": [
      102
     ]
    },
    "range": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.decrypt": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.decrypt_and_verify": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.digest": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      261
     ]
    },
    "TypeError": {
     "line number": [
      254
     ]
    },
    "range": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.encrypt": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.encrypt_and_digest": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.hexdigest": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.hexverify": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.update": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.EaxMode.verify": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      305,
      306
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      303
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      300
     ]
    },
    "TypeError": {
     "line number": [
      293
     ]
    },
    "ValueError": {
     "line number": [
      309
     ]
    },
    "range": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_eax._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax._create_eax_cipher": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_eax.EaxMode": {
     "line number": [
      408
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      403
     ]
    },
    "KeyError": {
     "line number": [
      405
     ]
    },
    "TypeError": {
     "line number": [
      406
     ]
    },
    "str": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_eax.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.is_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_eax.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_ecb.EcbMode": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "object": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_ecb.EcbMode.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ecb.raw_ecb_lib": {
     "line number": [
      77,
      87
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      86
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      76
     ]
    },
    "ValueError": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ecb.EcbMode.decrypt": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ecb.raw_ecb_lib": {
     "line number": [
      189
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      192
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      190,
      191
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      178
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      199
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      182
     ]
    },
    "TypeError": {
     "line number": [
      183
     ]
    },
    "ValueError": {
     "line number": [
      186,
      195,
      196
     ]
    },
    "len": {
     "line number": [
      178,
      185,
      185,
      187,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ecb.EcbMode.encrypt": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ecb.raw_ecb_lib": {
     "line number": [
      134
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      137
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      135,
      136
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      123
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      144
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      127
     ]
    },
    "TypeError": {
     "line number": [
      128
     ]
    },
    "ValueError": {
     "line number": [
      131,
      140,
      141
     ]
    },
    "len": {
     "line number": [
      123,
      130,
      130,
      132,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ecb.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ecb._create_ecb_cipher": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ecb.EcbMode": {
     "line number": [
      218
     ]
    },
    "TypeError": {
     "line number": [
      217
     ]
    },
    "str": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ecb.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ecb.raw_ecb_lib": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_gcm": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm._get_ghash_clmul": {
     "line number": [
      99
     ]
    },
    "Crypto.Cipher._mode_gcm._get_ghash_portable": {
     "line number": [
      84
     ]
    },
    "Crypto.Cipher._mode_gcm.enum": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_gcm.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.GcmMode": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "object": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm.MacStatus": {
     "line number": [
      260
     ]
    },
    "Crypto.Cipher._mode_gcm._GHASH": {
     "line number": [
      236,
      248
     ]
    },
    "Crypto.Util._raw_api.is_buffer": {
     "line number": [
      190
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      240
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      235
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      198,
      202
     ]
    },
    "TypeError": {
     "line number": [
      191
     ]
    },
    "ValueError": {
     "line number": [
      184,
      188,
      195,
      207
     ]
    },
    "len": {
     "line number": [
      187,
      194,
      229,
      232,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode._compute_mac": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      460,
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode._pad_cache_and_update": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "len": {
     "line number": [
      322,
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode._update": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      306,
      317
     ]
    },
    "len": {
     "line number": [
      302,
      304,
      305,
      305,
      309,
      316
     ]
    },
    "min": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.decrypt": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm.MacStatus": {
     "line number": [
      425,
      427
     ]
    },
    "TypeError": {
     "line number": [
      421
     ]
    },
    "len": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.decrypt_and_verify": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.digest": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.encrypt": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm.MacStatus": {
     "line number": [
      374,
      376
     ]
    },
    "TypeError": {
     "line number": [
      368
     ]
    },
    "ValueError": {
     "line number": [
      383
     ]
    },
    "len": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.encrypt_and_digest": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.hexdigest": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.hexverify": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.update": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      286
     ]
    },
    "ValueError": {
     "line number": [
      297
     ]
    },
    "len": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.GcmMode.verify": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      502,
      504
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      500
     ]
    },
    "TypeError": {
     "line number": [
      496
     ]
    },
    "ValueError": {
     "line number": [
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.MacStatus": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_gcm.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm._GHASH": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "object": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_gcm._GHASH.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      125
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      119
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      120
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      129
     ]
    },
    "ValueError": {
     "line number": [
      123
     ]
    },
    "len": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm._GHASH.digest": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm._GHASH.update": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      136
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      135
     ]
    },
    "ValueError": {
     "line number": [
      140
     ]
    },
    "len": {
     "line number": [
      132,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_gcm._build_impl": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      73
     ]
    },
    "GHASH_Imp": {
     "line number": [
      76
     ]
    },
    "collections.namedtuple": {
     "line number": [
      70
     ]
    },
    "dict": {
     "line number": [
      75
     ]
    },
    "getattr": {
     "line number": [
      72
     ]
    },
    "zip": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm._cpu_features": {
  "data": {
   "shadows": "Crypto.Util._cpu_features"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm._create_gcm_cipher": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm.GcmMode": {
     "line number": [
      620
     ]
    },
    "Crypto.Cipher._mode_gcm._ghash_clmul": {
     "line number": [
      615,
      616
     ]
    },
    "Crypto.Cipher._mode_gcm._ghash_portable": {
     "line number": [
      618
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      610
     ]
    },
    "KeyError": {
     "line number": [
      605
     ]
    },
    "TypeError": {
     "line number": [
      606
     ]
    },
    "str": {
     "line number": [
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm._get_ghash_clmul": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm._build_impl": {
     "line number": [
      95
     ]
    },
    "Crypto.Cipher._mode_gcm._ghash_api_template": {
     "line number": [
      93
     ]
    },
    "Crypto.Util._cpu_features.have_clmul": {
     "line number": [
      90
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      94
     ]
    },
    "OSError": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm._get_ghash_portable": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_gcm._build_impl": {
     "line number": [
      82
     ]
    },
    "Crypto.Cipher._mode_gcm._ghash_api_template": {
     "line number": [
      80
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm._ghash_api_template": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_gcm._ghash_clmul": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_gcm._ghash_portable": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_gcm.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.enum": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "type": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_gcm.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.is_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_gcm.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_ocb.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.OcbMode": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "object": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ocb._raw_ocb_lib": {
     "line number": [
      175,
      186
     ]
    },
    "Crypto.Cipher._mode_ocb.struct": {
     "line number": [
      151,
      161
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      185
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      174
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      177
     ]
    },
    "Crypto.Util._raw_api.is_buffer": {
     "line number": [
      128
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      166
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      166
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      124
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      155,
      156
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      165
     ]
    },
    "TypeError": {
     "line number": [
      129,
      172
     ]
    },
    "ValueError": {
     "line number": [
      118,
      127,
      133,
      180
     ]
    },
    "dict": {
     "line number": [
      149
     ]
    },
    "len": {
     "line number": [
      126,
      152,
      177
     ]
    },
    "range": {
     "line number": [
      126
     ]
    },
    "str": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode._compute_mac_tag": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ocb._raw_ocb_lib": {
     "line number": [
      370
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      372
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      369
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      377
     ]
    },
    "ValueError": {
     "line number": [
      375
     ]
    },
    "len": {
     "line number": [
      366,
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode._transcrypt": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      288
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      271,
      296
     ]
    },
    "len": {
     "line number": [
      261,
      269,
      270,
      270,
      274,
      281,
      287
     ]
    },
    "min": {
     "line number": [
      270
     ]
    },
    "trans_func": {
     "line number": [
      262,
      282,
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode._transcrypt_aligned": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      251
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      247
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      255
     ]
    },
    "ValueError": {
     "line number": [
      253
     ]
    },
    "trans_func": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode._update": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ocb._raw_ocb_lib": {
     "line number": [
      193
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      195
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      194
     ]
    },
    "ValueError": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.decrypt": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ocb._raw_ocb_lib": {
     "line number": [
      357
     ]
    },
    "TypeError": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.decrypt_and_verify": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.digest": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      392
     ]
    },
    "len": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.encrypt": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ocb._raw_ocb_lib": {
     "line number": [
      327
     ]
    },
    "TypeError": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.encrypt_and_digest": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.hexdigest": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.hexverify": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.update": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      229,
      240
     ]
    },
    "TypeError": {
     "line number": [
      221
     ]
    },
    "len": {
     "line number": [
      227,
      228,
      228,
      232,
      239
     ]
    },
    "min": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.OcbMode.verify": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      437,
      438
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      436
     ]
    },
    "TypeError": {
     "line number": [
      427
     ]
    },
    "ValueError": {
     "line number": [
      441
     ]
    },
    "len": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb._create_ocb_cipher": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ocb.OcbMode": {
     "line number": [
      525
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      520
     ]
    },
    "KeyError": {
     "line number": [
      522
     ]
    },
    "TypeError": {
     "line number": [
      523
     ]
    },
    "str": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ocb._raw_ocb_lib": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ocb.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.is_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ocb.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Cipher._mode_ofb.OfbMode": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_ofb.OfbMode.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ofb.raw_ofb_lib": {
     "line number": [
      92,
      103
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      102
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      91
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      93
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      97
     ]
    },
    "len": {
     "line number": [
      94,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ofb.OfbMode.decrypt": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ofb.raw_ofb_lib": {
     "line number": [
      231
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      234
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      232,
      233
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      220
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      239
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      224
     ]
    },
    "TypeError": {
     "line number": [
      216,
      225
     ]
    },
    "ValueError": {
     "line number": [
      228,
      236
     ]
    },
    "len": {
     "line number": [
      220,
      227,
      227,
      229,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ofb.OfbMode.encrypt": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ofb.raw_ofb_lib": {
     "line number": [
      170
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      173
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      171,
      172
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      159
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      178
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      163
     ]
    },
    "TypeError": {
     "line number": [
      155,
      164
     ]
    },
    "ValueError": {
     "line number": [
      167,
      175
     ]
    },
    "len": {
     "line number": [
      159,
      166,
      166,
      168,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ofb.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_ofb._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb._create_ofb_cipher": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_ofb.OfbMode": {
     "line number": [
      282
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      268
     ]
    },
    "TypeError": {
     "line number": [
      271,
      280
     ]
    },
    "ValueError": {
     "line number": [
      276
     ]
    },
    "len": {
     "line number": [
      275
     ]
    },
    "str": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_ofb.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_ofb.raw_ofb_lib": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_openpgp": {
  "data": {},
  "type": "module"
 },
 "Crypto.Cipher._mode_openpgp.OpenPgpMode": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_openpgp.OpenPgpMode.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      76
     ]
    },
    "ValueError": {
     "line number": [
      89
     ]
    },
    "len": {
     "line number": [
      79,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_openpgp.OpenPgpMode.decrypt": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_openpgp.OpenPgpMode.encrypt": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_openpgp.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_openpgp._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_openpgp._create_openpgp_cipher": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_openpgp.OpenPgpMode": {
     "line number": [
      206
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      194
     ]
    },
    "KeyError": {
     "line number": [
      203
     ]
    },
    "TypeError": {
     "line number": [
      197,
      204
     ]
    },
    "str": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_openpgp.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv": {
  "data": {},
  "type": "module"
 },
 "Crypto.Cipher._mode_siv.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.SivMode": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Cipher._mode_siv.SivMode.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._S2V": {
     "line number": [
      117
     ]
    },
    "Crypto.Util._raw_api.is_buffer": {
     "line number": [
      104
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      110
     ]
    },
    "TypeError": {
     "line number": [
      105
     ]
    },
    "ValueError": {
     "line number": [
      101,
      108
     ]
    },
    "len": {
     "line number": [
      100,
      101,
      107,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode._create_ctr_cipher": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.decrypt": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.decrypt_and_verify": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      340
     ]
    },
    "hasattr": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.digest": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.encrypt": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.encrypt_and_digest": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      295
     ]
    },
    "hasattr": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.hexdigest": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.hexverify": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.update": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.SivMode.verify": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      253,
      254
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      251
     ]
    },
    "TypeError": {
     "line number": [
      244
     ]
    },
    "ValueError": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv._S2V": {
  "data": {
   "shadows": "Crypto.Protocol.KDF._S2V"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Cipher._mode_siv._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv._create_siv_cipher": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "Crypto.Cipher._mode_siv.SivMode": {
     "line number": [
      392
     ]
    },
    "KeyError": {
     "line number": [
      387
     ]
    },
    "TypeError": {
     "line number": [
      388
     ]
    },
    "str": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Cipher._mode_siv.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.is_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_buffer"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Cipher._mode_siv.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Cipher._modes": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "Crypto.Cipher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.Hash": {
  "data": {},
  "type": "module"
 },
 "Crypto.Hash.CMAC": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.sys": {
     "line number": [
      32
     ]
    },
    "bytes": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.CMAC.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.CMAC": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.digest_size": {
     "line number": [
      52
     ]
    },
    "object": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.CMAC.CMAC.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC._shift_bytes": {
     "line number": [
      84,
      86,
      88,
      90
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      59
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      83,
      87
     ]
    },
    "TypeError": {
     "line number": [
      74
     ]
    },
    "bytearray": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC._update": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      163
     ]
    },
    "len": {
     "line number": [
      152,
      154,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC.copy": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.CMAC": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC.digest": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      205,
      210,
      210
     ]
    },
    "ValueError": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC.hexdigest": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      224
     ]
    },
    "tuple": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC.hexverify": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      255
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC.update": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.memoryview": {
     "line number": [
      135
     ]
    },
    "TypeError": {
     "line number": [
      122
     ]
    },
    "len": {
     "line number": [
      124,
      128,
      139
     ]
    },
    "min": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.CMAC.verify": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      241,
      242
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      239
     ]
    },
    "ValueError": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC._shift_bytes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      40
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      41
     ]
    },
    "len": {
     "line number": [
      41,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.digest_size": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.Hash.CMAC.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.memoryview": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.Hash.CMAC.new": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.CMAC": {
     "line number": [
      304
     ]
    },
    "TypeError": {
     "line number": [
      291
     ]
    },
    "ValueError": {
     "line number": [
      299,
      302
     ]
    },
    "dict": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.CMAC.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.Hash.CMAC.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC": {
  "data": {},
  "type": "module"
 },
 "Crypto.Hash.HMAC.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.HMAC": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "object": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.HMAC.HMAC.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      78
     ]
    },
    "Crypto.Hash.MD5": {
     "line number": [
      57
     ]
    },
    "Crypto.Util.py3compat._memoryview": {
     "line number": [
      67
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      83,
      90
     ]
    },
    "ValueError": {
     "line number": [
      80
     ]
    },
    "isinstance": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      71,
      73,
      77,
      83,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC.copy": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.HMAC": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC.digest": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC.hexdigest": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      175
     ]
    },
    "tuple": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC.hexverify": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      191
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC.update": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.HMAC.verify": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      161,
      162
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      159
     ]
    },
    "ValueError": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "Crypto.Hash.HMAC._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.new": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.HMAC": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.HMAC.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.Hash.HMAC.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.MD2.MD2Hash": {
     "line number": [
      163,
      166
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.MD2.MD2Hash": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.MD2.MD2Hash.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Crypto.Hash.MD2._raw_md2_lib": {
     "line number": [
      77,
      82
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      81
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      76
     ]
    },
    "ValueError": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD2.MD2Hash.copy": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "Crypto.Hash.MD2.MD2Hash": {
     "line number": [
      138
     ]
    },
    "Crypto.Hash.MD2._raw_md2_lib": {
     "line number": [
      139
     ]
    },
    "ValueError": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD2.MD2Hash.digest": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Hash.MD2._raw_md2_lib": {
     "line number": [
      109
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      108
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      115
     ]
    },
    "ValueError": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD2.MD2Hash.hexdigest": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD2.MD2Hash.new": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Crypto.Hash.MD2.MD2Hash": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD2.MD2Hash.update": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Hash.MD2._raw_md2_lib": {
     "line number": [
      93
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      95
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      94
     ]
    },
    "ValueError": {
     "line number": [
      97
     ]
    },
    "len": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD2.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2._raw_md2_lib": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "Crypto.Hash.MD2.block_size": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.Hash.MD2.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.digest_size": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "Crypto.Hash.MD2.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.MD2.new": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "Crypto.Hash.MD2.MD2Hash": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.MD4.MD4Hash": {
     "line number": [
      182,
      185
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.MD4.MD4Hash": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "object": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.MD4.MD4Hash.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Crypto.Hash.MD4._raw_md4_lib": {
     "line number": [
      81,
      86
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      85
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      80
     ]
    },
    "ValueError": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4.MD4Hash.copy": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.Hash.MD4.MD4Hash": {
     "line number": [
      157
     ]
    },
    "Crypto.Hash.MD4._raw_md4_lib": {
     "line number": [
      158
     ]
    },
    "ValueError": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4.MD4Hash.digest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Hash.MD4._raw_md4_lib": {
     "line number": [
      126
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      125
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      132
     ]
    },
    "ValueError": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4.MD4Hash.hexdigest": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4.MD4Hash.new": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Crypto.Hash.MD4.MD4Hash": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4.MD4Hash.update": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Hash.MD4._raw_md4_lib": {
     "line number": [
      107
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      109
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      108
     ]
    },
    "ValueError": {
     "line number": [
      111
     ]
    },
    "len": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD4.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4._raw_md4_lib": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "Crypto.Hash.MD4.block_size": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "Crypto.Hash.MD4.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.digest_size": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "Crypto.Hash.MD4.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.MD4.new": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Crypto.Hash.MD4.MD4Hash": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.MD5.MD5Hash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.MD5.MD5Hash.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.Hash.MD5._raw_md5_lib": {
     "line number": [
      74,
      79
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      78
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5.MD5Hash.copy": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Hash.MD5.MD5Hash": {
     "line number": [
      135
     ]
    },
    "Crypto.Hash.MD5._raw_md5_lib": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5.MD5Hash.digest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Hash.MD5._raw_md5_lib": {
     "line number": [
      106
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      105
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5.MD5Hash.hexdigest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "bord": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5.MD5Hash.new": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Hash.MD5.MD5Hash": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5.MD5Hash.update": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.MD5._raw_md5_lib": {
     "line number": [
      90
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      92
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      91
     ]
    },
    "ValueError": {
     "line number": [
      94
     ]
    },
    "len": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Crypto.Hash.MD5._raw_md5_lib": {
     "line number": [
      174
     ]
    },
    "Crypto.Hash.MD5.digest_size": {
     "line number": [
      170,
      173
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      179
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      173
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      184
     ]
    },
    "ValueError": {
     "line number": [
      182
     ]
    },
    "len": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.MD5._raw_md5_lib": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Hash.MD5.block_size": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "Crypto.Hash.MD5.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5.digest_size": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "Crypto.Hash.MD5.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.MD5.new": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.Hash.MD5.MD5Hash": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.Poly1305.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Crypto.Hash.Poly1305._raw_poly1305": {
     "line number": [
      73,
      82
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      81
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      72
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      75,
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      74,
      76
     ]
    },
    "ValueError": {
     "line number": [
      66,
      68,
      80
     ]
    },
    "len": {
     "line number": [
      65,
      67,
      75,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.copy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.digest": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.Hash.Poly1305._raw_poly1305": {
     "line number": [
      119
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      121
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      118
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      125
     ]
    },
    "ValueError": {
     "line number": [
      123
     ]
    },
    "len": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.hexdigest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      136
     ]
    },
    "tuple": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.hexverify": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      172
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.update": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Hash.Poly1305._raw_poly1305": {
     "line number": [
      96
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      98
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      97
     ]
    },
    "TypeError": {
     "line number": [
      94
     ]
    },
    "ValueError": {
     "line number": [
      100
     ]
    },
    "len": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.Poly1305_MAC.verify": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      153,
      154
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      151
     ]
    },
    "ValueError": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305._raw_poly1305": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.Hash.Poly1305.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.new": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "Crypto.Hash.Poly1305.Poly1305_MAC": {
     "line number": [
      215
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      216
     ]
    },
    "TypeError": {
     "line number": [
      205,
      211
     ]
    },
    "ValueError": {
     "line number": [
      201
     ]
    },
    "hasattr": {
     "line number": [
      200
     ]
    },
    "str": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.Poly1305.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.Hash.Poly1305.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD": {
  "data": {},
  "type": "module"
 },
 "Crypto.Hash.RIPEMD.block_size": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160.block_size"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD.digest_size": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160.digest_size"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD.new": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160.new"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160.RIPEMD160Hash": {
     "line number": [
      166,
      169
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "object": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160._raw_ripemd160_lib": {
     "line number": [
      78,
      83
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      82
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      77
     ]
    },
    "ValueError": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash.copy": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160.RIPEMD160Hash": {
     "line number": [
      139
     ]
    },
    "Crypto.Hash.RIPEMD160._raw_ripemd160_lib": {
     "line number": [
      140
     ]
    },
    "ValueError": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash.digest": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160._raw_ripemd160_lib": {
     "line number": [
      110
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      109
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      116
     ]
    },
    "ValueError": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash.hexdigest": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash.new": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160.RIPEMD160Hash": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.RIPEMD160.RIPEMD160Hash.update": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160._raw_ripemd160_lib": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      96
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      95
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    },
    "len": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.RIPEMD160.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160._raw_ripemd160_lib": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "Crypto.Hash.RIPEMD160.block_size": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "Crypto.Hash.RIPEMD160.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.digest_size": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.Hash.RIPEMD160.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.RIPEMD160.new": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160.RIPEMD160Hash": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA": {
  "data": {},
  "type": "module"
 },
 "Crypto.Hash.SHA.__doc__": {
  "data": {
   "shadows": "Crypto.Hash.SHA1.__doc__"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA.block_size": {
  "data": {
   "shadows": "Crypto.Hash.SHA1.block_size"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA.digest_size": {
  "data": {
   "shadows": "Crypto.Hash.SHA1.digest_size"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA.new": {
  "data": {
   "shadows": "Crypto.Hash.SHA1.new"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.SHA1Hash": {
     "line number": [
      162,
      165
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA1.SHA1Hash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA1.SHA1Hash.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1._raw_sha1_lib": {
     "line number": [
      74,
      79
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      78
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1.SHA1Hash.copy": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.SHA1Hash": {
     "line number": [
      135
     ]
    },
    "Crypto.Hash.SHA1._raw_sha1_lib": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1.SHA1Hash.digest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1._raw_sha1_lib": {
     "line number": [
      106
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      105
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1.SHA1Hash.hexdigest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "bord": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1.SHA1Hash.new": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.SHA1Hash": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1.SHA1Hash.update": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1._raw_sha1_lib": {
     "line number": [
      90
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      92
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      91
     ]
    },
    "ValueError": {
     "line number": [
      94
     ]
    },
    "len": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1._raw_sha1_lib": {
     "line number": [
      175
     ]
    },
    "Crypto.Hash.SHA1.digest_size": {
     "line number": [
      171,
      174
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      180
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      174
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      185
     ]
    },
    "ValueError": {
     "line number": [
      183
     ]
    },
    "len": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA1._raw_sha1_lib": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA1.block_size": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA1.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1.digest_size": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA1.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA1.new": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.SHA1Hash": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA224.SHA224Hash": {
     "line number": [
      163,
      166
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA224.SHA224Hash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA224.SHA224Hash.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224._raw_sha224_lib": {
     "line number": [
      74,
      79
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      78
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224.SHA224Hash.copy": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224.SHA224Hash": {
     "line number": [
      136
     ]
    },
    "Crypto.Hash.SHA224._raw_sha224_lib": {
     "line number": [
      137
     ]
    },
    "ValueError": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224.SHA224Hash.digest": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224._raw_sha224_lib": {
     "line number": [
      106
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      108
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      105
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      113
     ]
    },
    "ValueError": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224.SHA224Hash.hexdigest": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224.SHA224Hash.new": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224.SHA224Hash": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224.SHA224Hash.update": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224._raw_sha224_lib": {
     "line number": [
      90
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      92
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      91
     ]
    },
    "ValueError": {
     "line number": [
      94
     ]
    },
    "len": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224._raw_sha224_lib": {
     "line number": [
      175
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      180,
      181
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      174
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      186
     ]
    },
    "ValueError": {
     "line number": [
      184
     ]
    },
    "len": {
     "line number": [
      174,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA224._raw_sha224_lib": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA224.block_size": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA224.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.digest_size": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA224.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA224.new": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224.SHA224Hash": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.SHA256Hash": {
     "line number": [
      162,
      165
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA256.SHA256Hash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA256.SHA256Hash.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256._raw_sha256_lib": {
     "line number": [
      73,
      78
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      72
     ]
    },
    "ValueError": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256.SHA256Hash.copy": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.SHA256Hash": {
     "line number": [
      135
     ]
    },
    "Crypto.Hash.SHA256._raw_sha256_lib": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256.SHA256Hash.digest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256._raw_sha256_lib": {
     "line number": [
      105
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      107
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256.SHA256Hash.hexdigest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256.SHA256Hash.new": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.SHA256Hash": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256.SHA256Hash.update": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256._raw_sha256_lib": {
     "line number": [
      89
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      91
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      90
     ]
    },
    "ValueError": {
     "line number": [
      93
     ]
    },
    "len": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256._raw_sha256_lib": {
     "line number": [
      174
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      179,
      180
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      173
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      185
     ]
    },
    "ValueError": {
     "line number": [
      183
     ]
    },
    "len": {
     "line number": [
      173,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA256._raw_sha256_lib": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA256.block_size": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA256.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.digest_size": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA256.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA256.new": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.SHA256Hash": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA384.SHA384Hash": {
     "line number": [
      163,
      166
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA384.SHA384Hash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "object": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA384.SHA384Hash.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384._raw_sha384_lib": {
     "line number": [
      73,
      78
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      72
     ]
    },
    "ValueError": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384.SHA384Hash.copy": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384.SHA384Hash": {
     "line number": [
      135
     ]
    },
    "Crypto.Hash.SHA384._raw_sha384_lib": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384.SHA384Hash.digest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384._raw_sha384_lib": {
     "line number": [
      105
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      107
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      112
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384.SHA384Hash.hexdigest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384.SHA384Hash.new": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384.SHA384Hash": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384.SHA384Hash.update": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384._raw_sha384_lib": {
     "line number": [
      89
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      91
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      90
     ]
    },
    "ValueError": {
     "line number": [
      93
     ]
    },
    "len": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384._raw_sha384_lib": {
     "line number": [
      175
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      180,
      181
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      174
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      186
     ]
    },
    "ValueError": {
     "line number": [
      184
     ]
    },
    "len": {
     "line number": [
      174,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA384._raw_sha384_lib": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA384.block_size": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA384.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.digest_size": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA384.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA384.new": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384.SHA384Hash": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_224": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_224.SHA3_224_Hash": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA3_224.SHA3_224_Hash": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA3_224.SHA3_224_Hash.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_destroy": {
     "line number": [
      61
     ]
    },
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_init": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      60
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      53
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      55
     ]
    },
    "ValueError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_224.SHA3_224_Hash.digest": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_digest": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      96
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      93
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      101
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_224.SHA3_224_Hash.hexdigest": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_224.SHA3_224_Hash.new": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "type": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_224.SHA3_224_Hash.update": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_absorb": {
     "line number": [
      75
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      76
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_224.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224._raw_keccak_lib": {
  "data": {
   "shadows": "Crypto.Hash.keccak._raw_keccak_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.digest_size": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA3_224.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_224.new": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_224.SHA3_224_Hash": {
     "line number": [
      144
     ]
    },
    "TypeError": {
     "line number": [
      142
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    },
    "len": {
     "line number": [
      136
     ]
    },
    "str": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_256": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_256.SHA3_256_Hash": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA3_256.SHA3_256_Hash": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA3_256.SHA3_256_Hash.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_destroy": {
     "line number": [
      61
     ]
    },
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_init": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      60
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      53
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      55
     ]
    },
    "ValueError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_256.SHA3_256_Hash.digest": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_digest": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      96
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      93
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      101
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_256.SHA3_256_Hash.hexdigest": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_256.SHA3_256_Hash.new": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "type": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_256.SHA3_256_Hash.update": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_absorb": {
     "line number": [
      75
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      76
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_256.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256._raw_keccak_lib": {
  "data": {
   "shadows": "Crypto.Hash.keccak._raw_keccak_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.digest_size": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA3_256.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_256.new": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_256.SHA3_256_Hash": {
     "line number": [
      144
     ]
    },
    "TypeError": {
     "line number": [
      142
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    },
    "len": {
     "line number": [
      136
     ]
    },
    "str": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_384": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_384.SHA3_384_Hash": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA3_384.SHA3_384_Hash": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA3_384.SHA3_384_Hash.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_destroy": {
     "line number": [
      61
     ]
    },
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_init": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      60
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      53
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      55
     ]
    },
    "ValueError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_384.SHA3_384_Hash.digest": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_digest": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      96
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      93
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      101
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_384.SHA3_384_Hash.hexdigest": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_384.SHA3_384_Hash.new": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "type": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_384.SHA3_384_Hash.update": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_absorb": {
     "line number": [
      75
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      76
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_384.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384._raw_keccak_lib": {
  "data": {
   "shadows": "Crypto.Hash.keccak._raw_keccak_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.digest_size": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA3_384.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_384.new": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_384.SHA3_384_Hash": {
     "line number": [
      144
     ]
    },
    "TypeError": {
     "line number": [
      142
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    },
    "len": {
     "line number": [
      136
     ]
    },
    "str": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_512": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_512.SHA3_512_Hash": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA3_512.SHA3_512_Hash": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "object": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA3_512.SHA3_512_Hash.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_destroy": {
     "line number": [
      61
     ]
    },
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_init": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      60
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      53
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      55
     ]
    },
    "ValueError": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_512.SHA3_512_Hash.digest": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_digest": {
     "line number": [
      95
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      97
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      94
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      102
     ]
    },
    "ValueError": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_512.SHA3_512_Hash.hexdigest": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_512.SHA3_512_Hash.new": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "type": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_512.SHA3_512_Hash.update": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_absorb": {
     "line number": [
      75
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      76
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      79
     ]
    },
    "len": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA3_512.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512._raw_keccak_lib": {
  "data": {
   "shadows": "Crypto.Hash.keccak._raw_keccak_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.digest_size": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA3_512.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA3_512.new": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_512.SHA3_512_Hash": {
     "line number": [
      145
     ]
    },
    "TypeError": {
     "line number": [
      143
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    },
    "len": {
     "line number": [
      137
     ]
    },
    "str": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.SHA512.SHA512Hash": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "object": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHA512.SHA512Hash.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512._raw_sha512_lib": {
     "line number": [
      85,
      91
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      90
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      84
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      86
     ]
    },
    "ValueError": {
     "line number": [
      82,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512.SHA512Hash.copy": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.SHA512Hash": {
     "line number": [
      148
     ]
    },
    "Crypto.Hash.SHA512._raw_sha512_lib": {
     "line number": [
      149
     ]
    },
    "ValueError": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512.SHA512Hash.digest": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512._raw_sha512_lib": {
     "line number": [
      118
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      120
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      117
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      125
     ]
    },
    "ValueError": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512.SHA512Hash.hexdigest": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512.SHA512Hash.new": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.SHA512Hash": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512.SHA512Hash.update": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512._raw_sha512_lib": {
     "line number": [
      102
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      103
     ]
    },
    "ValueError": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512._pbkdf2_hmac_assist": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512._raw_sha512_lib": {
     "line number": [
      193
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      198,
      199
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      192
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      204
     ]
    },
    "ValueError": {
     "line number": [
      202
     ]
    },
    "len": {
     "line number": [
      192,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHA512._raw_sha512_lib": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA512.block_size": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA512.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.digest_size": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "Crypto.Hash.SHA512.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHA512.new": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.SHA512Hash": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE128": {
  "data": {},
  "type": "module"
 },
 "Crypto.Hash.SHAKE128.SHAKE128_XOF": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "object": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHAKE128.SHAKE128_XOF.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_destroy": {
     "line number": [
      62
     ]
    },
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_init": {
     "line number": [
      55
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      61
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      56
     ]
    },
    "ValueError": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE128.SHAKE128_XOF.new": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "type": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE128.SHAKE128_XOF.read": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_squeeze": {
     "line number": [
      102
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      101
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      109
     ]
    },
    "ValueError": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE128.SHAKE128_XOF.update": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_absorb": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      79
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      78
     ]
    },
    "TypeError": {
     "line number": [
      75
     ]
    },
    "ValueError": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE128.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128._raw_keccak_lib": {
  "data": {
   "shadows": "Crypto.Hash.keccak._raw_keccak_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE128.new": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.SHAKE128_XOF": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE256": {
  "data": {},
  "type": "module"
 },
 "Crypto.Hash.SHAKE256.SHAKE256_XOF": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "object": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.SHAKE256.SHAKE256_XOF.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_destroy": {
     "line number": [
      62
     ]
    },
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_init": {
     "line number": [
      55
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      61
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      56
     ]
    },
    "ValueError": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE256.SHAKE256_XOF.new": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "type": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE256.SHAKE256_XOF.read": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_squeeze": {
     "line number": [
      102
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      104
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      101
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      109
     ]
    },
    "ValueError": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE256.SHAKE256_XOF.update": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib.keccak_absorb": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      79
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      78
     ]
    },
    "TypeError": {
     "line number": [
      75
     ]
    },
    "ValueError": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.SHAKE256.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256._raw_keccak_lib": {
  "data": {
   "shadows": "Crypto.Hash.keccak._raw_keccak_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.SHAKE256.new": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE256.SHAKE256_XOF": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "Crypto.Hash.keccak": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Hash.keccak.Keccak_Hash": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "object": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Hash.keccak.Keccak_Hash.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib": {
     "line number": [
      71,
      77
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      76
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      70
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      72
     ]
    },
    "ValueError": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.keccak.Keccak_Hash.digest": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib": {
     "line number": [
      108
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      110
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      107
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      114
     ]
    },
    "ValueError": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.keccak.Keccak_Hash.hexdigest": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.keccak.Keccak_Hash.new": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.keccak.Keccak_Hash.update": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "Crypto.Hash.keccak._raw_keccak_lib": {
     "line number": [
      91
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      93
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      92
     ]
    },
    "TypeError": {
     "line number": [
      89
     ]
    },
    "ValueError": {
     "line number": [
      95
     ]
    },
    "len": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Hash.keccak.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak._raw_keccak_lib": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "Crypto.Hash.keccak.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Hash.keccak.new": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.Keccak_Hash": {
     "line number": [
      173
     ]
    },
    "TypeError": {
     "line number": [
      159,
      161,
      171
     ]
    },
    "ValueError": {
     "line number": [
      164,
      167
     ]
    },
    "str": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO": {
  "data": {},
  "type": "module"
 },
 "Crypto.IO.PEM": {
  "data": {},
  "type": "module"
 },
 "Crypto.IO.PEM.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.PBKDF1": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.PBKDF1"
  },
  "type": "import"
 },
 "Crypto.IO.PEM._EVP_BytesToKey": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Hash.MD5.new": {
     "line number": [
      101
     ]
    },
    "range": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO.PEM.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.IO.PEM.a2b_base64": {
  "data": {
   "shadows": "binascii.a2b_base64"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.b2a_base64": {
  "data": {
   "shadows": "binascii.b2a_base64"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.decode": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      161,
      164,
      167
     ]
    },
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      170
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      161,
      164,
      167,
      170
     ]
    },
    "Crypto.Cipher.DES.MODE_CBC": {
     "line number": [
      155
     ]
    },
    "Crypto.Cipher.DES.new": {
     "line number": [
      155
     ]
    },
    "Crypto.Cipher.DES3.MODE_CBC": {
     "line number": [
      158
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      158
     ]
    },
    "Crypto.IO.PEM._EVP_BytesToKey": {
     "line number": [
      154,
      157,
      160,
      163,
      166,
      169
     ]
    },
    "Crypto.IO.PEM.re": {
     "line number": [
      126,
      133
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      183
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      149
     ]
    },
    "ValueError": {
     "line number": [
      129,
      136,
      144,
      147,
      173
     ]
    },
    "binascii.a2b_base64": {
     "line number": [
      179
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      149
     ]
    },
    "len": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO.PEM.encode": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_CBC": {
     "line number": [
      80
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      80
     ]
    },
    "Crypto.Hash.MD5": {
     "line number": [
      78,
      79
     ]
    },
    "Crypto.Protocol.KDF.PBKDF1": {
     "line number": [
      78,
      79
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      72
     ]
    },
    "Crypto.Util.Padding.pad": {
     "line number": [
      84
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      82,
      90
     ]
    },
    "ValueError": {
     "line number": [
      86
     ]
    },
    "binascii.b2a_base64": {
     "line number": [
      90
     ]
    },
    "binascii.hexlify": {
     "line number": [
      82
     ]
    },
    "len": {
     "line number": [
      91
     ]
    },
    "randfunc": {
     "line number": [
      77
     ]
    },
    "range": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO.PEM.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.pad": {
  "data": {
   "shadows": "Crypto.Util.Padding.pad"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.IO.PEM.unpad": {
  "data": {
   "shadows": "Crypto.Util.Padding.unpad"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8": {
  "data": {},
  "type": "module"
 },
 "Crypto.IO.PKCS8.DerNull": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerNull"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.DerObjectId": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObjectId"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.DerOctetString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerOctetString"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.PBES1": {
  "data": {
   "shadows": "Crypto.IO._PBES.PBES1"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.PBES2": {
  "data": {
   "shadows": "Crypto.IO._PBES.PBES2"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.PbesError": {
  "data": {
   "shadows": "Crypto.IO._PBES.PbesError"
  },
  "type": "import"
 },
 "Crypto.IO.PKCS8.__all__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "Crypto.IO.PKCS8.unwrap": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES1.decrypt": {
     "line number": [
      169
     ]
    },
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      178
     ]
    },
    "Crypto.IO._PBES.PbesError": {
     "line number": [
      171,
      180
     ]
    },
    "Crypto.Util.asn1.DerNull": {
     "line number": [
      223
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      218
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      229
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      188,
      217
     ]
    },
    "ValueError": {
     "line number": [
      173,
      182,
      186,
      190,
      202
     ]
    },
    "len": {
     "line number": [
      189,
      219
     ]
    },
    "str": {
     "line number": [
      172,
      181
     ]
    },
    "tobytes": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO.PKCS8.wrap": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      140
     ]
    },
    "Crypto.Util.asn1.DerNull": {
     "line number": [
      110
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      123
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      126
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      120,
      122
     ]
    },
    "ValueError": {
     "line number": [
      134
     ]
    },
    "tobytes": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO._PBES": {
  "data": {},
  "type": "module"
 },
 "Crypto.IO._PBES.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.ARC2": {
  "data": {
   "shadows": "Crypto.Cipher.ARC2"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.DerInteger": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerInteger"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.DerObjectId": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObjectId"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.DerOctetString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerOctetString"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.PBES1": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "object": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.IO._PBES.PBES1.decrypt": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2": {
     "line number": [
      149,
      158
     ]
    },
    "Crypto.Cipher.DES": {
     "line number": [
      145,
      154
     ]
    },
    "Crypto.Hash.MD5": {
     "line number": [
      144,
      148
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      153,
      157
     ]
    },
    "Crypto.IO._PBES.PbesError": {
     "line number": [
      161
     ]
    },
    "Crypto.IO._PBES._OID_PBE_WITH_MD5_AND_DES_CBC": {
     "line number": [
      142
     ]
    },
    "Crypto.IO._PBES._OID_PBE_WITH_MD5_AND_RC2_CBC": {
     "line number": [
      146
     ]
    },
    "Crypto.IO._PBES._OID_PBE_WITH_SHA1_AND_DES_CBC": {
     "line number": [
      151
     ]
    },
    "Crypto.IO._PBES._OID_PBE_WITH_SHA1_AND_RC2_CBC": {
     "line number": [
      155
     ]
    },
    "Crypto.Protocol.KDF.PBKDF1": {
     "line number": [
      167
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      172
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      140
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      138,
      164
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      136,
      137,
      163
     ]
    },
    "staticmethod": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO._PBES.PBES2": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "object": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.IO._PBES.PBES2.decrypt": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      392,
      396,
      400
     ]
    },
    "Crypto.Cipher.DES3": {
     "line number": [
      388
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      414
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      416
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      418
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      420
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      422
     ]
    },
    "Crypto.IO._PBES.PbesError": {
     "line number": [
      335,
      380,
      403,
      406,
      424
     ]
    },
    "Crypto.IO._PBES._OID_AES128_CBC": {
     "line number": [
      390
     ]
    },
    "Crypto.IO._PBES._OID_AES192_CBC": {
     "line number": [
      394
     ]
    },
    "Crypto.IO._PBES._OID_AES256_CBC": {
     "line number": [
      398
     ]
    },
    "Crypto.IO._PBES._OID_DES_EDE3_CBC": {
     "line number": [
      386
     ]
    },
    "Crypto.IO._PBES._OID_HMAC_SHA1": {
     "line number": [
      413
     ]
    },
    "Crypto.IO._PBES._OID_HMAC_SHA224": {
     "line number": [
      415
     ]
    },
    "Crypto.IO._PBES._OID_HMAC_SHA256": {
     "line number": [
      417
     ]
    },
    "Crypto.IO._PBES._OID_HMAC_SHA384": {
     "line number": [
      419
     ]
    },
    "Crypto.IO._PBES._OID_HMAC_SHA512": {
     "line number": [
      421
     ]
    },
    "Crypto.IO._PBES._OID_PBES2": {
     "line number": [
      334
     ]
    },
    "Crypto.IO._PBES._OID_PBKDF2": {
     "line number": [
      346,
      412
     ]
    },
    "Crypto.IO._PBES._OID_SCRYPT": {
     "line number": [
      369
     ]
    },
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      426
     ]
    },
    "Crypto.Protocol.KDF.scrypt": {
     "line number": [
      429
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      435
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      333,
      341,
      367,
      384
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      331,
      349,
      372,
      409
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      329,
      330,
      337,
      340,
      348,
      366,
      371,
      383
     ]
    },
    "TypeError": {
     "line number": [
      360
     ]
    },
    "len": {
     "line number": [
      352,
      375
     ]
    },
    "staticmethod": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO._PBES.PBES2.encrypt": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      242,
      248,
      254
     ]
    },
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      243,
      249,
      255
     ]
    },
    "Crypto.Cipher.DES3": {
     "line number": [
      236
     ]
    },
    "Crypto.Cipher.DES3.MODE_CBC": {
     "line number": [
      237
     ]
    },
    "Crypto.IO._PBES._OID_AES128_CBC": {
     "line number": [
      244
     ]
    },
    "Crypto.IO._PBES._OID_AES192_CBC": {
     "line number": [
      250
     ]
    },
    "Crypto.IO._PBES._OID_AES256_CBC": {
     "line number": [
      256
     ]
    },
    "Crypto.IO._PBES._OID_DES_EDE3_CBC": {
     "line number": [
      238
     ]
    },
    "Crypto.IO._PBES._OID_PBES2": {
     "line number": [
      304
     ]
    },
    "Crypto.IO._PBES._OID_PBKDF2": {
     "line number": [
      269
     ]
    },
    "Crypto.IO._PBES._OID_SCRYPT": {
     "line number": [
      283
     ]
    },
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      267
     ]
    },
    "Crypto.Protocol.KDF.scrypt": {
     "line number": [
      280
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      232
     ]
    },
    "Crypto.Util.Padding.pad": {
     "line number": [
      294
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      272,
      286,
      287,
      288
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      269,
      283,
      296,
      304
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      271,
      285,
      297,
      310
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      268,
      270,
      282,
      284,
      295,
      301,
      303,
      305
     ]
    },
    "ValueError": {
     "line number": [
      258
     ]
    },
    "randfunc": {
     "line number": [
      261,
      262
     ]
    },
    "staticmethod": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.IO._PBES.PBKDF1": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.PBKDF1"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.PBKDF2": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.PBKDF2"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.PbesError": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.IO._PBES.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.IO._PBES._OID_AES128_CBC": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_AES192_CBC": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_AES256_CBC": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_DES_EDE3_CBC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_HMAC_SHA1": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_HMAC_SHA224": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_HMAC_SHA256": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_HMAC_SHA384": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_HMAC_SHA512": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_PBES2": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_PBE_WITH_MD5_AND_DES_CBC": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_PBE_WITH_MD5_AND_RC2_CBC": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_PBE_WITH_SHA1_AND_DES_CBC": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_PBE_WITH_SHA1_AND_RC2_CBC": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_PBKDF2": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "Crypto.IO._PBES._OID_SCRYPT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "Crypto.IO._PBES.pad": {
  "data": {
   "shadows": "Crypto.Util.Padding.pad"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.scrypt": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.scrypt"
  },
  "type": "import"
 },
 "Crypto.IO._PBES.unpad": {
  "data": {
   "shadows": "Crypto.Util.Padding.unpad"
  },
  "type": "import"
 },
 "Crypto.IO.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "Crypto.Math": {
  "data": {},
  "type": "module"
 },
 "Crypto.Math.Numbers": {
  "data": {
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      36
     ]
    },
    "Crypto.Math._IntegerCustom.implementation": {
     "line number": [
      42
     ]
    },
    "ImportError": {
     "line number": [
      36,
      40
     ]
    },
    "OSError": {
     "line number": [
      36,
      40
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Math.Numbers.Integer": {
  "data": {
   "shadows": "Crypto.Math._IntegerNative.IntegerNative"
  },
  "type": "import"
 },
 "Crypto.Math.Numbers.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "Crypto.Math.Numbers._implementation": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Math.Primality": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util.number.sieve_base": {
     "line number": [
      218
     ]
    },
    "set": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Math.Primality.COMPOSITE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "Crypto.Math.Primality.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.Math.Primality.PROBABLY_PRIME": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Math.Primality.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.Math.Primality._sieve_base": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "Crypto.Math.Primality._sieve_base_large": {
  "data": {
   "shadows": "Crypto.Util.number.sieve_base"
  },
  "type": "import"
 },
 "Crypto.Math.Primality.generate_probable_prime": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.random": {
     "line number": [
      329
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      327,
      328
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      333
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      325
     ]
    },
    "ValueError": {
     "line number": [
      317,
      320,
      322
     ]
    },
    "prime_filter": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math.Primality.generate_probable_safe_prime": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      361,
      362
     ]
    },
    "Crypto.Math.Primality.generate_probable_prime": {
     "line number": [
      363
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      367
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      359
     ]
    },
    "ValueError": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math.Primality.iter_range": {
  "data": {
   "shadows": "Crypto.Util.py3compat.iter_range"
  },
  "type": "import"
 },
 "Crypto.Math.Primality.lucas_test": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      133,
      134,
      170,
      171,
      172,
      173
     ]
    },
    "Crypto.Math.Numbers.Integer.jacobi_symbol": {
     "line number": [
      156
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      140,
      158,
      212
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      138,
      211
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      175
     ]
    },
    "alternate": {
     "line number": [
      153
     ]
    },
    "isinstance": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math.Primality.lucas_test.alternate": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "Crypto.Math.Primality.miller_rabin_test": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      65,
      66,
      74,
      75,
      81
     ]
    },
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      95
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      72,
      110,
      112
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      69,
      115
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      78
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      90,
      105
     ]
    },
    "isinstance": {
     "line number": [
      65
     ]
    },
    "pow": {
     "line number": [
      100,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math.Primality.test_probable_prime": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      246,
      247
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      255,
      272,
      273,
      274,
      275
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      251,
      276
     ]
    },
    "Crypto.Math.Primality._sieve_base": {
     "line number": [
      250,
      253
     ]
    },
    "Crypto.Math.Primality.lucas_test": {
     "line number": [
      274
     ]
    },
    "Crypto.Math.Primality.miller_rabin_test": {
     "line number": [
      271
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      244
     ]
    },
    "IndexError": {
     "line number": [
      268
     ]
    },
    "ValueError": {
     "line number": [
      254
     ]
    },
    "filter": {
     "line number": [
      266
     ]
    },
    "int": {
     "line number": [
      250
     ]
    },
    "isinstance": {
     "line number": [
      246
     ]
    },
    "list": {
     "line number": [
      266
     ]
    },
    "map": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase": {
  "data": {},
  "type": "module"
 },
 "Crypto.Math._IntegerBase.ABC": {
  "data": {
   "shadows": "Crypto.Util.py3compat.ABC"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerBase.IntegerBase": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.ABC": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__abs__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__add__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__and__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__eq__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__floordiv__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__ge__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__gt__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__iadd__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__ilshift__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__imod__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__imul__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__int__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__irshift__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__isub__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__le__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__lshift__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__lt__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__mod__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__mul__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__ne__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__nonzero__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__or__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__pow__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__repr__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__rshift__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__str__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.__sub__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase._tonelli_shanks": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      281
     ]
    },
    "ValueError": {
     "line number": [
      255,
      273,
      285,
      293
     ]
    },
    "pow": {
     "line number": [
      253,
      254,
      266,
      276,
      277,
      278,
      282,
      286,
      292
     ]
    },
    "staticmethod": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.fail_if_divisible_by": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.from_bytes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      58
     ]
    },
    "staticmethod": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.gcd": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.get_bit": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.inplace_inverse": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.inplace_pow": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.inverse": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.is_even": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.is_negative": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.is_odd": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.is_perfect_square": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.jacobi_symbol": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      228
     ]
    },
    "staticmethod": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.lcm": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.multiply_accumulate": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.random": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "Crypto.Random.new": {
     "line number": [
      327
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      343
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      338
     ]
    },
    "ValueError": {
     "line number": [
      330,
      333
     ]
    },
    "classmethod": {
     "line number": [
      297
     ]
    },
    "randfunc": {
     "line number": [
      338,
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.random_range": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "Crypto.Random.new": {
     "line number": [
      380
     ]
    },
    "ValueError": {
     "line number": [
      370,
      372,
      377
     ]
    },
    "classmethod": {
     "line number": [
      345
     ]
    },
    "cls": {
     "line number": [
      383
     ]
    },
    "cls.random": {
     "line number": [
      387
     ]
    },
    "randfunc": {
     "line number": [
      367,
      379,
      380,
      389
     ]
    },
    "str": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.set": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.size_in_bits": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.size_in_bytes": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.sqrt": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.IntegerBase.to_bytes": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.Math._IntegerBase.abc": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerBase.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerBase.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerBase.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerBase.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerBase.iter_range": {
  "data": {
   "shadows": "Crypto.Util.py3compat.iter_range"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Math._IntegerCustom.c_defs": {
     "line number": [
      53
     ]
    },
    "Crypto.Util._raw_api.backend": {
     "line number": [
      54
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Math._IntegerCustom.IntegerCustom": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "Crypto.Math._IntegerCustom.IntegerCustom.from_bytes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Crypto.Math._IntegerCustom.IntegerCustom": {
     "line number": [
      61
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      61
     ]
    },
    "staticmethod": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerCustom.IntegerCustom.inplace_pow": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Crypto.Math._IntegerCustom._raw_montgomery": {
     "line number": [
      97
     ]
    },
    "Crypto.Random.random.getrandbits": {
     "line number": [
      103
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      102
     ]
    },
    "Crypto.Util._raw_api.c_ulonglong": {
     "line number": [
      103
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      95
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      109
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      109
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      89,
      91,
      92,
      93
     ]
    },
    "ValueError": {
     "line number": [
      66,
      76,
      107
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      78
     ]
    },
    "int": {
     "line number": [
      64,
      74
     ]
    },
    "len": {
     "line number": [
      89
     ]
    },
    "max": {
     "line number": [
      89
     ]
    },
    "pow": {
     "line number": [
      70,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerCustom._raw_montgomery": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerCustom.backend": {
  "data": {
   "shadows": "Crypto.Util._raw_api.backend"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.c_defs": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerCustom.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.c_ulonglong": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_ulonglong"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.getrandbits": {
  "data": {
   "shadows": "Crypto.Random.random.getrandbits"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.implementation": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerCustom.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerCustom.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._GMP": {
     "line number": [
      141
     ]
    },
    "Crypto.Math._IntegerGMP.gmp_defs": {
     "line number": [
      98
     ]
    },
    "Crypto.Math._IntegerGMP.implementation": {
     "line number": [
      107
     ]
    },
    "Crypto.Math._IntegerGMP.lib": {
     "line number": [
      101
     ]
    },
    "Crypto.Math._IntegerGMP.sys": {
     "line number": [
      95
     ]
    },
    "Crypto.Util._raw_api.backend": {
     "line number": [
      99
     ]
    },
    "Crypto.Util._raw_api.load_lib": {
     "line number": [
      98
     ]
    },
    "ImportError": {
     "line number": [
      96,
      102
     ]
    },
    "hasattr": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      148
     ]
    },
    "Crypto.Math._IntegerGMP.new_mpz": {
     "line number": [
      147
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__abs__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      399
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__add__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      293,
      294,
      296
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      299
     ]
    },
    "NotImplemented": {
     "line number": [
      298
     ]
    },
    "NotImplementedError": {
     "line number": [
      297
     ]
    },
    "isinstance": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__and__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      492,
      493,
      494
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      495
     ]
    },
    "isinstance": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__del__": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      707
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      704
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__eq__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      263
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      265
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      263
     ]
    },
    "isinstance": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__floordiv__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      329,
      330,
      334
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      331,
      335
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      333
     ]
    },
    "isinstance": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__ge__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__gt__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__hex__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "hex": {
     "line number": [
      190
     ]
    },
    "int": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__iadd__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      433
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      424,
      429,
      434
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      426,
      431
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__ilshift__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      548
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      550
     ]
    },
    "ValueError": {
     "line number": [
      547
     ]
    },
    "int": {
     "line number": [
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__imod__": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      477,
      478
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      479,
      485
     ]
    },
    "ValueError": {
     "line number": [
      484
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      482
     ]
    },
    "isinstance": {
     "line number": [
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__imul__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      470
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      460,
      465,
      468,
      471
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      462,
      467
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__index__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "int": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      166
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      162,
      163,
      167
     ]
    },
    "Crypto.Math._IntegerGMP.new_mpz": {
     "line number": [
      153
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      161
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      163
     ]
    },
    "NotImplementedError": {
     "line number": [
      169
     ]
    },
    "ValueError": {
     "line number": [
      157,
      165
     ]
    },
    "float": {
     "line number": [
      156
     ]
    },
    "isinstance": {
     "line number": [
      156,
      166
     ]
    },
    "str": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__int__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      176,
      179
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      179
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      177
     ]
    },
    "Crypto.Util._raw_api.get_c_string": {
     "line number": [
      180
     ]
    },
    "int": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__irshift__": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      531
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      533
     ]
    },
    "ValueError": {
     "line number": [
      525
     ]
    },
    "int": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__isub__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      451
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      442,
      447,
      452
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      444,
      449
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__le__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__lshift__": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      537
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      540
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      542
     ]
    },
    "ValueError": {
     "line number": [
      539
     ]
    },
    "int": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__lt__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__mod__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      341,
      342,
      349
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      343,
      350
     ]
    },
    "ValueError": {
     "line number": [
      348
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      346
     ]
    },
    "isinstance": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__mul__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      317,
      318,
      320
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      323
     ]
    },
    "NotImplemented": {
     "line number": [
      322
     ]
    },
    "NotImplementedError": {
     "line number": [
      321
     ]
    },
    "isinstance": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__ne__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      268
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      270
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      268
     ]
    },
    "isinstance": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__nonzero__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__or__": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      501,
      502,
      503
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      504
     ]
    },
    "isinstance": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__pow__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__repr__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "str": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__rshift__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      510
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      518
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      520
     ]
    },
    "ValueError": {
     "line number": [
      512
     ]
    },
    "int": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__str__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "int": {
     "line number": [
      183
     ]
    },
    "str": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.__sub__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      305,
      306,
      308
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      311
     ]
    },
    "NotImplemented": {
     "line number": [
      310
     ]
    },
    "NotImplementedError": {
     "line number": [
      309
     ]
    },
    "isinstance": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP._apply_and_return": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      258,
      259
     ]
    },
    "func": {
     "line number": [
      260
     ]
    },
    "isinstance": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.fail_if_divisible_by": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      596
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      592,
      597
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      593
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      590
     ]
    },
    "ValueError": {
     "line number": [
      594,
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.from_bytes": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      245
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      246
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      248,
      250,
      252
     ]
    },
    "len": {
     "line number": [
      248
     ]
    },
    "staticmethod": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.gcd": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      665,
      672
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      668,
      673
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      670
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.get_bit": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      563
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      564
     ]
    },
    "ValueError": {
     "line number": [
      558,
      560
     ]
    },
    "bool": {
     "line number": [
      563
     ]
    },
    "int": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.inplace_inverse": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      639,
      640
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      642,
      649
     ]
    },
    "ValueError": {
     "line number": [
      647,
      653
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      645
     ]
    },
    "isinstance": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.inplace_pow": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      370,
      371,
      385
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      364,
      380,
      388
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      366,
      382
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      376
     ]
    },
    "ValueError": {
     "line number": [
      359,
      363,
      375,
      378,
      387
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      373
     ]
    },
    "int": {
     "line number": [
      366
     ]
    },
    "isinstance": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.inverse": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.is_even": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.is_negative": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.is_odd": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.is_perfect_square": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      585
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.jacobi_symbol": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      690,
      691,
      692,
      693
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      696
     ]
    },
    "ValueError": {
     "line number": [
      695
     ]
    },
    "isinstance": {
     "line number": [
      690,
      692
     ]
    },
    "staticmethod": {
     "line number": [
      686
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.lcm": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      680,
      681,
      682
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      683
     ]
    },
    "isinstance": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.multiply_accumulate": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      604,
      605,
      617
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      608,
      613,
      618
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      610,
      615
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      606
     ]
    },
    "isinstance": {
     "line number": [
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.set": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      626,
      627
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      628
     ]
    },
    "isinstance": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.size_in_bits": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      578
     ]
    },
    "ValueError": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.size_in_bytes": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.sqrt": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      410,
      417
     ]
    },
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      411
     ]
    },
    "ValueError": {
     "line number": [
      409,
      415
     ]
    },
    "int": {
     "line number": [
      416,
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.IntegerGMP.to_bytes": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP._gmp": {
     "line number": [
      217,
      223
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      227,
      229
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      221
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      232
     ]
    },
    "Crypto.Util._raw_api.null_pointer": {
     "line number": [
      225
     ]
    },
    "ValueError": {
     "line number": [
      215,
      219
     ]
    },
    "max": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.Structure": {
  "data": {
   "shadows": "ctypes.Structure"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP._GMP": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "object": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Math._IntegerGMP._GMP.__getattr__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      135
     ]
    },
    "Crypto.Math._IntegerGMP.lib": {
     "line number": [
      136
     ]
    },
    "getattr": {
     "line number": [
      136
     ]
    },
    "setattr": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP._MPZ": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "ctypes.Structure": {
     "line number": [
      110
     ]
    },
    "ctypes.c_int": {
     "line number": [
      111,
      112
     ]
    },
    "ctypes.c_void_p": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Math._IntegerGMP._gmp": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerGMP.backend": {
  "data": {
   "shadows": "Crypto.Util._raw_api.backend"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.byref": {
  "data": {
   "shadows": "ctypes.byref"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.c_int": {
  "data": {
   "shadows": "ctypes.c_int"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.c_ulong": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_ulong"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.c_void_p": {
  "data": {
   "shadows": "ctypes.c_void_p"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.ffi": {
  "data": {
   "shadows": "Crypto.Util._raw_api.ffi"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.get_c_string": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_c_string"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.gmp_defs": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerGMP.implementation": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerGMP.is_native_int": {
  "data": {
   "shadows": "Crypto.Util.py3compat.is_native_int"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.lib": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "Crypto.Math._IntegerGMP.load_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_lib"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.new_mpz": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.ffi.new": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerGMP.null_pointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.null_pointer"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerGMP.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerNative": {
  "data": {},
  "type": "module"
 },
 "Crypto.Math._IntegerNative.IntegerNative": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__abs__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__add__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      109
     ]
    },
    "NotImplemented": {
     "line number": [
      110
     ]
    },
    "TypeError": {
     "line number": [
      109
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    },
    "int": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__and__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "int": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__eq__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "int": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__floordiv__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "int": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__ge__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__gt__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__hex__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "hex": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__iadd__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "int": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__ilshift__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      233
     ]
    },
    "ValueError": {
     "line number": [
      234
     ]
    },
    "int": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__imod__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      194
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      192
     ]
    },
    "int": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__imul__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "int": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__index__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "int": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      44
     ]
    },
    "ValueError": {
     "line number": [
      41
     ]
    },
    "float": {
     "line number": [
      40
     ]
    },
    "isinstance": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__int__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__irshift__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      217
     ]
    },
    "int": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__isub__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "int": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__le__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__lshift__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      227
     ]
    },
    "ValueError": {
     "line number": [
      228
     ]
    },
    "int": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__lt__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "int": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__mod__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      130
     ]
    },
    "int": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__mul__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      121
     ]
    },
    "NotImplemented": {
     "line number": [
      122
     ]
    },
    "TypeError": {
     "line number": [
      121
     ]
    },
    "ValueError": {
     "line number": [
      121
     ]
    },
    "int": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__ne__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__nonzero__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__or__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "int": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__pow__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__repr__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "str": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__rshift__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      208
     ]
    },
    "int": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__str__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "int": {
     "line number": [
      52
     ]
    },
    "str": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.__sub__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      115
     ]
    },
    "NotImplemented": {
     "line number": [
      116
     ]
    },
    "TypeError": {
     "line number": [
      115
     ]
    },
    "ValueError": {
     "line number": [
      115
     ]
    },
    "int": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.fail_if_divisible_by": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      296
     ]
    },
    "int": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.from_bytes": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      75
     ]
    },
    "classmethod": {
     "line number": [
      73
     ]
    },
    "cls": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.gcd": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      330,
      330
     ]
    },
    "int": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.get_bit": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      245
     ]
    },
    "OverflowError": {
     "line number": [
      249
     ]
    },
    "ValueError": {
     "line number": [
      239,
      244,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.inplace_inverse": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      310,
      318
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      308
     ]
    },
    "int": {
     "line number": [
      306
     ]
    },
    "str": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.inplace_pow": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      136,
      141
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      143
     ]
    },
    "int": {
     "line number": [
      134,
      139
     ]
    },
    "pow": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.inverse": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.is_even": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.is_negative": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.is_odd": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.is_perfect_square": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.jacobi_symbol": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "Crypto.Math._IntegerNative.IntegerNative": {
     "line number": [
      380
     ]
    },
    "ValueError": {
     "line number": [
      348,
      351
     ]
    },
    "int": {
     "line number": [
      344,
      345
     ]
    },
    "staticmethod": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.lcm": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      340
     ]
    },
    "int": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.multiply_accumulate": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "int": {
     "line number": [
      299,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.set": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "int": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.size_in_bits": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.size_in_bytes": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.sqrt": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      161,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.IntegerNative.to_bytes": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      68
     ]
    },
    "ValueError": {
     "line number": [
      67,
      70
     ]
    },
    "len": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Math._IntegerNative.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Math._IntegerNative.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Protocol": {
  "data": {},
  "type": "module"
 },
 "Crypto.Protocol.KDF": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      41,
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Protocol.KDF.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.CMAC": {
  "data": {
   "shadows": "Crypto.Hash.CMAC"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.HKDF": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      316,
      324
     ]
    },
    "Crypto.Protocol.KDF.struct": {
     "line number": [
      324
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      332
     ]
    },
    "ValueError": {
     "line number": [
      309
     ]
    },
    "list": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.HMAC": {
  "data": {
   "shadows": "Crypto.Hash.HMAC"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.PBKDF1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      85
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      93
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      86
     ]
    },
    "TypeError": {
     "line number": [
      90
     ]
    },
    "ValueError": {
     "line number": [
      92
     ]
    },
    "len": {
     "line number": [
      91,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.PBKDF2": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      153,
      171
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      147
     ]
    },
    "Crypto.Protocol.KDF.struct": {
     "line number": [
      162,
      172
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      140,
      141
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      163
     ]
    },
    "ValueError": {
     "line number": [
      144
     ]
    },
    "functools.reduce": {
     "line number": [
      163
     ]
    },
    "hasattr": {
     "line number": [
      149
     ]
    },
    "len": {
     "line number": [
      161,
      170
     ]
    },
    "link": {
     "line number": [
      163
     ]
    },
    "prf": {
     "line number": [
      162
     ]
    },
    "range": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.PBKDF2.link": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "prf": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF._EKSBlowfish": {
  "data": {
   "shadows": "Crypto.Cipher._EKSBlowfish"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF._S2V": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "object": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Protocol.KDF._S2V.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      201
     ]
    },
    "dict": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._S2V._double": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      227
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      230
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      228
     ]
    },
    "len": {
     "line number": [
      230,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._S2V.derive": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.new": {
     "line number": [
      268
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      263,
      267
     ]
    },
    "len": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._S2V.new": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._S2V": {
     "line number": [
      224
     ]
    },
    "staticmethod": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._S2V.update": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC.new": {
     "line number": [
      248
     ]
    },
    "Crypto.Util.py3compat._copy_bytes": {
     "line number": [
      253
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      252
     ]
    },
    "TypeError": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._bcrypt_decode": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      463
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      445
     ]
    },
    "ValueError": {
     "line number": [
      453
     ]
    },
    "bin": {
     "line number": [
      447
     ]
    },
    "int": {
     "line number": [
      463
     ]
    },
    "len": {
     "line number": [
      451,
      459
     ]
    },
    "range": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._bcrypt_encode": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      422
     ]
    },
    "Crypto.Util.py3compat.bstr": {
     "line number": [
      423
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      438
     ]
    },
    "bin": {
     "line number": [
      422
     ]
    },
    "int": {
     "line number": [
      430,
      434
     ]
    },
    "len": {
     "line number": [
      426,
      434
     ]
    },
    "range": {
     "line number": [
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._bcrypt_hash": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "Crypto.Cipher._EKSBlowfish.MODE_ECB": {
     "line number": [
      478
     ]
    },
    "Crypto.Cipher._EKSBlowfish.new": {
     "line number": [
      478
     ]
    },
    "ValueError": {
     "line number": [
      473,
      476
     ]
    },
    "len": {
     "line number": [
      472
     ]
    },
    "range": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF._copy_bytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat._copy_bytes"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF._raw_salsa20_lib": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "Crypto.Protocol.KDF._raw_scrypt_lib": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "Crypto.Protocol.KDF.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.bcrypt": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_encode": {
     "line number": [
      527,
      528
     ]
    },
    "Crypto.Protocol.KDF._bcrypt_hash": {
     "line number": [
      524
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      520
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      513
     ]
    },
    "Crypto.Util.py3compat.bstr": {
     "line number": [
      526
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      511
     ]
    },
    "ValueError": {
     "line number": [
      514,
      522
     ]
    },
    "len": {
     "line number": [
      516,
      521
     ]
    },
    "str": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.bcrypt_check": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      571,
      572
     ]
    },
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      565
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      567
     ]
    },
    "Crypto.Protocol.KDF.re": {
     "line number": [
      556
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      569
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      548
     ]
    },
    "ValueError": {
     "line number": [
      551,
      554,
      559,
      563,
      574
     ]
    },
    "int": {
     "line number": [
      561
     ]
    },
    "len": {
     "line number": [
      550,
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.bit_size": {
  "data": {
   "shadows": "Crypto.Util.number.size"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.bstr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bstr"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.iter_range": {
  "data": {
   "shadows": "Crypto.Util.py3compat.iter_range"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.scrypt": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      383
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      383
     ]
    },
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      385,
      404
     ]
    },
    "Crypto.Protocol.KDF._raw_salsa20_lib": {
     "line number": [
      388
     ]
    },
    "Crypto.Protocol.KDF._raw_scrypt_lib": {
     "line number": [
      387
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      397
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      394
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      402
     ]
    },
    "Crypto.Util.number.size": {
     "line number": [
      376
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      392,
      413
     ]
    },
    "ValueError": {
     "line number": [
      377,
      379,
      381,
      401
     ]
    },
    "scryptROMix": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.KDF.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.Protocol.KDF.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.Protocol.SecretSharing": {
  "data": {},
  "type": "module"
 },
 "Crypto.Protocol.SecretSharing.Shamir": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "object": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Protocol.SecretSharing.Shamir.combine": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      257,
      258,
      265,
      269,
      270
     ]
    },
    "ValueError": {
     "line number": [
      260
     ]
    },
    "any": {
     "line number": [
      259
     ]
    },
    "len": {
     "line number": [
      253
     ]
    },
    "range": {
     "line number": [
      266,
      272
     ]
    },
    "staticmethod": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing.Shamir.split": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      205,
      206
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      205
     ]
    },
    "make_share": {
     "line number": [
      220
     ]
    },
    "range": {
     "line number": [
      205,
      220
     ]
    },
    "staticmethod": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing.Shamir.split.make_share": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      212,
      213,
      217
     ]
    },
    "len": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "object": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Protocol.SecretSharing._Element.__add__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.__eq__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      94
     ]
    },
    "Crypto.Util.py3compat.is_native_int": {
     "line number": [
      91
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "len": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.__int__": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.__mul__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      119,
      132
     ]
    },
    "bin": {
     "line number": [
      125,
      129
     ]
    },
    "int": {
     "line number": [
      125,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.__pow__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      155
     ]
    },
    "range": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.encode": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._Element.inverse": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      152
     ]
    },
    "Crypto.Protocol.SecretSharing._div_gf2": {
     "line number": [
      149
     ]
    },
    "Crypto.Protocol.SecretSharing._mult_gf2": {
     "line number": [
      150,
      151
     ]
    },
    "ValueError": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._div_gf2": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._mult_gf2": {
     "line number": [
      73
     ]
    },
    "Crypto.Util.number.size": {
     "line number": [
      66
     ]
    },
    "deg": {
     "line number": [
      69,
      70,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing._mult_gf2": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "Crypto.Protocol.SecretSharing.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Protocol.SecretSharing.is_native_int": {
  "data": {
   "shadows": "Crypto.Util.py3compat.is_native_int"
  },
  "type": "import"
 },
 "Crypto.Protocol.SecretSharing.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Protocol.SecretSharing.number": {
  "data": {
   "shadows": "Crypto.Util.number"
  },
  "type": "import"
 },
 "Crypto.Protocol.SecretSharing.rng": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.Protocol.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "Crypto.PublicKey": {
  "data": {},
  "type": "module"
 },
 "Crypto.PublicKey.DSA": {
  "data": {
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.import_key": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.PublicKey.DSA.COMPOSITE": {
  "data": {
   "shadows": "Crypto.Math.Primality.COMPOSITE"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.DerBitString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerBitString"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.DerInteger": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerInteger"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.DerObject": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObject"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.DerObjectId": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObjectId"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.DsaKey": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "object": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.PublicKey.DSA.DsaKey.__eq__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      163,
      163
     ]
    },
    "getattr": {
     "line number": [
      168,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.__getattr__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      206
     ]
    },
    "KeyError": {
     "line number": [
      205
     ]
    },
    "int": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.__getstate__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "pickle.PicklingError": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      105,
      109
     ]
    },
    "dict": {
     "line number": [
      111
     ]
    },
    "set": {
     "line number": [
      102,
      103,
      108,
      110
     ]
    },
    "str": {
     "line number": [
      106,
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.__ne__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.__repr__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      193
     ]
    },
    "hasattr": {
     "line number": [
      195
     ]
    },
    "id": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey._sign": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      121
     ]
    },
    "TypeError": {
     "line number": [
      115
     ]
    },
    "ValueError": {
     "line number": [
      117
     ]
    },
    "int": {
     "line number": [
      128
     ]
    },
    "map": {
     "line number": [
      128
     ]
    },
    "pow": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey._verify": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      135
     ]
    },
    "pow": {
     "line number": [
      138,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.blind": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.can_encrypt": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.can_sign": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.decrypt": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.domain": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "int": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.encrypt": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.export_key": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "Crypto.IO.PEM.encode": {
     "line number": [
      326
     ]
    },
    "Crypto.IO.PKCS8.wrap": {
     "line number": [
      299
     ]
    },
    "Crypto.PublicKey.DSA.binascii": {
     "line number": [
      287
     ]
    },
    "Crypto.PublicKey.DSA.struct": {
     "line number": [
      285
     ]
    },
    "Crypto.PublicKey._create_subject_public_key_info": {
     "line number": [
      319
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      271
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      298,
      320
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      291,
      313
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      268,
      330
     ]
    },
    "ValueError": {
     "line number": [
      311,
      317,
      331
     ]
    },
    "format": {
     "line number": [
      273,
      310,
      323,
      325,
      331
     ]
    },
    "func": {
     "line number": [
      282
     ]
    },
    "len": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.export_key.func": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      278
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.has_private": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.publickey": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.DsaKey": {
     "line number": [
      160
     ]
    },
    "dict": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.sign": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.size": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.unblind": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.DsaKey.verify": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.PEM": {
  "data": {
   "shadows": "Crypto.IO.PEM"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.PKCS8": {
  "data": {
   "shadows": "Crypto.IO.PKCS8"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.PROBABLY_PRIME": {
  "data": {
   "shadows": "Crypto.Math.Primality.PROBABLY_PRIME"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "Crypto.PublicKey.DSA._create_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._create_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA._expand_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._expand_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA._extract_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._extract_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA._generate_domain": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.digest_size": {
     "line number": [
      367
     ]
    },
    "Crypto.Hash.SHA256.new": {
     "line number": [
      376,
      385,
      405
     ]
    },
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      372,
      385,
      391,
      404
     ]
    },
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      376,
      387,
      405
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      374,
      397
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      374,
      397
     ]
    },
    "Crypto.PublicKey.DSA.itertools": {
     "line number": [
      403
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      404
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      386,
      388
     ]
    },
    "ValueError": {
     "line number": [
      365
     ]
    },
    "pow": {
     "line number": [
      406
     ]
    },
    "randfunc": {
     "line number": [
      375,
      397
     ]
    },
    "sum": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA._import_key_der": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA._import_openssl_private": {
     "line number": [
      587
     ]
    },
    "Crypto.PublicKey.DSA._import_pkcs8": {
     "line number": [
      590
     ]
    },
    "Crypto.PublicKey.DSA._import_subjectPublicKeyInfo": {
     "line number": [
      588
     ]
    },
    "Crypto.PublicKey.DSA._import_x509_cert": {
     "line number": [
      589
     ]
    },
    "ValueError": {
     "line number": [
      595,
      598
     ]
    },
    "decoding": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA._import_openssl_private": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      549
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      545
     ]
    },
    "ValueError": {
     "line number": [
      544,
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA._import_pkcs8": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.unwrap": {
     "line number": [
      575
     ]
    },
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      581
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      578
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      579
     ]
    },
    "ValueError": {
     "line number": [
      574,
      577
     ]
    },
    "list": {
     "line number": [
      579
     ]
    },
    "pow": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA._import_subjectPublicKeyInfo": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      563
     ]
    },
    "Crypto.PublicKey._expand_subject_public_key_info": {
     "line number": [
      554
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      560
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      561
     ]
    },
    "ValueError": {
     "line number": [
      556,
      558
     ]
    },
    "list": {
     "line number": [
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA._import_x509_cert": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA._import_subjectPublicKeyInfo": {
     "line number": [
      569
     ]
    },
    "Crypto.PublicKey._extract_subject_public_key_info": {
     "line number": [
      568
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.construct": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      511
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      517,
      518
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      517,
      518
     ]
    },
    "Crypto.PublicKey.DSA.DsaKey": {
     "line number": [
      512
     ]
    },
    "ValueError": {
     "line number": [
      530
     ]
    },
    "dict": {
     "line number": [
      511
     ]
    },
    "hasattr": {
     "line number": [
      525
     ]
    },
    "map": {
     "line number": [
      511
     ]
    },
    "pow": {
     "line number": [
      522,
      527
     ]
    },
    "zip": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.generate": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      447
     ]
    },
    "Crypto.Math.Numbers.Integer.random": {
     "line number": [
      478
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      451,
      452
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      451,
      452
     ]
    },
    "Crypto.PublicKey.DSA.DsaKey": {
     "line number": [
      483
     ]
    },
    "Crypto.PublicKey.DSA._generate_domain": {
     "line number": [
      460
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      444
     ]
    },
    "ValueError": {
     "line number": [
      458,
      466,
      471,
      475
     ]
    },
    "map": {
     "line number": [
      447
     ]
    },
    "pow": {
     "line number": [
      456,
      480
     ]
    },
    "randfunc": {
     "line number": [
      443,
      444,
      460,
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.importKey": {
  "data": {
   "lineno": 672
  },
  "type": "constant"
 },
 "Crypto.PublicKey.DSA.import_key": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "Crypto.IO.PEM.decode": {
     "line number": [
      647
     ]
    },
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      661
     ]
    },
    "Crypto.PublicKey.DSA._import_key_der": {
     "line number": [
      650,
      666
     ]
    },
    "Crypto.PublicKey.DSA.binascii": {
     "line number": [
      654
     ]
    },
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      662
     ]
    },
    "Crypto.PublicKey.DSA.struct": {
     "line number": [
      657
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      664
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      641,
      643
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      647
     ]
    },
    "ValueError": {
     "line number": [
      668
     ]
    },
    "len": {
     "line number": [
      656,
      664
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.DSA.iter_range": {
  "data": {
   "shadows": "Crypto.Util.py3compat.iter_range"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.oid": {
  "data": {
   "lineno": 679
  },
  "type": "constant"
 },
 "Crypto.PublicKey.DSA.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.test_probable_prime": {
  "data": {
   "shadows": "Crypto.Math.Primality.test_probable_prime"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DSA.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DerBitString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerBitString"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DerInteger": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerInteger"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DerNull": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerNull"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DerObjectId": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObjectId"
  },
  "type": "import"
 },
 "Crypto.PublicKey.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC": {
  "data": {
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      411,
      416,
      421
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      411,
      411,
      412,
      413,
      416,
      416,
      417,
      418,
      421,
      421,
      422,
      423,
      1173
     ]
    },
    "Crypto.PublicKey.ECC.count": {
     "line number": [
      1177,
      1179,
      1182,
      1184
     ]
    },
    "Crypto.PublicKey.ECC.d": {
     "line number": [
      1178,
      1183
     ]
    },
    "Crypto.PublicKey.ECC.init_p256": {
     "line number": [
      138,
      139
     ]
    },
    "Crypto.PublicKey.ECC.init_p384": {
     "line number": [
      184,
      185
     ]
    },
    "Crypto.PublicKey.ECC.init_p521": {
     "line number": [
      230,
      231
     ]
    },
    "Crypto.PublicKey.ECC.p256": {
     "line number": [
      413,
      414
     ]
    },
    "Crypto.PublicKey.ECC.p256_G": {
     "line number": [
      412,
      414
     ]
    },
    "Crypto.PublicKey.ECC.p256_names": {
     "line number": [
      413,
      414
     ]
    },
    "Crypto.PublicKey.ECC.p384": {
     "line number": [
      418,
      419
     ]
    },
    "Crypto.PublicKey.ECC.p384_G": {
     "line number": [
      417,
      419
     ]
    },
    "Crypto.PublicKey.ECC.p384_names": {
     "line number": [
      418,
      419
     ]
    },
    "Crypto.PublicKey.ECC.p521": {
     "line number": [
      423,
      424
     ]
    },
    "Crypto.PublicKey.ECC.p521_G": {
     "line number": [
      422,
      424
     ]
    },
    "Crypto.PublicKey.ECC.p521_names": {
     "line number": [
      423,
      424
     ]
    },
    "Crypto.PublicKey.ECC.point": {
     "line number": [
      1178
     ]
    },
    "Crypto.PublicKey.ECC.start": {
     "line number": [
      1179,
      1184
     ]
    },
    "Crypto.PublicKey.ECC.time": {
     "line number": [
      1176,
      1179,
      1181,
      1184
     ]
    },
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      58
     ]
    },
    "__name__": {
     "line number": [
      1167
     ]
    },
    "collections.namedtuple": {
     "line number": [
      92
     ]
    },
    "dict.fromkeys": {
     "line number": [
      413,
      418,
      423
     ]
    },
    "print": {
     "line number": [
      1179,
      1184
     ]
    },
    "range": {
     "line number": [
      1177,
      1182
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.PublicKey.ECC.DerBitString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerBitString"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.DerObjectId": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObjectId"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.DerOctetString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerOctetString"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.EccKey": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "object": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.PublicKey.ECC.EccKey.__eq__": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.__init__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      470
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      462,
      464
     ]
    },
    "TypeError": {
     "line number": [
      460
     ]
    },
    "ValueError": {
     "line number": [
      463,
      468,
      472
     ]
    },
    "dict": {
     "line number": [
      455
     ]
    },
    "str": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.__repr__": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "int": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_openssh": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.binascii": {
     "line number": [
      650
     ]
    },
    "Crypto.PublicKey.ECC.struct": {
     "line number": [
      649
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      640
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      648,
      648
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      650
     ]
    },
    "ValueError": {
     "line number": [
      633
     ]
    },
    "len": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_pkcs8": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.wrap": {
     "line number": [
      598
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      600
     ]
    },
    "ValueError": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_private_clear_pkcs8_in_clear_pem": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "Crypto.IO.PEM.encode": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_private_der": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      583
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      582
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      581
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      588
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_private_encrypted_pkcs8_in_clear_pem": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "Crypto.IO.PEM.encode": {
     "line number": [
      629
     ]
    },
    "ValueError": {
     "line number": [
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_private_pem": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "Crypto.IO.PEM.encode": {
     "line number": [
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_public_pem": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "Crypto.IO.PEM.encode": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._export_subjectPublicKeyInfo": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "Crypto.PublicKey._create_subject_public_key_info": {
     "line number": [
      559
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      561
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._sign": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      499
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey._verify": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.d": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      519
     ]
    },
    "property": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.export_key": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      721
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      722
     ]
    },
    "ValueError": {
     "line number": [
      715,
      724,
      737,
      743,
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.has_private": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.pointQ": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "property": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccKey.public_key": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "object": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.PublicKey.ECC.EccPoint.__add__": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__eq__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__iadd__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      371
     ]
    },
    "ValueError": {
     "line number": [
      374,
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__imul__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      391
     ]
    },
    "Crypto.Random.random.getrandbits": {
     "line number": [
      394
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      393
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      392
     ]
    },
    "Crypto.Util._raw_api.c_ulonglong": {
     "line number": [
      394
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      390
     ]
    },
    "ValueError": {
     "line number": [
      389,
      396
     ]
    },
    "len": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      262
     ]
    },
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      276,
      289
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      288
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      275
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      279
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      277,
      278
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      270,
      271
     ]
    },
    "KeyError": {
     "line number": [
      263
     ]
    },
    "ValueError": {
     "line number": [
      264,
      273,
      283,
      284
     ]
    },
    "len": {
     "line number": [
      272,
      272
     ]
    },
    "str": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__mul__": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__neg__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      307
     ]
    },
    "ValueError": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.__rmul__": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.copy": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.double": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      363
     ]
    },
    "ValueError": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.is_point_at_infinity": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.point_at_infinity": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.set": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      293,
      299
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      298
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      292
     ]
    },
    "ValueError": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.size_in_bits": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.size_in_bytes": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.x": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "property": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.xy": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      346,
      346
     ]
    },
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      339
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      341
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      339,
      340
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      346,
      346
     ]
    },
    "ValueError": {
     "line number": [
      344
     ]
    },
    "bytearray": {
     "line number": [
      337,
      338
     ]
    },
    "property": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.EccPoint.y": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "property": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.PEM": {
  "data": {
   "shadows": "Crypto.IO.PEM"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.PKCS8": {
  "data": {
   "shadows": "Crypto.IO.PKCS8"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.SmartPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.SmartPointer"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.PublicKey.ECC.VoidPointer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.VoidPointer"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC._Curve": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC._create_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._create_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC._curves": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC._ec_lib": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC._expand_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._expand_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC._extract_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._extract_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC._import_der": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      997,
      1004,
      1011,
      1018
     ]
    },
    "Crypto.PublicKey.ECC._import_pkcs8": {
     "line number": [
      1017
     ]
    },
    "Crypto.PublicKey.ECC._import_private_der": {
     "line number": [
      1010
     ]
    },
    "Crypto.PublicKey.ECC._import_subjectPublicKeyInfo": {
     "line number": [
      996
     ]
    },
    "Crypto.PublicKey.ECC._import_x509_cert": {
     "line number": [
      1003
     ]
    },
    "IndexError": {
     "line number": [
      999,
      1006,
      1013,
      1020
     ]
    },
    "TypeError": {
     "line number": [
      999,
      1006,
      1013,
      1020
     ]
    },
    "ValueError": {
     "line number": [
      999,
      1006,
      1013,
      1020,
      1023
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_openssh_private_ecc": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      1065,
      1066,
      1070
     ]
    },
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      1075
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      1067
     ]
    },
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      1054
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      1053,
      1055
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      1060
     ]
    },
    "ValueError": {
     "line number": [
      1061,
      1063
     ]
    },
    "check_padding": {
     "line number": [
      1073
     ]
    },
    "import_openssh_private_generic": {
     "line number": [
      1050
     ]
    },
    "len": {
     "line number": [
      1062
     ]
    },
    "read_bytes": {
     "line number": [
      1058,
      1069
     ]
    },
    "read_string": {
     "line number": [
      1052,
      1072
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_openssh_public": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      1035
     ]
    },
    "Crypto.PublicKey.ECC._import_public_der": {
     "line number": [
      1042
     ]
    },
    "Crypto.PublicKey.ECC.binascii": {
     "line number": [
      1027
     ]
    },
    "Crypto.PublicKey.ECC.struct": {
     "line number": [
      1031
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      1036
     ]
    },
    "ValueError": {
     "line number": [
      1040
     ]
    },
    "len": {
     "line number": [
      1030
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_pkcs8": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.unwrap": {
     "line number": [
      971
     ]
    },
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      980
     ]
    },
    "Crypto.PublicKey.ECC._import_private_der": {
     "line number": [
      984
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_private_der": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      947
     ]
    },
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      941
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      937
     ]
    },
    "Crypto.PublicKey.ECC._import_public_der": {
     "line number": [
      952
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      958
     ]
    },
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      951
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      927
     ]
    },
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      943
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      922
     ]
    },
    "ValueError": {
     "line number": [
      924,
      929,
      931,
      935,
      946
     ]
    },
    "len": {
     "line number": [
      945,
      950
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_public_der": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      854,
      855,
      860
     ]
    },
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      837
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      833
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      869
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      848
     ]
    },
    "ValueError": {
     "line number": [
      853,
      859,
      867
     ]
    },
    "len": {
     "line number": [
      852,
      858
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_subjectPublicKeyInfo": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      893
     ]
    },
    "Crypto.PublicKey.ECC._import_public_der": {
     "line number": [
      908
     ]
    },
    "Crypto.PublicKey._expand_subject_public_key_info": {
     "line number": [
      878
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      906
     ]
    },
    "ValueError": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC._import_x509_cert": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_subjectPublicKeyInfo": {
     "line number": [
      990
     ]
    },
    "Crypto.PublicKey._extract_subject_public_key_info": {
     "line number": [
      989
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.c_ulonglong": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_ulonglong"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.construct": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      822
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      813
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      804
     ]
    },
    "TypeError": {
     "line number": [
      809
     ]
    },
    "ValueError": {
     "line number": [
      820
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.count": {
  "data": {
   "lineno": 1174
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.d": {
  "data": {
   "lineno": 1171
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.generate": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      774
     ]
    },
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      778
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      769
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      770
     ]
    },
    "TypeError": {
     "line number": [
      772
     ]
    },
    "str": {
     "line number": [
      772
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.get_random_bytes": {
  "data": {
   "shadows": "Crypto.Random.get_random_bytes"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.getrandbits": {
  "data": {
   "shadows": "Crypto.Random.random.getrandbits"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.import_key": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": {
    "Crypto.IO.PEM.decode": {
     "line number": [
      1128,
      1145
     ]
    },
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      1150
     ]
    },
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      1149,
      1162
     ]
    },
    "Crypto.PublicKey.ECC._import_openssh_private_ecc": {
     "line number": [
      1129
     ]
    },
    "Crypto.PublicKey.ECC._import_openssh_public": {
     "line number": [
      1158
     ]
    },
    "Crypto.PublicKey.ECC.re": {
     "line number": [
      1141,
      1143
     ]
    },
    "Crypto.PublicKey.ECC.sys": {
     "line number": [
      1138
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      1161
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      1121,
      1123
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      1127,
      1134
     ]
    },
    "ValueError": {
     "line number": [
      1152,
      1153,
      1164
     ]
    },
    "len": {
     "line number": [
      1161
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.init_p256": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      123,
      124,
      125,
      126,
      127
     ]
    },
    "Crypto.PublicKey.ECC._Curve": {
     "line number": [
      123
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      135
     ]
    },
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      112,
      122
     ]
    },
    "Crypto.PublicKey.ECC.p256_names": {
     "line number": [
      135
     ]
    },
    "Crypto.Random.random.getrandbits": {
     "line number": [
      117
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      122
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      111
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      116
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      113,
      114,
      115
     ]
    },
    "Crypto.Util._raw_api.c_ulonglong": {
     "line number": [
      117
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      107,
      108,
      109
     ]
    },
    "ImportError": {
     "line number": [
      120
     ]
    },
    "dict.fromkeys": {
     "line number": [
      135
     ]
    },
    "len": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.init_p384": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      169,
      170,
      171,
      172,
      173
     ]
    },
    "Crypto.PublicKey.ECC._Curve": {
     "line number": [
      169
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      181
     ]
    },
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      158,
      168
     ]
    },
    "Crypto.PublicKey.ECC.p384_names": {
     "line number": [
      181
     ]
    },
    "Crypto.Random.random.getrandbits": {
     "line number": [
      163
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      168
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      157
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      162
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      159,
      160,
      161
     ]
    },
    "Crypto.Util._raw_api.c_ulonglong": {
     "line number": [
      163
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      153,
      154,
      155
     ]
    },
    "ImportError": {
     "line number": [
      166
     ]
    },
    "dict.fromkeys": {
     "line number": [
      181
     ]
    },
    "len": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.init_p521": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      215,
      216,
      217,
      218,
      219
     ]
    },
    "Crypto.PublicKey.ECC._Curve": {
     "line number": [
      215
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      227
     ]
    },
    "Crypto.PublicKey.ECC._ec_lib": {
     "line number": [
      204,
      214
     ]
    },
    "Crypto.PublicKey.ECC.p521_names": {
     "line number": [
      227
     ]
    },
    "Crypto.Random.random.getrandbits": {
     "line number": [
      209
     ]
    },
    "Crypto.Util._raw_api.SmartPointer": {
     "line number": [
      214
     ]
    },
    "Crypto.Util._raw_api.VoidPointer": {
     "line number": [
      203
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      208
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      205,
      206,
      207
     ]
    },
    "Crypto.Util._raw_api.c_ulonglong": {
     "line number": [
      209
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      199,
      200,
      201
     ]
    },
    "ImportError": {
     "line number": [
      212
     ]
    },
    "dict.fromkeys": {
     "line number": [
      227
     ]
    },
    "len": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.ECC.is_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.is_string"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.p256": {
  "data": {
   "lineno": 412
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p256_G": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p256_names": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p384": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p384_G": {
  "data": {
   "lineno": 416
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p384_names": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p521": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p521_G": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.p521_names": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.point": {
  "data": {
   "lineno": 1173
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.pointX": {
  "data": {
   "lineno": 1183
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.start": {
  "data": {
   "lineno": 1181
  },
  "type": "constant"
 },
 "Crypto.PublicKey.ECC.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.PublicKey.ECC.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA": {
  "data": {
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.PublicKey.RSA.COMPOSITE": {
  "data": {
   "shadows": "Crypto.Math.Primality.COMPOSITE"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.PEM": {
  "data": {
   "shadows": "Crypto.IO.PEM"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.PKCS8": {
  "data": {
   "shadows": "Crypto.IO.PKCS8"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.RsaKey": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "object": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.PublicKey.RSA.RsaKey.__eq__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.__getstate__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "pickle.PicklingError": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      98
     ]
    },
    "set": {
     "line number": [
      94,
      95,
      96
     ]
    },
    "setattr": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.__ne__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.__repr__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "int": {
     "line number": [
      212,
      212,
      213,
      213,
      216,
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.__str__": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "id": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey._decrypt": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      161
     ]
    },
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      159
     ]
    },
    "TypeError": {
     "line number": [
      154
     ]
    },
    "ValueError": {
     "line number": [
      152,
      171
     ]
    },
    "pow": {
     "line number": [
      161,
      163,
      164,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey._encrypt": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      148
     ]
    },
    "ValueError": {
     "line number": [
      147
     ]
    },
    "int": {
     "line number": [
      148
     ]
    },
    "pow": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.blind": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.can_encrypt": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.can_sign": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.d": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      116
     ]
    },
    "int": {
     "line number": [
      117
     ]
    },
    "property": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.decrypt": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.e": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "int": {
     "line number": [
      111
     ]
    },
    "property": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.encrypt": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.export_key": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "Crypto.IO.PEM.encode": {
     "line number": [
      360
     ]
    },
    "Crypto.IO.PKCS8.wrap": {
     "line number": [
      340,
      345
     ]
    },
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      329
     ]
    },
    "Crypto.PublicKey.RSA.binascii": {
     "line number": [
      316
     ]
    },
    "Crypto.PublicKey.RSA.struct": {
     "line number": [
      315
     ]
    },
    "Crypto.PublicKey._create_subject_public_key_info": {
     "line number": [
      350
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      306
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      321,
      351
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      310,
      312
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      303,
      361
     ]
    },
    "ValueError": {
     "line number": [
      334,
      363
     ]
    },
    "format": {
     "line number": [
      308,
      333,
      338,
      355,
      357,
      363
     ]
    },
    "len": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.has_private": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.n": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "int": {
     "line number": [
      107
     ]
    },
    "property": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.p": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      122
     ]
    },
    "int": {
     "line number": [
      123
     ]
    },
    "property": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.publickey": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.RsaKey": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.q": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      128
     ]
    },
    "int": {
     "line number": [
      129
     ]
    },
    "property": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.sign": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.size": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.size_in_bits": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.size_in_bytes": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.u": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      134
     ]
    },
    "int": {
     "line number": [
      135
     ]
    },
    "property": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.unblind": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.RsaKey.verify": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "Crypto.PublicKey.RSA._create_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._create_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA._expand_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._expand_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA._extract_subject_public_key_info": {
  "data": {
   "shadows": "Crypto.PublicKey._extract_subject_public_key_info"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA._import_keyDER": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA._import_pkcs1_private": {
     "line number": [
      670
     ]
    },
    "Crypto.PublicKey.RSA._import_pkcs1_public": {
     "line number": [
      671
     ]
    },
    "Crypto.PublicKey.RSA._import_pkcs8": {
     "line number": [
      674
     ]
    },
    "Crypto.PublicKey.RSA._import_subjectPublicKeyInfo": {
     "line number": [
      672
     ]
    },
    "Crypto.PublicKey.RSA._import_x509_cert": {
     "line number": [
      673
     ]
    },
    "ValueError": {
     "line number": [
      679,
      682
     ]
    },
    "decoding": {
     "line number": [
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA._import_openssh_private_rsa": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      705
     ]
    },
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      706
     ]
    },
    "ValueError": {
     "line number": [
      693
     ]
    },
    "check_padding": {
     "line number": [
      703
     ]
    },
    "import_openssh_private_generic": {
     "line number": [
      690
     ]
    },
    "read_bytes": {
     "line number": [
      695,
      696,
      697,
      698,
      699,
      700
     ]
    },
    "read_string": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA._import_pkcs1_private": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      632
     ]
    },
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      632
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      629
     ]
    },
    "ValueError": {
     "line number": [
      631
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA._import_pkcs1_public": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      641
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA._import_pkcs8": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.unwrap": {
     "line number": [
      661
     ]
    },
    "Crypto.PublicKey.RSA._import_keyDER": {
     "line number": [
      664
     ]
    },
    "ValueError": {
     "line number": [
      663
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA._import_subjectPublicKeyInfo": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA._import_pkcs1_public": {
     "line number": [
      649
     ]
    },
    "Crypto.PublicKey._expand_subject_public_key_info": {
     "line number": [
      646
     ]
    },
    "ValueError": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA._import_x509_cert": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA._import_subjectPublicKeyInfo": {
     "line number": [
      655
     ]
    },
    "Crypto.PublicKey._extract_subject_public_key_info": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.construct": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      517,
      544,
      546,
      554,
      580,
      591
     ]
    },
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      596,
      598
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      596,
      598
     ]
    },
    "Crypto.PublicKey.RSA.RsaKey": {
     "line number": [
      522,
      572
     ]
    },
    "InputComps": {
     "line number": [
      515
     ]
    },
    "ValueError": {
     "line number": [
      561,
      579,
      581,
      585,
      590,
      592,
      595,
      597,
      599,
      604,
      608,
      610
     ]
    },
    "hasattr": {
     "line number": [
      521,
      525,
      566,
      605
     ]
    },
    "int": {
     "line number": [
      603
     ]
    },
    "pow": {
     "line number": [
      549,
      551
     ]
    },
    "setattr": {
     "line number": [
      517
     ]
    },
    "zip": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.construct.InputComps": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "object": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.PublicKey.RSA.generate": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      428,
      429,
      438,
      440,
      449
     ]
    },
    "Crypto.Math.Primality.generate_probable_prime": {
     "line number": [
      445,
      456
     ]
    },
    "Crypto.PublicKey.RSA.RsaKey": {
     "line number": [
      469
     ]
    },
    "Crypto.Random.get_random_bytes": {
     "line number": [
      426
     ]
    },
    "ValueError": {
     "line number": [
      421,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.generate.filter_p": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.generate.filter_q": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.generate_probable_prime": {
  "data": {
   "shadows": "Crypto.Math.Primality.generate_probable_prime"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.importKey": {
  "data": {
   "lineno": 789
  },
  "type": "constant"
 },
 "Crypto.PublicKey.RSA.import_key": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": {
    "Crypto.IO.PEM.decode": {
     "line number": [
      758,
      764
     ]
    },
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      777,
      778
     ]
    },
    "Crypto.PublicKey.RSA._import_keyDER": {
     "line number": [
      767,
      783
     ]
    },
    "Crypto.PublicKey.RSA._import_openssh_private_rsa": {
     "line number": [
      759
     ]
    },
    "Crypto.PublicKey.RSA.binascii": {
     "line number": [
      771
     ]
    },
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      779
     ]
    },
    "Crypto.PublicKey.RSA.struct": {
     "line number": [
      774
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      781
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      752,
      754
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      757,
      764
     ]
    },
    "ValueError": {
     "line number": [
      785
     ]
    },
    "len": {
     "line number": [
      773,
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey.RSA.oid": {
  "data": {
   "lineno": 796
  },
  "type": "constant"
 },
 "Crypto.PublicKey.RSA.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.test_probable_prime": {
  "data": {
   "shadows": "Crypto.Math.Primality.test_probable_prime"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.PublicKey.RSA.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.PublicKey._create_subject_public_key_info": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      72
     ]
    },
    "Crypto.Util.asn1.DerNull": {
     "line number": [
      66
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      70
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._expand_subject_public_key_info": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      49
     ]
    },
    "Crypto.Util.asn1.DerNull": {
     "line number": [
      55
     ]
    },
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      48
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      46,
      47
     ]
    },
    "len": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._extract_subject_public_key_info": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      90
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      80,
      81
     ]
    },
    "TypeError": {
     "line number": [
      89
     ]
    },
    "ValueError": {
     "line number": [
      92
     ]
    },
    "range": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._openssh": {
  "data": {},
  "type": "module"
 },
 "Crypto.PublicKey._openssh.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh._bcrypt_hash": {
  "data": {
   "shadows": "Crypto.Protocol.KDF._bcrypt_hash"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh.check_padding": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      61
     ]
    },
    "ValueError": {
     "line number": [
      62
     ]
    },
    "enumerate": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._openssh.import_openssh_private_generic": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      124
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      123
     ]
    },
    "Crypto.Hash.SHA512.new": {
     "line number": [
      106,
      111,
      116
     ]
    },
    "Crypto.Protocol.KDF._bcrypt_hash": {
     "line number": [
      112,
      116
     ]
    },
    "Crypto.PublicKey._openssh.read_bytes": {
     "line number": [
      77,
      84,
      98
     ]
    },
    "Crypto.PublicKey._openssh.read_int4": {
     "line number": [
      78,
      99,
      129,
      130
     ]
    },
    "Crypto.PublicKey._openssh.read_string": {
     "line number": [
      75,
      76,
      83,
      133
     ]
    },
    "Crypto.PublicKey._openssh.struct": {
     "line number": [
      111,
      113,
      113,
      117,
      117
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      121,
      121
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      118
     ]
    },
    "ValueError": {
     "line number": [
      72,
      81,
      86,
      89,
      96,
      102,
      104,
      132
     ]
    },
    "bytearray": {
     "line number": [
      114
     ]
    },
    "len": {
     "line number": [
      88,
      101
     ]
    },
    "range": {
     "line number": [
      110,
      115
     ]
    },
    "zip": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._openssh.read_bytes": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "Crypto.PublicKey._openssh.read_int4": {
     "line number": [
      48
     ]
    },
    "ValueError": {
     "line number": [
      50
     ]
    },
    "len": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._openssh.read_int4": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.PublicKey._openssh.struct": {
     "line number": [
      43
     ]
    },
    "ValueError": {
     "line number": [
      42
     ]
    },
    "len": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._openssh.read_string": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.PublicKey._openssh.read_bytes": {
     "line number": [
      55
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.PublicKey._openssh.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.PublicKey._openssh.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.Random": {
  "data": {
   "symbols_in_volume": {
    "os.urandom": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Random._UrandomRNG": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "object": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Random._UrandomRNG.close": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "Crypto.Random._UrandomRNG.flush": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "Crypto.Random._UrandomRNG.read": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "os.urandom": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Random._UrandomRNG.reinit": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "Crypto.Random.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "Crypto.Random.atfork": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "Crypto.Random.get_random_bytes": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "Crypto.Random.new": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Crypto.Random._UrandomRNG": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Random.urandom": {
  "data": {
   "shadows": "os.urandom"
  },
  "type": "import"
 },
 "Crypto.SelfTest": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.get_tests": {
     "line number": [
      94
     ]
    },
    "Crypto.SelfTest.unittest": {
     "line number": [
      94,
      95
     ]
    },
    "__name__": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.BytesIO": {
  "data": {
   "shadows": "Crypto.Util.py3compat.BytesIO"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.get_tests": {
     "line number": [
      57
     ]
    },
    "Crypto.SelfTest.Cipher.unittest": {
     "line number": [
      57,
      58
     ]
    },
    "__name__": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Cipher.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.common": {
  "data": {},
  "type": "module"
 },
 "Crypto.SelfTest.Cipher.common.ByteArrayTest": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.ByteArrayTest.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common._extract": {
     "line number": [
      237,
      238,
      239,
      240,
      241,
      242,
      243,
      247,
      254,
      256,
      262
     ]
    },
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      232
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      238,
      239,
      240,
      245,
      258,
      264
     ]
    },
    "getattr": {
     "line number": [
      252
     ]
    },
    "str": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.ByteArrayTest._new": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "binascii.a2b_hex": {
     "line number": [
      270,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.ByteArrayTest.runTest": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      286
     ]
    },
    "binascii.a2b_hex": {
     "line number": [
      282,
      283,
      286,
      305
     ]
    },
    "binascii.b2a_hex": {
     "line number": [
      296,
      297,
      303
     ]
    },
    "bytearray": {
     "line number": [
      286,
      296,
      297,
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherSelfTest": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.CipherSelfTest.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common._extract": {
     "line number": [
      54,
      55,
      56,
      57,
      58,
      59,
      60,
      64,
      71,
      73,
      80
     ]
    },
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      49
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      55,
      56,
      57,
      62,
      75,
      82
     ]
    },
    "getattr": {
     "line number": [
      69
     ]
    },
    "str": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherSelfTest._new": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "binascii.a2b_hex": {
     "line number": [
      91,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherSelfTest.isMode": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      104
     ]
    },
    "hasattr": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherSelfTest.runTest": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      111
     ]
    },
    "binascii.a2b_hex": {
     "line number": [
      107,
      108,
      111,
      143
     ]
    },
    "binascii.b2a_hex": {
     "line number": [
      129,
      130,
      141
     ]
    },
    "range": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherSelfTest.shortDescription": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherStreamingSelfTest": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.CipherSelfTest": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.CipherStreamingSelfTest.runTest": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      164,
      173
     ]
    },
    "binascii.a2b_hex": {
     "line number": [
      154,
      155
     ]
    },
    "binascii.b2a_hex": {
     "line number": [
      164,
      173
     ]
    },
    "len": {
     "line number": [
      162,
      170
     ]
    },
    "range": {
     "line number": [
      162,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.CipherStreamingSelfTest.shortDescription": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.IVLengthTest": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.IVLengthTest.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      203
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.IVLengthTest._dummy_counter": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.IVLengthTest.runTest": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      212
     ]
    },
    "TypeError": {
     "line number": [
      211
     ]
    },
    "binascii.a2b_hex": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.IVLengthTest.shortDescription": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.MemoryviewTest": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.MemoryviewTest.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common._extract": {
     "line number": [
      317,
      318,
      319,
      320,
      321,
      322,
      323,
      327,
      334,
      336,
      342
     ]
    },
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      312
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      318,
      319,
      320,
      325,
      338,
      344
     ]
    },
    "getattr": {
     "line number": [
      332
     ]
    },
    "str": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.MemoryviewTest._new": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "binascii.a2b_hex": {
     "line number": [
      350,
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.MemoryviewTest.runTest": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      366
     ]
    },
    "binascii.a2b_hex": {
     "line number": [
      362,
      363,
      366,
      385
     ]
    },
    "binascii.b2a_hex": {
     "line number": [
      376,
      377,
      383
     ]
    },
    "memoryview": {
     "line number": [
      366,
      376,
      377,
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.NoDefaultECBTest": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.NoDefaultECBTest.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      220
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.NoDefaultECBTest.runTest": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      225
     ]
    },
    "binascii.a2b_hex": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.RoundtripTest": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common.RoundtripTest.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "Crypto.Random.get_random_bytes": {
     "line number": [
      182
     ]
    },
    "Crypto.SelfTest.Cipher.common.unittest": {
     "line number": [
      180
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      183,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.RoundtripTest.runTest": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "binascii.a2b_hex": {
     "line number": [
      194,
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.RoundtripTest.shortDescription": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common._NoDefault": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.common._extract": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.common._NoDefault": {
     "line number": [
      34,
      39
     ]
    },
    "KeyError": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.a2b_hex": {
  "data": {
   "shadows": "binascii.a2b_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.b2a_hex": {
  "data": {
   "shadows": "binascii.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.make_block_tests": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      410
     ]
    },
    "Crypto.SelfTest.Cipher.common.ByteArrayTest": {
     "line number": [
      440
     ]
    },
    "Crypto.SelfTest.Cipher.common.CipherSelfTest": {
     "line number": [
      445
     ]
    },
    "Crypto.SelfTest.Cipher.common.IVLengthTest": {
     "line number": [
      438
     ]
    },
    "Crypto.SelfTest.Cipher.common.NoDefaultECBTest": {
     "line number": [
      439
     ]
    },
    "Crypto.SelfTest.Cipher.common.RoundtripTest": {
     "line number": [
      437
     ]
    },
    "Crypto.SelfTest.Cipher.common._extract": {
     "line number": [
      417,
      418,
      419,
      420,
      421
     ]
    },
    "dict": {
     "line number": [
      388
     ]
    },
    "len": {
     "line number": [
      391,
      402,
      404,
      406,
      410
     ]
    },
    "range": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.make_stream_tests": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      465
     ]
    },
    "Crypto.SelfTest.Cipher.common.ByteArrayTest": {
     "line number": [
      487
     ]
    },
    "Crypto.SelfTest.Cipher.common.CipherSelfTest": {
     "line number": [
      496
     ]
    },
    "Crypto.SelfTest.Cipher.common.CipherStreamingSelfTest": {
     "line number": [
      497
     ]
    },
    "Crypto.SelfTest.Cipher.common.MemoryviewTest": {
     "line number": [
      492
     ]
    },
    "Crypto.SelfTest.Cipher.common._extract": {
     "line number": [
      469,
      470,
      471,
      472
     ]
    },
    "Crypto.SelfTest.Cipher.common.sys": {
     "line number": [
      491
     ]
    },
    "len": {
     "line number": [
      452,
      457,
      459,
      461,
      465
     ]
    },
    "range": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.common.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.common.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.get_tests": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.get_tests": {
     "line number": [
      31
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC2.get_tests": {
     "line number": [
      32
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC4.get_tests": {
     "line number": [
      33
     ]
    },
    "Crypto.SelfTest.Cipher.test_Blowfish.get_tests": {
     "line number": [
      34
     ]
    },
    "Crypto.SelfTest.Cipher.test_CAST.get_tests": {
     "line number": [
      35
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.get_tests": {
     "line number": [
      44
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.get_tests": {
     "line number": [
      49
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.get_tests": {
     "line number": [
      45
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.get_tests": {
     "line number": [
      48
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.get_tests": {
     "line number": [
      39
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tests": {
     "line number": [
      40
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES.get_tests": {
     "line number": [
      37
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES3.get_tests": {
     "line number": [
      36
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.get_tests": {
     "line number": [
      50
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.get_tests": {
     "line number": [
      51
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.get_tests": {
     "line number": [
      43
     ]
    },
    "Crypto.SelfTest.Cipher.test_OFB.get_tests": {
     "line number": [
      47
     ]
    },
    "Crypto.SelfTest.Cipher.test_OpenPGP.get_tests": {
     "line number": [
      46
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.get_tests": {
     "line number": [
      52
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.get_tests": {
     "line number": [
      38
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_15.get_tests": {
     "line number": [
      41
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.get_tests": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.suite": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_AES": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestIncompleteBlocks": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.unittest": {
     "line number": [
      1270
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestIncompleteBlocks.__init__": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.unittest": {
     "line number": [
      1273
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestIncompleteBlocks.runTest": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_ECB": {
     "line number": [
      1279
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      1279
     ]
    },
    "ValueError": {
     "line number": [
      1282,
      1283,
      1284,
      1285
     ]
    },
    "range": {
     "line number": [
      1281
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestMultipleBlocks": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.unittest": {
     "line number": [
      1243
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestMultipleBlocks.__init__": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.unittest": {
     "line number": [
      1246
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestMultipleBlocks.runTest": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_ECB": {
     "line number": [
      1262
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      1262
     ]
    },
    "Crypto.Hash.SHA256.new": {
     "line number": [
      1263,
      1267
     ]
    },
    "range": {
     "line number": [
      1265
     ]
    },
    "tobytes": {
     "line number": [
      1265
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestOutput": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.unittest": {
     "line number": [
      1291
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestOutput.__init__": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_AES.unittest": {
     "line number": [
      1294
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES.TestOutput.runTest": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_ECB": {
     "line number": [
      1300
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      1300
     ]
    },
    "Crypto.SelfTest.Cipher.test_AES.sys": {
     "line number": [
      1315
     ]
    },
    "TypeError": {
     "line number": [
      1323,
      1324
     ]
    },
    "ValueError": {
     "line number": [
      1327,
      1328
     ]
    },
    "bytearray": {
     "line number": [
      1305,
      1316,
      1326
     ]
    },
    "memoryview": {
     "line number": [
      1316
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES._cpu_features": {
  "data": {
   "shadows": "Crypto.Util._cpu_features"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.get_tests": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      1335,
      1340
     ]
    },
    "Crypto.SelfTest.Cipher.test_AES.TestIncompleteBlocks": {
     "line number": [
      1337,
      1342
     ]
    },
    "Crypto.SelfTest.Cipher.test_AES.TestMultipleBlocks": {
     "line number": [
      1336,
      1341
     ]
    },
    "Crypto.SelfTest.Cipher.test_AES.TestOutput": {
     "line number": [
      1343
     ]
    },
    "Crypto.SelfTest.Cipher.test_AES.test_data": {
     "line number": [
      1335,
      1340
     ]
    },
    "Crypto.Util._cpu_features.have_aes_ni": {
     "line number": [
      1338
     ]
    },
    "make_block_tests": {
     "line number": [
      1335,
      1340
     ]
    },
    "print": {
     "line number": [
      1345
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_AES.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.suite": {
  "data": {
   "lineno": 1350
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_AES.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_AES.test_data": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_AES.test_data_8_lanes": {
  "data": {
   "lineno": 1238
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_AES.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC2": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_ARC2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.ARC2": {
  "data": {
   "shadows": "Crypto.Cipher.ARC2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.BufferOverflowTest": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ARC2.unittest": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.BufferOverflowTest.runTest": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2.MODE_ECB": {
     "line number": [
      102
     ]
    },
    "Crypto.Cipher.ARC2.new": {
     "line number": [
      102
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      101
     ]
    },
    "ValueError": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.KeyLength": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ARC2.unittest": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.KeyLength.runTest": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2.MODE_ECB": {
     "line number": [
      107,
      108,
      109,
      111,
      113
     ]
    },
    "Crypto.Cipher.ARC2.new": {
     "line number": [
      107,
      108,
      109,
      111,
      113
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      108,
      109,
      111,
      113
     ]
    },
    "ValueError": {
     "line number": [
      108,
      109,
      111,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.TestOutput": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ARC2.unittest": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.TestOutput.runTest": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2.MODE_ECB": {
     "line number": [
      122
     ]
    },
    "Crypto.Cipher.ARC2.new": {
     "line number": [
      122
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC2.sys": {
     "line number": [
      137
     ]
    },
    "TypeError": {
     "line number": [
      145,
      146
     ]
    },
    "ValueError": {
     "line number": [
      149,
      150
     ]
    },
    "bytearray": {
     "line number": [
      127,
      138,
      148
     ]
    },
    "memoryview": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.get_tests": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC2": {
     "line number": [
      157
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC2.BufferOverflowTest": {
     "line number": [
      158
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC2.KeyLength": {
     "line number": [
      159
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC2.TestOutput": {
     "line number": [
      160
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC2.test_data": {
     "line number": [
      157
     ]
    },
    "make_block_tests": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.suite": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.test_data": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_ARC2.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC4": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_ARC4"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.ARC4": {
  "data": {
   "shadows": "Crypto.Cipher.ARC4"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.Drop_Tests": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "b": {
     "line number": [
      427,
      428
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.Drop_Tests.setUp": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4.new": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.Drop_Tests.test_drop256_decrypt": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4.new": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.Drop_Tests.test_drop256_encrypt": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4.new": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.KeyLength": {
  "data": {
   "lineno": 446
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.KeyLength.runTest": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4.new": {
     "line number": [
      449,
      450
     ]
    },
    "ValueError": {
     "line number": [
      449,
      450
     ]
    },
    "bchr": {
     "line number": [
      449,
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.RFC6229_Tests": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.RFC6229_Tests.test_keystream": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4.new": {
     "line number": [
      415
     ]
    },
    "b": {
     "line number": [
      414,
      418,
      421
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      414,
      421
     ]
    },
    "len": {
     "line number": [
      424
     ]
    },
    "range": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.get_tests": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "Crypto.Cipher.ARC4": {
     "line number": [
      455
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC4.Drop_Tests": {
     "line number": [
      457
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC4.KeyLength": {
     "line number": [
      458
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC4.RFC6229_Tests": {
     "line number": [
      456
     ]
    },
    "Crypto.SelfTest.Cipher.test_ARC4.test_data": {
     "line number": [
      455
     ]
    },
    "list_test_cases": {
     "line number": [
      456,
      457
     ]
    },
    "make_stream_tests": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.suite": {
  "data": {
   "lineno": 463
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.test_data": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ARC4.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_Blowfish"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.Blowfish": {
  "data": {
   "shadows": "Crypto.Cipher.Blowfish"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.KeyLength": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Blowfish.unittest": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.KeyLength.runTest": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "Crypto.Cipher.Blowfish.MODE_ECB": {
     "line number": [
      110,
      112
     ]
    },
    "Crypto.Cipher.Blowfish.new": {
     "line number": [
      109,
      111
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      109,
      111
     ]
    },
    "ValueError": {
     "line number": [
      109,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.TestOutput": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Blowfish.unittest": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.TestOutput.runTest": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Crypto.Cipher.Blowfish.MODE_ECB": {
     "line number": [
      120
     ]
    },
    "Crypto.Cipher.Blowfish.new": {
     "line number": [
      120
     ]
    },
    "Crypto.SelfTest.Cipher.test_Blowfish.sys": {
     "line number": [
      135
     ]
    },
    "TypeError": {
     "line number": [
      143,
      144
     ]
    },
    "ValueError": {
     "line number": [
      147,
      148
     ]
    },
    "bytearray": {
     "line number": [
      125,
      136,
      146
     ]
    },
    "memoryview": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.get_tests": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "Crypto.Cipher.Blowfish": {
     "line number": [
      153
     ]
    },
    "Crypto.SelfTest.Cipher.test_Blowfish.KeyLength": {
     "line number": [
      154
     ]
    },
    "Crypto.SelfTest.Cipher.test_Blowfish.TestOutput": {
     "line number": [
      155
     ]
    },
    "Crypto.SelfTest.Cipher.test_Blowfish.test_data": {
     "line number": [
      153
     ]
    },
    "make_block_tests": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.suite": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.test_data": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_Blowfish.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CAST": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CAST"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CAST.CAST": {
  "data": {
   "shadows": "Crypto.Cipher.CAST"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CAST.KeyLength": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CAST.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CAST.KeyLength.runTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.Cipher.CAST.MODE_ECB": {
     "line number": [
      53,
      54
     ]
    },
    "Crypto.Cipher.CAST.new": {
     "line number": [
      53,
      54
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      53,
      54
     ]
    },
    "ValueError": {
     "line number": [
      53,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CAST.TestOutput": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CAST.unittest": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CAST.TestOutput.runTest": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Crypto.Cipher.CAST.MODE_ECB": {
     "line number": [
      62
     ]
    },
    "Crypto.Cipher.CAST.new": {
     "line number": [
      62
     ]
    },
    "Crypto.SelfTest.Cipher.test_CAST.sys": {
     "line number": [
      77
     ]
    },
    "TypeError": {
     "line number": [
      85,
      86
     ]
    },
    "ValueError": {
     "line number": [
      89,
      90
     ]
    },
    "bytearray": {
     "line number": [
      67,
      78,
      88
     ]
    },
    "memoryview": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CAST.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CAST.get_tests": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "Crypto.Cipher.CAST": {
     "line number": [
      96
     ]
    },
    "Crypto.SelfTest.Cipher.test_CAST.KeyLength": {
     "line number": [
      97
     ]
    },
    "Crypto.SelfTest.Cipher.test_CAST.TestOutput": {
     "line number": [
      98
     ]
    },
    "Crypto.SelfTest.Cipher.test_CAST.test_data": {
     "line number": [
      96
     ]
    },
    "make_block_tests": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CAST.suite": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CAST.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CAST.test_data": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CAST.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CBC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CBC.get_tag_random": {
     "line number": [
      45,
      46,
      47,
      48,
      49
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.sys": {
     "line number": [
      307
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_IV_iv_attributes": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      134
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.get_tag_random": {
     "line number": [
      132
     ]
    },
    "getattr": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_block_size_128": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      107
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_block_size_64": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.block_size": {
     "line number": [
      111
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_bytearray": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      177,
      180,
      192,
      195
     ]
    },
    "bytearray": {
     "line number": [
      171,
      174,
      175,
      189,
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_data_must_be_bytes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      163,
      166
     ]
    },
    "TypeError": {
     "line number": [
      164,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      154,
      158
     ]
    },
    "TypeError": {
     "line number": [
      156,
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_iv": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      71,
      73,
      79,
      82,
      85
     ]
    },
    "len": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_iv_must_be_bytes": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      89
     ]
    },
    "TypeError": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_iv_with_matching_length": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      98,
      100,
      102
     ]
    },
    "ValueError": {
     "line number": [
      98,
      100,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_loopback_128": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      52,
      56
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.get_tag_random": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_loopback_64": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.new": {
     "line number": [
      61,
      65
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.get_tag_random": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_memoryview": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      210,
      213,
      225,
      228
     ]
    },
    "bytearray": {
     "line number": [
      204,
      207,
      208,
      222,
      223
     ]
    },
    "memoryview": {
     "line number": [
      204,
      207,
      208,
      222,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      149
     ]
    },
    "getattr": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_only_one_iv": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      94
     ]
    },
    "TypeError": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_output_param": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      238,
      242,
      247
     ]
    },
    "bytearray": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_output_param_memoryview": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      275,
      279,
      283
     ]
    },
    "bytearray": {
     "line number": [
      278
     ]
    },
    "memoryview": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_output_param_neg": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      290,
      293,
      296,
      300,
      302
     ]
    },
    "TypeError": {
     "line number": [
      294,
      297
     ]
    },
    "ValueError": {
     "line number": [
      301,
      303
     ]
    },
    "bytearray": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_output_param_same_buffer": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      256,
      260,
      266
     ]
    },
    "bytearray": {
     "line number": [
      259,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_unaligned_data_128": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      114,
      118
     ]
    },
    "ValueError": {
     "line number": [
      116,
      120
     ]
    },
    "range": {
     "line number": [
      115,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_unaligned_data_64": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.new": {
     "line number": [
      123,
      127
     ]
    },
    "ValueError": {
     "line number": [
      125,
      129
     ]
    },
    "range": {
     "line number": [
      124,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests.test_unknown_parameters": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      140,
      142,
      145
     ]
    },
    "TypeError": {
     "line number": [
      140,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.CbcTests": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      313
     ]
    },
    "Crypto.Cipher.DES3.MODE_CBC": {
     "line number": [
      314
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CBC.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CBC.unittest": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors._do_kat_aes_test": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      336
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      320
     ]
    },
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      330
     ]
    },
    "int": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors._do_mct_aes_test": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.new": {
     "line number": [
      361
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      346
     ]
    },
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      356
     ]
    },
    "int": {
     "line number": [
      349
     ]
    },
    "range": {
     "line number": [
      365,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors._do_tdes_test": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "Crypto.Cipher.DES.new": {
     "line number": [
      395
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      401
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      379
     ]
    },
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      389
     ]
    },
    "hasattr": {
     "line number": [
      394
     ]
    },
    "int": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.NistCbcVectors": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      412
     ]
    },
    "Crypto.Cipher.DES.MODE_CBC": {
     "line number": [
      413
     ]
    },
    "Crypto.Cipher.DES3.MODE_CBC": {
     "line number": [
      414
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CBC.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.SP800TestVectors": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CBC.unittest": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CBC.SP800TestVectors.test_aes_128": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      493,
      495
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      493,
      495
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      488,
      489,
      490,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.SP800TestVectors.test_aes_192": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      515,
      517
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      515,
      517
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      510,
      511,
      512,
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.SP800TestVectors.test_aes_256": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CBC": {
     "line number": [
      537,
      539
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      537,
      539
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      532,
      533,
      534,
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.get_tag_random": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      41
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.get_tests": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CBC.CbcTests": {
     "line number": [
      545
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.NistCbcVectors": {
     "line number": [
      547
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.SP800TestVectors": {
     "line number": [
      548
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      545,
      547,
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.is_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.is_string"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.new_func": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CBC.nist_aes_kat_mmt_files": {
  "data": {
   "lineno": 418
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CBC.nist_aes_mct_files": {
  "data": {
   "lineno": 437
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CBC.nist_tdes_files": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CBC.suite": {
  "data": {
   "lineno": 553
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CBC.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CBC.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CCM"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.get_tag_random": {
     "line number": [
      446,
      447,
      448
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.unittest": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_invalid_decrypt_or_update_after_verify": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      610,
      615,
      621
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      610,
      615,
      621
     ]
    },
    "TypeError": {
     "line number": [
      618,
      623
     ]
    },
    "getattr": {
     "line number": [
      618,
      623
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_invalid_encrypt_or_update_after_digest": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      600,
      606
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      600,
      606
     ]
    },
    "TypeError": {
     "line number": [
      603
     ]
    },
    "getattr": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_invalid_mixing_encrypt_decrypt": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      589
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      589
     ]
    },
    "TypeError": {
     "line number": [
      595
     ]
    },
    "getattr": {
     "line number": [
      594,
      595
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_invalid_multiple_encrypt_decrypt_without_msg_len": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      576
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      576
     ]
    },
    "TypeError": {
     "line number": [
      582
     ]
    },
    "getattr": {
     "line number": [
      580
     ]
    },
    "method": {
     "line number": [
      580,
      581,
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_encrypt_and_digest_decrypt_and_verify": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      562,
      567
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      562,
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_full_path": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      495,
      504
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      495,
      504
     ]
    },
    "len": {
     "line number": [
      492,
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_init_digest": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      514
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_init_encrypt_decrypt_digest_verify": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      455,
      463
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      455,
      463
     ]
    },
    "len": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_init_update_digest_verify": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      475,
      483
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      475,
      483
     ]
    },
    "len": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_init_verify": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      519,
      522
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      519,
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_multiple_digest_or_verify": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      548,
      555
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      548,
      555
     ]
    },
    "range": {
     "line number": [
      551,
      557
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests.test_valid_multiple_encrypt_or_decrypt": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      534
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      534
     ]
    },
    "getattr": {
     "line number": [
      540
     ]
    },
    "len": {
     "line number": [
      533
     ]
    },
    "method": {
     "line number": [
      541,
      542,
      543,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.get_tag_random": {
     "line number": [
      49,
      50,
      51
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.sys": {
     "line number": [
      439
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.unittest": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_block_size": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      92
     ]
    },
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      93
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_bytearray": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      290,
      297,
      318
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      289,
      296,
      317
     ]
    },
    "bytearray": {
     "line number": [
      284,
      285,
      286,
      287,
      312,
      313,
      314,
      324,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_data_must_be_bytes": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      132,
      135
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      132,
      135
     ]
    },
    "TypeError": {
     "line number": [
      133,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      123,
      127
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      123,
      127
     ]
    },
    "TypeError": {
     "line number": [
      125,
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_hex_mac": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      168,
      172
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      168,
      172
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_invalid_mac": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      158,
      163
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      158,
      163
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      161
     ]
    },
    "ValueError": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_longer_assoc_data_than_declared": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      177,
      182
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      177,
      182
     ]
    },
    "ValueError": {
     "line number": [
      179,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_loopback_128": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      54,
      58
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      54,
      58
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.get_tag_random": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_mac_len": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      141,
      146,
      152
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      141,
      146,
      152
     ]
    },
    "ValueError": {
     "line number": [
      141
     ]
    },
    "len": {
     "line number": [
      149,
      154
     ]
    },
    "range": {
     "line number": [
      140,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_memoryview": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      337,
      344,
      365
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      336,
      343,
      364
     ]
    },
    "bytearray": {
     "line number": [
      331,
      332,
      333,
      334,
      359,
      360,
      361
     ]
    },
    "memoryview": {
     "line number": [
      331,
      332,
      333,
      334,
      359,
      360,
      361,
      371,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_message_chunks": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      245,
      256,
      270
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      245,
      256,
      270
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.get_tag_random": {
     "line number": [
      242,
      243
     ]
    },
    "break_up": {
     "line number": [
      259,
      262,
      273,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_message_chunks.break_up": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "len": {
     "line number": [
      250
     ]
    },
    "range": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_nonce": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      64,
      66,
      71,
      74
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      64,
      66,
      71,
      74
     ]
    },
    "len": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_nonce_attribute": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      96,
      100,
      101
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      96,
      100,
      101
     ]
    },
    "len": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_nonce_length": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      82,
      84,
      86,
      89
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      82,
      84,
      86,
      89
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      85,
      87,
      89
     ]
    },
    "ValueError": {
     "line number": [
      82,
      84,
      86
     ]
    },
    "range": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_nonce_must_be_bytes": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      78
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      78
     ]
    },
    "TypeError": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      118
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      118
     ]
    },
    "getattr": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_output_param": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      378,
      383,
      388,
      393,
      399
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      378,
      383,
      388,
      393,
      399
     ]
    },
    "bytearray": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_output_param_memoryview": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      407,
      411,
      415
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      407,
      411,
      415
     ]
    },
    "bytearray": {
     "line number": [
      410
     ]
    },
    "memoryview": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_output_param_neg": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      422,
      425,
      428,
      432,
      434
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      422,
      425,
      428,
      432,
      434
     ]
    },
    "TypeError": {
     "line number": [
      426,
      429
     ]
    },
    "ValueError": {
     "line number": [
      433,
      435
     ]
    },
    "bytearray": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_shorter_and_longer_plaintext_than_declared": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      216,
      221
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      216,
      221
     ]
    },
    "ValueError": {
     "line number": [
      219,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_shorter_assoc_data_than_expected": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      188,
      194,
      200,
      206,
      210
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      188,
      194,
      200,
      206,
      210
     ]
    },
    "ValueError": {
     "line number": [
      191,
      197,
      203,
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_shorter_ciphertext_than_declared": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      226,
      229,
      234
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      226,
      229,
      234
     ]
    },
    "ValueError": {
     "line number": [
      232,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.CcmTests.test_unknown_parameters": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      106,
      108,
      113
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      106,
      108,
      113
     ]
    },
    "TypeError": {
     "line number": [
      106,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectors": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.unittest": {
     "line number": [
      627
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      812
     ]
    },
    "range": {
     "line number": [
      658,
      658
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectors.runTest": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      817,
      824
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      817,
      824
     ]
    },
    "len": {
     "line number": [
      817,
      824
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.unittest": {
     "line number": [
      830
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.unittest": {
     "line number": [
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 926
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.json": {
     "line number": [
      841
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      840
     ]
    },
    "TestVector": {
     "line number": [
      850
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      856
     ]
    },
    "open": {
     "line number": [
      840
     ]
    },
    "setattr": {
     "line number": [
      856
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.setUp.TestVector": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "object": {
     "line number": [
      843
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.test_corrupt_decrypt": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      920
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      920
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      923
     ]
    },
    "ValueError": {
     "line number": [
      924
     ]
    },
    "len": {
     "line number": [
      918,
      918,
      923
     ]
    },
    "range": {
     "line number": [
      918
     ]
    },
    "str": {
     "line number": [
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      895
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      895
     ]
    },
    "ValueError": {
     "line number": [
      897,
      909
     ]
    },
    "len": {
     "line number": [
      898
     ]
    },
    "range": {
     "line number": [
      898,
      901
     ]
    },
    "str": {
     "line number": [
      892,
      898,
      901
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.test_encrypt": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CCM": {
     "line number": [
      873
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      873
     ]
    },
    "ValueError": {
     "line number": [
      875
     ]
    },
    "len": {
     "line number": [
      876
     ]
    },
    "range": {
     "line number": [
      876,
      879
     ]
    },
    "str": {
     "line number": [
      870,
      876,
      879
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.warnings": {
     "line number": [
      867
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.get_tag_random": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      44
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.get_tests": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CCM.CcmFSMTests": {
     "line number": [
      939
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.CcmTests": {
     "line number": [
      938
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.TestVectors": {
     "line number": [
      940
     ]
    },
    "Crypto.SelfTest.Cipher.test_CCM.TestVectorsWycheproof": {
     "line number": [
      941
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      938,
      939
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CCM.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.suite": {
  "data": {
   "lineno": 947
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CCM.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CCM.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors": {
     "line number": [
      242,
      249,
      267
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.file_name": {
     "line number": [
      242,
      249,
      250,
      267
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.get_tests": {
     "line number": [
      402
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.new_func": {
     "line number": [
      242,
      249,
      250,
      267
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.nist_aes_kat_mmt_files": {
     "line number": [
      237
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.nist_aes_mct_files": {
     "line number": [
      244
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.nist_tdes_files": {
     "line number": [
      262
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.unittest": {
     "line number": [
      402,
      403
     ]
    },
    "__name__": {
     "line number": [
      401
     ]
    },
    "setattr": {
     "line number": [
      242,
      249,
      267
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Cipher.test_CFB.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.BlockChainingTests": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.CfbTests": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      48
     ]
    },
    "Crypto.Cipher.DES3.MODE_CFB": {
     "line number": [
      49
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CFB.CfbTests.test_segment_size_128": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      82,
      86
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      82,
      86
     ]
    },
    "ValueError": {
     "line number": [
      86
     ]
    },
    "range": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.CfbTests.test_segment_size_64": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      96
     ]
    },
    "Crypto.Cipher.DES3.MODE_CFB": {
     "line number": [
      92
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      92,
      96
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "range": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.CfbTests.test_unaligned_data_128": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      56,
      58,
      61,
      63
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      56,
      58,
      61,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.CfbTests.test_unaligned_data_64": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_CFB": {
     "line number": [
      68,
      70,
      73,
      75
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      68,
      70,
      73,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CFB.unittest": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors._do_kat_aes_test": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      119
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      119
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      104
     ]
    },
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      114
     ]
    },
    "int": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors._do_mct_aes_test": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      146
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      146
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      130
     ]
    },
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      141
     ]
    },
    "get_input": {
     "line number": [
      165,
      171
     ]
    },
    "int": {
     "line number": [
      133
     ]
    },
    "range": {
     "line number": [
      164,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors._do_mct_aes_test.get_input": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors._do_tdes_test": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "Crypto.Cipher.DES.MODE_CFB": {
     "line number": [
      194
     ]
    },
    "Crypto.Cipher.DES.new": {
     "line number": [
      194
     ]
    },
    "Crypto.Cipher.DES3.MODE_CFB": {
     "line number": [
      201
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      201
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      178
     ]
    },
    "Crypto.Util.py3compat.is_string": {
     "line number": [
      188
     ]
    },
    "hasattr": {
     "line number": [
      193
     ]
    },
    "int": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CFB.unittest": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors.test_aes_128_cfb128": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      341,
      343
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      341,
      343
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      336,
      337,
      338,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors.test_aes_128_cfb8": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      287,
      289
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      287,
      289
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      282,
      283,
      284,
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors.test_aes_192_cfb128": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      363,
      365
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      363,
      365
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      358,
      359,
      360,
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors.test_aes_192_cfb8": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      303,
      305
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      303,
      305
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      298,
      299,
      300,
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors.test_aes_256_cfb128": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      386,
      388
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      386,
      388
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      381,
      382,
      383,
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors.test_aes_256_cfb8": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      319,
      321
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      319,
      321
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      314,
      315,
      316,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.file_name": {
  "data": {
   "lineno": 264
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CFB.get_tag_random": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      41
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.get_tests": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CFB.CfbTests": {
     "line number": [
      394
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.NistCfbVectors": {
     "line number": [
      396
     ]
    },
    "Crypto.SelfTest.Cipher.test_CFB.SP800TestVectors": {
     "line number": [
      397
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      394,
      396,
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.is_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.is_string"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.new_func": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CFB.file_name": {
     "line number": [
      265,
      266
     ]
    },
    "int": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CFB.nist_aes_kat_mmt_files": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CFB.nist_aes_mct_files": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CFB.nist_tdes_files": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CFB.suite": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CFB.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CFB.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CTR"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.Counter": {
  "data": {
   "shadows": "Crypto.Util.Counter"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
     "line number": [
      45,
      46,
      47,
      48
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.sys": {
     "line number": [
      330
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.unittest": {
     "line number": [
      43
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      49,
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_block_size_128": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      168
     ]
    },
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      169
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_block_size_64": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_CTR": {
     "line number": [
      172
     ]
    },
    "Crypto.Cipher.DES3.block_size": {
     "line number": [
      173
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_bytearray": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      247,
      252,
      261,
      266
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      247,
      252,
      261,
      266
     ]
    },
    "bytearray": {
     "line number": [
      253,
      254,
      255,
      267,
      268,
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      215,
      219
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      215,
      219
     ]
    },
    "TypeError": {
     "line number": [
      217,
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_initial_value_bytes_parameter": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      141,
      144,
      150,
      152,
      156,
      158
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      141,
      144,
      150,
      152,
      156,
      158
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
     "line number": [
      146
     ]
    },
    "ValueError": {
     "line number": [
      150,
      152,
      156,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_initial_value_parameter": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      120,
      123,
      128,
      131,
      136
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      120,
      123,
      128,
      131,
      136
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
     "line number": [
      124,
      132
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      122,
      130
     ]
    },
    "TypeError": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_invalid_counter_parameter": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      72,
      75
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      75
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      72
     ]
    },
    "TypeError": {
     "line number": [
      72,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_iv_with_matching_length": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      162,
      164
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      162,
      164
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      163,
      165
     ]
    },
    "ValueError": {
     "line number": [
      162,
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_loopback_128": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      53,
      57
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      53,
      57
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_loopback_64": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_CTR": {
     "line number": [
      62,
      66
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      62,
      66
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_nonce_attribute": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      83,
      88
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      83,
      88
     ]
    },
    "Crypto.Cipher.DES3.MODE_CTR": {
     "line number": [
      79
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      79
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      87
     ]
    },
    "hasattr": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_nonce_parameter": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      93,
      97,
      104,
      105,
      110,
      115
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      93,
      97,
      104,
      105,
      110,
      115
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
     "line number": [
      100
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      96
     ]
    },
    "TypeError": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      210
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      210
     ]
    },
    "getattr": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_output_param": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      282,
      286,
      291
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      282,
      286,
      291
     ]
    },
    "bytearray": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_output_param_memoryview": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      299,
      303,
      307
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      299,
      303,
      307
     ]
    },
    "bytearray": {
     "line number": [
      302
     ]
    },
    "memoryview": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_output_param_neg": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      314,
      317,
      320,
      324,
      326
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      314,
      317,
      320,
      324,
      326
     ]
    },
    "TypeError": {
     "line number": [
      318,
      321
     ]
    },
    "ValueError": {
     "line number": [
      325,
      327
     ]
    },
    "bytearray": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_unaligned_data_128": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      178,
      180,
      183,
      185
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      178,
      180,
      183,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_unaligned_data_64": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      190,
      192,
      195,
      197
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      190,
      192,
      195,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_unknown_parameters": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      201,
      203,
      206
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      201,
      203,
      206
     ]
    },
    "TypeError": {
     "line number": [
      201,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_very_long_data": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      274
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      274
     ]
    },
    "Crypto.Hash.SHA256.new": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.CtrTests.test_wrap_around": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      228,
      232,
      235,
      239
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      228,
      232,
      235,
      239
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      225
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      225
     ]
    },
    "OverflowError": {
     "line number": [
      230,
      233,
      237,
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.RFC3686TestVectors": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CTR.unittest": {
     "line number": [
      407
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CTR.RFC3686TestVectors.runTest": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      460
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      460
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      459
     ]
    },
    "binascii.hexlify": {
     "line number": [
      462,
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.SP800TestVectors": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CTR.unittest": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_CTR.SP800TestVectors.test_aes_128": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      356,
      358
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      356,
      358
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      348
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      349,
      352,
      353,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.SP800TestVectors.test_aes_192": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      379,
      381
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      379,
      381
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      371
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      372,
      375,
      376,
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.SP800TestVectors.test_aes_256": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CTR": {
     "line number": [
      401,
      403
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      401,
      403
     ]
    },
    "Crypto.Util.Counter.new": {
     "line number": [
      394
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      395,
      397,
      398,
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.get_tag_random": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      41
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.get_tests": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_CTR.CtrTests": {
     "line number": [
      467
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.RFC3686TestVectors": {
     "line number": [
      469
     ]
    },
    "Crypto.SelfTest.Cipher.test_CTR.SP800TestVectors": {
     "line number": [
      468
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      467,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_CTR.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.suite": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_CTR.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_CTR.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_ChaCha20"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ByteArrayTest": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ByteArrayTest.runTest": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      320,
      323,
      336
     ]
    },
    "bytearray": {
     "line number": [
      316,
      317,
      318,
      332,
      333,
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20": {
  "data": {
   "shadows": "Crypto.Cipher.ChaCha20"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_default_nonce": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      59,
      60
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      59,
      60
     ]
    },
    "len": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_eiter_encrypt_or_decrypt": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      67,
      71
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      67,
      67,
      68,
      69,
      71,
      71,
      72,
      73
     ]
    },
    "TypeError": {
     "line number": [
      69,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_new_negative": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      52
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      54,
      55,
      55,
      56,
      56
     ]
    },
    "TypeError": {
     "line number": [
      53,
      54
     ]
    },
    "ValueError": {
     "line number": [
      55,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_new_positive": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      46,
      48
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      46,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_rfc7539": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      239
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      233,
      234,
      236,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_round_trip": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      77,
      78
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      76,
      77,
      77,
      78,
      78,
      82,
      82,
      83,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_seek": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      108,
      116
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      108,
      108,
      111,
      113,
      116,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_seek_tv": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      127
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      129
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      125,
      125,
      125,
      126,
      135
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      129
     ]
    },
    "len": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test.test_streaming": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      96,
      99,
      100
     ]
    },
    "Crypto.Hash.SHA1.new": {
     "line number": [
      94
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      92,
      96,
      96,
      99,
      99,
      100,
      100
     ]
    },
    "len": {
     "line number": [
      93
     ]
    },
    "sum": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20_AGL_NIR": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20_AGL_NIR.runTest": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      444
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      444,
      444,
      445,
      446
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      444,
      444,
      445
     ]
    },
    "len": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.MemoryviewTest": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.MemoryviewTest.runTest": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      358,
      361,
      374
     ]
    },
    "bytearray": {
     "line number": [
      354,
      355,
      356,
      370,
      371,
      372
     ]
    },
    "memoryview": {
     "line number": [
      354,
      355,
      356,
      370,
      371,
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.TestOutput": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.TestOutput.runTest": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      457,
      463,
      468,
      476,
      480,
      484,
      487,
      492,
      495
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.sys": {
     "line number": [
      474
     ]
    },
    "TypeError": {
     "line number": [
      485,
      488
     ]
    },
    "ValueError": {
     "line number": [
      493,
      496
     ]
    },
    "bytearray": {
     "line number": [
      462,
      475,
      490
     ]
    },
    "memoryview": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.XChaCha20Test": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.XChaCha20Test.test_encrypt": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20.new": {
     "line number": [
      300
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      282,
      284,
      285,
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.XChaCha20Test.test_hchacha20": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20._HChaCha20": {
     "line number": [
      261
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      256,
      259,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20._HChaCha20": {
  "data": {
   "shadows": "Crypto.Cipher.ChaCha20._HChaCha20"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.get_tests": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20.ByteArrayTest": {
     "line number": [
      504
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20Test": {
     "line number": [
      501
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.ChaCha20_AGL_NIR": {
     "line number": [
      503
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.MemoryviewTest": {
     "line number": [
      508
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.TestOutput": {
     "line number": [
      510
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.XChaCha20Test": {
     "line number": [
      502
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20.sys": {
     "line number": [
      507
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      501,
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.suite": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tag_random": {
     "line number": [
      371,
      372,
      373
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_invalid_decrypt_or_update_after_verify": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      506,
      512,
      519,
      526
     ]
    },
    "TypeError": {
     "line number": [
      516,
      523,
      529
     ]
    },
    "getattr": {
     "line number": [
      516,
      523,
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_invalid_encrypt_or_update_after_digest": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      494,
      501
     ]
    },
    "TypeError": {
     "line number": [
      498
     ]
    },
    "getattr": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_invalid_mixing_encrypt_decrypt": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      484
     ]
    },
    "TypeError": {
     "line number": [
      489
     ]
    },
    "getattr": {
     "line number": [
      488,
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_encrypt_and_digest_decrypt_and_verify": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      467,
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_full_path": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      406,
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_init_digest": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_init_encrypt_decrypt_digest_verify": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      378,
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_init_update_digest_verify": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      392,
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_init_verify": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      427,
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_multiple_digest_or_verify": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      451,
      459
     ]
    },
    "range": {
     "line number": [
      455,
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests.test_valid_multiple_encrypt_or_decrypt": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      439
     ]
    },
    "getattr": {
     "line number": [
      443
     ]
    },
    "method": {
     "line number": [
      444,
      445,
      446,
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tag_random": {
     "line number": [
      50,
      51,
      52
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.sys": {
     "line number": [
      327
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_block_size": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      109
     ]
    },
    "hasattr": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_bytearray": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      238,
      244,
      266
     ]
    },
    "bytearray": {
     "line number": [
      233,
      234,
      235,
      236,
      259,
      260,
      261,
      262,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_data_must_be_bytes": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      149,
      153
     ]
    },
    "TypeError": {
     "line number": [
      151,
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      138,
      143
     ]
    },
    "TypeError": {
     "line number": [
      141,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_hex_mac": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      177,
      182
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_invalid_mac": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      165,
      171
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      169
     ]
    },
    "ValueError": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_loopback": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      55,
      60
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tag_random": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_mac_len": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      158
     ]
    },
    "len": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_memoryview": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      286,
      292,
      314
     ]
    },
    "bytearray": {
     "line number": [
      281,
      282,
      283,
      284,
      307,
      308,
      309,
      310,
      311
     ]
    },
    "memoryview": {
     "line number": [
      281,
      282,
      283,
      284,
      307,
      308,
      309,
      310,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_message_chunks": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      193,
      205,
      219
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tag_random": {
     "line number": [
      190,
      191
     ]
    },
    "break_up": {
     "line number": [
      208,
      211,
      222,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_message_chunks.break_up": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "len": {
     "line number": [
      199
     ]
    },
    "range": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_nonce": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      67,
      70,
      75,
      77,
      82,
      86
     ]
    },
    "len": {
     "line number": [
      69,
      72,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_nonce_attribute": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      114,
      119,
      120
     ]
    },
    "len": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_nonce_length": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      99,
      103
     ]
    },
    "ValueError": {
     "line number": [
      98,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_nonce_must_be_bytes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      92
     ]
    },
    "TypeError": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_null_encryption_decryption": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      132
     ]
    },
    "getattr": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests.test_unknown_parameters": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      126
     ]
    },
    "TypeError": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20_Poly1305": {
  "data": {
   "shadows": "Crypto.Cipher.ChaCha20_Poly1305"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestOutput": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestOutput.runTest": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      729,
      735,
      740,
      748,
      752,
      756,
      759,
      764,
      767
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.sys": {
     "line number": [
      746
     ]
    },
    "TypeError": {
     "line number": [
      757,
      760
     ]
    },
    "ValueError": {
     "line number": [
      765,
      768
     ]
    },
    "bytearray": {
     "line number": [
      734,
      747,
      762
     ]
    },
    "memoryview": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsRFC": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      537
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      606
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsRFC.runTest": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      611,
      618
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      627
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.load_tests": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.json": {
     "line number": [
      634
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      633
     ]
    },
    "TestVector": {
     "line number": [
      643
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      649
     ]
    },
    "open": {
     "line number": [
      633
     ]
    },
    "setattr": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.load_tests.TestVector": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "object": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 714
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 657
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.test_corrupt_decrypt": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      709
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      711
     ]
    },
    "ValueError": {
     "line number": [
      712
     ]
    },
    "len": {
     "line number": [
      707,
      707,
      711
     ]
    },
    "str": {
     "line number": [
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      690
     ]
    },
    "ValueError": {
     "line number": [
      691,
      698
     ]
    },
    "len": {
     "line number": [
      692
     ]
    },
    "str": {
     "line number": [
      692
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.test_encrypt": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      674
     ]
    },
    "ValueError": {
     "line number": [
      675
     ]
    },
    "len": {
     "line number": [
      676
     ]
    },
    "str": {
     "line number": [
      676
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.warnings": {
     "line number": [
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.XChaCha20Poly1305Tests": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.XChaCha20Poly1305Tests.test_encrypt": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20_Poly1305.new": {
     "line number": [
      357,
      364
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      342,
      344,
      345,
      346,
      353,
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.compact": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tag_random": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      45
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tests": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305FSMTests": {
     "line number": [
      777
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.ChaCha20Poly1305Tests": {
     "line number": [
      775
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestOutput": {
     "line number": [
      780
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsRFC": {
     "line number": [
      778
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.TestVectorsWycheproof": {
     "line number": [
      779
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.XChaCha20Poly1305Tests": {
     "line number": [
      776
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      775,
      776,
      777
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.suite": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.get_tests": {
     "line number": [
      786
     ]
    },
    "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_ChaCha20_Poly1305.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES.RonRivestTest": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_DES.unittest": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_DES.RonRivestTest.runTest": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "Crypto.Cipher.DES.MODE_ECB": {
     "line number": [
      317
     ]
    },
    "Crypto.Cipher.DES.new": {
     "line number": [
      317
     ]
    },
    "binascii.b2a_hex": {
     "line number": [
      323,
      324
     ]
    },
    "range": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES.SP800_17_B1_KEY": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES.SP800_17_B2_PT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES.TestOutput": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_DES.unittest": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_DES.TestOutput.runTest": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "Crypto.Cipher.DES.MODE_ECB": {
     "line number": [
      332
     ]
    },
    "Crypto.Cipher.DES.new": {
     "line number": [
      332
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES.sys": {
     "line number": [
      347
     ]
    },
    "TypeError": {
     "line number": [
      355,
      356
     ]
    },
    "ValueError": {
     "line number": [
      359,
      360
     ]
    },
    "bytearray": {
     "line number": [
      337,
      348,
      358
     ]
    },
    "memoryview": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES.b2a_hex": {
  "data": {
   "shadows": "binascii.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES.get_tests": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "Crypto.Cipher.DES": {
     "line number": [
      365
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES.RonRivestTest": {
     "line number": [
      366
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES.TestOutput": {
     "line number": [
      367
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES.test_data": {
     "line number": [
      365
     ]
    },
    "make_block_tests": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES.suite": {
  "data": {
   "lineno": 373
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES.test_data": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.CheckParity": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_DES3.unittest": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_DES3.CheckParity.test_degradation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.adjust_key_parity": {
     "line number": [
      97,
      101,
      105,
      109
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      93,
      94
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      110
     ]
    },
    "ValueError": {
     "line number": [
      97,
      101,
      105,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES3.CheckParity.test_parity_option2": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.adjust_key_parity": {
     "line number": [
      82
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      81,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES3.CheckParity.test_parity_option3": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.adjust_key_parity": {
     "line number": [
      88
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      87,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES3.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.DegenerateToDESTest": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_DES3.unittest": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_DES3.DegenerateToDESTest.runTest": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_ECB": {
     "line number": [
      122,
      127,
      132,
      137
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      120,
      125,
      130,
      135
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      116,
      117
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      120,
      125,
      130,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES3.TestOutput": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_DES3.unittest": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_DES3.TestOutput.runTest": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_ECB": {
     "line number": [
      145
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      145
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES3.sys": {
     "line number": [
      160
     ]
    },
    "TypeError": {
     "line number": [
      168,
      169
     ]
    },
    "ValueError": {
     "line number": [
      172,
      173
     ]
    },
    "bytearray": {
     "line number": [
      150,
      161,
      171
     ]
    },
    "memoryview": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES3.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.get_tests": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3": {
     "line number": [
      180
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES3.CheckParity": {
     "line number": [
      182
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES3.DegenerateToDESTest": {
     "line number": [
      181
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES3.TestOutput": {
     "line number": [
      183
     ]
    },
    "Crypto.SelfTest.Cipher.test_DES3.test_data": {
     "line number": [
      180
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      182
     ]
    },
    "make_block_tests": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_DES3.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.key": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES3.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.nist_tdes_mmt_files": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES3.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.suite": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.test_data": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES3.test_data_item": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES3.test_vectors": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_DES3.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_DES3.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_EAX"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.ARC2": {
  "data": {
   "shadows": "Crypto.Cipher.ARC2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.Blowfish": {
  "data": {
   "shadows": "Crypto.Cipher.Blowfish"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.CAST": {
  "data": {
   "shadows": "Crypto.Cipher.CAST"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
     "line number": [
      404,
      405,
      406
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.unittest": {
     "line number": [
      402
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_invalid_decrypt_or_update_after_verify": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      534,
      539,
      545
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      534,
      539,
      545
     ]
    },
    "TypeError": {
     "line number": [
      542,
      547
     ]
    },
    "getattr": {
     "line number": [
      542,
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_invalid_encrypt_or_update_after_digest": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      524,
      530
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      524,
      530
     ]
    },
    "TypeError": {
     "line number": [
      527
     ]
    },
    "getattr": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_invalid_mixing_encrypt_decrypt": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      514
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      514
     ]
    },
    "TypeError": {
     "line number": [
      519
     ]
    },
    "getattr": {
     "line number": [
      518,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_encrypt_and_digest_decrypt_and_verify": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      499,
      504
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      499,
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_full_path": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      439,
      446
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      439,
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_init_digest": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      454
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_init_encrypt_decrypt_digest_verify": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      411,
      417
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      411,
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_init_update_digest_verify": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      425,
      431
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      425,
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_init_verify": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      459,
      462
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      459,
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_multiple_digest_or_verify": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      485,
      492
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      485,
      492
     ]
    },
    "range": {
     "line number": [
      488,
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests.test_valid_multiple_encrypt_or_decrypt": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      473
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      473
     ]
    },
    "getattr": {
     "line number": [
      477
     ]
    },
    "len": {
     "line number": [
      472
     ]
    },
    "method": {
     "line number": [
      478,
      479,
      480,
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
     "line number": [
      50,
      51,
      52,
      53
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.sys": {
     "line number": [
      397
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_block_size_128": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      102
     ]
    },
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      103
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_block_size_64": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      106
     ]
    },
    "Crypto.Cipher.DES3.block_size": {
     "line number": [
      107
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_bytearray": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      240,
      247,
      270
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      239,
      246,
      269
     ]
    },
    "bytearray": {
     "line number": [
      234,
      235,
      236,
      237,
      262,
      263,
      264,
      265,
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_data_must_be_bytes": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      146,
      149
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      146,
      149
     ]
    },
    "TypeError": {
     "line number": [
      147,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      137,
      141
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      137,
      141
     ]
    },
    "TypeError": {
     "line number": [
      139,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_hex_mac": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      183,
      187
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      183,
      187
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_invalid_mac": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      173,
      178
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      173,
      178
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      176
     ]
    },
    "ValueError": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_loopback_128": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      56,
      60
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      56,
      60
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_loopback_64": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_EAX": {
     "line number": [
      65,
      69
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      65,
      69
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_mac_len": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      154,
      156,
      161,
      167
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      154,
      156,
      161,
      167
     ]
    },
    "ValueError": {
     "line number": [
      154,
      156
     ]
    },
    "len": {
     "line number": [
      164,
      169
     ]
    },
    "range": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_memoryview": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      291,
      298,
      321
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      290,
      297,
      320
     ]
    },
    "bytearray": {
     "line number": [
      285,
      286,
      287,
      288,
      313,
      314,
      315,
      316,
      317
     ]
    },
    "memoryview": {
     "line number": [
      285,
      286,
      287,
      288,
      313,
      314,
      315,
      316,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_message_chunks": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      197,
      208,
      221
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      197,
      208,
      221
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
     "line number": [
      194,
      195
     ]
    },
    "break_up": {
     "line number": [
      210,
      213,
      223,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_message_chunks.break_up": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "len": {
     "line number": [
      202
     ]
    },
    "range": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_nonce": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      75,
      77,
      82,
      85
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      75,
      77,
      82,
      85
     ]
    },
    "len": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_nonce_attribute": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      110,
      114,
      115
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      110,
      114,
      115
     ]
    },
    "len": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_nonce_length": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      94,
      98
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      94,
      98
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      98,
      99
     ]
    },
    "ValueError": {
     "line number": [
      94
     ]
    },
    "range": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_nonce_must_be_bytes": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      89
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      89
     ]
    },
    "TypeError": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      132
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      132
     ]
    },
    "getattr": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_output_param": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      336,
      341,
      346,
      351,
      357
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      336,
      341,
      346,
      351,
      357
     ]
    },
    "bytearray": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_output_param_memoryview": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      365,
      369,
      373
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      365,
      369,
      373
     ]
    },
    "bytearray": {
     "line number": [
      368
     ]
    },
    "memoryview": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_output_param_neg": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      380,
      383,
      386,
      390,
      392
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      380,
      383,
      386,
      390,
      392
     ]
    },
    "TypeError": {
     "line number": [
      384,
      387
     ]
    },
    "ValueError": {
     "line number": [
      391,
      393
     ]
    },
    "bytearray": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.EaxTests.test_unknown_parameters": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      120,
      122,
      127
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      120,
      122,
      127
     ]
    },
    "TypeError": {
     "line number": [
      120,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestOtherCiphers": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.unittest": {
     "line number": [
      744
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestOtherCiphers.create_test": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      746
     ]
    },
    "setattr": {
     "line number": [
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestOtherCiphers.create_test.test_template": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
     "line number": [
      750,
      755
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsPaper": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.unittest": {
     "line number": [
      551
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsPaper.runTest": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      641,
      648
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      641,
      648
     ]
    },
    "len": {
     "line number": [
      641,
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.unittest": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.unittest": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 736
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.json": {
     "line number": [
      664
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      663
     ]
    },
    "TestVector": {
     "line number": [
      673
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      679
     ]
    },
    "open": {
     "line number": [
      663
     ]
    },
    "setattr": {
     "line number": [
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.setUp.TestVector": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "object": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.test_corrupt_decrypt": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      731
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      731
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      733
     ]
    },
    "ValueError": {
     "line number": [
      734
     ]
    },
    "len": {
     "line number": [
      729,
      729,
      733
     ]
    },
    "str": {
     "line number": [
      728
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      712
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      712
     ]
    },
    "ValueError": {
     "line number": [
      713,
      720
     ]
    },
    "len": {
     "line number": [
      714
     ]
    },
    "str": {
     "line number": [
      709,
      714
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.test_encrypt": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_EAX": {
     "line number": [
      696
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      696
     ]
    },
    "ValueError": {
     "line number": [
      697
     ]
    },
    "len": {
     "line number": [
      698
     ]
    },
    "str": {
     "line number": [
      693,
      698
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.warnings": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.get_tag_random": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      45
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.get_tests": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_EAX.EaxFSMTests": {
     "line number": [
      783
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.EaxTests": {
     "line number": [
      782
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.TestOtherCiphers": {
     "line number": [
      786
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.TestVectorsPaper": {
     "line number": [
      784
     ]
    },
    "Crypto.SelfTest.Cipher.test_EAX.TestVectorsWycheproof": {
     "line number": [
      785
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      782,
      783,
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_EAX.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.suite": {
  "data": {
   "lineno": 791
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_EAX.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_EAX.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_GCM"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.get_tag_random": {
     "line number": [
      381,
      382,
      383
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_invalid_decrypt_or_update_after_verify": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      511,
      516,
      522
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      511,
      516,
      522
     ]
    },
    "TypeError": {
     "line number": [
      519,
      524
     ]
    },
    "getattr": {
     "line number": [
      519,
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_invalid_encrypt_or_update_after_digest": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      501,
      507
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      501,
      507
     ]
    },
    "TypeError": {
     "line number": [
      504
     ]
    },
    "getattr": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_invalid_mixing_encrypt_decrypt": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      491
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      491
     ]
    },
    "TypeError": {
     "line number": [
      496
     ]
    },
    "getattr": {
     "line number": [
      495,
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_encrypt_and_digest_decrypt_and_verify": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      476,
      481
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      476,
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_full_path": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      416,
      423
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      416,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_init_digest": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      431
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_init_encrypt_decrypt_digest_verify": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      388,
      394
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      388,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_init_update_digest_verify": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      402,
      408
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      402,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_init_verify": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      436,
      439
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      436,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_multiple_digest_or_verify": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      462,
      469
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      462,
      469
     ]
    },
    "range": {
     "line number": [
      465,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests.test_valid_multiple_encrypt_or_decrypt": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      450
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      450
     ]
    },
    "getattr": {
     "line number": [
      454
     ]
    },
    "len": {
     "line number": [
      449
     ]
    },
    "method": {
     "line number": [
      455,
      456,
      457,
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.get_tag_random": {
     "line number": [
      54,
      55,
      56
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.sys": {
     "line number": [
      374
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_block_size_128": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      91
     ]
    },
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      92
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_bytearray": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      225,
      232,
      253
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      224,
      231,
      252
     ]
    },
    "bytearray": {
     "line number": [
      219,
      220,
      221,
      222,
      247,
      248,
      249,
      259,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_data_must_be_bytes": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      131,
      134
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      131,
      134
     ]
    },
    "TypeError": {
     "line number": [
      132,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      122,
      126
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      122,
      126
     ]
    },
    "TypeError": {
     "line number": [
      124,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_hex_mac": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      168,
      172
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      168,
      172
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_invalid_mac": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      158,
      163
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      158,
      163
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      161
     ]
    },
    "ValueError": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_loopback_128": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      59,
      63
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      59,
      63
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.get_tag_random": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_mac_len": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      139,
      141,
      146,
      152
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      139,
      141,
      146,
      152
     ]
    },
    "ValueError": {
     "line number": [
      139,
      141
     ]
    },
    "len": {
     "line number": [
      149,
      154
     ]
    },
    "range": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_memoryview": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      272,
      279,
      300
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      271,
      278,
      299
     ]
    },
    "bytearray": {
     "line number": [
      266,
      267,
      268,
      269,
      294,
      295,
      296
     ]
    },
    "memoryview": {
     "line number": [
      266,
      267,
      268,
      269,
      294,
      295,
      296,
      306,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_message_chunks": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      182,
      193,
      206
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      182,
      193,
      206
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.get_tag_random": {
     "line number": [
      179,
      180
     ]
    },
    "break_up": {
     "line number": [
      195,
      198,
      208,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_message_chunks.break_up": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "len": {
     "line number": [
      187
     ]
    },
    "range": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_nonce": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      69,
      71,
      74
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      69,
      71,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_nonce_attribute": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      95,
      99,
      100
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      95,
      99,
      100
     ]
    },
    "len": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_nonce_length": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      83,
      87
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      83,
      87
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      87,
      88
     ]
    },
    "ValueError": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_nonce_must_be_bytes": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      78
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      78
     ]
    },
    "TypeError": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      117
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      117
     ]
    },
    "getattr": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_output_param": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      313,
      318,
      323,
      328,
      334
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      313,
      318,
      323,
      328,
      334
     ]
    },
    "bytearray": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_output_param_memoryview": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      342,
      346,
      350
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      342,
      346,
      350
     ]
    },
    "bytearray": {
     "line number": [
      345
     ]
    },
    "memoryview": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_output_param_neg": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      357,
      360,
      363,
      367,
      369
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      357,
      360,
      363,
      367,
      369
     ]
    },
    "TypeError": {
     "line number": [
      361,
      364
     ]
    },
    "ValueError": {
     "line number": [
      368,
      370
     ]
    },
    "bytearray": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.GcmTests.test_unknown_parameters": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      105,
      107,
      112
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      105,
      107,
      112
     ]
    },
    "TypeError": {
     "line number": [
      105,
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.NISTTestVectorsGCM": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      777
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.NISTTestVectorsGCM.__init__": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.NISTTestVectorsGCM_no_clmul": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.NISTTestVectorsGCM_no_clmul.__init__": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      787
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVariableLength": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVariableLength.__init__": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      924
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVariableLength.runTest": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      934
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      934
     ]
    },
    "Crypto.Hash.SHA256.new": {
     "line number": [
      929
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      933
     ]
    },
    "range": {
     "line number": [
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectors": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      528
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      715
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectors.runTest": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      721,
      728
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      721,
      728
     ]
    },
    "len": {
     "line number": [
      721,
      728
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsGueronKrasnov": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsGueronKrasnov.test_1": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      749
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      749
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      740,
      741,
      742,
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsGueronKrasnov.test_2": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      769
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      769
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      753,
      754,
      755,
      757,
      762,
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      825
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.unittest": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 913
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.json": {
     "line number": [
      836
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      835
     ]
    },
    "TestVector": {
     "line number": [
      845
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      851
     ]
    },
    "open": {
     "line number": [
      835
     ]
    },
    "setattr": {
     "line number": [
      851
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.setUp.TestVector": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": {
    "object": {
     "line number": [
      838
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.test_corrupt_decrypt": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      907
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      907
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      910
     ]
    },
    "ValueError": {
     "line number": [
      911
     ]
    },
    "len": {
     "line number": [
      905,
      905,
      910
     ]
    },
    "str": {
     "line number": [
      904
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      886
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      886
     ]
    },
    "ValueError": {
     "line number": [
      888,
      896
     ]
    },
    "len": {
     "line number": [
      889
     ]
    },
    "str": {
     "line number": [
      883,
      889
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.test_encrypt": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      868
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      868
     ]
    },
    "ValueError": {
     "line number": [
      870
     ]
    },
    "len": {
     "line number": [
      871
     ]
    },
    "str": {
     "line number": [
      865,
      871
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.warnings": {
     "line number": [
      862
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM._cpu_features": {
  "data": {
   "shadows": "Crypto.Util._cpu_features"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.get_tag_random": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      49
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.get_tests": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_GCM.GcmFSMTests": {
     "line number": [
      949
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.GcmTests": {
     "line number": [
      948
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.NISTTestVectorsGCM": {
     "line number": [
      955
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.NISTTestVectorsGCM_no_clmul": {
     "line number": [
      961
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.TestVariableLength": {
     "line number": [
      953,
      959
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.TestVectors": {
     "line number": [
      950
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.TestVectorsGueronKrasnov": {
     "line number": [
      952
     ]
    },
    "Crypto.SelfTest.Cipher.test_GCM.TestVectorsWycheproof": {
     "line number": [
      951,
      958
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      948,
      949,
      952,
      955,
      961
     ]
    },
    "Crypto.Util._cpu_features.have_clmul": {
     "line number": [
      957
     ]
    },
    "print": {
     "line number": [
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.single_test": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_GCM": {
     "line number": [
      811
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      811
     ]
    },
    "ValueError": {
     "line number": [
      815
     ]
    },
    "len": {
     "line number": [
      812
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_GCM.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.suite": {
  "data": {
   "lineno": 969
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_GCM.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.test_vectors_nist": {
  "data": {
   "lineno": 790
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_GCM.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_GCM.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_OCB"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OCB.get_tag_random": {
     "line number": [
      325,
      326,
      327
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.unittest": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_invalid_decrypt_after_final": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      400
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      400
     ]
    },
    "TypeError": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_invalid_decrypt_or_update_after_verify": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      491,
      497,
      504
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      491,
      497,
      504
     ]
    },
    "TypeError": {
     "line number": [
      501,
      506
     ]
    },
    "getattr": {
     "line number": [
      501,
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_invalid_encrypt_after_final": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      392
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      392
     ]
    },
    "TypeError": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_invalid_encrypt_or_update_after_digest": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      480,
      487
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      480,
      487
     ]
    },
    "TypeError": {
     "line number": [
      484
     ]
    },
    "getattr": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_invalid_init_encrypt_decrypt_digest_verify": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      348,
      354
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      348,
      354
     ]
    },
    "TypeError": {
     "line number": [
      351,
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_invalid_mixing_encrypt_decrypt": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      470
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      470
     ]
    },
    "TypeError": {
     "line number": [
      475
     ]
    },
    "getattr": {
     "line number": [
      474,
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_encrypt_and_digest_decrypt_and_verify": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      455,
      460
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      455,
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_full_path": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      376,
      384
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      376,
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_init_digest": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      409
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_init_encrypt_decrypt_digest_verify": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      332,
      339
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      332,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_init_update_digest_verify": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      362,
      368
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      362,
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_init_verify": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      414,
      417
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      414,
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_multiple_digest_or_verify": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      441,
      448
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      441,
      448
     ]
    },
    "range": {
     "line number": [
      444,
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests.test_valid_multiple_encrypt_or_decrypt": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      428
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      428
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      422,
      423
     ]
    },
    "getattr": {
     "line number": [
      432
     ]
    },
    "len": {
     "line number": [
      427
     ]
    },
    "method": {
     "line number": [
      433,
      434,
      435,
      436,
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbRfc7253Test": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OCB.unittest": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbRfc7253Test.test1": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      675,
      681
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      675,
      681
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      670,
      672
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      670,
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbRfc7253Test.test2": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      692,
      698
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      692,
      698
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      689
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbRfc7253Test.test3": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      715,
      720,
      724,
      729
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      715,
      720,
      724,
      729
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      714,
      719,
      723,
      728
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      709,
      732
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      708,
      708,
      712
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      732
     ]
    },
    "range": {
     "line number": [
      711
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OCB.get_tag_random": {
     "line number": [
      51,
      52,
      53
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.sys": {
     "line number": [
      319
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.unittest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_block_size_128": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      91,
      95,
      96
     ]
    },
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      92
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      91,
      95,
      96
     ]
    },
    "len": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_bytearray": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      233,
      240,
      261
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      232,
      239,
      260
     ]
    },
    "bytearray": {
     "line number": [
      227,
      228,
      229,
      230,
      255,
      256,
      257,
      267,
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_data_must_be_bytes": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      137,
      140
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      137,
      140
     ]
    },
    "TypeError": {
     "line number": [
      138,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      128,
      132
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      128,
      132
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      129,
      130,
      133,
      134
     ]
    },
    "TypeError": {
     "line number": [
      130,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_hex_mac": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      174,
      178
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      174,
      178
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_invalid_mac": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      164,
      169
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      164,
      169
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      167
     ]
    },
    "ValueError": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_loopback_128": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      56,
      60
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      56,
      60
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.get_tag_random": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_mac_len": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      145,
      147,
      152,
      158
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      145,
      147,
      152,
      158
     ]
    },
    "ValueError": {
     "line number": [
      145,
      147
     ]
    },
    "len": {
     "line number": [
      155,
      160
     ]
    },
    "range": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_memoryview": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      280,
      287,
      308
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      279,
      286,
      307
     ]
    },
    "bytearray": {
     "line number": [
      274,
      275,
      276,
      277,
      302,
      303,
      304
     ]
    },
    "memoryview": {
     "line number": [
      274,
      275,
      276,
      277,
      302,
      303,
      304,
      314,
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_message_chunks": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      188,
      199,
      213
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      188,
      199,
      213
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.get_tag_random": {
     "line number": [
      185,
      186
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      203,
      217
     ]
    },
    "break_up": {
     "line number": [
      201,
      204,
      215,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_message_chunks.break_up": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "len": {
     "line number": [
      193
     ]
    },
    "range": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_nonce": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      66,
      68,
      71
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      66,
      68,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_nonce_attribute": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      101,
      105,
      106
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      101,
      105,
      106
     ]
    },
    "len": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_nonce_length": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      80,
      85,
      87
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      80,
      85,
      87
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      81
     ]
    },
    "ValueError": {
     "line number": [
      80,
      87
     ]
    },
    "range": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_nonce_must_be_bytes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      75
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      75
     ]
    },
    "TypeError": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      123
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      123
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      124,
      125
     ]
    },
    "getattr": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.OcbTests.test_unknown_parameters": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OCB": {
     "line number": [
      111,
      113,
      118
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      111,
      113,
      118
     ]
    },
    "TypeError": {
     "line number": [
      111,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.get_tag_random": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      46
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.get_tests": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OCB.OcbFSMTests": {
     "line number": [
      738
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.OcbRfc7253Test": {
     "line number": [
      739
     ]
    },
    "Crypto.SelfTest.Cipher.test_OCB.OcbTests": {
     "line number": [
      737
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      737,
      738,
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OCB.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.suite": {
  "data": {
   "lineno": 745
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_OCB.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OCB.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_OFB"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.BlockChainingTests": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.NistBlockChainingVectors": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.NistOfbVectors": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OFB": {
     "line number": [
      80
     ]
    },
    "Crypto.Cipher.DES.MODE_OFB": {
     "line number": [
      81
     ]
    },
    "Crypto.Cipher.DES3.MODE_OFB": {
     "line number": [
      82
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.NistBlockChainingVectors": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OFB.OfbTests": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OFB": {
     "line number": [
      46
     ]
    },
    "Crypto.Cipher.DES3.MODE_OFB": {
     "line number": [
      47
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OFB.OfbTests.test_unaligned_data_128": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_CFB": {
     "line number": [
      54,
      56,
      59,
      61
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      54,
      56,
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.OfbTests.test_unaligned_data_64": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_CFB": {
     "line number": [
      66,
      68,
      71,
      73
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      66,
      68,
      71,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.SP800TestVectors": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OFB.unittest": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OFB.SP800TestVectors.test_aes_128": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OFB": {
     "line number": [
      161,
      163,
      166,
      168
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      161,
      163,
      166,
      168
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      156,
      157,
      158,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.SP800TestVectors.test_aes_192": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OFB": {
     "line number": [
      188,
      190,
      193,
      195
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      188,
      190,
      193,
      195
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      183,
      184,
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.SP800TestVectors.test_aes_256": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OFB": {
     "line number": [
      215,
      217,
      220,
      222
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      215,
      217,
      220,
      222
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      210,
      211,
      212,
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.get_tag_random": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      40
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.get_tests": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OFB.NistOfbVectors": {
     "line number": [
      230
     ]
    },
    "Crypto.SelfTest.Cipher.test_OFB.OfbTests": {
     "line number": [
      228
     ]
    },
    "Crypto.SelfTest.Cipher.test_OFB.SP800TestVectors": {
     "line number": [
      231
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      228,
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.new_func": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OFB.nist_aes_kat_mmt_files": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_OFB.nist_aes_mct_files": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_OFB.nist_tdes_files": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_OFB.suite": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_OFB.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OFB.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_OpenPGP"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.BlockChainingTests": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.DES": {
  "data": {
   "shadows": "Crypto.Cipher.DES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      47
     ]
    },
    "Crypto.Cipher.DES3.MODE_OPENPGP": {
     "line number": [
      48
     ]
    },
    "Crypto.SelfTest.Cipher.test_CBC.BlockChainingTests": {
     "line number": [
      45
     ]
    },
    "Crypto.SelfTest.Cipher.test_OpenPGP.get_tag_random": {
     "line number": [
      52,
      53,
      54,
      55,
      56
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_IV_iv_attributes": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      81,
      85
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      81,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_either_encrypt_or_decrypt": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      96,
      100
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      96,
      100
     ]
    },
    "TypeError": {
     "line number": [
      98,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_loopback_128": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      59,
      65
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      59,
      65
     ]
    },
    "Crypto.SelfTest.Cipher.test_OpenPGP.get_tag_random": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_loopback_64": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_OPENPGP": {
     "line number": [
      70,
      76
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      70,
      76
     ]
    },
    "Crypto.SelfTest.Cipher.test_OpenPGP.get_tag_random": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_null_encryption_decryption": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      89,
      92
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      89,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_output_param": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_output_param_memoryview": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_output_param_neg": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_output_param_same_buffer": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_unaligned_data_128": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      107,
      109
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      107,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests.test_unaligned_data_64": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_OPENPGP": {
     "line number": [
      115,
      117
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      115,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.TestVectors": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OpenPGP.unittest": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.TestVectors.test_aes": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_OPENPGP": {
     "line number": [
      171,
      176
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      171,
      176
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      165,
      166,
      167,
      168,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.TestVectors.test_des3": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Crypto.Cipher.DES3.MODE_OPENPGP": {
     "line number": [
      199,
      204
     ]
    },
    "Crypto.Cipher.DES3.new": {
     "line number": [
      199,
      204
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      193,
      194,
      195,
      196,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.get_tag_random": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      40
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.get_tests": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_OpenPGP.OpenPGPTests": {
     "line number": [
      211
     ]
    },
    "Crypto.SelfTest.Cipher.test_OpenPGP.TestVectors": {
     "line number": [
      212
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      211,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.suite": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_OpenPGP.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_SIV"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.get_tag_random": {
     "line number": [
      304,
      305,
      306
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_invalid_init_decrypt": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      316
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      316
     ]
    },
    "TypeError": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_invalid_init_encrypt": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      310
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      310
     ]
    },
    "TypeError": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_invalid_multiple_decrypt_and_verify": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      379,
      382
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      379,
      382
     ]
    },
    "TypeError": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_invalid_multiple_encrypt_and_digest": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      374
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      374
     ]
    },
    "TypeError": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_valid_encrypt_and_digest_decrypt_and_verify": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      363,
      368
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      363,
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_valid_init_digest": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      336
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_valid_init_update_digest_verify": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      323,
      329
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      323,
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_valid_init_verify": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      341,
      344
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      341,
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests.test_valid_multiple_digest_or_verify": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      349,
      356
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      349,
      356
     ]
    },
    "range": {
     "line number": [
      352,
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.get_tag_random": {
     "line number": [
      50,
      51,
      52,
      53,
      54
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.sys": {
     "line number": [
      297
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_block_size_128": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      91
     ]
    },
    "Crypto.Cipher.AES.block_size": {
     "line number": [
      92
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_bytearray": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      163,
      169,
      189
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      162,
      168,
      188
     ]
    },
    "bytearray": {
     "line number": [
      157,
      158,
      159,
      160,
      182,
      183,
      184,
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_data_must_be_bytes": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      123,
      126
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      123,
      126
     ]
    },
    "TypeError": {
     "line number": [
      124,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_encrypt_excludes_decrypt": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      113,
      117
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      113,
      117
     ]
    },
    "TypeError": {
     "line number": [
      115,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_hex_mac": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      147,
      151
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      147,
      151
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_invalid_mac": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      137,
      142
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      137,
      142
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      140
     ]
    },
    "ValueError": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_loopback_128": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      58,
      62
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      58,
      62
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.get_tag_random": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_mac_len": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      131
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      131
     ]
    },
    "len": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_memoryview": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      208,
      214,
      234
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      207,
      213,
      233
     ]
    },
    "bytearray": {
     "line number": [
      202,
      203,
      204,
      205,
      227,
      228,
      229,
      230,
      231
     ]
    },
    "memoryview": {
     "line number": [
      202,
      203,
      204,
      205,
      227,
      228,
      229,
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_nonce": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      68,
      70,
      73
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      68,
      70,
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_nonce_attribute": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      95,
      99
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      95,
      99
     ]
    },
    "hasattr": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_nonce_length": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      83,
      87
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      83,
      87
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      87
     ]
    },
    "ValueError": {
     "line number": [
      83
     ]
    },
    "range": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_nonce_must_be_bytes": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      78
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      78
     ]
    },
    "TypeError": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_output_param": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      247,
      251,
      257
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      247,
      251,
      257
     ]
    },
    "bytearray": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_output_param_memoryview": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      265,
      269,
      273
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      265,
      269,
      273
     ]
    },
    "bytearray": {
     "line number": [
      268
     ]
    },
    "memoryview": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_output_param_neg": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      280,
      283,
      286,
      290,
      292
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      280,
      283,
      286,
      290,
      292
     ]
    },
    "TypeError": {
     "line number": [
      284,
      287
     ]
    },
    "ValueError": {
     "line number": [
      291,
      293
     ]
    },
    "bytearray": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.SivTests.test_unknown_parameters": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      102,
      104,
      109
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      102,
      104,
      109
     ]
    },
    "TypeError": {
     "line number": [
      102,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectors": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.transform": {
     "line number": [
      434
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectors.runTest": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      440,
      448
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      440,
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.json": {
     "line number": [
      464
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      463
     ]
    },
    "TestVector": {
     "line number": [
      472
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      476
     ]
    },
    "open": {
     "line number": [
      463
     ]
    },
    "setattr": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.setUp.TestVector": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "object": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      495
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      495
     ]
    },
    "ValueError": {
     "line number": [
      499
     ]
    },
    "str": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof.test_encrypt": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      486
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      486
     ]
    },
    "str": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.__init__": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.unittest": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.runTest": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.setUp": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.json": {
     "line number": [
      521
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      520
     ]
    },
    "TestVector": {
     "line number": [
      529
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      533
     ]
    },
    "open": {
     "line number": [
      520
     ]
    },
    "setattr": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.setUp.TestVector": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "object": {
     "line number": [
      523
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.shortDescription": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.test_decrypt": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      553
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      553
     ]
    },
    "ValueError": {
     "line number": [
      557
     ]
    },
    "str": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2.test_encrypt": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "Crypto.Cipher.AES.MODE_SIV": {
     "line number": [
      543
     ]
    },
    "Crypto.Cipher.AES.new": {
     "line number": [
      543
     ]
    },
    "str": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.get_tag_random": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      45
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.get_tests": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_SIV.SivFSMTests": {
     "line number": [
      575
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.SivTests": {
     "line number": [
      574
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.TestVectors": {
     "line number": [
      576
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof": {
     "line number": [
      577
     ]
    },
    "Crypto.SelfTest.Cipher.test_SIV.TestVectorsWycheproof2": {
     "line number": [
      578
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      574,
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.suite": {
  "data": {
   "lineno": 583
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_SIV.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.transform": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      388,
      389,
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_SIV.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_SIV.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_Salsa20"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.ByteArrayTest": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Salsa20.unittest": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.ByteArrayTest.runTest": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.new": {
     "line number": [
      242,
      245,
      258
     ]
    },
    "bytearray": {
     "line number": [
      238,
      239,
      240,
      254,
      255,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.KeyLength": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Salsa20.unittest": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.KeyLength.runTest": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.new": {
     "line number": [
      210
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      207,
      209
     ]
    },
    "ValueError": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.MemoryviewTest": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Salsa20.unittest": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.MemoryviewTest.runTest": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.new": {
     "line number": [
      280,
      283,
      296
     ]
    },
    "bytearray": {
     "line number": [
      276,
      277,
      278,
      292,
      293,
      294
     ]
    },
    "memoryview": {
     "line number": [
      276,
      277,
      278,
      292,
      293,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.NonceTests": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Salsa20.unittest": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.NonceTests.test_default_nonce": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.new": {
     "line number": [
      222,
      223
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      222,
      223
     ]
    },
    "len": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.NonceTests.test_invalid_nonce_length": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.new": {
     "line number": [
      217,
      218
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      216,
      217,
      218
     ]
    },
    "ValueError": {
     "line number": [
      217,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.Salsa20": {
  "data": {
   "shadows": "Crypto.Cipher.Salsa20"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.TestOutput": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_Salsa20.unittest": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.TestOutput.runTest": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20.new": {
     "line number": [
      311,
      317,
      322,
      330,
      334,
      338,
      341,
      346,
      349
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.sys": {
     "line number": [
      328
     ]
    },
    "TypeError": {
     "line number": [
      339,
      342
     ]
    },
    "ValueError": {
     "line number": [
      347,
      350
     ]
    },
    "bytearray": {
     "line number": [
      316,
      329,
      344
     ]
    },
    "memoryview": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.get_tests": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "Crypto.Cipher.Salsa20": {
     "line number": [
      354
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.ByteArrayTest": {
     "line number": [
      357
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.KeyLength": {
     "line number": [
      355
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.MemoryviewTest": {
     "line number": [
      361
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.NonceTests": {
     "line number": [
      356
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.TestOutput": {
     "line number": [
      363
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.sys": {
     "line number": [
      360
     ]
    },
    "Crypto.SelfTest.Cipher.test_Salsa20.test_data": {
     "line number": [
      354
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      356
     ]
    },
    "make_stream_tests": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.suite": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.test_data": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_Salsa20.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_pkcs1_15"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS": {
  "data": {
   "shadows": "Crypto.Cipher.PKCS1_v1_5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_15.sys": {
     "line number": [
      181
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_15.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      54
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testByteArray": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      168
     ]
    },
    "bytearray": {
     "line number": [
      169,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testEncrypt1": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      122
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      110
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_15.t2b": {
     "line number": [
      122,
      124
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      123
     ]
    },
    "randGen": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testEncrypt1.randGen": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testEncrypt1.randGen.__call__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testEncrypt1.randGen.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testEncrypt2": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      129
     ]
    },
    "ValueError": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testEncryptVerify1": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      161
     ]
    },
    "range": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testMemoryview": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      175
     ]
    },
    "bytearray": {
     "line number": [
      176,
      177
     ]
    },
    "memoryview": {
     "line number": [
      176,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testVerify1": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      137
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      135
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_15.t2b": {
     "line number": [
      138
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests.testVerify2": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      144
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      151
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      153
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      150
     ]
    },
    "ValueError": {
     "line number": [
      145,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.RSA": {
  "data": {
   "shadows": "Crypto.PublicKey.RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_15.unittest": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_15.unittest": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.load_tests": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      204
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_15.json": {
     "line number": [
      196
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      195
     ]
    },
    "TestVector": {
     "line number": [
      207
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      214
     ]
    },
    "open": {
     "line number": [
      195
     ]
    },
    "setattr": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.load_tests.TestVector": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "object": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_v1_5.new": {
     "line number": [
      239
     ]
    },
    "ValueError": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_15.warnings": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.a2b_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.a2b_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.b2a_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.get_tests": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_15.PKCS1_15_Tests": {
     "line number": [
      263
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_15.TestVectorsWycheproof": {
     "line number": [
      264
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.rws": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.suite": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.t2b": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_15.rws": {
     "line number": [
      45
     ]
    },
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      48
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      45
     ]
    },
    "ValueError": {
     "line number": [
      47
     ]
    },
    "len": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_15.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep": {
  "data": {
   "shadows": "Crypto.SelfTest.Cipher.test_pkcs1_oaep"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.MD2": {
  "data": {
   "shadows": "Crypto.Hash.MD2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.MGF1": {
  "data": {
   "shadows": "Crypto.Signature.pss.MGF1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS": {
  "data": {
   "shadows": "Crypto.Cipher.PKCS1_OAEP"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      109,
      153,
      198,
      265
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.sys": {
     "line number": [
      378
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.unittest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.setUp": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      55
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testByteArray": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      365
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      364
     ]
    },
    "bytearray": {
     "line number": [
      366,
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testDecrypt1": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      303
     ]
    },
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      301
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.rws": {
     "line number": [
      300
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.t2b": {
     "line number": [
      304,
      305
     ]
    },
    "int": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testDecrypt2": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      310
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      311
     ]
    },
    "ValueError": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncrypt1": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      286
     ]
    },
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      274
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.rws": {
     "line number": [
      273
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.t2b": {
     "line number": [
      286,
      287,
      288
     ]
    },
    "int": {
     "line number": [
      273
     ]
    },
    "randGen": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncrypt1.randGen": {
  "data": {
   "lineno": 277
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncrypt1.randGen.__call__": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncrypt1.randGen.__init__": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncrypt2": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      293
     ]
    },
    "ValueError": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncryptDecrypt1": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      317
     ]
    },
    "range": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncryptDecrypt2": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      335
     ]
    },
    "Crypto.Hash.MD2": {
     "line number": [
      330
     ]
    },
    "Crypto.Hash.MD5": {
     "line number": [
      330
     ]
    },
    "Crypto.Hash.RIPEMD160": {
     "line number": [
      330
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      330
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncryptDecrypt2.localRng": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncryptDecrypt3": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncryptDecrypt4": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testEncryptDecrypt4.newMGF": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests.testMemoryview": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      372
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      371
     ]
    },
    "bytearray": {
     "line number": [
      373,
      374
     ]
    },
    "memoryview": {
     "line number": [
      373,
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.RIPEMD160": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.RSA": {
  "data": {
   "shadows": "Crypto.PublicKey.RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.unittest": {
     "line number": [
      382
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.unittest": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.load_tests": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      403,
      416
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      405,
      418
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      407,
      420
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      409,
      422
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      411,
      424
     ]
    },
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      401
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.json": {
     "line number": [
      393
     ]
    },
    "Crypto.Signature.pss.MGF1": {
     "line number": [
      416,
      418,
      420,
      422,
      424
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      392
     ]
    },
    "TestVector": {
     "line number": [
      429
     ]
    },
    "ValueError": {
     "line number": [
      413,
      426
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      439
     ]
    },
    "open": {
     "line number": [
      392
     ]
    },
    "setattr": {
     "line number": [
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.load_tests.TestVector": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "object": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.test_decrypt": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "Crypto.Cipher.PKCS1_OAEP.new": {
     "line number": [
      481
     ]
    },
    "ValueError": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.warnings": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.a2b_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.a2b_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.b2a_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.get_tests": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.PKCS1_OAEP_Tests": {
     "line number": [
      502
     ]
    },
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.TestVectorsWycheproof": {
     "line number": [
      503
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.rws": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.suite": {
  "data": {
   "lineno": 507
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.t2b": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.test_pkcs1_oaep.rws": {
     "line number": [
      46
     ]
    },
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      49
     ]
    },
    "ValueError": {
     "line number": [
      48
     ]
    },
    "len": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.test_pkcs1_oaep.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Cipher.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.get_tests": {
     "line number": [
      58
     ]
    },
    "Crypto.SelfTest.Hash.unittest": {
     "line number": [
      58,
      59
     ]
    },
    "__name__": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Hash.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.common": {
  "data": {},
  "type": "module"
 },
 "Crypto.SelfTest.Hash.common.ByteArrayTest": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.common.ByteArrayTest.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.ByteArrayTest.runTest": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      127
     ]
    },
    "bytearray": {
     "line number": [
      130,
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.Crypto.Hash": {
  "data": {
   "shadows": "Crypto.Hash"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.HashDigestSizeSelfTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.common.HashDigestSizeSelfTest.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashDigestSizeSelfTest.runTest": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      55,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashDigestSizeSelfTest.shortDescription": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashSelfTest": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.common.HashSelfTest.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      65
     ]
    },
    "input": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashSelfTest.runTest": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.binascii": {
     "line number": [
      79,
      85,
      103
     ]
    },
    "Crypto.SelfTest.Hash.common.sys": {
     "line number": [
      89
     ]
    },
    "hasattr": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashSelfTest.shortDescription": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashTestOID": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.common.HashTestOID.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.HashTestOID.runTest": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MACSelfTest": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.common.MACSelfTest.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.t2b": {
     "line number": [
      195,
      196,
      197
     ]
    },
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MACSelfTest.runTest": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      219
     ]
    },
    "NotImplementedError": {
     "line number": [
      241
     ]
    },
    "ValueError": {
     "line number": [
      220,
      221
     ]
    },
    "binascii.hexlify": {
     "line number": [
      206,
      212,
      226
     ]
    },
    "isinstance": {
     "line number": [
      245,
      246
     ]
    },
    "type": {
     "line number": [
      245,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MACSelfTest.shortDescription": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MemoryViewTest": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.common.MemoryViewTest.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.unittest": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MemoryViewTest.runTest": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "get_mv": {
     "line number": [
      170,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MemoryViewTest.runTest.get_mv_ro": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.MemoryViewTest.runTest.get_mv_rw": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      165
     ]
    },
    "memoryview": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.make_hash_tests": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.ByteArrayTest": {
     "line number": [
      272
     ]
    },
    "Crypto.SelfTest.Hash.common.HashDigestSizeSelfTest": {
     "line number": [
      267
     ]
    },
    "Crypto.SelfTest.Hash.common.HashSelfTest": {
     "line number": [
      264
     ]
    },
    "Crypto.SelfTest.Hash.common.HashTestOID": {
     "line number": [
      270
     ]
    },
    "Crypto.SelfTest.Hash.common.MemoryViewTest": {
     "line number": [
      275
     ]
    },
    "Crypto.SelfTest.Hash.common.sys": {
     "line number": [
      274,
      274
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      258
     ]
    },
    "input": {
     "line number": [
      258,
      260,
      264
     ]
    },
    "len": {
     "line number": [
      256,
      259
     ]
    },
    "map": {
     "line number": [
      258
     ]
    },
    "range": {
     "line number": [
      256
     ]
    },
    "repr": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.make_mac_tests": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.MACSelfTest": {
     "line number": [
      288
     ]
    },
    "enumerate": {
     "line number": [
      282
     ]
    },
    "len": {
     "line number": [
      283
     ]
    },
    "list": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.t2b": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.common.re": {
     "line number": [
      37
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      37
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.common.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.common.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.get_tests": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.sys": {
     "line number": [
      51
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.get_tests": {
     "line number": [
      52
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.get_tests": {
     "line number": [
      32
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.get_tests": {
     "line number": [
      31
     ]
    },
    "Crypto.SelfTest.Hash.test_MD2.get_tests": {
     "line number": [
      33
     ]
    },
    "Crypto.SelfTest.Hash.test_MD4.get_tests": {
     "line number": [
      34
     ]
    },
    "Crypto.SelfTest.Hash.test_MD5.get_tests": {
     "line number": [
      35
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.get_tests": {
     "line number": [
      53
     ]
    },
    "Crypto.SelfTest.Hash.test_RIPEMD160.get_tests": {
     "line number": [
      36
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA1.get_tests": {
     "line number": [
      37
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA224.get_tests": {
     "line number": [
      46
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA256.get_tests": {
     "line number": [
      38
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA384.get_tests": {
     "line number": [
      47
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_224.get_tests": {
     "line number": [
      39
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_256.get_tests": {
     "line number": [
      40
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_384.get_tests": {
     "line number": [
      41
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_512.get_tests": {
     "line number": [
      42
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA512.get_tests": {
     "line number": [
      48
     ]
    },
    "Crypto.SelfTest.Hash.test_SHAKE.get_tests": {
     "line number": [
      44
     ]
    },
    "Crypto.SelfTest.Hash.test_keccak.get_tests": {
     "line number": [
      43
     ]
    },
    "ImportError": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.suite": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_BLAKE2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.BLAKE2b": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2OfficialTestVector": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.unittest": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2OfficialTestVector.runTest": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2OfficialTestVector.setUp": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.re": {
     "line number": [
      283
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      271
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      289
     ]
    },
    "ValueError": {
     "line number": [
      285
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      289
     ]
    },
    "enumerate": {
     "line number": [
      278
     ]
    },
    "open": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.sys": {
     "line number": [
      237
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.unittest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_bytearray": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      178,
      179,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_default_digest_size": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "len": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_digest": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      112
     ]
    },
    "type": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_hex_digest": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      137
     ]
    },
    "binascii.hexlify": {
     "line number": [
      137
     ]
    },
    "isinstance": {
     "line number": [
      141
     ]
    },
    "type": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_hexverify": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_memoryview": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "get_mv": {
     "line number": [
      213,
      214,
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_memoryview.get_mv_ro": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_memoryview.get_mv_rw": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      208
     ]
    },
    "memoryview": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_new_negative": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      71,
      81,
      84
     ]
    },
    "ValueError": {
     "line number": [
      74,
      75,
      77,
      78,
      79
     ]
    },
    "new_func": {
     "line number": [
      70,
      71,
      74,
      75,
      77,
      78,
      79,
      81,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_new_positive": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "new_func": {
     "line number": [
      51,
      55,
      58,
      59,
      62
     ]
    },
    "range": {
     "line number": [
      50,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_oid": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      165,
      170
     ]
    },
    "str": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_update": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_update_after_digest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_update_negative": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test.test_verify": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      147
     ]
    },
    "ValueError": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.unittest": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1.runTest": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "len": {
     "line number": [
      350
     ]
    },
    "range": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1.setUp": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.re": {
     "line number": [
      340
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      331
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      345
     ]
    },
    "ValueError": {
     "line number": [
      342
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      345
     ]
    },
    "enumerate": {
     "line number": [
      337
     ]
    },
    "open": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector2": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.unittest": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector2.runTest": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "range": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector2.setUp": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.re": {
     "line number": [
      385
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      376
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      391
     ]
    },
    "ValueError": {
     "line number": [
      387
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      391
     ]
    },
    "enumerate": {
     "line number": [
      382
     ]
    },
    "int": {
     "line number": [
      390
     ]
    },
    "open": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bOfficialTestVector": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2b": {
     "line number": [
      312
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2OfficialTestVector": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bTest": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2b": {
     "line number": [
      243
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bTestVector1": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2b": {
     "line number": [
      361
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bTestVector2": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2b": {
     "line number": [
      408
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sOfficialTestVector": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s": {
     "line number": [
      321
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2OfficialTestVector": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sTest": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s": {
     "line number": [
      256
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2Test": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sTestVector1": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s": {
     "line number": [
      368
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sTestVector2": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2s": {
     "line number": [
      417
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2TestVector1": {
     "line number": [
      415
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.get_tests": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bOfficialTestVector": {
     "line number": [
      428
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bTest": {
     "line number": [
      427
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bTestVector1": {
     "line number": [
      429
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2bTestVector2": {
     "line number": [
      430
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sOfficialTestVector": {
     "line number": [
      433
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sTest": {
     "line number": [
      432
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sTestVector1": {
     "line number": [
      434
     ]
    },
    "Crypto.SelfTest.Hash.test_BLAKE2.Blake2sTestVector2": {
     "line number": [
      435
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      427,
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.suite": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_BLAKE2.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_CMAC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.ByteArrayTests": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.unittest": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_CMAC.ByteArrayTests.runTest": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      305,
      306,
      315,
      316
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      305,
      306,
      315,
      316
     ]
    },
    "bytearray": {
     "line number": [
      302,
      303,
      312,
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.CMAC": {
  "data": {
   "shadows": "Crypto.Hash.CMAC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.MemoryViewTests": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.unittest": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_CMAC.MemoryViewTests.runTest": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      342,
      343,
      352,
      353
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      342,
      343,
      352,
      353
     ]
    },
    "get_mv": {
     "line number": [
      339,
      340,
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.MemoryViewTests.runTest.get_mv_ro": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.MemoryViewTests.runTest.get_mv_rw": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      334
     ]
    },
    "memoryview": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestCMAC": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.unittest": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestCMAC.test_internal_caching": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      261,
      270
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      261,
      270
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.get_tag_random": {
     "line number": [
      259,
      260
     ]
    },
    "len": {
     "line number": [
      268
     ]
    },
    "range": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestCMAC.test_update_after_digest": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      280,
      283,
      286
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      280,
      283,
      286
     ]
    },
    "TypeError": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.unittest": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.unittest": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.json": {
     "line number": [
      371
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      370
     ]
    },
    "TestVector": {
     "line number": [
      380
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      386
     ]
    },
    "open": {
     "line number": [
      370
     ]
    },
    "setattr": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.setUp.TestVector": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "object": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.test_create_mac": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      403
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      403
     ]
    },
    "ValueError": {
     "line number": [
      404
     ]
    },
    "len": {
     "line number": [
      405
     ]
    },
    "str": {
     "line number": [
      400,
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.test_verify_mac": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      416
     ]
    },
    "Crypto.Hash.CMAC.new": {
     "line number": [
      416
     ]
    },
    "ValueError": {
     "line number": [
      417,
      423
     ]
    },
    "len": {
     "line number": [
      418
     ]
    },
    "str": {
     "line number": [
      413,
      418
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_CMAC.warnings": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.get_tag_random": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      251
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.get_tests": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "Crypto.Hash.CMAC": {
     "line number": [
      450
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.ByteArrayTests": {
     "line number": [
      451
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.MemoryViewTests": {
     "line number": [
      456
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.TestCMAC": {
     "line number": [
      452
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.TestVectorsWycheproof": {
     "line number": [
      458
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.sys": {
     "line number": [
      455
     ]
    },
    "Crypto.SelfTest.Hash.test_CMAC.test_data": {
     "line number": [
      445
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      452
     ]
    },
    "dict": {
     "line number": [
      447
     ]
    },
    "list": {
     "line number": [
      446
     ]
    },
    "make_mac_tests": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_CMAC.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.suite": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_CMAC.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.test_data": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_CMAC.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_CMAC.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_HMAC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.ByteArrayTests": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_HMAC.unittest": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_HMAC.ByteArrayTests.runTest": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      314,
      315,
      324,
      325
     ]
    },
    "bytearray": {
     "line number": [
      311,
      312,
      321,
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC": {
  "data": {
   "shadows": "Crypto.Hash.HMAC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC_Module_and_Instance_Test": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_HMAC.unittest": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC_Module_and_Instance_Test.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_HMAC.unittest": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC_Module_and_Instance_Test.runTest": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      288,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC_Module_and_Instance_Test.shortDescription": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC_None": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_HMAC.unittest": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_HMAC.HMAC_None.runTest": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      298,
      299
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      298,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.MemoryViewTests": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_HMAC.unittest": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_HMAC.MemoryViewTests.runTest": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      351,
      352,
      361,
      362
     ]
    },
    "get_mv": {
     "line number": [
      348,
      349,
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.MemoryViewTests.runTest.get_mv_ro": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.MemoryViewTests.runTest.get_mv_rw": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      343
     ]
    },
    "memoryview": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.RIPEMD160": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.default_hash": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_HMAC.get_tests": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      387
     ]
    },
    "Crypto.Hash.HMAC": {
     "line number": [
      390
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.ByteArrayTests": {
     "line number": [
      394
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.HMAC_Module_and_Instance_Test": {
     "line number": [
      391
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.HMAC_None": {
     "line number": [
      392
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.MemoryViewTests": {
     "line number": [
      397
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.hash_modules": {
     "line number": [
      391
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.sys": {
     "line number": [
      388,
      396
     ]
    },
    "Crypto.SelfTest.Hash.test_HMAC.test_data": {
     "line number": [
      380
     ]
    },
    "dict": {
     "line number": [
      385
     ]
    },
    "globals": {
     "line number": [
      385
     ]
    },
    "list": {
     "line number": [
      382
     ]
    },
    "make_mac_tests": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_HMAC.hash_modules": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_HMAC.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.suite": {
  "data": {
   "lineno": 403
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_HMAC.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.test_data": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_HMAC.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_HMAC.xl": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      46
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      46
     ]
    },
    "binascii.hexlify": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_MD2": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_MD2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD2.MD2": {
  "data": {
   "shadows": "Crypto.Hash.MD2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD2.get_tests": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.Hash.MD2": {
     "line number": [
      53
     ]
    },
    "Crypto.SelfTest.Hash.test_MD2.test_data": {
     "line number": [
      53
     ]
    },
    "make_hash_tests": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_MD2.suite": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD2.test_data": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD2.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD4": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_MD4"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD4.MD4": {
  "data": {
   "shadows": "Crypto.Hash.MD4"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD4.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD4.get_tests": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.Hash.MD4": {
     "line number": [
      55
     ]
    },
    "Crypto.SelfTest.Hash.test_MD4.test_data": {
     "line number": [
      55
     ]
    },
    "make_hash_tests": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_MD4.suite": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD4.test_data": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD4.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD5": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_MD5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD5.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD5.Md5IterTest": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_MD5.unittest": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_MD5.Md5IterTest.runTest": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Crypto.Hash.MD5.new": {
     "line number": [
      67,
      72
     ]
    },
    "b": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_MD5.get_tests": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.Hash.MD5": {
     "line number": [
      81
     ]
    },
    "Crypto.SelfTest.Hash.test_MD5.Md5IterTest": {
     "line number": [
      85
     ]
    },
    "Crypto.SelfTest.Hash.test_MD5.test_data": {
     "line number": [
      81
     ]
    },
    "make_hash_tests": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_MD5.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD5.suite": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD5.test_data": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_MD5.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_MD5.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_Poly1305"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.ChaCha20": {
  "data": {
   "shadows": "Crypto.Cipher.ChaCha20"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305": {
  "data": {
   "shadows": "Crypto.Hash.Poly1305"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305AES_MC": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_Poly1305.unittest": {
     "line number": [
      516
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305AES_MC.runTest": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      527
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      527
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      526
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      523
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      519
     ]
    },
    "range": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_Poly1305.sys": {
     "line number": [
      463
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.unittest": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_bytearray": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      399,
      406,
      407,
      417,
      418
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      399,
      406,
      407,
      417,
      418
     ]
    },
    "bytearray": {
     "line number": [
      403,
      404,
      415
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_digest": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      355
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      355
     ]
    },
    "isinstance": {
     "line number": [
      361
     ]
    },
    "type": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_hex_digest": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      372
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      372
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      377
     ]
    },
    "binascii.hexlify": {
     "line number": [
      377
     ]
    },
    "isinstance": {
     "line number": [
      381
     ]
    },
    "type": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_hexverify": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      391
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      391
     ]
    },
    "ValueError": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_memoryview": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      441,
      442,
      453,
      454
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      441,
      442,
      453,
      454
     ]
    },
    "get_mv": {
     "line number": [
      438,
      439,
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_memoryview.get_mv_ro": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_memoryview.get_mv_rw": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      433
     ]
    },
    "memoryview": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_new_negative": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      333,
      335,
      336,
      337
     ]
    },
    "Crypto.Cipher.DES3": {
     "line number": [
      334
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      333,
      334,
      335,
      336,
      337
     ]
    },
    "TypeError": {
     "line number": [
      336,
      337
     ]
    },
    "ValueError": {
     "line number": [
      333,
      334,
      335
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_new_positive": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      319,
      325
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      319,
      325
     ]
    },
    "len": {
     "line number": [
      321,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_update": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      341,
      345
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      341,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_update_after_digest": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      367
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      367
     ]
    },
    "TypeError": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_update_negative": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      351
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      351
     ]
    },
    "TypeError": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES.test_verify": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      384
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      384
     ]
    },
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      387
     ]
    },
    "ValueError": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_ChaCha20": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_Poly1305.unittest": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_ChaCha20.test_new_negative": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20": {
     "line number": [
      484
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      484
     ]
    },
    "ValueError": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_ChaCha20.test_new_positive": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "Crypto.Cipher.ChaCha20": {
     "line number": [
      474,
      478
     ]
    },
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      474,
      478
     ]
    },
    "len": {
     "line number": [
      476,
      479
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_Basic": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "object": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_Basic.new": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "Crypto.Hash.Poly1305.Poly1305_MAC": {
     "line number": [
      513
     ]
    },
    "len": {
     "line number": [
      508
     ]
    },
    "staticmethod": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_MAC": {
  "data": {
   "shadows": "Crypto.Hash.Poly1305.Poly1305_MAC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_New": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "object": {
     "line number": [
      491
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_New.new": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": {
    "Crypto.Hash.Poly1305.new": {
     "line number": [
      499
     ]
    },
    "dict": {
     "line number": [
      495
     ]
    },
    "len": {
     "line number": [
      496
     ]
    },
    "staticmethod": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.get_tests": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_Poly1305.Poly1305AES_MC": {
     "line number": [
      538
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_AES": {
     "line number": [
      539
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.Poly1305Test_ChaCha20": {
     "line number": [
      540
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_Basic": {
     "line number": [
      535
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.Poly1305_New": {
     "line number": [
      536,
      537
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.test_data_aes": {
     "line number": [
      536
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.test_data_basic": {
     "line number": [
      535
     ]
    },
    "Crypto.SelfTest.Hash.test_Poly1305.test_data_chacha20": {
     "line number": [
      537
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      539,
      540
     ]
    },
    "make_mac_tests": {
     "line number": [
      535,
      536,
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.suite": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.test_data_aes": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.test_data_basic": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.test_data_chacha20": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_Poly1305.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_RIPEMD160": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_RIPEMD160"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_RIPEMD160.RIPEMD160": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_RIPEMD160.get_tests": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160": {
     "line number": [
      62
     ]
    },
    "Crypto.SelfTest.Hash.test_RIPEMD160.test_data": {
     "line number": [
      62
     ]
    },
    "make_hash_tests": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_RIPEMD160.suite": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_RIPEMD160.test_data": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_RIPEMD160.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA1": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA1.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA1.get_tests": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      68
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      74
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA1.test_data_various": {
     "line number": [
      63
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      58
     ]
    },
    "binascii.hexlify": {
     "line number": [
      72
     ]
    },
    "int": {
     "line number": [
      61
     ]
    },
    "make_hash_tests": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA1.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA1.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA1.suite": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA1.test_data_various": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA1.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA224": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA224.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA224.get_tests": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.Hash.SHA224": {
     "line number": [
      54
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA224.test_data": {
     "line number": [
      54
     ]
    },
    "make_hash_tests": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA224.suite": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA224.test_data": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA224.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA256": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA256.LargeSHA256Test": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA256.unittest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHA256.LargeSHA256Test.runTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.new": {
     "line number": [
      36
     ]
    },
    "bchr": {
     "line number": [
      34
     ]
    },
    "range": {
     "line number": [
      37,
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA256.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA256.get_tests": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256": {
     "line number": [
      80
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA256.LargeSHA256Test": {
     "line number": [
      85
     ]
    },
    "make_hash_tests": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA256.suite": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA256.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA384": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA384.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA384.get_tests": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Hash.SHA384": {
     "line number": [
      52
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA384.test_data": {
     "line number": [
      52
     ]
    },
    "make_hash_tests": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA384.suite": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA384.test_data": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA384.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA3_224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.APITest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA3_224.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.APITest.test_update_after_digest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_224.new": {
     "line number": [
      40,
      43,
      46
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      37
     ]
    },
    "TypeError": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.SHA3": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.get_tests": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_224": {
     "line number": [
      70
     ]
    },
    "Crypto.Hash.SHA3_224.digest_size": {
     "line number": [
      71
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_224.APITest": {
     "line number": [
      73
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      59
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      73
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      67
     ]
    },
    "binascii.hexlify": {
     "line number": [
      68
     ]
    },
    "int": {
     "line number": [
      62
     ]
    },
    "make_hash_tests": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.suite": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA3_224.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA3_256.get_tests": {
     "line number": [
      79
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_256.unittest": {
     "line number": [
      79,
      80
     ]
    },
    "__name__": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.APITest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA3_256.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.APITest.test_update_after_digest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_256.new": {
     "line number": [
      40,
      43,
      46
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      37
     ]
    },
    "TypeError": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.SHA3": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.get_tests": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_256": {
     "line number": [
      71
     ]
    },
    "Crypto.Hash.SHA3_256.digest_size": {
     "line number": [
      72
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_256.APITest": {
     "line number": [
      74
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      59
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      74
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      67
     ]
    },
    "binascii.hexlify": {
     "line number": [
      68
     ]
    },
    "int": {
     "line number": [
      62
     ]
    },
    "make_hash_tests": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.suite": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA3_256.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA3_384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.APITest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA3_384.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.APITest.test_update_after_digest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_384.new": {
     "line number": [
      40,
      43,
      46
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      37
     ]
    },
    "TypeError": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.SHA3": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.get_tests": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_384": {
     "line number": [
      70
     ]
    },
    "Crypto.Hash.SHA3_384.digest_size": {
     "line number": [
      71
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_384.APITest": {
     "line number": [
      73
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      59
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      73
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      67
     ]
    },
    "binascii.hexlify": {
     "line number": [
      68
     ]
    },
    "int": {
     "line number": [
      62
     ]
    },
    "make_hash_tests": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.suite": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA3_384.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA3_512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.APITest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA3_512.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.APITest.test_update_after_digest": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_512.new": {
     "line number": [
      40,
      43,
      46
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      37
     ]
    },
    "TypeError": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.SHA3": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.get_tests": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Hash.SHA3_512": {
     "line number": [
      70
     ]
    },
    "Crypto.Hash.SHA3_512.digest_size": {
     "line number": [
      71
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA3_512.APITest": {
     "line number": [
      73
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      59
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      73
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      67
     ]
    },
    "binascii.hexlify": {
     "line number": [
      68
     ]
    },
    "int": {
     "line number": [
      62
     ]
    },
    "make_hash_tests": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.suite": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA3_512.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA512": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA512.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA512.get_tests": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHA512.get_tests_SHA512": {
     "line number": [
      130
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA512.get_tests_SHA512_224": {
     "line number": [
      131
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA512.get_tests_SHA512_256": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA512.get_tests_SHA512": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      65
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      71
     ]
    },
    "Crypto.SelfTest.Hash.test_SHA512.test_data_512_other": {
     "line number": [
      60
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      55
     ]
    },
    "binascii.hexlify": {
     "line number": [
      69
     ]
    },
    "int": {
     "line number": [
      58
     ]
    },
    "make_hash_tests": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA512.get_tests_SHA512_224": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      89
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      95
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      79
     ]
    },
    "binascii.hexlify": {
     "line number": [
      93
     ]
    },
    "int": {
     "line number": [
      82
     ]
    },
    "make_hash_tests": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA512.get_tests_SHA512_256": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      114
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      120
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      104
     ]
    },
    "binascii.hexlify": {
     "line number": [
      118
     ]
    },
    "int": {
     "line number": [
      107
     ]
    },
    "make_hash_tests": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHA512.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA512.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHA512.suite": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA512.test_data_512_other": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHA512.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_SHAKE"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKE128Test": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128": {
     "line number": [
      83
     ]
    },
    "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKE256": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKE256Test": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE256": {
     "line number": [
      87
     ]
    },
    "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHAKE.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest.test_digest": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      72
     ]
    },
    "isinstance": {
     "line number": [
      72
     ]
    },
    "len": {
     "line number": [
      73
     ]
    },
    "type": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest.test_new_positive": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest.test_update": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      55,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest.test_update_after_read": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      77,
      79
     ]
    },
    "TypeError": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKETest.test_update_negative": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.SHAKEVectors": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHAKE.unittest": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.data": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.get_tests": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_SHAKE.SHAKE128Test": {
     "line number": [
      134
     ]
    },
    "Crypto.SelfTest.Hash.test_SHAKE.SHAKE256Test": {
     "line number": [
      135
     ]
    },
    "Crypto.SelfTest.Hash.test_SHAKE.SHAKEVectors": {
     "line number": [
      136
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      134,
      135,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.new_test": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE256.new": {
     "line number": [
      125
     ]
    },
    "Crypto.SelfTest.Hash.test_SHAKE.data": {
     "line number": [
      124,
      125
     ]
    },
    "len": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.suite": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.test_vectors_128": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.test_vectors_256": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_SHAKE.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak": {
  "data": {
   "shadows": "Crypto.SelfTest.Hash.test_keccak"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_keccak.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_digest": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      100
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      106
     ]
    },
    "isinstance": {
     "line number": [
      106
     ]
    },
    "type": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_hex_digest": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      109
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      114
     ]
    },
    "binascii.hexlify": {
     "line number": [
      114
     ]
    },
    "isinstance": {
     "line number": [
      118
     ]
    },
    "type": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_new_negative": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      69,
      71,
      74,
      79,
      80,
      81,
      82,
      83,
      84
     ]
    },
    "TypeError": {
     "line number": [
      69,
      74
     ]
    },
    "ValueError": {
     "line number": [
      79,
      80,
      81,
      82,
      83,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_new_positive": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      47,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_new_positive2": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      62,
      63
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      62,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_update": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      88,
      91
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      87,
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_update_after_digest": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      124,
      127,
      130
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      121
     ]
    },
    "TypeError": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakTest.test_update_negative": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      96
     ]
    },
    "TypeError": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.KeccakVectors": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_keccak.unittest": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Hash.test_keccak.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.data": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_keccak.get_tests": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "Crypto.SelfTest.Hash.test_keccak.KeccakTest": {
     "line number": [
      242
     ]
    },
    "Crypto.SelfTest.Hash.test_keccak.KeccakVectors": {
     "line number": [
      243
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      242,
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.keccak": {
  "data": {
   "shadows": "Crypto.Hash.keccak"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.new_test": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "Crypto.Hash.keccak.new": {
     "line number": [
      234
     ]
    },
    "Crypto.SelfTest.Hash.test_keccak.data": {
     "line number": [
      233,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Hash.test_keccak.suite": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_keccak.test_vectors_224": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_keccak.test_vectors_256": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_keccak.test_vectors_384": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_keccak.test_vectors_512": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Hash.test_keccak.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.test_keccak.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Hash.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.get_tests": {
     "line number": [
      44
     ]
    },
    "Crypto.SelfTest.IO.unittest": {
     "line number": [
      44,
      45
     ]
    },
    "__name__": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.IO.get_tests": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PBES.get_tests": {
     "line number": [
      39
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.get_tests": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.suite": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.test_PBES": {
  "data": {
   "shadows": "Crypto.SelfTest.IO.test_PBES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PBES.PBES2": {
  "data": {
   "shadows": "Crypto.IO._PBES.PBES2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PBES.unittest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.setUp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "b": {
     "line number": [
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.test1": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      51
     ]
    },
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.test2": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      57
     ]
    },
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.test3": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      63
     ]
    },
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.test4": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      69
     ]
    },
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.test5": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      75
     ]
    },
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.TestPBES2.test6": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.IO._PBES.PBES2.decrypt": {
     "line number": [
      81
     ]
    },
    "Crypto.IO._PBES.PBES2.encrypt": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.get_tests": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PBES.TestPBES2": {
     "line number": [
      88
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PBES.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PBES.suite": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.test_PBES.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PKCS8": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PKCS8.get_tests": {
     "line number": [
      421
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.unittest": {
     "line number": [
      421,
      422
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.wrapped_enc_keys": {
     "line number": [
      103,
      133,
      163,
      192,
      221,
      251,
      283,
      315
     ]
    },
    "__name__": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8": {
  "data": {
   "shadows": "Crypto.IO.PKCS8"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PKCS8.unittest": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt.setUp": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PKCS8.clear_key": {
     "line number": [
      359
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.oid_key": {
     "line number": [
      358
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.txt2bin": {
     "line number": [
      359,
      360,
      366,
      367,
      368
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.wrapped_clear_key": {
     "line number": [
      360
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.wrapped_enc_keys": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt.test1": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.unwrap": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt.test2": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.unwrap": {
     "line number": [
      382
     ]
    },
    "Crypto.IO.PKCS8.wrap": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt.test3": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.unwrap": {
     "line number": [
      392
     ]
    },
    "b": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt.test4": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "Crypto.IO.PKCS8.wrap": {
     "line number": [
      404
     ]
    },
    "Crypto.SelfTest.IO.test_PKCS8.Rng": {
     "line number": [
      402
     ]
    },
    "b": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.Rng": {
  "data": {
   "lineno": 346
  },
  "type": "class"
 },
 "Crypto.SelfTest.IO.test_PKCS8.Rng.__call__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.Rng.__init__": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.clear_key": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.test_PKCS8.get_tests": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": {
    "Crypto.SelfTest.IO.test_PKCS8.PKCS8_Decrypt": {
     "line number": [
      417
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PKCS8.oid_key": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.test_PKCS8.suite": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.test_PKCS8.txt2bin": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": {
    "b": {
     "line number": [
      343,
      343
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.IO.test_PKCS8.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PKCS8.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.IO.test_PKCS8.wrapped_clear_key": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.test_PKCS8.wrapped_enc_keys": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "Crypto.SelfTest.IO.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.get_tests": {
     "line number": [
      48
     ]
    },
    "Crypto.SelfTest.Math.unittest": {
     "line number": [
      48,
      49
     ]
    },
    "__name__": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Math.get_tests": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.get_tests": {
     "line number": [
      41
     ]
    },
    "Crypto.SelfTest.Math.test_Primality.get_tests": {
     "line number": [
      42
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.get_tests": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.suite": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Math.test_Numbers": {
  "data": {
   "shadows": "Crypto.SelfTest.Math.test_Numbers"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Numbers.IntegerCustom": {
  "data": {
   "shadows": "Crypto.Math._IntegerCustom.IntegerCustom"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Numbers.IntegerGMP": {
  "data": {
   "shadows": "Crypto.Math._IntegerGMP.IntegerGMP"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Numbers.IntegerNative": {
  "data": {
   "shadows": "Crypto.Math._IntegerNative.IntegerNative"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.unittest": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.Integers": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "map": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase._test_left_shift": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      445,
      446
     ]
    },
    "isinstance": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.setUp": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_abs": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      292,
      293,
      294,
      295,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_addition": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_and": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_bool": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      191,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_conversion_from_bytes": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Integer": {
     "line number": [
      118,
      121
     ]
    },
    "Integer.from_bytes": {
     "line number": [
      120,
      124,
      127
     ]
    },
    "b": {
     "line number": [
      120,
      124,
      127
     ]
    },
    "isinstance": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_conversion_to_bytes": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Integer": {
     "line number": [
      104,
      106,
      109,
      114
     ]
    },
    "ValueError": {
     "line number": [
      112,
      115
     ]
    },
    "b": {
     "line number": [
      107,
      110,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_conversion_to_int": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "int": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_conversion_to_str": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "str": {
     "line number": [
      93,
      94,
      95,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_equality_with_ints": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_fail_if_divisible_by": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      539,
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_floor_div": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      240
     ]
    },
    "isinstance": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_gcd": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_get_bit": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      476,
      479,
      480,
      481,
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_hex": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": {
    "hex": {
     "line number": [
      674
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_add": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_left_shift": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      461,
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_left_shift.l": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_left_shift.m": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_modulus": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_modulus.t": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_mul": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_right_shift": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      426
     ]
    },
    "m1": {
     "line number": [
      431
     ]
    },
    "m2": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_right_shift.l": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_right_shift.m1": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_right_shift.m2": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_in_place_sub": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_inequality": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_init_and_equality": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Integer": {
     "line number": [
      57,
      58,
      59,
      60,
      62,
      63,
      74,
      77
     ]
    },
    "ValueError": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_inplace_exponentiation": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_inplace_inverse": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_inverse": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      580,
      581,
      582
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      583
     ]
    },
    "isinstance": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_is_negative": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_jacobi_symbol": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      632,
      633,
      634,
      635,
      636,
      637,
      638,
      639
     ]
    },
    "js": {
     "line number": [
      627,
      629,
      632,
      633,
      634,
      635,
      636,
      637,
      638,
      639,
      642,
      643,
      644
     ]
    },
    "range": {
     "line number": [
      626,
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_jacobi_symbol_wikipedia": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "js": {
     "line number": [
      666,
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_lcm": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_less_than": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_less_than_or_equal": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_modular_exponentiation": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      278,
      279
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      277
     ]
    },
    "isinstance": {
     "line number": [
      268
     ]
    },
    "pow": {
     "line number": [
      268,
      269,
      270,
      271,
      272,
      273,
      274,
      275,
      277,
      278,
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_more_than": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_more_than_or_equal": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_multiplication": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_multiply_accumulate": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_odd_even": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_or": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_perfect_square": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "range": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_remainder": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      251
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      250
     ]
    },
    "isinstance": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_repr": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_right_shift": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      407
     ]
    },
    "isinstance": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_set": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_simple_exponentiation": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      263
     ]
    },
    "isinstance": {
     "line number": [
      255
     ]
    },
    "pow": {
     "line number": [
      257,
      259,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_size_in_bits": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_size_in_bytes": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      513
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_sqrt": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_sqrt_module": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      309,
      310,
      324,
      327
     ]
    },
    "range": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase.test_subtraction": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerInt": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase": {
     "line number": [
      677
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Numbers.TestIntegerInt.setUp": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": {
    "Crypto.Math._IntegerNative.IntegerNative": {
     "line number": [
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.get_tests": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.TestIntegerInt": {
     "line number": [
      742
     ]
    },
    "Crypto.SelfTest.Math.test_Numbers.sys": {
     "line number": [
      753,
      754,
      756,
      767
     ]
    },
    "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom": {
     "line number": [
      769
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      742,
      751,
      765,
      769
     ]
    },
    "ImportError": {
     "line number": [
      752,
      766
     ]
    },
    "OSError": {
     "line number": [
      752,
      766
     ]
    },
    "str": {
     "line number": [
      756,
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.get_tests.TestIntegerCustomModexp": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Numbers.get_tests.TestIntegerCustomModexp.setUp": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "Crypto.Math._IntegerCustom.IntegerCustom": {
     "line number": [
      763
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.get_tests.TestIntegerGMP": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.TestIntegerBase": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Numbers.get_tests.TestIntegerGMP.setUp": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "Crypto.Math._IntegerGMP.IntegerGMP": {
     "line number": [
      749
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Numbers.suite": {
  "data": {
   "lineno": 773
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Math.test_Numbers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Numbers.unittest": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_bits_custom_rng": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "Crypto.Math._IntegerNative.IntegerNative.random": {
     "line number": [
      721
     ]
    },
    "CustomRNG": {
     "line number": [
      720
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_bits_custom_rng.CustomRNG": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "object": {
     "line number": [
      712
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_bits_custom_rng.CustomRNG.__call__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "bchr": {
     "line number": [
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_bits_custom_rng.CustomRNG.__init__": {
  "data": {
   "lineno": 713
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_exact_bits": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": {
    "Crypto.Math._IntegerNative.IntegerNative.random": {
     "line number": [
      688,
      693
     ]
    },
    "range": {
     "line number": [
      687,
      692
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_max_bits": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "Crypto.Math._IntegerNative.IntegerNative.random": {
     "line number": [
      701,
      707
     ]
    },
    "range": {
     "line number": [
      700,
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.testIntegerRandom.test_random_range": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "Crypto.Math._IntegerNative.IntegerNative.random_range": {
     "line number": [
      726
     ]
    },
    "ValueError": {
     "line number": [
      736,
      738
     ]
    },
    "func": {
     "line number": [
      729,
      733,
      736,
      738
     ]
    },
    "range": {
     "line number": [
      728,
      732
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Numbers.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality": {
  "data": {
   "shadows": "Crypto.SelfTest.Math.test_Primality"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.COMPOSITE": {
  "data": {
   "shadows": "Crypto.Math.Primality.COMPOSITE"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.PROBABLY_PRIME": {
  "data": {
   "shadows": "Crypto.Math.Primality.PROBABLY_PRIME"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Primality.unittest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_generate_prime_bit_size": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.Math.Primality.generate_probable_prime": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_generate_prime_filter": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Crypto.Math.Primality.generate_probable_prime": {
     "line number": [
      103
     ]
    },
    "range": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_generate_prime_filter.ending_with_one": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_generate_safe_prime": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.Math.Primality.generate_probable_safe_prime": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_is_prime": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      87
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      79,
      92
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      79,
      87,
      91
     ]
    },
    "Crypto.Util.number.sieve_base": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_lucas": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      70
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      67
     ]
    },
    "Crypto.Math.Primality.lucas_test": {
     "line number": [
      66,
      69,
      71
     ]
    },
    "ValueError": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.TestPrimality.test_miller_rabin": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Crypto.Math.Primality.COMPOSITE": {
     "line number": [
      61
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      59
     ]
    },
    "Crypto.Math.Primality.miller_rabin_test": {
     "line number": [
      59,
      61,
      62
     ]
    },
    "ValueError": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.generate_probable_prime": {
  "data": {
   "shadows": "Crypto.Math.Primality.generate_probable_prime"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.generate_probable_safe_prime": {
  "data": {
   "shadows": "Crypto.Math.Primality.generate_probable_safe_prime"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.get_tests": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_Primality.TestPrimality": {
     "line number": [
      113
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_Primality.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.lucas_test": {
  "data": {
   "shadows": "Crypto.Math.Primality.lucas_test"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.miller_rabin_test": {
  "data": {
   "shadows": "Crypto.Math.Primality.miller_rabin_test"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.sieve_base": {
  "data": {
   "shadows": "Crypto.Util.number.sieve_base"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.suite": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Math.test_Primality.test_probable_prime": {
  "data": {
   "shadows": "Crypto.Math.Primality.test_probable_prime"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_Primality.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp": {
  "data": {
   "shadows": "Crypto.SelfTest.Math.test_modexp"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.ExceptionModulus": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_modexp.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.StrongRandom": {
  "data": {
   "shadows": "Crypto.Random.random.StrongRandom"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.unittest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_even_modulus": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.ExceptionModulus": {
     "line number": [
      125
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.exponent1": {
     "line number": [
      125
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.modulus1": {
     "line number": [
      124,
      125
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_large_1": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.exponent1": {
     "line number": [
      99,
      100
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.modulus1": {
     "line number": [
      99,
      100
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      100
     ]
    },
    "pow": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_larger_exponent": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.modulus1": {
     "line number": [
      118,
      119,
      119,
      120,
      120
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      120
     ]
    },
    "pow": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_several_lengths": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      128
     ]
    },
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      130,
      131,
      132
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      135
     ]
    },
    "b": {
     "line number": [
      128
     ]
    },
    "pow": {
     "line number": [
      134
     ]
    },
    "range": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_small": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_stress_63": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.create_rng": {
     "line number": [
      157
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      165
     ]
    },
    "b": {
     "line number": [
      157
     ]
    },
    "pow": {
     "line number": [
      164
     ]
    },
    "range": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_stress_64": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.create_rng": {
     "line number": [
      169
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      177
     ]
    },
    "b": {
     "line number": [
      169
     ]
    },
    "pow": {
     "line number": [
      176
     ]
    },
    "range": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_stress_65": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.create_rng": {
     "line number": [
      181
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      189
     ]
    },
    "b": {
     "line number": [
      181
     ]
    },
    "pow": {
     "line number": [
      188
     ]
    },
    "range": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_variable_exponent": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.create_rng": {
     "line number": [
      139
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      147,
      153
     ]
    },
    "b": {
     "line number": [
      139
     ]
    },
    "pow": {
     "line number": [
      146,
      152
     ]
    },
    "range": {
     "line number": [
      140,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_zero_base": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.exponent1": {
     "line number": [
      109
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.modulus1": {
     "line number": [
      109
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_zero_exp": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.modulus1": {
     "line number": [
      105
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.TestModExp.test_zero_modulus": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.ExceptionModulus": {
     "line number": [
      114,
      115
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.exponent1": {
     "line number": [
      114
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.monty_pow": {
     "line number": [
      114,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp._raw_montgomery": {
  "data": {
   "shadows": "Crypto.Math._IntegerCustom._raw_montgomery"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.c_ulonglong": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_ulonglong"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.create_rng": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      58
     ]
    },
    "Crypto.Random.random.StrongRandom": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.exponent1": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Math.test_modexp.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.get_tests": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "Crypto.SelfTest.Math.test_modexp.TestModExp": {
     "line number": [
      195
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.test_modexp.modulus1": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Math.test_modexp.monty_pow": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Math._IntegerCustom._raw_montgomery.monty_pow": {
     "line number": [
      71
     ]
    },
    "Crypto.SelfTest.Math.test_modexp.ExceptionModulus": {
     "line number": [
      81
     ]
    },
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      76
     ]
    },
    "Crypto.Util._raw_api.c_ulonglong": {
     "line number": [
      77
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      70
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      85
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      85
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      65,
      67
     ]
    },
    "ValueError": {
     "line number": [
      83
     ]
    },
    "len": {
     "line number": [
      65
     ]
    },
    "max": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Math.test_modexp.suite": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Math.test_modexp.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Math.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.get_tests": {
     "line number": [
      41
     ]
    },
    "Crypto.SelfTest.Protocol.unittest": {
     "line number": [
      41,
      42
     ]
    },
    "__name__": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Protocol.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Protocol.get_tests": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.get_tests": {
     "line number": [
      32
     ]
    },
    "Crypto.SelfTest.Protocol.test_SecretSharing.get_tests": {
     "line number": [
      35
     ]
    },
    "Crypto.SelfTest.Protocol.test_rfc1751.get_tests": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.suite": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Protocol.test_KDF": {
  "data": {
   "shadows": "Crypto.SelfTest.Protocol.test_KDF"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.AES": {
  "data": {
   "shadows": "Crypto.Cipher.AES"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.DES3": {
  "data": {
   "shadows": "Crypto.Cipher.DES3"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.HKDF": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.HKDF"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.HKDF_Tests": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      269,
      279,
      304,
      314
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      224,
      234,
      259
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.HKDF_Tests.test1": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.HKDF": {
     "line number": [
      330
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.t2b": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.HKDF_Tests.test2": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      334,
      337,
      341
     ]
    },
    "Crypto.Protocol.KDF.HKDF": {
     "line number": [
      334,
      337,
      341
     ]
    },
    "b": {
     "line number": [
      334,
      334,
      337,
      337,
      341,
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.HMAC": {
  "data": {
   "shadows": "Crypto.Hash.HMAC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.MD5": {
  "data": {
   "shadows": "Crypto.Hash.MD5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF1": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.PBKDF1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF1_Tests": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF1_Tests.test1": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      67
     ]
    },
    "Crypto.Protocol.KDF.PBKDF1": {
     "line number": [
      67
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.t2b": {
     "line number": [
      67,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.PBKDF2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      82,
      84,
      85,
      86,
      88,
      89
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      91,
      92
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test1": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      113
     ]
    },
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      114,
      117,
      120
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.t2b": {
     "line number": [
      107,
      111
     ]
    },
    "len": {
     "line number": [
      104
     ]
    },
    "range": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test1.prf_SHA1": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      99
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test1.prf_SHA256": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      102
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test2": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      129
     ]
    },
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      128
     ]
    },
    "ValueError": {
     "line number": [
      128
     ]
    },
    "b": {
     "line number": [
      128,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test2.prf_SHA1": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      126
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test3": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      140
     ]
    },
    "Crypto.Hash.MD5": {
     "line number": [
      137
     ]
    },
    "Crypto.Hash.SHA1": {
     "line number": [
      137
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      137
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      137
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      137
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      137
     ]
    },
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      139,
      141
     ]
    },
    "b": {
     "line number": [
      134,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests.test4": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.PBKDF2": {
     "line number": [
      147,
      148,
      151,
      152
     ]
    },
    "b": {
     "line number": [
      147,
      148,
      148,
      151,
      152,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.S2V_Tests": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      173,
      187
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.S2V_Tests.test1": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._S2V.new": {
     "line number": [
      195
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.t2b": {
     "line number": [
      195,
      197,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.S2V_Tests.test2": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "Crypto.Cipher.AES": {
     "line number": [
      205
     ]
    },
    "Crypto.Cipher.DES3": {
     "line number": [
      205
     ]
    },
    "Crypto.Protocol.KDF._S2V.new": {
     "line number": [
      206
     ]
    },
    "TypeError": {
     "line number": [
      210
     ]
    },
    "b": {
     "line number": [
      209,
      210
     ]
    },
    "bchr": {
     "line number": [
      204,
      204
     ]
    },
    "range": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVector": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "object": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      645
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.__init__": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.add_tests": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      659
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      661
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      663
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      665
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.TestVector": {
     "line number": [
      672,
      675
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.json": {
     "line number": [
      655
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      654
     ]
    },
    "ValueError": {
     "line number": [
      667
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      678,
      679,
      680,
      682
     ]
    },
    "collections.namedtuple": {
     "line number": [
      672
     ]
    },
    "int": {
     "line number": [
      681
     ]
    },
    "open": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.runTest": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.setUp": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.shortDescription": {
  "data": {
   "lineno": 697
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.test_verify": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.HKDF": {
     "line number": [
      709
     ]
    },
    "ValueError": {
     "line number": [
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof.warn": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.warnings": {
     "line number": [
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF._S2V": {
  "data": {
   "shadows": "Crypto.Protocol.KDF._S2V"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF._bcrypt_decode": {
  "data": {
   "shadows": "Crypto.Protocol.KDF._bcrypt_decode"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.bcrypt"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      449
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_bytearray_mismatch": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      461
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      462,
      464,
      467,
      470
     ]
    },
    "ValueError": {
     "line number": [
      467,
      470
     ]
    },
    "bchr": {
     "line number": [
      466
     ]
    },
    "bytearray": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_empty_password": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      485
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      485
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      487
     ]
    },
    "enumerate": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_increasing_password_length": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      594
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      594
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      596
     ]
    },
    "enumerate": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_long_passwords": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      568
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      568
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      570
     ]
    },
    "enumerate": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_negative_cases": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      452,
      453,
      454,
      455,
      456,
      457,
      458
     ]
    },
    "ValueError": {
     "line number": [
      452,
      453,
      454,
      455,
      456,
      457,
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_non_ascii_characters": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      618
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      618
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      620
     ]
    },
    "enumerate": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_random_password_and_salt_long_pw": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      521
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      521
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      523
     ]
    },
    "enumerate": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_random_password_and_salt_short_pw": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      503
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      503
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      505
     ]
    },
    "enumerate": {
     "line number": [
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_same_password_and_random_salt": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      534
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      534
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      536
     ]
    },
    "enumerate": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_same_password_and_salt_increasing_cost_factor": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      552
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      552
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      554
     ]
    },
    "enumerate": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests.test_special_case_salt": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF._bcrypt_decode": {
     "line number": [
      640
     ]
    },
    "Crypto.Protocol.KDF.bcrypt": {
     "line number": [
      640
     ]
    },
    "Crypto.Protocol.KDF.bcrypt_check": {
     "line number": [
      642
     ]
    },
    "enumerate": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.bcrypt_check": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.bcrypt_check"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.get_tests": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.HKDF_Tests": {
     "line number": [
      735
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.PBKDF1_Tests": {
     "line number": [
      732
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.PBKDF2_Tests": {
     "line number": [
      728,
      728,
      733
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.S2V_Tests": {
     "line number": [
      734
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.TestVectorsHKDFWycheproof": {
     "line number": [
      736
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.bcrypt_Tests": {
     "line number": [
      738
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.scrypt_Tests": {
     "line number": [
      729,
      729,
      737
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      732,
      733,
      734,
      735,
      737,
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.scrypt": {
  "data": {
   "shadows": "Crypto.Protocol.KDF.scrypt"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.scrypt_Tests": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.unittest": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_KDF.scrypt_Tests.setUp": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_KDF.TestVector": {
     "line number": [
      412
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.t2b": {
     "line number": [
      418
     ]
    },
    "b": {
     "line number": [
      413,
      414
     ]
    },
    "len": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.scrypt_Tests.test2": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.scrypt": {
     "line number": [
      427
     ]
    },
    "Crypto.SelfTest.Protocol.test_KDF.warnings": {
     "line number": [
      431
     ]
    },
    "RuntimeWarning": {
     "line number": [
      431
     ]
    },
    "ValueError": {
     "line number": [
      428
     ]
    },
    "str": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.scrypt_Tests.test3": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "Crypto.Protocol.KDF.scrypt": {
     "line number": [
      438,
      441,
      445
     ]
    },
    "b": {
     "line number": [
      438,
      438,
      441,
      441,
      445,
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.suite": {
  "data": {
   "lineno": 744
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Protocol.test_KDF.t2b": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "b": {
     "line number": [
      44
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_KDF.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_KDF.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing": {
  "data": {
   "shadows": "Crypto.SelfTest.Protocol.test_SecretSharing"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Element_Tests": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "unittest.TestCase": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Element_Tests.test1": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      89,
      93,
      98
     ]
    },
    "ValueError": {
     "line number": [
      98
     ]
    },
    "b": {
     "line number": [
      91,
      93,
      95
     ]
    },
    "bchr": {
     "line number": [
      91,
      93,
      95,
      98
     ]
    },
    "int": {
     "line number": [
      90,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Element_Tests.test2": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      102,
      103
     ]
    },
    "int": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Element_Tests.test3": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      108,
      109,
      110,
      112,
      115,
      118
     ]
    },
    "int": {
     "line number": [
      113,
      116,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Element_Tests.test4": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._Element": {
     "line number": [
      123,
      128
     ]
    },
    "int": {
     "line number": [
      126,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.GF2_Tests": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "unittest.TestCase": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.GF2_Tests.test_div_gf2": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._div_gf2": {
     "line number": [
      75,
      81
     ]
    },
    "Crypto.Protocol.SecretSharing._mult_gf2": {
     "line number": [
      78
     ]
    },
    "Crypto.Util.number.size": {
     "line number": [
      76,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.GF2_Tests.test_mult_gf2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing._mult_gf2": {
     "line number": [
      47,
      51,
      55,
      57,
      59,
      66,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir": {
  "data": {
   "shadows": "Crypto.Protocol.SecretSharing.Shamir"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "unittest.TestCase": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests.test1": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing.Shamir.split": {
     "line number": [
      136
     ]
    },
    "bchr": {
     "line number": [
      136
     ]
    },
    "len": {
     "line number": [
      137,
      140
     ]
    },
    "range": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests.test2": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing.Shamir.combine": {
     "line number": [
      225
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      219
     ]
    },
    "enumerate": {
     "line number": [
      221
     ]
    },
    "get_share": {
     "line number": [
      224
     ]
    },
    "itertools.permutations": {
     "line number": [
      221
     ]
    },
    "len": {
     "line number": [
      221
     ]
    },
    "range": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests.test2.get_share": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "binascii.unhexlify": {
     "line number": [
      215
     ]
    },
    "int": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests.test3": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing.Shamir.combine": {
     "line number": [
      234,
      237
     ]
    },
    "Crypto.Protocol.SecretSharing.Shamir.split": {
     "line number": [
      232
     ]
    },
    "b": {
     "line number": [
      230
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests.test4": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing.Shamir.combine": {
     "line number": [
      246
     ]
    },
    "Crypto.Protocol.SecretSharing.Shamir.split": {
     "line number": [
      244
     ]
    },
    "b": {
     "line number": [
      242
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests.test5": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "Crypto.Protocol.SecretSharing.Shamir.combine": {
     "line number": [
      254
     ]
    },
    "Crypto.Protocol.SecretSharing.Shamir.split": {
     "line number": [
      253
     ]
    },
    "ValueError": {
     "line number": [
      254
     ]
    },
    "b": {
     "line number": [
      251
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.TestSuite": {
  "data": {
   "shadows": "unittest.TestSuite"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing._Element": {
  "data": {
   "shadows": "Crypto.Protocol.SecretSharing._Element"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing._div_gf2": {
  "data": {
   "shadows": "Crypto.Protocol.SecretSharing._div_gf2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing._mult_gf2": {
  "data": {
   "shadows": "Crypto.Protocol.SecretSharing._mult_gf2"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.deg": {
  "data": {
   "shadows": "Crypto.Util.number.size"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.get_tests": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_SecretSharing.Element_Tests": {
     "line number": [
      260
     ]
    },
    "Crypto.SelfTest.Protocol.test_SecretSharing.GF2_Tests": {
     "line number": [
      259
     ]
    },
    "Crypto.SelfTest.Protocol.test_SecretSharing.Shamir_Tests": {
     "line number": [
      261
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      259,
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.main": {
  "data": {
   "shadows": "unittest.main"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.suite": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Protocol.test_SecretSharing.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751": {
  "data": {
   "shadows": "Crypto.SelfTest.Protocol.test_rfc1751"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751": {
  "data": {
   "shadows": "Crypto.Util.RFC1751"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751Test_e2k": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_rfc1751.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751Test_e2k.runTest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_rfc1751.binascii": {
     "line number": [
      53
     ]
    },
    "Crypto.SelfTest.Protocol.test_rfc1751.test_data": {
     "line number": [
      52
     ]
    },
    "Crypto.Util.RFC1751.english_to_key": {
     "line number": [
      54
     ]
    },
    "b": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751Test_k2e": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_rfc1751.unittest": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751Test_k2e.runTest": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_rfc1751.binascii": {
     "line number": [
      45
     ]
    },
    "Crypto.SelfTest.Protocol.test_rfc1751.test_data": {
     "line number": [
      44
     ]
    },
    "Crypto.Util.RFC1751.key_to_english": {
     "line number": [
      46
     ]
    },
    "b": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.__revision__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.get_tests": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751Test_e2k": {
     "line number": [
      59
     ]
    },
    "Crypto.SelfTest.Protocol.test_rfc1751.RFC1751Test_k2e": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.test_data": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Protocol.test_rfc1751.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Protocol.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.get_tests": {
     "line number": [
      51
     ]
    },
    "Crypto.SelfTest.PublicKey.unittest": {
     "line number": [
      51,
      52
     ]
    },
    "__name__": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.PublicKey.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.get_tests": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_DSA.get_tests": {
     "line number": [
      33
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.get_tests": {
     "line number": [
      35
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ElGamal.get_tests": {
     "line number": [
      46
     ]
    },
    "Crypto.SelfTest.PublicKey.test_RSA.get_tests": {
     "line number": [
      34
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_DSA.get_tests": {
     "line number": [
      38
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_tests": {
     "line number": [
      44
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.get_tests": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.suite": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_DSA": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_DSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSA": {
  "data": {
   "shadows": "Crypto.PublicKey.DSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSADomainTest": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_DSA.unittest": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSADomainTest._get_weak_domain": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      201,
      209
     ]
    },
    "Crypto.Math.Numbers.Integer.random": {
     "line number": [
      203,
      204,
      206
     ]
    },
    "Crypto.Math.Primality.PROBABLY_PRIME": {
     "line number": [
      202
     ]
    },
    "Crypto.Math.Primality.test_probable_prime": {
     "line number": [
      202
     ]
    },
    "pow": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSADomainTest.test_construct_error_weak_domain": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      232
     ]
    },
    "ValueError": {
     "line number": [
      232
     ]
    },
    "pow": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSADomainTest.test_domain1": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.generate": {
     "line number": [
      186,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSADomainTest.test_generate_error_weak_domain": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.generate": {
     "line number": [
      222
     ]
    },
    "ValueError": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_DSA._sws": {
     "line number": [
      47,
      51,
      55,
      59,
      61,
      63,
      64,
      66,
      67,
      68
     ]
    },
    "Crypto.SelfTest.PublicKey.test_DSA.unittest": {
     "line number": [
      40
     ]
    },
    "Crypto.SelfTest.st_common.b2a_hex": {
     "line number": [
      65
     ]
    },
    "b": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest._check_private_key": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Util.number.size": {
     "line number": [
      132
     ]
    },
    "pow": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest._check_public_key": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      138,
      139
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      138,
      139
     ]
    },
    "Crypto.Util.number.size": {
     "line number": [
      151
     ]
    },
    "TypeError": {
     "line number": [
      155
     ]
    },
    "hasattr": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest._test_signing": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      162,
      163,
      164,
      165
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      162,
      163,
      164,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest._test_verification": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      170,
      171,
      172
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      170,
      171,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.setUp": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_construct_4tuple": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      94
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_construct_5tuple": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      100
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_construct_bad_key4": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      106
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      106
     ]
    },
    "ValueError": {
     "line number": [
      108,
      111,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_construct_bad_key5": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      117
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      117
     ]
    },
    "ValueError": {
     "line number": [
      119,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_generate_1arg": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_generate_2arg": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.Random.new": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.DSATest.test_repr": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      177
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      177
     ]
    },
    "repr": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.Primality": {
  "data": {
   "shadows": "Crypto.Math.Primality"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA._sws": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "b": {
     "line number": [
      38
     ]
    },
    "isinstance": {
     "line number": [
      35
     ]
    },
    "str": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.a2b_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.a2b_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.b2a_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.get_tests": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_DSA.DSADomainTest": {
     "line number": [
      238
     ]
    },
    "Crypto.SelfTest.PublicKey.test_DSA.DSATest": {
     "line number": [
      237
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      237,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.inverse": {
  "data": {
   "shadows": "Crypto.Util.number.inverse"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.size": {
  "data": {
   "shadows": "Crypto.Util.number.size"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.suite": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_DSA.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_ECC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.ECC": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.EccKey": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC.EccKey"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.EccPoint": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC.EccPoint"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256.test_equality": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      584,
      585,
      586
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256.test_invalid_curve": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      576
     ]
    },
    "ValueError": {
     "line number": [
      576
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256.test_invalid_d": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      579,
      580
     ]
    },
    "Crypto.PublicKey.ECC._curves.order": {
     "line number": [
      580
     ]
    },
    "ValueError": {
     "line number": [
      579,
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256.test_private_key": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      545,
      552,
      558,
      559
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      551
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      548,
      551
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      549,
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256.test_public_key": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      564
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      563
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      563
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256.test_public_key_derived": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384.test_equality": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      649,
      650,
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384.test_invalid_curve": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      640
     ]
    },
    "ValueError": {
     "line number": [
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384.test_invalid_d": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      643,
      644
     ]
    },
    "Crypto.PublicKey.ECC._curves.order": {
     "line number": [
      645
     ]
    },
    "ValueError": {
     "line number": [
      643,
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384.test_private_key": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      607,
      614,
      620,
      621,
      622
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      613
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      605
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384.test_public_key": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      628
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      627
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384.test_public_key_derived": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      634
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521.test_equality": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      714,
      715,
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521.test_invalid_curve": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      705
     ]
    },
    "ValueError": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521.test_invalid_d": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      708,
      709
     ]
    },
    "Crypto.PublicKey.ECC._curves.order": {
     "line number": [
      710
     ]
    },
    "ValueError": {
     "line number": [
      708,
      709
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521.test_private_key": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      672,
      679,
      685,
      686,
      687
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      678
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521.test_public_key": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      693
     ]
    },
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      692
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521.test_public_key_derived": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      699
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P256": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      731
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P256.test_construct": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves.G": {
     "line number": [
      749,
      754
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      751
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      752
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      747,
      751,
      757,
      758,
      759
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P256.test_generate": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      737
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      737
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      738
     ]
    },
    "Crypto.PublicKey.ECC.generate": {
     "line number": [
      735,
      742,
      743
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P256.test_negative_construct": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      763
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      763
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      765,
      766
     ]
    },
    "ValueError": {
     "line number": [
      765,
      766
     ]
    },
    "dict": {
     "line number": [
      762,
      763
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P384": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      769
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P384.test_construct": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      784
     ]
    },
    "Crypto.PublicKey.ECC._curves.G": {
     "line number": [
      787
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      785,
      789,
      794,
      795,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P384.test_generate": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      776
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      773
     ]
    },
    "Crypto.PublicKey.ECC.generate": {
     "line number": [
      774,
      779,
      780
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P384.test_negative_construct": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      800
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      800
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      802,
      803
     ]
    },
    "ValueError": {
     "line number": [
      802,
      803
     ]
    },
    "dict": {
     "line number": [
      799,
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P521": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P521.test_construct": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      821
     ]
    },
    "Crypto.PublicKey.ECC._curves.G": {
     "line number": [
      824
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      822,
      826,
      831,
      832,
      833
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P521.test_generate": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      813
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      810
     ]
    },
    "Crypto.PublicKey.ECC.generate": {
     "line number": [
      811,
      816,
      817
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P521.test_negative_construct": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._curves.Gx": {
     "line number": [
      837
     ]
    },
    "Crypto.PublicKey.ECC._curves.Gy": {
     "line number": [
      837
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      839,
      840
     ]
    },
    "ValueError": {
     "line number": [
      839,
      840
     ]
    },
    "dict": {
     "line number": [
      836,
      837
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint.test_mix": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.generate": {
     "line number": [
      45,
      46
     ]
    },
    "ValueError": {
     "line number": [
      51,
      57
     ]
    },
    "str": {
     "line number": [
      52,
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint.test_repr": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      61
     ]
    },
    "repr": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      71,
      75
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_addition": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_copy": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_doubling": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_inplace_addition": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_joing_scalar_multiply": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_negate": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_scalar_multiply": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      187
     ]
    },
    "ValueError": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_set": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256.test_sizes": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      211,
      216
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384._test_inplace_addition": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_addition": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_copy": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_doubling": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_joing_scalar_multiply": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_negate": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      235,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_scalar_multiply": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_set": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384.test_sizes": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      344,
      349
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_addition": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_copy": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_doubling": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_inplace_addition": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_joing_scalar_multiply": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_negate": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      368,
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_scalar_multiply": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_set": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521.test_sizes": {
  "data": {
   "lineno": 470
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_PAI_P256": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      479
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      478
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_PAI_P384": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      501
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      500
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_PAI_P521": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.EccPoint": {
     "line number": [
      523
     ]
    },
    "Crypto.PublicKey.ECC._curves": {
     "line number": [
      522
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
     "line number": [
      519
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ECC._curves": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC._curves"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.get_tests": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P256": {
     "line number": [
      852
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P384": {
     "line number": [
      853
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccKey_P521": {
     "line number": [
      854
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P256": {
     "line number": [
      855
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P384": {
     "line number": [
      856
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccModule_P521": {
     "line number": [
      857
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint": {
     "line number": [
      845
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P256": {
     "line number": [
      846
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P384": {
     "line number": [
      847
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_NIST_P521": {
     "line number": [
      848
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_PAI_P256": {
     "line number": [
      849
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_PAI_P384": {
     "line number": [
      850
     ]
    },
    "Crypto.SelfTest.PublicKey.test_ECC.TestEccPoint_PAI_P521": {
     "line number": [
      851
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      845,
      846,
      847,
      848,
      849,
      850,
      851,
      852,
      853,
      854,
      855,
      856,
      857
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.new_test": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.suite": {
  "data": {
   "lineno": 861
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.tv_pai": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_ECC.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_ElGamal"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamal": {
  "data": {
   "shadows": "Crypto.PublicKey.ElGamal"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ElGamal.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest._check_private_key": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "pow": {
     "line number": [
      181,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest._check_public_key": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "pow": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest._exercise_primitive": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest._exercise_public_primitive": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest._test_random_key": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.generate": {
     "line number": [
      167
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.convert_tv": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      157
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_bad_key3": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.construct": {
     "line number": [
      136,
      140,
      144
     ]
    },
    "ValueError": {
     "line number": [
      136,
      140,
      144
     ]
    },
    "list": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_bad_key4": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.construct": {
     "line number": [
      149
     ]
    },
    "ValueError": {
     "line number": [
      149
     ]
    },
    "list": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_decryption": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.construct": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_encryption": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.construct": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_generate_180": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_signing": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.construct": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest.test_verification": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.PublicKey.ElGamal.construct": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.__revision__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.a2b_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.a2b_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.b2a_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.get_tests": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_ElGamal.ElGamalTest": {
     "line number": [
      211
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.suite": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_ElGamal.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.PicklingError": {
  "data": {
   "shadows": "pickle.PicklingError"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSA": {
  "data": {
   "shadows": "Crypto.PublicKey.RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_RSA.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest._check_decryption": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      298,
      299
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      298,
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest._check_encryption": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      290,
      291
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      294,
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest._check_private_key": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      235
     ]
    },
    "int": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest._check_public_key": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      244
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      264
     ]
    },
    "TypeError": {
     "line number": [
      263
     ]
    },
    "hasattr": {
     "line number": [
      254,
      255,
      256,
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest._exercise_primitive": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      274
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest._exercise_public_primitive": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      284
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.setUp": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA": {
     "line number": [
      102
     ]
    },
    "Crypto.SelfTest.st_common.a2b_hex": {
     "line number": [
      94,
      95
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      94,
      95
     ]
    },
    "Crypto.Util.number.inverse": {
     "line number": [
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_2tuple": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_3tuple": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_4tuple": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_5tuple": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_6tuple": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_bad_key2": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      165,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_bad_key3": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_bad_key5": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      177,
      180,
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_construct_bad_key6": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "Crypto.Util.number.inverse": {
     "line number": [
      190
     ]
    },
    "ValueError": {
     "line number": [
      187,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_factoring": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_generate_1arg": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_generate_2arg": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.Random.new": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_generate_3args": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Random.new": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_raw_rsa_boundary": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      216,
      217,
      219,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_repr": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_serialization": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_RSA.pickle": {
     "line number": [
      209
     ]
    },
    "pickle.PicklingError": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.RSATest.test_size": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.a2b_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.a2b_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.b2a_hex": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.b2a_hex"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.get_tests": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_RSA.RSATest": {
     "line number": [
      308
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.inverse": {
  "data": {
   "shadows": "Crypto.Util.number.inverse"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.suite": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_RSA.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_import_DSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.DSA": {
  "data": {
   "shadows": "Crypto.PublicKey.DSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyFromX509Cert": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_DSA.unittest": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyFromX509Cert.test_x509v1": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      450
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_DSA.re": {
     "line number": [
      453
     ]
    },
    "getattr": {
     "line number": [
      454
     ]
    },
    "int": {
     "line number": [
      453
     ]
    },
    "locals": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyFromX509Cert.test_x509v3": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      534
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_DSA.re": {
     "line number": [
      537
     ]
    },
    "getattr": {
     "line number": [
      538
     ]
    },
    "int": {
     "line number": [
      537
     ]
    },
    "locals": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_DSA.unittest": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.setUp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests": {
     "line number": [
      44
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      47
     ]
    },
    "setattr": {
     "line number": [
      49
     ]
    },
    "tobytes": {
     "line number": [
      47,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportError2": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      360
     ]
    },
    "ValueError": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey1": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey10": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "BytesIO": {
     "line number": [
      349
     ]
    },
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      348
     ]
    },
    "b": {
     "line number": [
      349,
      349
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      349
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey2": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey3": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey4": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey5": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey6": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey7": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testExportKey8": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      284
     ]
    },
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportError1": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      356
     ]
    },
    "ValueError": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey1": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey10": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey2": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      99
     ]
    },
    "tostr": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey3": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey4": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      161
     ]
    },
    "tostr": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey5": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey6": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      220
     ]
    },
    "tostr": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey7": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      241
     ]
    },
    "tostr": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey8": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      274
     ]
    },
    "tostr": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.testImportKey9": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.importKey": {
     "line number": [
      309
     ]
    },
    "tostr": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.test_exportKey": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.test_import_empty": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.import_key": {
     "line number": [
      380
     ]
    },
    "ValueError": {
     "line number": [
      380
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests.test_import_key": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.import_key": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.get_tests": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyFromX509Cert": {
     "line number": [
      548
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_DSA.ImportKeyTests": {
     "line number": [
      547
     ]
    },
    "list_test_cases": {
     "line number": [
      547,
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.suite": {
  "data": {
   "lineno": 552
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_DSA.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_import_ECC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.ECC": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.SHAKE128": {
  "data": {
   "shadows": "Crypto.Hash.SHAKE128"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p256": {
     "line number": [
      477
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_byte_or_string_passphrase": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
     "line number": [
      675,
      679
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_compressed_curve": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      744,
      748
     ]
    },
    "int": {
     "line number": [
      745,
      749
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_error_params1": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      684,
      689,
      693,
      699,
      703,
      705,
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_openssh_compressed": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      641,
      645
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      640
     ]
    },
    "len": {
     "line number": [
      644,
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_openssh_uncompressed": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_der": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_pem_clear": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_pem_encrypted": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      577,
      581,
      589
     ]
    },
    "ValueError": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_pkcs8_and_pem_1": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_pkcs8_and_pem_2": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      610,
      614,
      622
     ]
    },
    "ValueError": {
     "line number": [
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_pkcs8_clear": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_private_pkcs8_encrypted": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_pkcs8": {
     "line number": [
      526,
      528
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      536
     ]
    },
    "ValueError": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_public_der_compressed": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      493
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      492,
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_public_der_uncompressed": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_public_pem_compressed": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      555
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      554,
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_export_public_pem_uncompressed": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_prng": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
     "line number": [
      652,
      656,
      664,
      668
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256.test_unsupported_curve": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.UnsupportedEccFeature": {
     "line number": [
      725
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      724
     ]
    },
    "str": {
     "line number": [
      726
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p384": {
     "line number": [
      755
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      753
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_byte_or_string_passphrase": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
     "line number": [
      953,
      957
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_compressed_curve": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1011,
      1015
     ]
    },
    "int": {
     "line number": [
      1012,
      1016
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_error_params1": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      962,
      967,
      971,
      977,
      981,
      983,
      988
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_openssh_compressed": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      919,
      923
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      918
     ]
    },
    "len": {
     "line number": [
      922,
      922
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_openssh_uncompressed": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      904
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_der": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      778
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_pem_clear": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      841
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_pem_encrypted": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      855,
      859,
      867
     ]
    },
    "ValueError": {
     "line number": [
      855
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_pkcs8_and_pem_1": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      872
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_pkcs8_and_pem_2": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      888,
      892,
      900
     ]
    },
    "ValueError": {
     "line number": [
      888
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_pkcs8_clear": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      789
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_private_pkcs8_encrypted": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_pkcs8": {
     "line number": [
      804,
      806
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      814
     ]
    },
    "ValueError": {
     "line number": [
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_public_der_compressed": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      771
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      770,
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_public_der_uncompressed": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_public_pem_compressed": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      833
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      832,
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_export_public_pem_uncompressed": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384.test_prng": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
     "line number": [
      930,
      934,
      942,
      946
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p521": {
     "line number": [
      1022
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      1020
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_byte_or_string_passphrase": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
     "line number": [
      1220,
      1224
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_compressed_curve": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1280,
      1284
     ]
    },
    "int": {
     "line number": [
      1281,
      1285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_error_params1": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1229,
      1234,
      1238,
      1244,
      1248,
      1250,
      1255
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_openssh_compressed": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1186,
      1190
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1185
     ]
    },
    "len": {
     "line number": [
      1189,
      1189
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_openssh_uncompressed": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1171
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_der": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1045
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_pem_clear": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_pem_encrypted": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1122,
      1126,
      1134
     ]
    },
    "ValueError": {
     "line number": [
      1122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_pkcs8_and_pem_1": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_pkcs8_and_pem_2": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1155,
      1159,
      1167
     ]
    },
    "ValueError": {
     "line number": [
      1155
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_pkcs8_clear": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1056
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_private_pkcs8_encrypted": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_pkcs8": {
     "line number": [
      1071,
      1073
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1081
     ]
    },
    "ValueError": {
     "line number": [
      1071
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_public_der_compressed": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1038
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1037,
      1041
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_public_der_uncompressed": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1025
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_public_pem_compressed": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1100
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1099,
      1103
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_export_public_pem_uncompressed": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      1085
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521.test_prng": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
     "line number": [
      1197,
      1201,
      1209,
      1213
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport.test_empty": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      102
     ]
    },
    "ValueError": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p256": {
     "line number": [
      107
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_openssh_private_clear": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      220,
      221
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      217,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_openssh_private_password": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      228,
      229
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      225,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_openssh_public": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_openssh_public": {
     "line number": [
      210
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      213
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_der": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      127
     ]
    },
    "Crypto.PublicKey.ECC._import_private_der": {
     "line number": [
      124
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      130
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pem": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      181
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pem_encrypted": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      195,
      198
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      193
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pem_with_ecparams": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      188
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      187
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.sys": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pkcs8_clear": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      136
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      139
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pkcs8_encrypted_1": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      151
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      154
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pkcs8_encrypted_2": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      160
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_private_pkcs8_in_pem_clear": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      145
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_public_der": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      115
     ]
    },
    "Crypto.PublicKey.ECC._import_subjectPublicKeyInfo": {
     "line number": [
      112
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      118
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_public_pem": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      175
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_x509_der": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      166
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      169
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256.test_import_x509_pem": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      204
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p384": {
     "line number": [
      235
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_openssh_private_clear": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      341,
      342
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      338,
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_openssh_private_password": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      349,
      350
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      346,
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_openssh_public": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_openssh_public": {
     "line number": [
      331
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      334
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      329
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_der": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      255
     ]
    },
    "Crypto.PublicKey.ECC._import_private_der": {
     "line number": [
      252
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      258
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_pem": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      309
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_pem_encrypted": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      316,
      319
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      314
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_pkcs8_clear": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      264
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      267
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_pkcs8_encrypted_1": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      279
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      282
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_pkcs8_encrypted_2": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      288
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_private_pkcs8_in_pem_clear": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      273
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_public_der": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      243
     ]
    },
    "Crypto.PublicKey.ECC._import_subjectPublicKeyInfo": {
     "line number": [
      240
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      246
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_public_pem": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      303
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      301
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_x509_der": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      294
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      297
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384.test_import_x509_pem": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      325
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p521": {
     "line number": [
      356
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_openssh_private_clear": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      462,
      463
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      459,
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_openssh_private_password": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      470,
      471
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      467,
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_openssh_public": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_openssh_public": {
     "line number": [
      452
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      455
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_der": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      376
     ]
    },
    "Crypto.PublicKey.ECC._import_private_der": {
     "line number": [
      373
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      379
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_pem": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      430
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_pem_encrypted": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      437,
      440
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      435
     ]
    },
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_pkcs8_clear": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      385
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      388
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_pkcs8_encrypted_1": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      400
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      403
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_pkcs8_encrypted_2": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      409
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_private_pkcs8_in_pem_clear": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      394
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_public_der": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      364
     ]
    },
    "Crypto.PublicKey.ECC._import_subjectPublicKeyInfo": {
     "line number": [
      361
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      367
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_public_pem": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      424
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_x509_der": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC._import_der": {
     "line number": [
      415
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      418
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      413
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521.test_import_x509_pem": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      446
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.UnsupportedEccFeature": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC.UnsupportedEccFeature"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.compact": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tostr": {
     "line number": [
      51
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p256": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      63,
      64
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.compact": {
     "line number": [
      57,
      58
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      56
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      57,
      60,
      61
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p384": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      75,
      76
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.compact": {
     "line number": [
      69,
      70
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      68
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      69,
      72,
      73
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.create_ref_keys_p521": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      87,
      88
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.compact": {
     "line number": [
      81,
      82
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
     "line number": [
      80
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      81,
      84,
      85
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.get_fixed_prng": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "Crypto.Hash.SHAKE128.new": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.get_tests": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P256": {
     "line number": [
      1295
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P384": {
     "line number": [
      1296
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestExport_P521": {
     "line number": [
      1297
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport": {
     "line number": [
      1291
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P256": {
     "line number": [
      1292
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P384": {
     "line number": [
      1293
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_ECC.TestImport_P521": {
     "line number": [
      1294
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      1291,
      1292,
      1293,
      1294,
      1295,
      1296,
      1297
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.load_file": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      45
     ]
    },
    "open": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.suite": {
  "data": {
   "lineno": 1301
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.tostr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tostr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_ECC.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA": {
  "data": {
   "shadows": "Crypto.SelfTest.PublicKey.test_import_RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyFromX509Cert": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_RSA.unittest": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyFromX509Cert.test_x509v1": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      446
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.re": {
     "line number": [
      444
     ]
    },
    "int": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyFromX509Cert.test_x509v3": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      498
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.re": {
     "line number": [
      496
     ]
    },
    "int": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_RSA.unittest": {
     "line number": [
      49
     ]
    },
    "Crypto.Util.number.inverse": {
     "line number": [
      161
     ]
    },
    "a2b_hex": {
     "line number": [
      115,
      130,
      145
     ]
    },
    "b": {
     "line number": [
      112
     ]
    },
    "int": {
     "line number": [
      152,
      154,
      155,
      156,
      160
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey1": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey10": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      335
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      339
     ]
    },
    "tostr": {
     "line number": [
      337,
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey11": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      347
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      351
     ]
    },
    "tostr": {
     "line number": [
      349,
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey12": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      359
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      363
     ]
    },
    "tostr": {
     "line number": [
      361,
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey13": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      371
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      376
     ]
    },
    "tostr": {
     "line number": [
      374,
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey14": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      384
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey15": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      394
     ]
    },
    "ValueError": {
     "line number": [
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey2": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey3": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      302
     ]
    },
    "b": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey4": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      307
     ]
    },
    "b": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey5": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey7": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey8": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      324
     ]
    },
    "b": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testExportKey9": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      329
     ]
    },
    "ValueError": {
     "line number": [
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey1": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey10": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey11": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      266
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey12": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      274
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.der2pem": {
     "line number": [
      273
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey2": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey3bytes": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      192
     ]
    },
    "b": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey3unicode": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey4bytes": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      209
     ]
    },
    "b": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey4unicode": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey5": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      216
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey6": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey7": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey8": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.testImportKey9": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.test_exportKey": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.test_import_empty": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      288
     ]
    },
    "ValueError": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.test_import_key": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests.test_import_key_windows_cr_lf": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.RSA": {
  "data": {
   "shadows": "Crypto.PublicKey.RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.TestImport_2048": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_RSA.unittest": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.TestImport_2048.test_import_openssh_private_clear": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      518,
      519
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.load_file": {
     "line number": [
      515,
      516
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.TestImport_2048.test_import_openssh_private_password": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      527,
      528
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.load_file": {
     "line number": [
      524,
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.TestImport_2048.test_import_openssh_public": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      510,
      511
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.load_file": {
     "line number": [
      507,
      508
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.asn1": {
  "data": {
   "shadows": "Crypto.Util.asn1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.der2pem": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_RSA.binascii": {
     "line number": [
      43
     ]
    },
    "b": {
     "line number": [
      44,
      45,
      46
     ]
    },
    "len": {
     "line number": [
      43
     ]
    },
    "range": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.get_tests": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyFromX509Cert": {
     "line number": [
      539
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.ImportKeyTests": {
     "line number": [
      538
     ]
    },
    "Crypto.SelfTest.PublicKey.test_import_RSA.TestImport_2048": {
     "line number": [
      540
     ]
    },
    "list_test_cases": {
     "line number": [
      538,
      539,
      540
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.inverse": {
  "data": {
   "shadows": "Crypto.Util.number.inverse"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.load_file": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      37
     ]
    },
    "open": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.suite": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "Crypto.SelfTest.PublicKey.test_import_RSA.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.PublicKey.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Random.get_tests": {
     "line number": [
      36
     ]
    },
    "Crypto.SelfTest.Random.unittest": {
     "line number": [
      36,
      37
     ]
    },
    "__name__": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Random.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Random.get_tests": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "Crypto.SelfTest.Random.test_random.get_tests": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Random.suite": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Random.test_random": {
  "data": {
   "shadows": "Crypto.SelfTest.Random.test_random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random.test_random.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random.test_random.SimpleTest": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Crypto.SelfTest.Random.test_random.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Random.test_random.SimpleTest.runTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "Crypto.Random.get_random_bytes": {
     "line number": [
      40
     ]
    },
    "Crypto.Random.new": {
     "line number": [
      36
     ]
    },
    "Crypto.Random.random.choice": {
     "line number": [
      95,
      96,
      101,
      102,
      104,
      105,
      106,
      107
     ]
    },
    "Crypto.Random.random.getrandbits": {
     "line number": [
      54,
      55
     ]
    },
    "Crypto.Random.random.randint": {
     "line number": [
      82,
      83,
      88,
      89,
      90,
      91,
      92
     ]
    },
    "Crypto.Random.random.randrange": {
     "line number": [
      65,
      66,
      73,
      74,
      75,
      76,
      77,
      78,
      79,
      80
     ]
    },
    "Crypto.Random.random.sample": {
     "line number": [
      139,
      140,
      145,
      147,
      149,
      151,
      154,
      156,
      158
     ]
    },
    "Crypto.Random.random.shuffle": {
     "line number": [
      113,
      114,
      124,
      128,
      130,
      131,
      132,
      133
     ]
    },
    "Crypto.SelfTest.Random.test_random.sys": {
     "line number": [
      103,
      126,
      153
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      104,
      104,
      127,
      129,
      130,
      154,
      155,
      156,
      157
     ]
    },
    "IndexError": {
     "line number": [
      106
     ]
    },
    "TypeError": {
     "line number": [
      76,
      77,
      78,
      79,
      90,
      91,
      92,
      107,
      130,
      131,
      132,
      133,
      158
     ]
    },
    "ValueError": {
     "line number": [
      74,
      75,
      80,
      89
     ]
    },
    "bytearray": {
     "line number": [
      104,
      104,
      127,
      156,
      157
     ]
    },
    "len": {
     "line number": [
      116,
      116,
      117,
      117,
      118
     ]
    },
    "list": {
     "line number": [
      111,
      112
     ]
    },
    "range": {
     "line number": [
      64,
      72,
      87,
      94,
      100,
      110,
      118,
      142,
      151,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Random.test_random.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random.test_random.get_tests": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "Crypto.SelfTest.Random.test_random.SimpleTest": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Random.test_random.random": {
  "data": {
   "shadows": "Crypto.Random.random"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random.test_random.suite": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Random.test_random.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random.test_random.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Random.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.SelfTestError": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.SelfTestError.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Exception.__init__": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.get_tests": {
     "line number": [
      36
     ]
    },
    "Crypto.SelfTest.Signature.unittest": {
     "line number": [
      36,
      37
     ]
    },
    "__name__": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Signature.get_tests": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.suite": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss": {
  "data": {
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      176,
      213
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      307,
      338
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests_KAT": {
     "line number": [
      186,
      188,
      218
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests_KAT": {
     "line number": [
      317,
      319,
      343
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.StrRNG": {
     "line number": [
      214,
      339
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.comps": {
     "line number": [
      176
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.comps_dsa": {
     "line number": [
      213
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.curve_name": {
     "line number": [
      307,
      338
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.ecc_key": {
     "line number": [
      308,
      339
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.generator": {
     "line number": [
      175,
      212
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.get_tests": {
     "line number": [
      1144
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_module": {
     "line number": [
      173,
      211,
      306,
      337
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_name": {
     "line number": [
      164,
      202,
      303,
      334
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.key": {
     "line number": [
      177,
      214
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.load_hash_by_name": {
     "line number": [
      164,
      202,
      303,
      334
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.modulus": {
     "line number": [
      175,
      212
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.negative_test": {
     "line number": [
      188,
      319
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.new_test": {
     "line number": [
      218
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.positive_test": {
     "line number": [
      186,
      317
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.re": {
     "line number": [
      161,
      199,
      299,
      330
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.res": {
     "line number": [
      162,
      163,
      200,
      201,
      300,
      301,
      302,
      331,
      332,
      333
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.sign_test": {
     "line number": [
      343
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.suborder": {
     "line number": [
      175,
      212
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.test_vectors_sign": {
     "line number": [
      196,
      327
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.test_vectors_verify": {
     "line number": [
      158,
      296
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      1144,
      1145
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      153,
      191,
      288,
      322
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      177,
      214,
      308,
      339
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      175,
      212
     ]
    },
    "__name__": {
     "line number": [
      1143
     ]
    },
    "enumerate": {
     "line number": [
      158,
      196,
      296,
      327
     ]
    },
    "hasattr": {
     "line number": [
      167,
      205
     ]
    },
    "int": {
     "line number": [
      292,
      293,
      325
     ]
    },
    "isinstance": {
     "line number": [
      160,
      198,
      298,
      329
     ]
    },
    "setattr": {
     "line number": [
      186,
      188,
      218,
      317,
      319,
      343
     ]
    },
    "str": {
     "line number": [
      160,
      198,
      298,
      329
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Signature.test_dss.DSA": {
  "data": {
   "shadows": "Crypto.PublicKey.DSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.DSS": {
  "data": {
   "shadows": "Crypto.Signature.DSS"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_DSA_Tests": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      413,
      453,
      493,
      533
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      421,
      461,
      501,
      541
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      429,
      469,
      509,
      549
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      437,
      477,
      517,
      557
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      445,
      485,
      525,
      565
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_DSA_Tests.setUp": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.t2b": {
     "line number": [
      590,
      590
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.t2l": {
     "line number": [
      579,
      589
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      588
     ]
    },
    "TestKey": {
     "line number": [
      579
     ]
    },
    "TestSig": {
     "line number": [
      587
     ]
    },
    "collections.namedtuple": {
     "line number": [
      576,
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_DSA_Tests.test1": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.new": {
     "line number": [
      610
     ]
    },
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      602
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.key": {
     "line number": [
      602,
      603
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      603,
      606,
      611
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      603
     ]
    },
    "binascii.hexlify": {
     "line number": [
      606,
      611
     ]
    },
    "pow": {
     "line number": [
      601,
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_DSA_Tests.test2": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      618
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      621,
      622
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.key": {
     "line number": [
      618,
      619
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      619,
      622
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      646,
      681,
      719,
      754,
      792,
      827
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      653,
      688,
      726,
      761,
      799,
      834
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      660,
      695,
      733,
      768,
      806,
      841
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      667,
      702,
      740,
      775,
      813,
      848
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      674,
      709,
      747,
      782,
      820,
      855
     ]
    },
    "Crypto.PublicKey.ECC.construct": {
     "line number": [
      628,
      631,
      634
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      626
     ]
    },
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      861,
      866,
      871
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      861,
      861,
      861,
      866,
      866,
      866,
      871,
      871,
      871
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.shortDescription": {
  "data": {
   "lineno": 874
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.test_data_rfc6979_p256": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      904,
      905
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      902,
      905
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      902
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.test_data_rfc6979_p384": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      911,
      912
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      909,
      912
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      909
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.test_data_rfc6979_p521": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      918,
      919
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      916,
      919
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      916
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.test_loopback_p256": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.new": {
     "line number": [
      878
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      879,
      880
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.verifier": {
     "line number": [
      882,
      883
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      879,
      882
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.test_loopback_p384": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.new": {
     "line number": [
      886
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      887,
      888
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.verifier": {
     "line number": [
      890,
      891
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      887,
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests.test_loopback_p521": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.new": {
     "line number": [
      894
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      895,
      896
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.verifier": {
     "line number": [
      898,
      899
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      895,
      898
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.ECC": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "Crypto.PublicKey.DSA.construct": {
     "line number": [
      90,
      91
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests.shortDescription": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests.test_asn1_encoding": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.new": {
     "line number": [
      128
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      129
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      137
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      133
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests.test_loopback": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.new": {
     "line number": [
      97
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      98,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests.test_negative_unapproved_hashes": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "Crypto.Hash.RIPEMD160.new": {
     "line number": [
      110
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      111
     ]
    },
    "ValueError": {
     "line number": [
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests.test_negative_unknown_modes_encodings": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.new": {
     "line number": [
      119,
      122
     ]
    },
    "ValueError": {
     "line number": [
      119,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests.test_sign_verify": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.new": {
     "line number": [
      144,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests_KAT": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "Crypto.PublicKey.ECC.generate": {
     "line number": [
      223
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests.shortDescription": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests.test_asn1_encoding": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.new": {
     "line number": [
      271
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      271,
      273,
      277,
      281
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      272,
      273,
      277,
      281
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      272
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      280
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      276
     ]
    },
    "ValueError": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests.test_loopback": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "Crypto.Hash.SHA512.new": {
     "line number": [
      230
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      231,
      232
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.verifier": {
     "line number": [
      234,
      235
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      231,
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests.test_negative_unapproved_hashes": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.new": {
     "line number": [
      243
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      243,
      245,
      246
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      244,
      245,
      246
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      244
     ]
    },
    "ValueError": {
     "line number": [
      245,
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests.test_negative_unknown_modes_encodings": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.new": {
     "line number": [
      262,
      265
     ]
    },
    "ValueError": {
     "line number": [
      262,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests.test_sign_verify": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      252,
      253,
      255,
      256
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      252,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests_KAT": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.RIPEMD160": {
  "data": {
   "shadows": "Crypto.Hash.RIPEMD160"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA3_256": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA3_384": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA3_512": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.StrRNG": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.StrRNG.__call__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.StrRNG.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      73
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      73
     ]
    },
    "len": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      923
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof.__init__": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      926
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof.runTest": {
  "data": {
   "lineno": 990
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof.setUp": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      946
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      944
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      942
     ]
    },
    "Crypto.PublicKey.DSA.import_key": {
     "line number": [
      939
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.comps": {
     "line number": [
      932,
      933
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_module": {
     "line number": [
      942,
      944,
      946,
      961
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_name": {
     "line number": [
      940,
      941,
      943,
      945
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.json": {
     "line number": [
      934
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.key": {
     "line number": [
      939,
      960
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      933
     ]
    },
    "TestVector": {
     "line number": [
      955
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      958,
      959
     ]
    },
    "collections.namedtuple": {
     "line number": [
      952
     ]
    },
    "open": {
     "line number": [
      933
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof.shortDescription": {
  "data": {
   "lineno": 967
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof.test_verify": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      979,
      981
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      979
     ]
    },
    "ValueError": {
     "line number": [
      982
     ]
    },
    "str": {
     "line number": [
      976
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof.warn": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.warnings": {
     "line number": [
      973
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      995
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.__init__": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.unittest": {
     "line number": [
      998
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.add_tests": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      1031
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      1029
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      1025
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      1021
     ]
    },
    "Crypto.Hash.SHA3_256": {
     "line number": [
      1027
     ]
    },
    "Crypto.Hash.SHA3_384": {
     "line number": [
      1023
     ]
    },
    "Crypto.Hash.SHA3_512": {
     "line number": [
      1019
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      1017
     ]
    },
    "Crypto.PublicKey.ECC.import_key": {
     "line number": [
      1011
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.comps": {
     "line number": [
      1004,
      1005
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_module": {
     "line number": [
      1017,
      1019,
      1021,
      1023,
      1025,
      1027,
      1029,
      1031,
      1054
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.hash_name": {
     "line number": [
      1015,
      1016,
      1018,
      1020,
      1022,
      1024,
      1026,
      1028,
      1030,
      1033
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.json": {
     "line number": [
      1006
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.key": {
     "line number": [
      1011,
      1053
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      1005
     ]
    },
    "TestVector": {
     "line number": [
      1044,
      1047
     ]
    },
    "ValueError": {
     "line number": [
      1012,
      1033,
      1041
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      1050,
      1052
     ]
    },
    "collections.namedtuple": {
     "line number": [
      1044
     ]
    },
    "open": {
     "line number": [
      1005
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.runTest": {
  "data": {
   "lineno": 1118
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.setUp": {
  "data": {
   "lineno": 1061
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.shortDescription": {
  "data": {
   "lineno": 1093
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.test_verify": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      1105,
      1107
     ]
    },
    "Crypto.Signature.DSS.new": {
     "line number": [
      1105
     ]
    },
    "ValueError": {
     "line number": [
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof.warn": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.warnings": {
     "line number": [
      1099
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.comps": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.comps_dsa": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.curve_name": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.ecc_key": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.generator": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.get_tests": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.Det_DSA_Tests": {
     "line number": [
      1129
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.Det_ECDSA_Tests": {
     "line number": [
      1130
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests": {
     "line number": [
      1127
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.FIPS_DSA_Tests_KAT": {
     "line number": [
      1134
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests": {
     "line number": [
      1128
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.FIPS_ECDSA_Tests_KAT": {
     "line number": [
      1135
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.TestVectorsDSAWycheproof": {
     "line number": [
      1137
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.TestVectorsECDSAWycheproof": {
     "line number": [
      1138
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      1127,
      1128,
      1129,
      1130,
      1134,
      1135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.hash_module": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.hash_name": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.hash_obj": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.key": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.load_hash_by_name": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      64
     ]
    },
    "globals": {
     "line number": [
      64
     ]
    },
    "locals": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.modulus": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.negative_test": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      313,
      314
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.verifier": {
     "line number": [
      313,
      314
     ]
    },
    "ValueError": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.new_test": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      216,
      217
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      216,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.positive_test": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      310,
      311
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.verifier": {
     "line number": [
      310,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.res": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.sign_test": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_dss.hash_obj": {
     "line number": [
      341,
      342
     ]
    },
    "Crypto.SelfTest.Signature.test_dss.signer": {
     "line number": [
      341,
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.signer": {
  "data": {
   "lineno": 339
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.suborder": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.suite": {
  "data": {
   "lineno": 1144
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.t2b": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.tobytes": {
     "line number": [
      55
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.t2l": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "int": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_dss.test_vectors_sign": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.test_vectors_verify": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.tobytes": {
  "data": {
   "shadows": "Crypto.Util.py3compat.tobytes"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_dss.verifier": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_dss.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15": {
  "data": {
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      87,
      134
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests_KAT": {
     "line number": [
      145
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests_KAT": {
     "line number": [
      97,
      99
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.get_tests": {
     "line number": [
      357
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.hash_module": {
     "line number": [
      86,
      139
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.load_hash_by_name": {
     "line number": [
      85,
      138
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.modulus": {
     "line number": [
      87,
      134
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.negative_test": {
     "line number": [
      97
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.new_test": {
     "line number": [
      145
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.positive_test": {
     "line number": [
      99
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.private_key": {
     "line number": [
      135
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.public_key": {
     "line number": [
      88
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.test_vectors_sign": {
     "line number": [
      122,
      127
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.test_vectors_verify": {
     "line number": [
      78
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      357,
      358
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      70,
      117,
      122
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      88,
      135
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      87,
      134
     ]
    },
    "__name__": {
     "line number": [
      356
     ]
    },
    "enumerate": {
     "line number": [
      78,
      127
     ]
    },
    "hasattr": {
     "line number": [
      81,
      130,
      133
     ]
    },
    "int": {
     "line number": [
      74
     ]
    },
    "isinstance": {
     "line number": [
      79,
      128
     ]
    },
    "setattr": {
     "line number": [
      97,
      99,
      145
     ]
    },
    "str": {
     "line number": [
      79,
      128
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.BLAKE2b": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests.shortDescription": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests.test_can_sign": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      108
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests_KAT": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests.shortDescription": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests.test_can_sign": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      61
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests_KAT": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_15_NoParams": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      148
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_15_NoParams.runTest": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.new": {
     "line number": [
      173
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      172
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.verifier": {
     "line number": [
      172,
      174
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_All_Hashes_Tests": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_All_Hashes_Tests.runTest": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2b.new": {
     "line number": [
      217
     ]
    },
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      220
     ]
    },
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      205
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.load_hash_by_name": {
     "line number": [
      212
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.signer": {
     "line number": [
      206,
      213,
      218,
      221
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_All_Hashes_Tests.shortDescription": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_Legacy_Module_Tests": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_Legacy_Module_Tests.runTest": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.new": {
     "line number": [
      187
     ]
    },
    "Crypto.PublicKey.RSA.importKey": {
     "line number": [
      186
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_15_NoParams": {
     "line number": [
      186
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.verifier": {
     "line number": [
      189,
      191,
      195
     ]
    },
    "Crypto.Signature.PKCS1_v1_5.new": {
     "line number": [
      188,
      189
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      194
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      194
     ]
    },
    "len": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_Legacy_Module_Tests.shortDescription": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_v1_5": {
  "data": {
   "shadows": "Crypto.Signature.PKCS1_v1_5"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.RSA": {
  "data": {
   "shadows": "Crypto.PublicKey.RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA3_224": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA3_256": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA3_384": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA3_512": {
  "data": {
   "shadows": "Crypto.Hash.SHA3_512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.add_tests": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      290
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      286
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      282
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      278
     ]
    },
    "Crypto.Hash.SHA3_224": {
     "line number": [
      288
     ]
    },
    "Crypto.Hash.SHA3_256": {
     "line number": [
      284
     ]
    },
    "Crypto.Hash.SHA3_384": {
     "line number": [
      280
     ]
    },
    "Crypto.Hash.SHA3_512": {
     "line number": [
      276
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      270
     ]
    },
    "Crypto.Hash.SHA512.new": {
     "line number": [
      272,
      274
     ]
    },
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      266
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.hash_module": {
     "line number": [
      270,
      272,
      274,
      276,
      278,
      280,
      282,
      284,
      286,
      288,
      290,
      306
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.json": {
     "line number": [
      259
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      258
     ]
    },
    "TestVector": {
     "line number": [
      299
     ]
    },
    "ValueError": {
     "line number": [
      292,
      296
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      304
     ]
    },
    "open": {
     "line number": [
      258
     ]
    },
    "setattr": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.add_tests.TestVector": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "object": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.runTest": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.setUp": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.shortDescription": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.test_verify": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.signer": {
     "line number": [
      323,
      325
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      323
     ]
    },
    "ValueError": {
     "line number": [
      326
     ]
    },
    "str": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof.warn": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.warnings": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.get_tests": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests": {
     "line number": [
      344
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Sign_Tests_KAT": {
     "line number": [
      352
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests": {
     "line number": [
      343
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.FIPS_PKCS1_Verify_Tests_KAT": {
     "line number": [
      351
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_15_NoParams": {
     "line number": [
      345
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_All_Hashes_Tests": {
     "line number": [
      347
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.PKCS1_Legacy_Module_Tests": {
     "line number": [
      346
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.TestVectorsWycheproof": {
     "line number": [
      348
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      343,
      344,
      345,
      346,
      347,
      351,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.hash_module": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.hash_obj": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.load_hash_by_name": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      52
     ]
    },
    "globals": {
     "line number": [
      52
     ]
    },
    "locals": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.modulus": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.negative_test": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.hash_obj": {
     "line number": [
      93,
      94
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.verifier": {
     "line number": [
      93,
      94
     ]
    },
    "ValueError": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.new_test": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.hash_obj": {
     "line number": [
      141,
      142
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.signer": {
     "line number": [
      141,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.pkcs1_15": {
  "data": {
   "shadows": "Crypto.Signature.pkcs1_15"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.positive_test": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pkcs1_15.hash_obj": {
     "line number": [
      90,
      91
     ]
    },
    "Crypto.SelfTest.Signature.test_pkcs1_15.verifier": {
     "line number": [
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.private_key": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.public_key": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.signer": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.suite": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.test_vectors_sign": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.test_vectors_verify": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.verifier": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pkcs1_15.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss": {
  "data": {
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.construct": {
     "line number": [
      139,
      190
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests_KAT": {
     "line number": [
      205
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests_KAT": {
     "line number": [
      153,
      155
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.PRNG": {
     "line number": [
      141,
      196
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.get_tests": {
     "line number": [
      378
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.hash_module": {
     "line number": [
      138,
      194
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.load_hash_by_name": {
     "line number": [
      137,
      193
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.modulus": {
     "line number": [
      139,
      190
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.negative_test": {
     "line number": [
      155
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.new_test": {
     "line number": [
      205
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.positive_test": {
     "line number": [
      153
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.private_key": {
     "line number": [
      197,
      199
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.prng": {
     "line number": [
      142,
      197
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.public_key": {
     "line number": [
      142,
      144
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.test_vectors_sign": {
     "line number": [
      178,
      183
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.test_vectors_verify": {
     "line number": [
      128
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      378,
      379
     ]
    },
    "Crypto.SelfTest.loader.load_tests": {
     "line number": [
      121,
      173,
      178
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      142,
      144,
      197,
      199
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      139,
      190
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      140,
      195
     ]
    },
    "__name__": {
     "line number": [
      377
     ]
    },
    "enumerate": {
     "line number": [
      128,
      183
     ]
    },
    "hasattr": {
     "line number": [
      131,
      134,
      186,
      189
     ]
    },
    "isinstance": {
     "line number": [
      129,
      184
     ]
    },
    "len": {
     "line number": [
      142,
      197
     ]
    },
    "setattr": {
     "line number": [
      153,
      155,
      205
     ]
    },
    "str": {
     "line number": [
      129,
      184
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Signature.test_pss.BLAKE2b": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.BLAKE2s": {
  "data": {
   "shadows": "Crypto.Hash.BLAKE2s"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests.shortDescription": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests.test_can_sign": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      164
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests_KAT": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests.shortDescription": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests.test_can_sign": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      112
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests.verify_negative": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.PRNG": {
     "line number": [
      106
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      108
     ]
    },
    "ValueError": {
     "line number": [
      109
     ]
    },
    "len": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests.verify_positive": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.PRNG": {
     "line number": [
      100
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      102
     ]
    },
    "len": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests_KAT": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.MGF1": {
  "data": {
   "shadows": "Crypto.Signature.pss.MGF1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_All_Hashes_Tests": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_All_Hashes_Tests.runTest": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "Crypto.Hash.BLAKE2b.new": {
     "line number": [
      248
     ]
    },
    "Crypto.Hash.BLAKE2s.new": {
     "line number": [
      251
     ]
    },
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      236
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.load_hash_by_name": {
     "line number": [
      243
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.signer": {
     "line number": [
      237,
      244,
      249,
      252
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      237
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      243,
      248,
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_All_Hashes_Tests.shortDescription": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_Legacy_Module_Tests": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_Legacy_Module_Tests.runTest": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1.new": {
     "line number": [
      218
     ]
    },
    "Crypto.PublicKey.RSA.generate": {
     "line number": [
      217
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.verifier": {
     "line number": [
      220,
      222,
      226
     ]
    },
    "Crypto.Signature.PKCS1_PSS.new": {
     "line number": [
      219,
      220
     ]
    },
    "Crypto.Util.py3compat.b": {
     "line number": [
      218
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      225
     ]
    },
    "Crypto.Util.strxor.strxor": {
     "line number": [
      225
     ]
    },
    "len": {
     "line number": [
      225
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_Legacy_Module_Tests.shortDescription": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PKCS1_PSS": {
  "data": {
   "shadows": "Crypto.Signature.PKCS1_PSS"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.PRNG": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "object": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.PRNG.__call__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PRNG.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PSS_Tests": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.PSS_Tests.test_negative_1": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.new": {
     "line number": [
      81
     ]
    },
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      80
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      82
     ]
    },
    "ValueError": {
     "line number": [
      84
     ]
    },
    "bytearray": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PSS_Tests.test_negative_2": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.new": {
     "line number": [
      88
     ]
    },
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      87
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      89
     ]
    },
    "ValueError": {
     "line number": [
      91
     ]
    },
    "bytearray": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.PSS_Tests.test_positive_1": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "Crypto.Hash.SHA256.new": {
     "line number": [
      75
     ]
    },
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      74
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.RSA": {
  "data": {
   "shadows": "Crypto.PublicKey.RSA"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.SHA1": {
  "data": {
   "shadows": "Crypto.Hash.SHA1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.SHA224": {
  "data": {
   "shadows": "Crypto.Hash.SHA224"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.SHA256": {
  "data": {
   "shadows": "Crypto.Hash.SHA256"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.SHA384": {
  "data": {
   "shadows": "Crypto.Hash.SHA384"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.SHA512": {
  "data": {
   "shadows": "Crypto.Hash.SHA512"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.unittest": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.add_tests": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "Crypto.PublicKey.RSA.import_key": {
     "line number": [
      289
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.get_hash_module": {
     "line number": [
      290,
      296
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.hash_module": {
     "line number": [
      290,
      313
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.json": {
     "line number": [
      285
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      284
     ]
    },
    "TestVector": {
     "line number": [
      305
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      308,
      309
     ]
    },
    "collections.namedtuple": {
     "line number": [
      302
     ]
    },
    "open": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.add_tests.mgf": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "Crypto.Signature.pss.MGF1": {
     "line number": [
      299
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.runTest": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.setUp": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.shortDescription": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.test_verify": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.signer": {
     "line number": [
      343,
      345
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      343
     ]
    },
    "ValueError": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof.warn": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.warnings": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.get_hash_module": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "Crypto.Hash.SHA1": {
     "line number": [
      269
     ]
    },
    "Crypto.Hash.SHA224": {
     "line number": [
      267
     ]
    },
    "Crypto.Hash.SHA256": {
     "line number": [
      265
     ]
    },
    "Crypto.Hash.SHA384": {
     "line number": [
      263
     ]
    },
    "Crypto.Hash.SHA512": {
     "line number": [
      257
     ]
    },
    "Crypto.Hash.SHA512.new": {
     "line number": [
      259,
      261
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.hash_module": {
     "line number": [
      257,
      259,
      261,
      263,
      265,
      267,
      269,
      272
     ]
    },
    "ValueError": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.get_tests": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests": {
     "line number": [
      365
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Sign_Tests_KAT": {
     "line number": [
      371
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests": {
     "line number": [
      364
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.FIPS_PKCS1_Verify_Tests_KAT": {
     "line number": [
      370
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.PKCS1_All_Hashes_Tests": {
     "line number": [
      367
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.PKCS1_Legacy_Module_Tests": {
     "line number": [
      366
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.PSS_Tests": {
     "line number": [
      363
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.TestVectorsPSSWycheproof": {
     "line number": [
      373
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      363,
      364,
      365,
      366,
      367,
      370,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.hash_module": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.hash_obj": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.load_hash_by_name": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "__import__": {
     "line number": [
      52
     ]
    },
    "globals": {
     "line number": [
      52
     ]
    },
    "locals": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.load_tests": {
  "data": {
   "shadows": "Crypto.SelfTest.loader.load_tests"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.modulus": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.negative_test": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.hash_obj": {
     "line number": [
      149,
      150
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.verifier": {
     "line number": [
      149,
      150
     ]
    },
    "ValueError": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.new_test": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.hash_obj": {
     "line number": [
      201,
      202
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.signer": {
     "line number": [
      201,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.positive_test": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.SelfTest.Signature.test_pss.hash_obj": {
     "line number": [
      146,
      147
     ]
    },
    "Crypto.SelfTest.Signature.test_pss.verifier": {
     "line number": [
      146,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Signature.test_pss.private_key": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.prng": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.pss": {
  "data": {
   "shadows": "Crypto.Signature.pss"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.public_key": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.signer": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.suite": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.test_vectors_sign": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.test_vectors_verify": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.test_pss.verifier": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Signature.test_pss.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Signature.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.get_tests": {
     "line number": [
      43
     ]
    },
    "Crypto.SelfTest.Util.unittest": {
     "line number": [
      43,
      44
     ]
    },
    "__name__": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.Util.__revision__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.get_tests": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Counter.get_tests": {
     "line number": [
      34
     ]
    },
    "Crypto.SelfTest.Util.test_Padding.get_tests": {
     "line number": [
      35
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.get_tests": {
     "line number": [
      37
     ]
    },
    "Crypto.SelfTest.Util.test_number.get_tests": {
     "line number": [
      33
     ]
    },
    "Crypto.SelfTest.Util.test_rfc1751.get_tests": {
     "line number": [
      38
     ]
    },
    "Crypto.SelfTest.Util.test_strxor.get_tests": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.suite": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_Counter": {
  "data": {
   "shadows": "Crypto.SelfTest.Util.test_Counter"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Counter.Counter": {
  "data": {
   "shadows": "Crypto.Util.Counter"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Counter.unittest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.setUp": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.test_BE": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "Crypto.Util.Counter.new": {
     "line number": [
      38,
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.test_LE": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.Util.Counter.new": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.test_iv": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.Util.Counter.new": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.test_nbits": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Util.Counter.new": {
     "line number": [
      46,
      47
     ]
    },
    "ValueError": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.test_prefix": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Crypto.Util.Counter.new": {
     "line number": [
      50
     ]
    },
    "b": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.CounterTests.test_suffix": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "Crypto.Util.Counter.new": {
     "line number": [
      53
     ]
    },
    "b": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.get_tests": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Counter.CounterTests": {
     "line number": [
      60
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Counter.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Counter.suite": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_Counter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Padding": {
  "data": {
   "shadows": "Crypto.SelfTest.Util.test_Padding"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Padding.unittest": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests.test1": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      114
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      116
     ]
    },
    "b": {
     "line number": [
      114,
      115,
      117
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests.test2": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      120
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      122
     ]
    },
    "b": {
     "line number": [
      120,
      121,
      123
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      120,
      121,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests.test3": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      126
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      129
     ]
    },
    "b": {
     "line number": [
      126,
      127,
      130
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      126,
      127,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests.test4": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      133
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      135
     ]
    },
    "b": {
     "line number": [
      133,
      134,
      136
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      133,
      134,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests.testn1": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "Crypto.Util.Padding.unpad": {
     "line number": [
      139
     ]
    },
    "ValueError": {
     "line number": [
      139
     ]
    },
    "b": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Padding.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.test1": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      44,
      46
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      48
     ]
    },
    "b": {
     "line number": [
      44,
      45,
      46,
      47,
      49
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      45,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.test2": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      52
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      54
     ]
    },
    "b": {
     "line number": [
      52,
      53,
      55
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      52,
      53,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.test3": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      58
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      60
     ]
    },
    "b": {
     "line number": [
      58,
      59,
      61
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      58,
      59,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.test4": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      64
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      66
     ]
    },
    "b": {
     "line number": [
      64,
      65,
      67
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      64,
      65,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.testn1": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      70
     ]
    },
    "ValueError": {
     "line number": [
      70
     ]
    },
    "b": {
     "line number": [
      70
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.testn2": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.Util.Padding.unpad": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      73
     ]
    },
    "b": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests.testn3": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "Crypto.Util.Padding.unpad": {
     "line number": [
      76,
      77,
      78
     ]
    },
    "ValueError": {
     "line number": [
      76,
      77,
      78
     ]
    },
    "b": {
     "line number": [
      76,
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.X923_Tests": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Padding.unittest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_Padding.X923_Tests.test1": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      83
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      85
     ]
    },
    "b": {
     "line number": [
      83,
      84,
      86
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.X923_Tests.test2": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      89
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      91
     ]
    },
    "b": {
     "line number": [
      89,
      90,
      92
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      89,
      90,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.X923_Tests.test3": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      95
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      97
     ]
    },
    "b": {
     "line number": [
      95,
      96,
      98
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      95,
      96,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.X923_Tests.test4": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Util.Padding.pad": {
     "line number": [
      101
     ]
    },
    "Crypto.Util.Padding.unpad": {
     "line number": [
      103
     ]
    },
    "b": {
     "line number": [
      101,
      102,
      104
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      101,
      102,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.X923_Tests.testn1": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.Util.Padding.unpad": {
     "line number": [
      107,
      108,
      109
     ]
    },
    "ValueError": {
     "line number": [
      107,
      108,
      109
     ]
    },
    "b": {
     "line number": [
      107,
      108,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.get_tests": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_Padding.ISO7816_Tests": {
     "line number": [
      145
     ]
    },
    "Crypto.SelfTest.Util.test_Padding.PKCS7_Tests": {
     "line number": [
      143
     ]
    },
    "Crypto.SelfTest.Util.test_Padding.X923_Tests": {
     "line number": [
      144
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      143,
      144,
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_Padding.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Padding.pad": {
  "data": {
   "shadows": "Crypto.Util.Padding.pad"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Padding.suite": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_Padding.uh": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Padding.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_Padding.unpad": {
  "data": {
   "shadows": "Crypto.Util.Padding.unpad"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1": {
  "data": {
   "shadows": "Crypto.SelfTest.Util.test_asn1"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerBitString"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitStringTests": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitStringTests.testDecode1": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      673
     ]
    },
    "b": {
     "line number": [
      674,
      675,
      677,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitStringTests.testDecode2": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      682
     ]
    },
    "b": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitStringTests.testEncode1": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      659,
      662,
      665
     ]
    },
    "b": {
     "line number": [
      660,
      662,
      663,
      666,
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitStringTests.testInit1": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      650
     ]
    },
    "b": {
     "line number": [
      650,
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerBitStringTests.testInit2": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerBitString": {
     "line number": [
      654
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      654
     ]
    },
    "b": {
     "line number": [
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerInteger": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerInteger"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testDecode1": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      234
     ]
    },
    "b": {
     "line number": [
      236,
      239,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testDecode2": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      247
     ]
    },
    "b": {
     "line number": [
      249,
      253,
      254,
      255,
      256,
      257,
      258,
      259,
      260,
      261,
      262,
      263,
      264,
      265,
      266,
      267,
      268,
      269,
      270,
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testDecode3": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      276
     ]
    },
    "b": {
     "line number": [
      278,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testDecode5": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      286
     ]
    },
    "b": {
     "line number": [
      288,
      291,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testDecode6": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      299
     ]
    },
    "b": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testDecode7": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      305
     ]
    },
    "b": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testEncode1": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      173,
      176,
      179
     ]
    },
    "b": {
     "line number": [
      174,
      177,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testEncode2": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      185,
      188,
      191
     ]
    },
    "b": {
     "line number": [
      186,
      189,
      193,
      194,
      195,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      203,
      204,
      205,
      206,
      207,
      208,
      209,
      210,
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testEncode3": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      216,
      219,
      222
     ]
    },
    "b": {
     "line number": [
      217,
      220,
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testEncode4": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      227
     ]
    },
    "b": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testErrDecode1": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      322
     ]
    },
    "ValueError": {
     "line number": [
      323
     ]
    },
    "b": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testInit1": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      167
     ]
    },
    "b": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerIntegerTests.testStrict1": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      311
     ]
    },
    "ValueError": {
     "line number": [
      315,
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerNull": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerNull"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerNullTests": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerNullTests.testDecode1": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerNull": {
     "line number": [
      610
     ]
    },
    "b": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerNullTests.testEncode1": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerNull": {
     "line number": [
      603
     ]
    },
    "b": {
     "line number": [
      604
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObject": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObject"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectId": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerObjectId"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      613
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests.testDecode1": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      631
     ]
    },
    "b": {
     "line number": [
      632
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests.testDecode2": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      637
     ]
    },
    "b": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests.testDecode3": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      642
     ]
    },
    "b": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests.testEncode1": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      620,
      623
     ]
    },
    "b": {
     "line number": [
      621,
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests.testInit1": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObjectId": {
     "line number": [
      616
     ]
    },
    "b": {
     "line number": [
      617
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode1": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      102
     ]
    },
    "b": {
     "line number": [
      103,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode2": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      109
     ]
    },
    "b": {
     "line number": [
      110,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode3": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      116,
      119
     ]
    },
    "ValueError": {
     "line number": [
      117,
      120
     ]
    },
    "b": {
     "line number": [
      117,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode4": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      124,
      129
     ]
    },
    "ValueError": {
     "line number": [
      125,
      130
     ]
    },
    "b": {
     "line number": [
      125,
      126,
      127,
      130,
      131,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode5": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      137
     ]
    },
    "b": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode6": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      141
     ]
    },
    "b": {
     "line number": [
      142,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode7": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      148,
      154
     ]
    },
    "b": {
     "line number": [
      149,
      151,
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjDecode8": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      161
     ]
    },
    "b": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjEncode1": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      56,
      64,
      68
     ]
    },
    "b": {
     "line number": [
      56,
      57,
      59,
      60,
      62,
      65,
      66,
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjEncode2": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      73
     ]
    },
    "b": {
     "line number": [
      73,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjEncode3": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      78
     ]
    },
    "b": {
     "line number": [
      78,
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjEncode4": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      84,
      88
     ]
    },
    "b": {
     "line number": [
      85,
      86,
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjEncode5": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      94
     ]
    },
    "b": {
     "line number": [
      95,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerObjectTests.testObjInit1": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      48,
      50
     ]
    },
    "ValueError": {
     "line number": [
      48,
      50
     ]
    },
    "b": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetString": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerOctetString"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      565
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests.testDecode1": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      583
     ]
    },
    "b": {
     "line number": [
      584,
      585,
      587,
      588
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests.testDecode2": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      592
     ]
    },
    "b": {
     "line number": [
      593
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests.testEncode1": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      573
     ]
    },
    "b": {
     "line number": [
      574,
      576,
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests.testErrDecode1": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      597
     ]
    },
    "ValueError": {
     "line number": [
      598
     ]
    },
    "b": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests.testInit1": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerOctetString": {
     "line number": [
      568
     ]
    },
    "b": {
     "line number": [
      568,
      569
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode1": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      444
     ]
    },
    "b": {
     "line number": [
      445,
      448,
      452
     ]
    },
    "len": {
     "line number": [
      446,
      449,
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode2": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      458
     ]
    },
    "b": {
     "line number": [
      459
     ]
    },
    "len": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode4": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      465
     ]
    },
    "b": {
     "line number": [
      466,
      467,
      468,
      469,
      470,
      471,
      472,
      473,
      474,
      475,
      476,
      477,
      478,
      479,
      480,
      481,
      482,
      483,
      484,
      485
     ]
    },
    "len": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode6": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      491
     ]
    },
    "b": {
     "line number": [
      492
     ]
    },
    "len": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode7": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      499
     ]
    },
    "b": {
     "line number": [
      500,
      503,
      504
     ]
    },
    "len": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode8": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      508
     ]
    },
    "b": {
     "line number": [
      509,
      511,
      512
     ]
    },
    "len": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testDecode9": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      520
     ]
    },
    "b": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode1": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      334
     ]
    },
    "b": {
     "line number": [
      335,
      339,
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode2": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      349
     ]
    },
    "b": {
     "line number": [
      355,
      360
     ]
    },
    "len": {
     "line number": [
      352,
      358
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode3": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      364
     ]
    },
    "b": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode4": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      370
     ]
    },
    "b": {
     "line number": [
      372,
      373,
      374,
      375,
      376,
      377,
      378,
      379,
      380,
      381,
      382,
      383,
      384,
      385,
      386,
      387,
      388,
      389,
      390,
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode5": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      394
     ]
    },
    "b": {
     "line number": [
      396,
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode6": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      401,
      408
     ]
    },
    "b": {
     "line number": [
      404,
      411,
      422
     ]
    },
    "len": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode7": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      426
     ]
    },
    "b": {
     "line number": [
      428,
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testEncode8": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      434,
      436
     ]
    },
    "b": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testErrDecode1": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      527
     ]
    },
    "ValueError": {
     "line number": [
      528,
      529,
      530
     ]
    },
    "b": {
     "line number": [
      528,
      529,
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testErrDecode2": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      533
     ]
    },
    "ValueError": {
     "line number": [
      535
     ]
    },
    "b": {
     "line number": [
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testErrDecode3": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      539
     ]
    },
    "ValueError": {
     "line number": [
      541,
      543,
      544
     ]
    },
    "b": {
     "line number": [
      541,
      543,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.testInit1": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      329
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      329
     ]
    },
    "b": {
     "line number": [
      329,
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.test_expected_nr_elements": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      547,
      549,
      550,
      551,
      552
     ]
    },
    "ValueError": {
     "line number": [
      551,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSequenceTests.test_expected_only_integers": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      556,
      557,
      557,
      559,
      560,
      561,
      562
     ]
    },
    "ValueError": {
     "line number": [
      562
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOf": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSetOf"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.unittest": {
     "line number": [
      686
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testDecode1": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      729
     ]
    },
    "b": {
     "line number": [
      730,
      733
     ]
    },
    "len": {
     "line number": [
      731,
      734
     ]
    },
    "list": {
     "line number": [
      735
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testDecode2": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      739
     ]
    },
    "b": {
     "line number": [
      740
     ]
    },
    "len": {
     "line number": [
      741
     ]
    },
    "list": {
     "line number": [
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testDecode3": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      748
     ]
    },
    "ValueError": {
     "line number": [
      750
     ]
    },
    "b": {
     "line number": [
      751
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testDecode4": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      755
     ]
    },
    "b": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testEncode1": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      694
     ]
    },
    "b": {
     "line number": [
      695,
      698,
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testEncode2": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      704,
      709
     ]
    },
    "b": {
     "line number": [
      707,
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testEncode3": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      714
     ]
    },
    "ValueError": {
     "line number": [
      716
     ]
    },
    "b": {
     "line number": [
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testEncode4": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      720
     ]
    },
    "b": {
     "line number": [
      721,
      722,
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testErrDecode1": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      763
     ]
    },
    "ValueError": {
     "line number": [
      764
     ]
    },
    "b": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.DerSetOfTests.testInit1": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      689,
      689
     ]
    },
    "Crypto.Util.asn1.DerSetOf": {
     "line number": [
      689
     ]
    },
    "b": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.get_tests": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_asn1.DerBitStringTests": {
     "line number": [
      776
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerIntegerTests": {
     "line number": [
      771
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerNullTests": {
     "line number": [
      774
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerObjectIdTests": {
     "line number": [
      775
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerObjectTests": {
     "line number": [
      770
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerOctetStringTests": {
     "line number": [
      773
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerSequenceTests": {
     "line number": [
      772
     ]
    },
    "Crypto.SelfTest.Util.test_asn1.DerSetOfTests": {
     "line number": [
      777
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      770,
      771,
      772,
      773,
      774,
      775,
      776,
      777
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_asn1.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_asn1.suite": {
  "data": {
   "lineno": 781
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_asn1.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_number": {
  "data": {
   "shadows": "Crypto.SelfTest.Util.test_number"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_number.MiscTests": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_number.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_number.MiscTests.setUp": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_number.MiscTests.test_ceil_div": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.Util.number.ceil_div": {
     "line number": [
      45,
      46,
      47,
      50,
      51,
      52,
      53,
      56,
      57,
      58,
      59,
      60,
      61,
      64,
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      74,
      75,
      76,
      77,
      78,
      79,
      80,
      81,
      82,
      83
     ]
    },
    "TypeError": {
     "line number": [
      45
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      46,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_number.MiscTests.test_getStrongPrime": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "Crypto.Util.number.GCD": {
     "line number": [
      96,
      102
     ]
    },
    "Crypto.Util.number.getStrongPrime": {
     "line number": [
      87,
      88,
      90,
      95,
      101
     ]
    },
    "ValueError": {
     "line number": [
      87,
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_number.MiscTests.test_isPrime": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "Crypto.Util.number.isPrime": {
     "line number": [
      109,
      110,
      111,
      112,
      113,
      114,
      115,
      116,
      124
     ]
    },
    "int": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_number.MiscTests.test_size": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "Crypto.Util.number.size": {
     "line number": [
      127,
      128,
      129,
      130,
      131,
      132
     ]
    },
    "ValueError": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_number.MyError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_number.get_tests": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_number.MiscTests": {
     "line number": [
      137
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_number.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_number.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_number.number": {
  "data": {
   "shadows": "Crypto.Util.number"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_number.suite": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_number.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_rfc1751": {
  "data": {
   "shadows": "Crypto.SelfTest.Util.test_rfc1751"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_rfc1751.RFC1751_Tests": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_rfc1751.unittest": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_rfc1751.RFC1751_Tests.test1": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_rfc1751.binascii": {
     "line number": [
      17
     ]
    },
    "Crypto.Util.RFC1751.english_to_key": {
     "line number": [
      22
     ]
    },
    "Crypto.Util.RFC1751.key_to_english": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_rfc1751.RFC1751_Tests.test_error_key_to_english": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "Crypto.Util.RFC1751.key_to_english": {
     "line number": [
      27
     ]
    },
    "ValueError": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_rfc1751.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_rfc1751.english_to_key": {
  "data": {
   "shadows": "Crypto.Util.RFC1751.english_to_key"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_rfc1751.get_tests": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_rfc1751.RFC1751_Tests": {
     "line number": [
      32
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_rfc1751.key_to_english": {
  "data": {
   "shadows": "Crypto.Util.RFC1751.key_to_english"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_rfc1751.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_rfc1751.suite": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_rfc1751.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor": {
  "data": {
   "shadows": "Crypto.SelfTest.Util.test_strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_strxor.sys": {
     "line number": [
      168
     ]
    },
    "Crypto.SelfTest.Util.test_strxor.unittest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test1": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      47,
      48
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      44,
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test3": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      57
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_bytearray": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      70
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      65,
      67,
      68
     ]
    },
    "bytearray": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_memoryview": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      78
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      73,
      75,
      76
     ]
    },
    "memoryview": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_bytearray": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      90
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      83,
      84,
      87
     ]
    },
    "bytearray": {
     "line number": [
      88
     ]
    },
    "len": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_incorrect_length": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      165
     ]
    },
    "ValueError": {
     "line number": [
      165
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      161,
      162
     ]
    },
    "bytearray": {
     "line number": [
      163
     ]
    },
    "len": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_memoryview": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      107
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      100,
      101,
      104
     ]
    },
    "bytearray": {
     "line number": [
      105
     ]
    },
    "len": {
     "line number": [
      105
     ]
    },
    "memoryview": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_overlapping_bytearray": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      122
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      117,
      118,
      120
     ]
    },
    "bytearray": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_overlapping_memoryview": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      136
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      131,
      132,
      134
     ]
    },
    "bytearray": {
     "line number": [
      131
     ]
    },
    "memoryview": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_ro_bytes": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      148
     ]
    },
    "TypeError": {
     "line number": [
      148
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      145,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_output_ro_memoryview": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      156
     ]
    },
    "TypeError": {
     "line number": [
      156
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      153,
      154
     ]
    },
    "memoryview": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.StrxorTests.test_wrong_length": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor": {
     "line number": [
      62
     ]
    },
    "ValueError": {
     "line number": [
      62
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_strxor.sys": {
     "line number": [
      279
     ]
    },
    "Crypto.SelfTest.Util.test_strxor.unittest": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test1": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      180
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      178,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test2": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      184
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test3": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_bytearray": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      199
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      195,
      197
     ]
    },
    "bytearray": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_memoryview": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      206
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      202,
      204
     ]
    },
    "memoryview": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_bytearray": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      214
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      209,
      211
     ]
    },
    "bytearray": {
     "line number": [
      212
     ]
    },
    "len": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_incorrect_length": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      275
     ]
    },
    "ValueError": {
     "line number": [
      275
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      272
     ]
    },
    "bytearray": {
     "line number": [
      273
     ]
    },
    "len": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_memoryview": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      226
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      221,
      223
     ]
    },
    "bytearray": {
     "line number": [
      224
     ]
    },
    "len": {
     "line number": [
      224
     ]
    },
    "memoryview": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_overlapping_bytearray": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      238
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      235,
      236
     ]
    },
    "bytearray": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_overlapping_memoryview": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      249
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      246,
      247
     ]
    },
    "bytearray": {
     "line number": [
      246
     ]
    },
    "memoryview": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_ro_bytes": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      259
     ]
    },
    "TypeError": {
     "line number": [
      259
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_output_ro_memoryview": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      267
     ]
    },
    "TypeError": {
     "line number": [
      267
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      264,
      265
     ]
    },
    "memoryview": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.Strxor_cTests.test_wrong_range": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "Crypto.Util.strxor.strxor_c": {
     "line number": [
      191,
      192
     ]
    },
    "ValueError": {
     "line number": [
      191,
      192
     ]
    },
    "binascii.unhexlify": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.get_tests": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "Crypto.SelfTest.Util.test_strxor.StrxorTests": {
     "line number": [
      288
     ]
    },
    "Crypto.SelfTest.Util.test_strxor.Strxor_cTests": {
     "line number": [
      289
     ]
    },
    "Crypto.SelfTest.st_common.list_test_cases": {
     "line number": [
      288,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.Util.test_strxor.hexlify": {
  "data": {
   "shadows": "binascii.hexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.list_test_cases": {
  "data": {
   "shadows": "Crypto.SelfTest.st_common.list_test_cases"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.strxor": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.strxor_c": {
  "data": {
   "shadows": "Crypto.Util.strxor.strxor_c"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.suite": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "Crypto.SelfTest.Util.test_strxor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.unhexlify": {
  "data": {
   "shadows": "binascii.unhexlify"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.test_strxor.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.Util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.__main__": {
  "data": {
   "symbols_in_volume": {
    "Crypto.SelfTest.__main__.config": {
     "line number": [
      38
     ]
    },
    "Crypto.SelfTest.__main__.slow_tests": {
     "line number": [
      30,
      37
     ]
    },
    "Crypto.SelfTest.__main__.sys": {
     "line number": [
      29,
      33,
      38
     ]
    },
    "Crypto.SelfTest.__main__.wycheproof_warnings": {
     "line number": [
      34,
      37
     ]
    },
    "Crypto.SelfTest.run": {
     "line number": [
      38
     ]
    },
    "print": {
     "line number": [
      31,
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.SelfTest.__main__.SelfTest": {
  "data": {
   "shadows": "Crypto.SelfTest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.__main__.config": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "Crypto.SelfTest.__main__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Crypto.SelfTest.__main__.slow_tests": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.SelfTest.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.__main__.wycheproof_warnings": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.SelfTest.__revision__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "Crypto.SelfTest.get_tests": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "Crypto.SelfTest.Cipher.get_tests": {
     "line number": [
      82
     ]
    },
    "Crypto.SelfTest.Hash.get_tests": {
     "line number": [
      83
     ]
    },
    "Crypto.SelfTest.IO.get_tests": {
     "line number": [
      89
     ]
    },
    "Crypto.SelfTest.Math.get_tests": {
     "line number": [
      90
     ]
    },
    "Crypto.SelfTest.Protocol.get_tests": {
     "line number": [
      84
     ]
    },
    "Crypto.SelfTest.PublicKey.get_tests": {
     "line number": [
      85
     ]
    },
    "Crypto.SelfTest.Random.get_tests": {
     "line number": [
      86
     ]
    },
    "Crypto.SelfTest.Signature.get_tests": {
     "line number": [
      88
     ]
    },
    "Crypto.SelfTest.Util.get_tests": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.loader": {
  "data": {},
  "type": "module"
 },
 "Crypto.SelfTest.loader._load_tests": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Crypto.SelfTest.loader.binascii": {
     "line number": [
      99
     ]
    },
    "Crypto.SelfTest.loader.re": {
     "line number": [
      88
     ]
    },
    "TestVector": {
     "line number": [
      86
     ]
    },
    "conversion": {
     "line number": [
      101
     ]
    },
    "len": {
     "line number": [
      97
     ]
    },
    "setattr": {
     "line number": [
      99,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.loader._load_tests.TestVector": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "object": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.SelfTest.loader._load_tests.TestVector.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "Crypto.SelfTest.loader.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.SelfTest.loader.load_tests": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "Crypto.SelfTest.loader._load_tests": {
     "line number": [
      118
     ]
    },
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      117
     ]
    },
    "open": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.loader.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.SelfTest.loader.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "Crypto.SelfTest.loader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.run": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "Crypto.SelfTest.SelfTestError": {
     "line number": [
      77
     ]
    },
    "Crypto.SelfTest.get_tests": {
     "line number": [
      61
     ]
    },
    "Crypto.SelfTest.sys": {
     "line number": [
      76
     ]
    },
    "Crypto.SelfTest.unittest": {
     "line number": [
      58,
      72
     ]
    },
    "Crypto.Util.py3compat.BytesIO": {
     "line number": [
      69
     ]
    },
    "ValueError": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.st_common": {
  "data": {},
  "type": "module"
 },
 "Crypto.SelfTest.st_common.a2b_hex": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.binascii": {
     "line number": [
      48
     ]
    },
    "Crypto.SelfTest.st_common.strip_whitespace": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.st_common.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.SelfTest.st_common.b2a_hex": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.binascii": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.st_common.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.SelfTest.st_common.list_test_cases": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "Crypto.SelfTest.st_common.unittest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.st_common.strip_whitespace": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.b": {
     "line number": [
      42,
      44
     ]
    },
    "isinstance": {
     "line number": [
      41
     ]
    },
    "str": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.SelfTest.st_common.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.SelfTest.suite": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "Crypto.SelfTest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.SelfTest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "Crypto.Signature": {
  "data": {},
  "type": "module"
 },
 "Crypto.Signature.DSS": {
  "data": {},
  "type": "module"
 },
 "Crypto.Signature.DSS.DerSequence": {
  "data": {
   "shadows": "Crypto.Util.asn1.DerSequence"
  },
  "type": "import"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.DssSigScheme": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.DeterministicDsaSigScheme": {
     "line number": [
      177
     ]
    },
    "super": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme._bits2int": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      183
     ]
    },
    "len": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme._bits2octets": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme._compute_nonce": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "Crypto.Hash.HMAC.new": {
     "line number": [
      220,
      225,
      231,
      233,
      240
     ]
    },
    "len": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme._int2octets": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DeterministicDsaSigScheme._valid_hash": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DssSigScheme": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "object": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Signature.DSS.DssSigScheme.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DssSigScheme._compute_nonce": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DssSigScheme._valid_hash": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DssSigScheme.can_sign": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DssSigScheme.sign": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      103
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      119
     ]
    },
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      108
     ]
    },
    "ValueError": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.DssSigScheme.verify": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      160,
      160
     ]
    },
    "Crypto.Math.Numbers.Integer.from_bytes": {
     "line number": [
      150,
      165
     ]
    },
    "Crypto.Util.asn1.DerSequence": {
     "line number": [
      155
     ]
    },
    "IndexError": {
     "line number": [
      156
     ]
    },
    "ValueError": {
     "line number": [
      145,
      149,
      156,
      157,
      159,
      163,
      168
     ]
    },
    "len": {
     "line number": [
      148,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.EccKey": {
  "data": {
   "shadows": "Crypto.PublicKey.ECC.EccKey"
  },
  "type": "import"
 },
 "Crypto.Signature.DSS.FipsDsaSigScheme": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.DssSigScheme": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Signature.DSS.FipsDsaSigScheme.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      267
     ]
    },
    "Crypto.Signature.DSS.FipsDsaSigScheme": {
     "line number": [
      264
     ]
    },
    "ValueError": {
     "line number": [
      271
     ]
    },
    "super": {
     "line number": [
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.FipsDsaSigScheme._compute_nonce": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.FipsDsaSigScheme._valid_hash": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.FipsEcDsaSigScheme": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.DssSigScheme": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Signature.DSS.FipsEcDsaSigScheme.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "Crypto.Signature.DSS.FipsEcDsaSigScheme": {
     "line number": [
      288
     ]
    },
    "super": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.FipsEcDsaSigScheme._compute_nonce": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer.random_range": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.FipsEcDsaSigScheme._valid_hash": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "Crypto.Signature.DSS.HMAC": {
  "data": {
   "shadows": "Crypto.Hash.HMAC"
  },
  "type": "import"
 },
 "Crypto.Signature.DSS.Integer": {
  "data": {
   "shadows": "Crypto.Math.Numbers.Integer"
  },
  "type": "import"
 },
 "Crypto.Signature.DSS.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.Signature.DSS.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Signature.DSS.new": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "Crypto.Math.Numbers.Integer": {
     "line number": [
      397
     ]
    },
    "Crypto.PublicKey.ECC.EccKey": {
     "line number": [
      393,
      408
     ]
    },
    "Crypto.Signature.DSS.DeterministicDsaSigScheme": {
     "line number": [
      406
     ]
    },
    "Crypto.Signature.DSS.FipsDsaSigScheme": {
     "line number": [
      411
     ]
    },
    "Crypto.Signature.DSS.FipsEcDsaSigScheme": {
     "line number": [
      409
     ]
    },
    "ValueError": {
     "line number": [
      391,
      413
     ]
    },
    "getattr": {
     "line number": [
      401
     ]
    },
    "isinstance": {
     "line number": [
      393,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.PKCS1_PSS": {
  "data": {},
  "type": "module"
 },
 "Crypto.Signature.PKCS1_PSS._pycrypto_verify": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      45
     ]
    },
    "ValueError": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.PKCS1_PSS.new": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "Crypto.Signature.PKCS1_PSS._pycrypto_verify": {
     "line number": [
      54
     ]
    },
    "Crypto.Signature.PKCS1_PSS.types": {
     "line number": [
      54
     ]
    },
    "Crypto.Signature.pss.new": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.PKCS1_PSS.pss": {
  "data": {
   "shadows": "Crypto.Signature.pss"
  },
  "type": "import"
 },
 "Crypto.Signature.PKCS1_PSS.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "Crypto.Signature.PKCS1_v1_5": {
  "data": {},
  "type": "module"
 },
 "Crypto.Signature.PKCS1_v1_5._pycrypto_verify": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      44
     ]
    },
    "ValueError": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.PKCS1_v1_5.new": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "Crypto.Signature.PKCS1_v1_5._pycrypto_verify": {
     "line number": [
      51
     ]
    },
    "Crypto.Signature.PKCS1_v1_5.types": {
     "line number": [
      51
     ]
    },
    "Crypto.Signature.pkcs1_15.new": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Signature.PKCS1_v1_5.pkcs1_15": {
  "data": {
   "shadows": "Crypto.Signature.pkcs1_15"
  },
  "type": "import"
 },
 "Crypto.Signature.PKCS1_v1_5.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "Crypto.Signature.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "Crypto.Util": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util.Counter": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util.Counter.new": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.Padding": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util.Padding.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.Util.Padding.pad": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      63
     ]
    },
    "bchr": {
     "line number": [
      57,
      59,
      59,
      61,
      61
     ]
    },
    "len": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.Padding.unpad": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86,
      90,
      93,
      96,
      100,
      102,
      104
     ]
    },
    "bchr": {
     "line number": [
      92,
      95,
      98,
      101
     ]
    },
    "bord": {
     "line number": [
      88
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "min": {
     "line number": [
      89,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.RFC1751": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util.RFC1751._extract": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "ord": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.RFC1751._key2bin": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "Crypto.Util.RFC1751.binary": {
     "line number": [
      41,
      41
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      40
     ]
    },
    "map": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.RFC1751.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.Util.RFC1751.binary": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "Crypto.Util.RFC1751.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "Crypto.Util.RFC1751.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Util.RFC1751.english_to_key": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Util.RFC1751._extract": {
     "line number": [
      136,
      137
     ]
    },
    "Crypto.Util.RFC1751._key2bin": {
     "line number": [
      133
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      130
     ]
    },
    "ValueError": {
     "line number": [
      138
     ]
    },
    "len": {
     "line number": [
      108
     ]
    },
    "range": {
     "line number": [
      108,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.RFC1751.key_to_english": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "Crypto.Util.RFC1751._extract": {
     "line number": [
      81,
      85
     ]
    },
    "Crypto.Util.RFC1751._key2bin": {
     "line number": [
      78,
      83
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      83
     ]
    },
    "ValueError": {
     "line number": [
      72
     ]
    },
    "len": {
     "line number": [
      71,
      75
     ]
    },
    "range": {
     "line number": [
      75,
      80,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.RFC1751.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "Crypto.Util.RFC1751.wordlist": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "Crypto.Util.__all__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "Crypto.Util._cpu_features": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Util._cpu_features._raw_cpuid_lib": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.Util._cpu_features.have_aes_ni": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Crypto.Util._cpu_features._raw_cpuid_lib": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._cpu_features.have_clmul": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "Crypto.Util._cpu_features._raw_cpuid_lib": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._cpu_features.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Util._file_system": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util._file_system.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "Crypto.Util._file_system.pycryptodome_filename": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "Crypto.Util._file_system.os": {
     "line number": [
      50,
      50,
      51,
      53
     ]
    },
    "ValueError": {
     "line number": [
      46
     ]
    },
    "list": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api._c_ssize_t": {
     "line number": [
      207
     ]
    },
    "Crypto.Util._raw_api.c_ulong": {
     "line number": [
      109,
      110
     ]
    },
    "Crypto.Util._raw_api.ctypes": {
     "line number": [
      201,
      204,
      205,
      206,
      207,
      263
     ]
    },
    "Crypto.Util._raw_api.extension_suffixes": {
     "line number": [
      45
     ]
    },
    "Crypto.Util._raw_api.ffi": {
     "line number": [
      87,
      88,
      88,
      90
     ]
    },
    "Crypto.Util._raw_api.imp": {
     "line number": [
      43,
      44
     ]
    },
    "Crypto.Util._raw_api.sys": {
     "line number": [
      39,
      53,
      53,
      72,
      72,
      81,
      81,
      196,
      196,
      311
     ]
    },
    "ImportError": {
     "line number": [
      73,
      82,
      163
     ]
    },
    "bytearray": {
     "line number": [
      54,
      56
     ]
    },
    "cffi.FFI": {
     "line number": [
      86
     ]
    },
    "ctypes.c_size_t": {
     "line number": [
      199
     ]
    },
    "importlib.machinery.EXTENSION_SUFFIXES": {
     "line number": [
      50
     ]
    },
    "memoryview": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Util._raw_api.CDLL": {
  "data": {
   "shadows": "ctypes.CDLL"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.FFI": {
  "data": {
   "shadows": "cffi.FFI"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.SmartPointer": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "object": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util._raw_api.SmartPointer.__del__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.SmartPointer.__init__": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.SmartPointer.get": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.SmartPointer.release": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.VoidPointer_ctypes": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer_cffi": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "Crypto.Util._raw_api._VoidPointer": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util._raw_api.VoidPointer_cffi.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.ffi": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer_cffi.address_of": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer_cffi.get": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer_ctypes": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "Crypto.Util._raw_api._VoidPointer": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util._raw_api.VoidPointer_ctypes.__init__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "ctypes.c_void_p": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer_ctypes.address_of": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "ctypes.byref": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.VoidPointer_ctypes.get": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "Crypto.Util._raw_api._Array": {
  "data": {
   "shadows": "ctypes.Array"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api._PyBUF_SIMPLE": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api._PyBuffer_Release": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api._PyObject_GetBuffer": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api._Py_buffer": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "Crypto.Util._raw_api._c_ssize_p": {
     "line number": [
      220,
      221,
      222
     ]
    },
    "Crypto.Util._raw_api._c_ssize_t": {
     "line number": [
      215,
      216,
      228
     ]
    },
    "Crypto.Util._raw_api.ctypes": {
     "line number": [
      211,
      214,
      217,
      218,
      219
     ]
    },
    "Crypto.Util._raw_api.sys": {
     "line number": [
      227
     ]
    },
    "ctypes.c_void_p": {
     "line number": [
      213,
      223
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util._raw_api._VoidPointer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "object": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util._raw_api._VoidPointer.address_of": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.abc": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api._VoidPointer.get": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.abc": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api._buffer_type": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api._c_ssize_p": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api._c_ssize_t": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api._py_object": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.backend": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api.byref": {
  "data": {
   "shadows": "ctypes.byref"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.c_size_t": {
  "data": {
   "shadows": "ctypes.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.c_ubyte": {
  "data": {
   "shadows": "ctypes.c_ubyte"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.c_uint": {
  "data": {
   "shadows": "ctypes.c_uint"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.c_uint8_ptr": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "Crypto.Util._raw_api._PyBUF_SIMPLE": {
     "line number": [
      236
     ]
    },
    "Crypto.Util._raw_api._PyBuffer_Release": {
     "line number": [
      241
     ]
    },
    "Crypto.Util._raw_api._PyObject_GetBuffer": {
     "line number": [
      236
     ]
    },
    "Crypto.Util._raw_api._Py_buffer": {
     "line number": [
      235
     ]
    },
    "Crypto.Util._raw_api._buffer_type": {
     "line number": [
      233
     ]
    },
    "Crypto.Util._raw_api._py_object": {
     "line number": [
      234
     ]
    },
    "Crypto.Util.py3compat.byte_string": {
     "line number": [
      231
     ]
    },
    "TypeError": {
     "line number": [
      243
     ]
    },
    "ctypes.Array": {
     "line number": [
      231
     ]
    },
    "ctypes.byref": {
     "line number": [
      236,
      241
     ]
    },
    "ctypes.c_ubyte": {
     "line number": [
      238
     ]
    },
    "isinstance": {
     "line number": [
      231,
      233
     ]
    },
    "type": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.c_ulong": {
  "data": {
   "shadows": "ctypes.c_ulong"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.c_ulonglong": {
  "data": {
   "shadows": "ctypes.c_ulonglong"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.c_void_p": {
  "data": {
   "shadows": "ctypes.c_void_p"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.cached_architecture": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.extension_suffixes": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api.ffi": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api.find_library": {
  "data": {
   "shadows": "ctypes.util.find_library"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.get_c_string": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.get_raw_buffer": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.is_buffer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      324
     ]
    },
    "bytes": {
     "line number": [
      324
     ]
    },
    "isinstance": {
     "line number": [
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.is_writeable_buffer": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      327
     ]
    },
    "isinstance": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.load_lib": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.cached_architecture": {
     "line number": [
      175,
      179,
      180
     ]
    },
    "Crypto.Util._raw_api.platform": {
     "line number": [
      179
     ]
    },
    "OSError": {
     "line number": [
      184
     ]
    },
    "ctypes.CDLL": {
     "line number": [
      186
     ]
    },
    "ctypes.util.find_library": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "Crypto.Util._file_system.pycryptodome_filename": {
     "line number": [
      304
     ]
    },
    "Crypto.Util._raw_api.extension_suffixes": {
     "line number": [
      301
     ]
    },
    "Crypto.Util._raw_api.load_lib": {
     "line number": [
      304
     ]
    },
    "OSError": {
     "line number": [
      306,
      308
     ]
    },
    "str": {
     "line number": [
      307
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util._raw_api.machinery": {
  "data": {
   "shadows": "importlib.machinery"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.null_pointer": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "Crypto.Util._raw_api.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.pycryptodome_filename": {
  "data": {
   "shadows": "Crypto.Util._file_system.pycryptodome_filename"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Util._raw_api.uint8_t_type": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "Crypto.Util.asn1": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util.asn1.BytesIO_EOF": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "object": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.BytesIO_EOF.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "Crypto.Util.asn1.BytesIO_EOF.data_since_bookmark": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "Crypto.Util.asn1.BytesIO_EOF.read": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      64
     ]
    },
    "len": {
     "line number": [
      63,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.BytesIO_EOF.read_byte": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bord": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.BytesIO_EOF.remaining_data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "len": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.BytesIO_EOF.set_bookmark": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerBitString": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      701
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerBitString.__init__": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      744,
      747
     ]
    },
    "isinstance": {
     "line number": [
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerBitString._decodeFromStream": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      779
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      781
     ]
    },
    "ValueError": {
     "line number": [
      782
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerBitString.decode": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerBitString.encode": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      758
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerInteger": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerInteger.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerInteger._decodeFromStream": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      325
     ]
    },
    "Crypto.Util.asn1.struct": {
     "line number": [
      330
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      338,
      340
     ]
    },
    "ValueError": {
     "line number": [
      329,
      331
     ]
    },
    "len": {
     "line number": [
      328,
      330
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerInteger.decode": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerInteger.encode": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      306
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      300,
      302
     ]
    },
    "int": {
     "line number": [
      300
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerNull": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      592
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerNull.__init__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      598
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "object": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerObject.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject._convertTag": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "Crypto.Util.asn1._is_number": {
     "line number": [
      147,
      151
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      149
     ]
    },
    "ValueError": {
     "line number": [
      152
     ]
    },
    "len": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject._decodeFromStream": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "Crypto.Util.asn1.BytesIO_EOF": {
     "line number": [
      237
     ]
    },
    "ValueError": {
     "line number": [
      228,
      240,
      246
     ]
    },
    "hasattr": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject._decodeLen": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      193
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      191
     ]
    },
    "ValueError": {
     "line number": [
      192,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject._definite_form": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      161
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      162,
      163
     ]
    },
    "len": {
     "line number": [
      162
     ]
    },
    "staticmethod": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject.decode": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "Crypto.Util.asn1.BytesIO_EOF": {
     "line number": [
      213
     ]
    },
    "Crypto.Util.py3compat.byte_string": {
     "line number": [
      210
     ]
    },
    "ValueError": {
     "line number": [
      211,
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObject.encode": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      176,
      180
     ]
    },
    "hasattr": {
     "line number": [
      175
     ]
    },
    "len": {
     "line number": [
      177,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObjectId": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      601
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerObjectId.__init__": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObjectId._decodeFromStream": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "Crypto.Util.asn1.BytesIO_EOF": {
     "line number": [
      689
     ]
    },
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      686
     ]
    },
    "divmod": {
     "line number": [
      690
     ]
    },
    "str": {
     "line number": [
      690,
      696
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObjectId.decode": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerObjectId.encode": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      664
     ]
    },
    "Crypto.Util.py3compat.bchr": {
     "line number": [
      653,
      663
     ]
    },
    "ValueError": {
     "line number": [
      652
     ]
    },
    "int": {
     "line number": [
      650
     ]
    },
    "len": {
     "line number": [
      651
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerOctetString": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerOctetString.__init__": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerSequence.__delitem__": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__delslice__": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__getitem__": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__getslice__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "max": {
     "line number": [
      424,
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__iadd__": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__init__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__len__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "len": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__setitem__": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.__setslice__": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence._decodeFromStream": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "Crypto.Util.asn1.BytesIO_EOF": {
     "line number": [
      518
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      529
     ]
    },
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      515,
      522
     ]
    },
    "TypeError": {
     "line number": [
      539
     ]
    },
    "ValueError": {
     "line number": [
      543
     ]
    },
    "len": {
     "line number": [
      538,
      540,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.append": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.decode": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      502
     ]
    },
    "ValueError": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.encode": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      475
     ]
    },
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      478
     ]
    },
    "Crypto.Util.asn1._is_number": {
     "line number": [
      474
     ]
    },
    "Crypto.Util.py3compat.byte_string": {
     "line number": [
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.hasInts": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "Crypto.Util.asn1._is_number": {
     "line number": [
      446
     ]
    },
    "len": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSequence.hasOnlyInts": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "len": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "class"
 },
 "Crypto.Util.asn1.DerSetOf.__getitem__": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf.__init__": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      828
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf.__iter__": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      843
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf.__len__": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": {
    "len": {
     "line number": [
      846
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf._decodeFromStream": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": {
    "Crypto.Util.asn1.BytesIO_EOF": {
     "line number": [
      899
     ]
    },
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      918
     ]
    },
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      896,
      904
     ]
    },
    "ValueError": {
     "line number": [
      912
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf.add": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      859
     ]
    },
    "Crypto.Util.asn1._is_number": {
     "line number": [
      857
     ]
    },
    "Crypto.Util.py3compat.bord": {
     "line number": [
      862
     ]
    },
    "ValueError": {
     "line number": [
      866
     ]
    },
    "isinstance": {
     "line number": [
      859
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf.decode": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      888
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.DerSetOf.encode": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": {
    "Crypto.Util.asn1.DerInteger": {
     "line number": [
      932
     ]
    },
    "Crypto.Util.asn1.DerObject": {
     "line number": [
      933,
      940
     ]
    },
    "Crypto.Util.asn1._is_number": {
     "line number": [
      931
     ]
    },
    "isinstance": {
     "line number": [
      933
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "Crypto.Util.asn1._is_number": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.asn1.b": {
  "data": {
   "shadows": "Crypto.Util.py3compat.b"
  },
  "type": "import"
 },
 "Crypto.Util.asn1.bchr": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bchr"
  },
  "type": "import"
 },
 "Crypto.Util.asn1.bord": {
  "data": {
   "shadows": "Crypto.Util.py3compat.bord"
  },
  "type": "import"
 },
 "Crypto.Util.asn1.byte_string": {
  "data": {
   "shadows": "Crypto.Util.py3compat.byte_string"
  },
  "type": "import"
 },
 "Crypto.Util.asn1.bytes_to_long": {
  "data": {
   "shadows": "Crypto.Util.number.bytes_to_long"
  },
  "type": "import"
 },
 "Crypto.Util.asn1.long_to_bytes": {
  "data": {
   "shadows": "Crypto.Util.number.long_to_bytes"
  },
  "type": "import"
 },
 "Crypto.Util.asn1.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Util.number": {
  "data": {},
  "type": "module"
 },
 "Crypto.Util.number.GCD": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      120,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.Random": {
  "data": {
   "shadows": "Crypto.Random"
  },
  "type": "import"
 },
 "Crypto.Util.number._fastmath": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "Crypto.Util.number._memoryview": {
  "data": {
   "shadows": "Crypto.Util.py3compat._memoryview"
  },
  "type": "import"
 },
 "Crypto.Util.number._rabinMillerTest": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "Crypto.Util.number.getRandomRange": {
     "line number": [
      183,
      185
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      181,
      192
     ]
    },
    "min": {
     "line number": [
      181
     ]
    },
    "pow": {
     "line number": [
      188
     ]
    },
    "randfunc": {
     "line number": [
      183,
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.bytes_to_long": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "Crypto.Util.number.struct": {
     "line number": [
      435
     ]
    },
    "Crypto.Util.number.sys": {
     "line number": [
      439
     ]
    },
    "Crypto.Util.py3compat._memoryview": {
     "line number": [
      442
     ]
    },
    "bytearray": {
     "line number": [
      440
     ]
    },
    "bytes": {
     "line number": [
      441
     ]
    },
    "isinstance": {
     "line number": [
      440,
      442
     ]
    },
    "len": {
     "line number": [
      445
     ]
    },
    "range": {
     "line number": [
      450
     ]
    },
    "unpack": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.ceil_div": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      43
     ]
    },
    "ZeroDivisionError": {
     "line number": [
      41
     ]
    },
    "divmod": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.getPrime": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "Crypto.Random.get_random_bytes": {
     "line number": [
      147
     ]
    },
    "Crypto.Util.number.getRandomNBitInteger": {
     "line number": [
      149
     ]
    },
    "Crypto.Util.number.isPrime": {
     "line number": [
      150
     ]
    },
    "randfunc": {
     "line number": [
      146,
      147,
      149,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.getRandomInteger": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "Crypto.Random.get_random_bytes": {
     "line number": [
      73
     ]
    },
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      80
     ]
    },
    "Crypto.Util.number.struct": {
     "line number": [
      79
     ]
    },
    "ord": {
     "line number": [
      78
     ]
    },
    "randfunc": {
     "line number": [
      75,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.getRandomNBitInteger": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "Crypto.Util.number.getRandomInteger": {
     "line number": [
      111
     ]
    },
    "Crypto.Util.number.size": {
     "line number": [
      113
     ]
    },
    "randfunc": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.getRandomRange": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "Crypto.Util.number.getRandomInteger": {
     "line number": [
      95,
      97
     ]
    },
    "Crypto.Util.number.size": {
     "line number": [
      94
     ]
    },
    "randfunc": {
     "line number": [
      95,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.getStrongPrime": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "Crypto.Random.get_random_bytes": {
     "line number": [
      242
     ]
    },
    "Crypto.Util.number.GCD": {
     "line number": [
      317,
      320
     ]
    },
    "Crypto.Util.number._fastmath": {
     "line number": [
      245,
      246
     ]
    },
    "Crypto.Util.number._rabinMillerTest": {
     "line number": [
      286,
      325
     ]
    },
    "Crypto.Util.number.getRandomNBitInteger": {
     "line number": [
      269
     ]
    },
    "Crypto.Util.number.getRandomRange": {
     "line number": [
      263
     ]
    },
    "Crypto.Util.number.inverse": {
     "line number": [
      296,
      297
     ]
    },
    "Crypto.Util.number.math": {
     "line number": [
      252,
      252,
      252
     ]
    },
    "Crypto.Util.py3compat.iter_range": {
     "line number": [
      275
     ]
    },
    "RuntimeError": {
     "line number": [
      291,
      332
     ]
    },
    "ValueError": {
     "line number": [
      250
     ]
    },
    "int": {
     "line number": [
      252
     ]
    },
    "len": {
     "line number": [
      271,
      275,
      280
     ]
    },
    "long": {
     "line number": [
      246,
      246
     ]
    },
    "randfunc": {
     "line number": [
      241,
      242,
      247,
      263,
      269
     ]
    },
    "range": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.inverse": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "Crypto.Util.number.isPrime": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "Crypto.Random.get_random_bytes": {
     "line number": [
      355
     ]
    },
    "Crypto.Util.number._fastmath": {
     "line number": [
      357,
      358
     ]
    },
    "Crypto.Util.number._rabinMillerTest": {
     "line number": [
      369
     ]
    },
    "Crypto.Util.number.math": {
     "line number": [
      368,
      368,
      368
     ]
    },
    "int": {
     "line number": [
      368
     ]
    },
    "long": {
     "line number": [
      358
     ]
    },
    "randfunc": {
     "line number": [
      354,
      355,
      358,
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.iter_range": {
  "data": {
   "shadows": "Crypto.Util.py3compat.iter_range"
  },
  "type": "import"
 },
 "Crypto.Util.number.long2str": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "Crypto.Util.number.long_to_bytes": {
     "line number": [
      459
     ]
    },
    "Crypto.Util.number.warnings": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.long_to_bytes": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "Crypto.Util.number.struct": {
     "line number": [
      400
     ]
    },
    "int": {
     "line number": [
      399
     ]
    },
    "len": {
     "line number": [
      405,
      415,
      416
     ]
    },
    "pack": {
     "line number": [
      402
     ]
    },
    "range": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "Crypto.Util.number.sieve_base": {
  "data": {
   "lineno": 468
  },
  "type": "constant"
 },
 "Crypto.Util.number.size": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.str2long": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "Crypto.Util.number.bytes_to_long": {
     "line number": [
      462
     ]
    },
    "Crypto.Util.number.warnings": {
     "line number": [
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.number.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "Crypto.Util.number.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Util.number.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "Crypto.Util.py3compat": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util.py3compat.abc": {
     "line number": [
      107,
      164
     ]
    },
    "Crypto.Util.py3compat.sys": {
     "line number": [
      65,
      93,
      163
     ]
    },
    "Crypto.Util.py3compat.types": {
     "line number": [
      95
     ]
    },
    "memoryview": {
     "line number": [
      97,
      139
     ]
    },
    "object": {
     "line number": [
      107
     ]
    },
    "range": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Util.py3compat.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "Crypto.Util.py3compat.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "Crypto.Util.py3compat._copy_bytes": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Crypto.Util.py3compat._memoryview": {
     "line number": [
      156
     ]
    },
    "bytearray": {
     "line number": [
      158
     ]
    },
    "bytes": {
     "line number": [
      159
     ]
    },
    "isinstance": {
     "line number": [
      156,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat._memoryview": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "Crypto.Util.py3compat.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "Crypto.Util.py3compat.b": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.bchr": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.bord": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.bstr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      116,
      118
     ]
    },
    "isinstance": {
     "line number": [
      115
     ]
    },
    "str": {
     "line number": [
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.byte_string": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      133
     ]
    },
    "isinstance": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.is_native_int": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "int": {
     "line number": [
      144
     ]
    },
    "isinstance": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.is_string": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      147
     ]
    },
    "str": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.iter_range": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "Crypto.Util.py3compat.maxint": {
  "data": {
   "shadows": "sys.maxsize"
  },
  "type": "import"
 },
 "Crypto.Util.py3compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "Crypto.Util.py3compat.tobytes": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      124
     ]
    },
    "bytes": {
     "line number": [
      122,
      125,
      129
     ]
    },
    "isinstance": {
     "line number": [
      122,
      124,
      126
     ]
    },
    "str": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.tostr": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "Crypto.Util.py3compat.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "Crypto.Util.strxor": {
  "data": {
   "symbols_in_volume": {
    "Crypto.Util._raw_api.load_pycryptodome_raw_lib": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "Crypto.Util.strxor._raw_strxor": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "Crypto.Util.strxor._strxor_direct": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      136
     ]
    },
    "Crypto.Util.strxor._raw_strxor": {
     "line number": [
      136
     ]
    },
    "len": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.strxor.c_size_t": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_size_t"
  },
  "type": "import"
 },
 "Crypto.Util.strxor.c_uint8_ptr": {
  "data": {
   "shadows": "Crypto.Util._raw_api.c_uint8_ptr"
  },
  "type": "import"
 },
 "Crypto.Util.strxor.create_string_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.create_string_buffer"
  },
  "type": "import"
 },
 "Crypto.Util.strxor.get_raw_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.get_raw_buffer"
  },
  "type": "import"
 },
 "Crypto.Util.strxor.is_writeable_buffer": {
  "data": {
   "shadows": "Crypto.Util._raw_api.is_writeable_buffer"
  },
  "type": "import"
 },
 "Crypto.Util.strxor.load_pycryptodome_raw_lib": {
  "data": {
   "shadows": "Crypto.Util._raw_api.load_pycryptodome_raw_lib"
  },
  "type": "import"
 },
 "Crypto.Util.strxor.strxor": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      82
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      79,
      80,
      81
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      67
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      85
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      72
     ]
    },
    "Crypto.Util.strxor._raw_strxor": {
     "line number": [
      79
     ]
    },
    "TypeError": {
     "line number": [
      73
     ]
    },
    "ValueError": {
     "line number": [
      64,
      76
     ]
    },
    "len": {
     "line number": [
      63,
      63,
      67,
      75,
      75,
      77,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.Util.strxor.strxor_c": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "Crypto.Util._raw_api.c_size_t": {
     "line number": [
      125
     ]
    },
    "Crypto.Util._raw_api.c_uint8_ptr": {
     "line number": [
      122,
      124
     ]
    },
    "Crypto.Util._raw_api.create_string_buffer": {
     "line number": [
      110
     ]
    },
    "Crypto.Util._raw_api.get_raw_buffer": {
     "line number": [
      129
     ]
    },
    "Crypto.Util._raw_api.is_writeable_buffer": {
     "line number": [
      115
     ]
    },
    "Crypto.Util.strxor._raw_strxor": {
     "line number": [
      122
     ]
    },
    "TypeError": {
     "line number": [
      116
     ]
    },
    "ValueError": {
     "line number": [
      107,
      119
     ]
    },
    "len": {
     "line number": [
      110,
      118,
      118,
      120,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "Crypto.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "Crypto.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "Crypto.version_info": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 }
}