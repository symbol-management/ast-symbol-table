{
 "cc_plugin_glider": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "cc_plugin_glider.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "cc_plugin_glider._version": {
  "data": {},
  "type": "module"
 },
 "cc_plugin_glider._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "cc_plugin_glider._version.json",
    "cc_plugin_glider._version.version_json"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "cc_plugin_glider._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "cc_plugin_glider.glider_dac": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "str"
   ]
  },
  "type": "module"
 },
 "cc_plugin_glider.glider_dac.BaseCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseCheck"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.BaseNCCheck": {
  "data": {
   "shadows": "compliance_checker.base.BaseNCCheck"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.CF1_6Check": {
  "data": {
   "shadows": "compliance_checker.cf.cf.CF1_6Check"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.GliderCheck": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "compliance_checker.__version__",
    "compliance_checker.base.BaseNCCheck",
    "compliance_checker.cf.cf.CF1_6Check"
   ]
  },
  "type": "class"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "cc_plugin_glider.glider_dac.GliderCheck",
    "cc_plugin_glider.glider_dac.os",
    "cc_plugin_glider.glider_dac.six",
    "set",
    "six.moves.urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.__init__.sea_name_parse": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "lxml.etree.XMLParser",
    "lxml.etree.fromstring",
    "set"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_ancillary_variables": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.MEDIUM",
    "hasattr",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_container_variables": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_ctd_variable_attributes": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.HIGH",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_depth_array": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "numpy.abs",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_dim_no_data": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_dimensions": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_dtype": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_dtype",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_global_attributes": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "RuntimeError",
    "cc_plugin_glider.glider_dac.basestring",
    "compliance_checker.base.BaseCheck.HIGH",
    "getattr",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_ioos_ra": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.TestCtx",
    "getattr"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_lat_lon_attributes": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.HIGH",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_monotonically_increasing_time": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "compliance_checker.base.TestCtx",
    "numpy.all",
    "numpy.diff"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_ncei_tables": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "RuntimeError",
    "cc_plugin_glider.glider_dac.six",
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.TestCtx",
    "getattr",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_pressure_depth_attributes": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.HIGH",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_profile_variable_attributes_and_types": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.HIGH",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_qartod": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "cc_plugin_glider.util.compare_dtype",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "getattr",
    "isinstance",
    "numpy.dtype",
    "numpy.int8",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_qc_variables": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_required_variables": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.HIGH",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_standard_names": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_time_attributes": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.HIGH"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_trajectory_variables": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "cc_plugin_glider.util._check_variable_attrs",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "int"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_valid_lon": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "compliance_checker.base.BaseCheck.LOW",
    "compliance_checker.base.TestCtx",
    "getattr"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_valid_max_dtype": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "cc_plugin_glider.glider_dac.basestring",
    "cc_plugin_glider.util.compare_dtype",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "float",
    "getattr",
    "int",
    "isinstance",
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.check_valid_min_dtype": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "cc_plugin_glider.glider_dac.basestring",
    "cc_plugin_glider.util.compare_dtype",
    "compliance_checker.base.BaseCheck.MEDIUM",
    "compliance_checker.base.TestCtx",
    "float",
    "getattr",
    "int",
    "isinstance",
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.make_result": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "classmethod",
    "compliance_checker.base.Result"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.request_resource": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "cc_plugin_glider.glider_dac.requests",
    "cc_plugin_glider.glider_dac.warnings",
    "classmethod",
    "fn",
    "open",
    "requests.exceptions.RequestException",
    "str"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.GliderCheck.setup": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "cc_plugin_glider.glider_dac.RequestException": {
  "data": {
   "shadows": "requests.exceptions.RequestException"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.Result": {
  "data": {
   "shadows": "compliance_checker.base.Result"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.TestCtx": {
  "data": {
   "shadows": "compliance_checker.base.TestCtx"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.__version__": {
  "data": {
   "shadows": "compliance_checker.__version__"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.basestring": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "cc_plugin_glider.glider_dac.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.etree": {
  "data": {
   "shadows": "lxml.etree"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.util": {
  "data": {
   "shadows": "cc_plugin_glider.util"
  },
  "type": "import"
 },
 "cc_plugin_glider.glider_dac.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "cc_plugin_glider.required_var_attrs": {
  "data": {},
  "type": "module"
 },
 "cc_plugin_glider.required_var_attrs.required_var_attrs": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "cc_plugin_glider.tests": {
  "data": {},
  "type": "module"
 },
 "cc_plugin_glider.tests.resources": {
  "data": {
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.get_filename"
   ]
  },
  "type": "module"
 },
 "cc_plugin_glider.tests.resources.STATIC_FILES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "cc_plugin_glider.tests.resources.generate_dataset": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.subprocess"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.resources.get_filename": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.generate_dataset",
    "cc_plugin_glider.tests.resources.os",
    "pkg_resources.resource_filename"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.resources.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.resources.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.resources.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck": {
  "data": {
   "symbols_in_volume": [
    "NameError",
    "str"
   ]
  },
  "type": "module"
 },
 "cc_plugin_glider.tests.test_glidercheck.Dataset": {
  "data": {
   "shadows": "netCDF4.Dataset"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.MockTimeSeries": {
  "data": {
   "shadows": "compliance_checker.tests.helpers.MockTimeSeries"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.STATIC_FILES": {
  "data": {
   "shadows": "cc_plugin_glider.tests.resources.STATIC_FILES"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.test_glidercheck.unittest"
   ]
  },
  "type": "class"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.__repr__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.get_dataset": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.test_glidercheck.basestring",
    "isinstance",
    "netCDF4.Dataset"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.setUp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "GliderCheck",
    "cc_plugin_glider.tests.test_glidercheck.os",
    "cc_plugin_glider.tests.test_glidercheck.requests_mock",
    "cc_plugin_glider.tests.test_glidercheck.six",
    "open",
    "six.moves.urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.shortDescription": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_compare_string_var_dtype": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "cc_plugin_glider.util.compare_dtype",
    "compliance_checker.tests.helpers.MockTimeSeries",
    "str"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_ctd_fail": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_ctd_vars": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_depth_diff": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.linspace",
    "numpy.ma.array",
    "numpy.ma.masked",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_global": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_global_fail": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_ioos_ra": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_location": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_location_fail": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_metadata": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_ncei_compliance": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "RuntimeError",
    "compliance_checker.tests.helpers.MockTimeSeries",
    "set"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_platform_type": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_qc_variables": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES",
    "sorted"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_seanames": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_standard_names": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES",
    "len"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_time_depth_non_nan": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_time_monotonically_increasing": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "compliance_checker.tests.helpers.MockTimeSeries",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_time_series_variables": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_units": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_valid_lon": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_valid_max_dtype": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.TestGliderCheck.test_valid_min_dtype": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "cc_plugin_glider.tests.resources.STATIC_FILES"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.tests.test_glidercheck.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.basestring": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "cc_plugin_glider.tests.test_glidercheck.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.requests_mock": {
  "data": {
   "shadows": "requests_mock"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "cc_plugin_glider.tests.test_glidercheck.util": {
  "data": {
   "shadows": "cc_plugin_glider.util"
  },
  "type": "import"
 },
 "cc_plugin_glider.util": {
  "data": {},
  "type": "module"
 },
 "cc_plugin_glider.util.Unit": {
  "data": {
   "shadows": "cf_units.Unit"
  },
  "type": "import"
 },
 "cc_plugin_glider.util._check_dtype": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cc_plugin_glider.required_var_attrs.required_var_attrs.get",
    "cc_plugin_glider.util.compare_dtype",
    "hasattr",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.util._check_variable_attrs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "cc_plugin_glider.required_var_attrs.required_var_attrs.get",
    "cf_units.Unit",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.util.compare_dtype": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "operator.eq",
    "str"
   ]
  },
  "type": "function"
 },
 "cc_plugin_glider.util.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "cc_plugin_glider.util.eq": {
  "data": {
   "shadows": "operator.eq"
  },
  "type": "import"
 },
 "cc_plugin_glider.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "cc_plugin_glider.util.required_var_attrs": {
  "data": {
   "shadows": "cc_plugin_glider.required_var_attrs.required_var_attrs"
  },
  "type": "import"
 },
 "cc_plugin_glider.util.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 }
}