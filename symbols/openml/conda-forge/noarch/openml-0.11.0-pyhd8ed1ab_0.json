{
 "openml": {
  "data": {},
  "type": "module"
 },
 "openml.__all__": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "openml.__version__": {
  "data": {},
  "type": "module"
 },
 "openml.__version__.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "openml.base": {
  "data": {},
  "type": "module"
 },
 "openml.base.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "openml.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.base.OpenMLBase": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "openml.base.OpenMLBase.__repr__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._apply_repr_template": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "max",
    "openml.base.re",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._entity_letter": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._get_file_elements": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._get_repr_body_fields": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._parse_publish_response": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._to_dict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase._to_xml": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "openml.base.xmltodict",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.id": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.open_in_browser": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "openml.base.webbrowser"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.openml_url": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.publish": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_get_rest_api_type_alias",
    "openml.base.xmltodict"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.push_tag": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_tag_openml_base",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.remove_tag": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "_tag_openml_base",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.base.OpenMLBase.url_for_id": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "openml.base.openml.config": {
  "data": {
   "shadows": "openml.config"
  },
  "type": "import"
 },
 "openml.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openml.base.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "openml.base.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "openml.config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openml.config.ConfigurationForExamples",
    "openml.config._create_log_handlers",
    "openml.config._defaults",
    "openml.config._setup",
    "openml.config.logging",
    "openml.config.os",
    "str"
   ]
  },
  "type": "module"
 },
 "openml.config.ConfigurationForExamples": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "openml.config.ConfigurationForExamples.start_using_configuration_for_example": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "classmethod",
    "openml.config.apikey",
    "openml.config.server"
   ]
  },
  "type": "function"
 },
 "openml.config.ConfigurationForExamples.stop_using_configuration_for_example": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError",
    "classmethod",
    "openml.config.apikey",
    "openml.config.server"
   ]
  },
  "type": "function"
 },
 "openml.config.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "openml.config.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.config.__all__": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "openml.config._convert_log_levels": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int",
    "openml.config.logging",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.config._create_log_handlers": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "openml.config.console_handler",
    "openml.config.file_handler",
    "openml.config.logger",
    "openml.config.logging",
    "openml.config.os"
   ]
  },
  "type": "function"
 },
 "openml.config._defaults": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "openml.config._parse_config": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "OSError",
    "io.StringIO",
    "open",
    "openml.config._defaults",
    "openml.config.config_file",
    "openml.config.configparser",
    "openml.config.logger",
    "openml.config.os"
   ]
  },
  "type": "function"
 },
 "openml.config._set_level_register_and_store": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "openml.config._convert_log_levels",
    "openml.config.logging",
    "openml.config.openml_logger"
   ]
  },
  "type": "function"
 },
 "openml.config._setup": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "FileExistsError",
    "ValueError",
    "openml.config._parse_config",
    "openml.config.apikey",
    "openml.config.avoid_duplicate_runs",
    "openml.config.cache_directory",
    "openml.config.connection_n_retries",
    "openml.config.os",
    "openml.config.server"
   ]
  },
  "type": "function"
 },
 "openml.config.apikey": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "openml.config.avoid_duplicate_runs": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "openml.config.cache_directory": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "openml.config.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "openml.config.config_file": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "openml.config.configparser": {
  "data": {
   "shadows": "configparser"
  },
  "type": "import"
 },
 "openml.config.connection_n_retries": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "openml.config.console_handler": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "openml.config.file_handler": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "openml.config.get_cache_directory": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "openml.config._defaults",
    "openml.config.cache_directory",
    "openml.config.os",
    "openml.config.server",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "openml.config.get_server_base_url": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "openml.config.server",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.config.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "openml.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openml.config.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "openml.config.openml_logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "openml.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.config.server": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "openml.config.set_cache_directory": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "openml.config.cache_directory"
   ]
  },
  "type": "function"
 },
 "openml.config.set_console_log_level": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "int",
    "openml.config._set_level_register_and_store",
    "openml.config.console_handler",
    "openml.config.logging",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "openml.config.set_file_log_level": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "openml.config._set_level_register_and_store",
    "openml.config.file_handler",
    "openml.config.logging",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "openml.config.start_using_configuration_for_example": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "openml.config.stop_using_configuration_for_example": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "openml.config.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "openml.datasets": {
  "data": {},
  "type": "module"
 },
 "openml.datasets.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "openml.datasets.data_feature": {
  "data": {},
  "type": "module"
 },
 "openml.datasets.data_feature.OpenMLDataFeature": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openml.datasets.data_feature.OpenMLDataFeature.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.datasets.data_feature.OpenMLDataFeature.__repr__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "openml.datasets.data_feature.OpenMLDataFeature._repr_pretty_": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "openml.datasets.dataset.logging"
   ]
  },
  "type": "module"
 },
 "openml.datasets.dataset.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.datasets.dataset.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "openml.datasets.dataset.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.datasets.dataset.OpenMLBase": {
  "data": {
   "shadows": "openml.base.OpenMLBase"
  },
  "type": "import"
 },
 "openml.datasets.dataset.OpenMLDataset": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "openml.base.OpenMLBase"
   ]
  },
  "type": "class"
 },
 "openml.datasets.dataset.OpenMLDataset.__eq__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "all",
    "openml.datasets.dataset.OpenMLDataset",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "DeprecationWarning",
    "OpenMLDataFeature",
    "ValueError",
    "enumerate",
    "find_invalid_characters",
    "format",
    "int",
    "isinstance",
    "list",
    "openml.datasets.dataset._check_qualities",
    "openml.datasets.dataset.re",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.__init__.find_invalid_characters": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "openml.datasets.dataset.re",
    "set"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._convert_array_format": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "PyOpenMLError",
    "ValueError",
    "_encode_if_category",
    "numpy.asarray",
    "numpy.float32",
    "openml.datasets.dataset.logger",
    "pandas.DataFrame",
    "pandas.DataFrame.sparse.from_spmatrix",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._convert_array_format._encode_if_category": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._create_pickle_in_cache": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "EOFError",
    "ModuleNotFoundError",
    "ValueError",
    "int",
    "isinstance",
    "open",
    "openml.datasets.dataset.logger",
    "openml.datasets.dataset.os",
    "openml.datasets.dataset.pickle",
    "pandas.DataFrame",
    "pandas.read_feather",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._download_data": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "_get_dataset_arff"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_arff": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "decode_arff",
    "format",
    "format.lower",
    "openml.datasets.dataset.arff",
    "openml.datasets.dataset.gzip",
    "openml.datasets.dataset.io",
    "openml.datasets.dataset.os",
    "openml.datasets.dataset.struct",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_arff.decode_arff": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "openml.datasets.dataset.arff"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_file_elements": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "openml.datasets.dataset.arff",
    "openml.datasets.dataset.os",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_repr_body_fields": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._load_data": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "EOFError",
    "FileNotFoundError",
    "ModuleNotFoundError",
    "ValueError",
    "open",
    "openml.datasets.dataset.logger",
    "openml.datasets.dataset.pickle",
    "pandas.read_feather"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._parse_data_from_arff": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.float32",
    "openml.datasets.dataset.logger",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.factorize",
    "set",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._parse_publish_response": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._to_dict": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._unpack_categories": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "numpy.nan",
    "pandas.Categorical",
    "pandas.Series",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.get_data": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.sum",
    "openml.datasets.dataset.logger",
    "pandas.DataFrame",
    "str",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.get_features_by_type": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "OpenMLDataFeature.LEGAL_DATA_TYPES",
    "TypeError",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.id": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.retrieve_class_labels": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.datasets.dataset.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.datasets.dataset.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.datasets.dataset.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.datasets.dataset._check_qualities": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "openml.datasets.dataset.arff": {
  "data": {
   "shadows": "arff"
  },
  "type": "import"
 },
 "openml.datasets.dataset.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "openml.datasets.dataset.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "openml.datasets.dataset.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "openml.datasets.dataset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openml.datasets.dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.datasets.dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.datasets.dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "openml.datasets.dataset.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openml.datasets.dataset.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openml.datasets.dataset.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "openml.datasets.dataset.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "openml.datasets.dataset.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "openml.evaluations": {
  "data": {},
  "type": "module"
 },
 "openml.evaluations.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "openml.evaluations.evaluation": {
  "data": {},
  "type": "module"
 },
 "openml.evaluations.evaluation.OpenMLEvaluation": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openml.evaluations.evaluation.OpenMLEvaluation.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.evaluation.OpenMLEvaluation.__repr__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.evaluation.openml.config": {
  "data": {
   "shadows": "openml.config"
  },
  "type": "import"
 },
 "openml.evaluations.functions": {
  "data": {},
  "type": "module"
 },
 "openml.evaluations.functions.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.evaluations.functions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.evaluations.functions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.evaluations.functions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.evaluations.functions.__list_evaluations": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "OpenMLEvaluation",
    "ValueError",
    "float",
    "int",
    "list",
    "openml.evaluations.functions.collections",
    "openml.evaluations.functions.json",
    "openml.evaluations.functions.openml",
    "openml.evaluations.functions.xmltodict",
    "pandas.DataFrame.from_records",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.functions._list_evaluations": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "openml.evaluations.functions.__list_evaluations",
    "pandas.DataFrame",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.functions.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openml.evaluations.functions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "openml.evaluations.functions.list_evaluation_measures": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "list",
    "openml.evaluations.functions.openml",
    "openml.evaluations.functions.xmltodict",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.functions.list_evaluations": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "openml.evaluations.functions.openml",
    "pandas.DataFrame",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.functions.list_evaluations_setups": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "numpy.array_split",
    "openml.evaluations.functions.list_evaluations",
    "openml.evaluations.functions.openml",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.merge",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.evaluations.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.evaluations.functions.openml": {
  "data": {
   "shadows": "openml"
  },
  "type": "import"
 },
 "openml.evaluations.functions.openml._api_calls": {
  "data": {
   "shadows": "openml._api_calls"
  },
  "type": "import"
 },
 "openml.evaluations.functions.openml.utils": {
  "data": {
   "shadows": "openml.utils"
  },
  "type": "import"
 },
 "openml.evaluations.functions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "openml.evaluations.functions.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "openml.exceptions": {
  "data": {},
  "type": "module"
 },
 "openml.exceptions.OpenMLCacheException": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "openml.exceptions.PyOpenMLError"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.OpenMLCacheException.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.exceptions.OpenMLHashException": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "openml.exceptions.PyOpenMLError"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.OpenMLPrivateDatasetError": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "openml.exceptions.PyOpenMLError"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.OpenMLPrivateDatasetError.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.exceptions.OpenMLRunsExistError": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "openml.exceptions.PyOpenMLError"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.OpenMLRunsExistError.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.exceptions.OpenMLServerError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "openml.exceptions.PyOpenMLError"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.OpenMLServerError.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.exceptions.OpenMLServerException": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "openml.exceptions.OpenMLServerError"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.OpenMLServerException.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.exceptions.OpenMLServerException.__str__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "openml.exceptions.OpenMLServerNoResult": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "openml.exceptions.OpenMLServerException"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.PyOpenMLError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "openml.exceptions.PyOpenMLError.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.extensions": {
  "data": {},
  "type": "module"
 },
 "openml.extensions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.extensions.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "openml.extensions.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "openml.extensions.extension_interface": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "openml.extensions.extension_interface.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.Extension": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "openml.extensions.extension_interface.Extension._run_model_on_fold": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "numpy.ndarray",
    "typing.Any",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.can_handle_flow": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.can_handle_model": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "classmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.create_setup_string": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.flow_to_model": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.get_version_information": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.instantiate_model_from_hpo_class": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.is_estimator": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.model_to_flow": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.obtain_parameter_values": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.seed_model": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.extensions.extension_interface.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.OpenMLFlow": {
  "data": {
   "shadows": "openml.flows.OpenMLFlow"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.OpenMLRunTrace": {
  "data": {
   "shadows": "openml.runs.trace.OpenMLRunTrace"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.OpenMLTask": {
  "data": {
   "shadows": "openml.tasks.task.OpenMLTask"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.OpenMLTraceIteration": {
  "data": {
   "shadows": "openml.runs.trace.OpenMLTraceIteration"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.extensions.extension_interface.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "openml.extensions.extensions": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "openml.extensions.functions": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "openml.extensions.functions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openml.extensions.functions.OpenMLFlow": {
  "data": {
   "shadows": "openml.flows.OpenMLFlow"
  },
  "type": "import"
 },
 "openml.extensions.functions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.extensions.functions.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "openml.extensions.functions.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "openml.extensions.functions.get_extension_by_flow": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "extension_class",
    "len",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.extensions.functions.get_extension_by_model": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "extension_class",
    "extension_class.can_handle_model",
    "len",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.extensions.functions.openml.extensions": {
  "data": {
   "shadows": "openml.extensions"
  },
  "type": "import"
 },
 "openml.extensions.functions.register_extension": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn": {
  "data": {
   "symbols_in_volume": [
    "openml.extensions.register_extension"
   ]
  },
  "type": "module"
 },
 "openml.extensions.sklearn.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "bool",
    "float",
    "int",
    "json.decoder.JSONDecodeError",
    "numpy.sctypes.items",
    "openml.extensions.sklearn.extension.SIMPLE_NUMPY_TYPES",
    "openml.extensions.sklearn.extension.logging",
    "openml.extensions.sklearn.extension.re",
    "openml.extensions.sklearn.extension.sys",
    "str",
    "tuple"
   ]
  },
  "type": "module"
 },
 "openml.extensions.sklearn.extension.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.COMPONENT_REFERENCE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.COMPOSITION_STEP_CONSTANT": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.DEPENDENCIES_PATTERN": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.Extension": {
  "data": {
   "shadows": "openml.extensions.Extension"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.IGNORECASE": {
  "data": {
   "shadows": "re.IGNORECASE"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.JSONDecodeError": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLClassificationTask": {
  "data": {
   "shadows": "openml.tasks.OpenMLClassificationTask"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLClusteringTask": {
  "data": {
   "shadows": "openml.tasks.OpenMLClusteringTask"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLFlow": {
  "data": {
   "shadows": "openml.flows.OpenMLFlow"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLLearningCurveTask": {
  "data": {
   "shadows": "openml.tasks.OpenMLLearningCurveTask"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLRegressionTask": {
  "data": {
   "shadows": "openml.tasks.OpenMLRegressionTask"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLRunTrace": {
  "data": {
   "shadows": "openml.runs.trace.OpenMLRunTrace"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLSupervisedTask": {
  "data": {
   "shadows": "openml.tasks.OpenMLSupervisedTask"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLTask": {
  "data": {
   "shadows": "openml.tasks.OpenMLTask"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OpenMLTraceIteration": {
  "data": {
   "shadows": "openml.runs.trace.OpenMLTraceIteration"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.PREFIX": {
  "data": {
   "shadows": "openml.runs.trace.PREFIX"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.PyOpenMLError": {
  "data": {
   "shadows": "openml.exceptions.PyOpenMLError"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.SIMPLE_NUMPY_TYPES": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.SIMPLE_TYPES": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.SklearnExtension": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "openml.extensions.Extension"
   ]
  },
  "type": "class"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._can_measure_cputime": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "openml.extensions.sklearn.extension.SklearnExtension",
    "openml.extensions.sklearn.extension.sklearn",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._can_measure_wallclocktime": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "openml.extensions.sklearn.extension.SklearnExtension",
    "openml.extensions.sklearn.extension.sklearn",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._check_dependencies": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bool",
    "distutils.version.LooseVersion",
    "openml.extensions.sklearn.extension.DEPENDENCIES_PATTERN",
    "openml.extensions.sklearn.extension.importlib",
    "openml.extensions.sklearn.extension.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._check_multiple_occurence_of_component_in_flow": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.flows.OpenMLFlow",
    "set",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_cross_validator": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "bool",
    "getattr",
    "int",
    "model_class",
    "openml.extensions.sklearn.extension.importlib",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_function": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "getattr",
    "openml.extensions.sklearn.extension.importlib",
    "str",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_model": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "bool",
    "collections.OrderedDict",
    "getattr",
    "int",
    "model_class",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.copy",
    "openml.extensions.sklearn.extension.importlib",
    "openml.extensions.sklearn.extension.logger",
    "openml.flows.OpenMLFlow",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_rv_frozen": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "openml.extensions.sklearn.extension.importlib",
    "openml.extensions.sklearn.extension.scipy",
    "openml.extensions.sklearn.extension.warnings",
    "rv_class",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_sklearn": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "bool",
    "collections.OrderedDict",
    "dict",
    "float",
    "int",
    "isinstance",
    "json.decoder.JSONDecodeError",
    "list",
    "openml.extensions.sklearn.extension.COMPONENT_REFERENCE",
    "openml.extensions.sklearn.extension.COMPOSITION_STEP_CONSTANT",
    "openml.extensions.sklearn.extension.json",
    "openml.extensions.sklearn.extension.logger",
    "openml.flows.OpenMLFlow",
    "sorted",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_type": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "float",
    "int",
    "openml.extensions.sklearn.extension.numpy",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_information_from_model": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "collections.OrderedDict",
    "enumerate",
    "flatten_all",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "openml.exceptions.PyOpenMLError",
    "openml.extensions.sklearn.extension.COMPONENT_REFERENCE",
    "openml.extensions.sklearn.extension.COMPOSITION_STEP_CONSTANT",
    "openml.extensions.sklearn.extension.SIMPLE_TYPES",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.json",
    "openml.flows.OpenMLFlow",
    "set",
    "sorted",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_information_from_model.flatten_all": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "flatten_all",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_sklearn_param_info": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "len",
    "list",
    "openml.extensions.sklearn.extension.re",
    "range",
    "re.IGNORECASE",
    "set",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_sklearn_parameter_docstring": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "match_format",
    "openml.extensions.sklearn.extension.inspect",
    "openml.extensions.sklearn.extension.logger",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_sklearn_parameter_docstring.match_format": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_trace_data": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "len",
    "openml.extensions.sklearn.extension.json",
    "openml.extensions.sklearn.extension.numpy",
    "range"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._format_external_version": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_dependencies": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "openml.extensions.sklearn.extension.sklearn",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_external_version_string": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.importlib",
    "openml.extensions.sklearn.extension.openml",
    "openml.extensions.sklearn.extension.sklearn",
    "openml.flows.OpenMLFlow",
    "set",
    "sorted",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_fn_arguments_with_defaults": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "dict",
    "openml.extensions.sklearn.extension.inspect",
    "set",
    "typing.Callable",
    "typing.Dict",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_parameter_values_recursive": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "openml.extensions.sklearn.extension.SklearnExtension",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_sklearn_description": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "match_format",
    "openml.extensions.sklearn.extension.inspect",
    "openml.extensions.sklearn.extension.logger",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_sklearn_description.match_format": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_tags": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "openml.extensions.sklearn.extension.sklearn",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._is_cross_validator": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "openml.extensions.sklearn.extension.sklearn",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._is_hpo_class": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "openml.extensions.sklearn.extension.sklearn",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._is_sklearn_flow": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "getattr",
    "openml.flows.OpenMLFlow"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._obtain_arff_trace": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "all",
    "bool",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "list",
    "openml.extensions.sklearn.extension.numpy",
    "openml.runs.trace.OpenMLRunTrace.generate",
    "openml.runs.trace.PREFIX",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._openml_param_name_to_sklearn": {
  "data": {
   "lineno": 1993,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "openml.extensions.sklearn.extension.openml",
    "openml.flows.OpenMLFlow",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._prevent_optimize_n_jobs": {
  "data": {
   "lineno": 1371,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "isinstance",
    "len",
    "openml.exceptions.PyOpenMLError",
    "openml.extensions.sklearn.extension.SklearnExtension",
    "openml.extensions.sklearn.extension.logger",
    "openml.extensions.sklearn.extension.sklearn"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._run_model_on_fold": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "_prediction_to_probabilities",
    "collections.OrderedDict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "openml.exceptions.PyOpenMLError",
    "openml.extensions.sklearn.extension.numpy",
    "openml.extensions.sklearn.extension.openml",
    "openml.extensions.sklearn.extension.scipy",
    "openml.extensions.sklearn.extension.sklearn",
    "openml.extensions.sklearn.extension.time",
    "openml.extensions.sklearn.extension.warnings",
    "openml.runs.trace.OpenMLRunTrace",
    "openml.tasks.OpenMLClassificationTask",
    "openml.tasks.OpenMLClusteringTask",
    "openml.tasks.OpenMLLearningCurveTask",
    "openml.tasks.OpenMLRegressionTask",
    "openml.tasks.OpenMLSupervisedTask",
    "pandas.DataFrame",
    "set",
    "str",
    "type",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._run_model_on_fold._prediction_to_probabilities": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "openml.extensions.sklearn.extension.numpy",
    "openml.tasks.OpenMLClassificationTask",
    "openml.tasks.OpenMLLearningCurveTask",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_cross_validator": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "DeprecationWarning",
    "collections.OrderedDict",
    "getattr",
    "hasattr",
    "len",
    "object.__init__",
    "openml.extensions.sklearn.extension.inspect",
    "openml.extensions.sklearn.extension.json",
    "openml.extensions.sklearn.extension.warnings",
    "sorted",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_function": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_model": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.SklearnExtension",
    "openml.flows.OpenMLFlow",
    "str",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_rv_frozen": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_sklearn": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "dict",
    "isinstance",
    "len",
    "list",
    "openml.extensions.sklearn.extension.SIMPLE_NUMPY_TYPES",
    "openml.extensions.sklearn.extension.SIMPLE_TYPES",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.inspect",
    "sorted",
    "str",
    "tuple",
    "type",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_type": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "float",
    "int",
    "openml.extensions.sklearn.extension.numpy",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.can_handle_flow": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.can_handle_model": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.create_setup_string": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.flow_to_model": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bool",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.get_version_information": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "openml.extensions.sklearn.extension.numpy",
    "openml.extensions.sklearn.extension.scipy",
    "openml.extensions.sklearn.extension.sklearn",
    "openml.extensions.sklearn.extension.sys",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.instantiate_model_from_hpo_class": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "AssertionError",
    "openml.runs.trace.OpenMLTraceIteration",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.is_estimator": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.model_to_flow": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values": {
  "data": {
   "lineno": 1789,
   "symbols_in_volume": [
    "extract_parameters",
    "get_flow_dict",
    "openml.extensions.sklearn.extension.openml",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values.extract_parameters": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "collections.OrderedDict",
    "extract_parameters",
    "is_subcomponent_specification",
    "isinstance",
    "len",
    "list",
    "openml.extensions.sklearn.extension.COMPONENT_REFERENCE",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.json",
    "openml.extensions.sklearn.extension.openml",
    "set",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values.extract_parameters.is_subcomponent_specification": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "openml.extensions.sklearn.extension.SKLEARN_PIPELINE_STRING_COMPONENTS",
    "openml.extensions.sklearn.extension.openml",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values.get_flow_dict": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "get_flow_dict"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.seed_model": {
  "data": {
   "lineno": 1475,
   "symbols_in_volume": [
    "_seed_current_object",
    "hasattr",
    "int",
    "isinstance",
    "openml.extensions.sklearn.extension.numpy",
    "openml.extensions.sklearn.extension.sklearn",
    "sorted",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.seed_model._seed_current_object": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "openml.extensions.sklearn.extension.numpy"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.trim_flow_name": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "enumerate",
    "int",
    "len",
    "remove_all_in_parentheses",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.trim_flow_name.remove_all_in_parentheses": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "openml.extensions.sklearn.extension.re",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.extensions.sklearn.extension.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "openml.extensions.sklearn.extension.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.openml": {
  "data": {
   "shadows": "openml"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.sklearn.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.sklearn.model_selection": {
  "data": {
   "shadows": "sklearn.model_selection"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.sklearn.pipeline": {
  "data": {
   "shadows": "sklearn.pipeline"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.extension.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openml.extensions.sklearn.register_extension": {
  "data": {
   "shadows": "openml.extensions.register_extension"
  },
  "type": "import"
 },
 "openml.flows": {
  "data": {},
  "type": "module"
 },
 "openml.flows.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "openml.flows.flow": {
  "data": {},
  "type": "module"
 },
 "openml.flows.flow.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.flows.flow.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.flows.flow.OpenMLBase": {
  "data": {
   "shadows": "openml.base.OpenMLBase"
  },
  "type": "import"
 },
 "openml.flows.flow.OpenMLFlow": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "openml.base.OpenMLBase"
   ]
  },
  "type": "class"
 },
 "openml.flows.flow.OpenMLFlow.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "get_extension_by_flow",
    "isinstance",
    "len",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._from_dict": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "collections.OrderedDict",
    "extract_xml_tags",
    "int",
    "openml.flows.flow.OpenMLFlow"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._get_repr_body_fields": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._parse_publish_response": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._to_dict": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "collections.OrderedDict",
    "getattr",
    "isinstance",
    "openml.flows.flow._add_if_nonempty",
    "openml.flows.flow.logging",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.extension": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.from_filesystem": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "classmethod",
    "open",
    "openml.flows.flow.OpenMLFlow",
    "openml.flows.flow.os",
    "openml.flows.flow.xmltodict"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.get_structure": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "getattr",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.get_subflow": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.id": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.publish": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "openml.flows.flow._copy_server_fields",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.to_filesystem": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "openml.flows.flow.os",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.flows.flow.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.flows.flow.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.flows.flow.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.flows.flow._add_if_nonempty": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "openml.flows.flow._copy_server_fields": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "openml.flows.flow.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openml.flows.flow.openml.flows.functions": {
  "data": {
   "shadows": "openml.flows.functions"
  },
  "type": "import"
 },
 "openml.flows.flow.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.flows.flow.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "openml.openml.extensions.sklearn": {
  "data": {
   "shadows": "openml.extensions.sklearn"
  },
  "type": "import"
 },
 "openml.populate_cache": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "openml.runs": {
  "data": {},
  "type": "module"
 },
 "openml.runs.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "openml.runs.run": {
  "data": {},
  "type": "module"
 },
 "openml.runs.run.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openml.runs.run.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.runs.run.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "openml.runs.run.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.runs.run.OpenMLBase": {
  "data": {
   "shadows": "openml.base.OpenMLBase"
  },
  "type": "import"
 },
 "openml.runs.run.OpenMLRun": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "openml.base.OpenMLBase"
   ]
  },
  "type": "class"
 },
 "openml.runs.run.OpenMLRun.__init__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._generate_arff_dict": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "collections.OrderedDict",
    "get_flow",
    "get_task",
    "isinstance",
    "len",
    "openml.runs.run.time",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._get_file_elements": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "PyOpenMLError",
    "openml.runs.run.arff",
    "openml.runs.run.openml",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._get_repr_body_fields": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "openml.runs.run.openml",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._parse_publish_response": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._to_dict": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.from_filesystem": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "classmethod",
    "open",
    "openml.runs.run.arff",
    "openml.runs.run.openml",
    "openml.runs.run.os",
    "openml.runs.run.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.get_metric_fn": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "_attribute_list_to_dict",
    "collections.OrderedDict",
    "dict",
    "enumerate",
    "get_task",
    "len",
    "numpy.array",
    "openml.runs.run.arff",
    "openml.runs.run.openml",
    "sklearn_fn",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.get_metric_fn._attribute_list_to_dict": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.id": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.to_filesystem": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "open",
    "openml.runs.run.arff",
    "openml.runs.run.os",
    "openml.runs.run.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.runs.run.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.runs.run.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.runs.run.TextIO": {
  "data": {
   "shadows": "typing.TextIO"
  },
  "type": "import"
 },
 "openml.runs.run.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.runs.run.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.runs.run.arff": {
  "data": {
   "shadows": "arff"
  },
  "type": "import"
 },
 "openml.runs.run.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.runs.run.openml": {
  "data": {
   "shadows": "openml"
  },
  "type": "import"
 },
 "openml.runs.run.openml._api_calls": {
  "data": {
   "shadows": "openml._api_calls"
  },
  "type": "import"
 },
 "openml.runs.run.openml.runs.functions": {
  "data": {
   "shadows": "openml.runs.functions"
  },
  "type": "import"
 },
 "openml.runs.run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.runs.run.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openml.runs.run.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "openml.setups": {
  "data": {},
  "type": "module"
 },
 "openml.setups.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "openml.setups.setup": {
  "data": {},
  "type": "module"
 },
 "openml.setups.setup.OpenMLParameter": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openml.setups.setup.OpenMLParameter.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "openml.setups.setup.OpenMLParameter.__repr__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "openml.setups.setup.OpenMLSetup": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openml.setups.setup.OpenMLSetup.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "openml.setups.setup.OpenMLSetup.__repr__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "openml.setups.setup.openml.config": {
  "data": {
   "shadows": "openml.config"
  },
  "type": "import"
 },
 "openml.study": {
  "data": {},
  "type": "module"
 },
 "openml.study.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "openml.study.study": {
  "data": {},
  "type": "module"
 },
 "openml.study.study.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openml.study.study.BaseStudy": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "openml.base.OpenMLBase"
   ]
  },
  "type": "class"
 },
 "openml.study.study.BaseStudy.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy._entity_letter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy._get_repr_body_fields": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "len",
    "openml.study.study.openml",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy._parse_publish_response": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy._to_dict": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "getattr"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy.id": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy.push_tag": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.study.study.BaseStudy.remove_tag": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.study.study.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.study.study.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.study.study.OpenMLBase": {
  "data": {
   "shadows": "openml.base.OpenMLBase"
  },
  "type": "import"
 },
 "openml.study.study.OpenMLBenchmarkSuite": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "openml.study.study.BaseStudy"
   ]
  },
  "type": "class"
 },
 "openml.study.study.OpenMLBenchmarkSuite.__init__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.study.study.OpenMLStudy": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "openml.study.study.BaseStudy"
   ]
  },
  "type": "class"
 },
 "openml.study.study.OpenMLStudy.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.study.study.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.study.study.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.study.study.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.study.study.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.study.study.openml": {
  "data": {
   "shadows": "openml"
  },
  "type": "import"
 },
 "openml.tasks": {
  "data": {},
  "type": "module"
 },
 "openml.tasks.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "openml.tasks.split": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "openml.tasks.split.OpenMLSplit": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "openml.tasks.split.OpenMLSplit.__eq__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "any",
    "numpy.all",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "collections.OrderedDict",
    "dict",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit._from_arff_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ValueError",
    "classmethod",
    "cls",
    "collections.OrderedDict",
    "int",
    "numpy.array",
    "numpy.int32",
    "open",
    "openml.tasks.split.Split",
    "openml.tasks.split.arff",
    "openml.tasks.split.os",
    "openml.tasks.split.pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit.from_dataset": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit.get": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.tasks.split.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.tasks.split.Split": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "openml.tasks.split.arff": {
  "data": {
   "shadows": "arff"
  },
  "type": "import"
 },
 "openml.tasks.split.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "openml.tasks.split.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.tasks.split.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.tasks.split.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "openml.tasks.task": {
  "data": {},
  "type": "module"
 },
 "openml.tasks.task.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "openml.tasks.task.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "openml.tasks.task.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.tasks.task.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "openml.tasks.task.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.tasks.task.OpenMLBase": {
  "data": {
   "shadows": "openml.base.OpenMLBase"
  },
  "type": "import"
 },
 "openml.tasks.task.OpenMLClassificationTask": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "openml.tasks.task.OpenMLSupervisedTask"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.OpenMLClassificationTask.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "numpy.ndarray",
    "openml.tasks.task.OpenMLClassificationTask",
    "openml.tasks.task.TaskType",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLClusteringTask": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "openml.tasks.task.OpenMLTask"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.OpenMLClusteringTask.__init__": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "int",
    "openml.tasks.task.OpenMLClusteringTask",
    "openml.tasks.task.TaskType",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLClusteringTask._to_dict": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "openml.tasks.task.OpenMLClusteringTask",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLClusteringTask.get_X": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "numpy.ndarray",
    "pandas.DataFrame",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLLearningCurveTask": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "openml.tasks.task.OpenMLClassificationTask"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.OpenMLLearningCurveTask.__init__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray",
    "openml.tasks.task.OpenMLLearningCurveTask",
    "openml.tasks.task.TaskType",
    "str",
    "super",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLRegressionTask": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "openml.tasks.task.OpenMLSupervisedTask"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.OpenMLRegressionTask.__init__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "int",
    "openml.tasks.task.OpenMLRegressionTask",
    "openml.tasks.task.TaskType",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "abc.ABC",
    "openml.tasks.task.OpenMLTask"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.OpenMLSupervisedTask.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "int",
    "openml.tasks.task.OpenMLSupervisedTask",
    "openml.tasks.task.TaskType",
    "str",
    "super",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask._to_dict": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "openml.tasks.task.OpenMLSupervisedTask",
    "super"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask.estimation_parameters": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask.get_X_and_y": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray",
    "openml.tasks.task.TaskType",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "openml.base.OpenMLBase"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.OpenMLTask.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dict",
    "int",
    "openml.tasks.task.TaskType",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._download_split": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "openml.tasks.task.io",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._entity_letter": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._get_repr_body_fields": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "int",
    "len",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._parse_publish_response": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "int",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._to_dict": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.download_split": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "_create_cache_directory_for_id",
    "openml.tasks.task.os"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.get_dataset": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.get_split_dimensions": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "int",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.get_train_test_split_indices": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.id": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "openml.tasks.task.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "openml.tasks.task.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "openml.tasks.task.TaskType": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "openml.tasks.task.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.tasks.task.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.tasks.task.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "openml.tasks.task.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "openml.tasks.task.openml._api_calls": {
  "data": {
   "shadows": "openml._api_calls"
  },
  "type": "import"
 },
 "openml.tasks.task.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.tasks.task.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "openml.tasks.task.scipy.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "openml.tasks.task.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "openml.testing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "openml.testing.warnings"
   ]
  },
  "type": "module"
 },
 "openml.testing.CustomImputer": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "sklearn.preprocessing.Imputer"
   ]
  },
  "type": "class"
 },
 "openml.testing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "openml.testing.SimpleImputer": {
  "data": {
   "shadows": "sklearn.preprocessing.Imputer"
  },
  "type": "import"
 },
 "openml.testing.TaskType": {
  "data": {
   "shadows": "openml.tasks.TaskType"
  },
  "type": "import"
 },
 "openml.testing.TestBase": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "openml.testing.logging",
    "openml.testing.unittest"
   ]
  },
  "type": "class"
 },
 "openml.testing.TestBase._add_sentinel_to_flow_name": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase._check_dataset": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase._check_fold_timing_evaluations": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "int",
    "len",
    "openml.tasks.TaskType",
    "openml.tasks.TaskType.LEARNING_CURVE",
    "openml.tasks.TaskType.SUPERVISED_CLASSIFICATION",
    "openml.tasks.TaskType.SUPERVISED_REGRESSION",
    "openml.testing.sys",
    "range",
    "set",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase._delete_entity_from_tracker": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "list",
    "openml.testing.TestBase",
    "set"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase._get_sentinel": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "openml.testing.hashlib",
    "openml.testing.os",
    "openml.testing.time",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase._mark_entity_for_removal": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "classmethod",
    "openml.testing.TestBase"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase.setUp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "open",
    "openml.testing.TestBase",
    "openml.testing.inspect",
    "openml.testing.openml",
    "openml.testing.os",
    "openml.testing.shutil",
    "oslo_concurrency.lockutils.external_lock",
    "range"
   ]
  },
  "type": "function"
 },
 "openml.testing.TestBase.tearDown": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "PermissionError",
    "openml.testing.openml",
    "openml.testing.os",
    "openml.testing.shutil"
   ]
  },
  "type": "function"
 },
 "openml.testing.__all__": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "openml.testing.cat": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "openml.testing.cont": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "openml.testing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "openml.testing.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "openml.testing.lockutils": {
  "data": {
   "shadows": "oslo_concurrency.lockutils"
  },
  "type": "import"
 },
 "openml.testing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "openml.testing.openml": {
  "data": {
   "shadows": "openml"
  },
  "type": "import"
 },
 "openml.testing.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.testing.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "openml.testing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "openml.testing.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "openml.testing.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "openml.testing.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openml.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "openml.utils.warnings",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "openml.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "openml.utils.OpenMLBase": {
  "data": {
   "shadows": "openml.base.OpenMLBase"
  },
  "type": "import"
 },
 "openml.utils.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "openml.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "openml.utils.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "openml.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "openml.utils._create_cache_directory": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "OSError",
    "openml.utils.os"
   ]
  },
  "type": "function"
 },
 "openml.utils._create_cache_directory_for_id": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "ValueError",
    "openml.utils._create_cache_directory",
    "openml.utils.os",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.utils._create_lockfiles_dir": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "OSError",
    "dir",
    "openml.utils.os"
   ]
  },
  "type": "function"
 },
 "openml.utils._delete_entity": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "openml.utils.xmltodict"
   ]
  },
  "type": "function"
 },
 "openml.utils._get_rest_api_type_alias": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.utils._list_all": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "listing_call",
    "openml.utils.collections",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "openml.utils._remove_cache_dir_for_id": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "openml.utils.shutil"
   ]
  },
  "type": "function"
 },
 "openml.utils._tag_entity": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "openml.utils.xmltodict"
   ]
  },
  "type": "function"
 },
 "openml.utils._tag_openml_base": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "openml.utils._get_rest_api_type_alias",
    "openml.utils._tag_entity",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "openml.utils.extract_xml_tags": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "openml.utils.lockutils": {
  "data": {
   "shadows": "oslo_concurrency.lockutils"
  },
  "type": "import"
 },
 "openml.utils.openml._api_calls": {
  "data": {
   "shadows": "openml._api_calls"
  },
  "type": "import"
 },
 "openml.utils.openml.exceptions": {
  "data": {
   "shadows": "openml.exceptions"
  },
  "type": "import"
 },
 "openml.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "openml.utils.oslo_installed": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "openml.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "openml.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "openml.utils.thread_safe_if_oslo_installed": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "func",
    "openml.utils.oslo_installed"
   ]
  },
  "type": "function"
 },
 "openml.utils.thread_safe_if_oslo_installed.safe_func": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "RuntimeError",
    "func",
    "functools.wraps",
    "len",
    "openml.utils._create_lockfiles_dir",
    "oslo_concurrency.lockutils.external_lock"
   ]
  },
  "type": "function"
 },
 "openml.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "openml.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "openml.utils.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 }
}