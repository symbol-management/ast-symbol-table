{
 "openml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.__version__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml._api_calls": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml._api_calls.__check_response": {
  "lineno": 141,
  "symbols_in_volume": [
   "__parse_server_exception",
   "logging.warning"
  ],
  "type": "function"
 },
 "openml._api_calls.__parse_server_exception": {
  "lineno": 212,
  "symbols_in_volume": [
   "Exception",
   "OpenMLServerError",
   "OpenMLServerException",
   "OpenMLServerNoResult",
   "int",
   "requests.Response",
   "str",
   "typing.Dict",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml._api_calls.__read_url": {
  "lineno": 176,
  "symbols_in_volume": [
   "__send_request"
  ],
  "type": "function"
 },
 "openml._api_calls.__read_url_files": {
  "lineno": 162,
  "symbols_in_volume": [
   "__send_request"
  ],
  "type": "function"
 },
 "openml._api_calls.__send_request": {
  "lineno": 184,
  "symbols_in_volume": [
   "NotImplementedError",
   "ValueError",
   "range",
   "requests.Session",
   "requests.exceptions.ConnectionError",
   "requests.exceptions.SSLError",
   "time.sleep"
  ],
  "type": "function"
 },
 "openml._api_calls._download_text_file": {
  "lineno": 70,
  "symbols_in_volume": [
   "FileExistsError",
   "FileNotFoundError",
   "OpenMLHashException",
   "__check_response",
   "__read_url",
   "bool",
   "hashlib.md5",
   "logging.info",
   "open",
   "str",
   "time.time",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml._api_calls._file_id_to_url": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml._api_calls._perform_api_call": {
  "lineno": 19,
  "symbols_in_volume": [
   "ValueError",
   "__check_response",
   "__read_url",
   "__read_url_files",
   "logging.info",
   "time.time"
  ],
  "type": "function"
 },
 "openml.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.base.OpenMLBase": {
  "lineno": 15,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "openml.base.OpenMLBase.__repr__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.base.OpenMLBase._apply_repr_template": {
  "lineno": 62,
  "symbols_in_volume": [
   "len",
   "max",
   "re.sub",
   "str",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase._entity_letter": {
  "lineno": 41,
  "symbols_in_volume": [
   "classmethod",
   "len",
   "str"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase._get_file_elements": {
  "lineno": 110,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase._get_repr_body_fields": {
  "lineno": 48,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "int",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase._parse_publish_response": {
  "lineno": 118,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase._to_dict": {
  "lineno": 82,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase._to_xml": {
  "lineno": 100,
  "symbols_in_volume": [
   "str",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.id": {
  "lineno": 22,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.open_in_browser": {
  "lineno": 138,
  "symbols_in_volume": [
   "webbrowser.open"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.openml_url": {
  "lineno": 28,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.publish": {
  "lineno": 123,
  "symbols_in_volume": [
   "_get_rest_api_type_alias",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.push_tag": {
  "lineno": 142,
  "symbols_in_volume": [
   "_tag_openml_base",
   "str"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.remove_tag": {
  "lineno": 152,
  "symbols_in_volume": [
   "_tag_openml_base",
   "str"
  ],
  "type": "function"
 },
 "openml.base.OpenMLBase.url_for_id": {
  "lineno": 35,
  "symbols_in_volume": [
   "classmethod",
   "int",
   "str"
  ],
  "type": "function"
 },
 "openml.config": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "_create_log_handlers",
   "_setup",
   "logging.getLogger",
   "os.path.expanduser",
   "os.path.join",
   "str"
  ],
  "type": "module"
 },
 "openml.config.ConfigurationForExamples": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.config.ConfigurationForExamples.start_using_configuration_for_example": {
  "lineno": 130,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "openml.config.ConfigurationForExamples.stop_using_configuration_for_example": {
  "lineno": 153,
  "symbols_in_volume": [
   "RuntimeError",
   "classmethod"
  ],
  "type": "function"
 },
 "openml.config._convert_log_levels": {
  "lineno": 43,
  "symbols_in_volume": [
   "int",
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.ERROR",
   "logging.INFO",
   "logging.WARNING",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.config._create_log_handlers": {
  "lineno": 22,
  "symbols_in_volume": [
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.handlers.RotatingFileHandler",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.config._parse_config": {
  "lineno": 217,
  "symbols_in_volume": [
   "OSError",
   "configparser.RawConfigParser",
   "io.StringIO",
   "open",
   "os.path.exists"
  ],
  "type": "function"
 },
 "openml.config._set_level_register_and_store": {
  "lineno": 60,
  "symbols_in_volume": [
   "_convert_log_levels",
   "int",
   "logging.Handler",
   "logging.NOTSET"
  ],
  "type": "function"
 },
 "openml.config._setup": {
  "lineno": 172,
  "symbols_in_volume": [
   "FileExistsError",
   "ValueError",
   "_parse_config",
   "os.mkdir",
   "os.path.expanduser",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.config.get_cache_directory": {
  "lineno": 245,
  "symbols_in_volume": [
   "_defaults",
   "os.path.join",
   "os.sep.join",
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "openml.config.get_server_base_url": {
  "lineno": 100,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "openml.config.set_cache_directory": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.config.set_console_log_level": {
  "lineno": 72,
  "symbols_in_volume": [
   "_set_level_register_and_store",
   "int",
   "logging.Handler",
   "typing.cast"
  ],
  "type": "function"
 },
 "openml.config.set_file_log_level": {
  "lineno": 78,
  "symbols_in_volume": [
   "_set_level_register_and_store",
   "int",
   "logging.Handler",
   "typing.cast"
  ],
  "type": "function"
 },
 "openml.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.datasets.data_feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.datasets.data_feature.OpenMLDataFeature": {
  "lineno": 4,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.datasets.data_feature.OpenMLDataFeature.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "int",
   "isinstance",
   "list",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.datasets.data_feature.OpenMLDataFeature.__repr__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.datasets.data_feature.OpenMLDataFeature._repr_pretty_": {
  "lineno": 56,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "openml.datasets.dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "openml.datasets.dataset.OpenMLDataset": {
  "lineno": 26,
  "symbols_in_volume": [
   "openml.base.OpenMLBase"
  ],
  "type": "class"
 },
 "openml.datasets.dataset.OpenMLDataset.__eq__": {
  "lineno": 288,
  "symbols_in_volume": [
   "all",
   "set",
   "type"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "DeprecationWarning",
   "OpenMLDataFeature",
   "ValueError",
   "_check_qualities",
   "enumerate",
   "find_invalid_characters",
   "format",
   "int",
   "isinstance",
   "list",
   "re.match",
   "str",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.__init__.find_invalid_characters": {
  "lineno": 134,
  "symbols_in_volume": [
   "re.compile",
   "set"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._convert_array_format": {
  "lineno": 615,
  "symbols_in_volume": [
   "PyOpenMLError",
   "ValueError",
   "_encode_if_category",
   "numpy.asarray",
   "numpy.float32",
   "pandas.DataFrame",
   "pandas.DataFrame.sparse.from_spmatrix",
   "staticmethod",
   "type"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._convert_array_format._encode_if_category": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.nan"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._create_pickle_in_cache": {
  "lineno": 467,
  "symbols_in_volume": [
   "EOFError",
   "ModuleNotFoundError",
   "ValueError",
   "int",
   "isinstance",
   "open",
   "os.path.exists",
   "pandas.DataFrame",
   "pandas.read_feather",
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dump",
   "pickle.load",
   "str",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._download_data": {
  "lineno": 311,
  "symbols_in_volume": [
   "_get_dataset_arff"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_arff": {
  "lineno": 318,
  "symbols_in_volume": [
   "NotImplementedError",
   "ValueError",
   "arff.COO",
   "arff.DENSE",
   "decode_arff",
   "format",
   "format.lower",
   "gzip.open",
   "io.open",
   "os.path.getsize",
   "str",
   "struct.calcsize",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_arff.decode_arff": {
  "lineno": 362,
  "symbols_in_volume": [
   "arff.ArffDecoder"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_file_elements": {
  "lineno": 877,
  "symbols_in_volume": [
   "ValueError",
   "arff.ArffDecoder",
   "arff.ArffException",
   "open",
   "os.path.abspath",
   "os.path.exists",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._get_repr_body_fields": {
  "lineno": 253,
  "symbols_in_volume": [
   "int",
   "len",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._load_data": {
  "lineno": 547,
  "symbols_in_volume": [
   "EOFError",
   "FileNotFoundError",
   "ModuleNotFoundError",
   "ValueError",
   "open",
   "pandas.read_feather",
   "pickle.load"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._parse_data_from_arff": {
  "lineno": 373,
  "symbols_in_volume": [
   "OSError",
   "ValueError",
   "bool",
   "enumerate",
   "isinstance",
   "len",
   "list",
   "max",
   "numpy.float32",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.factorize",
   "set",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._parse_publish_response": {
  "lineno": 896,
  "symbols_in_volume": [
   "int",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._to_dict": {
  "lineno": 900,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "getattr"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset._unpack_categories": {
  "lineno": 676,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "int",
   "numpy.nan",
   "pandas.Categorical",
   "pandas.Series",
   "staticmethod"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.get_data": {
  "lineno": 689,
  "symbols_in_volume": [
   "NotImplementedError",
   "bool",
   "float",
   "hasattr",
   "int",
   "isinstance",
   "len",
   "numpy.array",
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.sum",
   "pandas.DataFrame",
   "str",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "zip"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.get_features_by_type": {
  "lineno": 817,
  "symbols_in_volume": [
   "OpenMLDataFeature.LEGAL_DATA_TYPES",
   "TypeError",
   "isinstance",
   "list",
   "str"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.id": {
  "lineno": 249,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.datasets.dataset.OpenMLDataset.retrieve_class_labels": {
  "lineno": 795,
  "symbols_in_volume": [
   "str",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.dataset._check_qualities": {
  "lineno": 940,
  "symbols_in_volume": [
   "float"
  ],
  "type": "function"
 },
 "openml.datasets.functions": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "openml.datasets.functions.__list_datasets": {
  "lineno": 295,
  "symbols_in_volume": [
   "ValueError",
   "dict",
   "float",
   "int",
   "list",
   "pandas.DataFrame.from_dict",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._create_dataset_from_description": {
  "lineno": 1105,
  "symbols_in_volume": [
   "OpenMLDataset",
   "str",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cache_directory": {
  "lineno": 152,
  "symbols_in_volume": [
   "_create_cache_directory_for_id",
   "str"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cached_dataset": {
  "lineno": 90,
  "symbols_in_volume": [
   "_create_dataset_from_description",
   "_get_cached_dataset_arff",
   "_get_cached_dataset_description",
   "_get_cached_dataset_features",
   "_get_cached_dataset_qualities",
   "int"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cached_dataset_arff": {
  "lineno": 140,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_cache_directory_for_id",
   "io.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cached_dataset_description": {
  "lineno": 106,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_cache_directory_for_id",
   "io.open",
   "os.path.join",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cached_dataset_features": {
  "lineno": 119,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_cache_directory_for_id",
   "_load_features_from_file",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cached_dataset_qualities": {
  "lineno": 128,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_cache_directory_for_id",
   "io.open",
   "os.path.join",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_cached_datasets": {
  "lineno": 77,
  "symbols_in_volume": [
   "_get_cached_dataset",
   "_list_cached_datasets",
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_dataset_arff": {
  "lineno": 984,
  "symbols_in_volume": [
   "OpenMLDataset",
   "TypeError",
   "_create_cache_directory_for_id",
   "dict",
   "isinstance",
   "os.path.join",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_dataset_description": {
  "lineno": 946,
  "symbols_in_volume": [
   "OpenMLCacheException",
   "_get_cached_dataset_description",
   "io.open",
   "os.path.join",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_dataset_features": {
  "lineno": 1034,
  "symbols_in_volume": [
   "_load_features_from_file",
   "io.open",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_dataset_qualities": {
  "lineno": 1067,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "io.open",
   "os.path.join",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_online_dataset_arff": {
  "lineno": 1163,
  "symbols_in_volume": [
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._get_online_dataset_format": {
  "lineno": 1185,
  "symbols_in_volume": [
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._list_cached_datasets": {
  "lineno": 40,
  "symbols_in_volume": [
   "_create_cache_directory",
   "int",
   "os.listdir",
   "os.path.join",
   "re.match"
  ],
  "type": "function"
 },
 "openml.datasets.functions._list_datasets": {
  "lineno": 258,
  "symbols_in_volume": [
   "__list_datasets",
   "int",
   "str",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.datasets.functions._load_features_from_file": {
  "lineno": 329,
  "symbols_in_volume": [
   "io.open",
   "str",
   "typing.Dict",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions._name_to_id": {
  "lineno": 363,
  "symbols_in_volume": [
   "RuntimeError",
   "ValueError",
   "bool",
   "int",
   "len",
   "list_datasets",
   "sorted",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.datasets.functions.attributes_arff_from_df": {
  "lineno": 525,
  "symbols_in_volume": [
   "ValueError",
   "all",
   "isinstance",
   "pandas.api.types.infer_dtype",
   "str"
  ],
  "type": "function"
 },
 "openml.datasets.functions.check_datasets_active": {
  "lineno": 336,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "int",
   "list_datasets",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.datasets.functions.create_dataset": {
  "lineno": 580,
  "symbols_in_volume": [
   "OpenMLDataset",
   "ValueError",
   "all",
   "any",
   "arff.ArffDecoder",
   "arff.ArffException",
   "arff.COO",
   "arff.DENSE",
   "arff.dumps",
   "attributes_arff_from_df",
   "dict",
   "hasattr",
   "isinstance",
   "len",
   "list",
   "numpy.argsort",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.SparseDtype",
   "range",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "openml.datasets.functions.edit_dataset": {
  "lineno": 802,
  "symbols_in_volume": [
   "TypeError",
   "collections.OrderedDict",
   "int",
   "isinstance",
   "list",
   "type",
   "xmltodict.parse",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "openml.datasets.functions.fork_dataset": {
  "lineno": 907,
  "symbols_in_volume": [
   "TypeError",
   "int",
   "isinstance",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions.get_dataset": {
  "lineno": 431,
  "symbols_in_volume": [
   "OpenMLPrivateDatasetError",
   "TypeError",
   "ValueError",
   "_create_cache_directory_for_id",
   "_create_dataset_from_description",
   "_get_dataset_arff",
   "_get_dataset_description",
   "_get_dataset_features",
   "_get_dataset_qualities",
   "_name_to_id",
   "_remove_cache_dir_for_id",
   "bool",
   "int",
   "isinstance",
   "str",
   "type",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.functions.get_datasets": {
  "lineno": 402,
  "symbols_in_volume": [
   "bool",
   "get_dataset",
   "int",
   "str",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.functions.list_datasets": {
  "lineno": 179,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.datasets.functions.list_qualities": {
  "lineno": 157,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "isinstance",
   "list",
   "str",
   "typing.List",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.datasets.functions.status_update": {
  "lineno": 775,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.evaluations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.evaluations.evaluation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.evaluations.evaluation.OpenMLEvaluation": {
  "lineno": 6,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.evaluations.evaluation.OpenMLEvaluation.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "int",
   "str"
  ],
  "type": "function"
 },
 "openml.evaluations.evaluation.OpenMLEvaluation.__repr__": {
  "lineno": 76,
  "symbols_in_volume": [
   "len",
   "max"
  ],
  "type": "function"
 },
 "openml.evaluations.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.evaluations.functions.__list_evaluations": {
  "lineno": 179,
  "symbols_in_volume": [
   "OpenMLEvaluation",
   "ValueError",
   "collections.OrderedDict",
   "float",
   "int",
   "json.loads",
   "list",
   "openml._api_calls._perform_api_call",
   "pandas.DataFrame.from_records",
   "set",
   "str",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.evaluations.functions._list_evaluations": {
  "lineno": 102,
  "symbols_in_volume": [
   "__list_evaluations",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.evaluations.functions.list_evaluation_measures": {
  "lineno": 255,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "isinstance",
   "list",
   "openml._api_calls._perform_api_call",
   "str",
   "typing.List",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.evaluations.functions.list_evaluations": {
  "lineno": 16,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "int",
   "openml.utils._list_all",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.evaluations.functions.list_evaluations_setups": {
  "lineno": 278,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "int",
   "len",
   "list_evaluations",
   "numpy.array_split",
   "openml.setups.list_setups",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pandas.merge",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.exceptions.OpenMLCacheException": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.OpenMLCacheException.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "openml.exceptions.OpenMLHashException": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.OpenMLPrivateDatasetError": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.OpenMLPrivateDatasetError.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "openml.exceptions.OpenMLRunsExistError": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.OpenMLRunsExistError.__init__": {
  "lineno": 63,
  "symbols_in_volume": [
   "ValueError",
   "len",
   "set",
   "str",
   "super"
  ],
  "type": "function"
 },
 "openml.exceptions.OpenMLServerError": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.OpenMLServerError.__init__": {
  "lineno": 14,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "openml.exceptions.OpenMLServerException": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.OpenMLServerException.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "int",
   "str",
   "super"
  ],
  "type": "function"
 },
 "openml.exceptions.OpenMLServerException.__str__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.exceptions.OpenMLServerNoResult": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.exceptions.PyOpenMLError": {
  "lineno": 4,
  "symbols_in_volume": [
   "Exception"
  ],
  "type": "class"
 },
 "openml.exceptions.PyOpenMLError.__init__": {
  "lineno": 5,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "openml.extensions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.extensions.extension_interface": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "openml.extensions.extension_interface.Extension": {
  "lineno": 17,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "openml.extensions.extension_interface.Extension._run_model_on_fold": {
  "lineno": 158,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "int",
   "numpy.ndarray",
   "typing.Any",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.can_handle_flow": {
  "lineno": 27,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "bool",
   "classmethod"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.can_handle_model": {
  "lineno": 43,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "bool",
   "classmethod",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.create_setup_string": {
  "lineno": 109,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.flow_to_model": {
  "lineno": 62,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "bool",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.get_version_information": {
  "lineno": 100,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.instantiate_model_from_hpo_class": {
  "lineno": 235,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.is_estimator": {
  "lineno": 125,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "bool",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.model_to_flow": {
  "lineno": 87,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.obtain_parameter_values": {
  "lineno": 205,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.extension_interface.Extension.seed_model": {
  "lineno": 141,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "int",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.extensions.functions": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "openml.extensions.functions.get_extension_by_flow": {
  "lineno": 32,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "extension_class",
   "len",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.extensions.functions.get_extension_by_model": {
  "lineno": 69,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "extension_class",
   "extension_class.can_handle_model",
   "len",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.extensions.functions.register_extension": {
  "lineno": 15,
  "symbols_in_volume": [
   "typing.Type"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn": {
  "lineno": null,
  "symbols_in_volume": [
   "openml.extensions.register_extension"
  ],
  "type": "module"
 },
 "openml.extensions.sklearn.extension": {
  "lineno": null,
  "symbols_in_volume": [
   "ValueError",
   "__name__",
   "bool",
   "float",
   "int",
   "json.decoder.JSONDecodeError",
   "logging.getLogger",
   "numpy.sctypes.items",
   "re.compile",
   "str",
   "sys.version_info",
   "tuple"
  ],
  "type": "module"
 },
 "openml.extensions.sklearn.extension.SklearnExtension": {
  "lineno": 64,
  "symbols_in_volume": [
   "openml.extensions.Extension"
  ],
  "type": "class"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._can_measure_cputime": {
  "lineno": 1408,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "isinstance",
   "sklearn.base.BaseEstimator",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._can_measure_wallclocktime": {
  "lineno": 1433,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "isinstance",
   "sklearn.base.BaseEstimator",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._check_dependencies": {
  "lineno": 1151,
  "symbols_in_volume": [
   "NotImplementedError",
   "ValueError",
   "bool",
   "distutils.version.LooseVersion",
   "importlib.import_module",
   "str",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._check_multiple_occurence_of_component_in_flow": {
  "lineno": 835,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "len",
   "openml.flows.OpenMLFlow",
   "set",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_cross_validator": {
  "lineno": 1310,
  "symbols_in_volume": [
   "bool",
   "getattr",
   "importlib.import_module",
   "int",
   "model_class",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_function": {
  "lineno": 1258,
  "symbols_in_volume": [
   "getattr",
   "importlib.import_module",
   "str",
   "typing.Callable"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_model": {
  "lineno": 1082,
  "symbols_in_volume": [
   "bool",
   "collections.OrderedDict",
   "copy.copy",
   "getattr",
   "importlib.import_module",
   "int",
   "model_class",
   "openml.flows.OpenMLFlow",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_rv_frozen": {
  "lineno": 1231,
  "symbols_in_volume": [
   "AttributeError",
   "getattr",
   "importlib.import_module",
   "rv_class",
   "scipy.stats.distributions.rv_frozen",
   "typing.Any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_sklearn": {
  "lineno": 246,
  "symbols_in_volume": [
   "NotImplementedError",
   "TypeError",
   "ValueError",
   "bool",
   "collections.OrderedDict",
   "dict",
   "float",
   "int",
   "isinstance",
   "json.decoder.JSONDecodeError",
   "json.loads",
   "list",
   "openml.flows.OpenMLFlow",
   "sorted",
   "str",
   "tuple",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._deserialize_type": {
  "lineno": 1205,
  "symbols_in_volume": [
   "float",
   "int",
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.int32",
   "numpy.int64",
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_information_from_model": {
  "lineno": 855,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "all",
   "collections.OrderedDict",
   "enumerate",
   "flatten_all",
   "hasattr",
   "isinstance",
   "json.dumps",
   "len",
   "list",
   "openml.exceptions.PyOpenMLError",
   "openml.flows.OpenMLFlow",
   "set",
   "sorted",
   "str",
   "tuple",
   "type",
   "typing.Any",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_information_from_model.flatten_all": {
  "lineno": 881,
  "symbols_in_volume": [
   "flatten_all",
   "isinstance",
   "len",
   "list",
   "tuple"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_sklearn_param_info": {
  "lineno": 632,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "enumerate",
   "len",
   "list",
   "range",
   "re.IGNORECASE",
   "re.compile",
   "set",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_sklearn_parameter_docstring": {
  "lineno": 586,
  "symbols_in_volume": [
   "ValueError",
   "inspect.getdoc",
   "len",
   "match_format",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_sklearn_parameter_docstring.match_format": {
  "lineno": 604,
  "symbols_in_volume": [
   "len"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._extract_trace_data": {
  "lineno": 2068,
  "symbols_in_volume": [
   "json.dumps",
   "len",
   "numpy.ma.masked",
   "numpy.nan",
   "range"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._format_external_version": {
  "lineno": 1326,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_dependencies": {
  "lineno": 778,
  "symbols_in_volume": [
   "sklearn.__version__",
   "str"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_external_version_string": {
  "lineno": 803,
  "symbols_in_volume": [
   "importlib.import_module",
   "isinstance",
   "list",
   "openml.__version__",
   "openml.flows.OpenMLFlow",
   "set",
   "sklearn.__version__",
   "sorted",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_fn_arguments_with_defaults": {
  "lineno": 1051,
  "symbols_in_volume": [
   "dict",
   "inspect.Signature.empty",
   "inspect.signature",
   "set",
   "typing.Callable",
   "typing.Dict",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_parameter_values_recursive": {
  "lineno": 1331,
  "symbols_in_volume": [
   "ValueError",
   "dict",
   "isinstance",
   "list",
   "staticmethod",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_sklearn_description": {
  "lineno": 529,
  "symbols_in_volume": [
   "ValueError",
   "inspect.getdoc",
   "int",
   "len",
   "match_format",
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_sklearn_description.match_format": {
  "lineno": 551,
  "symbols_in_volume": [
   "len"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._get_tags": {
  "lineno": 788,
  "symbols_in_volume": [
   "sklearn.__version__",
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._is_cross_validator": {
  "lineno": 514,
  "symbols_in_volume": [
   "bool",
   "isinstance",
   "sklearn.model_selection.BaseCrossValidator",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._is_hpo_class": {
  "lineno": 2026,
  "symbols_in_volume": [
   "bool",
   "isinstance",
   "sklearn.model_selection._search.BaseSearchCV",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._is_sklearn_flow": {
  "lineno": 517,
  "symbols_in_volume": [
   "bool",
   "classmethod",
   "getattr",
   "openml.flows.OpenMLFlow"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._obtain_arff_trace": {
  "lineno": 2089,
  "symbols_in_volume": [
   "AssertionError",
   "TypeError",
   "ValueError",
   "all",
   "bool",
   "float",
   "hasattr",
   "int",
   "isinstance",
   "list",
   "numpy.ma.masked",
   "openml.runs.trace.OpenMLRunTrace.generate",
   "openml.runs.trace.PREFIX",
   "str",
   "tuple",
   "type",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._openml_param_name_to_sklearn": {
  "lineno": 1993,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "openml.flows.OpenMLFlow",
   "openml.setups.OpenMLParameter",
   "str"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._prevent_optimize_n_jobs": {
  "lineno": 1371,
  "symbols_in_volume": [
   "AttributeError",
   "hasattr",
   "isinstance",
   "len",
   "openml.exceptions.PyOpenMLError",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.RandomizedSearchCV"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._run_model_on_fold": {
  "lineno": 1540,
  "symbols_in_volume": [
   "AttributeError",
   "TypeError",
   "ValueError",
   "_prediction_to_probabilities",
   "collections.OrderedDict",
   "enumerate",
   "int",
   "isinstance",
   "len",
   "list",
   "numpy.all",
   "numpy.ndarray",
   "openml.config.logger.warn",
   "openml.exceptions.PyOpenMLError",
   "openml.runs.trace.OpenMLRunTrace",
   "openml.tasks.OpenMLClassificationTask",
   "openml.tasks.OpenMLClusteringTask",
   "openml.tasks.OpenMLLearningCurveTask",
   "openml.tasks.OpenMLRegressionTask",
   "openml.tasks.OpenMLSupervisedTask",
   "pandas.DataFrame",
   "scipy.sparse.spmatrix",
   "set",
   "sklearn.base.clone",
   "sklearn.pipeline.Pipeline",
   "str",
   "time.process_time",
   "time.time",
   "type",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union",
   "typing.cast",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._run_model_on_fold._prediction_to_probabilities": {
  "lineno": 1596,
  "symbols_in_volume": [
   "ValueError",
   "enumerate",
   "isinstance",
   "len",
   "list",
   "numpy.arange",
   "numpy.float32",
   "numpy.ndarray",
   "openml.tasks.OpenMLClassificationTask",
   "openml.tasks.OpenMLLearningCurveTask",
   "pandas.DataFrame",
   "str",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_cross_validator": {
  "lineno": 1263,
  "symbols_in_volume": [
   "DeprecationWarning",
   "collections.OrderedDict",
   "getattr",
   "hasattr",
   "inspect.signature",
   "json.dumps",
   "len",
   "object.__init__",
   "sorted",
   "typing.Any",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_function": {
  "lineno": 1251,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "typing.Callable"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_model": {
  "lineno": 696,
  "symbols_in_volume": [
   "TypeError",
   "isinstance",
   "openml.flows.OpenMLFlow",
   "str",
   "type",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_rv_frozen": {
  "lineno": 1218,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_sklearn": {
  "lineno": 416,
  "symbols_in_volume": [
   "TypeError",
   "collections.OrderedDict",
   "dict",
   "inspect.isfunction",
   "isinstance",
   "len",
   "list",
   "sorted",
   "str",
   "tuple",
   "type",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension._serialize_type": {
  "lineno": 1189,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "float",
   "int",
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.int32",
   "numpy.int64",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.can_handle_flow": {
  "lineno": 70,
  "symbols_in_volume": [
   "bool",
   "classmethod"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.can_handle_model": {
  "lineno": 86,
  "symbols_in_volume": [
   "bool",
   "classmethod",
   "isinstance",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.create_setup_string": {
  "lineno": 499,
  "symbols_in_volume": [
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.flow_to_model": {
  "lineno": 217,
  "symbols_in_volume": [
   "bool",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.get_version_information": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.__version__",
   "scipy.__version__",
   "sklearn.__version__",
   "str",
   "sys.version_info",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.instantiate_model_from_hpo_class": {
  "lineno": 2042,
  "symbols_in_volume": [
   "AssertionError",
   "openml.runs.trace.OpenMLTraceIteration",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.is_estimator": {
  "lineno": 1458,
  "symbols_in_volume": [
   "bool",
   "hasattr",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.model_to_flow": {
  "lineno": 402,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values": {
  "lineno": 1789,
  "symbols_in_volume": [
   "extract_parameters",
   "get_flow_dict",
   "openml.flows.functions._check_flow_for_server_id",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values.extract_parameters": {
  "lineno": 1822,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "all",
   "collections.OrderedDict",
   "extract_parameters",
   "is_subcomponent_specification",
   "isinstance",
   "json.dumps",
   "len",
   "list",
   "openml.flows.OpenMLFlow",
   "set",
   "sorted",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values.extract_parameters.is_subcomponent_specification": {
  "lineno": 1823,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "list",
   "openml.flows.OpenMLFlow",
   "str",
   "tuple"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.obtain_parameter_values.get_flow_dict": {
  "lineno": 1816,
  "symbols_in_volume": [
   "get_flow_dict"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.seed_model": {
  "lineno": 1475,
  "symbols_in_volume": [
   "_seed_current_object",
   "hasattr",
   "int",
   "isinstance",
   "numpy.random.RandomState",
   "sklearn.model_selection.BaseCrossValidator",
   "sorted",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.seed_model._seed_current_object": {
  "lineno": 1498,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "isinstance",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.trim_flow_name": {
  "lineno": 100,
  "symbols_in_volume": [
   "bool",
   "classmethod",
   "enumerate",
   "int",
   "len",
   "remove_all_in_parentheses",
   "str"
  ],
  "type": "function"
 },
 "openml.extensions.sklearn.extension.SklearnExtension.trim_flow_name.remove_all_in_parentheses": {
  "lineno": 141,
  "symbols_in_volume": [
   "re.subn",
   "str"
  ],
  "type": "function"
 },
 "openml.flows": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.flows.flow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.flows.flow.OpenMLFlow": {
  "lineno": 15,
  "symbols_in_volume": [
   "openml.base.OpenMLBase"
  ],
  "type": "class"
 },
 "openml.flows.flow.OpenMLFlow.__init__": {
  "lineno": 87,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "collections.OrderedDict",
   "get_extension_by_flow",
   "isinstance",
   "len",
   "set",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._from_dict": {
  "lineno": 293,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "collections.OrderedDict",
   "extract_xml_tags",
   "int"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._get_repr_body_fields": {
  "lineno": 175,
  "symbols_in_volume": [
   "int",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._parse_publish_response": {
  "lineno": 401,
  "symbols_in_volume": [
   "int",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow._to_dict": {
  "lineno": 204,
  "symbols_in_volume": [
   "ValueError",
   "__name__",
   "_add_if_nonempty",
   "collections.OrderedDict",
   "getattr",
   "isinstance",
   "logging.getLogger",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.extension": {
  "lineno": 166,
  "symbols_in_volume": [
   "RuntimeError",
   "property"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.from_filesystem": {
  "lineno": 395,
  "symbols_in_volume": [
   "classmethod",
   "open",
   "os.path.join",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.get_structure": {
  "lineno": 464,
  "symbols_in_volume": [
   "ValueError",
   "dict",
   "getattr",
   "str",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.get_subflow": {
  "lineno": 492,
  "symbols_in_volume": [
   "ValueError",
   "len",
   "list"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.id": {
  "lineno": 162,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.publish": {
  "lineno": 405,
  "symbols_in_volume": [
   "ValueError",
   "_copy_server_fields",
   "bool",
   "super"
  ],
  "type": "function"
 },
 "openml.flows.flow.OpenMLFlow.to_filesystem": {
  "lineno": 386,
  "symbols_in_volume": [
   "ValueError",
   "open",
   "os.listdir",
   "os.makedirs",
   "os.path.join",
   "str"
  ],
  "type": "function"
 },
 "openml.flows.flow._add_if_nonempty": {
  "lineno": 534,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.flows.flow._copy_server_fields": {
  "lineno": 524,
  "symbols_in_volume": [
   "_copy_server_fields",
   "getattr",
   "setattr"
  ],
  "type": "function"
 },
 "openml.flows.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.flows.functions.__list_flows": {
  "lineno": 329,
  "symbols_in_volume": [
   "dict",
   "int",
   "list",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "str",
   "type",
   "typing.Dict",
   "typing.Union",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.flows.functions._check_flow_for_server_id": {
  "lineno": 359,
  "symbols_in_volume": [
   "ValueError",
   "len",
   "list"
  ],
  "type": "function"
 },
 "openml.flows.functions._create_flow_from_xml": {
  "lineno": 529,
  "symbols_in_volume": [
   "str",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.flows.functions._get_cached_flow": {
  "lineno": 47,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_flow_from_xml",
   "int",
   "io.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.flows.functions._get_cached_flows": {
  "lineno": 21,
  "symbols_in_volume": [
   "_get_cached_flow",
   "collections.OrderedDict",
   "int",
   "os.listdir",
   "re.match"
  ],
  "type": "function"
 },
 "openml.flows.functions._get_flow_description": {
  "lineno": 104,
  "symbols_in_volume": [
   "OpenMLCacheException",
   "_create_flow_from_xml",
   "_get_cached_flow",
   "int",
   "io.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.flows.functions._list_flows": {
  "lineno": 202,
  "symbols_in_volume": [
   "__list_flows",
   "pandas.DataFrame",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.flows.functions.assert_flows_equal": {
  "lineno": 375,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "assert_flows_equal",
   "bool",
   "getattr",
   "isinstance",
   "len",
   "set",
   "str",
   "type",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.flows.functions.flow_exists": {
  "lineno": 229,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "int",
   "isinstance",
   "len",
   "str",
   "typing.Union",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.flows.functions.get_flow": {
  "lineno": 71,
  "symbols_in_volume": [
   "_get_flow_description",
   "bool",
   "int"
  ],
  "type": "function"
 },
 "openml.flows.functions.get_flow_id": {
  "lineno": 267,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "bool",
   "flow_exists",
   "int",
   "isinstance",
   "list_flows",
   "pandas.DataFrame",
   "str",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.flows.functions.list_flows": {
  "lineno": 135,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.populate_cache": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.runs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.runs.functions": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "openml.runs.functions.__list_runs": {
  "lineno": 1020,
  "symbols_in_volume": [
   "TaskType",
   "ValueError",
   "collections.OrderedDict",
   "int",
   "list",
   "openml._api_calls._perform_api_call",
   "pandas.DataFrame.from_dict",
   "str",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.runs.functions._create_run_from_xml": {
  "lineno": 669,
  "symbols_in_volume": [
   "NotImplementedError",
   "OpenMLRun",
   "ValueError",
   "collections.OrderedDict",
   "float",
   "hasattr",
   "int",
   "obtain_field",
   "openml.tasks.get_task",
   "openml.utils.extract_xml_tags",
   "str",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.runs.functions._create_run_from_xml.obtain_field": {
  "lineno": 687,
  "symbols_in_volume": [
   "AttributeError",
   "cast"
  ],
  "type": "function"
 },
 "openml.runs.functions._get_cached_run": {
  "lineno": 846,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_run_from_xml",
   "io.open",
   "openml.utils._create_cache_directory_for_id",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.runs.functions._list_runs": {
  "lineno": 947,
  "symbols_in_volume": [
   "__list_runs",
   "bool",
   "id",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.runs.functions._run_task_get_arffcontent": {
  "lineno": 414,
  "symbols_in_volume": [
   "NotImplementedError",
   "TypeError",
   "ValueError",
   "_calculate_local_measure",
   "bool",
   "collections.OrderedDict",
   "dict",
   "enumerate",
   "format_prediction",
   "int",
   "isinstance",
   "itertools.product",
   "len",
   "openml.config.logger.info",
   "pandas.DataFrame",
   "pandas.Series",
   "range",
   "str",
   "type",
   "typing.Any",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "zip"
  ],
  "type": "function"
 },
 "openml.runs.functions._run_task_get_arffcontent._calculate_local_measure": {
  "lineno": 497,
  "symbols_in_volume": [
   "sklearn_fn"
  ],
  "type": "function"
 },
 "openml.runs.functions.format_prediction": {
  "lineno": 1061,
  "symbols_in_volume": [
   "NotImplementedError",
   "ValueError",
   "float",
   "int",
   "isinstance",
   "set",
   "str",
   "type",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.runs.functions.get_run": {
  "lineno": 628,
  "symbols_in_volume": [
   "OpenMLCacheException",
   "OpenMLRun",
   "_create_run_from_xml",
   "_get_cached_run",
   "bool",
   "int",
   "io.open",
   "openml._api_calls._perform_api_call",
   "openml.utils._create_cache_directory_for_id",
   "openml.utils.thread_safe_if_oslo_installed",
   "os.makedirs",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.runs.functions.get_run_trace": {
  "lineno": 301,
  "symbols_in_volume": [
   "int",
   "openml._api_calls._perform_api_call"
  ],
  "type": "function"
 },
 "openml.runs.functions.get_runs": {
  "lineno": 609,
  "symbols_in_volume": [
   "get_run"
  ],
  "type": "function"
 },
 "openml.runs.functions.initialize_model_from_run": {
  "lineno": 318,
  "symbols_in_volume": [
   "get_run",
   "initialize_model",
   "int",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.runs.functions.initialize_model_from_trace": {
  "lineno": 336,
  "symbols_in_volume": [
   "ValueError",
   "get_flow",
   "get_run",
   "get_run_trace",
   "initialize_model_from_run",
   "int",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.runs.functions.list_runs": {
  "lineno": 859,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "bool",
   "id",
   "int",
   "isinstance",
   "list",
   "openml.utils._list_all",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.runs.functions.run_exists": {
  "lineno": 383,
  "symbols_in_volume": [
   "int",
   "len",
   "list_runs",
   "set",
   "typing.Set"
  ],
  "type": "function"
 },
 "openml.runs.functions.run_flow_on_task": {
  "lineno": 139,
  "symbols_in_volume": [
   "DeprecationWarning",
   "OpenMLRun",
   "OpenMLRunsExistError",
   "ValueError",
   "_run_task_get_arffcontent",
   "bool",
   "flow_exists",
   "get_flow",
   "int",
   "isinstance",
   "list",
   "openml.config.logger.info",
   "openml.exceptions.PyOpenMLError",
   "openml.flows.flow._copy_server_fields",
   "run_exists",
   "setup_exists",
   "str",
   "time.strftime",
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.runs.functions.run_model_on_task": {
  "lineno": 46,
  "symbols_in_volume": [
   "DeprecationWarning",
   "TypeError",
   "bool",
   "get_task_and_type_conversion",
   "int",
   "isinstance",
   "openml.extensions.get_extension_by_model",
   "run_flow_on_task",
   "str",
   "typing.Any",
   "typing.List",
   "typing.Tuple",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.runs.functions.run_model_on_task.get_task_and_type_conversion": {
  "lineno": 116,
  "symbols_in_volume": [
   "get_task",
   "int",
   "isinstance",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.runs.run": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.runs.run.OpenMLRun": {
  "lineno": 27,
  "symbols_in_volume": [
   "openml.base.OpenMLBase"
  ],
  "type": "class"
 },
 "openml.runs.run.OpenMLRun.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._generate_arff_dict": {
  "lineno": 275,
  "symbols_in_volume": [
   "NotImplementedError",
   "ValueError",
   "collections.OrderedDict",
   "get_flow",
   "get_task",
   "isinstance",
   "len",
   "range",
   "str",
   "time.strftime"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._get_file_elements": {
  "lineno": 500,
  "symbols_in_volume": [
   "PyOpenMLError",
   "arff.dumps",
   "openml.flows.get_flow",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._get_repr_body_fields": {
  "lineno": 120,
  "symbols_in_volume": [
   "int",
   "openml.config.get_server_base_url",
   "openml.datasets.OpenMLDataset.url_for_id",
   "openml.flows.OpenMLFlow.url_for_id",
   "openml.tasks.OpenMLTask.url_for_id",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._parse_publish_response": {
  "lineno": 496,
  "symbols_in_volume": [
   "int",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun._to_dict": {
  "lineno": 539,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "len",
   "list",
   "str"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.from_filesystem": {
  "lineno": 167,
  "symbols_in_volume": [
   "ValueError",
   "arff.load",
   "bool",
   "classmethod",
   "open",
   "openml.flows.OpenMLFlow.from_filesystem",
   "openml.runs.OpenMLRunTrace._from_filesystem",
   "openml.runs.functions._create_run_from_xml",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "pickle.load",
   "str"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.get_metric_fn": {
  "lineno": 366,
  "symbols_in_volume": [
   "ValueError",
   "_attribute_list_to_dict",
   "arff.loads",
   "collections.OrderedDict",
   "dict",
   "enumerate",
   "get_task",
   "len",
   "numpy.array",
   "openml._api_calls._download_text_file",
   "openml._api_calls._file_id_to_url",
   "sklearn_fn",
   "str"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.get_metric_fn._attribute_list_to_dict": {
  "lineno": 413,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "len",
   "range"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.id": {
  "lineno": 116,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.runs.run.OpenMLRun.to_filesystem": {
  "lineno": 232,
  "symbols_in_volume": [
   "ValueError",
   "arff.dumps",
   "bool",
   "open",
   "os.listdir",
   "os.makedirs",
   "os.path.abspath",
   "os.path.join",
   "pickle.dump",
   "str"
  ],
  "type": "function"
 },
 "openml.runs.trace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.runs.trace.OpenMLRunTrace": {
  "lineno": 21,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.runs.trace.OpenMLRunTrace.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.__iter__": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.__repr__": {
  "lineno": 373,
  "symbols_in_volume": [
   "len"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace._from_filesystem": {
  "lineno": 105,
  "symbols_in_volume": [
   "ValueError",
   "arff.load",
   "classmethod",
   "int",
   "len",
   "open",
   "os.path.isfile",
   "range",
   "str"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace._to_filesystem": {
  "lineno": 135,
  "symbols_in_volume": [
   "arff.dumps",
   "open",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace._trace_from_arff_struct": {
  "lineno": 228,
  "symbols_in_volume": [
   "OpenMLTraceIteration",
   "ValueError",
   "classmethod",
   "cls",
   "collections.OrderedDict",
   "enumerate",
   "float",
   "int"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.generate": {
  "lineno": 64,
  "symbols_in_volume": [
   "ValueError",
   "classmethod",
   "len"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.get_selected_iteration": {
  "lineno": 39,
  "symbols_in_volume": [
   "ValueError",
   "int"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.merge_traces": {
  "lineno": 340,
  "symbols_in_volume": [
   "ValueError",
   "classmethod",
   "cls",
   "collections.OrderedDict",
   "list",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.trace_from_arff": {
  "lineno": 204,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.trace_from_xml": {
  "lineno": 288,
  "symbols_in_volume": [
   "OpenMLTraceIteration",
   "TypeError",
   "ValueError",
   "classmethod",
   "cls",
   "collections.OrderedDict",
   "float",
   "int",
   "isinstance",
   "json.loads",
   "list",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLRunTrace.trace_to_arff": {
  "lineno": 150,
  "symbols_in_volume": [
   "ValueError",
   "collections.OrderedDict",
   "getattr",
   "iter",
   "len",
   "next"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLTraceIteration": {
  "lineno": 383,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.runs.trace.OpenMLTraceIteration.__init__": {
  "lineno": 412,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "bool",
   "collections.OrderedDict",
   "isinstance",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.runs.trace.OpenMLTraceIteration.__repr__": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.runs.trace.OpenMLTraceIteration.get_parameters": {
  "lineno": 438,
  "symbols_in_volume": [
   "json.loads",
   "len"
  ],
  "type": "function"
 },
 "openml.setups": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.setups.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.setups.functions.__list_setups": {
  "lineno": 190,
  "symbols_in_volume": [
   "ValueError",
   "_create_setup_from_xml",
   "dict",
   "list",
   "openml._api_calls._perform_api_call",
   "pandas.DataFrame.from_dict",
   "str",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.setups.functions._create_setup_from_xml": {
  "lineno": 274,
  "symbols_in_volume": [
   "OpenMLSetup",
   "ValueError",
   "_create_setup_parameter_from_xml",
   "dict",
   "id",
   "int",
   "isinstance",
   "list",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.setups.functions._create_setup_parameter_from_xml": {
  "lineno": 310,
  "symbols_in_volume": [
   "OpenMLParameter",
   "int"
  ],
  "type": "function"
 },
 "openml.setups.functions._get_cached_setup": {
  "lineno": 61,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "_create_setup_from_xml",
   "io.open",
   "openml.exceptions.OpenMLCacheException",
   "os.path.join",
   "str",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.setups.functions._list_setups": {
  "lineno": 156,
  "symbols_in_volume": [
   "__list_setups",
   "int",
   "str"
  ],
  "type": "function"
 },
 "openml.setups.functions._to_dict": {
  "lineno": 263,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "openml.setups.functions.get_setup": {
  "lineno": 78,
  "symbols_in_volume": [
   "_create_setup_from_xml",
   "_get_cached_setup",
   "io.open",
   "openml._api_calls._perform_api_call",
   "openml.exceptions.OpenMLCacheException",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "str",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.setups.functions.initialize_model": {
  "lineno": 231,
  "symbols_in_volume": [
   "get_setup",
   "int",
   "len",
   "openml.flows.get_flow",
   "typing.Any"
  ],
  "type": "function"
 },
 "openml.setups.functions.list_setups": {
  "lineno": 110,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "openml.utils._list_all",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.setups.functions.setup_exists": {
  "lineno": 19,
  "symbols_in_volume": [
   "ValueError",
   "_to_dict",
   "int",
   "openml._api_calls._perform_api_call",
   "openml.flows.flow_exists",
   "openml.flows.functions._check_flow_for_server_id",
   "xmltodict.parse",
   "xmltodict.unparse"
  ],
  "type": "function"
 },
 "openml.setups.setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.setups.setup.OpenMLParameter": {
  "lineno": 53,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.setups.setup.OpenMLParameter.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.setups.setup.OpenMLParameter.__repr__": {
  "lineno": 98,
  "symbols_in_volume": [
   "len",
   "max"
  ],
  "type": "function"
 },
 "openml.setups.setup.OpenMLSetup": {
  "lineno": 6,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.setups.setup.OpenMLSetup.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "ValueError",
   "dict",
   "int",
   "isinstance"
  ],
  "type": "function"
 },
 "openml.setups.setup.OpenMLSetup.__repr__": {
  "lineno": 32,
  "symbols_in_volume": [
   "len",
   "max"
  ],
  "type": "function"
 },
 "openml.study": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.study.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.study.functions.__list_studies": {
  "lineno": 583,
  "symbols_in_volume": [
   "cast_fn",
   "dict",
   "int",
   "list",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "str",
   "type",
   "typing.Dict",
   "typing.Union",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.study.functions._get_study": {
  "lineno": 69,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "openml.study.OpenMLBenchmarkSuite",
   "openml.study.OpenMLStudy",
   "openml.study.study.BaseStudy",
   "str",
   "typing.Union",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.study.functions._list_studies": {
  "lineno": 558,
  "symbols_in_volume": [
   "__list_studies",
   "pandas.DataFrame",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.study.functions.attach_to_study": {
  "lineno": 351,
  "symbols_in_volume": [
   "int",
   "str",
   "typing.List",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.study.functions.attach_to_suite": {
  "lineno": 332,
  "symbols_in_volume": [
   "attach_to_study",
   "int",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.study.functions.create_benchmark_suite": {
  "lineno": 225,
  "symbols_in_volume": [
   "int",
   "openml.study.OpenMLBenchmarkSuite",
   "str",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.study.functions.create_study": {
  "lineno": 177,
  "symbols_in_volume": [
   "int",
   "openml.study.OpenMLStudy",
   "str",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.study.functions.delete_study": {
  "lineno": 316,
  "symbols_in_volume": [
   "bool",
   "int"
  ],
  "type": "function"
 },
 "openml.study.functions.delete_suite": {
  "lineno": 300,
  "symbols_in_volume": [
   "bool",
   "delete_study",
   "int"
  ],
  "type": "function"
 },
 "openml.study.functions.detach_from_study": {
  "lineno": 394,
  "symbols_in_volume": [
   "int",
   "str",
   "typing.List",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.study.functions.detach_from_suite": {
  "lineno": 376,
  "symbols_in_volume": [
   "detach_from_study",
   "int",
   "typing.List"
  ],
  "type": "function"
 },
 "openml.study.functions.get_study": {
  "lineno": 33,
  "symbols_in_volume": [
   "DeprecationWarning",
   "_get_study",
   "int",
   "openml.study.OpenMLBenchmarkSuite",
   "openml.study.OpenMLStudy",
   "str",
   "typing.Optional",
   "typing.Union",
   "typing.cast",
   "warnings.warn"
  ],
  "type": "function"
 },
 "openml.study.functions.get_suite": {
  "lineno": 15,
  "symbols_in_volume": [
   "_get_study",
   "int",
   "openml.study.OpenMLBenchmarkSuite",
   "str",
   "typing.Union",
   "typing.cast"
  ],
  "type": "function"
 },
 "openml.study.functions.list_studies": {
  "lineno": 484,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.study.functions.list_suites": {
  "lineno": 419,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.study.functions.update_study_status": {
  "lineno": 276,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "str",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.study.functions.update_suite_status": {
  "lineno": 262,
  "symbols_in_volume": [
   "int",
   "str",
   "update_study_status"
  ],
  "type": "function"
 },
 "openml.study.study": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.study.study.BaseStudy": {
  "lineno": 10,
  "symbols_in_volume": [
   "openml.base.OpenMLBase"
  ],
  "type": "class"
 },
 "openml.study.study.BaseStudy.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "int",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy._entity_letter": {
  "lineno": 93,
  "symbols_in_volume": [
   "classmethod",
   "str"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy._get_repr_body_fields": {
  "lineno": 101,
  "symbols_in_volume": [
   "int",
   "len",
   "openml.config.get_server_base_url",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy._parse_publish_response": {
  "lineno": 140,
  "symbols_in_volume": [
   "int",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy._to_dict": {
  "lineno": 144,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "getattr"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy.id": {
  "lineno": 97,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy.push_tag": {
  "lineno": 172,
  "symbols_in_volume": [
   "NotImplementedError",
   "str"
  ],
  "type": "function"
 },
 "openml.study.study.BaseStudy.remove_tag": {
  "lineno": 175,
  "symbols_in_volume": [
   "NotImplementedError",
   "str"
  ],
  "type": "function"
 },
 "openml.study.study.OpenMLBenchmarkSuite": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.study.study.OpenMLBenchmarkSuite.__init__": {
  "lineno": 301,
  "symbols_in_volume": [
   "int",
   "str",
   "super",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.study.study.OpenMLStudy": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.study.study.OpenMLStudy.__init__": {
  "lineno": 225,
  "symbols_in_volume": [
   "int",
   "str",
   "super",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.tasks.functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.tasks.functions.__list_tasks": {
  "lineno": 233,
  "symbols_in_volume": [
   "KeyError",
   "TaskType",
   "ValueError",
   "_get_estimation_procedure_list",
   "abs",
   "dict",
   "float",
   "input",
   "input.get",
   "int",
   "list",
   "pandas.DataFrame.from_dict",
   "str",
   "type",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.tasks.functions._create_task_from_xml": {
  "lineno": 385,
  "symbols_in_volume": [
   "NotImplementedError",
   "TaskType",
   "TaskType.CLUSTERING.get",
   "TaskType.LEARNING_CURVE",
   "TaskType.LEARNING_CURVE.get",
   "TaskType.SUPERVISED_CLASSIFICATION",
   "TaskType.SUPERVISED_CLASSIFICATION.get",
   "TaskType.SUPERVISED_REGRESSION",
   "TaskType.SUPERVISED_REGRESSION.get",
   "cls",
   "dict",
   "int",
   "isinstance",
   "list",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.tasks.functions._get_cached_task": {
  "lineno": 56,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "OpenMLCacheException",
   "_create_task_from_xml",
   "int",
   "io.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.tasks.functions._get_cached_tasks": {
  "lineno": 30,
  "symbols_in_volume": [
   "_get_cached_task",
   "collections.OrderedDict",
   "int",
   "os.listdir",
   "re.match"
  ],
  "type": "function"
 },
 "openml.tasks.functions._get_estimation_procedure_list": {
  "lineno": 78,
  "symbols_in_volume": [
   "TaskType",
   "ValueError",
   "int",
   "str",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.tasks.functions._get_task_description": {
  "lineno": 370,
  "symbols_in_volume": [
   "OpenMLCacheException",
   "_create_task_from_xml",
   "_get_cached_task",
   "io.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.tasks.functions._list_tasks": {
  "lineno": 190,
  "symbols_in_volume": [
   "__list_tasks",
   "int",
   "str"
  ],
  "type": "function"
 },
 "openml.tasks.functions.create_task": {
  "lineno": 461,
  "symbols_in_volume": [
   "NotImplementedError",
   "TaskType",
   "TaskType.CLUSTERING.get",
   "TaskType.LEARNING_CURVE.get",
   "TaskType.SUPERVISED_CLASSIFICATION.get",
   "TaskType.SUPERVISED_REGRESSION.get",
   "int",
   "str",
   "task_cls",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.tasks.functions.get_task": {
  "lineno": 322,
  "symbols_in_volume": [
   "Exception",
   "TypeError",
   "ValueError",
   "_get_task_description",
   "bool",
   "get_dataset",
   "int",
   "isinstance"
  ],
  "type": "function"
 },
 "openml.tasks.functions.get_tasks": {
  "lineno": 300,
  "symbols_in_volume": [
   "get_task"
  ],
  "type": "function"
 },
 "openml.tasks.functions.list_tasks": {
  "lineno": 121,
  "symbols_in_volume": [
   "TaskType",
   "ValueError",
   "int",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.tasks.split": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "openml.tasks.split.OpenMLSplit": {
  "lineno": 14,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "openml.tasks.split.OpenMLSplit.__eq__": {
  "lineno": 44,
  "symbols_in_volume": [
   "any",
   "numpy.all",
   "type"
  ],
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "ValueError",
   "any",
   "collections.OrderedDict",
   "dict",
   "int",
   "len",
   "range"
  ],
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit._from_arff_file": {
  "lineno": 73,
  "symbols_in_volume": [
   "FileNotFoundError",
   "Split",
   "ValueError",
   "arff.DENSE_GEN",
   "arff.load",
   "classmethod",
   "cls",
   "collections.OrderedDict",
   "int",
   "numpy.array",
   "numpy.int32",
   "open",
   "os.path.exists",
   "pickle.dump",
   "pickle.load",
   "str"
  ],
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit.from_dataset": {
  "lineno": 141,
  "symbols_in_volume": [
   "NotImplementedError"
  ],
  "type": "function"
 },
 "openml.tasks.split.OpenMLSplit.get": {
  "lineno": 144,
  "symbols_in_volume": [
   "ValueError",
   "str"
  ],
  "type": "function"
 },
 "openml.tasks.task": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "openml.tasks.task.OpenMLClassificationTask": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.tasks.task.OpenMLClassificationTask.__init__": {
  "lineno": 304,
  "symbols_in_volume": [
   "NotImplementedError",
   "int",
   "numpy.ndarray",
   "str",
   "super",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLClusteringTask": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.tasks.task.OpenMLClusteringTask.__init__": {
  "lineno": 384,
  "symbols_in_volume": [
   "int",
   "str",
   "super",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLClusteringTask._to_dict": {
  "lineno": 431,
  "symbols_in_volume": [
   "super"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLClusteringTask.get_X": {
  "lineno": 411,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLLearningCurveTask": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.tasks.task.OpenMLLearningCurveTask.__init__": {
  "lineno": 458,
  "symbols_in_volume": [
   "int",
   "numpy.ndarray",
   "str",
   "super",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLRegressionTask": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "class"
 },
 "openml.tasks.task.OpenMLRegressionTask.__init__": {
  "lineno": 345,
  "symbols_in_volume": [
   "int",
   "str",
   "super",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask": {
  "lineno": 199,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "openml.tasks.task.OpenMLSupervisedTask.__init__": {
  "lineno": 210,
  "symbols_in_volume": [
   "int",
   "str",
   "super",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask._to_dict": {
  "lineno": 265,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "super"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask.estimation_parameters": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.tasks.task.OpenMLSupervisedTask.get_X_and_y": {
  "lineno": 237,
  "symbols_in_volume": [
   "NotImplementedError",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask": {
  "lineno": 34,
  "symbols_in_volume": [
   "openml.base.OpenMLBase"
  ],
  "type": "class"
 },
 "openml.tasks.task.OpenMLTask.__init__": {
  "lineno": 49,
  "symbols_in_volume": [
   "dict",
   "int",
   "str",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._download_split": {
  "lineno": 133,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "io.open",
   "str"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._entity_letter": {
  "lineno": 76,
  "symbols_in_volume": [
   "classmethod",
   "str"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._get_repr_body_fields": {
  "lineno": 84,
  "symbols_in_volume": [
   "getattr",
   "hasattr",
   "int",
   "len",
   "str",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._parse_publish_response": {
  "lineno": 194,
  "symbols_in_volume": [
   "int",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask._to_dict": {
  "lineno": 166,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "str"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.download_split": {
  "lineno": 143,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "_create_cache_directory_for_id",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.get_dataset": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.get_split_dimensions": {
  "lineno": 159,
  "symbols_in_volume": [
   "int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.get_train_test_split_indices": {
  "lineno": 122,
  "symbols_in_volume": [
   "int",
   "numpy.ndarray",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "openml.tasks.task.OpenMLTask.id": {
  "lineno": 80,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "openml.tasks.task.TaskType": {
  "lineno": 22,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "openml.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "openml.testing.CustomImputer": {
  "lineno": 261,
  "symbols_in_volume": [
   "sklearn.preprocessing.Imputer"
  ],
  "type": "class"
 },
 "openml.testing.TestBase": {
  "lineno": 25,
  "symbols_in_volume": [
   "logging.DEBUG",
   "logging.getLogger",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "openml.testing.TestBase._add_sentinel_to_flow_name": {
  "lineno": 175,
  "symbols_in_volume": [
   "len",
   "list"
  ],
  "type": "function"
 },
 "openml.testing.TestBase._check_dataset": {
  "lineno": 187,
  "symbols_in_volume": [
   "dict",
   "int",
   "len",
   "str",
   "type"
  ],
  "type": "function"
 },
 "openml.testing.TestBase._check_fold_timing_evaluations": {
  "lineno": 196,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "int",
   "len",
   "openml.tasks.TaskType",
   "openml.tasks.TaskType.LEARNING_CURVE",
   "openml.tasks.TaskType.SUPERVISED_CLASSIFICATION",
   "openml.tasks.TaskType.SUPERVISED_REGRESSION",
   "range",
   "set",
   "sys.version_info",
   "typing.Dict"
  ],
  "type": "function"
 },
 "openml.testing.TestBase._delete_entity_from_tracker": {
  "lineno": 139,
  "symbols_in_volume": [
   "classmethod",
   "enumerate",
   "list",
   "set"
  ],
  "type": "function"
 },
 "openml.testing.TestBase._get_sentinel": {
  "lineno": 163,
  "symbols_in_volume": [
   "hashlib.md5",
   "os.getpid",
   "str",
   "time.time"
  ],
  "type": "function"
 },
 "openml.testing.TestBase._mark_entity_for_removal": {
  "lineno": 125,
  "symbols_in_volume": [
   "classmethod"
  ],
  "type": "function"
 },
 "openml.testing.TestBase.setUp": {
  "lineno": 50,
  "symbols_in_volume": [
   "ValueError",
   "inspect.getfile",
   "int",
   "open",
   "openml.config.apikey",
   "openml.config.avoid_duplicate_runs",
   "openml.config.cache_directory",
   "openml.config.config_file",
   "openml.config.connection_n_retries",
   "openml.config.server",
   "os.chdir",
   "os.environ.get",
   "os.getcwd",
   "os.listdir",
   "os.mkdir",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "oslo_concurrency.lockutils.external_lock",
   "range",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "openml.testing.TestBase.tearDown": {
  "lineno": 112,
  "symbols_in_volume": [
   "PermissionError",
   "openml.config.connection_n_retries",
   "openml.config.server",
   "os.chdir",
   "os.name",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "openml.testing.cat": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.testing.cont": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "openml.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "typing.TYPE_CHECKING",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "openml.utils._create_cache_directory": {
  "lineno": 275,
  "symbols_in_volume": [
   "OSError",
   "os.makedirs",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.utils._create_cache_directory_for_id": {
  "lineno": 285,
  "symbols_in_volume": [
   "ValueError",
   "_create_cache_directory",
   "os.makedirs",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "str"
  ],
  "type": "function"
 },
 "openml.utils._create_lockfiles_dir": {
  "lineno": 363,
  "symbols_in_volume": [
   "OSError",
   "dir",
   "os.makedirs",
   "os.path.join"
  ],
  "type": "function"
 },
 "openml.utils._delete_entity": {
  "lineno": 142,
  "symbols_in_volume": [
   "ValueError",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.utils._get_rest_api_type_alias": {
  "lineno": 72,
  "symbols_in_volume": [
   "isinstance",
   "str"
  ],
  "type": "function"
 },
 "openml.utils._list_all": {
  "lineno": 182,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "len",
   "listing_call",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "openml.utils._remove_cache_dir_for_id": {
  "lineno": 316,
  "symbols_in_volume": [
   "IOError",
   "OSError",
   "ValueError",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "openml.utils._tag_entity": {
  "lineno": 94,
  "symbols_in_volume": [
   "ValueError",
   "xmltodict.parse"
  ],
  "type": "function"
 },
 "openml.utils._tag_openml_base": {
  "lineno": 89,
  "symbols_in_volume": [
   "_get_rest_api_type_alias",
   "_tag_entity",
   "bool",
   "str"
  ],
  "type": "function"
 },
 "openml.utils.extract_xml_tags": {
  "lineno": 34,
  "symbols_in_volume": [
   "ValueError",
   "dict",
   "isinstance",
   "list",
   "str"
  ],
  "type": "function"
 },
 "openml.utils.thread_safe_if_oslo_installed": {
  "lineno": 336,
  "symbols_in_volume": [
   "func"
  ],
  "type": "function"
 },
 "openml.utils.thread_safe_if_oslo_installed.safe_func": {
  "lineno": 339,
  "symbols_in_volume": [
   "RuntimeError",
   "_create_lockfiles_dir",
   "func",
   "functools.wraps",
   "len",
   "oslo_concurrency.lockutils.external_lock"
  ],
  "type": "function"
 }
}