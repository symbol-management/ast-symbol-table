{
 "pyarrow.tests": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.arrow_7980": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.arrow_7980.cases",
    "pyarrow.timestamp",
    "str"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.arrow_7980.cases": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyarrow.tests.arrow_7980.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hypothesis.Verbosity.verbose",
    "hypothesis.settings.load_profile",
    "hypothesis.settings.register_profile",
    "pyarrow.tests.conftest.defaults",
    "pyarrow.tests.conftest.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.conftest.HadoopFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.HadoopFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.PyArrowConfig": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "pyarrow.tests.conftest.PyArrowConfig.__init__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.PyArrowConfig.apply_mark": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.PyArrowConfig.requires": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.S3FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.S3FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.TemporaryDirectory": {
  "data": {
   "shadows": "tempfile.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.datadir": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.pathlib",
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.defaults": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.fastparquet": {
  "data": {
   "shadows": "fastparquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.find_free_port": {
  "data": {
   "shadows": "pyarrow.util.find_free_port"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.groups": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.hdfs_connection": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "int",
    "pyarrow.tests.conftest.os",
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.dataset": {
  "data": {
   "shadows": "pyarrow.dataset"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.flight": {
  "data": {
   "shadows": "pyarrow.flight"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.gandiva": {
  "data": {
   "shadows": "pyarrow.gandiva"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.orc": {
  "data": {
   "shadows": "pyarrow.orc"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.parquet": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "bool_env",
    "pyarrow.tests.conftest.defaults",
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_addoption.bool_env": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.conftest.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.PyArrowConfig",
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.s3_connection": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.pytest",
    "pyarrow.util.find_free_port"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.s3_server": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "OSError",
    "pyarrow.tests.conftest.os",
    "pyarrow.tests.conftest.pytest",
    "pyarrow.tests.conftest.s3_connection",
    "pyarrow.tests.conftest.subprocess",
    "pyarrow.tests.conftest.tempdir",
    "tempfile.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.tempdir": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.pathlib",
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer": {
  "data": {
   "symbols_in_volume": [
    "open",
    "pyarrow.deserialize",
    "pyarrow.tests.deserialize_buffer.data",
    "pyarrow.tests.deserialize_buffer.sys"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.deserialize_buffer.data": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.deserialize_buffer.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datetime.date",
    "datetime.time",
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies": {
  "data": {
   "symbols_in_volume": [
    "hypothesis.extra.pytz.timezones",
    "hypothesis.strategies.builds",
    "hypothesis.strategies.characters",
    "hypothesis.strategies.dictionaries",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.sampled_from",
    "hypothesis.strategies.text",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.duration",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.tests.strategies.all_types",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.strategies.binary_type",
    "pyarrow.tests.strategies.bool_type",
    "pyarrow.tests.strategies.chunked_arrays",
    "pyarrow.tests.strategies.complex_types",
    "pyarrow.tests.strategies.date_types",
    "pyarrow.tests.strategies.decimal_type",
    "pyarrow.tests.strategies.duration_types",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.floating_types",
    "pyarrow.tests.strategies.integer_types",
    "pyarrow.tests.strategies.large_binary_type",
    "pyarrow.tests.strategies.large_string_type",
    "pyarrow.tests.strategies.nested_complex_types",
    "pyarrow.tests.strategies.null_type",
    "pyarrow.tests.strategies.numeric_types",
    "pyarrow.tests.strategies.primitive_types",
    "pyarrow.tests.strategies.record_batches",
    "pyarrow.tests.strategies.schemas",
    "pyarrow.tests.strategies.signed_integer_types",
    "pyarrow.tests.strategies.string_type",
    "pyarrow.tests.strategies.tables",
    "pyarrow.tests.strategies.temporal_types",
    "pyarrow.tests.strategies.time_types",
    "pyarrow.tests.strategies.timestamp_types",
    "pyarrow.tests.strategies.unsigned_integer_types",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.strategies._default_array_sizes": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_arrays": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_chunked_arrays": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_fields": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_record_batches": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_schemas": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_tables": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_types": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.arrays": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "draw",
    "hypothesis.assume",
    "hypothesis.extra.numpy.arrays",
    "hypothesis.reject",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.binary",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.dates",
    "hypothesis.strategies.datetimes",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.none",
    "hypothesis.strategies.text",
    "hypothesis.strategies.timedeltas",
    "hypothesis.strategies.times",
    "int",
    "isinstance",
    "len",
    "numpy.insert",
    "numpy.isnan",
    "numpy.uint8",
    "pyarrow.DataType",
    "pyarrow.LargeListArray",
    "pyarrow.ListArray",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.strategies._default_array_sizes",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.pytz",
    "pyarrow.types.is_binary",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_date",
    "pyarrow.types.is_decimal",
    "pyarrow.types.is_duration",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_large_binary",
    "pyarrow.types.is_large_list",
    "pyarrow.types.is_large_string",
    "pyarrow.types.is_list",
    "pyarrow.types.is_null",
    "pyarrow.types.is_string",
    "pyarrow.types.is_struct",
    "pyarrow.types.is_time",
    "pyarrow.types.is_timestamp",
    "type",
    "type.to_pandas_dtype",
    "type.tz",
    "type.value_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.binary_type": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.bool_type": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.chunked_arrays": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "draw",
    "hypothesis.assume",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.lists",
    "isinstance",
    "pyarrow.chunked_array",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.types.is_struct",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.complex_schemas": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.complex_types": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyarrow.tests.strategies.list_types",
    "pyarrow.tests.strategies.primitive_types",
    "pyarrow.tests.strategies.struct_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.custom_text": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.date_types": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.decimal_type": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.duration_types": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.fields": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.builds",
    "pyarrow.field",
    "pyarrow.tests.strategies.custom_text",
    "pyarrow.tests.strategies.metadata",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.floating_types": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.integer_types": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.large_binary_type": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.large_string_type": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.list_types": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "hypothesis.strategies.builds",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.metadata": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.nested_complex_types": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "hypothesis.strategies.recursive",
    "pyarrow.tests.strategies.complex_types",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_list_types": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "hypothesis.strategies.recursive",
    "pyarrow.tests.strategies.list_types",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_struct_types": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "hypothesis.strategies.recursive",
    "pyarrow.tests.strategies.primitive_types",
    "pyarrow.tests.strategies.struct_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.npst": {
  "data": {
   "shadows": "hypothesis.extra.numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.null_type": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.numeric_types": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.primitive_types": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.record_batches": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "TypeError",
    "draw",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.composite",
    "int",
    "isinstance",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.tests.strategies._default_array_sizes",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.strategies.schemas",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.schemas": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "hypothesis.strategies.builds",
    "hypothesis.strategies.lists",
    "pyarrow.schema",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.signed_integer_types": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.string_type": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.struct_types": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "hypothesis.strategies.builds",
    "hypothesis.strategies.lists",
    "pyarrow.struct",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.tables": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "draw",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.composite",
    "int",
    "isinstance",
    "pyarrow.Table.from_arrays",
    "pyarrow.tests.strategies._default_array_sizes",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.strategies.schemas",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.temporal_types": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.time_types": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.timestamp_types": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.tzst": {
  "data": {
   "shadows": "hypothesis.extra.pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.unsigned_integer_types": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyarrow.tests.test_adhoc_memory_leak": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_adhoc_memory_leak.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_deserialize_pandas_arrow_7956": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.rands",
    "pyarrow.tests.test_adhoc_memory_leak.pytest",
    "pyarrow.tests.util.memory_leak_check",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_deserialize_pandas_arrow_7956.action": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.ipc.deserialize_pandas",
    "pyarrow.ipc.serialize_pandas",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_array.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle5": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pickle_test_parametrize": {
  "data": {
   "lineno": 1620
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.test_array_conversions_no_sentinel_values": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_diff": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_eq": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "MyObject",
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type.MyObject": {
  "data": {
   "lineno": 471
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_from_buffers": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "TypeError",
    "numpy.int16",
    "numpy.uint8",
    "pyarrow.Array.from_buffers",
    "pyarrow.int16",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_dictionary_scalar": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.repeat"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_different_numpy_datetime_units_raises": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_invalid_dim_raises": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_large_pyints": {
  "data": {
   "lineno": 2519,
   "symbols_in_volume": [
    "OverflowError",
    "int",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_list_of_timestamps": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_masked": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ma.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_ascii": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetime": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetimeD": {
  "data": {
   "lineno": 1812,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_str_utf8": {
  "data": {
   "lineno": 2420,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.array",
    "object",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_timedelta": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "pyarrow.DurationArray",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_timedelta_incorrect_unit": {
  "data": {
   "lineno": 1909,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "numpy.timedelta64",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_unicode": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_scalar": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.null",
    "pyarrow.nulls",
    "pyarrow.repeat",
    "pyarrow.scalar",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_shrunken_masked": {
  "data": {
   "lineno": 2016,
   "symbols_in_volume": [
    "numpy.ma.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_strided_bool": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_timestamp_with_generic_unit": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_getitem": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_iter": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "isinstance",
    "pyarrow.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_masked": {
  "data": {
   "lineno": 2507,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle": {
  "data": {
   "lineno": 1637,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.pickle",
    "pyarrow.tests.test_array.pickle_test_parametrize",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle5": {
  "data": {
   "lineno": 1668,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.pickle",
    "pyarrow.tests.test_array.pickle5",
    "pyarrow.tests.test_array.pickle_test_parametrize",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle_dictionary": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.tests.test_array.pickle",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "MyArray",
    "MyArray2",
    "MyArrayInvalid",
    "TypeError",
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray": {
  "data": {
   "lineno": 2528
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__arrow_array__": {
  "data": {
   "lineno": 2532,
   "symbols_in_volume": [
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__init__": {
  "data": {
   "lineno": 2529
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2": {
  "data": {
   "lineno": 2565
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2.__arrow_array__": {
  "data": {
   "lineno": 2569,
   "symbols_in_volume": [
    "pyarrow.chunked_array",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2.__init__": {
  "data": {
   "lineno": 2566
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid": {
  "data": {
   "lineno": 2553
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__arrow_array__": {
  "data": {
   "lineno": 2557,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__init__": {
  "data": {
   "lineno": 2554
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_ref_to_ndarray_base": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice_negative_step": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "numpy.arange",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.record_batch",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_all_null": {
  "data": {
   "lineno": 1991,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.nan",
    "object",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_non_string": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_uint64_from_py_over_range": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_asarray": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dtype",
    "numpy.isnan",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.lib.Int64Value",
    "pyarrow.tests.test_array.pytest",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_format": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "_check_case"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels._check_case": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_total_values_length": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_boolean_true_count_false_count": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_nested": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.struct",
    "pyarrow.tests.test_array.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_primitive": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "numpy.int8",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.tests.test_array.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_binary_to_utf8": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array_empty": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "pyarrow.chunked_array",
    "pyarrow.dictionary",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date32_to_int": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date64_to_int": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_dictionary": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_duration_to_int": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.duration"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_from_null": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.decimal128",
    "pyarrow.dictionary",
    "pyarrow.duration",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp",
    "pyarrow.uint8",
    "pyarrow.union",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_identities": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.uint16",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.int16",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.uint16"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_list_to_primitive": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_none": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.uint16",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_string_to_number_roundtrip": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int8",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time32_to_int": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.time32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time64_to_int": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_to_int": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_chunked_array_data_warns": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array": {
  "data": {
   "lineno": 2578,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.concat_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array_different_types": {
  "data": {
   "lineno": 2584,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.concat_arrays",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_constructor_raises": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_date64_from_builtin_datetime": {
  "data": {
   "lineno": 1587,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_decimal": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_array.decimal",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_non_integer": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.decimal128",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.decimal",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_safe": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "pyarrow.decimal128",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_value_out_of_bounds": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.decimal128",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.decimal",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_simple": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.large_binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_sliced": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.large_string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_zero_length": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_arrays_boundscheck": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "pyarrow.ArrowException",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_indices": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_empty_cast": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.lib.ArrowNotImplementedError",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.tests.test_array.itertools",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_fixed_size_list_array_flatten": {
  "data": {
   "lineno": 2270,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_fixed_size_list_from_arrays": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.FixedSizeListArray.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_safe": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_unsafe": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NULL": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Int64Scalar",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_infer_type_masked": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.infer_type",
    "pyarrow.null",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_construction": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Tensor",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_constructor_repr": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Tensor",
    "pyarrow.tests.test_array.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten": {
  "data": {
   "lineno": 2147,
   "symbols_in_volume": [
    "list_type_factory",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten_non_canonical": {
  "data": {
   "lineno": 2231,
   "symbols_in_volume": [
    "len",
    "list_type_factory",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_values_offsets_sliced": {
  "data": {
   "lineno": 2251,
   "symbols_in_volume": [
    "pyarrow.LargeListArray",
    "pyarrow.ListArray",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_child_overflow_to_chunked": {
  "data": {
   "lineno": 2485,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "list_type_factory",
    "numpy.arange",
    "numpy.array",
    "pyarrow.LargeListArray",
    "pyarrow.ListArray",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_buffers": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "list_type_factory",
    "pyarrow.Array.from_buffers",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_value_lengths": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "list_type_factory",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_value_parent_indices": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "list_type_factory",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_map_from_arrays": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "pyarrow.MapArray.from_arrays",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.int32",
    "pyarrow.map_",
    "pyarrow.tests.test_array.pytest",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nbytes_sizeof": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "numpy.array",
    "object.__sizeof__",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nested_dictionary_array": {
  "data": {
   "lineno": 2410,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.ListArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nulls": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int8",
    "pyarrow.null",
    "pyarrow.nulls",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_numpy_binary_overflow_to_chunked": {
  "data": {
   "lineno": 2446,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.utf8",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_index": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "numpy.nan",
    "object",
    "pandas.Index",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_raise_error": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.duration",
    "pyarrow.tests.test_array.decimal",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pickling": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "pyarrow.tests.strategies.all_types",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.test_array.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_safe_cast_nan_to_int_raises": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_slice_chunked_array_zero_chunks": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_binary_from_buffers": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "len",
    "pyarrow.Array.from_buffers",
    "pyarrow.StringArray.from_buffers",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_field": {
  "data": {
   "lineno": 2345,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "isinstance",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.lib.FloatArray",
    "pyarrow.lib.Int16Array",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_flatten": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_slice": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_arrays": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_buffers": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Array.from_buffers",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_time32_time64_from_integer": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_datetime64": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_dictionary": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_roundtrip": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_timedelta64": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_unsupported_types": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_writable": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_zero_copy": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_timezone": {
  "data": {
   "lineno": 2589,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_slice": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "len",
    "pyarrow.UnionArray.from_dense",
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array",
    "pyarrow.int8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_to_pylist_with_nulls": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "pyarrow.UnionArray.from_dense",
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "check_result",
    "pyarrow.ArrowInvalid",
    "pyarrow.UnionArray.from_dense",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense.check_result": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "check_result",
    "pyarrow.ArrowInvalid",
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse.check_result": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.ArrowTypeError",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_simple": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.large_binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_value_counts_dictionary_type": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_value_counts_simple": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.large_binary",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_view": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_builder.StringBuilder": {
  "data": {
   "shadows": "pyarrow.lib.StringBuilder"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.test_string_builder_append": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.nan",
    "pyarrow.Array",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_after_finish": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "pyarrow.cffi.ffi",
    "pyarrow.tests.test_cffi.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cffi.assert_array_released": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.assert_schema_released": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.ffi": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.needs_cffi": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.test_export_import_array": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "pyarrow.Array._import_from_c",
    "pyarrow.array",
    "pyarrow.cffi.ffi.cast",
    "pyarrow.cffi.ffi.new",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.tests.test_cffi.assert_array_released",
    "pyarrow.tests.test_cffi.assert_schema_released",
    "pyarrow.tests.test_cffi.gc",
    "pyarrow.tests.test_cffi.needs_cffi",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "make_batch",
    "make_schema",
    "print",
    "pyarrow.RecordBatch._import_from_c",
    "pyarrow.cffi.ffi.cast",
    "pyarrow.cffi.ffi.new",
    "pyarrow.int32",
    "pyarrow.tests.test_cffi.assert_array_released",
    "pyarrow.tests.test_cffi.assert_schema_released",
    "pyarrow.tests.test_cffi.gc",
    "pyarrow.tests.test_cffi.needs_cffi",
    "pyarrow.tests.test_cffi.pytest",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch.make_batch": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "make_schema",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch.make_schema": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_schema": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "make_schema",
    "pyarrow.Schema._import_from_c",
    "pyarrow.cffi.ffi.cast",
    "pyarrow.cffi.ffi.new",
    "pyarrow.int32",
    "pyarrow.tests.test_cffi.assert_schema_released",
    "pyarrow.tests.test_cffi.gc",
    "pyarrow.tests.test_cffi.needs_cffi",
    "pyarrow.tests.test_cffi.pytest",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_schema.make_schema": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_type": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyarrow.DataType._import_from_c",
    "pyarrow.cffi.ffi.cast",
    "pyarrow.cffi.ffi.new",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.tests.test_cffi.assert_schema_released",
    "pyarrow.tests.test_cffi.gc",
    "pyarrow.tests.test_cffi.needs_cffi",
    "pyarrow.tests.test_cffi.pytest",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "numpy.arange",
    "pyarrow.binary",
    "pyarrow.compute.__dict__.items",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.struct",
    "pyarrow.tests.test_compute.digit_info_missing",
    "pyarrow.tests.test_compute.numeric_info_missing",
    "pyarrow.tests.test_compute.unknown_issue_is_alpha",
    "pyarrow.tests.test_compute.utf8proc_issue_is_lower",
    "pyarrow.uint16",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "sorted"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_compute.all_array_types": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.codepoints_ignore": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.digit_info_missing": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.exported_functions": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.find_new_unicode_codepoints": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "chr",
    "enumerate",
    "functools.lru_cache",
    "ord",
    "pyarrow.array",
    "pyarrow.compute.utf8_is_printable",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.numeric_info_missing": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.numerical_arrow_types": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pc": {
  "data": {
   "shadows": "pyarrow.compute"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.test_arithmetic_add": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.compute.add"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_multiply": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.compute.multiply"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_subtract": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.compute.subtract"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_call_function_with_memory_pool": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.compute.call_function",
    "pyarrow.default_memory_pool"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_array": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "con",
    "pyarrow.compute.equal",
    "pyarrow.compute.greater",
    "pyarrow.compute.greater_equal",
    "pyarrow.compute.less",
    "pyarrow.compute.less_equal",
    "pyarrow.compute.not_equal",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_array.con": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_chunked_array_mixed": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.compute.equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_scalar": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "con",
    "pyarrow.array",
    "pyarrow.compute.equal",
    "pyarrow.compute.greater",
    "pyarrow.compute.greater_equal",
    "pyarrow.compute.less",
    "pyarrow.compute.less_equal",
    "pyarrow.compute.not_equal",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_scalar.con": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_exported_functions": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "len",
    "pyarrow.tests.test_compute.exported_functions",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.int8",
    "pyarrow.null",
    "pyarrow.scalar",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null_array": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyarrow.array",
    "pyarrow.scalar",
    "pyarrow.tests.test_compute.numerical_arrow_types",
    "pyarrow.tests.test_compute.pytest",
    "pyarrow.types.is_unsigned_integer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null_chunked_array": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.scalar",
    "pyarrow.tests.test_compute.numerical_arrow_types",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_compute.all_array_types",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_chunked_array": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_errors": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.record_batch",
    "pyarrow.table",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_record_batch": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_table": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_is_null": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.compute.is_null",
    "pyarrow.compute.is_valid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_match_substring": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.compute.match_substring"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_string_py_compat_boolean": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ascii",
    "chr",
    "getattr",
    "hasattr",
    "pyarrow.array",
    "pyarrow.compute",
    "pyarrow.tests.test_compute.codepoints_ignore",
    "pyarrow.tests.test_compute.find_new_unicode_codepoints",
    "pyarrow.tests.test_compute.pytest",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum_array": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.compute.sum",
    "pyarrow.tests.test_compute.numerical_arrow_types",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum_chunked_array": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.compute.sum",
    "pyarrow.tests.test_compute.numerical_arrow_types",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_compute.all_array_types",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_dictionary": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_indices_types": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.tests.test_compute.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_on_chunked_array": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.unknown_issue_is_alpha": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.utf8proc_issue_is_lower": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin": {
  "data": {
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_convert_builtin._as_deque",
    "pyarrow.tests.test_convert_builtin._as_dict_values",
    "pyarrow.tests.test_convert_builtin._as_list",
    "pyarrow.tests.test_convert_builtin._as_numpy_array",
    "pyarrow.tests.test_convert_builtin._as_tuple",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "zip"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt.__int__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyDate": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyDatetime": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__int__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyTimedelta": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_deque": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.collections"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_dict_values": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_list": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_numpy_array": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_tuple": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.check_struct_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyarrow.types.is_struct",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.int_type_pairs": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.test_array_ignore_nan_from_pandas": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_array_mixed_unicode_bytes": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_broken_integers": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.MyBrokenInt",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.tests.test_convert_builtin.traceback",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_convert_with_mask": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_date32_overflow": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "OverflowError",
    "pyarrow.ArrowException",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.duration",
    "pyarrow.tests.test_convert_builtin.MyDate",
    "pyarrow.tests.test_convert_builtin.MyDatetime",
    "pyarrow.tests.test_convert_builtin.MyTimedelta",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_decimal_array_with_none_and_nan": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_auto_coerce_from_integer": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_integer_coerce_representable_range": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_iterable": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.StrangeIterable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_list": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_range": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_float32_integer_coerce_representable_range": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "f32",
    "numpy.float32",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_garbage_collection": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.gc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_infinite_iterator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.itertools"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterable_types": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.StrangeIterable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterator_without_size": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_array": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.tests.test_convert_builtin.math",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_value": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.tests.test_convert_builtin.math",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_overflow": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_underflow": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_types": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_list_with_non_list": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_map_from_dicts": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.int32",
    "pyarrow.map_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_map_from_tuples": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.int32",
    "pyarrow.map_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_mixed_sequence_errors": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.float32",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_multidimensional_ndarray_as_nested_list": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.int64",
    "pyarrow.array",
    "pyarrow.infer_type",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_ndarray_nested_numpy_double": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "inner_seq",
    "len",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_arrays": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int64",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_fixed_size_list": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_large_lists": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.large_list",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_lists": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_different_dtypes": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_in_object_array": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.int64",
    "object",
    "pyarrow.array",
    "pyarrow.infer_type",
    "pyarrow.int64",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_numpy_scalars_mixed_type": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_range_types": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_all_none": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_boolean": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_bytes": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "memoryview",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.large_binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_custom_integers": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "list",
    "map",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.MyInt",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_different_precisions": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_from_integers": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_large_integer": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_negative": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_scale": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_whole_part": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_too_high_precision": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.decimal",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_double": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.timedelta64",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_from_int_with_unit": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_nested_lists": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_nested_lists_numpy": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.timedelta64",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_with_unit": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_explicit_types": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "input",
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_fixed_size_bytes": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_inferred": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_nested_np_nan": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_np_nan": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_fails": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_with_specified_type_fails": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_nesting_levels": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_boolean": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_double": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.isnan",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer_inferred": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_timestamp": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "len",
    "numpy.datetime64",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "CustomClass",
    "TypeError",
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.timestamp",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit.CustomClass": {
  "data": {
   "lineno": 1002
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_nanoseconds": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.pandas_compat._pandas_api.have_pandas",
    "pyarrow.tests.test_convert_builtin.MyDatetime",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_unit": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_types": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_unicode": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_utf8_to_unicode": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.large_string",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_signed_integer_overflow": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "OverflowError",
    "getattr",
    "pyarrow",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_bytes_keys": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_inference": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object",
    "pyarrow.ArrowInvalid",
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.check_struct_type",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_mixed_sequence": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_tuples": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.empty",
    "object",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.int64",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray_from_arrays_coerce": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_timezone_string": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "pyarrow.lib.string_to_tzinfo",
    "pyarrow.lib.tzinfo_to_string",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.tests.test_convert_builtin.pytz"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_uint64_max_convert": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.array",
    "numpy.iinfo",
    "numpy.uint64",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_unsigned_integer_overflow": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "OverflowError",
    "getattr",
    "pyarrow",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.check_names": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.read_bytes": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_auto_dict_encode": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "len",
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.dictionary",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_bom": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "decimal.Decimal",
    "pyarrow.ArrowInvalid",
    "pyarrow.bool_",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.decimal128",
    "pyarrow.float32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types_with_column_names": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ReadOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_bools": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_nulls": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "pyarrow.csv.ConvertOptions",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_empty_lines": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pyarrow.csv.ParseOptions",
    "pyarrow.csv.ReadOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_file_object": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.tests.test_csv.io",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_autogenerate_column_names": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_column_names": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_skip_rows": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_columns": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_missing_columns": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ReadOptions",
    "pyarrow.int32",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_invalid_csv": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_no_ending_newline": {
  "data": {
   "lineno": 702
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_one_chunk": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_options_delimiter": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "pyarrow.csv.ParseOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_ints": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_nulls": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_timestamps": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "datetime.datetime",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_varied": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_small_random_csv": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.make_random_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_block_sizes": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.make_random_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_convert_options_blowup": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "AttributeError",
    "clock",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.string",
    "pyarrow.tests.test_csv.make_empty_csv",
    "pyarrow.tests.test_csv.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_timestamp_parsers": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "datetime.datetime",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ISO8601",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_trivial": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead": {
  "data": {
   "lineno": 1133
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.read_csv": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.csv.read_csv",
    "pyarrow.tests.test_csv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.setUp": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.tearDown": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.shutil"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.test_random_csv": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.make_random_csv",
    "pyarrow.tests.test_csv.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead": {
  "data": {
   "lineno": 831
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.check_reader": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.open_bytes": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_column_options": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ReadOptions",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_empty_file": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_encoding": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.csv.ReadOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_file_object": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_csv.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_header": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "pyarrow.null",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_inference": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "len",
    "pyarrow.binary",
    "pyarrow.csv.ReadOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_inference_failure": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "len",
    "pyarrow.csv.ReadOptions",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_invalid_csv": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "StopIteration",
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_no_ending_newline": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_options_delimiter": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "pyarrow.csv.ParseOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_small_random_csv": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.make_random_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_stress_block_sizes": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.make_random_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.ConvertOptions": {
  "data": {
   "shadows": "pyarrow.csv.ConvertOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ISO8601": {
  "data": {
   "shadows": "pyarrow.csv.ISO8601"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ParseOptions": {
  "data": {
   "shadows": "pyarrow.csv.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ReadOptions": {
  "data": {
   "shadows": "pyarrow.csv.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCompressedCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead.write_file": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.bz2"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCompressedCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.test_concatenated": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.gzip",
    "pyarrow.tests.test_csv.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.write_file": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.gzip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead.read_csv": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.csv.read_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead.read_csv": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.csv.read_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestStreamingCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.open_csv": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.csv.open_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.test_batch_lifetime": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "StopIteration",
    "check_one_batch",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.gc",
    "pyarrow.tests.test_csv.pytest",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.test_batch_lifetime.check_one_batch": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.check_options_class": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AttributeError",
    "cls",
    "getattr",
    "pyarrow.tests.test_csv.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.check_options_class_pickling": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "cls",
    "getattr",
    "pyarrow.tests.test_csv.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.generate_col_names": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.make_empty_csv": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.make_random_csv": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.random.RandomState",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_csv.generate_col_names",
    "pyarrow.tests.test_csv.io",
    "pyarrow.tests.test_csv.itertools",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.open_csv": {
  "data": {
   "shadows": "pyarrow.csv.open_csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.read_csv": {
  "data": {
   "shadows": "pyarrow.csv.read_csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.test_convert_options": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "isinstance",
    "list",
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ISO8601",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.check_options_class",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_parse_options": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "cls",
    "pyarrow.csv.ParseOptions",
    "pyarrow.tests.test_csv.check_options_class",
    "pyarrow.tests.test_csv.check_options_class_pickling"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_csv_does_not_close_passed_file_handles": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "pyarrow.csv.read_csv",
    "pyarrow.tests.test_csv.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_options": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "cls",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.check_options_class"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.has_ipc_support",
    "pyarrow.tests.test_cuda.platform",
    "pyarrow.tests.test_cuda.pytest",
    "pyarrow.tests.test_cuda.sysconfig"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cuda.cuda": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.cuda_ipc": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.global_context": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.global_context1": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.has_ipc_support": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.make_random_buffer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "numpy.frombuffer",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_cuda.global_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_recordbatch": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.random.randint",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.record_batch",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_table": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.struct",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.other_process_for_test_IPC": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.cuda.Context",
    "pyarrow.cuda.IpcMemHandle.from_buffer",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.platform": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.setup_module": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.sysconfig": {
  "data": {
   "shadows": "sysconfig"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.teardown_module": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader_zero_size": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "allocate",
    "numpy.arange",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "test_writes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.allocate": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.test_writes": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "allocate",
    "min",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter_edge_cases": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_Context": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.global_context1",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_CudaBuffer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_HostBuffer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "TypeError",
    "numpy.frombuffer",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_IPC": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.cuda_ipc",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.multiprocessing",
    "pyarrow.tests.test_cuda.other_process_for_test_IPC",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_batch_serialize": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.RecordBatch",
    "pyarrow.ipc.read_record_batch",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_recordbatch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_allocate_del": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.global_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_device_buffer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "BufferError",
    "memoryview",
    "numpy.concatenate",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_from_object": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.ArrowTypeError",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "ValueError",
    "put",
    "pyarrow.tests.test_cuda.global_context1",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device.put": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "put",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host.put": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_to_host": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "isinstance",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.Buffer",
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_to_host": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_foreign_buffer": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.uint8",
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.pytest",
    "pyarrow.tests.test_cuda.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_manage_allocate_free_host": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_table_deserialize": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.ipc.new_stream",
    "pyarrow.ipc.open_stream",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda_numba_interop.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cuda_numba_interop.DeviceNDArray": {
  "data": {
   "shadows": "numba.cuda.cudadrv.devicearray.DeviceNDArray"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.context_choices": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.cuda": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.dtypes": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "numpy.frombuffer",
    "numpy.random.randint",
    "numpy.uint8",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.setup_module": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.random.seed",
    "pyarrow.tests.test_cuda_numba_interop.cuda",
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.teardown_module": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_context": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.cuda",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "MyObj",
    "ValueError",
    "len",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__cuda_array_interface__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_context": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_memalloc": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.dtype",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.cuda",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit.increment_by_one": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_memalloc": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cython.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cython.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.here": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.setup_template": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.test_cython_api": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "__import__",
    "open",
    "pyarrow.array",
    "pyarrow.get_library_dirs",
    "pyarrow.tests.test_cython.here",
    "pyarrow.tests.test_cython.os",
    "pyarrow.tests.test_cython.pytest",
    "pyarrow.tests.test_cython.setup_template",
    "pyarrow.tests.test_cython.shutil",
    "pyarrow.tests.test_cython.subprocess",
    "pyarrow.tests.test_cython.sys",
    "pyarrow.tests.util.get_modified_env_with_pythonpath",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas",
    "pyarrow.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_dataset.FSSpecHandler": {
  "data": {
   "shadows": "pyarrow.fs.FSSpecHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.PyFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.PyFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset._check_dataset": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._check_dataset_from_path": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.dataset.FileSystemDataset",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset._check_dataset",
    "pyarrow.tests.test_dataset.change_cwd",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_dataset_all_types": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.dataset.dataset",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "pyarrow.utf8",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_directory_of_files": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_metadata_file": {
  "data": {
   "lineno": 1966,
   "symbols_in_volume": [
    "list",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_metadata",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
  "data": {
   "lineno": 1986,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.repeat",
    "pyarrow.array",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_dataset._create_metadata_file",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_parquet_dataset_simple": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.parquet.write_metadata",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_single_file": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._filesystem_uri": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._generate_data": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "float",
    "next",
    "pandas.DataFrame",
    "pyarrow.tests.test_dataset.datetime",
    "pyarrow.tests.test_dataset.itertools",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._table_from_pandas": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.date32",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.change_cwd": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset.contextlib",
    "pyarrow.tests.test_dataset.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.dataset": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "format",
    "pyarrow.dataset.DirectoryPartitioning",
    "pyarrow.dataset.FileSystemDatasetFactory",
    "pyarrow.dataset.FileSystemFactoryOptions",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.field",
    "pyarrow.fs.FileSelector",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_dataset.mockfs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.ds": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyarrow.tests.test_dataset.fs": {
  "data": {
   "shadows": "pyarrow.fs"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.mockfs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "list",
    "map",
    "pyarrow.Table.from_batches",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.int64",
    "pyarrow.parquet.write_table",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_dataset.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.multisourcefs": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array_split",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_dataset._generate_data",
    "pyarrow.tests.test_dataset._table_from_pandas",
    "pyarrow.tests.test_dataset.mockfs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.open_logging_fs": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ProxyHandler",
    "pyarrow.fs",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_dataset.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.assert_opens": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "normalized",
    "pyarrow.tests.test_dataset.contextlib"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.normalized": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.open_input_file": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pd": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_dataset.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pyarrow.csv": {
  "data": {
   "shadows": "pyarrow.csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pytestmark": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.test_dataset.s3_example_simple": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "pyarrow.fs",
    "pyarrow.fs.FileSystem.from_uri",
    "pyarrow.fs.create_dir",
    "pyarrow.fs.open_output_stream",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_abstract_classes": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError",
    "klass",
    "pyarrow.dataset.FileFormat",
    "pyarrow.dataset.Partitioning",
    "pyarrow.dataset.Scanner",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_empty_dataset": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_invalid_sources_raise": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.dataset.FileSystemDatasetFactory",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.dataset",
    "pyarrow.fs.FileSelector",
    "pyarrow.tests.test_dataset.multisourcefs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_list_of_files": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "len",
    "map",
    "pyarrow.dataset.dataset",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_dataset._create_directory_of_files",
    "pyarrow.tests.test_dataset._filesystem_uri",
    "pyarrow.tests.test_dataset.change_cwd",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_list_of_mixed_paths_fails": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.mockfs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_mixed_child_datasets": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pyarrow.dataset.UnionDataset",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.mockfs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_single_directory": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_dataset._create_directory_of_files",
    "pyarrow.tests.test_dataset._filesystem_uri",
    "pyarrow.tests.test_dataset.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_single_file": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset._filesystem_uri",
    "pyarrow.tests.test_dataset.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_csv_format": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.dataset.CsvFileFormat",
    "pyarrow.dataset.dataset",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "pyarrow.RecordBatch",
    "pyarrow.Schema",
    "pyarrow.Table",
    "pyarrow.array",
    "pyarrow.dataset.Dataset",
    "pyarrow.dataset.ScanTask",
    "pyarrow.dataset.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.tests.test_dataset.dataset",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_from_a_list_of_local_directories_raises": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "IsADirectoryError",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.multisourcefs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_project_only_partition_columns": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "list",
    "pyarrow.dataset.dataset",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_schema_metadata": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_union": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "len",
    "pyarrow.Schema",
    "pyarrow.dataset.Dataset",
    "pyarrow.dataset.FileSystemDatasetFactory",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.UnionDatasetFactory",
    "pyarrow.fs.FileSelector",
    "pyarrow.tests.test_dataset.multisourcefs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_deterministic_row_order": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset._check_dataset_from_path",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_expression_construction": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.ArrowInvalid",
    "pyarrow.bool_",
    "pyarrow.dataset.field",
    "pyarrow.dataset.scalar",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_expression_serialization": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.bool_",
    "pyarrow.dataset.Expression",
    "pyarrow.dataset.field",
    "pyarrow.dataset.scalar",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.scalar",
    "pyarrow.schema",
    "pyarrow.tests.test_dataset.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_feather_format": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.dataset.IpcFileFormat",
    "pyarrow.dataset.dataset",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_file_format_pickling": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "pyarrow.csv.ParseOptions",
    "pyarrow.dataset.CsvFileFormat",
    "pyarrow.dataset.IpcFileFormat",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.ParquetReadOptions",
    "pyarrow.tests.test_dataset.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_dataset": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "pyarrow.dataset.FileSystemDataset",
    "pyarrow.dataset.FileSystemDataset.from_paths",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.ParquetFileFragment",
    "pyarrow.dataset.RowGroupInfo",
    "pyarrow.dataset.field",
    "pyarrow.dataset.scalar",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.mockfs",
    "pyarrow.tests.test_dataset.pytest",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_dataset_no_filesystem_interaction": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.dataset.FileSystemDataset.from_paths",
    "pyarrow.dataset.IpcFileFormat",
    "pyarrow.field",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_factory": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "format",
    "isinstance",
    "len",
    "list",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.Table",
    "pyarrow.array",
    "pyarrow.dataset.DirectoryPartitioning",
    "pyarrow.dataset.FileSystemDataset",
    "pyarrow.dataset.FileSystemDatasetFactory",
    "pyarrow.dataset.FileSystemFactoryOptions",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.ParquetReadOptions",
    "pyarrow.dataset.Scanner.from_dataset",
    "pyarrow.dataset.scalar",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.fs.FileSelector",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.mockfs",
    "pyarrow.tests.test_dataset.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filter_implicit_cast": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.dataset.dataset",
    "pyarrow.dataset.field",
    "pyarrow.int8",
    "pyarrow.table",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filter_mismatching_schema": {
  "data": {
   "lineno": 2088,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "pyarrow.array",
    "pyarrow.dataset.dataset",
    "pyarrow.dataset.field",
    "pyarrow.int64",
    "pyarrow.parquet.write_table",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.dataset.field",
    "pyarrow.tests.test_dataset._create_dataset_for_fragments",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_implicit_cast": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.dataset.dataset",
    "pyarrow.dataset.field",
    "pyarrow.dataset.partitioning",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_ensure_metadata": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "assert_opens",
    "len",
    "list",
    "pyarrow.fs",
    "pyarrow.tests.test_dataset._create_dataset_for_fragments",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.open_logging_fs",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.dataset.field",
    "pyarrow.tests.test_dataset._create_dataset_for_fragments",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_predicate": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.dataset.field",
    "pyarrow.tests.test_dataset._create_dataset_for_fragments",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_reconstruct": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "list",
    "pyarrow.dataset.field",
    "pyarrow.tests.test_dataset._create_dataset_for_fragments",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_reconstruct": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "ValueError",
    "assert_yields_projected",
    "list",
    "pyarrow.dataset.field",
    "pyarrow.tests.test_dataset._create_dataset_for_fragments",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_reconstruct.assert_yields_projected": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "filter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_ipc_format": {
  "data": {
   "lineno": 1853,
   "symbols_in_volume": [
    "pyarrow.RecordBatchFileWriter",
    "pyarrow.array",
    "pyarrow.dataset.IpcFileFormat",
    "pyarrow.dataset.dataset",
    "pyarrow.output_stream",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_csv_fragment_from_buffer": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "pyarrow.dataset.CsvFileFormat",
    "pyarrow.py_buffer",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.textwrap"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_fragment": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.ParquetFileFragment",
    "pyarrow.dataset.RowGroupInfo",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.multisourcefs",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_parquet_fragment_from_buffer": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.array",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.ParquetReadOptions",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_directory": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "pyarrow.concat_tables",
    "pyarrow.tests.test_dataset._check_dataset_from_path",
    "pyarrow.tests.test_dataset._create_directory_of_files",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_filesystem": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.dataset.dataset",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.change_cwd",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_fsspec": {
  "data": {
   "lineno": 1661,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_s3_with_filesystem_uri": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.ArrowInvalid",
    "pyarrow.dataset.dataset",
    "pyarrow.fs",
    "pyarrow.fs.FileSystem.from_uri",
    "pyarrow.fs.create_dir",
    "pyarrow.fs.open_output_stream",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_uri_s3": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.fs",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "pyarrow.tests.test_dataset.s3_example_simple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_uri_s3_fsspec": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.fs",
    "pyarrow.fs.FSSpecHandler",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "pyarrow.tests.test_dataset.s3_example_simple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_list_of_files": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "pyarrow.concat_tables",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset._create_directory_of_files",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_non_existing_file": {
  "data": {
   "lineno": 1477,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.ArrowInvalid",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_dictionary_type": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.dataset.DirectoryPartitioning.discover",
    "pyarrow.dataset.HivePartitioning.discover",
    "pyarrow.dataset.dataset",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.parquet.write_table",
    "pyarrow.string",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_directory": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "numpy.repeat",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "pyarrow.dataset.dataset",
    "pyarrow.dataset.partitioning",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.parquet.write_table",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_dataset._check_dataset_from_path",
    "pyarrow.tests.test_dataset.change_cwd",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_single_file": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset._check_dataset_from_path",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_unsupported_format": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_union_dataset": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.dataset.UnionDataset",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pickle",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_union_dataset_with_additional_kwargs": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.multisourcefs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "len",
    "pyarrow.dataset.parquet_dataset",
    "pyarrow.tests.test_dataset._create_parquet_dataset_simple",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_invalid": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "FileNotFoundError",
    "len",
    "list",
    "pyarrow.dataset.parquet_dataset",
    "pyarrow.tests.test_dataset._create_parquet_dataset_simple",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_metadata": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "list",
    "pyarrow.dataset.parquet_dataset",
    "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_partitioned": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "len",
    "pandas.testing.assert_frame_equal",
    "pyarrow.dataset.parquet_dataset",
    "pyarrow.dataset.partitioning",
    "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_lazy_filtering": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "assert_opens",
    "list",
    "pyarrow.dataset.field",
    "pyarrow.dataset.parquet_dataset",
    "pyarrow.dataset.partitioning",
    "pyarrow.fs",
    "pyarrow.tests.test_dataset._create_parquet_dataset_simple",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.open_logging_fs",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "date",
    "dt_ms",
    "dt_s",
    "dt_us",
    "list",
    "pyarrow.tests.test_dataset._create_dataset_all_types",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.datetime",
    "pyarrow.tests.test_dataset.pytest",
    "time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_ms": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_s": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_us": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "pyarrow.tests.test_dataset.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics_nulls": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "list",
    "pyarrow.dataset.dataset",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_read_options": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "pyarrow.dataset.ParquetReadOptions",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partition_keys": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "pyarrow.dataset._get_partition_keys",
    "pyarrow.dataset.field"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "isinstance",
    "klass",
    "pyarrow.ArrowInvalid",
    "pyarrow.dataset.DirectoryPartitioning",
    "pyarrow.dataset.Expression",
    "pyarrow.dataset.HivePartitioning",
    "pyarrow.dataset.Partitioning",
    "pyarrow.dataset.field",
    "pyarrow.dataset.scalar",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_factory": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "format",
    "isinstance",
    "pyarrow.dataset.DirectoryPartitioning.discover",
    "pyarrow.dataset.FileSystemDatasetFactory",
    "pyarrow.dataset.FileSystemFactoryOptions",
    "pyarrow.dataset.HivePartitioning.discover",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.PartitioningFactory",
    "pyarrow.float64",
    "pyarrow.fs.FileSelector",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_dataset.mockfs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_factory_dictionary": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "format",
    "pyarrow.array",
    "pyarrow.dataset.DirectoryPartitioning.discover",
    "pyarrow.dataset.FileSystemDatasetFactory",
    "pyarrow.dataset.FileSystemFactoryOptions",
    "pyarrow.dataset.ParquetFileFormat",
    "pyarrow.dataset.field",
    "pyarrow.dictionary",
    "pyarrow.fs.FileSelector",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.tests.test_dataset.mockfs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_function": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.dataset.DirectoryPartitioning",
    "pyarrow.dataset.HivePartitioning",
    "pyarrow.dataset.PartitioningFactory",
    "pyarrow.dataset.partitioning",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.schema",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_scanner": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pyarrow.ArrowInvalid",
    "pyarrow.dataset.Scanner",
    "pyarrow.dataset.Scanner.from_dataset",
    "pyarrow.default_memory_pool",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_specified_schema": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.dataset.dataset",
    "pyarrow.parquet.write_table",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_dataset._check_dataset",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_specified_schema._check_dataset": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.tests.test_dataset.dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_union_dataset_filesystem_datasets": {
  "data": {
   "lineno": 1770,
   "symbols_in_volume": [
    "pyarrow.dataset.dataset",
    "pyarrow.date32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_dataset.dataset",
    "pyarrow.tests.test_dataset.multisourcefs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_union_dataset_from_other_datasets": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.ArrowInvalid",
    "pyarrow.dataset.UnionDataset",
    "pyarrow.dataset.dataset",
    "pyarrow.date32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.table",
    "pyarrow.tests.test_dataset._create_single_file",
    "pyarrow.tests.test_dataset.multisourcefs",
    "pyarrow.tests.test_dataset.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_deprecations.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_extension_type.IntegerType": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.IntegerType.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.IntegerType.__reduce__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.IntegerType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__reduce__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.ParamExtType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.width": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodArray": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pyarrow.ExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_deserialize__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_serialize__": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__eq__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pyarrow.BaseExtensionType",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pyarrow.ExtensionType.__init__",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.freq": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__arrow_ext_class__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.PeriodArray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__arrow_ext_deserialize__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.PeriodTypeWithClass"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.UuidType.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType.__reduce__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.check_example_batch": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.example_batch": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_read_batch": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_write_batch": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.registered_period_type": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.register_extension_type",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.PeriodTypeWithClass",
    "pyarrow.tests.test_extension_type.pytest",
    "pyarrow.unregister_extension_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_cast_kernel_on_extension_arrays": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.Int16Array",
    "pyarrow.Int32Array",
    "pyarrow.Int64Array",
    "pyarrow.UInt16Array",
    "pyarrow.UInt32Array",
    "pyarrow.UInt64Array",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.IntegerType",
    "pyarrow.total_allocated_bytes",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_casting_to_extension_type_raises": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.IntegerType",
    "pyarrow.tests.test_extension_type.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_basics": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_equality": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_errors": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_lifetime": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.weakref",
    "ref"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_pickling": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.pickle",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__lifetime": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType",
    "pyarrow.tests.test_extension_type.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__storage_type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_basics": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_equality": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_equality": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch",
    "pyarrow.tests.test_extension_type.registered_period_type",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc_unknown": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.Int64Array",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch",
    "pyarrow.tests.test_extension_type.registered_period_type",
    "pyarrow.unregister_extension_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_register": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pyarrow.register_extension_type",
    "pyarrow.string",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.check_example_batch",
    "pyarrow.tests.test_extension_type.example_batch",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc_unknown_type": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "globals",
    "isinstance",
    "pyarrow.UnknownExtensionType",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.check_example_batch",
    "pyarrow.tests.test_extension_type.example_batch",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.ipc.read_schema",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_extension_type.base64",
    "pyarrow.tests.test_extension_type.pytest",
    "pyarrow.tests.test_extension_type.registered_period_type",
    "pyarrow.unregister_extension_type",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_to_numpy": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.testing.assert_array_equal",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_uuid_type_pickle": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType",
    "pyarrow.tests.test_extension_type.pickle",
    "pyarrow.tests.test_extension_type.weakref",
    "range",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_feather.FeatherDataset": {
  "data": {
   "shadows": "pyarrow.feather.FeatherDataset"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.TEST_FILES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyarrow.tests.test_feather._assert_error_on_write": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather._assert_error_on_write.f": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather._check_arrow_roundtrip": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.feather.read_table",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.compression",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather._check_pandas_roundtrip": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "pandas.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.compression",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.compression": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pyarrow.pandas_compat": {
  "data": {
   "shadows": "pyarrow.pandas_compat"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.random_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.read_feather": {
  "data": {
   "shadows": "pyarrow.feather.read_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.read_table": {
  "data": {
   "shadows": "pyarrow.feather.read_table"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.setup_module": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.TEST_FILES"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.teardown_module": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.test_all_none": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_all_null_category": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_no_nulls": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_nulls": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_object_nulls": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_buffer_bounds_error": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.float64",
    "pyarrow.table",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_category": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_chunked_binary_error_message": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_dataset": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.feather.FeatherDataset",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_delete_partial_file_on_error": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "CustomClass",
    "Exception",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.sys",
    "pyarrow.tests.test_feather.version",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_delete_partial_file_on_error.CustomClass": {
  "data": {
   "lineno": 345
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.test_duplicate_columns": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.table",
    "pyarrow.tests.test_feather._assert_error_on_write",
    "pyarrow.tests.test_feather._check_arrow_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_duplicate_columns_pandas": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._assert_error_on_write",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_empty_strings": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_feather_without_pandas": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.feather.read_table",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.version",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_file_not_exist": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.feather.read_feather",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_filelike_objects": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_float_no_nulls": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_float_nulls": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_integer_no_nulls": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_integer_with_nulls": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_large_dataframe": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_multithreaded_read": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_nan_as_null": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_nested_types": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_feather._check_arrow_roundtrip",
    "pyarrow.tests.test_feather.compression"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_non_string_columns": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_out_of_float64_timestamp_with_nulls": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_overwritten_file": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_platform_numpy_integers": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_duplicated_in_file": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.feather.read_table",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_duplicated_selection": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "pyarrow.feather.read_table",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.version",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_selection": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_columns": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_table": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.read_table",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.TEST_FILES",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_roundtrip": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "pyarrow.tests.strategies.all_tables",
    "pyarrow.tests.test_feather._check_arrow_roundtrip",
    "pyarrow.tests.test_feather.compression"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_sparse_dataframe": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.pandas_compat._pandas_api.has_sparse",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_strings": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timedelta_with_nulls": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timedelta_with_nulls_v1": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "TypeError",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timestamp": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timestamp_with_nulls": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unicode_filename": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.version"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unsupported": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "ValueError",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather._assert_error_on_write",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unsupported.A": {
  "data": {
   "lineno": 581
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.test_v1_unsupported_types": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_compression_options": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.ArrowInvalid",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather._check_pandas_roundtrip",
    "pyarrow.tests.test_feather.compression",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_lz4_default_compression": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "len",
    "numpy.repeat",
    "pyarrow.Codec.is_available",
    "pyarrow.feather.write_feather",
    "pyarrow.table",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_set_chunksize": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.BufferReader",
    "pyarrow.feather.write_feather",
    "pyarrow.ipc.open_file",
    "pyarrow.table",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.version": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_filesystem.filesystem": {
  "data": {
   "shadows": "pyarrow.filesystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem.test_resolve_local_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.filesystem.LocalFileSystem",
    "pyarrow.filesystem.resolve_filesystem_and_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_filesystem.test_resolve_uri": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.filesystem.LocalFileSystem",
    "pyarrow.filesystem.resolve_filesystem_and_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "object",
    "pyarrow.flight",
    "pyarrow.flight.ClientAuthHandler",
    "pyarrow.flight.ClientMiddleware",
    "pyarrow.flight.ClientMiddlewareFactory",
    "pyarrow.flight.FlightClient",
    "pyarrow.flight.FlightServerBase",
    "pyarrow.flight.ServerAuthHandler",
    "pyarrow.flight.ServerMiddleware",
    "pyarrow.flight.ServerMiddlewareFactory",
    "pyarrow.tests.test_flight.HttpBasicServerAuthHandler",
    "pyarrow.tests.test_flight.TokenServerAuthHandler",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer.do_get": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer.do_put": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ClientAuthHandler": {
  "data": {
   "shadows": "pyarrow.flight.ClientAuthHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.ClientMiddleware": {
  "data": {
   "shadows": "pyarrow.flight.ClientMiddleware"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.ClientMiddlewareFactory": {
  "data": {
   "shadows": "pyarrow.flight.ClientMiddlewareFactory"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.simple_dicts_table",
    "pyarrow.tests.test_flight.simple_ints_table",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer.do_get": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer.list_flights": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyarrow.schema",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConvenienceServer": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.ConvenienceServer.do_action": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "pyarrow.ArrowMemoryError"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConvenienceServer.simple_action_results": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoFlightServer": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.EchoFlightServer.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoFlightServer.do_get": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoFlightServer.do_put": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.EchoFlightServer"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer.do_action": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer.do_get": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer.list_actions": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ErrorFlightServer": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.ErrorFlightServer.do_action": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ErrorFlightServer.list_flights": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pyarrow.schema",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.do_exchange": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_do_get": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_do_put": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_echo": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_transform": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.types.is_integer",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.FlightClient": {
  "data": {
   "shadows": "pyarrow.flight.FlightClient"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.FlightServerBase": {
  "data": {
   "shadows": "pyarrow.flight.FlightServerBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.GetInfoFlightServer": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.GetInfoFlightServer.get_flight_info": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.GetInfoFlightServer.get_schema": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HeaderFlightServer": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.HeaderFlightServer.do_action": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddleware": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "pyarrow.flight.ServerMiddleware"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddleware.__init__": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddlewareFactory": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "pyarrow.flight.ServerMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddlewareFactory.start_call": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.HeaderServerMiddleware"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "pyarrow.flight.ClientAuthHandler"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler.__init__": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler.authenticate": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler.get_token": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pyarrow.flight.ServerAuthHandler"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler.authenticate": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pyarrow.lib.tobytes",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler.is_valid": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.InvalidStreamFlightServer": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase",
    "pyarrow.int32",
    "pyarrow.schema"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.InvalidStreamFlightServer.do_get": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ListActionsErrorFlightServer": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.ListActionsErrorFlightServer.list_actions": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ListActionsFlightServer": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.ListActionsFlightServer.expected_actions": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ListActionsFlightServer.list_actions": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.do_get": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.do_put": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "StopIteration",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_flight.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.number_batches": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_flight.struct",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pyarrow.flight.ClientMiddleware"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware.__init__": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware.received_headers": {
  "data": {
   "lineno": 623
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware.sending_headers": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pyarrow.flight.ClientMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory.__init__": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory.start_call": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "MultiHeaderClientMiddleware"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderFlightServer": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderFlightServer.do_action": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddleware": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "pyarrow.flight.ServerMiddleware"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddleware.__init__": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddleware.sending_headers": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.MultiHeaderClientMiddleware"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddlewareFactory": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "pyarrow.flight.ServerMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddlewareFactory.start_call": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "MultiHeaderServerMiddleware"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "pyarrow.flight.ClientMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory.start_call": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "pyarrow.flight.ServerMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory.__init__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory.start_call": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddleware": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "pyarrow.flight.ClientMiddleware"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddleware.sending_headers": {
  "data": {
   "lineno": 567
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddlewareFactory": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pyarrow.flight.ClientMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddlewareFactory.start_call": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "SelectiveAuthClientMiddleware"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.SelectiveAuthServerMiddlewareFactory": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "pyarrow.flight.ServerMiddlewareFactory"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.SelectiveAuthServerMiddlewareFactory.start_call": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.HeaderServerMiddleware",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ServerAuthHandler": {
  "data": {
   "shadows": "pyarrow.flight.ServerAuthHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.ServerMiddleware": {
  "data": {
   "shadows": "pyarrow.flight.ServerMiddleware"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.ServerMiddlewareFactory": {
  "data": {
   "shadows": "pyarrow.flight.ServerMiddlewareFactory"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.SlowFlightServer": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.SlowFlightServer.do_action": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.SlowFlightServer.do_get": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.SlowFlightServer.slow_stream": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_flight.time",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pyarrow.flight.ClientAuthHandler"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler.authenticate": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler.get_token": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "pyarrow.flight.ServerAuthHandler"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler.authenticate": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.base64",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler.is_valid": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.base64",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.basic_auth_handler": {
  "data": {
   "lineno": 935
  },
  "type": "constant"
 },
 "pyarrow.tests.test_flight.example_tls_certs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.read_flight_resource"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.find_free_port": {
  "data": {
   "shadows": "pyarrow.util.find_free_port"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.flight": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.test_flight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.pathlib": {
  "data": {
   "shadows": "pyarrow.util.pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.pyarrow.flight": {
  "data": {
   "shadows": "pyarrow.flight"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.pytestmark": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyarrow.tests.test_flight.read_flight_resource": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "FileNotFoundError",
    "RuntimeError",
    "pyarrow.tests.test_flight.resource_root",
    "pyarrow.tests.test_flight.traceback"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.resource_root": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeError",
    "pyarrow.tests.test_flight.os",
    "pyarrow.util.pathlib.Path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.simple_dicts_table": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.simple_ints_table": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.test_cancel_do_get": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_cancel_do_get_threaded": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.SlowFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.threading"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_cancel_do_get_threaded.block_read": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_client_wait_for_available": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.threading",
    "pyarrow.tests.test_flight.time",
    "pyarrow.util.find_free_port"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_client_wait_for_available.serve": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "pyarrow.flight.FlightServerBase",
    "pyarrow.tests.test_flight.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_action_result_convenience": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConvenienceServer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_get_ints_pandas": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "list",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.simple_ints_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_put_independent_read_write": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.MetadataFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.struct",
    "pyarrow.tests.test_flight.threading"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_put_independent_read_write._reader_thread": {
  "data": {
   "lineno": 1256
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_echo": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ExchangeFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_echo_v4": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.ipc.IpcWriteOptions",
    "pyarrow.ipc.MetadataVersion.V4",
    "pyarrow.tests.test_flight.ExchangeFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_get": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ExchangeFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_put": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ExchangeFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_transform": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ExchangeFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_extra_info": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ErrorFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_dicts": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.simple_dicts_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_ints": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "pyarrow.ipc.IpcWriteOptions",
    "pyarrow.ipc.MetadataVersion.V4",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.simple_ints_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_metadata": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "StopIteration",
    "pyarrow.Table.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.MetadataFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_metadata_v4": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.ipc.IpcWriteOptions",
    "pyarrow.ipc.MetadataVersion.V4",
    "pyarrow.tests.test_flight.MetadataFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_ticket": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_flight.CheckTicketFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_put_limit": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.ones",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_put_metadata": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.MetadataFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_domain_socket": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.os",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.simple_dicts_table",
    "pyarrow.tests.test_flight.simple_ints_table",
    "pyarrow.tests.test_flight.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_generator_stream": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoStreamFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_get_info": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "len",
    "pyarrow.flight.FlightClient",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_flight.GetInfoFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_get_schema": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_flight.GetInfoFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_invalid_generator_stream": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "pyarrow.ArrowException",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.InvalidStreamFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_large_message": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_list_flights": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_server_location_argument": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.flight.FlightServerBase",
    "pyarrow.util.find_free_port"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_generic_options": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.example_tls_certs",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_get_port": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.GetInfoFlightServer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_http_basic_auth": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "next",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoStreamFlightServer",
    "pyarrow.tests.test_flight.HttpBasicClientAuthHandler",
    "pyarrow.tests.test_flight.basic_auth_handler",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_http_basic_auth_invalid_password": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "next",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoStreamFlightServer",
    "pyarrow.tests.test_flight.HttpBasicClientAuthHandler",
    "pyarrow.tests.test_flight.basic_auth_handler",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_http_basic_unauth": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoStreamFlightServer",
    "pyarrow.tests.test_flight.basic_auth_handler",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_import": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_list_actions": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ListActionsErrorFlightServer",
    "pyarrow.tests.test_flight.ListActionsFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_location_invalid": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_location_unknown_scheme": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_middleware_mapping": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.flight.FlightServerBase",
    "pyarrow.schema",
    "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory",
    "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_middleware_multi_header": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "next",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.MultiHeaderClientMiddleware",
    "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory",
    "pyarrow.tests.test_flight.MultiHeaderFlightServer",
    "pyarrow.tests.test_flight.MultiHeaderServerMiddlewareFactory",
    "pyarrow.tests.test_flight.ast",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_middleware_reject": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "list",
    "next",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.HeaderFlightServer",
    "pyarrow.tests.test_flight.SelectiveAuthClientMiddlewareFactory",
    "pyarrow.tests.test_flight.SelectiveAuthServerMiddlewareFactory",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_mtls": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.example_tls_certs",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.simple_ints_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_nicer_server_exceptions": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConvenienceServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_roundtrip_errors": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ErrorFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_roundtrip_types": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_server_exit_reraises_exception": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.flight.FlightServerBase",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_server_middleware_same_thread": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.HeaderFlightServer",
    "pyarrow.tests.test_flight.HeaderServerMiddlewareFactory",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_timeout_fires": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "list",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.SlowFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_timeout_passes": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.pyarrow.flight"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_tls_do_get": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.example_tls_certs",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.simple_ints_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_tls_fails": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.example_tls_certs",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_tls_override_hostname": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "pyarrow.tests.test_flight.ConstantFlightServer",
    "pyarrow.tests.test_flight.example_tls_certs",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_token_auth": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "next",
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoStreamFlightServer",
    "pyarrow.tests.test_flight.TokenClientAuthHandler",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.token_auth_handler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_token_auth_invalid": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "pyarrow.flight.FlightClient",
    "pyarrow.tests.test_flight.EchoStreamFlightServer",
    "pyarrow.tests.test_flight.TokenClientAuthHandler",
    "pyarrow.tests.test_flight.pyarrow.flight",
    "pyarrow.tests.test_flight.pytest",
    "pyarrow.tests.test_flight.token_auth_handler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_flight.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.tobytes": {
  "data": {
   "shadows": "pyarrow.lib.tobytes"
  },
  "type": "import"
 },
 "pyarrow.tests.test_flight.token_auth_handler": {
  "data": {
   "lineno": 939
  },
  "type": "constant"
 },
 "pyarrow.tests.test_flight.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_fs.DummyHandler": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyarrow.fs.FileSystemHandler"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.DummyHandler.__eq__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pyarrow.fs.FileSystemHandler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.__ne__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pyarrow.fs.FileSystemHandler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.copy_file": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.create_dir": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_dir": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_dir_contents": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_file": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_root_dir_contents": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_file_info": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "IOError",
    "object",
    "pyarrow.fs.FileInfo",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.fs.FileType.NotFound"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_file_info_selector": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.fs.FileInfo",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_type_name": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.move": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.normalize_path": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_append_stream": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.BufferOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_input_file": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_input_stream": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_output_stream": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.BufferOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.FSSpecHandler": {
  "data": {
   "shadows": "pyarrow.fs.FSSpecHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileInfo": {
  "data": {
   "shadows": "pyarrow.fs.FileInfo"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSelector": {
  "data": {
   "shadows": "pyarrow.fs.FileSelector"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSystemHandler": {
  "data": {
   "shadows": "pyarrow.fs.FileSystemHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileType": {
  "data": {
   "shadows": "pyarrow.fs.FileType"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.HadoopFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.HadoopFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.ProxyHandler": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyarrow.fs.FileSystemHandler"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__eq__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pyarrow.tests.test_fs.ProxyHandler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__init__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__ne__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pyarrow.tests.test_fs.ProxyHandler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.copy_file": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.create_dir": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_dir": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_dir_contents": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_file": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_root_dir_contents": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_file_info": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_file_info_selector": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_type_name": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.move": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.normalize_path": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_append_stream": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_input_file": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_input_stream": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_output_stream": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.PyFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.PyFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.S3FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.S3FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.SubTreeFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.SubTreeFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs._MockFileSystem": {
  "data": {
   "shadows": "pyarrow.fs._MockFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs._check_root_dir_contents": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_append_to_file": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.filesystem_config",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_copy_file": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.filesystem_config",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_move_dir": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.filesystem_config",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.assert_file_not_found": {
  "data": {
   "shadows": "pyarrow.tests.test_io.assert_file_not_found"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.check_mtime": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "int",
    "isinstance",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime_absent": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime_or_absent": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.check_mtime",
    "pyarrow.tests.test_fs.check_mtime_absent"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.filesystem_config": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.fs": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.filesystem_config",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.hdfs": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.HadoopFileSystem",
    "pyarrow.have_libhdfs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.identity": {
  "data": {
   "lineno": 838
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.localfs": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.localfs_with_mmap": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.mockfs": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.pathfn": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.filesystem_config",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.py_fsspec_localfs": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.FSSpecHandler",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_memoryfs": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.FSSpecHandler",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_s3fs": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "pyarrow.fs.FSSpecHandler",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_localfs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.ProxyHandler",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_mockfs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_fs.ProxyHandler",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.s3fs": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.S3FileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.subtree_localfs": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.SubTreeFileSystem",
    "pyarrow.tests.test_fs.localfs",
    "pyarrow.tests.test_fs.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.subtree_s3fs": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict",
    "pyarrow.fs.SubTreeFileSystem",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.test_cannot_instantiate_base_filesystem": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.fs.FileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_copy_file": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.tests.test_fs.allow_copy_file",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_create_dir": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.skip_fsspec_s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.skip_fsspec_s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir_contents": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.skip_fsspec_s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_file": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_root_dir_contents": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs._check_root_dir_contents",
    "pyarrow.tests.test_fs.mockfs",
    "pyarrow.tests.test_fs.py_mockfs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_file_info_constructor": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.timezone.utc",
    "pyarrow.fs.FileInfo",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.fs.FileType.Unknown",
    "pyarrow.tests.test_fs.check_mtime",
    "pyarrow.tests.test_fs.check_mtime_absent"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_equals": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs.SubTreeFileSystem",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_path_object": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.fs.FileSystem.from_uri",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathlib",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_uri": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.fs.FileSystem.from_uri",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_uri_s3": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.fs.FileSystem.from_uri",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.S3FileSystem",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_is_functional_after_pickling": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pickle",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.skip_fsspec_s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_pickling": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.fs.FileSystem",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pickle",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_file_info": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "pyarrow.fs.FileType.File",
    "pyarrow.fs.FileType.NotFound",
    "pyarrow.tests.test_fs.check_mtime",
    "pyarrow.tests.test_fs.check_mtime_absent",
    "pyarrow.tests.test_fs.check_mtime_or_absent",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.skip_fsspec_s3fs",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_file_info_with_selector": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pyarrow.fs.FileSelector",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.tests.test_fs.check_mtime_or_absent",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.skip_fsspec_s3fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_hdfs_options": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.fs.FileSelector",
    "pyarrow.fs.HadoopFileSystem",
    "pyarrow.fs.HadoopFileSystem.from_uri",
    "pyarrow.have_libhdfs",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.hdfs",
    "pyarrow.tests.test_fs.pathlib",
    "pyarrow.tests.test_fs.pickle",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_errors": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.localfs",
    "pyarrow.tests.test_io.assert_file_not_found"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_file_info": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.check_mtime",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.localfs",
    "pyarrow.tests.test_fs.pathlib"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_options": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_mockfs_mtime_roundtrip": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.timezone.utc",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_fs.fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move_directory": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.allow_move_dir",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move_file": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "Path",
    "TypeError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathlib",
    "pyarrow.tests.test_fs.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises.Path": {
  "data": {
   "lineno": 593
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.test_normalize_path": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_append_stream": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "compressor",
    "decompressor",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.tests.test_fs.allow_append_to_file",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.gzip",
    "pyarrow.tests.test_fs.identity",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_file": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pathfn"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_stream": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "compressor",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.gzip",
    "pyarrow.tests.test_fs.identity",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_output_stream": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.gzip",
    "pyarrow.tests.test_fs.identity",
    "pyarrow.tests.test_fs.pathfn",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_equality": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "object",
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_get_file_info": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.fs.FileType.NotFound",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_get_file_info_selector": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "FileNotFoundError",
    "len",
    "pyarrow.fs.FileSelector",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_lifetime": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_ops": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_pickling": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.fs.FileSystem",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_append_stream": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_input_file": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_input_stream": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "FileNotFoundError",
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_output_stream": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "pyarrow.fs.PyFileSystem",
    "pyarrow.tests.test_fs.DummyHandler",
    "pyarrow.tests.test_fs.fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_options": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.fs.S3FileSystem",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pickle",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_real_aws": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "len",
    "pyarrow.fs.FileSelector",
    "pyarrow.fs.S3FileSystem",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_subtree_filesystem": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs.SubTreeFileSystem",
    "pyarrow.tests.test_fs.localfs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_type_name": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs._MockFileSystem",
    "pyarrow.tests.test_fs.fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_gandiva.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.gandiva": {
  "data": {
   "shadows": "pyarrow.gandiva"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.test_boolean": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_filter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "filter.llvm_ir.find",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_get_registered_function_signatures": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "pyarrow.DataType",
    "pyarrow.gandiva.get_registered_function_signatures",
    "pyarrow.tests.test_gandiva.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.default_memory_pool",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.string",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr_todo": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.default_memory_pool",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.tests.test_gandiva.datetime",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_literals": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_regex": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.field",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_projector",
    "pyarrow.string",
    "pyarrow.tests.test_gandiva.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_table": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.default_memory_pool",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_projector",
    "pyarrow.tests.test_gandiva.pytest",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_tree_exp_builder": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.field",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_projector",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_gandiva.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._write_multiple_hdfs_pq_files": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "os.path.join",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_capacity_space": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_cat": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_chmod_chown": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_close": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_disk_usage": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_download_upload": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "io.BytesIO",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_exists_isdir_isfile": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_file_context_manager": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_info": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_ls": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mkdir": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mv_rename": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_open_not_exist_error_message": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Exception",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_pickle": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_common_metadata_files": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "os.path.join",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.tests.test_parquet._test_read_common_metadata_files",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "os.path.join",
    "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files_with_uri": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "_get_hdfs_uri",
    "os.path.join",
    "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_whole_file": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_write_parquet_files_with_uri": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "_get_hdfs_uri",
    "numpy.int64",
    "os.path.join",
    "pyarrow.Table.from_pandas",
    "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_no_partitions": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "os.path.join",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_with_partitions": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "os.path.join",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.HdfsTestCases",
    "pyarrow.tests.test_hdfs.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.have_libhdfs",
    "pyarrow.tests.test_hdfs.os",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_orphaned_file": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.hdfs_test_client"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs._get_hdfs_uri": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyarrow.tests.test_hdfs.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.guid": {
  "data": {
   "shadows": "pyarrow.util.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyarrow.hdfs.connect",
    "pyarrow.tests.test_hdfs.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.snappy": {
  "data": {
   "shadows": "snappy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.test_fastparquet_read_with_hdfs": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ImportError",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.pytest",
    "pyarrow.tests.util.make_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.test_parquet": {
  "data": {
   "shadows": "pyarrow.tests.test_parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_io.BufferedIOBase": {
  "data": {
   "shadows": "io.BufferedIOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.Codec": {
  "data": {
   "shadows": "pyarrow.Codec"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "FACTORY",
    "len",
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.assert_file_not_found": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "FileNotFoundError",
    "contextlib.contextmanager",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.check_compressed_concatenated": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "pyarrow.CompressedInputStream",
    "pyarrow.OSFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_compressed_input": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.CompressedInputStream",
    "pyarrow.OSFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_large_seeks": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "file_factory",
    "open",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.tests.test_io.sys",
    "pyarrow.tests.test_io.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_transcoding": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "iter",
    "next",
    "pyarrow.BufferReader",
    "pyarrow.transcoding_input_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.guid": {
  "data": {
   "shadows": "pyarrow.util.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.make_compressed_output": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "open",
    "pyarrow.BufferOutputStream",
    "pyarrow.CompressedOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "_try_delete"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer_resizable": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ResizableBuffer",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_address": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "bytearray",
    "numpy.arange",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "bytearray",
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_eq_bytes": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "TypeError",
    "bytearray",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "bytearray",
    "eq",
    "ne",
    "numpy.frombuffer",
    "numpy.int16",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.eq": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.ne": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_from_numpy": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int8",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_getitem": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "IndexError",
    "bytearray",
    "len",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hashing": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hex": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_invalid": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "make_buffer",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_respects_immutability": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.uint8",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_slicing": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_to_numpy": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.BufferedInputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_non_seekable": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "EnvironmentError",
    "pyarrow.BufferReader",
    "pyarrow.BufferedInputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_seekable": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.BufferedInputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.zeros",
    "pyarrow.BufferedOutputStream",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream_detach": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.zeros",
    "pyarrow.BufferedOutputStream",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.BufferReader",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "get_buffer",
    "pyarrow.tests.test_io.gc"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compress_decompress": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.random.randint",
    "numpy.uint8",
    "pyarrow.Codec.is_available",
    "pyarrow.compress",
    "pyarrow.decompress",
    "pyarrow.lib.ArrowNotImplementedError",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_concatenated_gzip": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_compressed_concatenated",
    "pyarrow.tests.test_io.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_bz2": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.tests.test_io.bz2",
    "pyarrow.tests.test_io.check_compressed_input",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_gzip": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_compressed_input",
    "pyarrow.tests.test_io.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_invalid": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "pyarrow.BufferReader",
    "pyarrow.CompressedInputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_bz2": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.tests.test_io.bz2",
    "pyarrow.tests.test_io.make_compressed_output",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_gzip": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.gzip",
    "pyarrow.tests.test_io.make_compressed_output",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_recordbatch_stream": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Codec.is_available",
    "pyarrow.CompressedInputStream",
    "pyarrow.CompressedOutputStream",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_roundtrip": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Codec.is_available",
    "pyarrow.CompressedInputStream",
    "pyarrow.CompressedOutputStream",
    "pyarrow.lib.ArrowNotImplementedError",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compression_detection": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Codec",
    "pyarrow.Codec.detect",
    "pyarrow.Codec.is_available",
    "pyarrow.lib.ArrowNotImplementedError",
    "pyarrow.tests.test_io.pathlib",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_foreign_buffer": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frombuffer",
    "numpy.int32",
    "pyarrow.foreign_buffer",
    "pyarrow.tests.test_io.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.BufferOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_buffer": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "memoryview",
    "pyarrow.input_stream",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.gzip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "DuckReader",
    "pyarrow.input_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader": {
  "data": {
   "lineno": 1389
  },
  "type": "class"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.close": {
  "data": {
   "lineno": 1391
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.closed": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.read": {
  "data": {
   "lineno": 1398
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_errors": {
  "data": {
   "lineno": 1514,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytearray",
    "io.StringIO",
    "memoryview",
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.assert_file_not_found",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_buffered": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "open",
    "pyarrow.BufferedInputStream",
    "pyarrow.OSFile",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.pathlib",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed": {
  "data": {
   "lineno": 1419,
   "symbols_in_volume": [
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip",
    "pyarrow.tests.test_io.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed_and_buffered": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip",
    "pyarrow.tests.test_io.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_native_file": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_python_file": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "io.BytesIO",
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_close_remove": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_deref_remove": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_large_seeks": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_resize": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.uint8",
    "open",
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_zero_length": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "open",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_TextIOWrapper": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "list",
    "open",
    "pyarrow.OSFile",
    "pyarrow.tests.test_io.os",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "open",
    "pyarrow.OSFile",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_open_error": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.assert_file_not_found"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_raises_ValueError_after_close": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "open",
    "pyarrow.OSFile",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_write_reject_unicode": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.BufferOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "TypeError",
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.BufferOutputStream",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_large_seeks": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.OSFile",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_buffer": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "memoryview",
    "pyarrow.output_stream",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "check_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor.check_data": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "pyarrow.tests.test_io.gc",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "DuckWriter",
    "pyarrow.output_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter": {
  "data": {
   "lineno": 1546
  },
  "type": "class"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.__init__": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.close": {
  "data": {
   "lineno": 1550
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.closed": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.write": {
  "data": {
   "lineno": 1557
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_errors": {
  "data": {
   "lineno": 1688,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytearray",
    "io.StringIO",
    "memoryview",
    "open",
    "pyarrow.output_stream",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "check_data",
    "pyarrow.tests.test_io.pathlib",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path.check_data": {
  "data": {
   "lineno": 1570,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered": {
  "data": {
   "lineno": 1604,
   "symbols_in_volume": [
    "ValueError",
    "check_data",
    "isinstance",
    "pyarrow.OSFile",
    "pyarrow.output_stream",
    "pyarrow.tests.test_io.pathlib",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered.check_data": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pyarrow.BufferedOutputStream",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "ValueError",
    "check_data",
    "pyarrow.tests.test_io.gzip",
    "pyarrow.tests.test_io.pathlib",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed.check_data": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered": {
  "data": {
   "lineno": 1631,
   "symbols_in_volume": [
    "check_data",
    "pyarrow.tests.test_io.gzip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered.check_data": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "check_data",
    "pyarrow.tests.test_io.gzip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file.check_data": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_closing": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_correct_abc": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "io.BufferedIOBase",
    "io.BytesIO",
    "io.IOBase",
    "isinstance",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_implicit_mode": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "io.BytesIO",
    "open",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_iterable": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks.factory": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "io.BytesIO",
    "io.StringIO",
    "len",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read_at": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readall": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readinto": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bytearray",
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "io.BytesIO",
    "io.StringIO",
    "len",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_writelines": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_decoding_error": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "UnicodeError",
    "pyarrow.BufferReader",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.transcoding_input_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_encoding_error": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "pyarrow.BufferReader",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.transcoding_input_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_input_stream": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_transcoding",
    "pyarrow.tests.test_io.itertools",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.tests.test_io.unicode_transcoding_example"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_no_ops": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.transcoding_input_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_uninitialized_buffer": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_unknown_compression_raises": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyarrow.Codec",
    "pyarrow.Codec.is_available",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.unicode_transcoding_example": {
  "data": {
   "lineno": 1296
  },
  "type": "constant"
 },
 "pyarrow.tests.test_io.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture._check_roundtrip": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.BufferReader",
    "pyarrow.ipc.open_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture._get_writer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyarrow.ipc.new_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.IpcFixture.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.get_sink": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.get_source": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.write_batches": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.Table.from_batches",
    "pyarrow.record_batch",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessageFixture": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessageFixture._get_writer": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.__init__": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture._get_writer": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.get_sink": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.start_server": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.StreamReaderServer",
    "pyarrow.tests.test_ipc.socket"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.stop_and_get_result": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamFormatFixture": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.StreamFormatFixture._get_writer": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyarrow.ipc.new_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.threading"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.get_result": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.init": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.socket"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.run": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.ipc.open_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.deserialize_pandas",
    "pyarrow.serialize_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.assert_series_equal": {
  "data": {
   "shadows": "pandas.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.changed_environ": {
  "data": {
   "shadows": "pyarrow.tests.util.changed_environ"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.example_messages": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "list",
    "pyarrow.BufferReader",
    "pyarrow.MessageReader.open_stream",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.file_fixture": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.FileFormatFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.ipc_fixture": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pytestmark": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pyarrow.ipc.open_file",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.socket_fixture": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.SocketStreamFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.stream_fixture": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.StreamFormatFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.test_deprecated_pyarrow_ns_apis": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "FutureWarning",
    "pyarrow.BufferOutputStream",
    "pyarrow.array",
    "pyarrow.ipc.new_file",
    "pyarrow.ipc.new_stream",
    "pyarrow.open_file",
    "pyarrow.open_stream",
    "pyarrow.table",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_empty_file": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.BufferReader",
    "pyarrow.ipc.open_file",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_empty_stream": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.io",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_envvar_set_legacy_ipc_format": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.ipc.MetadataVersion.V4",
    "pyarrow.ipc.MetadataVersion.V5",
    "pyarrow.ipc.new_file",
    "pyarrow.ipc.new_stream",
    "pyarrow.schema",
    "pyarrow.tests.util.changed_environ"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_pathlib": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "open",
    "pyarrow.OSFile",
    "pyarrow.ipc.open_file",
    "pyarrow.tests.test_ipc.file_fixture",
    "pyarrow.tests.test_ipc.pathlib",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_read_all": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_batches",
    "pyarrow.ipc.open_file",
    "pyarrow.tests.test_ipc.FileFormatFixture",
    "pyarrow.tests.test_ipc.io",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_read_pandas": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.ipc.open_file",
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_simple_roundtrip": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_write_table": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_get_record_batch_size": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.ipc.get_record_batch_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_file_stream_has_eos": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.ipc.open_stream",
    "write_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_stream_no_batches": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.ipc.new_stream",
    "pyarrow.ipc.open_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatch.from_pandas",
    "read_file",
    "write_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_ctors_no_segfault": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Message",
    "pyarrow.MessageReader",
    "pyarrow.tests.test_ipc.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_read_from_compressed": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.input_stream",
    "pyarrow.ipc.read_message",
    "pyarrow.output_stream",
    "pyarrow.tests.test_ipc.example_messages"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_read_record_batch": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "pyarrow.ipc.read_record_batch",
    "pyarrow.tests.test_ipc.example_messages",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_reader": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.Buffer",
    "pyarrow.MetadataVersion.V5",
    "pyarrow.tests.test_ipc.example_messages"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_serialize_read_message": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "EOFError",
    "pyarrow.ArrowInvalid",
    "pyarrow.BufferReader",
    "pyarrow.ipc.read_message",
    "pyarrow.tests.test_ipc.example_messages",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_open_file_from_buffer": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.RecordBatchFileReader",
    "pyarrow.ipc.open_file",
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_open_stream_from_buffer": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_multi_index": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_not_string_columns": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.deserialize_pandas",
    "pyarrow.serialize_pandas",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_nthreads": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_read_record_batch_on_stream_error_message": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.BufferOutputStream",
    "pyarrow.array",
    "pyarrow.ipc.new_stream",
    "pyarrow.ipc.read_record_batch",
    "pyarrow.record_batch",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_batch_serialize_methods": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.ipc.read_record_batch",
    "pyarrow.ipc.read_schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_serialization_with_metadata": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8",
    "pyarrow.ipc.read_schema",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_empty_dataframe": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_no_preserve_index": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.deserialize_pandas",
    "pyarrow.serialize_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_with_pandas_objects": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal",
    "pyarrow.deserialize",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_socket_read_all": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_ipc.socket_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_socket_simple_roundtrip": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.tests.test_ipc.socket_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_categorical_roundtrip": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_options_roundtrip": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "len",
    "pyarrow.BufferReader",
    "pyarrow.ipc.IpcWriteOptions",
    "pyarrow.ipc.MetadataVersion.V4",
    "pyarrow.ipc.open_stream",
    "pyarrow.ipc.read_message",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_read_all": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.Table.from_batches",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_read_pandas": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_simple_roundtrip": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "len",
    "pyarrow.BufferReader",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_write_dispatch": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_pandas",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_write_table_batches": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.ipc.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_write_empty_ipc_file": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatchFileReader",
    "pyarrow.int64",
    "pyarrow.ipc.new_file",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_write_options": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyarrow.ipc.IpcWriteOptions",
    "pyarrow.ipc.MetadataVersion.V4",
    "pyarrow.ipc.MetadataVersion.V5",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_write_options_legacy_exclusive": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.ipc.IpcWriteOptions",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "pyarrow.ipc.new_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.check_names": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.read_bytes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_block_sizes": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.json.ParseOptions",
    "pyarrow.json.ReadOptions",
    "pyarrow.tests.test_json.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_explicit_schema_with_unexpected_behaviour": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.binary",
    "pyarrow.int64",
    "pyarrow.json.ParseOptions",
    "pyarrow.schema",
    "pyarrow.tests.test_json.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_file_object": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.tests.test_json.io",
    "pyarrow.tests.test_json.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_no_newline_at_end": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_ints": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_nulls": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_varied": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_small_random_json": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.make_random_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_stress_block_sizes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyarrow.json.ParseOptions",
    "pyarrow.json.ReadOptions",
    "pyarrow.tests.test_json.make_random_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.ParseOptions": {
  "data": {
   "shadows": "pyarrow.json.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.ReadOptions": {
  "data": {
   "shadows": "pyarrow.json.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.BaseTestJSONRead",
    "pyarrow.tests.test_json.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead.read_json": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pyarrow.json.ReadOptions",
    "pyarrow.json.read_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.BaseTestJSONRead",
    "pyarrow.tests.test_json.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead.read_json": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pyarrow.json.ReadOptions",
    "pyarrow.json.read_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.generate_col_names": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.make_random_json": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "int",
    "list",
    "numpy.random.RandomState",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_json.generate_col_names",
    "pyarrow.tests.test_json.itertools",
    "pyarrow.tests.test_json.json",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.read_json": {
  "data": {
   "shadows": "pyarrow.json.read_json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.test_parse_options": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.json.ParseOptions",
    "pyarrow.schema",
    "pyarrow.tests.test_json.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.test_read_options": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cls",
    "pyarrow.json.ReadOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_jvm.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.IllegalArgumentException": {
  "data": {
   "shadows": "java.lang.IllegalArgumentException"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm._jvm_field": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.jpype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._jvm_schema": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm.jpype",
    "schema_cls"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._string_to_varchar_holder": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_jvm.jpype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.jpype": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyarrow.tests.test_jvm.jpype.imports": {
  "data": {
   "shadows": "jpype.imports"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa_jvm": {
  "data": {
   "shadows": "pyarrow.jvm"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.root_allocator": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.os",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.sys",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.test_jvm_array": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.jvm.array",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_array_empty": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "len",
    "pyarrow.int32",
    "pyarrow.jvm.array",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.root_allocator"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyarrow.jvm.jvm_buffer",
    "pyarrow.tests.test_jvm.root_allocator",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer_released": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "java.lang.IllegalArgumentException",
    "pyarrow.jvm.jvm_buffer",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_record_batch": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "enumerate",
    "jvm_vsr",
    "len",
    "list",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.jvm.record_batch",
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.json",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_string_array": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.array",
    "pyarrow.jvm.array",
    "pyarrow.string",
    "pyarrow.tests.test_jvm._string_to_varchar_holder",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_types": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.jvm.field",
    "pyarrow.jvm.schema",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm._jvm_schema",
    "pyarrow.tests.test_jvm.json",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_memory.allocate_bytes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_memory.contextlib"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.check_allocated_bytes": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.tests.test_memory.allocate_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_memory.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_memory.test_default_allocated_bytes": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.tests.test_memory.allocate_bytes",
    "pyarrow.tests.test_memory.check_allocated_bytes",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_logging_memory_pool": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.logging_memory_pool",
    "pyarrow.tests.test_memory.check_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_proxy_memory_pool": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.proxy_memory_pool",
    "pyarrow.tests.test_memory.check_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_set_memory_pool": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.proxy_memory_pool",
    "pyarrow.set_memory_pool",
    "pyarrow.tests.test_memory.allocate_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.test_build_info": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BuildInfo",
    "pyarrow.VersionInfo",
    "pyarrow.__version__",
    "pyarrow.cpp_build_info",
    "pyarrow.cpp_build_info.version_info",
    "pyarrow.cpp_version",
    "pyarrow.cpp_version_info",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_cpu_count": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.cpu_count",
    "pyarrow.set_cpu_count"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_extension_type_constructor_errors": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "klass",
    "pyarrow.Array",
    "pyarrow.BinaryArray",
    "pyarrow.BinaryScalar",
    "pyarrow.BooleanArray",
    "pyarrow.BooleanScalar",
    "pyarrow.Buffer",
    "pyarrow.ChunkedArray",
    "pyarrow.Date32Array",
    "pyarrow.Date32Scalar",
    "pyarrow.Date64Array",
    "pyarrow.Date64Scalar",
    "pyarrow.Decimal128Array",
    "pyarrow.Decimal128Scalar",
    "pyarrow.DictionaryArray",
    "pyarrow.DictionaryScalar",
    "pyarrow.DoubleScalar",
    "pyarrow.DurationArray",
    "pyarrow.DurationScalar",
    "pyarrow.Field",
    "pyarrow.FixedSizeBinaryArray",
    "pyarrow.FixedSizeBinaryScalar",
    "pyarrow.FixedSizeListArray",
    "pyarrow.FixedSizeListScalar",
    "pyarrow.FloatScalar",
    "pyarrow.FloatingPointArray",
    "pyarrow.HalfFloatScalar",
    "pyarrow.Int16Array",
    "pyarrow.Int16Scalar",
    "pyarrow.Int32Array",
    "pyarrow.Int32Scalar",
    "pyarrow.Int64Array",
    "pyarrow.Int64Scalar",
    "pyarrow.Int8Array",
    "pyarrow.Int8Scalar",
    "pyarrow.IntegerArray",
    "pyarrow.LargeListArray",
    "pyarrow.LargeListScalar",
    "pyarrow.ListArray",
    "pyarrow.ListScalar",
    "pyarrow.LoggingMemoryPool",
    "pyarrow.MapArray",
    "pyarrow.MapScalar",
    "pyarrow.MemoryPool",
    "pyarrow.NullArray",
    "pyarrow.NumericArray",
    "pyarrow.ProxyMemoryPool",
    "pyarrow.RecordBatch",
    "pyarrow.Scalar",
    "pyarrow.Schema",
    "pyarrow.StringArray",
    "pyarrow.StringScalar",
    "pyarrow.StructArray",
    "pyarrow.StructScalar",
    "pyarrow.Table",
    "pyarrow.Tensor",
    "pyarrow.Time32Array",
    "pyarrow.Time32Scalar",
    "pyarrow.Time64Array",
    "pyarrow.Time64Scalar",
    "pyarrow.TimestampArray",
    "pyarrow.TimestampScalar",
    "pyarrow.UInt16Array",
    "pyarrow.UInt16Scalar",
    "pyarrow.UInt32Array",
    "pyarrow.UInt32Scalar",
    "pyarrow.UInt64Array",
    "pyarrow.UInt64Scalar",
    "pyarrow.UInt8Array",
    "pyarrow.UInt8Scalar",
    "pyarrow.UnionArray",
    "pyarrow.UnionScalar",
    "pyarrow.ipc.Message",
    "pyarrow.ipc.MessageReader",
    "pyarrow.lib.DataType",
    "pyarrow.lib.Decimal128Type",
    "pyarrow.lib.DictionaryType",
    "pyarrow.lib.FixedSizeBinaryType",
    "pyarrow.lib.FixedSizeListType",
    "pyarrow.lib.LargeListType",
    "pyarrow.lib.ListType",
    "pyarrow.lib.StructType",
    "pyarrow.lib.Time32Type",
    "pyarrow.lib.Time64Type",
    "pyarrow.lib.TimestampType",
    "pyarrow.lib.UnionType",
    "pyarrow.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_include": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.get_include",
    "pyarrow.tests.test_misc.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_library_dirs_win32": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "any",
    "pyarrow.get_library_dirs",
    "pyarrow.tests.test_misc.os",
    "pyarrow.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_orc.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_orc.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.check_example_file": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pyarrow.Table",
    "pyarrow.orc.ORCFile",
    "pyarrow.tests.test_orc.check_example_values",
    "pyarrow.tests.test_orc.fix_example_values",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.check_example_values": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.datadir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyarrow.tests.test_orc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.fix_example_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "enumerate",
    "issubclass",
    "len",
    "pandas.Series",
    "pandas.isnull",
    "pandas.to_datetime",
    "pyarrow.tests.test_orc.datetime",
    "pyarrow.tests.test_orc.decimal",
    "round",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.orc": {
  "data": {
   "shadows": "pyarrow.orc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pytestmark": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_orc.test_example_using_json": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandas.read_json",
    "pyarrow.tests.test_orc.check_example_file",
    "pyarrow.tests.test_orc.datadir",
    "pyarrow.tests.test_orc.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.test_orcfile_empty": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.orc.ORCFile",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_orc.datadir"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_pandas.DummyExtensionType": {
  "data": {
   "lineno": 3584,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.DummyExtensionType.__init__": {
  "data": {
   "lineno": 3586,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.DummyExtensionType.__reduce__": {
  "data": {
   "lineno": 3589,
   "symbols_in_volume": [
    "pyarrow.tests.test_pandas.DummyExtensionType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType": {
  "data": {
   "lineno": 3682,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType.__init__": {
  "data": {
   "lineno": 3684,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType.__reduce__": {
  "data": {
   "lineno": 3687,
   "symbols_in_volume": [
    "pyarrow.tests.test_pandas.MyCustomIntegerType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType.to_pandas_dtype": {
  "data": {
   "lineno": 3690,
   "symbols_in_volume": [
    "pandas.Int64Dtype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.PandasArray__arrow_array__": {
  "data": {
   "lineno": 3593,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_pandas.DummyExtensionType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes": {
  "data": {
   "lineno": 907
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_array_from_pandas_date_with_mask": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.array",
    "pandas.Series",
    "pyarrow.Array.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_array_types_date_as_object": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object",
    "pyarrow.array",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_arrow_time_to_pandas": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "_pytime_to_micros",
    "bool",
    "datetime.time",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_date_infer": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.date32",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_date_mask": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_date_objects_typed": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.NaT.value",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_dates_from_integers": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_datetime64_to_date32": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "datetime.date",
    "pyarrow.Array.from_pandas",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.date32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_fixed_offset_timezone": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "_check_serialize_components_roundtrip",
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Timestamp",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_numpy_datetime64_columns": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.tests.test_pandas._check_array_from_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_numpy_datetime64_day_unit": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_pandas._check_array_from_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pandas_datetime_to_date64": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "datetime.date",
    "numpy.array",
    "pandas.to_datetime",
    "pyarrow.Array.from_pandas",
    "pyarrow.array",
    "pyarrow.date64",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pandas_datetime_to_date64_failures": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.to_datetime",
    "pyarrow.Array.from_pandas",
    "pyarrow.ArrowInvalid",
    "pyarrow.date64",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pandas_null_values": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "datetime.datetime",
    "getattr",
    "numpy.array",
    "object",
    "pandas",
    "pandas.NaT",
    "pyarrow.array",
    "pyarrow.null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_date_subclass": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "MyDate",
    "datetime.date",
    "isinstance",
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Date32Array",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_date_subclass.MyDate": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "datetime.date"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "datetime.timedelta",
    "isinstance",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.TimestampArray",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_subclass": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "MyDatetime",
    "isinstance",
    "object",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pandas.to_datetime",
    "pyarrow.Table.from_pandas",
    "pyarrow.TimestampArray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_subclass.MyDatetime": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_with_pytz_timezone": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "datetime.datetime",
    "hypothesis.extra.pytz.timezones",
    "hypothesis.given",
    "hypothesis.strategies.none",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_with_pytz_tzinfo": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytz"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_with_timezone_tzinfo": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "datetime.timezone",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytz"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pytime_from_pandas": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "_pytime_to_micros",
    "datetime.time",
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.array",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_table_convert_date_as_object": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "datetime.date",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timedeltas_no_nulls": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.duration",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timedeltas_nulls": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.duration",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamp_to_pandas_empty_chunked": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pyarrow.chunked_array",
    "pyarrow.table",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamp_to_pandas_ns": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pandas.to_datetime",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamp_to_pandas_out_of_bounds": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamps_notimezone_no_nulls": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamps_notimezone_nulls": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamps_with_timezone": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas._check_series_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_fails_with_truncation": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_pandas.decimal",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_from_pandas": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_to_pandas": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_with_None_explicit_type": {
  "data": {
   "lineno": 1723,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.decimal128",
    "pyarrow.tests.test_pandas._check_series_roundtrip",
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_with_None_infer_type": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.decimal128",
    "pyarrow.tests.test_pandas._check_series_roundtrip",
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_with_different_precisions": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_strided_objects": {
  "data": {
   "lineno": 1735,
   "symbols_in_volume": [
    "pandas.DataFrame.from_dict",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes": {
  "data": {
   "lineno": 1747
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_array_from_nested_arrays": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "dataframe_with_arrays",
    "list",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_array_from_pandas_typed_array_with_mask": {
  "data": {
   "lineno": 2018,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pyarrow.Array.from_pandas",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest",
    "t"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_arrays": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "dataframe_with_arrays",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas._check_array_roundtrip",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_arrays_to_py": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int8",
    "pyarrow.list_",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_boolean_list": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_decimal_list": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.list_",
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists": {
  "data": {
   "lineno": 1820,
   "symbols_in_volume": [
    "dataframe_with_lists",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas._check_array_roundtrip",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_chunked": {
  "data": {
   "lineno": 1841,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_chunked2": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_first_empty": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_strided": {
  "data": {
   "lineno": 1898,
   "symbols_in_volume": [
    "dataframe_with_lists",
    "pandas.concat",
    "pyarrow.tests.test_pandas._check_array_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_empty_column_of_lists_chunked": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_empty_list_roundtrip": {
  "data": {
   "lineno": 2044,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "object",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_fixed_size_list": {
  "data": {
   "lineno": 1971,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_infer_lists": {
  "data": {
   "lineno": 1953,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_infer_numpy_array": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_large_binary_list": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "list_type_factory",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.array",
    "pyarrow.large_binary",
    "pyarrow.large_list",
    "pyarrow.large_string",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_large_list": {
  "data": {
   "lineno": 2065,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.large_list"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_list_first_empty": {
  "data": {
   "lineno": 1930,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_lists_all_empty": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_lists_all_none": {
  "data": {
   "lineno": 1907,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "object",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_smaller_ints": {
  "data": {
   "lineno": 1938,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_types_from_ndarray_null_entries": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.nan",
    "object",
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.struct",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_to_list_of_structs_pandas": {
  "data": {
   "lineno": 2002,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.ListArray.from_arrays",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_binary_column_name": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_categorical_column_index": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_categorical_row_index": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_column_index_names_are_preserved": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_datetimetz_column_index": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_datetimetz_row_index": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_decimal_metadata": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_dictionary_indices_boundscheck": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_duplicate_column_names_does_not_crash": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_empty_list_metadata": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.Table.from_pandas",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_from_pandas_with_columns": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_ignore_metadata": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_index_metadata_field_name": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_integer_index_column": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_list_metadata": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_metadata_pandas_version": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_metadata_with_mixed_types": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_mixed_column_names": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "UserWarning",
    "object",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_columns": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_columns_unicode": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_columns_with_dtypes": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_doesnt_warn": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_duplicate_values": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_with_datetimes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "datetime.datetime",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.testing.assert_frame_equal",
    "pyarrow.table",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_non_string_columns": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_range_index_force_serialization": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_range_index_shortcut": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.pandas_compat._pandas_api.get_rangeindex_attribute"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_rangeindex_doesnt_warn": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_string_column_index": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_struct_metadata": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_table_column_subset_metadata": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.date_range",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_unicode_with_unicode_column_and_index": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc": {
  "data": {
   "lineno": 2338,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.binary",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_none_category": {
  "data": {
   "lineno": 2367,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_none_objects": {
  "data": {
   "lineno": 2363,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_nones": {
  "data": {
   "lineno": 2502,
   "symbols_in_volume": [
    "_check_series",
    "numpy.nan",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_nones._check_series": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.NA",
    "pyarrow.NullArray",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_array_from_strided_numpy_array": {
  "data": {
   "lineno": 2566,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "pyarrow.array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category": {
  "data": {
   "lineno": 2389,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_array_roundtrip",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category_implicit_from_pandas": {
  "data": {
   "lineno": 2415,
   "symbols_in_volume": [
    "_check",
    "pandas.Categorical"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category_implicit_from_pandas._check": {
  "data": {
   "lineno": 2417,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category_zero_chunks": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal",
    "pyarrow.chunked_array",
    "pyarrow.dictionary",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_convert_empty_table": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "object",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_empty_arrays": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.tests.test_pandas._check_array_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_empty_category": {
  "data": {
   "lineno": 2430,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_error_sparse": {
  "data": {
   "lineno": 2591,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.SparseArray",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_mixed_types_fails": {
  "data": {
   "lineno": 2448,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.ArrowTypeError",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_non_natural_stride": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.int16",
    "numpy.int32",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_non_threaded_conversion": {
  "data": {
   "lineno": 2377,
   "symbols_in_volume": [
    "pyarrow.tests.test_pandas._non_threaded_conversion"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_partial_schema": {
  "data": {
   "lineno": 2515,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.array",
    "numpy.int32",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_safe_unsafe_casts": {
  "data": {
   "lineno": 2573,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.linspace",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_strided_data_import": {
  "data": {
   "lineno": 2462,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_array_roundtrip",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.util.random_ascii",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_table_batch_empty_dataframe": {
  "data": {
   "lineno": 2532,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_threaded_conversion_multiprocess": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": [
    "multiprocessing.Pool",
    "pyarrow.tests.test_pandas._threaded_conversion"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes": {
  "data": {
   "lineno": 569
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_all_integer_types": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.array",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_all_nulls_cast_numeric": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "_check_type",
    "numpy.array",
    "object",
    "pyarrow.float64",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_all_nulls_cast_numeric._check_type": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_array_from_pandas_type_cast": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "numpy.arange",
    "pyarrow.array",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_multiple_columns": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "numpy.ones",
    "pandas.DataFrame",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_no_nulls": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_nulls": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_nulls_to_float": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.float64",
    "pyarrow.tests.test_pandas._check_array_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_object_nulls": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_objects_to_int": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "object",
    "pandas.Series",
    "pyarrow.ArrowTypeError",
    "pyarrow.int64",
    "pyarrow.tests.test_pandas._check_array_roundtrip",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_to_int": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.int64",
    "pyarrow.tests.test_pandas._check_array_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_no_nulls": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_nulls": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.schema",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_nulls_to_boolean": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.bool_",
    "pyarrow.tests.test_pandas._check_array_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_nulls_to_ints": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.NaN",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_object_nulls": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "object",
    "pandas.DataFrame",
    "pandas.to_numeric",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_with_null_as_integer": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.Table.from_pandas",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.schema",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_half_floats_from_numpy": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.float16",
    "numpy.isnan",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.float16"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_int_object_nulls": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "object",
    "pandas.DataFrame",
    "pandas.to_numeric",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_integer_byteorder": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_integer_no_nulls": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "max",
    "min",
    "numpy.iinfo",
    "numpy.int_",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_integer_with_nulls": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_series_from_pandas_false_respected": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "numpy.isnan",
    "numpy.nan",
    "pandas.Series",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes": {
  "data": {
   "lineno": 1459
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_array_of_bytes_to_strings": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_array_of_bytes_to_strings_bad_data": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pyarrow.array",
    "pyarrow.lib.ArrowInvalid",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_binary_from_bytearray": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "bytearray",
    "pandas.Series",
    "pyarrow.binary",
    "pyarrow.tests.test_pandas._check_series_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_bytes_exceed_2gb": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pyarrow.ChunkedArray",
    "pyarrow.Table.from_pandas",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_bytes_to_binary": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "bytearray",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_fixed_size_bytes": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "bytearray",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_large_binary": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.large_binary",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas._check_series_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_large_string": {
  "data": {
   "lineno": 1534,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.large_string",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas._check_series_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_numpy_string_array_to_fixed_size_binary": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.lib.ArrowInvalid",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_pandas_unicode": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_selective_categoricals": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_table_empty_str": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_table_str_to_categorical_with_na": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_table_str_to_categorical_without_na": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_to_pandas_categorical_zero_length": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_to_pandas_categories_already_dictionary": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_variable_size_bytes": {
  "data": {
   "lineno": 1515,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.binary",
    "pyarrow.tests.test_pandas._check_series_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes": {
  "data": {
   "lineno": 2089
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.int32",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_bad_input": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.array",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.int32",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.struct",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_large": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "check",
    "numpy.dtype",
    "numpy.float64",
    "numpy.nan",
    "numpy.random.random_sample",
    "numpy.zeros",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.struct",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_large.check": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "iter_chunked_array",
    "len",
    "numpy.isnan",
    "print"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_large.iter_chunked_array": {
  "data": {
   "lineno": 2199
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_nested": {
  "data": {
   "lineno": 2155,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool_",
    "numpy.dtype",
    "numpy.int16",
    "numpy.int8",
    "numpy.object_",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_tuples": {
  "data": {
   "lineno": 2249,
   "symbols_in_volume": [
    "numpy.asarray",
    "pandas.DataFrame",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.struct",
    "pyarrow.tests.test_pandas._check_array_roundtrip",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_pandas_roundtrip": {
  "data": {
   "lineno": 2094,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.struct",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_to_pandas": {
  "data": {
   "lineno": 2107,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.int64",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion": {
  "data": {
   "lineno": 2267
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.check_zero_copy_failure": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_dictionaries": {
  "data": {
   "lineno": 2276,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.DictionaryArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_duration": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_bool_types": {
  "data": {
   "lineno": 2310,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_duration_with_nulls": {
  "data": {
   "lineno": 2321,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_list_types": {
  "data": {
   "lineno": 2313,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_object_types": {
  "data": {
   "lineno": 2301,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_timestamp_with_nulls": {
  "data": {
   "lineno": 2317,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_with_float_when_nulls": {
  "data": {
   "lineno": 2307,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_with_int_when_nulls": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_success": {
  "data": {
   "lineno": 2272,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_timestamp": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._Int64Dtype__from_arrow__": {
  "data": {
   "lineno": 3629,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.asarray",
    "numpy.frombuffer",
    "numpy.ones",
    "pandas.arrays.IntegerArray",
    "pyarrow.BooleanArray.from_buffers",
    "pyarrow.bool_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._alltypes_example": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._assert_nunique": {
  "data": {
   "lineno": 2724,
   "symbols_in_volume": [
    "id",
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_array_from_pandas_roundtrip": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_array_roundtrip": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.ma.masked_array",
    "pandas.Series",
    "pandas.isnull",
    "pandas.testing.assert_series_equal",
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_blocks_created": {
  "data": {
   "lineno": 3190,
   "symbols_in_volume": [
    "len",
    "t.to_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_pandas_roundtrip": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch",
    "pyarrow.Table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_serialize_components_roundtrip": {
  "data": {
   "lineno": 2644,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal",
    "pyarrow.default_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_series_roundtrip": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_to_pandas_memory_unchanged": {
  "data": {
   "lineno": 3165,
   "symbols_in_volume": [
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._fully_loaded_dataframe_example": {
  "data": {
   "lineno": 2607,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.array",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.tile",
    "object",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.Series",
    "pandas.__version__",
    "pandas.date_range",
    "pandas.interval_range",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._generate_dedup_example": {
  "data": {
   "lineno": 2719,
   "symbols_in_volume": [
    "pyarrow.tests.util.rands",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._int": {
  "data": {
   "shadows": "pandas.core.internals"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas._non_threaded_conversion": {
  "data": {
   "lineno": 2326,
   "symbols_in_volume": [
    "pyarrow.tests.test_pandas._alltypes_example",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas._pytime_from_micros": {
  "data": {
   "lineno": 2674,
   "symbols_in_volume": [
    "datetime.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._pytime_to_micros": {
  "data": {
   "lineno": 2684
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas._threaded_conversion": {
  "data": {
   "lineno": 2332,
   "symbols_in_volume": [
    "pyarrow.tests.test_pandas._alltypes_example",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.get_logical_type": {
  "data": {
   "shadows": "pyarrow.pandas_compat.get_logical_type"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.make_df_with_timestamps": {
  "data": {
   "lineno": 3984,
   "symbols_in_volume": [
    "numpy.datetime64",
    "numpy.dtype",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.pytestmark": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pyarrow.tests.test_pandas.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.random_ascii": {
  "data": {
   "shadows": "pyarrow.tests.util.random_ascii"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.random_strings": {
  "data": {
   "lineno": 3399,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.rand",
    "numpy.random.randint",
    "object",
    "pyarrow.tests.util.random_ascii",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.rands": {
  "data": {
   "shadows": "pyarrow.tests.util.rands"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.test_array_from_py_float32": {
  "data": {
   "lineno": 3258,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.list_",
    "t"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_integer_object_nulls_option": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_protocol": {
  "data": {
   "lineno": 3547,
   "symbols_in_volume": [
    "TypeError",
    "distutils.version.LooseVersion",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.__version__",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_protocol_pandas_extension_types": {
  "data": {
   "lineno": 3600,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.__version__",
    "pandas.arrays.IntervalArray",
    "pandas.arrays.PeriodArray",
    "pandas.interval_range",
    "pandas.period_range",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.DummyExtensionType",
    "pyarrow.tests.test_pandas.PandasArray__arrow_array__",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_uses_memory_pool": {
  "data": {
   "lineno": 3126,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.bool_",
    "numpy.int64",
    "numpy.random.randint",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.gc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_cast_timestamp_unit": {
  "data": {
   "lineno": 3279,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.now",
    "pandas.Series",
    "pandas.Timestamp",
    "pyarrow.Array.from_pandas",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_conversion_extensiontype_to_extensionarray": {
  "data": {
   "lineno": 3694,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Int64Dtype",
    "pandas.__version__",
    "pandas.array",
    "pandas.core.arrays.integer._IntegerDtype",
    "pandas.core.internals.ExtensionBlock",
    "pandas.testing.assert_frame_equal",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.MyCustomIntegerType",
    "pyarrow.tests.test_pandas._Int64Dtype__from_arrow__",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_convert_to_extension_array": {
  "data": {
   "lineno": 3647,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.__version__",
    "pandas.array",
    "pandas.core.arrays.integer._IntegerDtype",
    "pandas.core.internals.ExtensionBlock",
    "pandas.core.internals.IntBlock",
    "pandas.testing.assert_frame_equal",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_convert_unsupported_type_error_message": {
  "data": {
   "lineno": 2691,
   "symbols_in_volume": [
    "A",
    "TypeError",
    "ValueError",
    "distutils.version.LooseVersion",
    "pandas.DataFrame",
    "pandas.__version__",
    "pandas.period_range",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_convert_unsupported_type_error_message.A": {
  "data": {
   "lineno": 2695
  },
  "type": "class"
 },
 "pyarrow.tests.test_pandas.test_dictionary_encoded_nested_to_pandas": {
  "data": {
   "lineno": 3456,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.ListArray.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_dictionary_from_pandas": {
  "data": {
   "lineno": 3469,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical",
    "pyarrow.array",
    "pyarrow.dictionary",
    "pyarrow.int8",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_dictionary_from_pandas_specified_type": {
  "data": {
   "lineno": 3490,
   "symbols_in_volume": [
    "FutureWarning",
    "numpy.array",
    "object",
    "pandas.Categorical",
    "pandas.Categorical.from_codes",
    "pyarrow.array",
    "pyarrow.dictionary",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_dictionary_with_pandas": {
  "data": {
   "lineno": 3363,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.repeat",
    "numpy.where",
    "object",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.testing.assert_series_equal",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_logical_type": {
  "data": {
   "lineno": 3090,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.pandas_compat.get_logical_type",
    "pyarrow.string",
    "pyarrow.tests.test_pandas.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_metadata_compat_missing_field_name": {
  "data": {
   "lineno": 3932,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "pandas.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_metadata_compat_range_index_pre_0_12": {
  "data": {
   "lineno": 3763,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_object_leak_in_dataframe": {
  "data": {
   "lineno": 3241,
   "symbols_in_volume": [
    "numpy.dtype",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_object_leak_in_numpy_array": {
  "data": {
   "lineno": 3229,
   "symbols_in_volume": [
    "numpy.dtype",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_recordbatch_from_to_pandas": {
  "data": {
   "lineno": 3041,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_recordbatch_table_pass_name_to_pandas": {
  "data": {
   "lineno": 3079,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.table",
    "t",
    "t.to_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_recordbatchlist_to_pandas": {
  "data": {
   "lineno": 3055,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_roundtrip_with_bytes_unicode": {
  "data": {
   "lineno": 2634,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_safe_cast_from_float_with_nans_to_int": {
  "data": {
   "lineno": 2598,
   "symbols_in_volume": [
    "pandas.Series",
    "pyarrow.Array.from_pandas",
    "pyarrow.array",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_serialize_deserialize_empty_pandas": {
  "data": {
   "lineno": 2665,
   "symbols_in_volume": [
    "numpy.float32",
    "pandas.DataFrame",
    "pandas.Series",
    "pyarrow.tests.test_pandas._check_serialize_components_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_serialize_deserialize_pandas": {
  "data": {
   "lineno": 2656,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "numpy.__version__",
    "pyarrow.tests.test_pandas._check_serialize_components_roundtrip",
    "pyarrow.tests.test_pandas._fully_loaded_dataframe_example",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_singleton_blocks_zero_copy": {
  "data": {
   "lineno": 3152,
   "symbols_in_volume": [
    "_check_to_pandas_memory_unchanged",
    "numpy.arange",
    "numpy.int64",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.total_allocated_bytes",
    "t",
    "t.to_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_struct_with_timestamp_tz": {
  "data": {
   "lineno": 3328,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "pandas.Timestamp.now",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_checks_field_nullability": {
  "data": {
   "lineno": 2799,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_columns_and_schema_are_mutually_exclusive": {
  "data": {
   "lineno": 2887,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_columns_argument_only_does_filtering": {
  "data": {
   "lineno": 2860,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_keeps_column_order_of_dataframe": {
  "data": {
   "lineno": 2810,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_keeps_column_order_of_schema": {
  "data": {
   "lineno": 2836,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_keeps_schema_nullability": {
  "data": {
   "lineno": 2904,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_schema_index_columns": {
  "data": {
   "lineno": 2918,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_tuples",
    "pyarrow.Table.from_pandas",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_pandas._check_pandas_roundtrip",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_schema_index_columns__unnamed_index": {
  "data": {
   "lineno": 3008,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Schema.from_pandas",
    "pyarrow.Table.from_pandas",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_schema_with_custom_metadata": {
  "data": {
   "lineno": 3029,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Schema.from_pandas",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_integer_object_nulls_option": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_uses_memory_pool": {
  "data": {
   "lineno": 3213,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.gc",
    "pyarrow.total_allocated_bytes",
    "t",
    "t.to_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_timestamp_as_object_non_nanosecond": {
  "data": {
   "lineno": 4032,
   "symbols_in_volume": [
    "datetime.datetime",
    "isinstance",
    "object",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_timestamp_as_object_out_of_range": {
  "data": {
   "lineno": 4023,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_pandas.make_df_with_timestamps"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_timestamp_as_object_parquet": {
  "data": {
   "lineno": 4010,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_pandas.make_df_with_timestamps",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_date_time": {
  "data": {
   "lineno": 2772,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.array",
    "pyarrow.tests.test_pandas._assert_nunique",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_integers_as_objects": {
  "data": {
   "lineno": 2755,
   "symbols_in_volume": [
    "list",
    "numpy.random.randint",
    "pyarrow.array",
    "pyarrow.tests.test_pandas._assert_nunique"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_strings_array_types": {
  "data": {
   "lineno": 2728,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_pandas._assert_nunique",
    "pyarrow.tests.test_pandas._generate_dedup_example",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_strings_table_types": {
  "data": {
   "lineno": 2740,
   "symbols_in_volume": [
    "len",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.tests.test_pandas._assert_nunique",
    "pyarrow.tests.test_pandas._generate_dedup_example"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_extension_dtypes_mapping": {
  "data": {
   "lineno": 3731,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "isinstance",
    "numpy.dtype",
    "pandas.DataFrame",
    "pandas.Int64Dtype",
    "pandas.PeriodDtype",
    "pandas.__version__",
    "pandas.array",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.table",
    "pyarrow.tests.test_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_self_destruct": {
  "data": {
   "lineno": 3195,
   "symbols_in_volume": [
    "_make_table",
    "pyarrow.tests.test_pandas._check_to_pandas_memory_unchanged",
    "t"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_self_destruct._make_table": {
  "data": {
   "lineno": 3198,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.array",
    "pyarrow.table",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_split_blocks": {
  "data": {
   "lineno": 3173,
   "symbols_in_volume": [
    "_check_blocks_created",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_pandas._check_to_pandas_memory_unchanged",
    "range",
    "t"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_variable_dictionary_to_pandas": {
  "data": {
   "lineno": 3412,
   "symbols_in_volume": [
    "len",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.testing.assert_series_equal",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.concat_arrays",
    "pyarrow.tests.test_pandas.random_strings"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_pandas.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.tm": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_pandas.tzst": {
  "data": {
   "shadows": "hypothesis.extra.pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas",
    "pandas.testing",
    "pyarrow.parquet",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_parquet.FileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.S3FSWrapper": {
  "data": {
   "shadows": "pyarrow.filesystem.S3FSWrapper"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.SUPPORTED_COMPRESSIONS": {
  "data": {
   "lineno": 700
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet._assert_dataset_is_picklable": {
  "data": {
   "lineno": 3305,
   "symbols_in_volume": [
    "is_pickleable",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._assert_dataset_is_picklable.is_pickleable": {
  "data": {
   "lineno": 3306
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._assert_dataset_paths": {
  "data": {
   "lineno": 2596,
   "symbols_in_volume": [
    "map",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._check_roundtrip": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._roundtrip_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._close": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "abs",
    "pyarrow.float32",
    "pyarrow.float64",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._filter_partition": {
  "data": {
   "lineno": 2356,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "numpy.ones",
    "pandas.Timestamp",
    "pyarrow.tests.test_parquet.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories": {
  "data": {
   "lineno": 2231,
   "symbols_in_volume": [
    "_visit_level",
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories._visit_level": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "_filter_partition",
    "_visit_level",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.util.guid",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._make_dataset_for_pickling": {
  "data": {
   "lineno": 3277,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.parquet.write_metadata",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._make_example_multifile_dataset": {
  "data": {
   "lineno": 2584,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet._partition_test_for_filesystem": {
  "data": {
   "lineno": 2192,
   "symbols_in_volume": [
    "_generate_partition_directories",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "numpy.tile",
    "object",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.parquet.ParquetDataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._random_integers": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.iinfo",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._read_table": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyarrow.parquet.read_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._roundtrip_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_table": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._simple_table_roundtrip": {
  "data": {
   "lineno": 3048,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._simple_table_write_read": {
  "data": {
   "lineno": 3825,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pyarrow.tests.test_parquet._random_integers",
    "pyarrow.tests.util.rands",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_read_common_metadata_files": {
  "data": {
   "lineno": 2269,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.write_metadata",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions": {
  "data": {
   "lineno": 2870,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_to_dataset",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions": {
  "data": {
   "lineno": 2813,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_metadata",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.tests.test_parquet.os",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._write_table": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.pandas_compat._pandas_api.is_data_frame",
    "pyarrow.parquet.write_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.alltypes_sample": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.datadir": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.ds": {
  "data": {
   "shadows": "pyarrow.dataset"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.guid": {
  "data": {
   "shadows": "pyarrow.util.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.make_sample_file": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Table",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.parametrize_legacy_dataset": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.parametrize_legacy_dataset_fixed": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.parametrize_legacy_dataset_not_supported": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pytestmark": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.s3_bucket": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.s3_example": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.tests.test_parquet.s3_bucket",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_column_metadata_handling": {
  "data": {
   "lineno": 3252,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.date_range",
    "pandas.testing.assert_frame_equal",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet.datadir",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_multi_level_named": {
  "data": {
   "lineno": 3193,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.testing.assert_frame_equal",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet.datadir",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_multi_level_some_named": {
  "data": {
   "lineno": 3222,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.testing.assert_frame_equal",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet.datadir",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_naming": {
  "data": {
   "lineno": 3170,
   "symbols_in_volume": [
    "pandas.read_csv",
    "pandas.testing.assert_frame_equal",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet.datadir",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_binary_array_overflow_to_chunked": {
  "data": {
   "lineno": 3075,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pyarrow.ChunkedArray",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._simple_table_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_buffer_contents": {
  "data": {
   "lineno": 4093,
   "symbols_in_volume": [
    "array_factory",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_builtin_pickle_dataset": {
  "data": {
   "lineno": 3324,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._assert_dataset_is_picklable",
    "pyarrow.tests.test_parquet._make_dataset_for_pickling",
    "pyarrow.tests.test_parquet.pickle",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_byte_array_exactly_2gb": {
  "data": {
   "lineno": 3055,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._simple_table_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_byte_stream_split": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "IOError",
    "float",
    "int",
    "list",
    "map",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_categorical_index_survives_roundtrip": {
  "data": {
   "lineno": 3790,
   "symbols_in_volume": [
    "isinstance",
    "pandas.CategoricalIndex",
    "pandas.DataFrame",
    "pyarrow.BufferOutputStream",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_categorical_order_survives_roundtrip": {
  "data": {
   "lineno": 3807,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_chunked_table_write": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "dataframe_with_lists",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_cloudpickle_dataset": {
  "data": {
   "lineno": 3331,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._assert_dataset_is_picklable",
    "pyarrow.tests.test_parquet._make_dataset_for_pickling",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_coerce_timestamps": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_coerce_timestamps_truncated": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_arrays": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "dataframe_with_arrays",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_lists": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "dataframe_with_lists",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compare_schemas": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.parquet.ColumnSchema",
    "pyarrow.parquet.ParquetSchema",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.make_sample_file",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compression_level": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "int",
    "list",
    "map",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_create_parquet_dataset_multi_threaded": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "_partition_test_for_filesystem",
    "len",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.ParquetManifest",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_enable_buffered_stream": {
  "data": {
   "lineno": 2516,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_memory_map": {
  "data": {
   "lineno": 2497,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_partitioning": {
  "data": {
   "lineno": 4145,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.dataset.partitioning",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_dictionary": {
  "data": {
   "lineno": 3649,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.tests.util.rands",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas": {
  "data": {
   "lineno": 2464,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas_common_metadata": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Index",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_metadata",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_unsupported_keywords": {
  "data": {
   "lineno": 4123,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.read_table",
    "pyarrow.schema",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "pandas.Timestamp",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_datetime_timezone_tzinfo": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_decimal_roundtrip": {
  "data": {
   "lineno": 3338,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.tests.util.randdecimal",
    "pyarrow.tests.util.random_seed",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_decimal_roundtrip_negative_scale": {
  "data": {
   "lineno": 3366,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.ArrowException",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.decimal",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dictionary_array_automatically_read": {
  "data": {
   "lineno": 3834,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.random.randint",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._simple_table_write_read",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_direct_read_dictionary": {
  "data": {
   "lineno": 3623,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.tests.util.rands",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_direct_read_dictionary_subfield": {
  "data": {
   "lineno": 3675,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.ListArray.from_arrays",
    "pyarrow.array",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.tests.util.rands",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_directory": {
  "data": {
   "lineno": 2708,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset_fixed"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_lists_table_roundtrip": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_row_groups": {
  "data": {
   "lineno": 3486,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.ParquetWriter",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_table_no_columns": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_table_roundtrip": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.Table.from_pandas",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_enable_buffered_stream": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "open",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_fastparquet_cross_compatibility": {
  "data": {
   "lineno": 4045,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "object",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.date_range",
    "pandas.testing.assert_frame_equal",
    "pyarrow.parquet.read_pandas",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_field_id_metadata": {
  "data": {
   "lineno": 3861,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_file_with_over_int16_max_row_groups": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "list",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filter_before_validate_schema": {
  "data": {
   "lineno": 4021,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.chunked_array",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_cutoff_exclusive_datetime": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "_generate_partition_directories",
    "numpy.arange",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_cutoff_exclusive_integer": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "_generate_partition_directories",
    "int",
    "map",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_equivalency": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "NotImplementedError",
    "_generate_partition_directories",
    "numpy.array",
    "numpy.tile",
    "object",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_inclusive_integer": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "_generate_partition_directories",
    "int",
    "map",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_inclusive_set": {
  "data": {
   "lineno": 1958,
   "symbols_in_volume": [
    "_generate_partition_directories",
    "numpy.array",
    "numpy.tile",
    "object",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_invalid_column": {
  "data": {
   "lineno": 2042,
   "symbols_in_volume": [
    "ValueError",
    "_generate_partition_directories",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset_fixed",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_invalid_pred_op": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "ValueError",
    "_generate_partition_directories",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_read_table": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "_generate_partition_directories",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.read_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_fixed_size_binary": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_parquet._check_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_custom_prefixes": {
  "data": {
   "lineno": 2684,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset_fixed",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_hidden_files_dot": {
  "data": {
   "lineno": 2622,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._assert_dataset_paths",
    "pyarrow.tests.test_parquet._make_example_multifile_dataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_hidden_files_underscore": {
  "data": {
   "lineno": 2642,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._assert_dataset_paths",
    "pyarrow.tests.test_parquet._make_example_multifile_dataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_no_private_directories_in_base_path": {
  "data": {
   "lineno": 2662,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._assert_dataset_paths",
    "pyarrow.tests.test_parquet._make_example_multifile_dataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_private_directories": {
  "data": {
   "lineno": 2604,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._assert_dataset_paths",
    "pyarrow.tests.test_parquet._make_example_multifile_dataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_index_column_name_duplicate": {
  "data": {
   "lineno": 3121,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_list_records": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "list",
    "map",
    "numpy.random.randint",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._check_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_table_int32_overflow": {
  "data": {
   "lineno": 3035,
   "symbols_in_volume": [
    "numpy.iinfo",
    "numpy.ones",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_list_of_binary_large_cell": {
  "data": {
   "lineno": 3100,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._simple_table_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_list_of_datetime_time_roundtrip": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_lz4_compression_disabled": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.BufferOutputStream",
    "pyarrow.array",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_memory_map": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "open",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_merging_parquet_tables_with_different_pandas_metadata": {
  "data": {
   "lineno": 3457,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.uint8",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_min_chunksize": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multi_dataset_metadata": {
  "data": {
   "lineno": 3940,
   "symbols_in_volume": [
    "open",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multiindex_duplicate_values": {
  "data": {
   "lineno": 2722,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_arrays",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multiple_path_types": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multithreaded_read": {
  "data": {
   "lineno": 1473,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_nested_list_nonnullable_roundtrip_bug": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.list_",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_noncoerced_nanoseconds_written_without_exception": {
  "data": {
   "lineno": 2770,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "pandas.DataFrame",
    "pandas.date_range",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_can_write_nested_data": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pyarrow.BufferOutputStream",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.os",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_categorical_na_type_row_groups": {
  "data": {
   "lineno": 3899,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.BufferOutputStream",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_categorical_roundtrip": {
  "data": {
   "lineno": 3919,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.Categorical.from_codes",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset_not_supported",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_roundtrip": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_roundtrip": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_roundtrip_read_pandas_no_index_written": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_column_multiindex": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "list",
    "pandas.MultiIndex.from_tuples",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.lib.Codec.is_available",
    "pyarrow.tests.test_parquet.SUPPORTED_COMPRESSIONS",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_custom_metadata": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_metadata",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.json",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_datetime_tz": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_empty_roundtrip": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_column_statistics_api": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "_close",
    "chr",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.schema",
    "pyarrow.tests.test_parquet.make_sample_file",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_file_pass_directory_instead_of_file": {
  "data": {
   "lineno": 3504,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet.os",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_file_too_small": {
  "data": {
   "lineno": 3773,
   "symbols_in_volume": [
    "OSError",
    "open",
    "pyarrow.ArrowInvalid",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_incremental_file_build": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_invalid_version": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_api": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "dict",
    "int",
    "isinstance",
    "len",
    "numpy.random.randint",
    "pyarrow.parquet.ColumnChunkMetaData",
    "pyarrow.parquet.RowGroupMetaData",
    "pyarrow.parquet.Statistics",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.make_sample_file",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_lifetime": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_table",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_nested_convenience": {
  "data": {
   "lineno": 3147,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_basics": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDatasetPiece",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_open_and_get_metadata": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Table",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.FileMetaData",
    "pyarrow.parquet.ParquetDatasetPiece",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_read": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDatasetPiece",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_raise_on_unset_statistics": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.NaT",
    "pandas.Series",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet.make_sample_file",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_read_from_buffer": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_version_timestamp_differences": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.Timestamp",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_write_disable_statistics": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.parquet.read_metadata",
    "pyarrow.tests.test_parquet._write_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_context_obj": {
  "data": {
   "lineno": 3381,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_context_obj_with_exception": {
  "data": {
   "lineno": 3408,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem": {
  "data": {
   "lineno": 3513,
   "symbols_in_volume": [
    "CustomFS",
    "ValueError",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem.CustomFS": {
  "data": {
   "lineno": 3518,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem.CustomFS.__init__": {
  "data": {
   "lineno": 3519
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem.CustomFS.open": {
  "data": {
   "lineno": 3523
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_keys_with_underscores": {
  "data": {
   "lineno": 2104,
   "symbols_in_volume": [
    "_generate_partition_directories",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset_fixed",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_set_dictionary_type": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.IntegerArray",
    "pyarrow.StringArray",
    "pyarrow.parquet.PartitionSet",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partitioned_dataset": {
  "data": {
   "lineno": 3591,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_table",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pass_separate_metadata": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.read_metadata",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_column_invalid_index": {
  "data": {
   "lineno": 3610,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "pyarrow.BufferOutputStream",
    "pyarrow.array",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_common_metadata_files": {
  "data": {
   "lineno": 2300,
   "symbols_in_volume": [
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.tests.test_parquet._test_read_common_metadata_files",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_metadata_files": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.write_metadata",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files": {
  "data": {
   "lineno": 2372,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "pyarrow.Table.from_arrays",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.localfs.read_parquet",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.util.guid",
    "range",
    "read_multiple_files"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files.read_multiple_files": {
  "data": {
   "lineno": 2400,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_row_groups": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_row_groups_with_column_subset": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "list",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_non_existent_file": {
  "data": {
   "lineno": 2795,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_pandas_column_subset": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_pandas",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_columns_selection": {
  "data": {
   "lineno": 1726,
   "symbols_in_volume": [
    "_partition_test_for_filesystem",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "_partition_test_for_filesystem",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory_s3fs": {
  "data": {
   "lineno": 2175,
   "symbols_in_volume": [
    "_partition_test_for_filesystem",
    "pyarrow.filesystem.S3FSWrapper",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.tests.test_parquet.s3_example"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_schema": {
  "data": {
   "lineno": 2335,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_schema",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group_with_column_subset": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "list",
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_table_doesnt_warn": {
  "data": {
   "lineno": 2804,
   "symbols_in_volume": [
    "len",
    "pyarrow.parquet.read_table",
    "pyarrow.tests.test_parquet.datadir",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_sanitized_spark_field_names": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._roundtrip_table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_scan_contents": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_set_data_page_size": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "map",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_spark_flavor_preserves_pandas_metadata": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandas.testing.assert_frame_equal",
    "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_special_chars_filename": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_parquet._read_table",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_statistics_convert_logical_types": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.utf8",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_table_large_metadata": {
  "data": {
   "lineno": 4084,
   "symbols_in_volume": [
    "numpy.arange",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._check_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_timestamp_restore_timezone": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_validate_schema_write_table": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.parquet.ParquetWriter",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_error_deletes_incomplete_file": {
  "data": {
   "lineno": 2745,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.date_range",
    "pyarrow.ArrowException",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_parquet._write_table",
    "pyarrow.tests.test_parquet.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_metadata": {
  "data": {
   "lineno": 3983,
   "symbols_in_volume": [
    "RuntimeError",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.write_metadata",
    "pyarrow.parquet.write_table",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_nested_zero_length_array_chunk_failure": {
  "data": {
   "lineno": 3562,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_parquet._check_roundtrip",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_metadata": {
  "data": {
   "lineno": 3708,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.pytest",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_no_partitions": {
  "data": {
   "lineno": 2935,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_pandas_preserve_extensiondtypes": {
  "data": {
   "lineno": 2973,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "pandas.DataFrame",
    "pandas.__version__",
    "pandas.testing.assert_frame_equal",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_pandas_preserve_index": {
  "data": {
   "lineno": 3005,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.testing.assert_frame_equal",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.table",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions": {
  "data": {
   "lineno": 2906,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_custom_filenames": {
  "data": {
   "lineno": 2941,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.write_to_dataset",
    "pyarrow.tests.test_parquet.os",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_custom_filenames.partition_filename_callback": {
  "data": {
   "lineno": 2953
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_index_name": {
  "data": {
   "lineno": 2926,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_schema": {
  "data": {
   "lineno": 2912,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest",
    "pyarrow.timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_writing_empty_lists": {
  "data": {
   "lineno": 3555,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.tests.test_parquet._check_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_zlib_compression_bug": {
  "data": {
   "lineno": 3444,
   "symbols_in_volume": [
    "pandas.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parametrize_legacy_dataset",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.tm": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.EXTERNAL_STORE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.setup_method": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.EXTERNAL_STORE",
    "pyarrow.tests.test_plasma.USE_VALGRIND"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.teardown_method": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.signal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.test_eviction": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.USE_VALGRIND",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient._client_blocked_in_get": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient._client_get_multiple": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.USE_VALGRIND"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.USE_VALGRIND",
    "pyarrow.tests.test_plasma.signal",
    "pyarrow.tests.test_plasma.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_buffer_lifetime": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_death_during_get": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.multiprocessing",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.tests.test_plasma.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_getting_multiple_objects": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.tests.test_plasma.multiprocessing",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.tests.test_plasma.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.plasma.connect",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_and_seal": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pyarrow.plasma.PlasmaObjectExists",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_plasma.create_object_with_id",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "Exception",
    "illegal_assignment",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random_object_id",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.pickle",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pyarrow.plasma.ObjectNotAvailable",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "bytes",
    "deserialize_or_output",
    "isinstance",
    "pyarrow.plasma.ObjectNotAvailable",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer.deserialize_or_output": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pyarrow.deserialize",
    "pyarrow.plasma.ObjectNotAvailable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "CustomType",
    "pyarrow.ArrowSerializationError",
    "pyarrow.SerializationContext",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "data": {
   "lineno": 343
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.ipc.get_tensor_size",
    "pyarrow.ipc.read_tensor",
    "pyarrow.ipc.write_tensor",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "assert_create_raises_plasma_full",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE",
    "pyarrow.tests.test_plasma.create_object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.create_object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_socket": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.tests.test_plasma.struct",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_use_full_memory": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.plasma.PlasmaStoreFull",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.USE_VALGRIND": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.create_object_with_id",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.write_to_data_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.tests.test_plasma.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "pyarrow.plasma.ObjectID"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.test_object_id_equality_operators": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_randomness": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.subprocess",
    "pyarrow.tests.test_plasma.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_size": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_client_sharing": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_list": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_store_capacity": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_use_huge_pages": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.os",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_plasma_tf_op.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "FromPlasma",
    "ToPlasma",
    "numpy.array_equal",
    "numpy.ones",
    "numpy.random.bytes",
    "numpy.random.randn",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.FromPlasma": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.ToPlasma": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.test_plasma_tf_op": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pyarrow.plasma",
    "pyarrow.plasma.build_plasma_tensorflow_op",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.plasma.tf_plasma_op",
    "pyarrow.tests.test_plasma_tf_op.pytest",
    "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype",
    "tensorflow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_scalars.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.test_basics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "FutureWarning",
    "hash",
    "isinstance",
    "numpy.float16",
    "pyarrow.BinaryScalar",
    "pyarrow.BinaryValue",
    "pyarrow.BooleanScalar",
    "pyarrow.BooleanValue",
    "pyarrow.Date32Scalar",
    "pyarrow.Date32Value",
    "pyarrow.DoubleScalar",
    "pyarrow.DoubleValue",
    "pyarrow.DurationScalar",
    "pyarrow.DurationValue",
    "pyarrow.FloatScalar",
    "pyarrow.FloatValue",
    "pyarrow.HalfFloatScalar",
    "pyarrow.HalfFloatValue",
    "pyarrow.Int16Scalar",
    "pyarrow.Int16Value",
    "pyarrow.Int32Scalar",
    "pyarrow.Int32Value",
    "pyarrow.Int64Scalar",
    "pyarrow.Int64Value",
    "pyarrow.Int8Scalar",
    "pyarrow.Int8Value",
    "pyarrow.LargeListScalar",
    "pyarrow.LargeListValue",
    "pyarrow.ListScalar",
    "pyarrow.ListValue",
    "pyarrow.StringScalar",
    "pyarrow.StringValue",
    "pyarrow.StructScalar",
    "pyarrow.StructValue",
    "pyarrow.Time64Scalar",
    "pyarrow.Time64Value",
    "pyarrow.TimestampScalar",
    "pyarrow.TimestampValue",
    "pyarrow.UInt16Scalar",
    "pyarrow.UInt16Value",
    "pyarrow.UInt32Scalar",
    "pyarrow.UInt32Value",
    "pyarrow.UInt64Scalar",
    "pyarrow.UInt64Value",
    "pyarrow.UInt8Scalar",
    "pyarrow.UInt8Value",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.tests.test_scalars.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_binary": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BinaryScalar",
    "pyarrow.Buffer",
    "pyarrow.LargeBinaryScalar",
    "pyarrow.binary",
    "pyarrow.large_binary",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_bool": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BooleanScalar",
    "pyarrow.scalar",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_cast": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_date": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_decimal": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ArrowInvalid",
    "pyarrow.Decimal128Scalar",
    "pyarrow.decimal128",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.decimal",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_dictionary": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "FutureWarning",
    "enumerate",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.tests.test_scalars.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_scalars.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration_nanos_nopandas": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration_nanos_pandas": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Timedelta",
    "pyarrow.array",
    "pyarrow.duration",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_fixed_size_binary": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ArrowInvalid",
    "pyarrow.FixedSizeBinaryScalar",
    "pyarrow.binary",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_fixed_size_list": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "pyarrow.FixedSizeListScalar",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_hashing": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pyarrow.array",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.LargeListScalar",
    "pyarrow.ListScalar",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.scalar",
    "pyarrow.string",
    "pyarrow.tests.test_scalars.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list_from_numpy": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.scalar"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list_from_pandas": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "pandas.Series",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.decimal128",
    "pyarrow.list_",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.decimal",
    "pyarrow.tests.test_scalars.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_map": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.MapScalar",
    "pyarrow.int8",
    "pyarrow.map_",
    "pyarrow.scalar",
    "pyarrow.string",
    "pyarrow.tests.test_scalars.pytest",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_null_singleton": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError",
    "pyarrow.NullScalar",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_nulls": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.scalar"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_numerics": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "OverflowError",
    "isinstance",
    "numpy.float16",
    "pyarrow.DoubleScalar",
    "pyarrow.HalfFloatScalar",
    "pyarrow.Int64Scalar",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_string": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.LargeStringScalar",
    "pyarrow.StringScalar",
    "pyarrow.large_string",
    "pyarrow.scalar",
    "pyarrow.string",
    "pyarrow.tests.test_scalars.pytest",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_struct": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "len",
    "list",
    "pyarrow.FloatScalar",
    "pyarrow.Int16Scalar",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.scalar",
    "pyarrow.struct",
    "pyarrow.tests.test_scalars.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_time": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Timestamp",
    "pandas.date_range",
    "pyarrow.Array.from_pandas",
    "pyarrow.tests.test_scalars.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp_nanos_nopandas": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.tests.test_scalars.pytest",
    "pyarrow.tests.test_scalars.pytz",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp_no_overflow": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pyarrow.scalar",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.tests.test_scalars.pytz",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_schema.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.test_empty_table": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Table",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_flatten": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_from_numpy_dtype": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "bool",
    "numpy.dtype",
    "numpy.unicode",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.duration",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.from_numpy_dtype",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_constructor_errors": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Schema",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_duplicate_fields": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equality_operators": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_invalid_type": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_propagates_check_metadata": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_mapping": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "len",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_pandas": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.Int32Dtype",
    "pandas.__version__",
    "pandas.array",
    "pyarrow.Schema.from_pandas",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_schema.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_tuples": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_get_fields": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_merge": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.bool_",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.unify_schemas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_sizeof": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_to_string_with_metadata": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "len",
    "pyarrow.field",
    "pyarrow.schema",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_comparisons": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_for_alias": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.duration",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.type_for_alias",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "factory",
    "getattr",
    "pyarrow",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_schema_pickling": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pyarrow.Field",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.map_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_schema.pickle",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype_check_import": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.tests.util.invoke_script"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.normal",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros",
    "object",
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Baz",
    "pyarrow.tests.test_serialization.CustomError",
    "pyarrow.tests.test_serialization.Foo",
    "pyarrow.tests.test_serialization.NamedTupleExample",
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
    "pyarrow.tests.test_serialization.Point",
    "pyarrow.tests.test_serialization.Qux",
    "pyarrow.tests.test_serialization.SubQux",
    "pyarrow.tests.test_serialization.SubQuxPickle",
    "pyarrow.tests.test_serialization.collections",
    "pyarrow.tests.test_serialization.make_serialization_context",
    "pyarrow.tests.test_serialization.string",
    "pyarrow.tests.test_serialization.sys",
    "range",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "data": {
   "lineno": 194
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CUSTOM_OBJECTS": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "data": {
   "lineno": 177
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.NamedTupleExample": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Point": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "data": {
   "lineno": 203
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Serializable": {
  "data": {
   "lineno": 954
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Serializable"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass.__init__": {
  "data": {
   "lineno": 969
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization._check_component_roundtrip": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pyarrow.SerializedPyObject.from_components",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.global_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.__name__",
    "numpy.testing.assert_equal",
    "print",
    "pyarrow.Array",
    "pyarrow.RecordBatch",
    "pyarrow.SparseCOOTensor",
    "pyarrow.SparseCSCMatrix",
    "pyarrow.SparseCSFTensor",
    "pyarrow.SparseCSRMatrix",
    "pyarrow.Table",
    "pyarrow.Tensor",
    "pyarrow.lib.is_named_tuple",
    "pyarrow.tests.test_serialization.torch",
    "range",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.coo_matrix": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.csc_matrix": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.csr_matrix": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.deserialize_regex": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "pyarrow.deserialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.deserialize_serializable": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.global_serialization_context": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.index_types": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.large_buffer": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.default_serialization_context",
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Baz",
    "pyarrow.tests.test_serialization.CustomError",
    "pyarrow.tests.test_serialization.Foo",
    "pyarrow.tests.test_serialization.NamedTupleExample",
    "pyarrow.tests.test_serialization.Point",
    "pyarrow.tests.test_serialization.Qux",
    "pyarrow.tests.test_serialization.SubQux",
    "pyarrow.tests.test_serialization.SubQuxPickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "_check_component_roundtrip",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.global_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialize_serializable": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.sparse": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.tensor_types": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.memory_map",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_memory_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "BufferClass",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.BufferClass": {
  "data": {
   "lineno": 853
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.deserialize_buffer_class": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.serialize_buffer_class": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.Foo": {
  "data": {
   "lineno": 297
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_deserializer": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_serializer": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.CUSTOM_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_datetime_serialization": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.datetime",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_default_dict_serialization": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.collections",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_buffer_in_different_process": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "pyarrow.py_buffer",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.tempfile",
    "pyarrow.tests.util.invoke_script"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_components_in_different_process": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "print",
    "pyarrow.array",
    "pyarrow.int8",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pickle",
    "pyarrow.tests.test_serialization.subprocess",
    "pyarrow.tests.test_serialization.sys",
    "pyarrow.tests.util.get_modified_env_with_pythonpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.deserialize_regex",
    "pyarrow.tests.test_serialization.re",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_empty_tensor": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.testing.assert_array_equal",
    "pyarrow.deserialize",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "SubFoo",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo.__init__": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_integer_limits": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "dt",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.ArrowInvalid",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_base_object": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "open",
    "pyarrow.OSFile",
    "pyarrow.read_serialized",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.global_serialization_context",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.matrix",
    "numpy.random.randint",
    "open",
    "pyarrow.OSFile",
    "pyarrow.read_serialized",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.os",
    "pyarrow.tests.test_serialization.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType": {
  "data": {
   "lineno": 806
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType.__init__": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randint",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "CustomNDArray",
    "numpy.alltrue",
    "numpy.ndarray",
    "numpy.zeros",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray.__new__": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.deserializer": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.serializer": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_path_objects": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.pathlib",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_broken": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_notbroken": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pyarrow_objects_serialization": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_arrays",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.array",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pydata_sparse_sparse_coo_tensor_serialization": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.sparse"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_coo_tensor_serialization": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_csc_matrix_serialization": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest",
    "scipy.sparse.csc_matrix"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_csr_matrix_serialization": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "TempClass",
    "TypeError",
    "pyarrow.DeserializationCallbackError",
    "pyarrow.SerializationCallbackError",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "data": {
   "lineno": 903
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass2": {
  "data": {
   "lineno": 924
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "DummyClass",
    "pyarrow.default_serialization_context",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.DummyClass": {
  "data": {
   "lineno": 494
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.deserialize_dummy_class": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.serialize_dummy_class": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_determinism": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_read_concatenated_records": {
  "data": {
   "lineno": 1053,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.read_serialized",
    "pyarrow.serialize_to"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "ClassA",
    "Exception",
    "numpy.array",
    "object",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects.ClassA": {
  "data": {
   "lineno": 1196
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialize_subclasses": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "pyarrow.default_serialization_context",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Serializable",
    "pyarrow.tests.test_serialization.SerializableClass",
    "pyarrow.tests.test_serialization.deserialize_serializable",
    "pyarrow.tests.test_serialization.serialize_serializable",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "pyarrow.tests.test_serialization.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_components_invalid_cases": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.deserialize_components",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "pyarrow.SerializationContext",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.Foo": {
  "data": {
   "lineno": 1102
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps1": {
  "data": {
   "lineno": 1112
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps2": {
  "data": {
   "lineno": 1126
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads1": {
  "data": {
   "lineno": 1115
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads2": {
  "data": {
   "lineno": 1129
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_coo_tensor_components_serialization": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "pyarrow.SparseCOOTensor.from_numpy",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_coo_tensor_serialization": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCOOTensor",
    "pyarrow.SparseCOOTensor.from_numpy",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csc_matrix_components_serialization": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "pyarrow.SparseCSCMatrix.from_numpy",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csc_matrix_serialization": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSCMatrix",
    "pyarrow.SparseCSCMatrix.from_numpy",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csf_tensor_components_serialization": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "pyarrow.SparseCSFTensor.from_numpy",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csf_tensor_serialization": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.dtype",
    "pyarrow.SparseCSFTensor",
    "pyarrow.SparseCSFTensor.from_numpy",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csr_matrix_components_serialization": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "pyarrow.SparseCSRMatrix.from_numpy",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csr_matrix_serialization": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSRMatrix",
    "pyarrow.SparseCSRMatrix.from_numpy",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.index_types",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.tensor_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_tensor_alignment": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "len",
    "numpy.random.normal",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_cuda": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_serialization": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pyarrow.default_serialization_context",
    "pyarrow.register_torch_serialization_handlers",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.torch": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_sparse_tensor.coo_matrix": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.csr_matrix": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.sparse": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.test_dense_to_sparse_tensor": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCOOTensor",
    "pyarrow.SparseCSCMatrix",
    "pyarrow.SparseCSFTensor",
    "pyarrow.SparseCSRMatrix",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_pydata_sparse_sparse_coo_tensor_roundtrip": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCOOTensor.from_pydata_sparse",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.sparse",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_base_object": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.SparseCOOTensor.from_dense_numpy",
    "pyarrow.tests.test_sparse_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_from_dense": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCOOTensor.from_dense_numpy",
    "pyarrow.SparseCOOTensor.from_tensor",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCOOTensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_scipy_roundtrip": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "pyarrow.SparseCOOTensor.from_scipy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_base_object": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.SparseCSFTensor.from_dense_numpy",
    "pyarrow.tests.test_sparse_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_from_dense_numpy": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSFTensor.from_dense_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_from_dense_tensor": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSFTensor.from_tensor",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSFTensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_base_object": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.SparseCSRMatrix.from_dense_numpy",
    "pyarrow.tests.test_sparse_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_from_dense": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSRMatrix.from_dense_numpy",
    "pyarrow.SparseCSRMatrix.from_tensor",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_numpy_roundtrip": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseCSRMatrix.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_scipy_roundtrip": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "pyarrow.SparseCSRMatrix.from_scipy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_attrs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.SparseCOOTensor",
    "pyarrow.SparseCSCMatrix",
    "pyarrow.SparseCSFTensor",
    "pyarrow.SparseCSRMatrix",
    "pyarrow.tests.test_sparse_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "eq",
    "ne",
    "numpy.ascontiguousarray",
    "numpy.random.randn",
    "pyarrow.SparseCOOTensor",
    "pyarrow.SparseCSCMatrix",
    "pyarrow.SparseCSFTensor",
    "pyarrow.SparseCSRMatrix",
    "pyarrow.tests.test_sparse_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.eq": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.ne": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_strategies.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.test_arrays": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Array",
    "pyarrow.tests.strategies.all_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_chunked_arrays": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.ChunkedArray",
    "pyarrow.tests.strategies.all_chunked_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_fields": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Field",
    "pyarrow.tests.strategies.all_fields"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_record_batches": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.RecordBatch",
    "pyarrow.tests.strategies.all_record_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_schemas": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Schema",
    "pyarrow.tests.strategies.all_schemas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_tables": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Table",
    "pyarrow.tests.strategies.all_tables"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_types": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.DataType",
    "pyarrow.tests.strategies.all_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_table.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table._table_like_slice_tests": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "IndexError",
    "factory",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.test_chunked_array_asarray": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dtype",
    "numpy.isnan",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_basics": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "object.__sizeof__",
    "pyarrow.binary",
    "pyarrow.chunked_array",
    "pyarrow.lib.Int64Array",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.tests.test_table.sys",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "eq",
    "ne",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.eq": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.ne": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_flatten": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_getitem": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_iter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "isinstance",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_mismatch_types": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_pickle": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_table.pickle",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_str": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas_preserve_name": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandas.Categorical",
    "pandas.Series",
    "pandas.date_range",
    "pandas.testing.assert_series_equal",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_different_schema_metadata": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_promotion": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "pyarrow.float32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_promotion_error": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "pyarrow.float32",
    "pyarrow.int64",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_factory_functions_invalid_input": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.record_batch",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_from_arrays_schema": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "klass",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float32",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp",
    "pyarrow.types.is_float32",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_invalid_table_construct": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint8",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.lib.ArrowInvalid",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict",
    "dict",
    "len",
    "object.__sizeof__",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.tests.test_table.sys",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_column_sets_private_name": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_equals": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_invalid_names": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_lengths": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_schema": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.list_",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_struct_array": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.RecordBatch.from_struct_array",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.int32",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_struct_array_invalid": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.RecordBatch.from_struct_array",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_no_fields": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_pickle": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pickle",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.tests.test_table._table_like_slice_tests"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_take": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_slice_zero_length_table": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.string",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict",
    "dict",
    "len",
    "object.__sizeof__",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.tests.test_table.sys",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_cast_to_incompatible_schema": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_sets_private_name": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_with_duplicates": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_combine_chunks": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_drop": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_equals": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args_pandas": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_flatten": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_invalid_names": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_preserves_column_metadata": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "dict",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_batches_and_schema": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_lists": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.uint16",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pandas_schema": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp",
    "pyarrow.types.is_float32",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "pyarrow.Table.from_pydict",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_arrow_arrays": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "collections.OrderedDict",
    "klass",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp",
    "pyarrow.types.is_float32",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_schema": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "KeyError",
    "collections.OrderedDict",
    "klass",
    "list",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_function_unicode_schema": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_get_field": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pickle": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pickle",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column_empty": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_rename_columns": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_repr_to_string": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.table",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_safe_casting": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select_column": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_set_column": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_slice_getitem": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "pyarrow.table",
    "pyarrow.tests.test_table._table_like_slice_tests"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_non_consecutive": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_null_index": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_vanilla_functionality": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_to_batches": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "iter",
    "len",
    "list",
    "map",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_unsafe_casting": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.tm": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.tensor_type_pairs": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.ipc.get_tensor_size",
    "pyarrow.ipc.read_tensor",
    "pyarrow.ipc.write_tensor",
    "pyarrow.memory_map",
    "pyarrow.tests.test_tensor.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "eq",
    "ne",
    "numpy.ascontiguousarray",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.eq": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.ne": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_hashing": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "numpy.arange",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_read_from_compressed": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.input_stream",
    "pyarrow.ipc.read_tensor",
    "pyarrow.ipc.write_tensor",
    "pyarrow.output_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.ipc.read_tensor",
    "pyarrow.ipc.write_tensor",
    "pyarrow.tests.test_tensor.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.ipc.read_tensor",
    "pyarrow.ipc.write_tensor",
    "pyarrow.tests.test_tensor.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_memoryview": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "memoryview",
    "numpy.arange",
    "numpy.float16",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint64",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.tests.test_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.ipc.get_tensor_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_types.Iterator": {
  "data": {
   "shadows": "collections.abc.Iterator"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.get_many_types": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.decimal128",
    "pyarrow.dictionary",
    "pyarrow.duration",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.large_binary",
    "pyarrow.large_list",
    "pyarrow.large_string",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.map_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.test_bit_width": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.decimal128",
    "pyarrow.float16",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_overflow": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.decimal128",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_properties": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "pyarrow.decimal128"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_ordered_equals": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "pyarrow.dictionary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_type": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.dictionary",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_duration": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.duration",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_exact_primitive_types": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "check_func",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.types.is_date32",
    "pyarrow.types.is_date64",
    "pyarrow.types.is_float16",
    "pyarrow.types.is_float32",
    "pyarrow.types.is_float64",
    "pyarrow.types.is_int16",
    "pyarrow.types.is_int32",
    "pyarrow.types.is_int64",
    "pyarrow.types.is_int8",
    "pyarrow.types.is_time32",
    "pyarrow.types.is_time64",
    "pyarrow.types.is_uint16",
    "pyarrow.types.is_uint32",
    "pyarrow.types.is_uint64",
    "pyarrow.types.is_uint8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_add_remove_metadata": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.tests.test_types.collections",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_basic": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.field",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equality_operators": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equals": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_metadata": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_modified_copies": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fields_hashable": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_binary_byte_width": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_list_type": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.FixedSizeListType",
    "pyarrow.float64",
    "pyarrow.list_",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_hashing": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "hash",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.lists",
    "len",
    "pyarrow.tests.strategies.all_fields",
    "pyarrow.tests.strategies.all_schemas",
    "pyarrow.tests.strategies.all_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_binary_string": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.string",
    "pyarrow.types.is_binary",
    "pyarrow.types.is_fixed_size_binary",
    "pyarrow.types.is_large_binary",
    "pyarrow.types.is_large_string",
    "pyarrow.types.is_string",
    "pyarrow.types.is_unicode"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.int8",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean_value": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.bool_",
    "pyarrow.types.is_boolean_value"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_decimal": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyarrow.decimal128",
    "pyarrow.int32",
    "pyarrow.types.is_decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_dictionary": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyarrow.dictionary",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.types.is_dictionary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_float_value": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "numpy.float64",
    "pyarrow.types.is_float_value"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_floating": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.types.is_floating"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_signed_integer",
    "pyarrow.types.is_unsigned_integer",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer_value": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "numpy.int64",
    "pyarrow.types.is_integer_value"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_list": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.types.is_fixed_size_list",
    "pyarrow.types.is_large_list",
    "pyarrow.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_map": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.map_",
    "pyarrow.struct",
    "pyarrow.types.is_map",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_nested_or_struct": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.types.is_nested",
    "pyarrow.types.is_struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_null": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.types.is_null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_primitive": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.types.is_primitive"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_temporal_date_time_timestamp": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.duration",
    "pyarrow.int32",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.types.is_date",
    "pyarrow.types.is_duration",
    "pyarrow.types.is_temporal",
    "pyarrow.types.is_time",
    "pyarrow.types.is_timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_union": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.types.is_union",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_key_value_metadata": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "collections.abc.Iterator",
    "isinstance",
    "len",
    "list",
    "pyarrow.KeyValueMetadata",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_key_value_metadata_duplicates": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.KeyValueMetadata",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_large_list_type": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.LargeListType",
    "pyarrow.large_list",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_list_type": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.ListType",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_map_type": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.MapType",
    "pyarrow.int32",
    "pyarrow.map_",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_null_field_may_not_be_non_nullable": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.field",
    "pyarrow.null",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_pickling": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "hypothesis.example",
    "hypothesis.given",
    "pyarrow.field",
    "pyarrow.null",
    "pyarrow.tests.strategies.all_fields",
    "pyarrow.tests.strategies.all_schemas",
    "pyarrow.tests.strategies.all_types",
    "pyarrow.tests.test_types.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_duplicate_field_names": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "KeyError",
    "UserWarning",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.struct",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_type": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "collections.OrderedDict",
    "len",
    "list",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.struct",
    "pyarrow.tests.test_types.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time32_units": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time64_units": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_timestamp": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_equality_operators": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_types.get_many_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_id": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pyarrow.tests.test_types.get_many_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_hashable": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "enumerate",
    "hash",
    "len",
    "pyarrow.tests.test_types.get_many_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_picklable": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "pyarrow.tests.test_types.get_many_types",
    "pyarrow.tests.test_types.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "check_fields",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type.check_fields": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.util.changed_environ": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyarrow.tests.util.contextlib",
    "pyarrow.tests.util.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.util.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.util.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.util.get_modified_env_with_pythonpath": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pyarrow.__file__",
    "pyarrow.tests.util.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.invoke_script": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyarrow.tests.util.get_modified_env_with_pythonpath",
    "pyarrow.tests.util.os",
    "pyarrow.tests.util.subprocess",
    "pyarrow.tests.util.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.make_dataframe": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.tests.util.rands",
    "pyarrow.tests.util.string",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "_get_use",
    "_leak_check",
    "f",
    "pyarrow.tests.util.psutil",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check._get_use": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "getattr",
    "pyarrow.tests.util.gc"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check._leak_check": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception",
    "_get_use"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.util.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.util.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.util.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "pyarrow.tests.util.randdecimal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.util.decimal",
    "pyarrow.tests.util.random",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.util.random_ascii": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bytes",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.random_seed": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyarrow.tests.util.contextlib",
    "pyarrow.tests.util.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.rands": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.random.choice",
    "numpy.str_",
    "pyarrow.tests.util.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.randsign": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.tests.util.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}