{
 "pyarrow.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.arrow_7980": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.timestamp"
  ],
  "type": "module"
 },
 "pyarrow.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "hypothesis.Verbosity.verbose",
   "hypothesis.settings.load_profile",
   "hypothesis.settings.register_profile",
   "os.environ.get"
  ],
  "type": "module"
 },
 "pyarrow.tests.conftest.PyArrowConfig": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.conftest.PyArrowConfig.__init__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.PyArrowConfig.apply_mark": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.PyArrowConfig.requires": {
  "lineno": 190,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.datadir": {
  "lineno": 224,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.hdfs_connection": {
  "lineno": 232,
  "symbols_in_volume": [
   "os.environ.get",
   "pytest.fixture",
   "pytest.mark.hdfs"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_addoption.bool_env": {
  "lineno": 158,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.s3_connection": {
  "lineno": 241,
  "symbols_in_volume": [
   "pyarrow.util.find_free_port",
   "pytest.fixture",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.s3_server": {
  "lineno": 249,
  "symbols_in_volume": [
   "os.environ.copy",
   "pytest.fixture",
   "pytest.skip",
   "subprocess.Popen",
   "tempfile.TemporaryDirectory"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.tempdir": {
  "lineno": 218,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.deserialize_buffer": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.deserialize",
   "sys.argv"
  ],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "lineno": 26,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "lineno": 83,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "datetime.date",
   "datetime.time",
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies": {
  "lineno": null,
  "symbols_in_volume": [
   "hypothesis.extra.pytz.timezones",
   "hypothesis.strategies.builds",
   "hypothesis.strategies.characters",
   "hypothesis.strategies.dictionaries",
   "hypothesis.strategies.integers",
   "hypothesis.strategies.just",
   "hypothesis.strategies.one_of",
   "hypothesis.strategies.sampled_from",
   "hypothesis.strategies.text",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.duration",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.large_binary",
   "pyarrow.large_string",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "module"
 },
 "pyarrow.tests.strategies.arrays": {
  "lineno": 152,
  "symbols_in_volume": [
   "hypothesis.assume",
   "hypothesis.extra.numpy.arrays",
   "hypothesis.reject",
   "hypothesis.strategies.SearchStrategy",
   "hypothesis.strategies.binary",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.dates",
   "hypothesis.strategies.datetimes",
   "hypothesis.strategies.just",
   "hypothesis.strategies.lists",
   "hypothesis.strategies.none",
   "hypothesis.strategies.text",
   "hypothesis.strategies.timedeltas",
   "hypothesis.strategies.times",
   "numpy.insert",
   "numpy.isnan",
   "numpy.uint8",
   "pyarrow.DataType",
   "pyarrow.LargeListArray",
   "pyarrow.ListArray",
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.types.is_binary",
   "pyarrow.types.is_boolean",
   "pyarrow.types.is_date",
   "pyarrow.types.is_decimal",
   "pyarrow.types.is_duration",
   "pyarrow.types.is_floating",
   "pyarrow.types.is_integer",
   "pyarrow.types.is_large_binary",
   "pyarrow.types.is_large_list",
   "pyarrow.types.is_large_string",
   "pyarrow.types.is_list",
   "pyarrow.types.is_null",
   "pyarrow.types.is_string",
   "pyarrow.types.is_struct",
   "pyarrow.types.is_time",
   "pyarrow.types.is_timestamp",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.chunked_arrays": {
  "lineno": 221,
  "symbols_in_volume": [
   "hypothesis.assume",
   "hypothesis.strategies.SearchStrategy",
   "hypothesis.strategies.composite",
   "hypothesis.strategies.lists",
   "pyarrow.chunked_array",
   "pyarrow.types.is_struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.complex_types": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.strategies.fields": {
  "lineno": 104,
  "symbols_in_volume": [
   "hypothesis.strategies.booleans",
   "hypothesis.strategies.builds",
   "pyarrow.field"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.list_types": {
  "lineno": 109,
  "symbols_in_volume": [
   "hypothesis.strategies.builds",
   "pyarrow.large_list",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_complex_types": {
  "lineno": 132,
  "symbols_in_volume": [
   "hypothesis.strategies.recursive"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_list_types": {
  "lineno": 124,
  "symbols_in_volume": [
   "hypothesis.strategies.recursive"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_struct_types": {
  "lineno": 128,
  "symbols_in_volume": [
   "hypothesis.strategies.recursive"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.record_batches": {
  "lineno": 235,
  "symbols_in_volume": [
   "hypothesis.strategies.SearchStrategy",
   "hypothesis.strategies.composite",
   "pyarrow.RecordBatch.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.schemas": {
  "lineno": 136,
  "symbols_in_volume": [
   "hypothesis.strategies.builds",
   "hypothesis.strategies.lists",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.struct_types": {
  "lineno": 116,
  "symbols_in_volume": [
   "hypothesis.strategies.builds",
   "hypothesis.strategies.lists",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.strategies.tables": {
  "lineno": 251,
  "symbols_in_volume": [
   "hypothesis.strategies.SearchStrategy",
   "hypothesis.strategies.composite",
   "pyarrow.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_adhoc_memory_leak": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_deserialize_pandas_arrow_7956": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.rands",
   "pyarrow.tests.util.memory_leak_check",
   "pytest.mark.memory_leak",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_deserialize_pandas_arrow_7956.action": {
  "lineno": 37,
  "symbols_in_volume": [
   "pyarrow.ipc.deserialize_pandas",
   "pyarrow.ipc.serialize_pandas",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array": {
  "lineno": null,
  "symbols_in_volume": [
   "pickle5",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.mark.parametrize"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "lineno": 1010,
  "symbols_in_volume": [
   "pyarrow.Array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_conversions_no_sentinel_values": {
  "lineno": 1721,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_diff": {
  "lineno": 432,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_eq": {
  "lineno": 487,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "lineno": 469,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type.MyObject": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_from_buffers": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.uint8",
   "pyarrow.Array.from_buffers",
   "pyarrow.int16",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_dictionary_scalar": {
  "lineno": 343,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.repeat"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_different_numpy_datetime_units_raises": {
  "lineno": 1843,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pyarrow.ArrowNotImplementedError",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_invalid_dim_raises": {
  "lineno": 2023,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_large_pyints": {
  "lineno": 2519,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_list_of_timestamps": {
  "lineno": 1857,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pyarrow.array",
   "pyarrow.timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_masked": {
  "lineno": 2005,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ma.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_ascii": {
  "lineno": 1924,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetime": {
  "lineno": 1820,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetimeD": {
  "lineno": 1812,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.date32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_str_utf8": {
  "lineno": 2420,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_timedelta": {
  "lineno": 1881,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "pyarrow.DurationArray",
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_timedelta_incorrect_unit": {
  "lineno": 1909,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.timedelta64",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_unicode": {
  "lineno": 1953,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_scalar": {
  "lineno": 300,
  "symbols_in_volume": [
   "datetime.date.today",
   "datetime.datetime.now",
   "datetime.timedelta",
   "pyarrow.array",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.large_list",
   "pyarrow.null",
   "pyarrow.nulls",
   "pyarrow.repeat",
   "pyarrow.scalar",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_shrunken_masked": {
  "lineno": 2016,
  "symbols_in_volume": [
   "numpy.ma.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_strided_bool": {
  "lineno": 2034,
  "symbols_in_volume": [
   "numpy.ones",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_timestamp_with_generic_unit": {
  "lineno": 1871,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pyarrow.ArrowNotImplementedError",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_getitem": {
  "lineno": 356,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_iter": {
  "lineno": 451,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_masked": {
  "lineno": 2507,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle": {
  "lineno": 1637,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle5": {
  "lineno": 1668,
  "symbols_in_volume": [
   "pickle",
   "pickle.HIGHEST_PROTOCOL",
   "pickle5",
   "pyarrow.array",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle_dictionary": {
  "lineno": 1647,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol": {
  "lineno": 2526,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.float64",
   "pyarrow.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray": {
  "lineno": 2528,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__arrow_array__": {
  "lineno": 2532,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__init__": {
  "lineno": 2529,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2": {
  "lineno": 2565,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2.__arrow_array__": {
  "lineno": 2569,
  "symbols_in_volume": [
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2.__init__": {
  "lineno": 2566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid": {
  "lineno": 2553,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__arrow_array__": {
  "lineno": 2557,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__init__": {
  "lineno": 2554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_ref_to_ndarray_base": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "lineno": 370,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice_negative_step": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_all_null": {
  "lineno": 1991,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_non_string": {
  "lineno": 1985,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_uint64_from_py_over_range": {
  "lineno": 1715,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.uint64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_asarray": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dtype",
   "numpy.isnan",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.lib.Int64Value",
   "pytest.mark.nopandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_format": {
  "lineno": 101,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels": {
  "lineno": 1762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels._check_case": {
  "lineno": 1764,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_total_values_length": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_boolean_true_count_false_count": {
  "lineno": 2045,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_nested": {
  "lineno": 2089,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.struct",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_primitive": {
  "lineno": 2052,
  "symbols_in_volume": [
   "numpy.int8",
   "pyarrow.array",
   "pyarrow.int16",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_binary_to_utf8": {
  "lineno": 1557,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.string",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array": {
  "lineno": 1094,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array_empty": {
  "lineno": 1104,
  "symbols_in_volume": [
   "pyarrow.chunked_array",
   "pyarrow.dictionary",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date32_to_int": {
  "lineno": 1532,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date64_to_int": {
  "lineno": 1577,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_dictionary": {
  "lineno": 1368,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_duration_to_int": {
  "lineno": 1548,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.duration"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_from_null": {
  "lineno": 1314,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.decimal128",
   "pyarrow.dictionary",
   "pyarrow.duration",
   "pyarrow.field",
   "pyarrow.float16",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.large_list",
   "pyarrow.lib.UnionMode_DENSE",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.timestamp",
   "pyarrow.uint8",
   "pyarrow.union",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_identities": {
  "lineno": 1599,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "lineno": 1035,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.uint16",
   "pyarrow.uint8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "lineno": 1121,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.int16",
   "pyarrow.uint16"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_list_to_primitive": {
  "lineno": 1071,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.int8",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_none": {
  "lineno": 1063,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "lineno": 1302,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.uint16",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_string_to_number_roundtrip": {
  "lineno": 1352,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int8",
   "pyarrow.uint64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time32_to_int": {
  "lineno": 1505,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.time32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time64_to_int": {
  "lineno": 1514,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_to_int": {
  "lineno": 1523,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_chunked_array_data_warns": {
  "lineno": 1115,
  "symbols_in_volume": [
   "pyarrow.ChunkedArray",
   "pyarrow.chunked_array",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array": {
  "lineno": 2578,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.concat_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array_different_types": {
  "lineno": 2584,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.concat_arrays",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_constructor_raises": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyarrow.Array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_date64_from_builtin_datetime": {
  "lineno": 1587,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_decimal": {
  "lineno": 1267,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.decimal128",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_non_integer": {
  "lineno": 1232,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.ArrowInvalid",
   "pyarrow.decimal128",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_safe": {
  "lineno": 1169,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.decimal128",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_value_out_of_bounds": {
  "lineno": 1195,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.array",
   "pyarrow.ArrowInvalid",
   "pyarrow.decimal128",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_simple": {
  "lineno": 1439,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.large_binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_sliced": {
  "lineno": 1465,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.large_string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_zero_length": {
  "lineno": 1497,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_arrays_boundscheck": {
  "lineno": 681,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "lineno": 665,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_indices": {
  "lineno": 702,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_empty_cast": {
  "lineno": 2379,
  "symbols_in_volume": [
   "itertools.product",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.lib.ArrowNotImplementedError",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_fixed_size_list_array_flatten": {
  "lineno": 2270,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_fixed_size_list_from_arrays": {
  "lineno": 807,
  "symbols_in_volume": [
   "pyarrow.FixedSizeListArray.from_arrays",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_safe": {
  "lineno": 1138,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_unsafe": {
  "lineno": 1151,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ArrowInvalid",
   "pyarrow.int32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NULL": {
  "lineno": 43,
  "symbols_in_volume": [
   "pyarrow.Int64Scalar",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_infer_type_masked": {
  "lineno": 2492,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.infer_type",
   "pyarrow.null",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_construction": {
  "lineno": 2142,
  "symbols_in_volume": [
   "pyarrow.Tensor",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_constructor_repr": {
  "lineno": 2136,
  "symbols_in_volume": [
   "pyarrow.Tensor",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten": {
  "lineno": 2147,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten_non_canonical": {
  "lineno": 2231,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.py_buffer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_values_offsets_sliced": {
  "lineno": 2251,
  "symbols_in_volume": [
   "pyarrow.LargeListArray",
   "pyarrow.ListArray",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_child_overflow_to_chunked": {
  "lineno": 2485,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.mark.large_memory",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "lineno": 57,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "lineno": 710,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pyarrow.LargeListArray",
   "pyarrow.ListArray",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_buffers": {
  "lineno": 555,
  "symbols_in_volume": [
   "pyarrow.Array.from_buffers",
   "pyarrow.array",
   "pyarrow.int16",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_value_lengths": {
  "lineno": 2217,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_value_parent_indices": {
  "lineno": 2203,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "lineno": 87,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_map_from_arrays": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "pyarrow.MapArray.from_arrays",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.int32",
   "pyarrow.map_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nbytes_sizeof": {
  "lineno": 2124,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nested_dictionary_array": {
  "lineno": 2410,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.ListArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nulls": {
  "lineno": 281,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int8",
   "pyarrow.null",
   "pyarrow.nulls",
   "pyarrow.string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_numpy_binary_overflow_to_chunked": {
  "lineno": 2446,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ChunkedArray",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.utf8",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_index": {
  "lineno": 1801,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Index",
   "pyarrow.array",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_raise_error": {
  "lineno": 1772,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.duration",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pickling": {
  "lineno": 1656,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.integers",
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.tests.strategies.all_types",
   "pyarrow.tests.strategies.arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_safe_cast_nan_to_int_raises": {
  "lineno": 1295,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_slice_chunked_array_zero_chunks": {
  "lineno": 1082,
  "symbols_in_volume": [
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_binary_from_buffers": {
  "lineno": 520,
  "symbols_in_volume": [
   "pyarrow.Array.from_buffers",
   "pyarrow.StringArray.from_buffers",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_field": {
  "lineno": 2345,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.lib.FloatArray",
   "pyarrow.lib.Int16Array",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_flatten": {
  "lineno": 2307,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_slice": {
  "lineno": 460,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int8",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_arrays": {
  "lineno": 598,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_buffers": {
  "lineno": 577,
  "symbols_in_volume": [
   "pyarrow.Array.from_buffers",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.struct",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_time32_time64_from_integer": {
  "lineno": 1735,
  "symbols_in_volume": [
   "datetime.time",
   "pyarrow.array",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_datetime64": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array",
   "pyarrow.timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_dictionary": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_roundtrip": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.testing.assert_array_equal",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_timedelta64": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_unsupported_types": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_writable": {
  "lineno": 172,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_zero_copy": {
  "lineno": 127,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_timezone": {
  "lineno": 2589,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "lineno": 213,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.array",
   "pytest.mark.pandas",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_slice": {
  "lineno": 991,
  "symbols_in_volume": [
   "pyarrow.UnionArray.from_dense",
   "pyarrow.UnionArray.from_sparse",
   "pyarrow.array",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_to_pylist_with_nulls": {
  "lineno": 969,
  "symbols_in_volume": [
   "pyarrow.UnionArray.from_dense",
   "pyarrow.UnionArray.from_sparse",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense": {
  "lineno": 826,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.UnionArray.from_dense",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense.check_result": {
  "lineno": 834,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse": {
  "lineno": 900,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.UnionArray.from_sparse",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse.check_result": {
  "lineno": 908,
  "symbols_in_volume": [
   "pyarrow.ArrowTypeError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_simple": {
  "lineno": 1387,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.large_binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_value_counts_dictionary_type": {
  "lineno": 1424,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_value_counts_simple": {
  "lineno": 1402,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.large_binary",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_view": {
  "lineno": 1378,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_builder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_builder.test_string_builder_append": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.Array",
   "pyarrow.lib.StringBuilder"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_after_finish": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.lib.StringBuilder"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_values": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.lib.StringBuilder"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.cffi.ffi",
   "pytest.mark.skipif",
   "pytest.raises"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_cffi.test_export_import_array": {
  "lineno": 73,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.Array._import_from_c",
   "pyarrow.array",
   "pyarrow.cffi.ffi.cast",
   "pyarrow.cffi.ffi.new",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch": {
  "lineno": 152,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.RecordBatch._import_from_c",
   "pyarrow.cffi.ffi.cast",
   "pyarrow.cffi.ffi.new",
   "pyarrow.int32",
   "pyarrow.total_allocated_bytes",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch.make_batch": {
  "lineno": 163,
  "symbols_in_volume": [
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch.make_schema": {
  "lineno": 159,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_schema": {
  "lineno": 118,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.Schema._import_from_c",
   "pyarrow.cffi.ffi.cast",
   "pyarrow.cffi.ffi.new",
   "pyarrow.int32",
   "pyarrow.total_allocated_bytes",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_schema.make_schema": {
  "lineno": 123,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_type": {
  "lineno": 40,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.DataType._import_from_c",
   "pyarrow.cffi.ffi.cast",
   "pyarrow.cffi.ffi.new",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.total_allocated_bytes",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.binary",
   "pyarrow.compute.__dict__.items",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.struct",
   "pyarrow.uint16",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_compute.find_new_unicode_codepoints": {
  "lineno": 123,
  "symbols_in_volume": [
   "functools.lru_cache",
   "pyarrow.array",
   "pyarrow.compute.utf8_is_printable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_add": {
  "lineno": 517,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute.add"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_multiply": {
  "lineno": 533,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute.multiply"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_subtract": {
  "lineno": 525,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute.subtract"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_call_function_with_memory_pool": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.compute.call_function",
   "pyarrow.default_memory_pool"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_array": {
  "lineno": 442,
  "symbols_in_volume": [
   "pyarrow.compute.equal",
   "pyarrow.compute.greater",
   "pyarrow.compute.greater_equal",
   "pyarrow.compute.less",
   "pyarrow.compute.less_equal",
   "pyarrow.compute.not_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_array.con": {
  "lineno": 447,
  "symbols_in_volume": [
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_chunked_array_mixed": {
  "lineno": 501,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.compute.equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_scalar": {
  "lineno": 471,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute.equal",
   "pyarrow.compute.greater",
   "pyarrow.compute.greater_equal",
   "pyarrow.compute.less",
   "pyarrow.compute.less_equal",
   "pyarrow.compute.not_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_scalar.con": {
  "lineno": 476,
  "symbols_in_volume": [
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_exported_functions": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null": {
  "lineno": 562,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int8",
   "pyarrow.null",
   "pyarrow.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null_array": {
  "lineno": 575,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.scalar",
   "pyarrow.types.is_unsigned_integer",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null_chunked_array": {
  "lineno": 596,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.scalar",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter": {
  "lineno": 347,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_chunked_array": {
  "lineno": 370,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_errors": {
  "lineno": 423,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.record_batch",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_record_batch": {
  "lineno": 389,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_table": {
  "lineno": 404,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_is_null": {
  "lineno": 541,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.compute.is_null",
   "pyarrow.compute.is_valid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_match_substring": {
  "lineno": 112,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute.match_substring"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_string_py_compat_boolean": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum_array": {
  "lineno": 80,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.compute.sum",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum_chunked_array": {
  "lineno": 90,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.compute.sum",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take": {
  "lineno": 244,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.int8",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_dictionary": {
  "lineno": 336,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_indices_types": {
  "lineno": 270,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.float32",
   "pyarrow.float64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_on_chunked_array": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt.__int__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyDate": {
  "lineno": 862,
  "symbols_in_volume": [
   "datetime.date"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyDatetime": {
  "lineno": 866,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__int__": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyTimedelta": {
  "lineno": 870,
  "symbols_in_volume": [
   "datetime.timedelta"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_deque": {
  "lineno": 136,
  "symbols_in_volume": [
   "collections.deque"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_dict_values": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_list": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_numpy_array": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_tuple": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes": {
  "lineno": 658,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.check_struct_type": {
  "lineno": 69,
  "symbols_in_volume": [
   "pyarrow.types.is_struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_array_ignore_nan_from_pandas": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_array_mixed_unicode_bytes": {
  "lineno": 679,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.large_binary",
   "pyarrow.large_string",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_broken_integers": {
  "lineno": 376,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pytest.raises",
   "traceback.format_tb"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_convert_with_mask": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_date32_overflow": {
  "lineno": 787,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pyarrow.date32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing": {
  "lineno": 874,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "datetime.timedelta",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.duration",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_decimal_array_with_none_and_nan": {
  "lineno": 1403,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.decimal128",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_auto_coerce_from_integer": {
  "lineno": 462,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_integer_coerce_representable_range": {
  "lineno": 481,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_iterable": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_list": {
  "lineno": 185,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_range": {
  "lineno": 1208,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "lineno": 751,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.binary",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_float32_integer_coerce_representable_range": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.float32",
   "pyarrow.array",
   "pyarrow.float32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_garbage_collection": {
  "lineno": 441,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.array",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_infinite_iterator": {
  "lineno": 119,
  "symbols_in_volume": [
   "itertools.count",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterable_types": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterator_without_size": {
  "lineno": 110,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_array": {
  "lineno": 684,
  "symbols_in_volume": [
   "math.ceil",
   "pyarrow.Array",
   "pyarrow.array",
   "pyarrow.large_binary",
   "pyarrow.large_string",
   "pytest.mark.large_memory",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_value": {
  "lineno": 697,
  "symbols_in_volume": [
   "math.ceil",
   "pyarrow.Array",
   "pyarrow.array",
   "pyarrow.large_binary",
   "pyarrow.large_string",
   "pytest.mark.large_memory",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_overflow": {
  "lineno": 98,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_underflow": {
  "lineno": 104,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_types": {
  "lineno": 92,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_list_with_non_list": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_map_from_dicts": {
  "lineno": 1429,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.int32",
   "pyarrow.map_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_map_from_tuples": {
  "lineno": 1460,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.int32",
   "pyarrow.map_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_mixed_sequence_errors": {
  "lineno": 514,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.float32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_multidimensional_ndarray_as_nested_list": {
  "lineno": 602,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pyarrow.array",
   "pyarrow.infer_type",
   "pyarrow.int64",
   "pyarrow.list_",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_ndarray_nested_numpy_double": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "pyarrow.array",
   "pyarrow.float64",
   "pyarrow.list_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_arrays": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_fixed_size_list": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_large_lists": {
  "lineno": 210,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int16",
   "pyarrow.large_list"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_lists": {
  "lineno": 194,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_different_dtypes": {
  "lineno": 631,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.uint32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_in_object_array": {
  "lineno": 575,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "numpy.int64",
   "pyarrow.array",
   "pyarrow.infer_type",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_numpy_scalars_mixed_type": {
  "lineno": 386,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.int32",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_range_types": {
  "lineno": 1202,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_all_none": {
  "lineno": 274,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_boolean": {
  "lineno": 165,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_bytes": {
  "lineno": 711,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.large_binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_custom_integers": {
  "lineno": 368,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date": {
  "lineno": 757,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.array",
   "pyarrow.date32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal": {
  "lineno": 1143,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_different_precisions": {
  "lineno": 1150,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_from_integers": {
  "lineno": 1188,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_large_integer": {
  "lineno": 1180,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_negative": {
  "lineno": 1166,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_scale": {
  "lineno": 1159,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_whole_part": {
  "lineno": 1173,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_too_high_precision": {
  "lineno": 1196,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_double": {
  "lineno": 453,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration": {
  "lineno": 1010,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.timedelta64",
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_from_int_with_unit": {
  "lineno": 1046,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_nested_lists": {
  "lineno": 1057,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pyarrow.array",
   "pyarrow.duration",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_nested_lists_numpy": {
  "lineno": 1074,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "numpy.timedelta64",
   "pyarrow.array",
   "pyarrow.duration",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_with_unit": {
  "lineno": 1028,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_explicit_types": {
  "lineno": 770,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_fixed_size_bytes": {
  "lineno": 742,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer": {
  "lineno": 283,
  "symbols_in_volume": [
   "numpy.iinfo",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_inferred": {
  "lineno": 330,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_nested_np_nan": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.list_",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_np_nan": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.nan",
   "pyarrow.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_fails": {
  "lineno": 1129,
  "symbols_in_volume": [
   "pyarrow.ArrowTypeError",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_with_specified_type_fails": {
  "lineno": 1135,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_nesting_levels": {
  "lineno": 1095,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.ArrowTypeError",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_boolean": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.bool",
   "pyarrow.array",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_double": {
  "lineno": 525,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.isnan",
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.iinfo",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer_inferred": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.iinfo",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_timestamp": {
  "lineno": 814,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp": {
  "lineno": 794,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit": {
  "lineno": 956,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.timestamp",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit.CustomClass": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_nanoseconds": {
  "lineno": 939,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.pandas_compat._pandas_api.have_pandas",
   "pyarrow.timestamp",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_unit": {
  "lineno": 834,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_types": {
  "lineno": 157,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_unicode": {
  "lineno": 649,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_utf8_to_unicode": {
  "lineno": 728,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.large_string",
   "pyarrow.string",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_signed_integer_overflow": {
  "lineno": 407,
  "symbols_in_volume": [
   "pyarrow",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts": {
  "lineno": 1243,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_bytes_keys": {
  "lineno": 1268,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_inference": {
  "lineno": 1330,
  "symbols_in_volume": [
   "numpy.empty",
   "pyarrow.ArrowInvalid",
   "pyarrow.ArrowTypeError",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_mixed_sequence": {
  "lineno": 1319,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_tuples": {
  "lineno": 1285,
  "symbols_in_volume": [
   "numpy.empty",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray": {
  "lineno": 1216,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int64",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray_from_arrays_coerce": {
  "lineno": 1379,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_timezone_string": {
  "lineno": 1418,
  "symbols_in_volume": [
   "pyarrow.lib.string_to_tzinfo",
   "pyarrow.lib.tzinfo_to_string",
   "pytest.mark.parametrize",
   "pytz.FixedOffset",
   "pytz.timezone",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_uint64_max_convert": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.iinfo",
   "numpy.uint64",
   "pyarrow.array",
   "pyarrow.uint64",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_unsigned_integer_overflow": {
  "lineno": 417,
  "symbols_in_volume": [
   "pyarrow",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.check_names": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.read_bytes": {
  "lineno": 208,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_auto_dict_encode": {
  "lineno": 537,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.dictionary",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_bom": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types": {
  "lineno": 645,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.ArrowInvalid",
   "pyarrow.bool_",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.decimal128",
   "pyarrow.float32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types_with_column_names": {
  "lineno": 686,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.csv.ReadOptions",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_bools": {
  "lineno": 624,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_nulls": {
  "lineno": 586,
  "symbols_in_volume": [
   "pyarrow.csv.ConvertOptions",
   "pyarrow.int64",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_empty_lines": {
  "lineno": 718,
  "symbols_in_volume": [
   "pyarrow.csv.ParseOptions",
   "pyarrow.csv.ReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_file_object": {
  "lineno": 215,
  "symbols_in_volume": [
   "io.BytesIO",
   "io.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header": {
  "lineno": 226,
  "symbols_in_volume": [
   "pyarrow.Table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_autogenerate_column_names": {
  "lineno": 339,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.csv.ReadOptions",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_column_names": {
  "lineno": 288,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.csv.ReadOptions",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_skip_rows": {
  "lineno": 253,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.csv.ReadOptions",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_columns": {
  "lineno": 364,
  "symbols_in_volume": [
   "pyarrow.csv.ConvertOptions",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_missing_columns": {
  "lineno": 393,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.csv.ReadOptions",
   "pyarrow.int32",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_invalid_csv": {
  "lineno": 739,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_no_ending_newline": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_one_chunk": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_options_delimiter": {
  "lineno": 751,
  "symbols_in_volume": [
   "pyarrow.csv.ParseOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_ints": {
  "lineno": 438,
  "symbols_in_volume": [
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_nulls": {
  "lineno": 468,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_timestamps": {
  "lineno": 491,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_varied": {
  "lineno": 452,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_small_random_csv": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_block_sizes": {
  "lineno": 772,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_convert_options_blowup": {
  "lineno": 786,
  "symbols_in_volume": [
   "pyarrow.csv.ConvertOptions",
   "pyarrow.string",
   "time.thread_time",
   "time.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_timestamp_parsers": {
  "lineno": 503,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.csv.ISO8601",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_trivial": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.read_csv": {
  "lineno": 1141,
  "symbols_in_volume": [
   "pyarrow.ArrowNotImplementedError",
   "pyarrow.csv.read_csv",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.setUp": {
  "lineno": 1135,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.tearDown": {
  "lineno": 1138,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.test_random_csv": {
  "lineno": 1147,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead": {
  "lineno": 831,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.check_reader": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.open_bytes": {
  "lineno": 833,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_column_options": {
  "lineno": 976,
  "symbols_in_volume": [
   "pyarrow.csv.ConvertOptions",
   "pyarrow.csv.ReadOptions",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_empty_file": {
  "lineno": 972,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_encoding": {
  "lineno": 1041,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.csv.ReadOptions",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_file_object": {
  "lineno": 845,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_header": {
  "lineno": 854,
  "symbols_in_volume": [
   "pyarrow.null",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_inference": {
  "lineno": 862,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.csv.ReadOptions",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_inference_failure": {
  "lineno": 883,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions",
   "pyarrow.int64",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_invalid_csv": {
  "lineno": 922,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.csv.ReadOptions",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_no_ending_newline": {
  "lineno": 960,
  "symbols_in_volume": [
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_options_delimiter": {
  "lineno": 943,
  "symbols_in_volume": [
   "pyarrow.csv.ParseOptions",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_small_random_csv": {
  "lineno": 1071,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_stress_block_sizes": {
  "lineno": 1079,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead": {
  "lineno": 1179,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead.write_file": {
  "lineno": 1182,
  "symbols_in_volume": [
   "bz2.BZ2File"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead": {
  "lineno": 1158,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.test_concatenated": {
  "lineno": 1165,
  "symbols_in_volume": [
   "gzip.open",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.write_file": {
  "lineno": 1161,
  "symbols_in_volume": [
   "gzip.open"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead": {
  "lineno": 821,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead.read_csv": {
  "lineno": 823,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions",
   "pyarrow.csv.read_csv"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead": {
  "lineno": 811,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead.read_csv": {
  "lineno": 813,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions",
   "pyarrow.csv.read_csv"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead": {
  "lineno": 1097,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.open_csv": {
  "lineno": 1099,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions",
   "pyarrow.csv.open_csv"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.test_batch_lifetime": {
  "lineno": 1104,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.csv.ReadOptions",
   "pyarrow.total_allocated_bytes",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.test_batch_lifetime.check_one_batch": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_csv.check_options_class": {
  "lineno": 73,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.check_options_class_pickling": {
  "lineno": 96,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.generate_col_names": {
  "lineno": 42,
  "symbols_in_volume": [
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.make_empty_csv": {
  "lineno": 66,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.make_random_csv": {
  "lineno": 51,
  "symbols_in_volume": [
   "io.StringIO",
   "itertools.islice",
   "numpy.random.RandomState",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_convert_options": {
  "lineno": 141,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.csv.ConvertOptions",
   "pyarrow.csv.ISO8601",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_parse_options": {
  "lineno": 122,
  "symbols_in_volume": [
   "pyarrow.csv.ParseOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_csv_does_not_close_passed_file_handles": {
  "lineno": 1187,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.csv.read_csv"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_options": {
  "lineno": 104,
  "symbols_in_volume": [
   "pyarrow.csv.ReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.skipif",
   "sysconfig.get_platform"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_cuda.make_random_buffer": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_recordbatch": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.random.randint",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.record_batch",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_table": {
  "lineno": 693,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.record_batch",
   "pyarrow.schema",
   "pyarrow.struct",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.other_process_for_test_IPC": {
  "lineno": 747,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "pyarrow.cuda.Context",
   "pyarrow.cuda.IpcMemHandle.from_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.setup_module": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.teardown_module": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader_zero_size": {
  "lineno": 648,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.allocate": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.test_writes": {
  "lineno": 541,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter_edge_cases": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_Context": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_CudaBuffer": {
  "lineno": 295,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_HostBuffer": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_IPC": {
  "lineno": 758,
  "symbols_in_volume": [
   "multiprocessing.get_context",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_batch_serialize": {
  "lineno": 669,
  "symbols_in_volume": [
   "pyarrow.RecordBatch",
   "pyarrow.ipc.read_record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_allocate_del": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_device_buffer": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_from_object": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "pyarrow.ArrowTypeError",
   "pyarrow.py_buffer",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device": {
  "lineno": 440,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device.put": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host": {
  "lineno": 491,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host.put": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_to_host": {
  "lineno": 350,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "pyarrow.Buffer",
   "pyarrow.allocate_buffer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_to_host": {
  "lineno": 376,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "pyarrow.allocate_buffer",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_foreign_buffer": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.uint8",
   "pyarrow.ArrowIOError",
   "pytest.raises",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_manage_allocate_free_host": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "numpy.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_table_deserialize": {
  "lineno": 719,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.ipc.new_stream",
   "pyarrow.ipc.open_stream",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.frombuffer",
   "numpy.random.randint",
   "numpy.uint8",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.setup_module": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.teardown_module": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_context": {
  "lineno": 46,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__cuda_array_interface__": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__init__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_context": {
  "lineno": 194,
  "symbols_in_volume": [
   "numba.cuda.cudadrv.devicearray.DeviceNDArray",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_memalloc": {
  "lineno": 157,
  "symbols_in_volume": [
   "numba.cuda.cudadrv.devicearray.DeviceNDArray",
   "numpy.dtype",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit": {
  "lineno": 213,
  "symbols_in_volume": [
   "numba.cuda.cudadrv.devicearray.DeviceNDArray",
   "numpy.frombuffer",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit.increment_by_one": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_memalloc": {
  "lineno": 180,
  "symbols_in_volume": [
   "numba.cuda.cudadrv.devicearray.DeviceNDArray",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cython": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_cython.test_cython_api": {
  "lineno": 63,
  "symbols_in_volume": [
   "os.environ.get",
   "os.name",
   "os.path.join",
   "pyarrow.array",
   "pyarrow.get_library_dirs",
   "pyarrow.tests.util.get_modified_env_with_pythonpath",
   "pytest.mark.cython",
   "pytest.raises",
   "shutil.copyfile",
   "subprocess.PIPE",
   "subprocess.check_call",
   "sys.executable",
   "sys.path",
   "sys.path.insert",
   "sys.platform"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas",
   "pyarrow.dataset",
   "pytest.mark.dataset"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_dataset._check_dataset": {
  "lineno": 1181,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._check_dataset_from_path": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.dataset.FileSystemDataset",
   "pyarrow.dataset.dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_dataset_all_types": {
  "lineno": 882,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.dataset.dataset",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
  "lineno": 680,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_directory_of_files": {
  "lineno": 1170,
  "symbols_in_volume": [
   "pyarrow.parquet.write_table",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_metadata_file": {
  "lineno": 1966,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.write_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
  "lineno": 1986,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.repeat",
   "pyarrow.array",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_parquet_dataset_simple": {
  "lineno": 1920,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.parquet.write_metadata",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_single_file": {
  "lineno": 1161,
  "symbols_in_volume": [
   "pyarrow.parquet.write_table",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._filesystem_uri": {
  "lineno": 83,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._generate_data": {
  "lineno": 56,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "itertools.cycle",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset._table_from_pandas": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.date32",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.change_cwd": {
  "lineno": 46,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.chdir",
   "os.getcwd"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.dataset": {
  "lineno": 211,
  "symbols_in_volume": [
   "pyarrow.dataset.DirectoryPartitioning",
   "pyarrow.dataset.FileSystemDatasetFactory",
   "pyarrow.dataset.FileSystemFactoryOptions",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.field",
   "pyarrow.fs.FileSelector",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.mockfs": {
  "lineno": 92,
  "symbols_in_volume": [
   "pyarrow.Table.from_batches",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.fs._MockFileSystem",
   "pyarrow.int64",
   "pyarrow.parquet.write_table",
   "pyarrow.record_batch",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.fixture",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.multisourcefs": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.array_split",
   "pyarrow.fs._MockFileSystem",
   "pyarrow.parquet.write_table",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs": {
  "lineno": 128,
  "symbols_in_volume": [
   "pyarrow.fs",
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs.PyFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.assert_opens": {
  "lineno": 149,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.normalized": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.open_input_file": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.s3_example_simple": {
  "lineno": 1531,
  "symbols_in_volume": [
   "pyarrow.fs",
   "pyarrow.fs.FileSystem.from_uri",
   "pyarrow.fs.create_dir",
   "pyarrow.fs.open_output_stream",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_abstract_classes": {
  "lineno": 366,
  "symbols_in_volume": [
   "pyarrow.dataset.FileFormat",
   "pyarrow.dataset.Partitioning",
   "pyarrow.dataset.Scanner",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_empty_dataset": {
  "lineno": 1336,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_invalid_sources_raise": {
  "lineno": 1351,
  "symbols_in_volume": [
   "pyarrow.dataset.FileSystemDatasetFactory",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.dataset",
   "pyarrow.fs.FileSelector",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_list_of_files": {
  "lineno": 1283,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.fs.LocalFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_list_of_mixed_paths_fails": {
  "lineno": 1305,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_mixed_child_datasets": {
  "lineno": 1315,
  "symbols_in_volume": [
   "pyarrow.dataset.UnionDataset",
   "pyarrow.dataset.dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_single_directory": {
  "lineno": 1264,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.dataset.dataset",
   "pyarrow.fs.LocalFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_single_file": {
  "lineno": 1246,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.dataset.dataset",
   "pyarrow.fs.LocalFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_csv_format": {
  "lineno": 1873,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dataset.CsvFileFormat",
   "pyarrow.dataset.dataset",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset": {
  "lineno": 317,
  "symbols_in_volume": [
   "pyarrow.RecordBatch",
   "pyarrow.Schema",
   "pyarrow.Table",
   "pyarrow.array",
   "pyarrow.dataset.Dataset",
   "pyarrow.dataset.ScanTask",
   "pyarrow.dataset.field",
   "pyarrow.float64",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_from_a_list_of_local_directories_raises": {
  "lineno": 1764,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_project_only_partition_columns": {
  "lineno": 2110,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_schema_metadata": {
  "lineno": 2070,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.dataset.dataset",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_union": {
  "lineno": 1683,
  "symbols_in_volume": [
   "pyarrow.Schema",
   "pyarrow.dataset.Dataset",
   "pyarrow.dataset.FileSystemDatasetFactory",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.UnionDatasetFactory",
   "pyarrow.fs.FileSelector"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_deterministic_row_order": {
  "lineno": 1211,
  "symbols_in_volume": [
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_expression_construction": {
  "lineno": 452,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.bool_",
   "pyarrow.dataset.field",
   "pyarrow.dataset.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_expression_serialization": {
  "lineno": 419,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.bool_",
   "pyarrow.dataset.Expression",
   "pyarrow.dataset.field",
   "pyarrow.dataset.scalar",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.scalar",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_feather_format": {
  "lineno": 1890,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dataset.IpcFileFormat",
   "pyarrow.dataset.dataset",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_file_format_pickling": {
  "lineno": 508,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.csv.ParseOptions",
   "pyarrow.dataset.CsvFileFormat",
   "pyarrow.dataset.IpcFileFormat",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.ParquetReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_dataset": {
  "lineno": 226,
  "symbols_in_volume": [
   "pyarrow.dataset.FileSystemDataset",
   "pyarrow.dataset.FileSystemDataset.from_paths",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.ParquetFileFragment",
   "pyarrow.dataset.RowGroupInfo",
   "pyarrow.dataset.field",
   "pyarrow.dataset.scalar",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_dataset_no_filesystem_interaction": {
  "lineno": 295,
  "symbols_in_volume": [
   "pyarrow.dataset.FileSystemDataset.from_paths",
   "pyarrow.dataset.IpcFileFormat",
   "pyarrow.field",
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.int64",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_factory": {
  "lineno": 529,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.Table",
   "pyarrow.array",
   "pyarrow.dataset.DirectoryPartitioning",
   "pyarrow.dataset.FileSystemDataset",
   "pyarrow.dataset.FileSystemDatasetFactory",
   "pyarrow.dataset.FileSystemFactoryOptions",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.ParquetReadOptions",
   "pyarrow.dataset.Scanner.from_dataset",
   "pyarrow.dataset.scalar",
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.fs.FileSelector",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filter_implicit_cast": {
  "lineno": 1672,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dataset.dataset",
   "pyarrow.dataset.field",
   "pyarrow.int8",
   "pyarrow.table",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filter_mismatching_schema": {
  "lineno": 2088,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dataset.dataset",
   "pyarrow.dataset.field",
   "pyarrow.int64",
   "pyarrow.parquet.write_table",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments": {
  "lineno": 700,
  "symbols_in_volume": [
   "pyarrow.dataset.field",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_implicit_cast": {
  "lineno": 733,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.dataset.field",
   "pyarrow.dataset.partitioning",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_ensure_metadata": {
  "lineno": 835,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.fs",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups": {
  "lineno": 807,
  "symbols_in_volume": [
   "pyarrow.dataset.field",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_predicate": {
  "lineno": 997,
  "symbols_in_volume": [
   "pyarrow.dataset.field",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_reconstruct": {
  "lineno": 1021,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.dataset.field",
   "pytest.mark.pandas",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_reconstruct": {
  "lineno": 749,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.dataset.field",
   "pytest.mark.pandas",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_reconstruct.assert_yields_projected": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_ipc_format": {
  "lineno": 1853,
  "symbols_in_volume": [
   "pyarrow.RecordBatchFileWriter",
   "pyarrow.array",
   "pyarrow.dataset.IpcFileFormat",
   "pyarrow.dataset.dataset",
   "pyarrow.output_stream",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_csv_fragment_from_buffer": {
  "lineno": 618,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.dataset.CsvFileFormat",
   "pyarrow.py_buffer",
   "pyarrow.table",
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_fragment": {
  "lineno": 601,
  "symbols_in_volume": [
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.ParquetFileFragment",
   "pyarrow.dataset.RowGroupInfo",
   "pyarrow.dataset.dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_parquet_fragment_from_buffer": {
  "lineno": 640,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.BufferOutputStream",
   "pyarrow.array",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.ParquetReadOptions",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_directory": {
  "lineno": 1220,
  "symbols_in_volume": [
   "pyarrow.concat_tables",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_filesystem": {
  "lineno": 1429,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs._MockFileSystem",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_fsspec": {
  "lineno": 1661,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pytest.importorskip",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_s3_with_filesystem_uri": {
  "lineno": 1593,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.dataset.dataset",
   "pyarrow.fs",
   "pyarrow.fs.FileSystem.from_uri",
   "pyarrow.fs.create_dir",
   "pyarrow.fs.open_output_stream",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.mark.parquet",
   "pytest.mark.s3",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_uri_s3": {
  "lineno": 1552,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.fs",
   "pytest.mark.parquet",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_uri_s3_fsspec": {
  "lineno": 1567,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.fs",
   "pyarrow.fs.FSSpecHandler",
   "pyarrow.fs.PyFileSystem",
   "pytest.importorskip",
   "pytest.mark.parquet",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_list_of_files": {
  "lineno": 1227,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.concat_tables",
   "pyarrow.dataset.dataset",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_non_existing_file": {
  "lineno": 1477,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.dataset.dataset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_dictionary_type": {
  "lineno": 1487,
  "symbols_in_volume": [
   "pyarrow.dataset.DirectoryPartitioning.discover",
   "pyarrow.dataset.HivePartitioning.discover",
   "pyarrow.dataset.dataset",
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.parquet.write_table",
   "pyarrow.string",
   "pyarrow.table",
   "pytest.mark.parametrize",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_directory": {
  "lineno": 1381,
  "symbols_in_volume": [
   "numpy.repeat",
   "pyarrow.array",
   "pyarrow.concat_tables",
   "pyarrow.dataset.dataset",
   "pyarrow.dataset.partitioning",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.parquet.write_table",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_single_file": {
  "lineno": 1205,
  "symbols_in_volume": [
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_unsupported_format": {
  "lineno": 1452,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_union_dataset": {
  "lineno": 1459,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.dataset.UnionDataset",
   "pyarrow.dataset.dataset",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_union_dataset_with_additional_kwargs": {
  "lineno": 1471,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory": {
  "lineno": 1940,
  "symbols_in_volume": [
   "pyarrow.dataset.parquet_dataset",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_invalid": {
  "lineno": 1952,
  "symbols_in_volume": [
   "pyarrow.dataset.parquet_dataset",
   "pytest.mark.pandas",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_metadata": {
  "lineno": 2019,
  "symbols_in_volume": [
   "pyarrow.dataset.parquet_dataset",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_partitioned": {
  "lineno": 1999,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.dataset.parquet_dataset",
   "pyarrow.dataset.partitioning",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_lazy_filtering": {
  "lineno": 2034,
  "symbols_in_volume": [
   "pyarrow.dataset.field",
   "pyarrow.dataset.parquet_dataset",
   "pyarrow.dataset.partitioning",
   "pyarrow.fs",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics": {
  "lineno": 940,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.time",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_ms": {
  "lineno": 949,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_s": {
  "lineno": 948,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_us": {
  "lineno": 950,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics_nulls": {
  "lineno": 984,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_read_options": {
  "lineno": 484,
  "symbols_in_volume": [
   "pyarrow.dataset.ParquetReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partition_keys": {
  "lineno": 474,
  "symbols_in_volume": [
   "pyarrow.dataset._get_partition_keys",
   "pyarrow.dataset.field"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning": {
  "lineno": 377,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.dataset.DirectoryPartitioning",
   "pyarrow.dataset.Expression",
   "pyarrow.dataset.HivePartitioning",
   "pyarrow.dataset.Partitioning",
   "pyarrow.dataset.field",
   "pyarrow.dataset.scalar",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_factory": {
  "lineno": 1061,
  "symbols_in_volume": [
   "pyarrow.dataset.DirectoryPartitioning.discover",
   "pyarrow.dataset.FileSystemDatasetFactory",
   "pyarrow.dataset.FileSystemFactoryOptions",
   "pyarrow.dataset.HivePartitioning.discover",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.PartitioningFactory",
   "pyarrow.float64",
   "pyarrow.fs.FileSelector",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_factory_dictionary": {
  "lineno": 1089,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dataset.DirectoryPartitioning.discover",
   "pyarrow.dataset.FileSystemDatasetFactory",
   "pyarrow.dataset.FileSystemFactoryOptions",
   "pyarrow.dataset.ParquetFileFormat",
   "pyarrow.dataset.field",
   "pyarrow.dictionary",
   "pyarrow.fs.FileSelector",
   "pyarrow.int32",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_function": {
  "lineno": 1128,
  "symbols_in_volume": [
   "pyarrow.dataset.DirectoryPartitioning",
   "pyarrow.dataset.HivePartitioning",
   "pyarrow.dataset.PartitioningFactory",
   "pyarrow.dataset.partitioning",
   "pyarrow.int16",
   "pyarrow.int8",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_scanner": {
  "lineno": 347,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.dataset.Scanner",
   "pyarrow.dataset.Scanner.from_dataset",
   "pyarrow.default_memory_pool",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_specified_schema": {
  "lineno": 1802,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dataset.dataset",
   "pyarrow.parquet.write_table",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.mark.parquet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_specified_schema._check_dataset": {
  "lineno": 1809,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_union_dataset_filesystem_datasets": {
  "lineno": 1770,
  "symbols_in_volume": [
   "pyarrow.dataset.dataset",
   "pyarrow.date32",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_union_dataset_from_other_datasets": {
  "lineno": 1698,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.dataset.UnionDataset",
   "pyarrow.dataset.dataset",
   "pyarrow.date32",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_extension_type": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_extension_type.IntegerType": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.IntegerType.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType.__init__",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.IntegerType.__reduce__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType": {
  "lineno": 45,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__init__": {
  "lineno": 47,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType.__init__",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__reduce__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.width": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodArray": {
  "lineno": 272,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType": {
  "lineno": 276,
  "symbols_in_volume": [
   "pyarrow.ExtensionType"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_deserialize__": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_serialize__": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__eq__": {
  "lineno": 297,
  "symbols_in_volume": [
   "pyarrow.BaseExtensionType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__init__": {
  "lineno": 277,
  "symbols_in_volume": [
   "pyarrow.ExtensionType.__init__",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.freq": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__arrow_ext_class__": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__arrow_ext_deserialize__": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__init__": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.UuidType.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType.__init__",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType.__reduce__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.check_example_batch": {
  "lineno": 223,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.example_batch": {
  "lineno": 216,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_read_batch": {
  "lineno": 67,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_write_batch": {
  "lineno": 59,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.registered_period_type": {
  "lineno": 319,
  "symbols_in_volume": [
   "pyarrow.register_extension_type",
   "pyarrow.unregister_extension_type",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_cast_kernel_on_extension_arrays": {
  "lineno": 180,
  "symbols_in_volume": [
   "pyarrow.ChunkedArray",
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.Int16Array",
   "pyarrow.Int32Array",
   "pyarrow.Int64Array",
   "pyarrow.UInt16Array",
   "pyarrow.UInt32Array",
   "pyarrow.UInt64Array",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.total_allocated_bytes",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_casting_to_extension_type_raises": {
  "lineno": 210,
  "symbols_in_volume": [
   "pyarrow.ArrowNotImplementedError",
   "pyarrow.array",
   "pyarrow.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_basics": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_equality": {
  "lineno": 144,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_errors": {
  "lineno": 137,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.binary",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_lifetime": {
  "lineno": 126,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.binary",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_pickling": {
  "lineno": 164,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.ExtensionArray",
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__lifetime": {
  "lineno": 77,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__storage_type": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_basics": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_equality": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type": {
  "lineno": 333,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_equality": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc": {
  "lineno": 341,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc_unknown": {
  "lineno": 381,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.Int64Array",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.unregister_extension_type"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_register": {
  "lineno": 415,
  "symbols_in_volume": [
   "pyarrow.register_extension_type",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc_unknown_type": {
  "lineno": 241,
  "symbols_in_volume": [
   "pyarrow.UnknownExtensionType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet": {
  "lineno": 426,
  "symbols_in_volume": [
   "base64.b64decode",
   "pyarrow.BufferReader",
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.ipc.read_schema",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pyarrow.unregister_extension_type",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_to_numpy": {
  "lineno": 472,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.testing.assert_array_equal",
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_uuid_type_pickle": {
  "lineno": 93,
  "symbols_in_volume": [
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dumps",
   "pickle.loads",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_feather._assert_error_on_write": {
  "lineno": 111,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather._assert_error_on_write.f": {
  "lineno": 120,
  "symbols_in_volume": [
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather._check_arrow_roundtrip": {
  "lineno": 98,
  "symbols_in_volume": [
   "os.path.exists",
   "pyarrow.feather.read_table",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather._check_pandas_roundtrip": {
  "lineno": 78,
  "symbols_in_volume": [
   "os.path.exists",
   "pandas.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.compression": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.random_path": {
  "lineno": 42,
  "symbols_in_volume": [
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.setup_module": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_feather.teardown_module": {
  "lineno": 64,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_all_none": {
  "lineno": 394,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_all_null_category": {
  "lineno": 400,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_no_nulls": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_nulls": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.array",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_object_nulls": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_buffer_bounds_error": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.array",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather",
   "pyarrow.float64",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_category": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_chunked_binary_error_message": {
  "lineno": 686,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather",
   "pytest.mark.large_memory",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_dataset": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.feather.FeatherDataset",
   "pyarrow.feather.write_feather",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_delete_partial_file_on_error": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.nan",
   "os.path.exists",
   "pandas.DataFrame",
   "pyarrow.feather.write_feather",
   "pytest.mark.pandas",
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_delete_partial_file_on_error.CustomClass": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_feather.test_duplicate_columns": {
  "lineno": 568,
  "symbols_in_volume": [
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_duplicate_columns_pandas": {
  "lineno": 558,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_empty_strings": {
  "lineno": 388,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_feather_without_pandas": {
  "lineno": 710,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.feather.read_table",
   "pyarrow.feather.write_feather",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_file_not_exist": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pyarrow.feather.read_feather",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_filelike_objects": {
  "lineno": 529,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_float_no_nulls": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_float_nulls": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.array",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_integer_no_nulls": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_integer_with_nulls": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.array",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_large_dataframe": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.pandas",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_multithreaded_read": {
  "lineno": 408,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_nan_as_null": {
  "lineno": 416,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_nested_types": {
  "lineno": 766,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_non_string_columns": {
  "lineno": 481,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_out_of_float64_timestamp_with_nulls": {
  "lineno": 472,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_overwritten_file": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.feather.write_feather",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_platform_numpy_integers": {
  "lineno": 234,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_duplicated_in_file": {
  "lineno": 747,
  "symbols_in_volume": [
   "pyarrow.feather.read_table",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_duplicated_selection": {
  "lineno": 736,
  "symbols_in_volume": [
   "pyarrow.feather.read_table",
   "pyarrow.feather.write_feather",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_selection": {
  "lineno": 718,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_columns": {
  "lineno": 501,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_table": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.read_table",
   "pyarrow.feather.write_feather",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_roundtrip": {
  "lineno": 779,
  "symbols_in_volume": [
   "hypothesis.given",
   "hypothesis.strategies.sampled_from",
   "pyarrow.tests.strategies.all_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_sparse_dataframe": {
  "lineno": 544,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.pandas_compat._pandas_api.has_sparse",
   "pytest.mark.filterwarnings",
   "pytest.mark.pandas",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_strings": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timedelta_with_nulls": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timedelta_with_nulls_v1": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pytest.mark.pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timestamp": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timestamp_with_nulls": {
  "lineno": 445,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unicode_filename": {
  "lineno": 490,
  "symbols_in_volume": [
   "os.path.supports_unicode_filenames",
   "pandas.DataFrame",
   "pytest.mark.pandas",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unsupported": {
  "lineno": 575,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unsupported.A": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_feather.test_v1_unsupported_types": {
  "lineno": 668,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.array",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_compression_options": {
  "lineno": 607,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.ArrowInvalid",
   "pyarrow.feather.write_feather",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_lz4_default_compression": {
  "lineno": 648,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.repeat",
   "pyarrow.Codec.is_available",
   "pyarrow.feather.write_feather",
   "pyarrow.table",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_set_chunksize": {
  "lineno": 592,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.BufferReader",
   "pyarrow.feather.write_feather",
   "pyarrow.ipc.open_file",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.version": {
  "lineno": 46,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_filesystem": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_filesystem.test_resolve_local_path": {
  "lineno": 28,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem",
   "pyarrow.filesystem.resolve_filesystem_and_path"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_filesystem.test_resolve_uri": {
  "lineno": 21,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem",
   "pyarrow.filesystem.resolve_filesystem_and_path"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.flight",
   "pyarrow.flight.ClientAuthHandler",
   "pyarrow.flight.ClientMiddleware",
   "pyarrow.flight.ClientMiddlewareFactory",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightServerBase",
   "pyarrow.flight.ServerAuthHandler",
   "pyarrow.flight.ServerMiddleware",
   "pyarrow.flight.ServerMiddlewareFactory",
   "pytest.mark.flight"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer": {
  "lineno": 274,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer.__init__": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer.do_get": {
  "lineno": 281,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.RecordBatchStream",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.CheckTicketFlightServer.do_put": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer": {
  "lineno": 118,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer.__init__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer.do_get": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.flight.RecordBatchStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConstantFlightServer.list_flights": {
  "lineno": 136,
  "symbols_in_volume": [
   "pyarrow.flight.FlightDescriptor.for_path",
   "pyarrow.flight.FlightInfo",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConvenienceServer": {
  "lineno": 787,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.ConvenienceServer.do_action": {
  "lineno": 795,
  "symbols_in_volume": [
   "pyarrow.ArrowMemoryError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ConvenienceServer.simple_action_results": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoFlightServer": {
  "lineno": 194,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.EchoFlightServer.__init__": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoFlightServer.do_get": {
  "lineno": 202,
  "symbols_in_volume": [
   "pyarrow.flight.RecordBatchStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoFlightServer.do_put": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer.do_action": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer.do_get": {
  "lineno": 214,
  "symbols_in_volume": [
   "pyarrow.flight.GeneratorStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.EchoStreamFlightServer.list_actions": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ErrorFlightServer": {
  "lineno": 328,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.ErrorFlightServer.do_action": {
  "lineno": 331,
  "symbols_in_volume": [
   "pyarrow.flight.FlightCancelledError",
   "pyarrow.flight.FlightInternalError",
   "pyarrow.flight.FlightTimedOutError",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pyarrow.flight.FlightUnauthorizedError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ErrorFlightServer.list_flights": {
  "lineno": 347,
  "symbols_in_volume": [
   "pyarrow.flight.FlightDescriptor.for_path",
   "pyarrow.flight.FlightInfo",
   "pyarrow.flight.FlightInternalError",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer": {
  "lineno": 357,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.__init__": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.do_exchange": {
  "lineno": 364,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.flight.DescriptorType.CMD"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_do_get": {
  "lineno": 379,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_do_put": {
  "lineno": 387,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_echo": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ExchangeFlightServer.exchange_transform": {
  "lineno": 412,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.types.is_integer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.GetInfoFlightServer": {
  "lineno": 228,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.GetInfoFlightServer.get_flight_info": {
  "lineno": 231,
  "symbols_in_volume": [
   "pyarrow.flight.FlightEndpoint",
   "pyarrow.flight.FlightInfo",
   "pyarrow.flight.Location.for_grpc_tcp",
   "pyarrow.int32",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.GetInfoFlightServer.get_schema": {
  "lineno": 246,
  "symbols_in_volume": [
   "pyarrow.flight.SchemaResult"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HeaderFlightServer": {
  "lineno": 523,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.HeaderFlightServer.do_action": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddleware": {
  "lineno": 509,
  "symbols_in_volume": [
   "pyarrow.flight.ServerMiddleware"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddleware.__init__": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddlewareFactory": {
  "lineno": 516,
  "symbols_in_volume": [
   "pyarrow.flight.ServerMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.HeaderServerMiddlewareFactory.start_call": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler": {
  "lineno": 451,
  "symbols_in_volume": [
   "pyarrow.flight.ClientAuthHandler"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler.__init__": {
  "lineno": 454,
  "symbols_in_volume": [
   "pyarrow.flight.BasicAuth"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler.authenticate": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicClientAuthHandler.get_token": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler": {
  "lineno": 427,
  "symbols_in_volume": [
   "pyarrow.flight.ServerAuthHandler"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler.__init__": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler.authenticate": {
  "lineno": 434,
  "symbols_in_volume": [
   "pyarrow.flight.BasicAuth.deserialize",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pyarrow.lib.tobytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.HttpBasicServerAuthHandler.is_valid": {
  "lineno": 443,
  "symbols_in_volume": [
   "pyarrow.flight.FlightUnauthenticatedError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.InvalidStreamFlightServer": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase",
   "pyarrow.int32",
   "pyarrow.schema"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.InvalidStreamFlightServer.do_get": {
  "lineno": 296,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.GeneratorStream",
   "pyarrow.float64",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ListActionsErrorFlightServer": {
  "lineno": 266,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.ListActionsErrorFlightServer.list_actions": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ListActionsFlightServer": {
  "lineno": 251,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.ListActionsFlightServer.expected_actions": {
  "lineno": 254,
  "symbols_in_volume": [
   "pyarrow.flight.ActionType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.ListActionsFlightServer.list_actions": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer": {
  "lineno": 152,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.__init__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.do_get": {
  "lineno": 159,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.GeneratorStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.do_put": {
  "lineno": 169,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "struct.pack",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MetadataFlightServer.number_batches": {
  "lineno": 187,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware": {
  "lineno": 609,
  "symbols_in_volume": [
   "pyarrow.flight.ClientMiddleware"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware.__init__": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware.received_headers": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddleware.sending_headers": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory": {
  "lineno": 597,
  "symbols_in_volume": [
   "pyarrow.flight.ClientMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory.__init__": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderClientMiddlewareFactory.start_call": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderFlightServer": {
  "lineno": 533,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderFlightServer.do_action": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddleware": {
  "lineno": 636,
  "symbols_in_volume": [
   "pyarrow.flight.ServerMiddleware"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddleware.__init__": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddleware.sending_headers": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddlewareFactory": {
  "lineno": 629,
  "symbols_in_volume": [
   "pyarrow.flight.ServerMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.MultiHeaderServerMiddlewareFactory.start_call": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory": {
  "lineno": 585,
  "symbols_in_volume": [
   "pyarrow.flight.ClientMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory.__init__": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingClientMiddlewareFactory.start_call": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory": {
  "lineno": 573,
  "symbols_in_volume": [
   "pyarrow.flight.ServerMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory.__init__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.RecordingServerMiddlewareFactory.start_call": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddleware": {
  "lineno": 566,
  "symbols_in_volume": [
   "pyarrow.flight.ClientMiddleware"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddleware.sending_headers": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddlewareFactory": {
  "lineno": 561,
  "symbols_in_volume": [
   "pyarrow.flight.ClientMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.SelectiveAuthClientMiddlewareFactory.start_call": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.SelectiveAuthServerMiddlewareFactory": {
  "lineno": 542,
  "symbols_in_volume": [
   "pyarrow.flight.ServerMiddlewareFactory"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.SelectiveAuthServerMiddlewareFactory.start_call": {
  "lineno": 545,
  "symbols_in_volume": [
   "pyarrow.flight.FlightMethod.LIST_ACTIONS",
   "pyarrow.flight.FlightUnauthenticatedError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.SlowFlightServer": {
  "lineno": 307,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.SlowFlightServer.do_action": {
  "lineno": 314,
  "symbols_in_volume": [
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.SlowFlightServer.do_get": {
  "lineno": 310,
  "symbols_in_volume": [
   "pyarrow.flight.GeneratorStream",
   "pyarrow.int32",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.SlowFlightServer.slow_stream": {
  "lineno": 318,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.int32",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler": {
  "lineno": 491,
  "symbols_in_volume": [
   "pyarrow.flight.ClientAuthHandler"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler.__init__": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler.authenticate": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenClientAuthHandler.get_token": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler": {
  "lineno": 468,
  "symbols_in_volume": [
   "pyarrow.flight.ServerAuthHandler"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler.__init__": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler.authenticate": {
  "lineno": 475,
  "symbols_in_volume": [
   "base64.b64encode",
   "pyarrow.flight.FlightUnauthenticatedError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.TokenServerAuthHandler.is_valid": {
  "lineno": 484,
  "symbols_in_volume": [
   "base64.b64decode",
   "pyarrow.flight.FlightUnauthenticatedError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.example_tls_certs": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyarrow.flight.CertKeyPair"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.read_flight_resource": {
  "lineno": 68,
  "symbols_in_volume": [
   "traceback.format_exc"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.resource_root": {
  "lineno": 60,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "pyarrow.util.pathlib.Path"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.simple_dicts_table": {
  "lineno": 107,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.simple_ints_table": {
  "lineno": 100,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_cancel_do_get": {
  "lineno": 1144,
  "symbols_in_volume": [
   "pyarrow.flight.FlightCancelledError",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_cancel_do_get_threaded": {
  "lineno": 1155,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "pytest.mark.slow",
   "threading.Event",
   "threading.Lock",
   "threading.Thread"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_cancel_do_get_threaded.block_read": {
  "lineno": 1167,
  "symbols_in_volume": [
   "pyarrow.flight.FlightCancelledError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_client_wait_for_available": {
  "lineno": 663,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.util.find_free_port",
   "pytest.mark.slow",
   "threading.Thread",
   "time.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_client_wait_for_available.serve": {
  "lineno": 668,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_action_result_convenience": {
  "lineno": 806,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_get_ints_pandas": {
  "lineno": 716,
  "symbols_in_volume": [
   "pyarrow.flight.Ticket",
   "pyarrow.flight.connect",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_put_independent_read_write": {
  "lineno": 1238,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_path",
   "struct.pack",
   "threading.Thread"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_do_put_independent_read_write._reader_thread": {
  "lineno": 1256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_echo": {
  "lineno": 1423,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_echo_v4": {
  "lineno": 1461,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command",
   "pyarrow.ipc.IpcWriteOptions",
   "pyarrow.ipc.MetadataVersion.V4"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_get": {
  "lineno": 1386,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_put": {
  "lineno": 1401,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_doexchange_transform": {
  "lineno": 1485,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_extra_info": {
  "lineno": 1355,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightUnauthorizedError"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_dicts": {
  "lineno": 727,
  "symbols_in_volume": [
   "pyarrow.flight.Ticket",
   "pyarrow.flight.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_ints": {
  "lineno": 693,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerError",
   "pyarrow.flight.Ticket",
   "pyarrow.flight.connect",
   "pyarrow.ipc.IpcWriteOptions",
   "pyarrow.ipc.MetadataVersion.V4",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_metadata": {
  "lineno": 1056,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_metadata_v4": {
  "lineno": 1081,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "pyarrow.ipc.IpcWriteOptions",
   "pyarrow.ipc.MetadataVersion.V4"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_get_ticket": {
  "lineno": 736,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.Ticket",
   "pyarrow.flight.connect",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_put_limit": {
  "lineno": 1116,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.ones",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_path",
   "pyarrow.flight.FlightWriteSizeExceededError",
   "pyarrow.flight.Ticket",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_do_put_metadata": {
  "lineno": 1094,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_path",
   "struct.pack",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_domain_socket": {
  "lineno": 844,
  "symbols_in_volume": [
   "os.name",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Location.for_grpc_unix",
   "pyarrow.flight.Ticket",
   "pytest.mark.skipif",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_generator_stream": {
  "lineno": 889,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_path",
   "pyarrow.flight.Ticket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_get_info": {
  "lineno": 746,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command",
   "pyarrow.flight.Location",
   "pyarrow.flight.Location.for_grpc_tcp",
   "pyarrow.int32",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_get_schema": {
  "lineno": 761,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command",
   "pyarrow.int32",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_invalid_generator_stream": {
  "lineno": 905,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_large_message": {
  "lineno": 867,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_path",
   "pyarrow.flight.Ticket",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_list_flights": {
  "lineno": 684,
  "symbols_in_volume": [
   "pyarrow.flight.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_flight_server_location_argument": {
  "lineno": 646,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase",
   "pyarrow.util.find_free_port"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_generic_options": {
  "lineno": 1525,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.flight.FlightUnavailableError",
   "pyarrow.flight.Ticket",
   "pyarrow.flight.connect",
   "pytest.mark.requires_testing_data",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_get_port": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_http_basic_auth": {
  "lineno": 955,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_http_basic_auth_invalid_password": {
  "lineno": 968,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_http_basic_unauth": {
  "lineno": 944,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_import": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_list_actions": {
  "lineno": 769,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightServerError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_location_invalid": {
  "lineno": 997,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.flight.connect",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_location_unknown_scheme": {
  "lineno": 1006,
  "symbols_in_volume": [
   "pyarrow.flight.Location"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_middleware_mapping": {
  "lineno": 1311,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightDescriptor.for_command",
   "pyarrow.flight.FlightMethod.DO_ACTION",
   "pyarrow.flight.FlightMethod.DO_EXCHANGE",
   "pyarrow.flight.FlightMethod.DO_GET",
   "pyarrow.flight.FlightMethod.DO_PUT",
   "pyarrow.flight.FlightMethod.GET_FLIGHT_INFO",
   "pyarrow.flight.FlightMethod.GET_SCHEMA",
   "pyarrow.flight.FlightMethod.LIST_ACTIONS",
   "pyarrow.flight.FlightMethod.LIST_FLIGHTS",
   "pyarrow.flight.FlightServerBase",
   "pyarrow.flight.Ticket",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_middleware_multi_header": {
  "lineno": 1508,
  "symbols_in_volume": [
   "ast.literal_eval",
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_middleware_reject": {
  "lineno": 1289,
  "symbols_in_volume": [
   "pyarrow.ArrowNotImplementedError",
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_mtls": {
  "lineno": 1367,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "pytest.mark.requires_testing_data"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_nicer_server_exceptions": {
  "lineno": 820,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightServerError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_roundtrip_errors": {
  "lineno": 1220,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightCancelledError",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightInternalError",
   "pyarrow.flight.FlightTimedOutError",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pyarrow.flight.FlightUnauthorizedError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_roundtrip_types": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pyarrow.flight.FlightDescriptor.deserialize",
   "pyarrow.flight.FlightDescriptor.for_command",
   "pyarrow.flight.FlightDescriptor.for_path",
   "pyarrow.flight.FlightEndpoint",
   "pyarrow.flight.FlightInfo",
   "pyarrow.flight.FlightInfo.deserialize",
   "pyarrow.flight.Location.for_grpc_tcp",
   "pyarrow.flight.Ticket",
   "pyarrow.flight.Ticket.deserialize",
   "pyarrow.int32",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_server_exit_reraises_exception": {
  "lineno": 657,
  "symbols_in_volume": [
   "pyarrow.flight.FlightServerBase",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_server_middleware_same_thread": {
  "lineno": 1277,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_timeout_fires": {
  "lineno": 913,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightCallOptions",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightTimedOutError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_timeout_passes": {
  "lineno": 927,
  "symbols_in_volume": [
   "pyarrow.flight.FlightCallOptions",
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_tls_do_get": {
  "lineno": 1030,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.Ticket",
   "pytest.mark.requires_testing_data"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_tls_fails": {
  "lineno": 1013,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightUnavailableError",
   "pyarrow.flight.Ticket",
   "pytest.mark.requires_testing_data",
   "pytest.mark.slow",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_tls_override_hostname": {
  "lineno": 1043,
  "symbols_in_volume": [
   "pyarrow.flight.FlightUnavailableError",
   "pyarrow.flight.Ticket",
   "pyarrow.flight.connect",
   "pytest.mark.requires_testing_data",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_token_auth": {
  "lineno": 979,
  "symbols_in_volume": [
   "pyarrow.flight.Action",
   "pyarrow.flight.FlightClient"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_flight.test_token_auth_invalid": {
  "lineno": 989,
  "symbols_in_volume": [
   "pyarrow.flight.FlightClient",
   "pyarrow.flight.FlightUnauthenticatedError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_fs.DummyHandler": {
  "lineno": 34,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystemHandler"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_fs.DummyHandler.__eq__": {
  "lineno": 38,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystemHandler"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.__ne__": {
  "lineno": 43,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystemHandler"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.copy_file": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.create_dir": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_dir": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_dir_contents": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_file": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_root_dir_contents": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_file_info": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.fs.FileInfo",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File",
   "pyarrow.fs.FileType.NotFound"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_file_info_selector": {
  "lineno": 70,
  "symbols_in_volume": [
   "pyarrow.fs.FileInfo",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_type_name": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.move": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.normalize_path": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_append_stream": {
  "lineno": 133,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_input_file": {
  "lineno": 122,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_input_stream": {
  "lineno": 116,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_output_stream": {
  "lineno": 128,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler": {
  "lineno": 139,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystemHandler"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__eq__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__init__": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__ne__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.copy_file": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.create_dir": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_dir": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_dir_contents": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_file": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_root_dir_contents": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_file_info": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_file_info_selector": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_type_name": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.move": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.normalize_path": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_append_stream": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_input_file": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_input_stream": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_output_stream": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs._check_root_dir_contents": {
  "lineno": 739,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pyarrow.ArrowInvalid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_append_to_file": {
  "lineno": 447,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_copy_file": {
  "lineno": 442,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_move_dir": {
  "lineno": 437,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime": {
  "lineno": 452,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "pytest.approx"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime_absent": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime_or_absent": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.filesystem_config": {
  "lineno": 377,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.lazy_fixture",
   "pytest.param"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.fs": {
  "lineno": 427,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.hdfs": {
  "lineno": 303,
  "symbols_in_volume": [
   "pyarrow.fs.HadoopFileSystem",
   "pyarrow.have_libhdfs",
   "pytest.fixture",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.identity": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.localfs": {
  "lineno": 200,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.localfs_with_mmap": {
  "lineno": 244,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.mockfs": {
  "lineno": 222,
  "symbols_in_volume": [
   "pyarrow.fs._MockFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.pathfn": {
  "lineno": 432,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_localfs": {
  "lineno": 323,
  "symbols_in_volume": [
   "pyarrow.fs.FSSpecHandler",
   "pyarrow.fs.PyFileSystem",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_memoryfs": {
  "lineno": 336,
  "symbols_in_volume": [
   "pyarrow.fs.FSSpecHandler",
   "pyarrow.fs.PyFileSystem",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_s3fs": {
  "lineno": 349,
  "symbols_in_volume": [
   "pyarrow.fs.FSSpecHandler",
   "pyarrow.fs.PyFileSystem",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_localfs": {
  "lineno": 211,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs.PyFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_mockfs": {
  "lineno": 233,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem",
   "pyarrow.fs._MockFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.s3fs": {
  "lineno": 266,
  "symbols_in_volume": [
   "pyarrow.fs.S3FileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
  "lineno": 476,
  "symbols_in_volume": [
   "pytest.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.subtree_localfs": {
  "lineno": 255,
  "symbols_in_volume": [
   "pyarrow.fs.SubTreeFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.subtree_s3fs": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyarrow.fs.SubTreeFileSystem",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_cannot_instantiate_base_filesystem": {
  "lineno": 510,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_copy_file": {
  "lineno": 766,
  "symbols_in_volume": [
   "pyarrow.ArrowNotImplementedError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_create_dir": {
  "lineno": 694,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir": {
  "lineno": 710,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir_contents": {
  "lineno": 724,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_file": {
  "lineno": 820,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_root_dir_contents": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_file_info_constructor": {
  "lineno": 481,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "datetime.timezone.utc",
   "pyarrow.fs.FileInfo",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File",
   "pyarrow.fs.FileType.Unknown"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_equals": {
  "lineno": 515,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs.SubTreeFileSystem",
   "pyarrow.fs._MockFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_path_object": {
  "lineno": 1093,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.fs.FileSystem.from_uri",
   "pyarrow.fs.LocalFileSystem",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_uri": {
  "lineno": 1073,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystem.from_uri",
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs._MockFileSystem",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_uri_s3": {
  "lineno": 1108,
  "symbols_in_volume": [
   "pyarrow.fs.FileSystem.from_uri",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.S3FileSystem",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_is_functional_after_pickling": {
  "lineno": 557,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_pickling": {
  "lineno": 547,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.fs.FileSystem",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_file_info": {
  "lineno": 603,
  "symbols_in_volume": [
   "pyarrow.fs.FileType.File",
   "pyarrow.fs.FileType.NotFound"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_file_info_with_selector": {
  "lineno": 654,
  "symbols_in_volume": [
   "pyarrow.fs.FileSelector",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_hdfs_options": {
  "lineno": 1001,
  "symbols_in_volume": [
   "pathlib.Path",
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.fs.FileSelector",
   "pyarrow.fs.HadoopFileSystem",
   "pyarrow.fs.HadoopFileSystem.from_uri",
   "pyarrow.have_libhdfs",
   "pytest.mark.hdfs",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_errors": {
  "lineno": 941,
  "symbols_in_volume": [
   "pyarrow.tests.test_io.assert_file_not_found"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_file_info": {
  "lineno": 961,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_options": {
  "lineno": 933,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_mockfs_mtime_roundtrip": {
  "lineno": 975,
  "symbols_in_volume": [
   "datetime.datetime.fromtimestamp",
   "datetime.timezone.utc",
   "pyarrow.fs._MockFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move_directory": {
  "lineno": 782,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pytest.raises",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move_file": {
  "lineno": 803,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pytest.raises",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises": {
  "lineno": 592,
  "symbols_in_volume": [
   "pathlib.Path",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises.Path": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_fs.test_normalize_path": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_append_stream": {
  "lineno": 900,
  "symbols_in_volume": [
   "gzip.compress",
   "gzip.decompress",
   "pyarrow.ArrowNotImplementedError",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_file": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_stream": {
  "lineno": 842,
  "symbols_in_volume": [
   "gzip.compress",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_output_stream": {
  "lineno": 879,
  "symbols_in_volume": [
   "gzip.decompress",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem": {
  "lineno": 1127,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_equality": {
  "lineno": 1138,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs.PyFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_get_file_info": {
  "lineno": 1191,
  "symbols_in_volume": [
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File",
   "pyarrow.fs.FileType.NotFound",
   "pyarrow.fs.PyFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_get_file_info_selector": {
  "lineno": 1214,
  "symbols_in_volume": [
   "pyarrow.fs.FileSelector",
   "pyarrow.fs.FileType.Directory",
   "pyarrow.fs.FileType.File",
   "pyarrow.fs.PyFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_lifetime": {
  "lineno": 1170,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_ops": {
  "lineno": 1243,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_pickling": {
  "lineno": 1158,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.fs.FileSystem",
   "pyarrow.fs.PyFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_append_stream": {
  "lineno": 1288,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_input_file": {
  "lineno": 1272,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_input_stream": {
  "lineno": 1263,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_output_stream": {
  "lineno": 1281,
  "symbols_in_volume": [
   "pyarrow.fs.PyFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_options": {
  "lineno": 985,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.fs.S3FileSystem",
   "pytest.mark.s3",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_real_aws": {
  "lineno": 1295,
  "symbols_in_volume": [
   "pyarrow.fs.FileSelector",
   "pyarrow.fs.S3FileSystem",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_subtree_filesystem": {
  "lineno": 535,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs.SubTreeFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_type_name": {
  "lineno": 579,
  "symbols_in_volume": [
   "pyarrow.fs.LocalFileSystem",
   "pyarrow.fs._MockFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_gandiva.test_boolean": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.default_memory_pool",
   "pyarrow.float64",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_filter",
   "pyarrow.uint32",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_filter": {
  "lineno": 88,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.default_memory_pool",
   "pyarrow.float64",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_filter",
   "pyarrow.uint32",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_get_registered_function_signatures": {
  "lineno": 311,
  "symbols_in_volume": [
   "pyarrow.DataType",
   "pyarrow.gandiva.get_registered_function_signatures",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr": {
  "lineno": 109,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.default_memory_pool",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_filter",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.string",
   "pyarrow.uint32",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr_todo": {
  "lineno": 146,
  "symbols_in_volume": [
   "datetime.datetime.utcfromtimestamp",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.default_memory_pool",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_filter",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint32",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_literals": {
  "lineno": 247,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.gandiva",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_regex": {
  "lineno": 287,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.default_memory_pool",
   "pyarrow.field",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_projector",
   "pyarrow.string",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_table": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.default_memory_pool",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_projector",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_tree_exp_builder": {
  "lineno": 24,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.default_memory_pool",
   "pyarrow.field",
   "pyarrow.gandiva.TreeExprBuilder",
   "pyarrow.gandiva.make_projector",
   "pyarrow.int32",
   "pyarrow.schema",
   "pytest.mark.gandiva"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "lineno": 52,
  "symbols_in_volume": [
   "pytest.mark.hdfs"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "lineno": 55,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._write_multiple_hdfs_pq_files": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "os.path.join",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.test_parquet._test_dataframe"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "lineno": 66,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_capacity_space": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_cat": {
  "lineno": 89,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_chmod_chown": {
  "lineno": 220,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_close": {
  "lineno": 108,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_disk_usage": {
  "lineno": 183,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_download_upload": {
  "lineno": 225,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_exists_isdir_isfile": {
  "lineno": 162,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_file_context_manager": {
  "lineno": 239,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_info": {
  "lineno": 145,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_ls": {
  "lineno": 205,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mkdir": {
  "lineno": 117,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mv_rename": {
  "lineno": 127,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_open_not_exist_error_message": {
  "lineno": 251,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_pickle": {
  "lineno": 78,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_common_metadata_files": {
  "lineno": 351,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.tests.test_parquet._test_read_common_metadata_files",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files": {
  "lineno": 296,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files_with_uri": {
  "lineno": 312,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
   "pyarrow.parquet.read_table",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_whole_file": {
  "lineno": 260,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_write_parquet_files_with_uri": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.int64",
   "os.path.join",
   "pyarrow.Table.from_pandas",
   "pyarrow.pandas_compat._pandas_api.assert_frame_equal",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.test_parquet._test_dataframe",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_no_partitions": {
  "lineno": 366,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_with_partitions": {
  "lineno": 358,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "lineno": 375,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "lineno": 377,
  "symbols_in_volume": [
   "os.environ.get",
   "pyarrow.have_libhdfs",
   "pytest.fail",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_orphaned_file": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs._get_hdfs_uri": {
  "lineno": 396,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "lineno": 40,
  "symbols_in_volume": [
   "os.environ.get",
   "pyarrow.hdfs.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.test_fastparquet_read_with_hdfs": {
  "lineno": 408,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.util.make_dataframe",
   "pytest.importorskip",
   "pytest.mark.fastparquet",
   "pytest.mark.hdfs",
   "pytest.mark.pandas",
   "pytest.mark.parquet",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "lineno": 737,
  "symbols_in_volume": [
   "os.SEEK_CUR",
   "os.SEEK_END"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "lineno": 799,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.assert_file_not_found": {
  "lineno": 57,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.check_compressed_concatenated": {
  "lineno": 1153,
  "symbols_in_volume": [
   "pyarrow.CompressedInputStream",
   "pyarrow.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.check_compressed_input": {
  "lineno": 1114,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.CompressedInputStream",
   "pyarrow.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.check_large_seeks": {
  "lineno": 39,
  "symbols_in_volume": [
   "os.unlink",
   "pytest.skip",
   "sys.platform",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.check_transcoding": {
  "lineno": 1302,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.transcoding_input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.make_compressed_output": {
  "lineno": 1183,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.CompressedOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.util.guid",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "lineno": 730,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "lineno": 530,
  "symbols_in_volume": [
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer_resizable": {
  "lineno": 543,
  "symbols_in_volume": [
   "pyarrow.ResizableBuffer",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_address": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "lineno": 333,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "lineno": 302,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.Buffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_eq_bytes": {
  "lineno": 439,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.int16",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.eq": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.ne": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_from_numpy": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int8",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_getitem": {
  "lineno": 449,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hashing": {
  "lineno": 500,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hex": {
  "lineno": 352,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_invalid": {
  "lineno": 346,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "lineno": 320,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "lineno": 591,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "lineno": 643,
  "symbols_in_volume": [
   "gc.collect",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "lineno": 644,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_respects_immutability": {
  "lineno": 506,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.uint8",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_slicing": {
  "lineno": 464,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_to_numpy": {
  "lineno": 361,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream": {
  "lineno": 1043,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.BufferedInputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_non_seekable": {
  "lineno": 1066,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.BufferedInputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_seekable": {
  "lineno": 1053,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.BufferedInputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream": {
  "lineno": 1081,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.zeros",
   "pyarrow.BufferedOutputStream",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream_detach": {
  "lineno": 1098,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.zeros",
   "pyarrow.BufferedOutputStream",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "lineno": 193,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "lineno": 225,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "lineno": 229,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compress_decompress": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.uint8",
   "pyarrow.Codec.is_available",
   "pyarrow.compress",
   "pyarrow.decompress",
   "pyarrow.lib.ArrowNotImplementedError",
   "pyarrow.py_buffer",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_concatenated_gzip": {
  "lineno": 1160,
  "symbols_in_volume": [
   "gzip.open"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_bz2": {
  "lineno": 1142,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_gzip": {
  "lineno": 1134,
  "symbols_in_volume": [
   "gzip.open"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_invalid": {
  "lineno": 1170,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.CompressedInputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_bz2": {
  "lineno": 1206,
  "symbols_in_volume": [
   "bz2.BZ2File",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_gzip": {
  "lineno": 1197,
  "symbols_in_volume": [
   "gzip.open"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_recordbatch_stream": {
  "lineno": 1271,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Codec.is_available",
   "pyarrow.CompressedInputStream",
   "pyarrow.CompressedOutputStream",
   "pyarrow.RecordBatchStreamReader",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.mark.parametrize",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_roundtrip": {
  "lineno": 1243,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Codec.is_available",
   "pyarrow.CompressedInputStream",
   "pyarrow.CompressedOutputStream",
   "pyarrow.lib.ArrowNotImplementedError",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.param",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compression_detection": {
  "lineno": 1218,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.Codec",
   "pyarrow.Codec.detect",
   "pyarrow.Codec.is_available",
   "pyarrow.lib.ArrowNotImplementedError",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_foreign_buffer": {
  "lineno": 517,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "numpy.int32",
   "pyarrow.foreign_buffer",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "lineno": 632,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_buffer": {
  "lineno": 1374,
  "symbols_in_volume": [
   "gzip.compress",
   "pyarrow.input_stream",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing": {
  "lineno": 1387,
  "symbols_in_volume": [
   "pyarrow.input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.close": {
  "lineno": 1391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.closed": {
  "lineno": 1394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.read": {
  "lineno": 1398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_errors": {
  "lineno": 1514,
  "symbols_in_volume": [
   "io.StringIO",
   "pyarrow.input_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path": {
  "lineno": 1405,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_buffered": {
  "lineno": 1439,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.BufferedInputStream",
   "pyarrow.OSFile",
   "pyarrow.input_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed": {
  "lineno": 1419,
  "symbols_in_volume": [
   "gzip.compress",
   "pathlib.Path",
   "pyarrow.input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed_and_buffered": {
  "lineno": 1465,
  "symbols_in_volume": [
   "gzip.compress",
   "pathlib.Path",
   "pyarrow.input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_native_file": {
  "lineno": 1503,
  "symbols_in_volume": [
   "gzip.compress",
   "pyarrow.BufferReader",
   "pyarrow.input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_python_file": {
  "lineno": 1480,
  "symbols_in_volume": [
   "gzip.compress",
   "io.BytesIO",
   "pyarrow.input_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_close_remove": {
  "lineno": 879,
  "symbols_in_volume": [
   "os.path.join",
   "os.remove",
   "pyarrow.create_memory_map",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_deref_remove": {
  "lineno": 888,
  "symbols_in_volume": [
   "os.path.join",
   "os.remove",
   "pyarrow.create_memory_map",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_large_seeks": {
  "lineno": 875,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "lineno": 770,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_resize": {
  "lineno": 847,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.uint8",
   "os.path.join",
   "pyarrow.create_memory_map",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "lineno": 775,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "lineno": 806,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.memory_map",
   "pyarrow.util.guid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "lineno": 618,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_zero_length": {
  "lineno": 867,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.memory_map",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "lineno": 681,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_TextIOWrapper": {
  "lineno": 1002,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "lineno": 921,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.memory_map",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_open_error": {
  "lineno": 1033,
  "symbols_in_volume": [
   "pyarrow.OSFile",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_raises_ValueError_after_close": {
  "lineno": 972,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.memory_map",
   "pyarrow.util.guid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_write_reject_unicode": {
  "lineno": 914,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.BufferOutputStream",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_large_seeks": {
  "lineno": 795,
  "symbols_in_volume": [
   "pyarrow.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "lineno": 791,
  "symbols_in_volume": [
   "pyarrow.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.util.guid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_buffer": {
  "lineno": 1531,
  "symbols_in_volume": [
   "pyarrow.output_stream",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor": {
  "lineno": 1651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor.check_data": {
  "lineno": 1658,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing": {
  "lineno": 1544,
  "symbols_in_volume": [
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter": {
  "lineno": 1546,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.__init__": {
  "lineno": 1547,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.close": {
  "lineno": 1550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.closed": {
  "lineno": 1553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.write": {
  "lineno": 1557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_errors": {
  "lineno": 1688,
  "symbols_in_volume": [
   "io.StringIO",
   "pyarrow.output_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path": {
  "lineno": 1566,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path.check_data": {
  "lineno": 1570,
  "symbols_in_volume": [
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered": {
  "lineno": 1604,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.OSFile",
   "pyarrow.output_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered.check_data": {
  "lineno": 1608,
  "symbols_in_volume": [
   "pyarrow.BufferedOutputStream",
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed": {
  "lineno": 1581,
  "symbols_in_volume": [
   "gzip.decompress",
   "pathlib.Path",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed.check_data": {
  "lineno": 1585,
  "symbols_in_volume": [
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered": {
  "lineno": 1631,
  "symbols_in_volume": [
   "gzip.decompress"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered.check_data": {
  "lineno": 1635,
  "symbols_in_volume": [
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file": {
  "lineno": 1670,
  "symbols_in_volume": [
   "gzip.decompress"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file.check_data": {
  "lineno": 1673,
  "symbols_in_volume": [
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_closing": {
  "lineno": 286,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_correct_abc": {
  "lineno": 166,
  "symbols_in_volume": [
   "io.BufferedIOBase",
   "io.BytesIO",
   "io.IOBase",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_implicit_mode": {
  "lineno": 241,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_iterable": {
  "lineno": 172,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks.factory": {
  "lineno": 187,
  "symbols_in_volume": [
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "lineno": 95,
  "symbols_in_volume": [
   "io.BytesIO",
   "io.StringIO",
   "pyarrow.PythonFile",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read_at": {
  "lineno": 128,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readall": {
  "lineno": 145,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readinto": {
  "lineno": 153,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "lineno": 67,
  "symbols_in_volume": [
   "io.BytesIO",
   "io.StringIO",
   "pyarrow.PythonFile",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_writelines": {
  "lineno": 266,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_decoding_error": {
  "lineno": 1357,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.transcoding_input_stream",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_encoding_error": {
  "lineno": 1343,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.transcoding_input_stream",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_input_stream": {
  "lineno": 1317,
  "symbols_in_volume": [
   "itertools.cycle",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_no_ops": {
  "lineno": 1333,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.transcoding_input_stream",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_uninitialized_buffer": {
  "lineno": 611,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_unknown_compression_raises": {
  "lineno": 1234,
  "symbols_in_volume": [
   "pyarrow.Codec",
   "pyarrow.Codec.is_available",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.pandas"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture._check_roundtrip": {
  "lineno": 88,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.ipc.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture._get_writer": {
  "lineno": 85,
  "symbols_in_volume": [
   "pyarrow.ipc.new_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.IpcFixture.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.get_sink": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.get_source": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.write_batches": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.Table.from_batches",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessageFixture": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessageFixture._get_writer": {
  "lineno": 121,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.__init__": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture._get_writer": {
  "lineno": 608,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.get_sink": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.start_server": {
  "lineno": 589,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.stop_and_get_result": {
  "lineno": 597,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamFormatFixture": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.StreamFormatFixture._get_writer": {
  "lineno": 110,
  "symbols_in_volume": [
   "pyarrow.ipc.new_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer": {
  "lineno": 550,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.get_result": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.init": {
  "lineno": 552,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.run": {
  "lineno": 563,
  "symbols_in_volume": [
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip": {
  "lineno": 701,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.example_messages": {
  "lineno": 453,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.MessageReader.open_stream",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.file_fixture": {
  "lineno": 130,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.ipc_fixture": {
  "lineno": 125,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "lineno": 842,
  "symbols_in_volume": [
   "pyarrow.ipc.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.socket_fixture": {
  "lineno": 612,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.stream_fixture": {
  "lineno": 135,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_deprecated_pyarrow_ns_apis": {
  "lineno": 820,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.array",
   "pyarrow.ipc.new_file",
   "pyarrow.ipc.new_stream",
   "pyarrow.open_file",
   "pyarrow.open_stream",
   "pyarrow.table",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_empty_file": {
  "lineno": 140,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.BufferReader",
   "pyarrow.ipc.open_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_empty_stream": {
  "lineno": 217,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.ArrowInvalid",
   "pyarrow.ipc.open_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_envvar_set_legacy_ipc_format": {
  "lineno": 397,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.ipc.MetadataVersion.V4",
   "pyarrow.ipc.MetadataVersion.V5",
   "pyarrow.ipc.new_file",
   "pyarrow.ipc.new_stream",
   "pyarrow.schema",
   "pyarrow.tests.util.changed_environ"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_pathlib": {
  "lineno": 199,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.OSFile",
   "pyarrow.ipc.open_file",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_read_all": {
  "lineno": 154,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_batches",
   "pyarrow.ipc.open_file",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_read_pandas": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.ipc.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_simple_roundtrip": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_write_table": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_get_record_batch_size": {
  "lineno": 692,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.ipc.get_record_batch_size"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_file_stream_has_eos": {
  "lineno": 640,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_stream_no_batches": {
  "lineno": 674,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.ipc.new_stream",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "lineno": 658,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_ctors_no_segfault": {
  "lineno": 462,
  "symbols_in_volume": [
   "pyarrow.Message",
   "pyarrow.MessageReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_read_from_compressed": {
  "lineno": 510,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.input_stream",
   "pyarrow.ipc.read_message",
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_read_record_batch": {
  "lineno": 525,
  "symbols_in_volume": [
   "pyarrow.ipc.read_record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_reader": {
  "lineno": 470,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.MetadataVersion.V5"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_serialize_read_message": {
  "lineno": 486,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.BufferReader",
   "pyarrow.ipc.read_message",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_open_file_from_buffer": {
  "lineno": 171,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.RecordBatchFileReader",
   "pyarrow.ipc.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_open_stream_from_buffer": {
  "lineno": 239,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.RecordBatchStreamReader",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip": {
  "lineno": 707,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_multi_index": {
  "lineno": 727,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_not_string_columns": {
  "lineno": 746,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_nthreads": {
  "lineno": 717,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_read_record_batch_on_stream_error_message": {
  "lineno": 533,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.array",
   "pyarrow.ipc.new_stream",
   "pyarrow.ipc.read_record_batch",
   "pyarrow.record_batch",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_batch_serialize_methods": {
  "lineno": 787,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.ipc.read_record_batch",
   "pyarrow.ipc.read_schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_serialization_with_metadata": {
  "lineno": 802,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int8",
   "pyarrow.ipc.read_schema",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_empty_dataframe": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_no_preserve_index": {
  "lineno": 753,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_with_pandas_objects": {
  "lineno": 766,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_socket_read_all": {
  "lineno": 628,
  "symbols_in_volume": [
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_socket_simple_roundtrip": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_categorical_roundtrip": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_options_roundtrip": {
  "lineno": 366,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.ipc.IpcWriteOptions",
   "pyarrow.ipc.MetadataVersion.V4",
   "pyarrow.ipc.open_stream",
   "pyarrow.ipc.read_message",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_read_all": {
  "lineno": 433,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.Table.from_batches",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_read_pandas": {
  "lineno": 443,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_simple_roundtrip": {
  "lineno": 299,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.ipc.open_stream",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_write_dispatch": {
  "lineno": 256,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_pandas",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_write_table_batches": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pyarrow.ipc.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_write_empty_ipc_file": {
  "lineno": 847,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatchFileReader",
   "pyarrow.int64",
   "pyarrow.ipc.new_file",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_write_options": {
  "lineno": 319,
  "symbols_in_volume": [
   "pyarrow.ipc.IpcWriteOptions",
   "pyarrow.ipc.MetadataVersion.V4",
   "pyarrow.ipc.MetadataVersion.V5",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_write_options_legacy_exclusive": {
  "lineno": 357,
  "symbols_in_volume": [
   "pyarrow.ipc.IpcWriteOptions",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "lineno": 837,
  "symbols_in_volume": [
   "pyarrow.ipc.new_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.check_names": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.read_bytes": {
  "lineno": 95,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_block_sizes": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyarrow.json.ParseOptions",
   "pyarrow.json.ReadOptions",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_explicit_schema_with_unexpected_behaviour": {
  "lineno": 195,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.binary",
   "pyarrow.int64",
   "pyarrow.json.ParseOptions",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_file_object": {
  "lineno": 102,
  "symbols_in_volume": [
   "io.BytesIO",
   "io.StringIO",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_no_newline_at_end": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_ints": {
  "lineno": 144,
  "symbols_in_volume": [
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_nulls": {
  "lineno": 175,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_varied": {
  "lineno": 158,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_small_random_json": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_stress_block_sizes": {
  "lineno": 239,
  "symbols_in_volume": [
   "pyarrow.json.ParseOptions",
   "pyarrow.json.ReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead": {
  "lineno": 268,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead.read_json": {
  "lineno": 270,
  "symbols_in_volume": [
   "pyarrow.json.ReadOptions",
   "pyarrow.json.read_json"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead": {
  "lineno": 258,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead.read_json": {
  "lineno": 260,
  "symbols_in_volume": [
   "pyarrow.json.ReadOptions",
   "pyarrow.json.read_json"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.generate_col_names": {
  "lineno": 32,
  "symbols_in_volume": [
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.make_random_json": {
  "lineno": 41,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "itertools.islice",
   "json.dumps",
   "numpy.random.RandomState",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.test_parse_options": {
  "lineno": 71,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.json.ParseOptions",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_json.test_read_options": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.json.ReadOptions"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_jvm._jvm_field": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_jvm._jvm_schema": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_jvm._string_to_varchar_holder": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.root_allocator": {
  "lineno": 30,
  "symbols_in_volume": [
   "os.environ",
   "os.getenv",
   "os.path.dirname",
   "os.path.join",
   "pytest.fixture",
   "sys.maxsize",
   "xml.etree.ElementTree.parse"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_array": {
  "lineno": 202,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.jvm.array",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_array_empty": {
  "lineno": 241,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.jvm.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer": {
  "lineno": 56,
  "symbols_in_volume": [
   "pyarrow.jvm.jvm_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer_released": {
  "lineno": 76,
  "symbols_in_volume": [
   "java.lang.IllegalArgumentException",
   "pyarrow.jvm.jvm_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_record_batch": {
  "lineno": 253,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.jvm.record_batch",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_string_array": {
  "lineno": 417,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.jvm.array",
   "pyarrow.string",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_types": {
  "lineno": 117,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.jvm.field",
   "pyarrow.jvm.schema",
   "pyarrow.null",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_memory.allocate_bytes": {
  "lineno": 23,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_memory.check_allocated_bytes": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_default_allocated_bytes": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.default_memory_pool",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_logging_memory_pool": {
  "lineno": 66,
  "symbols_in_volume": [
   "pyarrow.default_memory_pool",
   "pyarrow.logging_memory_pool"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_proxy_memory_pool": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyarrow.default_memory_pool",
   "pyarrow.proxy_memory_pool"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_set_memory_pool": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyarrow.default_memory_pool",
   "pyarrow.proxy_memory_pool",
   "pyarrow.set_memory_pool"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_misc.test_build_info": {
  "lineno": 45,
  "symbols_in_volume": [
   "pyarrow.BuildInfo",
   "pyarrow.VersionInfo",
   "pyarrow.__version__",
   "pyarrow.cpp_build_info",
   "pyarrow.cpp_build_info.version_info",
   "pyarrow.cpp_version",
   "pyarrow.cpp_version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_cpu_count": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyarrow.cpu_count",
   "pyarrow.set_cpu_count"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_extension_type_constructor_errors": {
  "lineno": 55,
  "symbols_in_volume": [
   "pyarrow.Array",
   "pyarrow.BinaryArray",
   "pyarrow.BinaryScalar",
   "pyarrow.BooleanArray",
   "pyarrow.BooleanScalar",
   "pyarrow.Buffer",
   "pyarrow.ChunkedArray",
   "pyarrow.Date32Array",
   "pyarrow.Date32Scalar",
   "pyarrow.Date64Array",
   "pyarrow.Date64Scalar",
   "pyarrow.Decimal128Array",
   "pyarrow.Decimal128Scalar",
   "pyarrow.DictionaryArray",
   "pyarrow.DictionaryScalar",
   "pyarrow.DoubleScalar",
   "pyarrow.DurationArray",
   "pyarrow.DurationScalar",
   "pyarrow.Field",
   "pyarrow.FixedSizeBinaryArray",
   "pyarrow.FixedSizeBinaryScalar",
   "pyarrow.FixedSizeListArray",
   "pyarrow.FixedSizeListScalar",
   "pyarrow.FloatScalar",
   "pyarrow.FloatingPointArray",
   "pyarrow.HalfFloatScalar",
   "pyarrow.Int16Array",
   "pyarrow.Int16Scalar",
   "pyarrow.Int32Array",
   "pyarrow.Int32Scalar",
   "pyarrow.Int64Array",
   "pyarrow.Int64Scalar",
   "pyarrow.Int8Array",
   "pyarrow.Int8Scalar",
   "pyarrow.IntegerArray",
   "pyarrow.LargeListArray",
   "pyarrow.LargeListScalar",
   "pyarrow.ListArray",
   "pyarrow.ListScalar",
   "pyarrow.LoggingMemoryPool",
   "pyarrow.MapArray",
   "pyarrow.MapScalar",
   "pyarrow.MemoryPool",
   "pyarrow.NullArray",
   "pyarrow.NumericArray",
   "pyarrow.ProxyMemoryPool",
   "pyarrow.RecordBatch",
   "pyarrow.Scalar",
   "pyarrow.Schema",
   "pyarrow.StringArray",
   "pyarrow.StringScalar",
   "pyarrow.StructArray",
   "pyarrow.StructScalar",
   "pyarrow.Table",
   "pyarrow.Tensor",
   "pyarrow.Time32Array",
   "pyarrow.Time32Scalar",
   "pyarrow.Time64Array",
   "pyarrow.Time64Scalar",
   "pyarrow.TimestampArray",
   "pyarrow.TimestampScalar",
   "pyarrow.UInt16Array",
   "pyarrow.UInt16Scalar",
   "pyarrow.UInt32Array",
   "pyarrow.UInt32Scalar",
   "pyarrow.UInt64Array",
   "pyarrow.UInt64Scalar",
   "pyarrow.UInt8Array",
   "pyarrow.UInt8Scalar",
   "pyarrow.UnionArray",
   "pyarrow.UnionScalar",
   "pyarrow.ipc.Message",
   "pyarrow.ipc.MessageReader",
   "pyarrow.lib.DataType",
   "pyarrow.lib.Decimal128Type",
   "pyarrow.lib.DictionaryType",
   "pyarrow.lib.FixedSizeBinaryType",
   "pyarrow.lib.FixedSizeListType",
   "pyarrow.lib.LargeListType",
   "pyarrow.lib.ListType",
   "pyarrow.lib.StructType",
   "pyarrow.lib.Time32Type",
   "pyarrow.lib.Time64Type",
   "pyarrow.lib.TimestampType",
   "pyarrow.lib.UnionType",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_include": {
  "lineno": 24,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pyarrow.get_include"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_library_dirs_win32": {
  "lineno": 29,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pyarrow.get_library_dirs",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_orc": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.orc"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_orc.check_example_file": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table",
   "pyarrow.orc.ORCFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_orc.check_example_values": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_orc.datadir": {
  "lineno": 36,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_orc.fix_example_values": {
  "lineno": 41,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "decimal.Decimal",
   "pandas.Series",
   "pandas.isnull",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_orc.test_example_using_json": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.read_json",
   "pytest.mark.pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_orc.test_orcfile_empty": {
  "lineno": 131,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.orc.ORCFile",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.pandas"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_pandas.DummyExtensionType": {
  "lineno": 3584,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.DummyExtensionType.__init__": {
  "lineno": 3586,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType.__init__",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.DummyExtensionType.__reduce__": {
  "lineno": 3589,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType": {
  "lineno": 3682,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType.__init__": {
  "lineno": 3684,
  "symbols_in_volume": [
   "pyarrow.PyExtensionType.__init__",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType.__reduce__": {
  "lineno": 3687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.MyCustomIntegerType.to_pandas_dtype": {
  "lineno": 3690,
  "symbols_in_volume": [
   "pandas.Int64Dtype"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.PandasArray__arrow_array__": {
  "lineno": 3593,
  "symbols_in_volume": [
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_array_from_pandas_date_with_mask": {
  "lineno": 1407,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.Series",
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_array_types_date_as_object": {
  "lineno": 1096,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_arrow_time_to_pandas": {
  "lineno": 1274,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_date_infer": {
  "lineno": 1136,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.date32",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_date_mask": {
  "lineno": 1152,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_date_objects_typed": {
  "lineno": 1161,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.NaT.value",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_dates_from_integers": {
  "lineno": 1223,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_datetime64_to_date32": {
  "lineno": 1050,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.Array.from_pandas",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.date32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_fixed_offset_timezone": {
  "lineno": 1420,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_numpy_datetime64_columns": {
  "lineno": 1322,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_numpy_datetime64_day_unit": {
  "lineno": 1397,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.date32",
   "pyarrow.date64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pandas_datetime_to_date64": {
  "lineno": 1060,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.to_datetime",
   "pyarrow.Array.from_pandas",
   "pyarrow.array",
   "pyarrow.date64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pandas_datetime_to_date64_failures": {
  "lineno": 1081,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.to_datetime",
   "pyarrow.Array.from_pandas",
   "pyarrow.ArrowInvalid",
   "pyarrow.date64",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pandas_null_values": {
  "lineno": 1208,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.array",
   "pandas",
   "pandas.NaT",
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_date_subclass": {
  "lineno": 1033,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Date32Array",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_date_subclass.MyDate": {
  "lineno": 1035,
  "symbols_in_volume": [
   "datetime.date"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime": {
  "lineno": 968,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.TimestampArray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_subclass": {
  "lineno": 1013,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pandas.to_datetime",
   "pyarrow.Table.from_pandas",
   "pyarrow.TimestampArray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_subclass.MyDatetime": {
  "lineno": 1015,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_with_pytz_timezone": {
  "lineno": 990,
  "symbols_in_volume": [
   "datetime.datetime",
   "hypothesis.extra.pytz.timezones",
   "hypothesis.given",
   "hypothesis.strategies.none",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_with_pytz_tzinfo": {
  "lineno": 984,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pytz.FixedOffset",
   "pytz.timezone",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_python_datetime_with_timezone_tzinfo": {
  "lineno": 996,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timedelta",
   "datetime.timezone",
   "pandas.DataFrame",
   "pytz.FixedOffset",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_pytime_from_pandas": {
  "lineno": 1237,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.array",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_table_convert_date_as_object": {
  "lineno": 1120,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timedeltas_no_nulls": {
  "lineno": 1430,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.duration",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timedeltas_nulls": {
  "lineno": 1442,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.duration",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamp_to_pandas_empty_chunked": {
  "lineno": 1390,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pyarrow.chunked_array",
   "pyarrow.table",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamp_to_pandas_ns": {
  "lineno": 1355,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pandas.to_datetime",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamp_to_pandas_out_of_bounds": {
  "lineno": 1365,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamps_notimezone_no_nulls": {
  "lineno": 912,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamps_notimezone_nulls": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDateTimeLikeTypes.test_timestamps_with_timezone": {
  "lineno": 942,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes": {
  "lineno": 1656,
  "symbols_in_volume": [
   "decimal.Decimal"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_fails_with_truncation": {
  "lineno": 1698,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.decimal128",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_from_pandas": {
  "lineno": 1673,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.schema",
   "pytest.mark.parametrize",
   "pytest.param"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_to_pandas": {
  "lineno": 1687,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.parametrize",
   "pytest.param"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_with_None_explicit_type": {
  "lineno": 1723,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.Series",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_with_None_infer_type": {
  "lineno": 1731,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.Series",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_decimal_with_different_precisions": {
  "lineno": 1709,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertDecimalTypes.test_strided_objects": {
  "lineno": 1735,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes": {
  "lineno": 1747,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_array_from_nested_arrays": {
  "lineno": 2056,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_array_from_pandas_typed_array_with_mask": {
  "lineno": 2018,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pyarrow.Array.from_pandas",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_arrays": {
  "lineno": 1752,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_arrays_to_py": {
  "lineno": 1765,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.int8",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_boolean_list": {
  "lineno": 1782,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_decimal_list": {
  "lineno": 1794,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.decimal128",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists": {
  "lineno": 1820,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_chunked": {
  "lineno": 1841,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_chunked2": {
  "lineno": 1880,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_first_empty": {
  "lineno": 1833,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_column_of_lists_strided": {
  "lineno": 1898,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_empty_column_of_lists_chunked": {
  "lineno": 1866,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_empty_list_roundtrip": {
  "lineno": 2044,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_fixed_size_list": {
  "lineno": 1971,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_infer_lists": {
  "lineno": 1953,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_infer_numpy_array": {
  "lineno": 1988,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_large_binary_list": {
  "lineno": 2073,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.array",
   "pyarrow.large_binary",
   "pyarrow.large_list",
   "pyarrow.large_string",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_large_list": {
  "lineno": 2065,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.large_list"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_list_first_empty": {
  "lineno": 1930,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_lists_all_empty": {
  "lineno": 1922,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_lists_all_none": {
  "lineno": 1907,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_smaller_ints": {
  "lineno": 1938,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.float32",
   "pyarrow.int8",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_nested_types_from_ndarray_null_entries": {
  "lineno": 1806,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertListTypes.test_to_list_of_structs_pandas": {
  "lineno": 2002,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.ListArray.from_arrays",
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_binary_column_name": {
  "lineno": 419,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_categorical_column_index": {
  "lineno": 306,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_categorical_row_index": {
  "lineno": 370,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_column_index_names_are_preserved": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_datetimetz_column_index": {
  "lineno": 342,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_datetimetz_row_index": {
  "lineno": 360,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_decimal_metadata": {
  "lineno": 483,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_dictionary_indices_boundscheck": {
  "lineno": 382,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_duplicate_column_names_does_not_crash": {
  "lineno": 377,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_empty_list_metadata": {
  "lineno": 519,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.Table.from_pandas",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_from_pandas_with_columns": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_ignore_metadata": {
  "lineno": 456,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_index_metadata_field_name": {
  "lineno": 272,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pyarrow.Table.from_pandas",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_integer_index_column": {
  "lineno": 268,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_list_metadata": {
  "lineno": 467,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_metadata_pandas_version": {
  "lineno": 563,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_metadata_with_mixed_types": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_mixed_column_names": {
  "lineno": 402,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pyarrow.Table.from_pandas",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_columns": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_columns_unicode": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_columns_with_dtypes": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_doesnt_warn": {
  "lineno": 258,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_duplicate_values": {
  "lineno": 433,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_multiindex_with_datetimes": {
  "lineno": 239,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.testing.assert_frame_equal",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_non_string_columns": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_range_index_force_serialization": {
  "lineno": 197,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_range_index_shortcut": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.pandas_compat._pandas_api.get_rangeindex_attribute"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_rangeindex_doesnt_warn": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_string_column_index": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_struct_metadata": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_table_column_subset_metadata": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMetadata.test_unicode_with_unicode_column_and_index": {
  "lineno": 397,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc": {
  "lineno": 2338,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.binary",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_none_category": {
  "lineno": 2367,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_none_objects": {
  "lineno": 2363,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_nones": {
  "lineno": 2502,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_all_nones._check_series": {
  "lineno": 2503,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.NullArray",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_array_from_strided_numpy_array": {
  "lineno": 2566,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "pyarrow.array",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category": {
  "lineno": 2389,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category_implicit_from_pandas": {
  "lineno": 2415,
  "symbols_in_volume": [
   "pandas.Categorical"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category_implicit_from_pandas._check": {
  "lineno": 2417,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_category_zero_chunks": {
  "lineno": 2435,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pyarrow.chunked_array",
   "pyarrow.dictionary",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_convert_empty_table": {
  "lineno": 2541,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_empty_arrays": {
  "lineno": 2372,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_empty_category": {
  "lineno": 2430,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_error_sparse": {
  "lineno": 2591,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.SparseArray",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_mixed_types_fails": {
  "lineno": 2448,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ArrowTypeError",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_non_natural_stride": {
  "lineno": 2553,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.int16",
   "numpy.int32",
   "pyarrow.array",
   "pyarrow.int16",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_non_threaded_conversion": {
  "lineno": 2377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_partial_schema": {
  "lineno": 2515,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int32",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_safe_unsafe_casts": {
  "lineno": 2573,
  "symbols_in_volume": [
   "numpy.linspace",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_strided_data_import": {
  "lineno": 2462,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.tests.util.random_ascii"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_table_batch_empty_dataframe": {
  "lineno": 2532,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertMisc.test_threaded_conversion_multiprocess": {
  "lineno": 2380,
  "symbols_in_volume": [
   "multiprocessing.Pool"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_all_integer_types": {
  "lineno": 666,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_all_nulls_cast_numeric": {
  "lineno": 835,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.float64",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_all_nulls_cast_numeric._check_type": {
  "lineno": 838,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_array_from_pandas_type_cast": {
  "lineno": 726,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.array",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_multiple_columns": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_no_nulls": {
  "lineno": 735,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_nulls": {
  "lineno": 745,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_nulls_to_float": {
  "lineno": 782,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_object_nulls": {
  "lineno": 828,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_objects_to_int": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.ArrowTypeError",
   "pyarrow.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_boolean_to_int": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_no_nulls": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_nulls": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_nulls_to_boolean": {
  "lineno": 629,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_nulls_to_ints": {
  "lineno": 621,
  "symbols_in_volume": [
   "numpy.NaN",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_object_nulls": {
  "lineno": 793,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_float_with_null_as_integer": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pyarrow.Table.from_pandas",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.schema",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_half_floats_from_numpy": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float16",
   "numpy.isnan",
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.float16"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_int_object_nulls": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_integer_byteorder": {
  "lineno": 683,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_integer_no_nulls": {
  "lineno": 641,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.iinfo",
   "numpy.int_",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.schema",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_integer_with_nulls": {
  "lineno": 697,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertPrimitiveTypes.test_series_from_pandas_false_respected": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes": {
  "lineno": 1459,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_array_of_bytes_to_strings": {
  "lineno": 1619,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_array_of_bytes_to_strings_bad_data": {
  "lineno": 1626,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.lib.ArrowInvalid",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_binary_from_bytearray": {
  "lineno": 1519,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_bytes_exceed_2gb": {
  "lineno": 1481,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ChunkedArray",
   "pyarrow.Table.from_pandas",
   "pyarrow.array",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_bytes_to_binary": {
  "lineno": 1470,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_fixed_size_bytes": {
  "lineno": 1498,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "lineno": 1508,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_large_binary": {
  "lineno": 1527,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pyarrow.large_binary",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_large_string": {
  "lineno": 1534,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pyarrow.large_string",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_numpy_string_array_to_fixed_size_binary": {
  "lineno": 1632,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.lib.ArrowInvalid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_pandas_unicode": {
  "lineno": 1461,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_selective_categoricals": {
  "lineno": 1556,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_table_empty_str": {
  "lineno": 1541,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_table_str_to_categorical_with_na": {
  "lineno": 1603,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_table_str_to_categorical_without_na": {
  "lineno": 1588,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_to_pandas_categorical_zero_length": {
  "lineno": 1574,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_to_pandas_categories_already_dictionary": {
  "lineno": 1581,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStringLikeTypes.test_variable_size_bytes": {
  "lineno": 1515,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes": {
  "lineno": 2089,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy": {
  "lineno": 2124,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.int32",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_bad_input": {
  "lineno": 2234,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.int32",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_large": {
  "lineno": 2180,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.nan",
   "numpy.random.random_sample",
   "numpy.zeros",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.struct",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_large.check": {
  "lineno": 2203,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_large.iter_chunked_array": {
  "lineno": 2199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_numpy_nested": {
  "lineno": 2155,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.int16",
   "numpy.int8",
   "numpy.object_",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_from_tuples": {
  "lineno": 2249,
  "symbols_in_volume": [
   "numpy.asarray",
   "pandas.DataFrame",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_pandas_roundtrip": {
  "lineno": 2094,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestConvertStructTypes.test_to_pandas": {
  "lineno": 2107,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int64",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion": {
  "lineno": 2267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.check_zero_copy_failure": {
  "lineno": 2297,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_dictionaries": {
  "lineno": 2276,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_duration": {
  "lineno": 2292,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_bool_types": {
  "lineno": 2310,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_duration_with_nulls": {
  "lineno": 2321,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_list_types": {
  "lineno": 2313,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_object_types": {
  "lineno": 2301,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_timestamp_with_nulls": {
  "lineno": 2317,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_with_float_when_nulls": {
  "lineno": 2307,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_failure_with_int_when_nulls": {
  "lineno": 2304,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_success": {
  "lineno": 2272,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.TestZeroCopyConversion.test_zero_copy_timestamp": {
  "lineno": 2287,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._Int64Dtype__from_arrow__": {
  "lineno": 3629,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.frombuffer",
   "numpy.ones",
   "pandas.arrays.IntegerArray",
   "pyarrow.BooleanArray.from_buffers",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._alltypes_example": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._assert_nunique": {
  "lineno": 2724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_array_from_pandas_roundtrip": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_array_roundtrip": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.ma.masked_array",
   "pandas.Series",
   "pandas.isnull",
   "pandas.testing.assert_series_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_blocks_created": {
  "lineno": 3190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_pandas_roundtrip": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch",
   "pyarrow.Table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_serialize_components_roundtrip": {
  "lineno": 2644,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pyarrow.default_serialization_context"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_series_roundtrip": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._check_to_pandas_memory_unchanged": {
  "lineno": 3165,
  "symbols_in_volume": [
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._fully_loaded_dataframe_example": {
  "lineno": 2607,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.__version__",
   "pandas.date_range",
   "pandas.interval_range",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._generate_dedup_example": {
  "lineno": 2719,
  "symbols_in_volume": [
   "pyarrow.tests.util.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._non_threaded_conversion": {
  "lineno": 2326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._pytime_from_micros": {
  "lineno": 2674,
  "symbols_in_volume": [
   "datetime.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._pytime_to_micros": {
  "lineno": 2684,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas._threaded_conversion": {
  "lineno": 2332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.make_df_with_timestamps": {
  "lineno": 3984,
  "symbols_in_volume": [
   "numpy.datetime64",
   "numpy.dtype",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.random_strings": {
  "lineno": 3399,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.rand",
   "numpy.random.randint",
   "pyarrow.tests.util.random_ascii"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_from_py_float32": {
  "lineno": 3258,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.float32",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_integer_object_nulls_option": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_protocol": {
  "lineno": 3547,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.__version__",
   "pyarrow.array",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_protocol_pandas_extension_types": {
  "lineno": 3600,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas.__version__",
   "pandas.arrays.IntervalArray",
   "pandas.arrays.PeriodArray",
   "pandas.interval_range",
   "pandas.period_range",
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.table",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_array_uses_memory_pool": {
  "lineno": 3126,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "numpy.bool_",
   "numpy.int64",
   "numpy.random.randint",
   "pyarrow.array",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_cast_timestamp_unit": {
  "lineno": 3279,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.Series",
   "pandas.Timestamp",
   "pyarrow.Array.from_pandas",
   "pyarrow.array",
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_conversion_extensiontype_to_extensionarray": {
  "lineno": 3694,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.Int64Dtype",
   "pandas.__version__",
   "pandas.array",
   "pandas.core.arrays.integer._IntegerDtype",
   "pandas.core.internals.ExtensionBlock",
   "pandas.testing.assert_frame_equal",
   "pyarrow.ExtensionArray.from_storage",
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.table",
   "pytest.raises",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_convert_to_extension_array": {
  "lineno": 3647,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.__version__",
   "pandas.array",
   "pandas.core.arrays.integer._IntegerDtype",
   "pandas.core.internals.ExtensionBlock",
   "pandas.core.internals.IntBlock",
   "pandas.testing.assert_frame_equal",
   "pyarrow.table",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_convert_unsupported_type_error_message": {
  "lineno": 2691,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.__version__",
   "pandas.period_range",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_convert_unsupported_type_error_message.A": {
  "lineno": 2695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_pandas.test_dictionary_encoded_nested_to_pandas": {
  "lineno": 3456,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.ListArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_dictionary_from_pandas": {
  "lineno": 3469,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pyarrow.array",
   "pyarrow.dictionary",
   "pyarrow.int8",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_dictionary_from_pandas_specified_type": {
  "lineno": 3490,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Categorical.from_codes",
   "pyarrow.array",
   "pyarrow.dictionary",
   "pyarrow.int16",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_dictionary_with_pandas": {
  "lineno": 3363,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "numpy.where",
   "pandas.Categorical.from_codes",
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "pyarrow.DictionaryArray.from_arrays",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_logical_type": {
  "lineno": 3090,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.pandas_compat.get_logical_type",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_metadata_compat_missing_field_name": {
  "lineno": 3932,
  "symbols_in_volume": [
   "json.dumps",
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.testing.assert_frame_equal",
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_metadata_compat_range_index_pre_0_12": {
  "lineno": 3763,
  "symbols_in_volume": [
   "json.dumps",
   "pandas.DataFrame",
   "pandas.RangeIndex",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_object_leak_in_dataframe": {
  "lineno": 3241,
  "symbols_in_volume": [
   "numpy.dtype",
   "pyarrow.array",
   "pyarrow.table",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_object_leak_in_numpy_array": {
  "lineno": 3229,
  "symbols_in_volume": [
   "numpy.dtype",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_recordbatch_from_to_pandas": {
  "lineno": 3041,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_recordbatch_table_pass_name_to_pandas": {
  "lineno": 3079,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_recordbatchlist_to_pandas": {
  "lineno": 3055,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_roundtrip_with_bytes_unicode": {
  "lineno": 2634,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_safe_cast_from_float_with_nans_to_int": {
  "lineno": 2598,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.Array.from_pandas",
   "pyarrow.array",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_serialize_deserialize_empty_pandas": {
  "lineno": 2665,
  "symbols_in_volume": [
   "numpy.float32",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_serialize_deserialize_pandas": {
  "lineno": 2656,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_singleton_blocks_zero_copy": {
  "lineno": 3152,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_struct_with_timestamp_tz": {
  "lineno": 3328,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.Timestamp.now",
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_checks_field_nullability": {
  "lineno": 2799,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.schema",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_columns_and_schema_are_mutually_exclusive": {
  "lineno": 2887,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_columns_argument_only_does_filtering": {
  "lineno": 2860,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_keeps_column_order_of_dataframe": {
  "lineno": 2810,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_keeps_column_order_of_schema": {
  "lineno": 2836,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_keeps_schema_nullability": {
  "lineno": 2904,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_schema_index_columns": {
  "lineno": 2918,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_tuples",
   "pyarrow.Table.from_pandas",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_schema_index_columns__unnamed_index": {
  "lineno": 3008,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Schema.from_pandas",
   "pyarrow.Table.from_pandas",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_from_pandas_schema_with_custom_metadata": {
  "lineno": 3029,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Schema.from_pandas",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_integer_object_nulls_option": {
  "lineno": 883,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_table_uses_memory_pool": {
  "lineno": 3213,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "numpy.int64",
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_timestamp_as_object_non_nanosecond": {
  "lineno": 4032,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.timestamp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_timestamp_as_object_out_of_range": {
  "lineno": 4023,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_timestamp_as_object_parquet": {
  "lineno": 4010,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pytest.mark.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_date_time": {
  "lineno": 2772,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_integers_as_objects": {
  "lineno": 2755,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_strings_array_types": {
  "lineno": 2728,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.chunked_array",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_deduplicate_strings_table_types": {
  "lineno": 2740,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_extension_dtypes_mapping": {
  "lineno": 3731,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.dtype",
   "pandas.DataFrame",
   "pandas.Int64Dtype",
   "pandas.PeriodDtype",
   "pandas.__version__",
   "pandas.array",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.table",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_self_destruct": {
  "lineno": 3195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_self_destruct._make_table": {
  "lineno": 3198,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_to_pandas_split_blocks": {
  "lineno": 3173,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_pandas.test_variable_dictionary_to_pandas": {
  "lineno": 3412,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.testing.assert_series_equal",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.concat_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas",
   "pandas.testing",
   "pyarrow.parquet",
   "pytest.mark.dataset",
   "pytest.mark.parametrize",
   "pytest.mark.parquet",
   "pytest.mark.skip",
   "pytest.mark.xfail",
   "pytest.param"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_parquet._assert_dataset_is_picklable": {
  "lineno": 3305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._assert_dataset_is_picklable.is_pickleable": {
  "lineno": 3306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._assert_dataset_paths": {
  "lineno": 2596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._check_roundtrip": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._close": {
  "lineno": 1027,
  "symbols_in_volume": [
   "pyarrow.float32",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._filter_partition": {
  "lineno": 2356,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "numpy.ones",
   "pandas.Timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories": {
  "lineno": 2231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories._visit_level": {
  "lineno": 2237,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.util.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._make_dataset_for_pickling": {
  "lineno": 3277,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.ParquetWriter",
   "pyarrow.parquet.write_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._make_example_multifile_dataset": {
  "lineno": 2584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._partition_test_for_filesystem": {
  "lineno": 2192,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._random_integers": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._read_table": {
  "lineno": 81,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_table": {
  "lineno": 85,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._simple_table_roundtrip": {
  "lineno": 3048,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._simple_table_write_read": {
  "lineno": 3825,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "lineno": 537,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pyarrow.tests.util.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_read_common_metadata_files": {
  "lineno": 2269,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "os.path.join",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions": {
  "lineno": 2870,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_to_dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions": {
  "lineno": 2813,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_metadata",
   "pyarrow.parquet.write_to_dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._write_table": {
  "lineno": 70,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.pandas_compat._pandas_api.is_data_frame",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.alltypes_sample": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.datadir": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.make_sample_file": {
  "lineno": 759,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.s3_bucket": {
  "lineno": 2131,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.s3_example": {
  "lineno": 2154,
  "symbols_in_volume": [
   "pyarrow.util.guid",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_column_metadata_handling": {
  "lineno": 3252,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_multi_level_named": {
  "lineno": 3193,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.read_csv",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_multi_level_some_named": {
  "lineno": 3222,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.read_csv",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_naming": {
  "lineno": 3170,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.read_csv",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_binary_array_overflow_to_chunked": {
  "lineno": 3075,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ChunkedArray",
   "pyarrow.Table.from_pandas",
   "pytest.mark.large_memory",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_buffer_contents": {
  "lineno": 4093,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pydict",
   "pyarrow.array",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_builtin_pickle_dataset": {
  "lineno": 3324,
  "symbols_in_volume": [
   "pickle",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_byte_array_exactly_2gb": {
  "lineno": 3055,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.table",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_byte_stream_split": {
  "lineno": 773,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_categorical_index_survives_roundtrip": {
  "lineno": 3790,
  "symbols_in_volume": [
   "pandas.CategoricalIndex",
   "pandas.DataFrame",
   "pyarrow.BufferOutputStream",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_categorical_order_survives_roundtrip": {
  "lineno": 3807,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_chunked_table_write": {
  "lineno": 215,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_cloudpickle_dataset": {
  "lineno": 3331,
  "symbols_in_volume": [
   "pytest.importorskip",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_coerce_timestamps": {
  "lineno": 1157,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.timestamp",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_coerce_timestamps_truncated": {
  "lineno": 1199,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_arrays": {
  "lineno": 1145,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_lists": {
  "lineno": 1229,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compare_schemas": {
  "lineno": 1096,
  "symbols_in_volume": [
   "pyarrow.parquet.ColumnSchema",
   "pyarrow.parquet.ParquetSchema",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compression_level": {
  "lineno": 812,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_create_parquet_dataset_multi_threaded": {
  "lineno": 1709,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.ParquetManifest",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_enable_buffered_stream": {
  "lineno": 2516,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_memory_map": {
  "lineno": 2497,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_partitioning": {
  "lineno": 4145,
  "symbols_in_volume": [
   "pyarrow.dataset.partitioning",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.mark.dataset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_dictionary": {
  "lineno": 3649,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pyarrow.tests.util.rands",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas": {
  "lineno": 2464,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas_common_metadata": {
  "lineno": 2539,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Index",
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_metadata",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_unsupported_keywords": {
  "lineno": 4123,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_table",
   "pyarrow.schema",
   "pytest.mark.dataset",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types": {
  "lineno": 1242,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Timestamp",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_datetime_timezone_tzinfo": {
  "lineno": 365,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.timezone.utc",
   "pandas.DataFrame",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_decimal_roundtrip": {
  "lineno": 3338,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.tests.util.randdecimal",
   "pyarrow.tests.util.random_seed",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_decimal_roundtrip_negative_scale": {
  "lineno": 3366,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dictionary_array_automatically_read": {
  "lineno": 3834,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.random.randint",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_direct_read_dictionary": {
  "lineno": 3623,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pyarrow.tests.util.rands",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_direct_read_dictionary_subfield": {
  "lineno": 3675,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.ListArray.from_arrays",
   "pyarrow.array",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pyarrow.tests.util.rands",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_directory": {
  "lineno": 2708,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_lists_table_roundtrip": {
  "lineno": 318,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_row_groups": {
  "lineno": 3486,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_table_no_columns": {
  "lineno": 310,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_empty_table_roundtrip": {
  "lineno": 293,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_pandas",
   "pyarrow.list_",
   "pyarrow.null",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_enable_buffered_stream": {
  "lineno": 253,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_fastparquet_cross_compatibility": {
  "lineno": 4045,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "pyarrow.parquet.read_pandas",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.importorskip",
   "pytest.mark.fastparquet",
   "pytest.mark.filterwarnings",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_field_id_metadata": {
  "lineno": 3861,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.write_table",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_file_with_over_int16_max_row_groups": {
  "lineno": 282,
  "symbols_in_volume": [
   "pyarrow.table",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filter_before_validate_schema": {
  "lineno": 4021,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.chunked_array",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_cutoff_exclusive_datetime": {
  "lineno": 1871,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.arange",
   "numpy.array",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_cutoff_exclusive_integer": {
  "lineno": 1835,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_equivalency": {
  "lineno": 1747,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tile",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_inclusive_integer": {
  "lineno": 1922,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_inclusive_set": {
  "lineno": 1958,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.tile",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_invalid_column": {
  "lineno": 2042,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_invalid_pred_op": {
  "lineno": 1996,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_filters_read_table": {
  "lineno": 2068,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.read_pandas",
   "pyarrow.parquet.read_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_fixed_size_binary": {
  "lineno": 1463,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_custom_prefixes": {
  "lineno": 2684,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_hidden_files_dot": {
  "lineno": 2622,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_hidden_files_underscore": {
  "lineno": 2642,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_no_private_directories_in_base_path": {
  "lineno": 2662,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_private_directories": {
  "lineno": 2604,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_index_column_name_duplicate": {
  "lineno": 3121,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_list_records": {
  "lineno": 1425,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_table_int32_overflow": {
  "lineno": 3035,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.iinfo",
   "numpy.ones",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.uint8",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_list_of_binary_large_cell": {
  "lineno": 3100,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.mark.large_memory",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_list_of_datetime_time_roundtrip": {
  "lineno": 1358,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_lz4_compression_disabled": {
  "lineno": 753,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.array",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_memory_map": {
  "lineno": 236,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_merging_parquet_tables_with_different_pandas_metadata": {
  "lineno": 3457,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.uint8",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.parquet.ParquetWriter",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_min_chunksize": {
  "lineno": 1494,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multi_dataset_metadata": {
  "lineno": 3940,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multiindex_duplicate_values": {
  "lineno": 2722,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multiple_path_types": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multithreaded_read": {
  "lineno": 1473,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_nested_list_nonnullable_roundtrip_bug": {
  "lineno": 326,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.list_",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_noncoerced_nanoseconds_written_without_exception": {
  "lineno": 2770,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_can_write_nested_data": {
  "lineno": 649,
  "symbols_in_volume": [
   "os.environ",
   "pandas.DataFrame",
   "pyarrow.BufferOutputStream",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_categorical_na_type_row_groups": {
  "lineno": 3899,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.BufferOutputStream",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_categorical_roundtrip": {
  "lineno": 3919,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical.from_codes",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_roundtrip": {
  "lineno": 446,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_roundtrip": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_roundtrip_read_pandas_no_index_written": {
  "lineno": 417,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_column_multiindex": {
  "lineno": 396,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "lineno": 703,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.lib.Codec.is_available",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_custom_metadata": {
  "lineno": 376,
  "symbols_in_volume": [
   "json.loads",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_metadata",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_datetime_tz": {
  "lineno": 339,
  "symbols_in_volume": [
   "datetime.datetime",
   "io.BytesIO",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_empty_roundtrip": {
  "lineno": 635,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "lineno": 560,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "lineno": 674,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_column_statistics_api": {
  "lineno": 949,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.schema",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_file_pass_directory_instead_of_file": {
  "lineno": 3504,
  "symbols_in_volume": [
   "os.mkdir",
   "pyarrow.parquet.ParquetFile",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_file_too_small": {
  "lineno": 3773,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.parquet.read_table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_incremental_file_build": {
  "lineno": 590,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_invalid_version": {
  "lineno": 193,
  "symbols_in_volume": [
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_api": {
  "lineno": 850,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.parquet.ColumnChunkMetaData",
   "pyarrow.parquet.RowGroupMetaData",
   "pyarrow.parquet.Statistics",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_lifetime": {
  "lineno": 941,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_table",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_nested_convenience": {
  "lineno": 3147,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_basics": {
  "lineno": 1672,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDatasetPiece"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_open_and_get_metadata": {
  "lineno": 1655,
  "symbols_in_volume": [
   "pyarrow.Table",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.FileMetaData",
   "pyarrow.parquet.ParquetDatasetPiece",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_read": {
  "lineno": 1641,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDatasetPiece",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_raise_on_unset_statistics": {
  "lineno": 1018,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_read_from_buffer": {
  "lineno": 574,
  "symbols_in_volume": [
   "pyarrow.PythonFile",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_version_timestamp_differences": {
  "lineno": 1367,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Timestamp",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_write_disable_statistics": {
  "lineno": 1065,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_pydict",
   "pyarrow.array",
   "pyarrow.parquet.read_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_context_obj": {
  "lineno": 3381,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_context_obj_with_exception": {
  "lineno": 3408,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem": {
  "lineno": 3513,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem.CustomFS": {
  "lineno": 3518,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem.CustomFS.__init__": {
  "lineno": 3519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_with_caller_provided_filesystem.CustomFS.open": {
  "lineno": 3523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_keys_with_underscores": {
  "lineno": 2104,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_set_dictionary_type": {
  "lineno": 1690,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.IntegerArray",
   "pyarrow.StringArray",
   "pyarrow.parquet.PartitionSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partitioned_dataset": {
  "lineno": 3591,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_table",
   "pyarrow.parquet.write_to_dataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pass_separate_metadata": {
  "lineno": 1512,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.read_metadata",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_column_invalid_index": {
  "lineno": 3610,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.array",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.write_table",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_common_metadata_files": {
  "lineno": 2300,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_metadata_files": {
  "lineno": 2306,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_metadata",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files": {
  "lineno": 2372,
  "symbols_in_volume": [
   "numpy.int64",
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.localfs.read_parquet",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.read_table",
   "pyarrow.util.guid",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files.read_multiple_files": {
  "lineno": 2400,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_row_groups": {
  "lineno": 1580,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_row_groups_with_column_subset": {
  "lineno": 1601,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_non_existent_file": {
  "lineno": 2795,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_pandas_column_subset": {
  "lineno": 619,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_columns_selection": {
  "lineno": 1726,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory": {
  "lineno": 1702,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory_s3fs": {
  "lineno": 2175,
  "symbols_in_volume": [
   "pyarrow.filesystem.S3FSWrapper",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.pandas",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_schema": {
  "lineno": 2335,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_schema",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group": {
  "lineno": 1532,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.ParquetFile",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group_with_column_subset": {
  "lineno": 1555,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.ParquetFile",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_table_doesnt_warn": {
  "lineno": 2804,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_sanitized_spark_field_names": {
  "lineno": 1441,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_scan_contents": {
  "lineno": 1624,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_set_data_page_size": {
  "lineno": 203,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "lineno": 123,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_spark_flavor_preserves_pandas_metadata": {
  "lineno": 1452,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_special_chars_filename": {
  "lineno": 270,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_statistics_convert_logical_types": {
  "lineno": 1036,
  "symbols_in_volume": [
   "datetime.datetime",
   "datetime.time",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.write_table",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_table_large_metadata": {
  "lineno": 4084,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_timestamp_restore_timezone": {
  "lineno": 1350,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_validate_schema_write_table": {
  "lineno": 1123,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.parquet.ParquetWriter",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.uint32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_error_deletes_incomplete_file": {
  "lineno": 2745,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_metadata": {
  "lineno": 3983,
  "symbols_in_volume": [
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_metadata",
   "pyarrow.parquet.write_table",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_nested_zero_length_array_chunk_failure": {
  "lineno": 3562,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_metadata": {
  "lineno": 3708,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_no_partitions": {
  "lineno": 2935,
  "symbols_in_volume": [
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_pandas_preserve_extensiondtypes": {
  "lineno": 2973,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.DataFrame",
   "pandas.__version__",
   "pandas.testing.assert_frame_equal",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pytest.mark.pandas",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_pandas_preserve_index": {
  "lineno": 3005,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.testing.assert_frame_equal",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.parquet.write_to_dataset",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions": {
  "lineno": 2906,
  "symbols_in_volume": [
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_custom_filenames": {
  "lineno": 2941,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "os.path.basename",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_to_dataset",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_custom_filenames.partition_filename_callback": {
  "lineno": 2953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_index_name": {
  "lineno": 2926,
  "symbols_in_volume": [
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions_and_schema": {
  "lineno": 2912,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_writing_empty_lists": {
  "lineno": 3555,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_zlib_compression_bug": {
  "lineno": 3444,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma": {
  "lineno": null,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore": {
  "lineno": 900,
  "symbols_in_volume": [
   "pytest.mark.plasma"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.setup_method": {
  "lineno": 903,
  "symbols_in_volume": [
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.teardown_method": {
  "lineno": 914,
  "symbols_in_volume": [
   "signal.SIGTERM"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.test_eviction": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "lineno": 85,
  "symbols_in_volume": [
   "pytest.mark.plasma"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient._client_blocked_in_get": {
  "lineno": 836,
  "symbols_in_volume": [
   "pyarrow.plasma.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient._client_get_multiple": {
  "lineno": 865,
  "symbols_in_volume": [
   "pyarrow.plasma.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "lineno": 88,
  "symbols_in_volume": [
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "lineno": 99,
  "symbols_in_volume": [
   "signal.SIGTERM",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_buffer_lifetime": {
  "lineno": 267,
  "symbols_in_volume": [
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.RecordBatchStreamReader",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.array",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_death_during_get": {
  "lineno": 843,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_getting_multiple_objects": {
  "lineno": 872,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyarrow.plasma.connect",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_and_seal": {
  "lineno": 183,
  "symbols_in_volume": [
   "pyarrow.plasma.PlasmaObjectExists",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "lineno": 166,
  "symbols_in_volume": [
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "lineno": 632,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "lineno": 413,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "lineno": 297,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectNotAvailable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer": {
  "lineno": 310,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectNotAvailable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer.deserialize_or_output": {
  "lineno": 314,
  "symbols_in_volume": [
   "pyarrow.deserialize",
   "pyarrow.plasma.ObjectNotAvailable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "lineno": 341,
  "symbols_in_volume": [
   "pyarrow.ArrowSerializationError",
   "pyarrow.SerializationContext",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.ipc.get_tensor_size",
   "pyarrow.ipc.read_tensor",
   "pyarrow.ipc.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamReader",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.plasma.ObjectID",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_socket": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_use_full_memory": {
  "lineno": 816,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.plasma.PlasmaStoreFull",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "lineno": 48,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "lineno": 39,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "pyarrow.plasma.ObjectID"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_equality_operators": {
  "lineno": 962,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectID",
   "pytest.mark.plasma"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_randomness": {
  "lineno": 1056,
  "symbols_in_volume": [
   "pytest.mark.plasma",
   "subprocess.check_output",
   "sys.executable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_size": {
  "lineno": 954,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectID",
   "pytest.mark.plasma",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_client_sharing": {
  "lineno": 991,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store",
   "pytest.mark.plasma"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_list": {
  "lineno": 1006,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store",
   "pytest.mark.plasma",
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_store_capacity": {
  "lineno": 1064,
  "symbols_in_volume": [
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store",
   "pytest.mark.plasma"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_use_huge_pages": {
  "lineno": 975,
  "symbols_in_volume": [
   "os.path.exists",
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store",
   "pytest.mark.skipif",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.array_equal",
   "numpy.ones",
   "numpy.random.bytes",
   "numpy.random.randn",
   "numpy.split"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.FromPlasma": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.ToPlasma": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.test_plasma_tf_op": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "pyarrow.plasma",
   "pyarrow.plasma.build_plasma_tensorflow_op",
   "pyarrow.plasma.connect",
   "pyarrow.plasma.start_plasma_store",
   "pyarrow.plasma.tf_plasma_op",
   "pytest.mark.plasma",
   "pytest.mark.skip",
   "pytest.mark.tensorflow",
   "pytest.skip",
   "tensorflow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_scalars.test_basics": {
  "lineno": 27,
  "symbols_in_volume": [
   "datetime.date.today",
   "datetime.datetime.now",
   "datetime.timedelta",
   "numpy.float16",
   "pyarrow.BinaryScalar",
   "pyarrow.BinaryValue",
   "pyarrow.BooleanScalar",
   "pyarrow.BooleanValue",
   "pyarrow.Date32Scalar",
   "pyarrow.Date32Value",
   "pyarrow.DoubleScalar",
   "pyarrow.DoubleValue",
   "pyarrow.DurationScalar",
   "pyarrow.DurationValue",
   "pyarrow.FloatScalar",
   "pyarrow.FloatValue",
   "pyarrow.HalfFloatScalar",
   "pyarrow.HalfFloatValue",
   "pyarrow.Int16Scalar",
   "pyarrow.Int16Value",
   "pyarrow.Int32Scalar",
   "pyarrow.Int32Value",
   "pyarrow.Int64Scalar",
   "pyarrow.Int64Value",
   "pyarrow.Int8Scalar",
   "pyarrow.Int8Value",
   "pyarrow.LargeListScalar",
   "pyarrow.LargeListValue",
   "pyarrow.ListScalar",
   "pyarrow.ListValue",
   "pyarrow.StringScalar",
   "pyarrow.StringValue",
   "pyarrow.StructScalar",
   "pyarrow.StructValue",
   "pyarrow.Time64Scalar",
   "pyarrow.Time64Value",
   "pyarrow.TimestampScalar",
   "pyarrow.TimestampValue",
   "pyarrow.UInt16Scalar",
   "pyarrow.UInt16Value",
   "pyarrow.UInt32Scalar",
   "pyarrow.UInt32Value",
   "pyarrow.UInt64Scalar",
   "pyarrow.UInt64Value",
   "pyarrow.UInt8Scalar",
   "pyarrow.UInt8Value",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.large_list",
   "pyarrow.scalar",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_binary": {
  "lineno": 320,
  "symbols_in_volume": [
   "pyarrow.BinaryScalar",
   "pyarrow.Buffer",
   "pyarrow.LargeBinaryScalar",
   "pyarrow.binary",
   "pyarrow.large_binary",
   "pyarrow.scalar",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_bool": {
  "lineno": 102,
  "symbols_in_volume": [
   "pyarrow.BooleanScalar",
   "pyarrow.scalar"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_cast": {
  "lineno": 184,
  "symbols_in_volume": [
   "pyarrow.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_date": {
  "lineno": 162,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.scalar"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_decimal": {
  "lineno": 144,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.ArrowInvalid",
   "pyarrow.Decimal128Scalar",
   "pyarrow.decimal128",
   "pyarrow.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_dictionary": {
  "lineno": 495,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration": {
  "lineno": 259,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration_nanos_nopandas": {
  "lineno": 288,
  "symbols_in_volume": [
   "datetime.timedelta",
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.nopandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration_nanos_pandas": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.Timedelta",
   "pyarrow.array",
   "pyarrow.duration",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_fixed_size_binary": {
  "lineno": 339,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.FixedSizeBinaryScalar",
   "pyarrow.binary",
   "pyarrow.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_fixed_size_list": {
  "lineno": 402,
  "symbols_in_volume": [
   "pyarrow.FixedSizeListScalar",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_hashing": {
  "lineno": 93,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list": {
  "lineno": 348,
  "symbols_in_volume": [
   "pyarrow.Array",
   "pyarrow.LargeListScalar",
   "pyarrow.ListScalar",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.scalar",
   "pyarrow.string",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list_from_numpy": {
  "lineno": 372,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.scalar"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list_from_pandas": {
  "lineno": 378,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.nan",
   "pandas.Series",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.decimal128",
   "pyarrow.list_",
   "pyarrow.scalar",
   "pyarrow.utf8",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_map": {
  "lineno": 464,
  "symbols_in_volume": [
   "pyarrow.Array",
   "pyarrow.MapScalar",
   "pyarrow.int8",
   "pyarrow.map_",
   "pyarrow.scalar",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_null_singleton": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow.NullScalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_nulls": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.array",
   "pyarrow.scalar"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_numerics": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.float16",
   "pyarrow.DoubleScalar",
   "pyarrow.HalfFloatScalar",
   "pyarrow.Int64Scalar",
   "pyarrow.scalar",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_string": {
  "lineno": 302,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.LargeStringScalar",
   "pyarrow.StringScalar",
   "pyarrow.large_string",
   "pyarrow.scalar",
   "pyarrow.string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_struct": {
  "lineno": 418,
  "symbols_in_volume": [
   "pyarrow.FloatScalar",
   "pyarrow.Int16Scalar",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.scalar",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_time": {
  "lineno": 173,
  "symbols_in_volume": [
   "datetime.time",
   "pyarrow.scalar",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pyarrow.Array.from_pandas",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp_nanos_nopandas": {
  "lineno": 221,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.scalar",
   "pyarrow.timestamp",
   "pytest.mark.nopandas",
   "pytest.raises",
   "pytz.timezone"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp_no_overflow": {
  "lineno": 245,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.scalar",
   "pyarrow.timestamp",
   "pytz.utc"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_schema.test_empty_table": {
  "lineno": 611,
  "symbols_in_volume": [
   "pyarrow.Table",
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_flatten": {
  "lineno": 391,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_from_numpy_dtype": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.unicode",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.duration",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.from_numpy_dtype",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "lineno": 411,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_constructor_errors": {
  "lineno": 31,
  "symbols_in_volume": [
   "pyarrow.Schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_duplicate_fields": {
  "lineno": 359,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equality_operators": {
  "lineno": 482,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "lineno": 435,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_invalid_type": {
  "lineno": 473,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_propagates_check_metadata": {
  "lineno": 459,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_mapping": {
  "lineno": 338,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_pandas": {
  "lineno": 623,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.array",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Int32Dtype",
   "pandas.__version__",
   "pandas.array",
   "pyarrow.Schema.from_pandas",
   "pyarrow.Table.from_pandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_tuples": {
  "lineno": 318,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_get_fields": {
  "lineno": 509,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_merge": {
  "lineno": 659,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.bool_",
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.unify_schemas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "lineno": 530,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "lineno": 550,
  "symbols_in_volume": [
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_sizeof": {
  "lineno": 645,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_to_string_with_metadata": {
  "lineno": 247,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "lineno": 157,
  "symbols_in_volume": [
   "pyarrow.time32",
   "pyarrow.time64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_comparisons": {
  "lineno": 93,
  "symbols_in_volume": [
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_for_alias": {
  "lineno": 100,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.duration",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.type_for_alias",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "lineno": 38,
  "symbols_in_volume": [
   "pyarrow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_schema_pickling": {
  "lineno": 565,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.Field",
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int8",
   "pyarrow.lib.UnionMode_DENSE",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.map_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.union"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "lineno": 150,
  "symbols_in_volume": [
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype_check_import": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.tests.util.invoke_script",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.Counter",
   "collections.OrderedDict",
   "collections.deque",
   "collections.namedtuple",
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.normal",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "numpy.zeros",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "sparse",
   "string.printable",
   "sys.modules",
   "torch"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Serializable": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass.__init__": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization._check_component_roundtrip": {
  "lineno": 267,
  "symbols_in_volume": [
   "pyarrow.SerializedPyObject.from_components",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.__name__",
   "numpy.testing.assert_equal",
   "pyarrow.Array",
   "pyarrow.RecordBatch",
   "pyarrow.SparseCOOTensor",
   "pyarrow.SparseCSCMatrix",
   "pyarrow.SparseCSFTensor",
   "pyarrow.SparseCSRMatrix",
   "pyarrow.Table",
   "pyarrow.Tensor",
   "pyarrow.lib.is_named_tuple",
   "torch",
   "torch.equal",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.deserialize_regex": {
  "lineno": 1065,
  "symbols_in_volume": [
   "pyarrow.deserialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.deserialize_serializable": {
  "lineno": 962,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_buffer": {
  "lineno": 276,
  "symbols_in_volume": [
   "pyarrow.allocate_buffer",
   "pytest.yield_fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "lineno": 235,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "lineno": 255,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialize_serializable": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.memory_map",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization": {
  "lineno": 851,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.BufferClass": {
  "lineno": 853,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.deserialize_buffer_class": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.serialize_buffer_class": {
  "lineno": 856,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone": {
  "lineno": 294,
  "symbols_in_volume": [
   "pyarrow.SerializationContext",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.Foo": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_deserializer": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_serializer": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_datetime_serialization": {
  "lineno": 390,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_default_dict_serialization": {
  "lineno": 371,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_buffer_in_different_process": {
  "lineno": 1089,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pyarrow.serialize",
   "pyarrow.tests.util.invoke_script",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_components_in_different_process": {
  "lineno": 1030,
  "symbols_in_volume": [
   "pickle.dumps",
   "pyarrow.array",
   "pyarrow.int8",
   "pyarrow.serialize",
   "pyarrow.tests.util.get_modified_env_with_pythonpath",
   "subprocess.check_call",
   "sys.executable",
   "sys.path"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process": {
  "lineno": 1070,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue",
   "pyarrow.SerializationContext",
   "pyarrow.serialize",
   "re.compile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_empty_tensor": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "numpy.testing.assert_array_equal",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses": {
  "lineno": 933,
  "symbols_in_volume": [
   "pyarrow.SerializationContext",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo.__init__": {
  "lineno": 936,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_integer_limits": {
  "lineno": 334,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.ArrowInvalid",
   "pyarrow.serialize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_base_object": {
  "lineno": 474,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.read_serialized",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization": {
  "lineno": 803,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.matrix",
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.read_serialized",
   "pyarrow.serialize",
   "pytest.mark.filterwarnings"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType": {
  "lineno": 806,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType.__init__": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization": {
  "lineno": 512,
  "symbols_in_volume": [
   "numpy.alltrue",
   "numpy.ndarray",
   "numpy.zeros",
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray": {
  "lineno": 514,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray.__new__": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.deserializer": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.serializer": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_path_objects": {
  "lineno": 1139,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_broken": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_notbroken": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pyarrow_objects_serialization": {
  "lineno": 830,
  "symbols_in_volume": [
   "numpy.random.rand",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_arrays",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pydata_sparse_sparse_coo_tensor_serialization": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.serialize",
   "pytest.mark.skipif",
   "sparse",
   "sparse.COO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_coo_tensor_serialization": {
  "lineno": 586,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.serialize",
   "pytest.mark.skipif",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_csc_matrix_serialization": {
  "lineno": 718,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.serialize",
   "pytest.mark.skipif",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_csr_matrix_serialization": {
  "lineno": 660,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.serialize",
   "pytest.mark.skipif",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "lineno": 901,
  "symbols_in_volume": [
   "pyarrow.DeserializationCallbackError",
   "pyarrow.SerializationCallbackError",
   "pyarrow.SerializationContext",
   "pyarrow.serialize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass2": {
  "lineno": 924,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy": {
  "lineno": 492,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.DummyClass": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.deserialize_dummy_class": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.serialize_dummy_class": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_determinism": {
  "lineno": 1188,
  "symbols_in_volume": [
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_read_concatenated_records": {
  "lineno": 1053,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.read_serialized",
   "pyarrow.serialize_to"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects": {
  "lineno": 1195,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.serialize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects.ClassA": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialize_subclasses": {
  "lineno": 973,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "lineno": 353,
  "symbols_in_volume": [
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_components_invalid_cases": {
  "lineno": 1000,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.deserialize_components",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle": {
  "lineno": 1100,
  "symbols_in_volume": [
   "pyarrow.SerializationContext",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.Foo": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps1": {
  "lineno": 1112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps2": {
  "lineno": 1126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads1": {
  "lineno": 1115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads2": {
  "lineno": 1129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_coo_tensor_components_serialization": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "pyarrow.SparseCOOTensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_coo_tensor_serialization": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCOOTensor",
   "pyarrow.SparseCOOTensor.from_numpy",
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csc_matrix_components_serialization": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "pyarrow.SparseCSCMatrix.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csc_matrix_serialization": {
  "lineno": 674,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSCMatrix",
   "pyarrow.SparseCSCMatrix.from_numpy",
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csf_tensor_components_serialization": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "pyarrow.SparseCSFTensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csf_tensor_serialization": {
  "lineno": 732,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "pyarrow.SparseCSFTensor",
   "pyarrow.SparseCSFTensor.from_numpy",
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csr_matrix_components_serialization": {
  "lineno": 643,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "pyarrow.SparseCSRMatrix.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csr_matrix_serialization": {
  "lineno": 616,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSRMatrix",
   "pyarrow.SparseCSRMatrix.from_numpy",
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_tensor_alignment": {
  "lineno": 1150,
  "symbols_in_volume": [
   "numpy.random.normal",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_cuda": {
  "lineno": 451,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "torch",
   "torch.cuda.is_available",
   "torch.nn.Conv2d"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_serialization": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pyarrow.default_serialization_context",
   "pyarrow.register_torch_serialization_handlers",
   "pytest.importorskip",
   "torch.LongTensor",
   "torch.Size",
   "torch.from_numpy",
   "torch.randn",
   "torch.sparse_coo_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix",
   "sparse"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_sparse_tensor.test_dense_to_sparse_tensor": {
  "lineno": 363,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCOOTensor",
   "pyarrow.SparseCSCMatrix",
   "pyarrow.SparseCSFTensor",
   "pyarrow.SparseCSRMatrix",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_pydata_sparse_sparse_coo_tensor_roundtrip": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCOOTensor.from_pydata_sparse",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "sparse",
   "sparse.COO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_base_object": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.SparseCOOTensor.from_dense_numpy",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_from_dense": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCOOTensor.from_dense_numpy",
   "pyarrow.SparseCOOTensor.from_tensor",
   "pyarrow.Tensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_numpy_roundtrip": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCOOTensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_scipy_roundtrip": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "pyarrow.SparseCOOTensor.from_scipy",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_base_object": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.SparseCSFTensor.from_dense_numpy",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_from_dense_numpy": {
  "lineno": 241,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSFTensor.from_dense_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_from_dense_tensor": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSFTensor.from_tensor",
   "pyarrow.Tensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_numpy_roundtrip": {
  "lineno": 337,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSFTensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_base_object": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pyarrow.SparseCSRMatrix.from_dense_numpy",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_from_dense": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSRMatrix.from_dense_numpy",
   "pyarrow.SparseCSRMatrix.from_tensor",
   "pyarrow.Tensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_numpy_roundtrip": {
  "lineno": 317,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "pyarrow.SparseCSRMatrix.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_scipy_roundtrip": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "pyarrow.SparseCSRMatrix.from_scipy",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_attrs": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.SparseCOOTensor",
   "pyarrow.SparseCSCMatrix",
   "pyarrow.SparseCSFTensor",
   "pyarrow.SparseCSRMatrix",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.random.randn",
   "pyarrow.SparseCOOTensor",
   "pyarrow.SparseCSCMatrix",
   "pyarrow.SparseCSFTensor",
   "pyarrow.SparseCSRMatrix",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.eq": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.ne": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_strategies": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_strategies.test_arrays": {
  "lineno": 39,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.Array",
   "pyarrow.tests.strategies.all_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_chunked_arrays": {
  "lineno": 44,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.ChunkedArray",
   "pyarrow.tests.strategies.all_chunked_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_fields": {
  "lineno": 29,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.Field",
   "pyarrow.tests.strategies.all_fields"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_record_batches": {
  "lineno": 49,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.RecordBatch",
   "pyarrow.tests.strategies.all_record_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_schemas": {
  "lineno": 34,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.Schema",
   "pyarrow.tests.strategies.all_schemas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_tables": {
  "lineno": 54,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.Table",
   "pyarrow.tests.strategies.all_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_types": {
  "lineno": 24,
  "symbols_in_volume": [
   "hypothesis.given",
   "pyarrow.lib.DataType",
   "pyarrow.tests.strategies.all_types"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_table._table_like_slice_tests": {
  "lineno": 470,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_asarray": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.dtype",
   "numpy.isnan",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pytest.mark.nopandas",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_basics": {
  "lineno": 28,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.chunked_array",
   "pyarrow.lib.Int64Array",
   "pyarrow.string",
   "pytest.raises",
   "sys.getsizeof"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals": {
  "lineno": 119,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.int32",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.eq": {
  "lineno": 120,
  "symbols_in_volume": [
   "pyarrow.ChunkedArray",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.ne": {
  "lineno": 134,
  "symbols_in_volume": [
   "pyarrow.ChunkedArray",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_flatten": {
  "lineno": 271,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_getitem": {
  "lineno": 79,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_iter": {
  "lineno": 104,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "pyarrow.array",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_mismatch_types": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_pickle": {
  "lineno": 166,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.chunked_array",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_str": {
  "lineno": 59,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.ChunkedArray",
   "pyarrow.array",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas_preserve_name": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pandas.date_range",
   "pandas.testing.assert_series_equal",
   "pyarrow.array",
   "pyarrow.table",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "lineno": 897,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_different_schema_metadata": {
  "lineno": 923,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_promotion": {
  "lineno": 946,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables",
   "pyarrow.float32",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_promotion_error": {
  "lineno": 960,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables",
   "pyarrow.float32",
   "pyarrow.int64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_factory_functions_invalid_input": {
  "lineno": 1336,
  "symbols_in_volume": [
   "pyarrow.record_batch",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_from_arrays_schema": {
  "lineno": 1081,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_pydict",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.float32",
   "pyarrow.schema",
   "pyarrow.timestamp",
   "pyarrow.types.is_float32",
   "pyarrow.utf8",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_invalid_table_construct": {
  "lineno": 1072,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.uint8",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.lib.ArrowInvalid",
   "pyarrow.uint8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "lineno": 289,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.record_batch",
   "pyarrow.schema",
   "pytest.raises",
   "sys.getsizeof",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_column_sets_private_name": {
  "lineno": 381,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "lineno": 424,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_equals": {
  "lineno": 342,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_invalid_names": {
  "lineno": 412,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_lengths": {
  "lineno": 395,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_schema": {
  "lineno": 387,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.list_",
   "pyarrow.record_batch",
   "pyarrow.schema",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_struct_array": {
  "lineno": 456,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.RecordBatch.from_struct_array",
   "pyarrow.array",
   "pyarrow.float32",
   "pyarrow.int32",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_struct_array_invalid": {
  "lineno": 451,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_struct_array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_no_fields": {
  "lineno": 404,
  "symbols_in_volume": [
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_pickle": {
  "lineno": 434,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int8",
   "pyarrow.record_batch",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "lineno": 507,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_take": {
  "lineno": 370,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.record_batch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_slice_zero_length_table": {
  "lineno": 515,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.string",
   "pyarrow.table",
   "pyarrow.timestamp",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "lineno": 759,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "lineno": 607,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.array",
   "pyarrow.table",
   "pytest.raises",
   "sys.getsizeof",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_cast_to_incompatible_schema": {
  "lineno": 991,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_sets_private_name": {
  "lineno": 536,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_with_duplicates": {
  "lineno": 748,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_combine_chunks": {
  "lineno": 884,
  "symbols_in_volume": [
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_drop": {
  "lineno": 800,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_equals": {
  "lineno": 542,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function": {
  "lineno": 1269,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.Table.from_pydict",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.table",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args": {
  "lineno": 1299,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args_pandas": {
  "lineno": 1319,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.table",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_flatten": {
  "lineno": 864,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_invalid_names": {
  "lineno": 660,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_preserves_column_metadata": {
  "lineno": 648,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_batches_and_schema": {
  "lineno": 554,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_batches",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.record_batch",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_lists": {
  "lineno": 672,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.table",
   "pyarrow.uint16"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pandas_schema": {
  "lineno": 1236,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.timestamp",
   "pyarrow.types.is_float32",
   "pyarrow.utf8",
   "pytest.mark.pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict": {
  "lineno": 1121,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_pydict",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_arrow_arrays": {
  "lineno": 1178,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_pydict",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema",
   "pyarrow.timestamp",
   "pyarrow.types.is_float32",
   "pyarrow.utf8",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_schema": {
  "lineno": 1212,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_pydict",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.utf8",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_function_unicode_schema": {
  "lineno": 1367,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.array",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_get_field": {
  "lineno": 706,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "lineno": 970,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pickle": {
  "lineno": 691,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.Table.from_arrays",
   "pyarrow.chunked_array",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.uint32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "lineno": 817,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column_empty": {
  "lineno": 831,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_rename_columns": {
  "lineno": 847,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_repr_to_string": {
  "lineno": 1344,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_safe_casting": {
  "lineno": 1013,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select": {
  "lineno": 1418,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select_column": {
  "lineno": 727,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_set_column": {
  "lineno": 782,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_slice_getitem": {
  "lineno": 511,
  "symbols_in_volume": [
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_non_consecutive": {
  "lineno": 1404,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_null_index": {
  "lineno": 1390,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_vanilla_functionality": {
  "lineno": 1381,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_to_batches": {
  "lineno": 575,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pytest.mark.pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_unsafe_casting": {
  "lineno": 1041,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.ipc.get_tensor_size",
   "pyarrow.ipc.read_tensor",
   "pyarrow.ipc.write_tensor",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.eq": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.ne": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_hashing": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.Tensor.from_numpy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_read_from_compressed": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.input_stream",
   "pyarrow.ipc.read_tensor",
   "pyarrow.ipc.write_tensor",
   "pyarrow.output_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.random.randn",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.ipc.read_tensor",
   "pyarrow.ipc.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.random.randn",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.ipc.read_tensor",
   "pyarrow.ipc.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_memoryview": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float16",
   "numpy.float64",
   "numpy.frombuffer",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint64",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.ipc.get_tensor_size"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_types.get_many_types": {
  "lineno": 32,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.decimal128",
   "pyarrow.dictionary",
   "pyarrow.duration",
   "pyarrow.field",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.large_binary",
   "pyarrow.large_list",
   "pyarrow.large_string",
   "pyarrow.lib.UnionMode_DENSE",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.map_",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.union"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_bit_width": {
  "lineno": 543,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.decimal128",
   "pyarrow.float16",
   "pyarrow.int16",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.uint32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_overflow": {
  "lineno": 568,
  "symbols_in_volume": [
   "pyarrow.decimal128",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_properties": {
  "lineno": 561,
  "symbols_in_volume": [
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_ordered_equals": {
  "lineno": 473,
  "symbols_in_volume": [
   "pyarrow.dictionary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_type": {
  "lineno": 449,
  "symbols_in_volume": [
   "pyarrow.dictionary",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.uint32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_duration": {
  "lineno": 288,
  "symbols_in_volume": [
   "pyarrow.duration",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_exact_primitive_types": {
  "lineno": 516,
  "symbols_in_volume": [
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.types.is_date32",
   "pyarrow.types.is_date64",
   "pyarrow.types.is_float16",
   "pyarrow.types.is_float32",
   "pyarrow.types.is_float64",
   "pyarrow.types.is_int16",
   "pyarrow.types.is_int32",
   "pyarrow.types.is_int64",
   "pyarrow.types.is_int8",
   "pyarrow.types.is_time32",
   "pyarrow.types.is_time64",
   "pyarrow.types.is_uint16",
   "pyarrow.types.is_uint32",
   "pyarrow.types.is_uint64",
   "pyarrow.types.is_uint8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_add_remove_metadata": {
  "lineno": 738,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.field",
   "pyarrow.int32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_basic": {
  "lineno": 670,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equality_operators": {
  "lineno": 716,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equals": {
  "lineno": 686,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_metadata": {
  "lineno": 728,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_modified_copies": {
  "lineno": 772,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fields_hashable": {
  "lineno": 502,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_binary_byte_width": {
  "lineno": 556,
  "symbols_in_volume": [
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_list_type": {
  "lineno": 328,
  "symbols_in_volume": [
   "pyarrow.FixedSizeListType",
   "pyarrow.float64",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_hashing": {
  "lineno": 830,
  "symbols_in_volume": [
   "hypothesis.assume",
   "hypothesis.given",
   "hypothesis.strategies.lists",
   "pyarrow.tests.strategies.all_fields",
   "pyarrow.tests.strategies.all_schemas",
   "pyarrow.tests.strategies.all_types"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_binary_string": {
  "lineno": 187,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.large_binary",
   "pyarrow.large_string",
   "pyarrow.string",
   "pyarrow.types.is_binary",
   "pyarrow.types.is_fixed_size_binary",
   "pyarrow.types.is_large_binary",
   "pyarrow.types.is_large_string",
   "pyarrow.types.is_string",
   "pyarrow.types.is_unicode"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean": {
  "lineno": 79,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.int8",
   "pyarrow.types.is_boolean"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean_value": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.bool_",
   "pyarrow.types.is_boolean_value"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_decimal": {
  "lineno": 121,
  "symbols_in_volume": [
   "pyarrow.decimal128",
   "pyarrow.int32",
   "pyarrow.types.is_decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_dictionary": {
  "lineno": 156,
  "symbols_in_volume": [
   "pyarrow.dictionary",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.types.is_dictionary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_float_value": {
  "lineno": 802,
  "symbols_in_volume": [
   "numpy.float64",
   "pyarrow.types.is_float_value"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_floating": {
  "lineno": 103,
  "symbols_in_volume": [
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.types.is_floating"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.types.is_integer",
   "pyarrow.types.is_signed_integer",
   "pyarrow.types.is_unsigned_integer",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer_value": {
  "lineno": 796,
  "symbols_in_volume": [
   "numpy.int64",
   "pyarrow.types.is_integer_value"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_list": {
  "lineno": 126,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.types.is_fixed_size_list",
   "pyarrow.types.is_large_list",
   "pyarrow.types.is_list"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_map": {
  "lineno": 144,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.map_",
   "pyarrow.struct",
   "pyarrow.types.is_map",
   "pyarrow.utf8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_nested_or_struct": {
  "lineno": 161,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.large_list",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.types.is_nested",
   "pyarrow.types.is_struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_null": {
  "lineno": 110,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.types.is_null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_primitive": {
  "lineno": 249,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.types.is_primitive"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_temporal_date_time_timestamp": {
  "lineno": 213,
  "symbols_in_volume": [
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.duration",
   "pyarrow.int32",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.types.is_date",
   "pyarrow.types.is_duration",
   "pyarrow.types.is_temporal",
   "pyarrow.types.is_time",
   "pyarrow.types.is_timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_union": {
  "lineno": 175,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.lib.UnionMode_DENSE",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.types.is_union",
   "pyarrow.union"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_key_value_metadata": {
  "lineno": 590,
  "symbols_in_volume": [
   "collections.abc.Iterator",
   "pyarrow.KeyValueMetadata",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_key_value_metadata_duplicates": {
  "lineno": 663,
  "symbols_in_volume": [
   "pyarrow.KeyValueMetadata",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_large_list_type": {
  "lineno": 307,
  "symbols_in_volume": [
   "pyarrow.LargeListType",
   "pyarrow.large_list",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_list_type": {
  "lineno": 298,
  "symbols_in_volume": [
   "pyarrow.ListType",
   "pyarrow.int64",
   "pyarrow.list_",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_map_type": {
  "lineno": 316,
  "symbols_in_volume": [
   "pyarrow.MapType",
   "pyarrow.int32",
   "pyarrow.map_",
   "pyarrow.utf8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_null_field_may_not_be_non_nullable": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.null",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_pickling": {
  "lineno": 817,
  "symbols_in_volume": [
   "hypothesis.example",
   "hypothesis.given",
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.field",
   "pyarrow.null",
   "pyarrow.tests.strategies.all_fields",
   "pyarrow.tests.strategies.all_schemas",
   "pyarrow.tests.strategies.all_types"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_duplicate_field_names": {
  "lineno": 389,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.struct",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_type": {
  "lineno": 338,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time32_units": {
  "lineno": 266,
  "symbols_in_volume": [
   "pyarrow.time32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time64_units": {
  "lineno": 277,
  "symbols_in_volume": [
   "pyarrow.time64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_timestamp": {
  "lineno": 254,
  "symbols_in_volume": [
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_equality_operators": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_id": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_hashable": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_picklable": {
  "lineno": 496,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type": {
  "lineno": 409,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.lib.UnionMode_DENSE",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.union",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type.check_fields": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.util.changed_environ": {
  "lineno": 199,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.environ",
   "os.environ.get"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.get_modified_env_with_pythonpath": {
  "lineno": 171,
  "symbols_in_volume": [
   "os.environ.copy",
   "os.path.abspath",
   "os.path.dirname",
   "os.pathsep.join",
   "pyarrow.__file__"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.invoke_script": {
  "lineno": 187,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "subprocess.check_call",
   "sys.executable"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.make_dataframe": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.Index",
   "string.ascii_uppercase"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check": {
  "lineno": 128,
  "symbols_in_volume": [
   "psutil.Process"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check._get_use": {
  "lineno": 152,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check._leak_check": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.util.randdecimal": {
  "lineno": 67,
  "symbols_in_volume": [
   "decimal.Decimal",
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.random_ascii": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.random_seed": {
  "lineno": 45,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "random.getstate",
   "random.seed",
   "random.setstate"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.rands": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.choice",
   "numpy.str_",
   "string.ascii_letters",
   "string.digits"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.randsign": {
  "lineno": 35,
  "symbols_in_volume": [
   "random.choice"
  ],
  "type": "function"
 }
}