{
 "pyarrow.tests": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.arrow_7980": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.tests.arrow_7980.cases": {
     "line number": [
      29
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      25
     ]
    },
    "str": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.arrow_7980.cases": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyarrow.tests.arrow_7980.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      86,
      92,
      98,
      104,
      110,
      116,
      122,
      128,
      134,
      140,
      146,
      152
     ]
    },
    "hypothesis.Verbosity.verbose": {
     "line number": [
      33
     ]
    },
    "hypothesis.settings.load_profile": {
     "line number": [
      39
     ]
    },
    "hypothesis.settings.register_profile": {
     "line number": [
      30,
      31,
      32
     ]
    },
    "pyarrow.tests.conftest.defaults": {
     "line number": [
      85,
      91,
      97,
      103,
      109,
      115,
      117,
      121,
      127,
      133,
      139,
      145,
      151
     ]
    },
    "pyarrow.tests.conftest.os": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.conftest.HadoopFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.HadoopFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.PyArrowConfig": {
  "data": {
   "lineno": 181
  },
  "type": "class"
 },
 "pyarrow.tests.conftest.PyArrowConfig.__init__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.PyArrowConfig.apply_mark": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "pyarrow.tests.conftest.groups": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.PyArrowConfig.requires": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "pyarrow.tests.conftest.pytest": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.S3FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.S3FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.TemporaryDirectory": {
  "data": {
   "shadows": "tempfile.TemporaryDirectory"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.datadir": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "pyarrow.tests.conftest.pathlib": {
     "line number": [
      226
     ]
    },
    "pyarrow.tests.conftest.pytest": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.defaults": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.fastparquet": {
  "data": {
   "shadows": "fastparquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.find_free_port": {
  "data": {
   "shadows": "pyarrow.util.find_free_port"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.groups": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.hdfs_connection": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "int": {
     "line number": [
      236
     ]
    },
    "pyarrow.tests.conftest.os": {
     "line number": [
      235,
      236,
      237
     ]
    },
    "pyarrow.tests.conftest.pytest": {
     "line number": [
      232,
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.dataset": {
  "data": {
   "shadows": "pyarrow.dataset"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.flight": {
  "data": {
   "shadows": "pyarrow.flight"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.gandiva": {
  "data": {
   "shadows": "pyarrow.gandiva"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.orc": {
  "data": {
   "shadows": "pyarrow.orc"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.parquet": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "bool_env": {
     "line number": [
      172
     ]
    },
    "pyarrow.tests.conftest.defaults": {
     "line number": [
      172
     ]
    },
    "pyarrow.tests.conftest.groups": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_addoption.bool_env": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      168
     ]
    },
    "pyarrow.tests.conftest.os": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "pyarrow.tests.conftest.PyArrowConfig": {
     "line number": [
      197
     ]
    },
    "pyarrow.tests.conftest.groups": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.s3_connection": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "pyarrow.tests.conftest.pytest": {
     "line number": [
      241,
      242
     ]
    },
    "pyarrow.util.find_free_port": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.s3_server": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "OSError": {
     "line number": [
      266
     ]
    },
    "pyarrow.tests.conftest.os": {
     "line number": [
      254
     ]
    },
    "pyarrow.tests.conftest.pytest": {
     "line number": [
      267,
      249
     ]
    },
    "pyarrow.tests.conftest.s3_connection": {
     "line number": [
      251
     ]
    },
    "pyarrow.tests.conftest.subprocess": {
     "line number": [
      265
     ]
    },
    "pyarrow.tests.conftest.tempdir": {
     "line number": [
      260,
      262
     ]
    },
    "tempfile.TemporaryDirectory": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.tempdir": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyarrow.tests.conftest.pathlib": {
     "line number": [
      221
     ]
    },
    "pyarrow.tests.conftest.pytest": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer": {
  "data": {
   "symbols_in_volume": {
    "open": {
     "line number": [
      24
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      26
     ]
    },
    "pyarrow.tests.deserialize_buffer.data": {
     "line number": [
      26
     ]
    },
    "pyarrow.tests.deserialize_buffer.sys": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.deserialize_buffer.data": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.deserialize_buffer.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      42
     ]
    },
    "numpy.arange": {
     "line number": [
      47,
      48,
      50
     ]
    },
    "numpy.array": {
     "line number": [
      55,
      57,
      58,
      63,
      69
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      77
     ]
    },
    "pyarrow.field": {
     "line number": [
      45,
      53,
      61,
      76
     ]
    },
    "pyarrow.float32": {
     "line number": [
      40
     ]
    },
    "pyarrow.float64": {
     "line number": [
      40
     ]
    },
    "pyarrow.int16": {
     "line number": [
      36
     ]
    },
    "pyarrow.int32": {
     "line number": [
      37
     ]
    },
    "pyarrow.int64": {
     "line number": [
      37,
      76
     ]
    },
    "pyarrow.int8": {
     "line number": [
      36
     ]
    },
    "pyarrow.list_": {
     "line number": [
      45,
      53,
      61
     ]
    },
    "pyarrow.schema": {
     "line number": [
      78
     ]
    },
    "pyarrow.string": {
     "line number": [
      53
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      61
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      38
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      39
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      39
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      95
     ]
    },
    "datetime.date": {
     "line number": [
      134,
      134,
      135,
      137,
      137
     ]
    },
    "datetime.time": {
     "line number": [
      140,
      140,
      140,
      142,
      144,
      144,
      144
     ]
    },
    "numpy.array": {
     "line number": [
      104,
      113
     ]
    },
    "numpy.int64": {
     "line number": [
      105
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      169
     ]
    },
    "pyarrow.binary": {
     "line number": [
      115
     ]
    },
    "pyarrow.date32": {
     "line number": [
      148
     ]
    },
    "pyarrow.date64": {
     "line number": [
      149
     ]
    },
    "pyarrow.field": {
     "line number": [
      98,
      107,
      115,
      123,
      162,
      167
     ]
    },
    "pyarrow.float64": {
     "line number": [
      107
     ]
    },
    "pyarrow.int64": {
     "line number": [
      98,
      167
     ]
    },
    "pyarrow.list_": {
     "line number": [
      98,
      107,
      115,
      123,
      161
     ]
    },
    "pyarrow.schema": {
     "line number": [
      170
     ]
    },
    "pyarrow.string": {
     "line number": [
      123
     ]
    },
    "pyarrow.time32": {
     "line number": [
      150,
      151
     ]
    },
    "pyarrow.time64": {
     "line number": [
      152,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies": {
  "data": {
   "symbols_in_volume": {
    "hypothesis.extra.pytz.timezones": {
     "line number": [
      96
     ]
    },
    "hypothesis.strategies.builds": {
     "line number": [
      45,
      76,
      93,
      98
     ]
    },
    "hypothesis.strategies.characters": {
     "line number": [
      32
     ]
    },
    "hypothesis.strategies.deferred": {
     "line number": [
      185,
      397
     ]
    },
    "hypothesis.strategies.dictionaries": {
     "line number": [
      117
     ]
    },
    "hypothesis.strategies.integers": {
     "line number": [
      47,
      78,
      79,
      200
     ]
    },
    "hypothesis.strategies.just": {
     "line number": [
      38,
      39,
      41,
      42,
      43,
      44
     ]
    },
    "hypothesis.strategies.one_of": {
     "line number": [
      49,
      69,
      81,
      102,
      109,
      357,
      377,
      398
     ]
    },
    "hypothesis.strategies.sampled_from": {
     "line number": [
      57,
      63,
      71,
      83,
      87,
      95,
      100,
      361
     ]
    },
    "hypothesis.strategies.text": {
     "line number": [
      31,
      117,
      117
     ]
    },
    "pyarrow.binary": {
     "line number": [
      41,
      46
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      39
     ]
    },
    "pyarrow.date32": {
     "line number": [
      84
     ]
    },
    "pyarrow.date64": {
     "line number": [
      85
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      77
     ]
    },
    "pyarrow.duration": {
     "line number": [
      99
     ]
    },
    "pyarrow.float16": {
     "line number": [
      72
     ]
    },
    "pyarrow.float32": {
     "line number": [
      73,
      361
     ]
    },
    "pyarrow.float64": {
     "line number": [
      74,
      361
     ]
    },
    "pyarrow.int16": {
     "line number": [
      59
     ]
    },
    "pyarrow.int32": {
     "line number": [
      60
     ]
    },
    "pyarrow.int64": {
     "line number": [
      61
     ]
    },
    "pyarrow.int8": {
     "line number": [
      58
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      43
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      44
     ]
    },
    "pyarrow.null": {
     "line number": [
      38
     ]
    },
    "pyarrow.string": {
     "line number": [
      42
     ]
    },
    "pyarrow.tests.strategies.all_types": {
     "line number": [
      196,
      197,
      348,
      349,
      350,
      351
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      348
     ]
    },
    "pyarrow.tests.strategies.binary_like_types": {
     "line number": [
      114
     ]
    },
    "pyarrow.tests.strategies.binary_type": {
     "line number": [
      50,
      369,
      380
     ]
    },
    "pyarrow.tests.strategies.bool_type": {
     "line number": [
      111,
      359,
      378
     ]
    },
    "pyarrow.tests.strategies.chunked_arrays": {
     "line number": [
      349
     ]
    },
    "pyarrow.tests.strategies.date_types": {
     "line number": [
      103,
      363
     ]
    },
    "pyarrow.tests.strategies.decimal_type": {
     "line number": [
      81,
      362
     ]
    },
    "pyarrow.tests.strategies.dictionary_types": {
     "line number": [
      190,
      402
     ]
    },
    "pyarrow.tests.strategies.duration_types": {
     "line number": [
      106
     ]
    },
    "pyarrow.tests.strategies.fields": {
     "line number": [
      196
     ]
    },
    "pyarrow.tests.strategies.fixed_size_binary_type": {
     "line number": [
      54,
      382
     ]
    },
    "pyarrow.tests.strategies.floating_types": {
     "line number": [
      81
     ]
    },
    "pyarrow.tests.strategies.integer_types": {
     "line number": [
      81,
      360,
      379
     ]
    },
    "pyarrow.tests.strategies.large_binary_type": {
     "line number": [
      52,
      371
     ]
    },
    "pyarrow.tests.strategies.large_string_type": {
     "line number": [
      53,
      372
     ]
    },
    "pyarrow.tests.strategies.list_types": {
     "line number": [
      188,
      192
     ]
    },
    "pyarrow.tests.strategies.map_types": {
     "line number": [
      191
     ]
    },
    "pyarrow.tests.strategies.null_type": {
     "line number": [
      110,
      358
     ]
    },
    "pyarrow.tests.strategies.numeric_types": {
     "line number": [
      112
     ]
    },
    "pyarrow.tests.strategies.pandas_compatible_dictionary_value_types": {
     "line number": [
      403
     ]
    },
    "pyarrow.tests.strategies.pandas_compatible_list_types": {
     "line number": [
      400,
      405
     ]
    },
    "pyarrow.tests.strategies.pandas_compatible_primitive_types": {
     "line number": [
      399,
      400,
      401
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      187
     ]
    },
    "pyarrow.tests.strategies.record_batches": {
     "line number": [
      350
     ]
    },
    "pyarrow.tests.strategies.schemas": {
     "line number": [
      197
     ]
    },
    "pyarrow.tests.strategies.signed_integer_types": {
     "line number": [
      69
     ]
    },
    "pyarrow.tests.strategies.string_type": {
     "line number": [
      51,
      370,
      381
     ]
    },
    "pyarrow.tests.strategies.struct_types": {
     "line number": [
      189,
      193,
      401,
      406
     ]
    },
    "pyarrow.tests.strategies.tables": {
     "line number": [
      351
     ]
    },
    "pyarrow.tests.strategies.temporal_types": {
     "line number": [
      113
     ]
    },
    "pyarrow.tests.strategies.time_types": {
     "line number": [
      104,
      364
     ]
    },
    "pyarrow.tests.strategies.timestamp_types": {
     "line number": [
      105
     ]
    },
    "pyarrow.tests.strategies.unsigned_integer_types": {
     "line number": [
      69
     ]
    },
    "pyarrow.time32": {
     "line number": [
      88,
      89
     ]
    },
    "pyarrow.time64": {
     "line number": [
      90,
      91
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      94
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      65
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      66
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      67
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.strategies._default_array_sizes": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies._pylist": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "draw": {
     "line number": [
      205
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      203
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies._pymap": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "draw": {
     "line number": [
      211,
      212,
      213
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      209
     ]
    },
    "list": {
     "line number": [
      214
     ]
    },
    "pyarrow.tests.strategies._pylist": {
     "line number": [
      212,
      213
     ]
    },
    "zip": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.all_arrays": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_chunked_arrays": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_fields": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_record_batches": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_schemas": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_tables": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_types": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.arrays": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      295
     ]
    },
    "TypeError": {
     "line number": [
      224,
      231
     ]
    },
    "ValueError": {
     "line number": [
      263
     ]
    },
    "draw": {
     "line number": [
      220,
      227,
      229,
      239,
      242,
      283,
      292,
      301
     ]
    },
    "hypothesis.assume": {
     "line number": [
      234,
      288
     ]
    },
    "hypothesis.extra.numpy.arrays": {
     "line number": [
      239,
      242
     ]
    },
    "hypothesis.reject": {
     "line number": [
      250
     ]
    },
    "hypothesis.strategies.SearchStrategy": {
     "line number": [
      219,
      226
     ]
    },
    "hypothesis.strategies.binary": {
     "line number": [
      270,
      274
     ]
    },
    "hypothesis.strategies.booleans": {
     "line number": [
      237
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      217
     ]
    },
    "hypothesis.strategies.dates": {
     "line number": [
      254
     ]
    },
    "hypothesis.strategies.datetimes": {
     "line number": [
      265
     ]
    },
    "hypothesis.strategies.just": {
     "line number": [
      265
     ]
    },
    "hypothesis.strategies.lists": {
     "line number": [
      299
     ]
    },
    "hypothesis.strategies.none": {
     "line number": [
      235,
      298
     ]
    },
    "hypothesis.strategies.one_of": {
     "line number": [
      298
     ]
    },
    "hypothesis.strategies.text": {
     "line number": [
      272
     ]
    },
    "hypothesis.strategies.timedeltas": {
     "line number": [
      268
     ]
    },
    "hypothesis.strategies.times": {
     "line number": [
      252
     ]
    },
    "int": {
     "line number": [
      230,
      261
     ]
    },
    "isinstance": {
     "line number": [
      219,
      221,
      226,
      230
     ]
    },
    "len": {
     "line number": [
      288
     ]
    },
    "numpy.isnan": {
     "line number": [
      245
     ]
    },
    "pyarrow.DataType": {
     "line number": [
      221
     ]
    },
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      293
     ]
    },
    "pyarrow.array": {
     "line number": [
      240,
      246,
      283,
      301
     ]
    },
    "pyarrow.tests.strategies._default_array_sizes": {
     "line number": [
      229,
      285
     ]
    },
    "pyarrow.tests.strategies._pylist": {
     "line number": [
      276,
      278,
      280,
      282
     ]
    },
    "pyarrow.tests.strategies._pymap": {
     "line number": [
      285
     ]
    },
    "pyarrow.tests.strategies.datetime": {
     "line number": [
      258,
      259
     ]
    },
    "pyarrow.tests.strategies.fields": {
     "line number": [
      289,
      291,
      293
     ]
    },
    "pyarrow.tests.strategies.pytz": {
     "line number": [
      262,
      264
     ]
    },
    "pyarrow.types.is_binary": {
     "line number": [
      269
     ]
    },
    "pyarrow.types.is_boolean": {
     "line number": [
      236
     ]
    },
    "pyarrow.types.is_date": {
     "line number": [
      253
     ]
    },
    "pyarrow.types.is_decimal": {
     "line number": [
      247
     ]
    },
    "pyarrow.types.is_dictionary": {
     "line number": [
      281
     ]
    },
    "pyarrow.types.is_duration": {
     "line number": [
      267
     ]
    },
    "pyarrow.types.is_fixed_size_binary": {
     "line number": [
      273
     ]
    },
    "pyarrow.types.is_fixed_size_list": {
     "line number": [
      279
     ]
    },
    "pyarrow.types.is_floating": {
     "line number": [
      241
     ]
    },
    "pyarrow.types.is_integer": {
     "line number": [
      238
     ]
    },
    "pyarrow.types.is_large_binary": {
     "line number": [
      269
     ]
    },
    "pyarrow.types.is_large_list": {
     "line number": [
      277
     ]
    },
    "pyarrow.types.is_large_string": {
     "line number": [
      271
     ]
    },
    "pyarrow.types.is_list": {
     "line number": [
      275
     ]
    },
    "pyarrow.types.is_map": {
     "line number": [
      284
     ]
    },
    "pyarrow.types.is_null": {
     "line number": [
      233
     ]
    },
    "pyarrow.types.is_string": {
     "line number": [
      271
     ]
    },
    "pyarrow.types.is_struct": {
     "line number": [
      287
     ]
    },
    "pyarrow.types.is_time": {
     "line number": [
      251
     ]
    },
    "pyarrow.types.is_timestamp": {
     "line number": [
      255
     ]
    },
    "type": {
     "line number": [
      219,
      220,
      221,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.binary_like_types": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.binary_type": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.bool_type": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.chunked_arrays": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "draw": {
     "line number": [
      307,
      315
     ]
    },
    "hypothesis.assume": {
     "line number": [
      310
     ]
    },
    "hypothesis.strategies.SearchStrategy": {
     "line number": [
      306
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      304
     ]
    },
    "hypothesis.strategies.lists": {
     "line number": [
      313
     ]
    },
    "isinstance": {
     "line number": [
      306
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      315
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      312
     ]
    },
    "pyarrow.types.is_struct": {
     "line number": [
      310
     ]
    },
    "type": {
     "line number": [
      306,
      307,
      307,
      310,
      312,
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.custom_text": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.date_types": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.decimal_type": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.dictionary_types": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "hypothesis.strategies.builds": {
     "line number": [
      164
     ]
    },
    "hypothesis.strategies.one_of": {
     "line number": [
      156
     ]
    },
    "hypothesis.strategies.sampled_from": {
     "line number": [
      159
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      164
     ]
    },
    "pyarrow.float32": {
     "line number": [
      159
     ]
    },
    "pyarrow.float64": {
     "line number": [
      159
     ]
    },
    "pyarrow.tests.strategies.binary_type": {
     "line number": [
      160
     ]
    },
    "pyarrow.tests.strategies.bool_type": {
     "line number": [
      157
     ]
    },
    "pyarrow.tests.strategies.fixed_size_binary_type": {
     "line number": [
      162
     ]
    },
    "pyarrow.tests.strategies.integer_types": {
     "line number": [
      158
     ]
    },
    "pyarrow.tests.strategies.signed_integer_types": {
     "line number": [
      155
     ]
    },
    "pyarrow.tests.strategies.string_type": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.duration_types": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.fields": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "draw": {
     "line number": [
      122,
      123,
      127,
      128
     ]
    },
    "hypothesis.strategies.booleans": {
     "line number": [
      127
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      120
     ]
    },
    "pyarrow.field": {
     "line number": [
      129
     ]
    },
    "pyarrow.tests.strategies.custom_text": {
     "line number": [
      122
     ]
    },
    "pyarrow.tests.strategies.metadata": {
     "line number": [
      128
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      121
     ]
    },
    "pyarrow.types.is_null": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.fixed_size_binary_type": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.floating_types": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.integer_types": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.large_binary_type": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.large_string_type": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.list_types": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "hypothesis.strategies.builds": {
     "line number": [
      134,
      135,
      136
     ]
    },
    "hypothesis.strategies.integers": {
     "line number": [
      139
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      135
     ]
    },
    "pyarrow.list_": {
     "line number": [
      134,
      137
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.map_types": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "draw": {
     "line number": [
      170,
      172
     ]
    },
    "hypothesis.assume": {
     "line number": [
      171
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      167
     ]
    },
    "pyarrow.map_": {
     "line number": [
      173
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      168,
      169
     ]
    },
    "pyarrow.types.is_null": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.metadata": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.npst": {
  "data": {
   "shadows": "hypothesis.extra.numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.null_type": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.numeric_types": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.pandas_compatible_dictionary_value_types": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pandas_compatible_list_types": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "hypothesis.strategies.builds": {
     "line number": [
      392,
      393
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      393
     ]
    },
    "pyarrow.list_": {
     "line number": [
      392
     ]
    },
    "pyarrow.tests.strategies.pandas_compatible_primitive_types": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.pandas_compatible_primitive_types": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pandas_compatible_types": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.primitive_types": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.record_batches": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      325
     ]
    },
    "draw": {
     "line number": [
      321,
      323,
      327,
      328
     ]
    },
    "hypothesis.strategies.SearchStrategy": {
     "line number": [
      320
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      318
     ]
    },
    "int": {
     "line number": [
      324
     ]
    },
    "isinstance": {
     "line number": [
      320,
      324
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      331
     ]
    },
    "pyarrow.tests.strategies._default_array_sizes": {
     "line number": [
      323
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      328
     ]
    },
    "pyarrow.tests.strategies.schemas": {
     "line number": [
      327
     ]
    },
    "type": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.schemas": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "hypothesis.strategies.builds": {
     "line number": [
      182
     ]
    },
    "hypothesis.strategies.lists": {
     "line number": [
      181
     ]
    },
    "pyarrow.schema": {
     "line number": [
      182
     ]
    },
    "pyarrow.tests.strategies.fields": {
     "line number": [
      181
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.signed_integer_types": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.string_type": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.struct_types": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "draw": {
     "line number": [
      147
     ]
    },
    "hypothesis.assume": {
     "line number": [
      150
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      144
     ]
    },
    "hypothesis.strategies.lists": {
     "line number": [
      146
     ]
    },
    "len": {
     "line number": [
      150,
      150
     ]
    },
    "pyarrow.struct": {
     "line number": [
      151
     ]
    },
    "pyarrow.tests.strategies.fields": {
     "line number": [
      146
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      145
     ]
    },
    "set": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.tables": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      341
     ]
    },
    "draw": {
     "line number": [
      337,
      339,
      343,
      344
     ]
    },
    "hypothesis.strategies.SearchStrategy": {
     "line number": [
      336
     ]
    },
    "hypothesis.strategies.composite": {
     "line number": [
      334
     ]
    },
    "int": {
     "line number": [
      340
     ]
    },
    "isinstance": {
     "line number": [
      336,
      340
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      345
     ]
    },
    "pyarrow.tests.strategies._default_array_sizes": {
     "line number": [
      339
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      344
     ]
    },
    "pyarrow.tests.strategies.schemas": {
     "line number": [
      343
     ]
    },
    "type": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.temporal_types": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.time_types": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.timestamp_types": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.tzst": {
  "data": {
   "shadows": "hypothesis.extra.pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.unsigned_integer_types": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyarrow.tests.test_adhoc_memory_leak": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_adhoc_memory_leak.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_deserialize_pandas_arrow_7956": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      34
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      34
     ]
    },
    "pyarrow.tests.test_adhoc_memory_leak.pytest": {
     "line number": [
      31,
      32
     ]
    },
    "pyarrow.tests.util.memory_leak_check": {
     "line number": [
      43
     ]
    },
    "pyarrow.tests.util.rands": {
     "line number": [
      35
     ]
    },
    "range": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_deserialize_pandas_arrow_7956.action": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyarrow.ipc.deserialize_pandas": {
     "line number": [
      40
     ]
    },
    "pyarrow.ipc.serialize_pandas": {
     "line number": [
      38
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_adhoc_memory_leak.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      33
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1649
     ]
    },
    "pyarrow.field": {
     "line number": [
      1658,
      1658
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1651
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1655
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1650,
      1654,
      1658
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      1655
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1654,
      1656
     ]
    },
    "pyarrow.string": {
     "line number": [
      1652,
      1656,
      1658
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1658
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1646
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_array.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1038,
      1045
     ]
    },
    "pyarrow.Array": {
     "line number": [
      1038,
      1045
     ]
    },
    "pyarrow.array": {
     "line number": [
      1042,
      1049,
      1057
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle5": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pickle_test_parametrize": {
  "data": {
   "lineno": 1646
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.test_array_conversions_no_sentinel_values": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1748,
      1755
     ]
    },
    "numpy.nan": {
     "line number": [
      1755,
      1755
     ]
    },
    "pyarrow.array": {
     "line number": [
      1750,
      1755
     ]
    },
    "pyarrow.tests.test_array.sys": {
     "line number": [
      1749,
      1751
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_diff": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      460,
      461,
      462,
      463
     ]
    },
    "pyarrow.int64": {
     "line number": [
      463
     ]
    },
    "pyarrow.list_": {
     "line number": [
      463
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      460,
      461
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_eq": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      516,
      517,
      518
     ]
    },
    "pyarrow.int32": {
     "line number": [
      516,
      517
     ]
    },
    "pyarrow.int64": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "MyObject": {
     "line number": [
      500
     ]
    },
    "ValueError": {
     "line number": [
      501
     ]
    },
    "numpy.array": {
     "line number": [
      500
     ]
    },
    "pyarrow.array": {
     "line number": [
      502
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      501
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type.MyObject": {
  "data": {
   "lineno": 497
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_from_buffers": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      542
     ]
    },
    "numpy.int16": {
     "line number": [
      527
     ]
    },
    "numpy.uint8": {
     "line number": [
      528
     ]
    },
    "pyarrow.Array.from_buffers": {
     "line number": [
      529,
      533,
      537,
      543
     ]
    },
    "pyarrow.int16": {
     "line number": [
      529,
      530,
      533,
      534,
      537,
      539,
      543
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      527,
      528
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_dictionary_scalar": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      365,
      368,
      372
     ]
    },
    "pyarrow.repeat": {
     "line number": [
      367,
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_different_numpy_datetime_units_raises": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1886,
      1886
     ]
    },
    "numpy.array": {
     "line number": [
      1884,
      1885
     ]
    },
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      1888
     ]
    },
    "pyarrow.array": {
     "line number": [
      1889
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1881,
      1882
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1888
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_invalid_dim_raises": {
  "data": {
   "lineno": 2058,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2061,
      2065
     ]
    },
    "numpy.array": {
     "line number": [
      2060,
      2064
     ]
    },
    "pyarrow.array": {
     "line number": [
      2062,
      2066
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2061,
      2065
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_large_pyints": {
  "data": {
   "lineno": 2565,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      2567
     ]
    },
    "int": {
     "line number": [
      2569
     ]
    },
    "pyarrow.array": {
     "line number": [
      2569
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2567
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_list_of_timestamps": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      1894,
      1895,
      1896
     ]
    },
    "pyarrow.array": {
     "line number": [
      1898,
      1899
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1892
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1899
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_masked": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2047
     ]
    },
    "numpy.array": {
     "line number": [
      2048
     ]
    },
    "numpy.ma.array": {
     "line number": [
      2041
     ]
    },
    "pyarrow.array": {
     "line number": [
      2043,
      2044,
      2048
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2047
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_naive_datetimes": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1847
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1849,
      1850
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1852
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_ascii": {
  "data": {
   "lineno": 1959,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1960,
      1967,
      1973,
      1974,
      1982
     ]
    },
    "pyarrow.array": {
     "line number": [
      1962,
      1964,
      1968,
      1969,
      1975,
      1977,
      1983,
      1984
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetime": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1874
     ]
    },
    "numpy.array": {
     "line number": [
      1869,
      1874
     ]
    },
    "pyarrow.array": {
     "line number": [
      1869,
      1870,
      1874
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1864,
      1865
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1855
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1856,
      1857,
      1858,
      1859
     ]
    },
    "type": {
     "line number": [
      1870
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetimeD": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1839
     ]
    },
    "pyarrow.array": {
     "line number": [
      1841,
      1842
     ]
    },
    "pyarrow.date32": {
     "line number": [
      1842
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1839,
      1842
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_str_utf8": {
  "data": {
   "lineno": 2455,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2474,
      2477
     ]
    },
    "bool": {
     "line number": [
      2468
     ]
    },
    "numpy.array": {
     "line number": [
      2458,
      2459,
      2468,
      2473,
      2478
     ]
    },
    "object": {
     "line number": [
      2459
     ]
    },
    "pyarrow.array": {
     "line number": [
      2461,
      2462,
      2463,
      2469,
      2475,
      2478
     ]
    },
    "pyarrow.string": {
     "line number": [
      2461,
      2462,
      2469,
      2475,
      2478
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2474,
      2477
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_timedelta": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1932
     ]
    },
    "list": {
     "line number": [
      1939
     ]
    },
    "numpy.array": {
     "line number": [
      1930,
      1939
     ]
    },
    "pyarrow.DurationArray": {
     "line number": [
      1932
     ]
    },
    "pyarrow.array": {
     "line number": [
      1931,
      1934,
      1939
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1917,
      1918,
      1919,
      1920
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1925,
      1926
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1916
     ]
    },
    "type": {
     "line number": [
      1933,
      1934
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_timedelta_incorrect_unit": {
  "data": {
   "lineno": 1944,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1949,
      1955
     ]
    },
    "numpy.array": {
     "line number": [
      1948,
      1954
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      1946,
      1953
     ]
    },
    "pyarrow.array": {
     "line number": [
      1950,
      1956
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1949,
      1955
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_unicode": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1992,
      1999,
      2005,
      2006,
      2014
     ]
    },
    "pyarrow.array": {
     "line number": [
      1994,
      1996,
      2000,
      2001,
      2007,
      2009,
      2015,
      2016
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_scalar": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "len": {
     "line number": [
      354
     ]
    },
    "pyarrow.array": {
     "line number": [
      318,
      320,
      321,
      322,
      326,
      328,
      329,
      330,
      331,
      335,
      340,
      341,
      342,
      343,
      347,
      349
     ]
    },
    "pyarrow.float64": {
     "line number": [
      321
     ]
    },
    "pyarrow.int64": {
     "line number": [
      320
     ]
    },
    "pyarrow.int8": {
     "line number": [
      345,
      347
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      345,
      347
     ]
    },
    "pyarrow.null": {
     "line number": [
      357
     ]
    },
    "pyarrow.nulls": {
     "line number": [
      319
     ]
    },
    "pyarrow.repeat": {
     "line number": [
      353
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      324,
      328,
      329,
      345
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      311,
      312,
      315
     ]
    },
    "pyarrow.tests.test_array.pytz": {
     "line number": [
      313,
      314,
      337
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      337
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      324,
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_shrunken_masked": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": {
    "numpy.ma.array": {
     "line number": [
      2052
     ]
    },
    "pyarrow.array": {
     "line number": [
      2053,
      2054
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_strided_bool": {
  "data": {
   "lineno": 2069,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      2071
     ]
    },
    "numpy.ones": {
     "line number": [
      2071
     ]
    },
    "pyarrow.array": {
     "line number": [
      2072,
      2073,
      2075,
      2076
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_timestamp_with_generic_unit": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": {
    "numpy.datetime64": {
     "line number": [
      1907,
      1908,
      1909
     ]
    },
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      1911
     ]
    },
    "pyarrow.array": {
     "line number": [
      1913
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1911
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_getitem": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      383,
      386
     ]
    },
    "len": {
     "line number": [
      380,
      380,
      382,
      382,
      385,
      385,
      390,
      390
     ]
    },
    "numpy.int32": {
     "line number": [
      391
     ]
    },
    "pyarrow.array": {
     "line number": [
      377
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      383,
      386
     ]
    },
    "range": {
     "line number": [
      377,
      380,
      382,
      385,
      390
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_iter": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "collections.abc.Iterable": {
     "line number": [
      483
     ]
    },
    "isinstance": {
     "line number": [
      483
     ]
    },
    "pyarrow.array": {
     "line number": [
      478
     ]
    },
    "range": {
     "line number": [
      478,
      480
     ]
    },
    "zip": {
     "line number": [
      480
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_masked": {
  "data": {
   "lineno": 2553,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2556,
      2560,
      2561
     ]
    },
    "pyarrow.array": {
     "line number": [
      2555,
      2560
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2557,
      2562
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle": {
  "data": {
   "lineno": 1663,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1667
     ]
    },
    "pyarrow.tests.test_array.pickle": {
     "line number": [
      1668,
      1669,
      1669
     ]
    },
    "pyarrow.tests.test_array.pickle_test_parametrize": {
     "line number": [
      1663
     ]
    },
    "range": {
     "line number": [
      1668
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle5": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1701
     ]
    },
    "pyarrow.tests.test_array.pickle": {
     "line number": [
      1697,
      1705
     ]
    },
    "pyarrow.tests.test_array.pickle5": {
     "line number": [
      1697,
      1698
     ]
    },
    "pyarrow.tests.test_array.pickle_test_parametrize": {
     "line number": [
      1694
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1699
     ]
    },
    "range": {
     "line number": [
      1705
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle_dictionary": {
  "data": {
   "lineno": 1673,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      1676
     ]
    },
    "pyarrow.tests.test_array.pickle": {
     "line number": [
      1677,
      1678,
      1678
     ]
    },
    "range": {
     "line number": [
      1677
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol": {
  "data": {
   "lineno": 2572,
   "symbols_in_volume": {
    "MyArray": {
     "line number": [
      2581
     ]
    },
    "MyArray2": {
     "line number": [
      2618
     ]
    },
    "MyArrayInvalid": {
     "line number": [
      2606
     ]
    },
    "TypeError": {
     "line number": [
      2607
     ]
    },
    "ValueError": {
     "line number": [
      2593,
      2595
     ]
    },
    "numpy.array": {
     "line number": [
      2581,
      2594,
      2606,
      2618
     ]
    },
    "pyarrow.array": {
     "line number": [
      2582,
      2583,
      2585,
      2586,
      2588,
      2589,
      2594,
      2596,
      2608,
      2619
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      2620
     ]
    },
    "pyarrow.float64": {
     "line number": [
      2588,
      2589
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2583,
      2585,
      2586,
      2620
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2593,
      2595,
      2607
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray": {
  "data": {
   "lineno": 2574
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__arrow_array__": {
  "data": {
   "lineno": 2578,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      2579
     ]
    },
    "type": {
     "line number": [
      2579
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__init__": {
  "data": {
   "lineno": 2575
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2": {
  "data": {
   "lineno": 2611
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2.__arrow_array__": {
  "data": {
   "lineno": 2615,
   "symbols_in_volume": {
    "pyarrow.chunked_array": {
     "line number": [
      2616
     ]
    },
    "type": {
     "line number": [
      2616
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray2.__init__": {
  "data": {
   "lineno": 2612
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid": {
  "data": {
   "lineno": 2599
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__arrow_array__": {
  "data": {
   "lineno": 2603,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2604
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__init__": {
  "data": {
   "lineno": 2600
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_ref_to_ndarray_base": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      506
     ]
    },
    "pyarrow.array": {
     "line number": [
      509
     ]
    },
    "pyarrow.tests.test_array.sys": {
     "line number": [
      508,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      413
     ]
    },
    "len": {
     "line number": [
      409,
      409,
      410,
      410,
      411,
      411,
      419,
      421
     ]
    },
    "pyarrow.array": {
     "line number": [
      395,
      398,
      402
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      413
     ]
    },
    "range": {
     "line number": [
      395,
      398,
      402,
      422,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice_negative_step": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      429
     ]
    },
    "pyarrow.array": {
     "line number": [
      430,
      446
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      431,
      454
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      449,
      450
     ]
    },
    "slice": {
     "line number": [
      434,
      435,
      436,
      437,
      438,
      439,
      440,
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_all_null": {
  "data": {
   "lineno": 2026,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2034
     ]
    },
    "numpy.array": {
     "line number": [
      2028,
      2032
     ]
    },
    "numpy.nan": {
     "line number": [
      2032,
      2032
     ]
    },
    "object": {
     "line number": [
      2028
     ]
    },
    "pyarrow.array": {
     "line number": [
      2029,
      2035,
      2036
     ]
    },
    "pyarrow.string": {
     "line number": [
      2029,
      2035,
      2036
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2034
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_non_string": {
  "data": {
   "lineno": 2020,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2022
     ]
    },
    "numpy.array": {
     "line number": [
      2023
     ]
    },
    "pyarrow.array": {
     "line number": [
      2023
     ]
    },
    "pyarrow.string": {
     "line number": [
      2023
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2022
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_uint64_from_py_over_range": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1743
     ]
    },
    "pyarrow.array": {
     "line number": [
      1742,
      1743
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      1742
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_asarray": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      259,
      265,
      270,
      277,
      286
     ]
    },
    "numpy.dtype": {
     "line number": [
      261,
      267,
      281,
      287
     ]
    },
    "numpy.isnan": {
     "line number": [
      280
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      284
     ]
    },
    "pyarrow.array": {
     "line number": [
      256,
      275,
      285,
      285
     ]
    },
    "pyarrow.int64": {
     "line number": [
      276
     ]
    },
    "pyarrow.lib.Int64Value": {
     "line number": [
      262
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      251,
      252
     ]
    },
    "range": {
     "line number": [
      256
     ]
    },
    "type": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_format": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels": {
  "data": {
   "lineno": 1788,
   "symbols_in_volume": {
    "_check_case": {
     "line number": [
      1794,
      1795
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels._check_case": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1791
     ]
    },
    "pyarrow.array": {
     "line number": [
      1791,
      1792
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_total_values_length": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      126,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_boolean_true_count_false_count": {
  "data": {
   "lineno": 2080,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      2082
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_nested": {
  "data": {
   "lineno": 2124,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      2130,
      2135,
      2146,
      2149,
      2154
     ]
    },
    "len": {
     "line number": [
      2127,
      2143
     ]
    },
    "pyarrow.array": {
     "line number": [
      2125,
      2139
     ]
    },
    "pyarrow.field": {
     "line number": [
      2140,
      2141
     ]
    },
    "pyarrow.int16": {
     "line number": [
      2141
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2125
     ]
    },
    "pyarrow.int8": {
     "line number": [
      2140
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2125
     ]
    },
    "pyarrow.struct": {
     "line number": [
      2140
     ]
    },
    "pyarrow.tests.test_array.struct": {
     "line number": [
      2132,
      2137,
      2151,
      2156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_primitive": {
  "data": {
   "lineno": 2087,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      2093,
      2102,
      2117
     ]
    },
    "len": {
     "line number": [
      2090,
      2092,
      2099,
      2101,
      2108,
      2115
     ]
    },
    "numpy.int8": {
     "line number": [
      2106
     ]
    },
    "pyarrow.array": {
     "line number": [
      2088,
      2106,
      2113
     ]
    },
    "pyarrow.int16": {
     "line number": [
      2088
     ]
    },
    "pyarrow.tests.test_array.struct": {
     "line number": [
      2104,
      2111,
      2119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_binary_to_utf8": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1593
     ]
    },
    "numpy.array": {
     "line number": [
      1596
     ]
    },
    "pyarrow.array": {
     "line number": [
      1584,
      1586,
      1591,
      1596
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1584,
      1592,
      1597
     ]
    },
    "pyarrow.string": {
     "line number": [
      1594,
      1599
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1593
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1585,
      1586
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1121,
      1121
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1122,
      1126
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array_empty": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": {
    "pyarrow.chunked_array": {
     "line number": [
      1135,
      1137
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1132
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1133
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1133
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1132
     ]
    },
    "pyarrow.string": {
     "line number": [
      1132,
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date32_to_int": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1559,
      1564
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1565,
      1566,
      1567
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date64_to_int": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1604
     ]
    },
    "pyarrow.array": {
     "line number": [
      1604,
      1606
     ]
    },
    "pyarrow.date64": {
     "line number": [
      1605
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_dictionary": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1399
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      1395
     ]
    },
    "pyarrow.array": {
     "line number": [
      1396,
      1397,
      1398
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1396,
      1401
     ]
    },
    "pyarrow.string": {
     "line number": [
      1398
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1399
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_duration_to_int": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1575
     ]
    },
    "pyarrow.array": {
     "line number": [
      1575,
      1577
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1576
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_from_null": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1374
     ]
    },
    "pyarrow.array": {
     "line number": [
      1372
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1348,
      1349,
      1367,
      1369
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1353
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1366
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1357
     ]
    },
    "pyarrow.field": {
     "line number": [
      1358,
      1359,
      1360,
      1367,
      1368,
      1369,
      1370
     ]
    },
    "pyarrow.float16": {
     "line number": [
      1346
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1350
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1351,
      1358,
      1366
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1359
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      1352
     ]
    },
    "pyarrow.lib.UnionMode_DENSE": {
     "line number": [
      1368
     ]
    },
    "pyarrow.lib.UnionMode_SPARSE": {
     "line number": [
      1370
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1350,
      1351,
      1359
     ]
    },
    "pyarrow.null": {
     "line number": [
      1342,
      1344,
      1372
     ]
    },
    "pyarrow.string": {
     "line number": [
      1360,
      1366,
      1368,
      1370
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1358
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1363
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1374
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1354,
      1355,
      1356
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      1345,
      1352
     ]
    },
    "pyarrow.union": {
     "line number": [
      1367,
      1369
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1347
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_identities": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1642
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1639
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1625
     ]
    },
    "range": {
     "line number": [
      1627,
      1628,
      1629,
      1630,
      1631,
      1632,
      1633,
      1634
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1063,
      1064,
      1065,
      1066,
      1067,
      1068,
      1069,
      1070,
      1077,
      1078,
      1079,
      1080
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1085
     ]
    },
    "pyarrow.array": {
     "line number": [
      1083
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1070
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1064
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1074
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1085
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      1066
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      1068
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1150,
      1151,
      1152,
      1153,
      1154,
      1155,
      1156,
      1157
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1151,
      1157
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1161
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      1153,
      1155,
      1156
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_list_to_primitive": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1100,
      1104
     ]
    },
    "pyarrow.array": {
     "line number": [
      1099,
      1103
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1103,
      1105
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1101
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1103
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1100,
      1104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_none": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1093
     ]
    },
    "pyarrow.array": {
     "line number": [
      1091
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1330,
      1331,
      1332,
      1333
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1337
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      1332,
      1333
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      1330,
      1331
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_string_to_number_roundtrip": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1380,
      1381,
      1382,
      1383
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1381
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      1383
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time32_to_int": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1532
     ]
    },
    "pyarrow.array": {
     "line number": [
      1532,
      1534
     ]
    },
    "pyarrow.time32": {
     "line number": [
      1533
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time64_to_int": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1541
     ]
    },
    "pyarrow.array": {
     "line number": [
      1541,
      1543
     ]
    },
    "pyarrow.time64": {
     "line number": [
      1542
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_to_int": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1550
     ]
    },
    "pyarrow.array": {
     "line number": [
      1550,
      1552
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1551
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_chunked_array_data_warns": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      1142
     ]
    },
    "isinstance": {
     "line number": [
      1144
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      1144
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1143
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1142
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array": {
  "data": {
   "lineno": 2624,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      2626,
      2626,
      2627
     ]
    },
    "pyarrow.concat_arrays": {
     "line number": [
      2625
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array_different_types": {
  "data": {
   "lineno": 2630,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      2631
     ]
    },
    "pyarrow.array": {
     "line number": [
      2632,
      2632
     ]
    },
    "pyarrow.concat_arrays": {
     "line number": [
      2632
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2631
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array_invalid_type": {
  "data": {
   "lineno": 2635,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2638,
      2642
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      2641
     ]
    },
    "pyarrow.concat_arrays": {
     "line number": [
      2639,
      2643
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2638,
      2642
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_constructor_raises": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      63
     ]
    },
    "pyarrow.Array": {
     "line number": [
      64
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_date64_from_builtin_datetime": {
  "data": {
   "lineno": 1613,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1616,
      1617
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1614,
      1615
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_decimal": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1305,
      1316
     ]
    },
    "pyarrow.array": {
     "line number": [
      1294,
      1299,
      1310
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1296,
      1298,
      1301,
      1307,
      1309,
      1312,
      1318
     ]
    },
    "pyarrow.tests.test_array.decimal": {
     "line number": [
      1295,
      1300,
      1311
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1305,
      1316
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_non_integer": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1287
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1266,
      1272,
      1278
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1274
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1268
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1280
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1288,
      1290
     ]
    },
    "pyarrow.tests.test_array.decimal": {
     "line number": [
      1262,
      1264,
      1271,
      1271,
      1277,
      1277
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1287
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_safe": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": {
    "pyarrow.decimal128": {
     "line number": [
      1199,
      1205,
      1211
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1207
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1201
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1213
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1217,
      1218
     ]
    },
    "pyarrow.tests.test_array.decimal": {
     "line number": [
      1198,
      1198,
      1204,
      1204,
      1210,
      1210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_decimal_to_int_value_out_of_bounds": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1224
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1249
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1229,
      1235,
      1241
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1237
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1231
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1243
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1251,
      1255
     ]
    },
    "pyarrow.tests.test_array.decimal": {
     "line number": [
      1225,
      1227,
      1234,
      1234,
      1240,
      1240
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1249
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_simple": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      1468,
      1472,
      1476
     ]
    },
    "pyarrow.array": {
     "line number": [
      1467,
      1469,
      1471,
      1473,
      1475,
      1477,
      1478
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1483,
      1486
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      1475,
      1478
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_sliced": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      1494,
      1498,
      1503
     ]
    },
    "pyarrow.array": {
     "line number": [
      1493,
      1495,
      1497,
      1499,
      1501,
      1504,
      1505,
      1519
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1510,
      1514
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      1502,
      1505
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_zero_length": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1527
     ]
    },
    "pyarrow.array": {
     "line number": [
      1525
     ]
    },
    "pyarrow.string": {
     "line number": [
      1525
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_arrays_boundscheck": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "pyarrow.ArrowException": {
     "line number": [
      717,
      720
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      715,
      718,
      721,
      725
     ]
    },
    "pyarrow.array": {
     "line number": [
      708,
      709,
      710,
      712
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      717,
      720
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": {
    "len": {
     "line number": [
      703
     ]
    },
    "numpy.array": {
     "line number": [
      693
     ]
    },
    "numpy.repeat": {
     "line number": [
      692
     ]
    },
    "object": {
     "line number": [
      693
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      698
     ]
    },
    "pyarrow.array": {
     "line number": [
      695,
      696
     ]
    },
    "range": {
     "line number": [
      703
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "len": {
     "line number": [
      682
     ]
    },
    "numpy.array": {
     "line number": [
      671,
      672
     ]
    },
    "numpy.repeat": {
     "line number": [
      670
     ]
    },
    "object": {
     "line number": [
      671
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      674,
      675
     ]
    },
    "range": {
     "line number": [
      682
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_indices": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      732
     ]
    },
    "pyarrow.array": {
     "line number": [
      730,
      731
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_empty_cast": {
  "data": {
   "lineno": 2414,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      2441
     ]
    },
    "pyarrow.array": {
     "line number": [
      2440
     ]
    },
    "pyarrow.binary": {
     "line number": [
      2431,
      2432
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      2417
     ]
    },
    "pyarrow.date32": {
     "line number": [
      2429
     ]
    },
    "pyarrow.date64": {
     "line number": [
      2430
     ]
    },
    "pyarrow.float16": {
     "line number": [
      2426
     ]
    },
    "pyarrow.float32": {
     "line number": [
      2427
     ]
    },
    "pyarrow.float64": {
     "line number": [
      2428
     ]
    },
    "pyarrow.int16": {
     "line number": [
      2419
     ]
    },
    "pyarrow.int32": {
     "line number": [
      2420
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2421
     ]
    },
    "pyarrow.int8": {
     "line number": [
      2418
     ]
    },
    "pyarrow.lib.ArrowNotImplementedError": {
     "line number": [
      2441
     ]
    },
    "pyarrow.null": {
     "line number": [
      2416
     ]
    },
    "pyarrow.string": {
     "line number": [
      2433
     ]
    },
    "pyarrow.tests.test_array.itertools": {
     "line number": [
      2436
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      2423
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      2424
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      2425
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      2422
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_fixed_size_list_array_flatten": {
  "data": {
   "lineno": 2305,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      2307,
      2323,
      2332
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2306,
      2322,
      2331
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2306,
      2306,
      2322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_fixed_size_list_from_arrays": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      840,
      843,
      847
     ]
    },
    "pyarrow.FixedSizeListArray.from_arrays": {
     "line number": [
      835,
      841,
      845,
      849
     ]
    },
    "pyarrow.array": {
     "line number": [
      834,
      845
     ]
    },
    "pyarrow.int64": {
     "line number": [
      834,
      837,
      845
     ]
    },
    "pyarrow.list_": {
     "line number": [
      837
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      840,
      843,
      847
     ]
    },
    "range": {
     "line number": [
      834
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_safe": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1166,
      1167,
      1168,
      1169,
      1170,
      1171
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1167,
      1169,
      1171
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_unsafe": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1179,
      1180,
      1181,
      1182,
      1183,
      1184
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1188
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1180,
      1182,
      1184
     ]
    },
    "pyarrow.tests.test_array._check_cast_case": {
     "line number": [
      1189,
      1192
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NULL": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      57
     ]
    },
    "pyarrow.Int64Scalar": {
     "line number": [
      57
     ]
    },
    "pyarrow.array": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_infer_type_masked": {
  "data": {
   "lineno": 2538,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2546
     ]
    },
    "pyarrow.infer_type": {
     "line number": [
      2540,
      2545,
      2550
     ]
    },
    "pyarrow.null": {
     "line number": [
      2547,
      2550
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      2542
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_construction": {
  "data": {
   "lineno": 2177,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2178
     ]
    },
    "pyarrow.Tensor": {
     "line number": [
      2179
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_constructor_repr": {
  "data": {
   "lineno": 2171,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2173
     ]
    },
    "pyarrow.Tensor": {
     "line number": [
      2174
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2173
     ]
    },
    "repr": {
     "line number": [
      2174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": {
    "list_type_factory": {
     "line number": [
      2185,
      2186,
      2209
     ]
    },
    "pyarrow.array": {
     "line number": [
      2190,
      2207,
      2210,
      2219,
      2221
     ]
    },
    "pyarrow.int32": {
     "line number": [
      2183
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2187,
      2209,
      2226,
      2183
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      2183
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2183
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten_non_canonical": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2273
     ]
    },
    "list_type_factory": {
     "line number": [
      2269
     ]
    },
    "pyarrow.array": {
     "line number": [
      2270
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2269
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      2266
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2266
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      2272
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_values_offsets_sliced": {
  "data": {
   "lineno": 2286,
   "symbols_in_volume": {
    "pyarrow.LargeListArray": {
     "line number": [
      2286
     ]
    },
    "pyarrow.ListArray": {
     "line number": [
      2286
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2286
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_child_overflow_to_chunked": {
  "data": {
   "lineno": 2520,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2527,
      2532
     ]
    },
    "len": {
     "line number": [
      2528,
      2533,
      2534,
      2535
     ]
    },
    "pyarrow.Array": {
     "line number": [
      2527
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2532
     ]
    },
    "pyarrow.array": {
     "line number": [
      2526,
      2531
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2520
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      771,
      778
     ]
    },
    "list": {
     "line number": [
      776
     ]
    },
    "list_type_factory": {
     "line number": [
      747,
      757,
      765
     ]
    },
    "numpy.arange": {
     "line number": [
      770
     ]
    },
    "numpy.array": {
     "line number": [
      740
     ]
    },
    "pyarrow.LargeListArray": {
     "line number": [
      738
     ]
    },
    "pyarrow.ListArray": {
     "line number": [
      737
     ]
    },
    "pyarrow.array": {
     "line number": [
      741,
      743,
      746,
      756,
      764
     ]
    },
    "pyarrow.binary": {
     "line number": [
      747,
      757,
      765
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      738
     ]
    },
    "pyarrow.list_": {
     "line number": [
      737
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      771,
      778,
      736
     ]
    },
    "range": {
     "line number": [
      776
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_buffers": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      589,
      597
     ]
    },
    "list_type_factory": {
     "line number": [
      583
     ]
    },
    "pyarrow.Array.from_buffers": {
     "line number": [
      591,
      593,
      594,
      599
     ]
    },
    "pyarrow.array": {
     "line number": [
      584
     ]
    },
    "pyarrow.int16": {
     "line number": [
      583,
      593
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      581
     ]
    },
    "pyarrow.list_": {
     "line number": [
      581
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      589,
      597,
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_value_lengths": {
  "data": {
   "lineno": 2252,
   "symbols_in_volume": {
    "list_type_factory": {
     "line number": [
      2261
     ]
    },
    "pyarrow.array": {
     "line number": [
      2255,
      2262
     ]
    },
    "pyarrow.int32": {
     "line number": [
      2261,
      2253
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2253
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      2253
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2253
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2252
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_value_parent_indices": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": {
    "list_type_factory": {
     "line number": [
      2247
     ]
    },
    "pyarrow.array": {
     "line number": [
      2241,
      2248
     ]
    },
    "pyarrow.int32": {
     "line number": [
      2247,
      2239
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2239
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      2239
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2239
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2238
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      98
     ]
    },
    "range": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_map_from_arrays": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      819,
      823,
      829
     ]
    },
    "len": {
     "line number": [
      786,
      828,
      828
     ]
    },
    "list": {
     "line number": [
      786,
      787,
      801,
      827
     ]
    },
    "numpy.arange": {
     "line number": [
      814,
      815
     ]
    },
    "numpy.array": {
     "line number": [
      783
     ]
    },
    "numpy.concatenate": {
     "line number": [
      824
     ]
    },
    "pyarrow.MapArray.from_arrays": {
     "line number": [
      792,
      806,
      816,
      820,
      824,
      830
     ]
    },
    "pyarrow.array": {
     "line number": [
      784,
      789,
      790,
      793,
      803,
      804,
      807
     ]
    },
    "pyarrow.binary": {
     "line number": [
      793,
      807
     ]
    },
    "pyarrow.int32": {
     "line number": [
      793,
      807
     ]
    },
    "pyarrow.map_": {
     "line number": [
      793,
      807
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      819,
      823,
      829
     ]
    },
    "range": {
     "line number": [
      786
     ]
    },
    "zip": {
     "line number": [
      787,
      801
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nbytes_sizeof": {
  "data": {
   "lineno": 2159,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2160
     ]
    },
    "object.__sizeof__": {
     "line number": [
      2162,
      2165,
      2168
     ]
    },
    "pyarrow.array": {
     "line number": [
      2160,
      2163,
      2166
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2166
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2166
     ]
    },
    "pyarrow.tests.test_array.sys": {
     "line number": [
      2162,
      2165,
      2168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nested_dictionary_array": {
  "data": {
   "lineno": 2445,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      2446,
      2450,
      2451
     ]
    },
    "pyarrow.ListArray.from_arrays": {
     "line number": [
      2447
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nulls": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "len": {
     "line number": [
      301
     ]
    },
    "pyarrow.array": {
     "line number": [
      299
     ]
    },
    "pyarrow.int8": {
     "line number": [
      294
     ]
    },
    "pyarrow.null": {
     "line number": [
      305,
      293
     ]
    },
    "pyarrow.nulls": {
     "line number": [
      298
     ]
    },
    "pyarrow.string": {
     "line number": [
      295
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_numpy_binary_overflow_to_chunked": {
  "data": {
   "lineno": 2481,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2506
     ]
    },
    "numpy.array": {
     "line number": [
      2502
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2506
     ]
    },
    "pyarrow.array": {
     "line number": [
      2503
     ]
    },
    "pyarrow.binary": {
     "line number": [
      2500
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2481
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      2501
     ]
    },
    "range": {
     "line number": [
      2492,
      2496,
      2498,
      2513
     ]
    },
    "str": {
     "line number": [
      2491
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_index": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1832,
      1834
     ]
    },
    "object": {
     "line number": [
      1832
     ]
    },
    "pandas.Index": {
     "line number": [
      1832
     ]
    },
    "pyarrow.array": {
     "line number": [
      1833,
      1834
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1827
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_raise_error": {
  "data": {
   "lineno": 1798,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1819
     ]
    },
    "ValueError": {
     "line number": [
      1819
     ]
    },
    "numpy.nan": {
     "line number": [
      1801,
      1802,
      1803,
      1804,
      1805,
      1806,
      1807,
      1808,
      1809,
      1810,
      1811,
      1812,
      1813,
      1814,
      1815
     ]
    },
    "pyarrow.array": {
     "line number": [
      1820,
      1823
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1806
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1807
     ]
    },
    "pyarrow.date32": {
     "line number": [
      1809,
      1810
     ]
    },
    "pyarrow.date64": {
     "line number": [
      1811
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1808
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1815
     ]
    },
    "pyarrow.tests.test_array.decimal": {
     "line number": [
      1808
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1819
     ]
    },
    "pyarrow.time32": {
     "line number": [
      1812
     ]
    },
    "pyarrow.time64": {
     "line number": [
      1813
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1814
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pickling": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      1682
     ]
    },
    "hypothesis.strategies.integers": {
     "line number": [
      1685
     ]
    },
    "pyarrow.tests.strategies.all_types": {
     "line number": [
      1684
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      1683
     ]
    },
    "pyarrow.tests.test_array.pickle": {
     "line number": [
      1689,
      1690
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_safe_cast_nan_to_int_raises": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      1322
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1324
     ]
    },
    "pyarrow.array": {
     "line number": [
      1322
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1325
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1324
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_slice_chunked_array_zero_chunks": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "pyarrow.chunked_array": {
     "line number": [
      1110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_binary_from_buffers": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "len": {
     "line number": [
      551,
      555,
      561,
      567,
      576
     ]
    },
    "pyarrow.Array.from_buffers": {
     "line number": [
      555
     ]
    },
    "pyarrow.StringArray.from_buffers": {
     "line number": [
      550,
      560,
      566,
      575
     ]
    },
    "pyarrow.array": {
     "line number": [
      547
     ]
    },
    "pyarrow.binary": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_field": {
  "data": {
   "lineno": 2380,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      2406
     ]
    },
    "KeyError": {
     "line number": [
      2410
     ]
    },
    "TypeError": {
     "line number": [
      2402
     ]
    },
    "isinstance": {
     "line number": [
      2392,
      2393
     ]
    },
    "pyarrow.array": {
     "line number": [
      2383,
      2394,
      2395
     ]
    },
    "pyarrow.field": {
     "line number": [
      2381,
      2382
     ]
    },
    "pyarrow.float32": {
     "line number": [
      2382,
      2395
     ]
    },
    "pyarrow.int16": {
     "line number": [
      2381,
      2394,
      2401
     ]
    },
    "pyarrow.lib.FloatArray": {
     "line number": [
      2393
     ]
    },
    "pyarrow.lib.Int16Array": {
     "line number": [
      2392
     ]
    },
    "pyarrow.struct": {
     "line number": [
      2381
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2402,
      2406,
      2410
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_flatten": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      2345,
      2355,
      2363,
      2371
     ]
    },
    "pyarrow.field": {
     "line number": [
      2343,
      2344
     ]
    },
    "pyarrow.float32": {
     "line number": [
      2344,
      2348
     ]
    },
    "pyarrow.int16": {
     "line number": [
      2343,
      2347
     ]
    },
    "pyarrow.struct": {
     "line number": [
      2343
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_slice": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      490
     ]
    },
    "pyarrow.field": {
     "line number": [
      488,
      489
     ]
    },
    "pyarrow.float32": {
     "line number": [
      489
     ]
    },
    "pyarrow.int8": {
     "line number": [
      488
     ]
    },
    "pyarrow.struct": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_arrays": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      640,
      656,
      665
     ]
    },
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      635,
      641,
      643,
      651,
      657,
      659,
      666
     ]
    },
    "pyarrow.array": {
     "line number": [
      625,
      626,
      627
     ]
    },
    "pyarrow.field": {
     "line number": [
      648,
      649,
      650,
      664
     ]
    },
    "pyarrow.int32": {
     "line number": [
      664
     ]
    },
    "pyarrow.int64": {
     "line number": [
      625
     ]
    },
    "pyarrow.struct": {
     "line number": [
      636,
      644,
      652,
      660
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      640,
      656,
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_buffers": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      609,
      618
     ]
    },
    "pyarrow.Array.from_buffers": {
     "line number": [
      611,
      613,
      614,
      615,
      620
     ]
    },
    "pyarrow.array": {
     "line number": [
      605
     ]
    },
    "pyarrow.field": {
     "line number": [
      604,
      604
     ]
    },
    "pyarrow.int16": {
     "line number": [
      604,
      613
     ]
    },
    "pyarrow.struct": {
     "line number": [
      604
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      609,
      618
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      604,
      614
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_time32_time64_from_integer": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1763,
      1764,
      1769,
      1770,
      1775,
      1776,
      1781,
      1782
     ]
    },
    "pyarrow.tests.test_array.datetime": {
     "line number": [
      1764,
      1765,
      1770,
      1771,
      1776,
      1777,
      1782,
      1783
     ]
    },
    "pyarrow.time32": {
     "line number": [
      1763,
      1766,
      1769,
      1772
     ]
    },
    "pyarrow.time64": {
     "line number": [
      1775,
      1778,
      1781,
      1784
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_datetime64": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      202
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      204
     ]
    },
    "pyarrow.array": {
     "line number": [
      201
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      199
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_dictionary": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      218
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      220
     ]
    },
    "object": {
     "line number": [
      218
     ]
    },
    "pyarrow.array": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_roundtrip": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      1719,
      1720,
      1721,
      1722,
      1723,
      1724,
      1725,
      1726,
      1727,
      1728,
      1729
     ]
    },
    "numpy.float16": {
     "line number": [
      1729
     ]
    },
    "numpy.float32": {
     "line number": [
      1728
     ]
    },
    "numpy.float64": {
     "line number": [
      1727
     ]
    },
    "numpy.int16": {
     "line number": [
      1721
     ]
    },
    "numpy.int32": {
     "line number": [
      1720
     ]
    },
    "numpy.int64": {
     "line number": [
      1719
     ]
    },
    "numpy.int8": {
     "line number": [
      1722
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1735,
      1736,
      1737,
      1738
     ]
    },
    "numpy.uint16": {
     "line number": [
      1725
     ]
    },
    "numpy.uint32": {
     "line number": [
      1724
     ]
    },
    "numpy.uint64": {
     "line number": [
      1723
     ]
    },
    "numpy.uint8": {
     "line number": [
      1726
     ]
    },
    "pyarrow.array": {
     "line number": [
      1733
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      1716
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_timedelta64": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      210
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      212
     ]
    },
    "pyarrow.array": {
     "line number": [
      209
     ]
    },
    "pyarrow.duration": {
     "line number": [
      209
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_unsupported_types": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      160,
      169,
      178
     ]
    },
    "numpy.array": {
     "line number": [
      164,
      173
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      165,
      174
     ]
    },
    "object": {
     "line number": [
      173
     ]
    },
    "pyarrow.array": {
     "line number": [
      158,
      167,
      176
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      160,
      169,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_writable": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      187,
      195
     ]
    },
    "pyarrow.array": {
     "line number": [
      183
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      187,
      195
     ]
    },
    "range": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_zero_copy": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      152
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      153
     ]
    },
    "pyarrow.array": {
     "line number": [
      138
     ]
    },
    "pyarrow.tests.test_array.gc": {
     "line number": [
      148
     ]
    },
    "range": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_timezone": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      2649
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      2652
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      2646
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      2649
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      227,
      237
     ]
    },
    "pyarrow.tests.test_array.gc": {
     "line number": [
      240
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      223
     ]
    },
    "pyarrow.tests.test_array.sys": {
     "line number": [
      231,
      234,
      246
     ]
    },
    "range": {
     "line number": [
      227,
      229,
      236,
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pyarrow.total_allocated_bytes": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_slice": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1031,
      1032
     ]
    },
    "pyarrow.UnionArray.from_dense": {
     "line number": [
      1029
     ]
    },
    "pyarrow.UnionArray.from_sparse": {
     "line number": [
      1019
     ]
    },
    "pyarrow.array": {
     "line number": [
      1019,
      1020,
      1021,
      1024,
      1025,
      1026,
      1027
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1019
     ]
    },
    "range": {
     "line number": [
      1031,
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_to_pylist_with_nulls": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": {
    "pyarrow.UnionArray.from_dense": {
     "line number": [
      1006
     ]
    },
    "pyarrow.UnionArray.from_sparse": {
     "line number": [
      997
     ]
    },
    "pyarrow.array": {
     "line number": [
      998,
      1000,
      1001,
      1007,
      1008,
      1010,
      1011
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1008
     ]
    },
    "pyarrow.int8": {
     "line number": [
      998,
      1007
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "check_result": {
     "line number": [
      879,
      886,
      894,
      902
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      912,
      916,
      922
     ]
    },
    "pyarrow.UnionArray.from_dense": {
     "line number": [
      879,
      886,
      894,
      902,
      910,
      914,
      921
     ]
    },
    "pyarrow.array": {
     "line number": [
      853,
      854,
      855,
      856,
      857,
      920
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      912,
      916,
      922
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense.check_result": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      873,
      875
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      873,
      875
     ]
    },
    "range": {
     "line number": [
      864
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": {
    "check_result": {
     "line number": [
      954,
      960,
      967,
      974
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      983,
      987,
      991
     ]
    },
    "pyarrow.UnionArray.from_sparse": {
     "line number": [
      954,
      960,
      967,
      974,
      982,
      985,
      992
     ]
    },
    "pyarrow.array": {
     "line number": [
      927,
      929,
      930,
      931
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      983,
      987,
      991
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse.check_result": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      948,
      950
     ]
    },
    "pyarrow.ArrowTypeError": {
     "line number": [
      946
     ]
    },
    "pyarrow.tests.test_array.pytest": {
     "line number": [
      946,
      948,
      950
     ]
    },
    "range": {
     "line number": [
      939
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_simple": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1415,
      1415,
      1416,
      1417,
      1418,
      1419
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1424
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      1418,
      1419
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_value_counts_dictionary_type": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      1454,
      1457
     ]
    },
    "pyarrow.array": {
     "line number": [
      1451,
      1452,
      1462
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_value_counts_simple": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1430,
      1431,
      1432,
      1433,
      1434,
      1435,
      1436,
      1437,
      1438
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1441
     ]
    },
    "pyarrow.field": {
     "line number": [
      1444,
      1445
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1432,
      1435,
      1438,
      1445
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      1436,
      1437
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1444
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_view": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1406,
      1407
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1407,
      1409
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1406
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_weakref": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      46
     ]
    },
    "pyarrow.tests.test_array.weakref": {
     "line number": [
      47
     ]
    },
    "wr": {
     "line number": [
      48,
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_builder.StringBuilder": {
  "data": {
   "shadows": "pyarrow.lib.StringBuilder"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.test_string_builder_append": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      44
     ]
    },
    "len": {
     "line number": [
      40,
      43
     ]
    },
    "numpy.nan": {
     "line number": [
      38
     ]
    },
    "pyarrow.Array": {
     "line number": [
      44
     ]
    },
    "pyarrow.lib.StringBuilder": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_after_finish": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      63
     ]
    },
    "pyarrow.lib.StringBuilder": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_values": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      53
     ]
    },
    "pyarrow.lib.StringBuilder": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_weakref": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "pyarrow.lib.StringBuilder": {
     "line number": [
      27
     ]
    },
    "pyarrow.tests.test_builder.weakref": {
     "line number": [
      28
     ]
    },
    "wr": {
     "line number": [
      29,
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      24,
      32
     ]
    },
    "ValueError": {
     "line number": [
      41,
      44,
      47
     ]
    },
    "pandas": {
     "line number": [
      33
     ]
    },
    "pandas.testing": {
     "line number": [
      33
     ]
    },
    "pyarrow.cffi.ffi": {
     "line number": [
      25,
      36
     ]
    },
    "pyarrow.tests.test_cffi.pytest": {
     "line number": [
      36,
      40,
      43,
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_cffi._export_import_batch_reader": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "list": {
     "line number": [
      250
     ]
    },
    "pandas": {
     "line number": [
      255
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      267
     ]
    },
    "pyarrow.Table.from_batches": {
     "line number": [
      258
     ]
    },
    "pyarrow.ipc.RecordBatchReader._import_from_c": {
     "line number": [
      248,
      264
     ]
    },
    "pyarrow.tests.test_cffi.make_batches": {
     "line number": [
      240,
      252,
      256
     ]
    },
    "reader_factory": {
     "line number": [
      243,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.assert_array_released": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.assert_schema_released": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.assert_stream_released": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.ffi": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.make_batch": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "pyarrow.record_batch": {
     "line number": [
      56
     ]
    },
    "pyarrow.tests.test_cffi.make_schema": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.make_batches": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "pyarrow.record_batch": {
     "line number": [
      62,
      63
     ]
    },
    "pyarrow.tests.test_cffi.make_schema": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.make_ipc_stream_reader": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "pyarrow.ipc.open_stream": {
     "line number": [
      271
     ]
    },
    "pyarrow.tests.test_cffi.make_serialized": {
     "line number": [
      271
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.make_py_record_batch_reader": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "pyarrow.ipc.RecordBatchReader.from_batches": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.make_schema": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "pyarrow.int32": {
     "line number": [
      51
     ]
    },
    "pyarrow.list_": {
     "line number": [
      51
     ]
    },
    "pyarrow.schema": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.make_serialized": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyarrow.BufferOutputStream": {
     "line number": [
      68
     ]
    },
    "pyarrow.ipc.new_stream": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.needs_cffi": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cffi.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cffi.test_export_import_array": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "int": {
     "line number": [
      111,
      113
     ]
    },
    "pyarrow.Array._import_from_c": {
     "line number": [
      126,
      134,
      142,
      150
     ]
    },
    "pyarrow.array": {
     "line number": [
      120,
      137
     ]
    },
    "pyarrow.cffi.ffi.cast": {
     "line number": [
      111,
      113
     ]
    },
    "pyarrow.cffi.ffi.new": {
     "line number": [
      110,
      112
     ]
    },
    "pyarrow.int32": {
     "line number": [
      119,
      128,
      134,
      137,
      144
     ]
    },
    "pyarrow.list_": {
     "line number": [
      119,
      128,
      134,
      137,
      144
     ]
    },
    "pyarrow.tests.test_cffi.assert_array_released": {
     "line number": [
      133
     ]
    },
    "pyarrow.tests.test_cffi.assert_schema_released": {
     "line number": [
      149
     ]
    },
    "pyarrow.tests.test_cffi.gc": {
     "line number": [
      115
     ]
    },
    "pyarrow.tests.test_cffi.needs_cffi": {
     "line number": [
      108
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      116,
      123,
      129,
      131,
      145,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      230
     ]
    },
    "int": {
     "line number": [
      186,
      188
     ]
    },
    "pyarrow.RecordBatch._import_from_c": {
     "line number": [
      201,
      209,
      217,
      225,
      232,
      235
     ]
    },
    "pyarrow.cffi.ffi.cast": {
     "line number": [
      186,
      188
     ]
    },
    "pyarrow.cffi.ffi.new": {
     "line number": [
      185,
      187
     ]
    },
    "pyarrow.int32": {
     "line number": [
      228
     ]
    },
    "pyarrow.tests.test_cffi.assert_array_released": {
     "line number": [
      208
     ]
    },
    "pyarrow.tests.test_cffi.assert_schema_released": {
     "line number": [
      224,
      234
     ]
    },
    "pyarrow.tests.test_cffi.gc": {
     "line number": [
      190
     ]
    },
    "pyarrow.tests.test_cffi.make_batch": {
     "line number": [
      195,
      212,
      229
     ]
    },
    "pyarrow.tests.test_cffi.make_schema": {
     "line number": [
      194,
      209,
      219
     ]
    },
    "pyarrow.tests.test_cffi.needs_cffi": {
     "line number": [
      183
     ]
    },
    "pyarrow.tests.test_cffi.pytest": {
     "line number": [
      230
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      191,
      198,
      204,
      206,
      220,
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_batch_reader": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "int": {
     "line number": [
      284
     ]
    },
    "pyarrow.cffi.ffi.cast": {
     "line number": [
      284
     ]
    },
    "pyarrow.cffi.ffi.new": {
     "line number": [
      283
     ]
    },
    "pyarrow.ipc.RecordBatchReader._import_from_c": {
     "line number": [
      295
     ]
    },
    "pyarrow.tests.test_cffi._export_import_batch_reader": {
     "line number": [
      289
     ]
    },
    "pyarrow.tests.test_cffi.assert_stream_released": {
     "line number": [
      294
     ]
    },
    "pyarrow.tests.test_cffi.gc": {
     "line number": [
      286
     ]
    },
    "pyarrow.tests.test_cffi.make_ipc_stream_reader": {
     "line number": [
      280
     ]
    },
    "pyarrow.tests.test_cffi.make_py_record_batch_reader": {
     "line number": [
      281
     ]
    },
    "pyarrow.tests.test_cffi.needs_cffi": {
     "line number": [
      278
     ]
    },
    "pyarrow.tests.test_cffi.pytest": {
     "line number": [
      279
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      287,
      291
     ]
    },
    "reader_factory": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_schema": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      175
     ]
    },
    "int": {
     "line number": [
      156
     ]
    },
    "pyarrow.Schema._import_from_c": {
     "line number": [
      164,
      171,
      177,
      180
     ]
    },
    "pyarrow.cffi.ffi.cast": {
     "line number": [
      156
     ]
    },
    "pyarrow.cffi.ffi.new": {
     "line number": [
      155
     ]
    },
    "pyarrow.int32": {
     "line number": [
      174
     ]
    },
    "pyarrow.tests.test_cffi.assert_schema_released": {
     "line number": [
      170,
      179
     ]
    },
    "pyarrow.tests.test_cffi.gc": {
     "line number": [
      158
     ]
    },
    "pyarrow.tests.test_cffi.make_schema": {
     "line number": [
      161,
      165
     ]
    },
    "pyarrow.tests.test_cffi.needs_cffi": {
     "line number": [
      153
     ]
    },
    "pyarrow.tests.test_cffi.pytest": {
     "line number": [
      175
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      159,
      162,
      166,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.test_export_import_type": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      100
     ]
    },
    "int": {
     "line number": [
      78
     ]
    },
    "pyarrow.DataType._import_from_c": {
     "line number": [
      89,
      94,
      102,
      105
     ]
    },
    "pyarrow.cffi.ffi.cast": {
     "line number": [
      78
     ]
    },
    "pyarrow.cffi.ffi.new": {
     "line number": [
      77,
      98
     ]
    },
    "pyarrow.int32": {
     "line number": [
      83,
      90,
      97
     ]
    },
    "pyarrow.list_": {
     "line number": [
      83,
      90
     ]
    },
    "pyarrow.tests.test_cffi.assert_schema_released": {
     "line number": [
      93,
      104
     ]
    },
    "pyarrow.tests.test_cffi.gc": {
     "line number": [
      80
     ]
    },
    "pyarrow.tests.test_cffi.needs_cffi": {
     "line number": [
      75
     ]
    },
    "pyarrow.tests.test_cffi.pytest": {
     "line number": [
      100
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      81,
      85,
      88,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cffi.tm": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute": {
  "data": {
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      54
     ]
    },
    "numpy.arange": {
     "line number": [
      32,
      33,
      34,
      35,
      36,
      37,
      38,
      39,
      40,
      41
     ]
    },
    "pyarrow.binary": {
     "line number": [
      44
     ]
    },
    "pyarrow.compute.__dict__.items": {
     "line number": [
      53
     ]
    },
    "pyarrow.float32": {
     "line number": [
      64
     ]
    },
    "pyarrow.float64": {
     "line number": [
      65
     ]
    },
    "pyarrow.int16": {
     "line number": [
      46,
      59
     ]
    },
    "pyarrow.int64": {
     "line number": [
      60
     ]
    },
    "pyarrow.int8": {
     "line number": [
      45,
      47,
      47,
      58
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      46
     ]
    },
    "pyarrow.list_": {
     "line number": [
      45
     ]
    },
    "pyarrow.struct": {
     "line number": [
      47
     ]
    },
    "pyarrow.tests.test_compute.digit_info_missing": {
     "line number": [
      402,
      405
     ]
    },
    "pyarrow.tests.test_compute.numeric_info_missing": {
     "line number": [
      402,
      406
     ]
    },
    "pyarrow.tests.test_compute.unknown_issue_is_alpha": {
     "line number": [
      403,
      404
     ]
    },
    "pyarrow.tests.test_compute.utf8proc_issue_is_lower": {
     "line number": [
      407
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      62
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      63
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      61
     ]
    },
    "sorted": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_compute._check_get_function": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "all": {
     "line number": [
      96
     ]
    },
    "func": {
     "line number": [
      91,
      92
     ]
    },
    "func.kernels": {
     "line number": [
      95,
      96
     ]
    },
    "func.num_kernels": {
     "line number": [
      93
     ]
    },
    "isinstance": {
     "line number": [
      92,
      96
     ]
    },
    "len": {
     "line number": [
      95
     ]
    },
    "pyarrow.compute.get_function": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.all_array_types": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.codepoints_ignore": {
  "data": {
   "lineno": 401
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.digit_info_missing": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.exported_functions": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.find_new_unicode_codepoints": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "chr": {
     "line number": [
      317
     ]
    },
    "enumerate": {
     "line number": [
      320
     ]
    },
    "functools.lru_cache": {
     "line number": [
      314
     ]
    },
    "ord": {
     "line number": [
      322
     ]
    },
    "pyarrow.array": {
     "line number": [
      319
     ]
    },
    "pyarrow.compute.utf8_is_printable": {
     "line number": [
      319
     ]
    },
    "range": {
     "line number": [
      317
     ]
    },
    "set": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.numeric_info_missing": {
  "data": {
   "lineno": 388
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.numerical_arrow_types": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pc": {
  "data": {
   "shadows": "pyarrow.compute"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.test_arithmetic_add": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      728,
      729,
      731
     ]
    },
    "pyarrow.compute.add": {
     "line number": [
      730
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_multiply": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      744,
      745,
      747
     ]
    },
    "pyarrow.compute.multiply": {
     "line number": [
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_arithmetic_subtract": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      736,
      737,
      739
     ]
    },
    "pyarrow.compute.subtract": {
     "line number": [
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_call_function_with_memory_pool": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      114
     ]
    },
    "pyarrow.array": {
     "line number": [
      113,
      118
     ]
    },
    "pyarrow.compute.call_function": {
     "line number": [
      116
     ]
    },
    "pyarrow.compute.take": {
     "line number": [
      122
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      117,
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_cast": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      858,
      858
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      853
     ]
    },
    "pyarrow.array": {
     "line number": [
      851,
      856,
      858,
      859
     ]
    },
    "pyarrow.compute.cast": {
     "line number": [
      854,
      856,
      860
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_array": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "con": {
     "line number": [
      659,
      660,
      663,
      666,
      669,
      672,
      675,
      678
     ]
    },
    "pyarrow.compute.equal": {
     "line number": [
      662
     ]
    },
    "pyarrow.compute.greater": {
     "line number": [
      674
     ]
    },
    "pyarrow.compute.greater_equal": {
     "line number": [
      677
     ]
    },
    "pyarrow.compute.less": {
     "line number": [
      668
     ]
    },
    "pyarrow.compute.less_equal": {
     "line number": [
      671
     ]
    },
    "pyarrow.compute.not_equal": {
     "line number": [
      665
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      652
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_array.con": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "pyarrow.chunked_array": {
     "line number": [
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_chunked_array_mixed": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      712
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      713,
      714,
      716
     ]
    },
    "pyarrow.compute.equal": {
     "line number": [
      723
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_scalar": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "con": {
     "line number": [
      688,
      693,
      696,
      699,
      702,
      705,
      708
     ]
    },
    "pyarrow.array": {
     "line number": [
      690
     ]
    },
    "pyarrow.compute.equal": {
     "line number": [
      692
     ]
    },
    "pyarrow.compute.greater": {
     "line number": [
      704
     ]
    },
    "pyarrow.compute.greater_equal": {
     "line number": [
      707
     ]
    },
    "pyarrow.compute.less": {
     "line number": [
      698
     ]
    },
    "pyarrow.compute.less_equal": {
     "line number": [
      701
     ]
    },
    "pyarrow.compute.not_equal": {
     "line number": [
      695
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_compare_scalar.con": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "pyarrow.chunked_array": {
     "line number": [
      686
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_exported_functions": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      78
     ]
    },
    "func": {
     "line number": [
      81
     ]
    },
    "len": {
     "line number": [
      75
     ]
    },
    "object": {
     "line number": [
      77
     ]
    },
    "pyarrow.tests.test_compute.exported_functions": {
     "line number": [
      74
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      775
     ]
    },
    "pyarrow.array": {
     "line number": [
      773,
      774,
      778,
      781
     ]
    },
    "pyarrow.int8": {
     "line number": [
      773,
      774
     ]
    },
    "pyarrow.null": {
     "line number": [
      778,
      779
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      779
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null_array": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      799
     ]
    },
    "ValueError": {
     "line number": [
      799
     ]
    },
    "pyarrow.array": {
     "line number": [
      787,
      790
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      788,
      802
     ]
    },
    "pyarrow.tests.test_compute.numerical_arrow_types": {
     "line number": [
      785
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      799,
      785
     ]
    },
    "pyarrow.types.is_unsigned_integer": {
     "line number": [
      798
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_fill_null_chunked_array": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      809,
      811,
      815,
      816,
      817,
      820,
      821,
      822
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      809,
      811,
      814,
      819
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      808,
      831
     ]
    },
    "pyarrow.tests.test_compute.numerical_arrow_types": {
     "line number": [
      806
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      557
     ]
    },
    "ValueError": {
     "line number": [
      562
     ]
    },
    "pyarrow.array": {
     "line number": [
      545,
      547,
      550,
      553,
      556,
      561
     ]
    },
    "pyarrow.tests.test_compute.all_array_types": {
     "line number": [
      543
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      557,
      562,
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_chunked_array": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      573
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      567,
      568,
      569,
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_errors": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      628
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      633
     ]
    },
    "pyarrow.array": {
     "line number": [
      622,
      623,
      627,
      632
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      620
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      621
     ]
    },
    "pyarrow.table": {
     "line number": [
      623
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      628,
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_null_type": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": {
    "len": {
     "line number": [
      646,
      647,
      648,
      649
     ]
    },
    "pyarrow.array": {
     "line number": [
      640,
      645
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      641
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      642
     ]
    },
    "pyarrow.table": {
     "line number": [
      643
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_record_batch": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      587,
      590,
      592,
      596
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      586,
      592,
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_filter_table": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      601,
      602,
      603,
      607
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      609
     ]
    },
    "pyarrow.table": {
     "line number": [
      601,
      602,
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_function_attributes": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "all": {
     "line number": [
      153
     ]
    },
    "func": {
     "line number": [
      148,
      149,
      155
     ]
    },
    "func.arity": {
     "line number": [
      154
     ]
    },
    "func.kernels": {
     "line number": [
      151
     ]
    },
    "func.name": {
     "line number": [
      150
     ]
    },
    "func.num_kernels": {
     "line number": [
      152
     ]
    },
    "isinstance": {
     "line number": [
      149,
      153
     ]
    },
    "len": {
     "line number": [
      152
     ]
    },
    "pyarrow.compute.Function": {
     "line number": [
      149
     ]
    },
    "pyarrow.compute.Kernel": {
     "line number": [
      153
     ]
    },
    "pyarrow.compute.get_function": {
     "line number": [
      148
     ]
    },
    "pyarrow.compute.list_functions": {
     "line number": [
      147
     ]
    },
    "repr": {
     "line number": [
      155,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_generated_docstrings": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "pyarrow.compute.add.__doc__": {
     "line number": [
      296
     ]
    },
    "pyarrow.compute.min_max.__doc__": {
     "line number": [
      281
     ]
    },
    "pyarrow.tests.test_compute.textwrap": {
     "line number": [
      281,
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_get_function_aggregate": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "pyarrow.compute.ScalarAggregateFunction": {
     "line number": [
      108
     ]
    },
    "pyarrow.compute.ScalarAggregateKernel": {
     "line number": [
      109
     ]
    },
    "pyarrow.tests.test_compute._check_get_function": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_get_function_scalar": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "pyarrow.compute.ScalarFunction": {
     "line number": [
      100
     ]
    },
    "pyarrow.compute.ScalarKernel": {
     "line number": [
      100
     ]
    },
    "pyarrow.tests.test_compute._check_get_function": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_get_function_vector": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "pyarrow.compute.VectorFunction": {
     "line number": [
      104
     ]
    },
    "pyarrow.compute.VectorKernel": {
     "line number": [
      104
     ]
    },
    "pyarrow.tests.test_compute._check_get_function": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_input_type_conversion": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "pyarrow.compute.add": {
     "line number": [
      162,
      165
     ]
    },
    "pyarrow.compute.equal": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_is_null": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      752,
      755,
      759
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      763,
      765,
      768
     ]
    },
    "pyarrow.compute.is_null": {
     "line number": [
      757
     ]
    },
    "pyarrow.compute.is_valid": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_is_valid": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      276
     ]
    },
    "pyarrow.compute.is_valid": {
     "line number": [
      274,
      277
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_list_functions": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "len": {
     "line number": [
      85
     ]
    },
    "pyarrow.compute.list_functions": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_logical": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      836,
      837,
      839,
      840,
      842,
      843,
      845,
      847
     ]
    },
    "pyarrow.compute.and_": {
     "line number": [
      839
     ]
    },
    "pyarrow.compute.and_kleene": {
     "line number": [
      840
     ]
    },
    "pyarrow.compute.invert": {
     "line number": [
      847
     ]
    },
    "pyarrow.compute.or_": {
     "line number": [
      842
     ]
    },
    "pyarrow.compute.or_kleene": {
     "line number": [
      843
     ]
    },
    "pyarrow.compute.xor": {
     "line number": [
      845
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_match_substring": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      235,
      237
     ]
    },
    "pyarrow.compute.match_substring": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_min_max": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      261,
      267
     ]
    },
    "pyarrow.compute.MinMaxOptions": {
     "line number": [
      246,
      248,
      250,
      262
     ]
    },
    "pyarrow.compute.TakeOptions": {
     "line number": [
      266
     ]
    },
    "pyarrow.compute.min_max": {
     "line number": [
      244,
      246,
      248,
      250,
      254,
      257,
      262,
      268
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      261,
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_mode_array": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      206,
      210
     ]
    },
    "pyarrow.compute.mode": {
     "line number": [
      208,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_mode_chunked_array": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      217
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      217,
      221
     ]
    },
    "pyarrow.compute.mode": {
     "line number": [
      219,
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_pickle_functions": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "func": {
     "line number": [
      129,
      130,
      131
     ]
    },
    "func.arity": {
     "line number": [
      133
     ]
    },
    "func.name": {
     "line number": [
      132
     ]
    },
    "func.num_kernels": {
     "line number": [
      134
     ]
    },
    "pyarrow.compute.get_function": {
     "line number": [
      129
     ]
    },
    "pyarrow.compute.list_functions": {
     "line number": [
      128
     ]
    },
    "pyarrow.tests.test_compute.pickle": {
     "line number": [
      130,
      130
     ]
    },
    "type": {
     "line number": [
      131,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_pickle_global_functions": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "func": {
     "line number": [
      140,
      141,
      142
     ]
    },
    "getattr": {
     "line number": [
      140
     ]
    },
    "pyarrow.compute": {
     "line number": [
      140
     ]
    },
    "pyarrow.compute.list_functions": {
     "line number": [
      139
     ]
    },
    "pyarrow.tests.test_compute.pickle": {
     "line number": [
      141,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_string_py_compat_boolean": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "arrow_func": {
     "line number": [
      434
     ]
    },
    "ascii": {
     "line number": [
      422
     ]
    },
    "chr": {
     "line number": [
      430
     ]
    },
    "getattr": {
     "line number": [
      433,
      434
     ]
    },
    "hasattr": {
     "line number": [
      431
     ]
    },
    "pyarrow.array": {
     "line number": [
      432
     ]
    },
    "pyarrow.compute": {
     "line number": [
      431,
      433
     ]
    },
    "pyarrow.tests.test_compute.codepoints_ignore": {
     "line number": [
      420
     ]
    },
    "pyarrow.tests.test_compute.find_new_unicode_codepoints": {
     "line number": [
      421
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      411,
      416
     ]
    },
    "range": {
     "line number": [
      422,
      423
     ]
    },
    "set": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum_array": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      174,
      178
     ]
    },
    "pyarrow.compute.sum": {
     "line number": [
      176
     ]
    },
    "pyarrow.tests.test_compute.numerical_arrow_types": {
     "line number": [
      172
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum_chunked_array": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      184,
      188,
      188,
      193,
      194,
      195
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      184,
      187,
      192,
      199
     ]
    },
    "pyarrow.compute.sum": {
     "line number": [
      185,
      190,
      197,
      201
     ]
    },
    "pyarrow.tests.test_compute.numerical_arrow_types": {
     "line number": [
      182
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      455,
      459
     ]
    },
    "pyarrow.array": {
     "line number": [
      439,
      441,
      444,
      448,
      451,
      454,
      458
     ]
    },
    "pyarrow.int64": {
     "line number": [
      440
     ]
    },
    "pyarrow.int8": {
     "line number": [
      440
     ]
    },
    "pyarrow.tests.test_compute.all_array_types": {
     "line number": [
      437
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      455,
      459,
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_dictionary": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      520
     ]
    },
    "pyarrow.array": {
     "line number": [
      522
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      518
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_indices_types": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      476
     ]
    },
    "pyarrow.array": {
     "line number": [
      464,
      468,
      471,
      475
     ]
    },
    "pyarrow.float32": {
     "line number": [
      474
     ]
    },
    "pyarrow.float64": {
     "line number": [
      474
     ]
    },
    "pyarrow.tests.test_compute.pytest": {
     "line number": [
      476
     ]
    },
    "range": {
     "line number": [
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_null_type": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "len": {
     "line number": [
      537,
      538,
      539,
      540
     ]
    },
    "pyarrow.array": {
     "line number": [
      531,
      536
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      532
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      533
     ]
    },
    "pyarrow.table": {
     "line number": [
      534
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_on_chunked_array": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      499
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      482,
      501,
      504,
      506
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_variance": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "pyarrow.compute.variance": {
     "line number": [
      229,
      230,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.unknown_issue_is_alpha": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.utf8proc_issue_is_lower": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin": {
  "data": {
   "symbols_in_volume": {
    "numpy.int16": {
     "line number": [
      36
     ]
    },
    "numpy.int32": {
     "line number": [
      37
     ]
    },
    "numpy.int64": {
     "line number": [
      38
     ]
    },
    "numpy.int8": {
     "line number": [
      35
     ]
    },
    "numpy.uint16": {
     "line number": [
      40
     ]
    },
    "numpy.uint32": {
     "line number": [
      41
     ]
    },
    "numpy.uint64": {
     "line number": [
      42
     ]
    },
    "numpy.uint8": {
     "line number": [
      39
     ]
    },
    "pyarrow.int16": {
     "line number": [
      36
     ]
    },
    "pyarrow.int32": {
     "line number": [
      37
     ]
    },
    "pyarrow.int64": {
     "line number": [
      38
     ]
    },
    "pyarrow.int8": {
     "line number": [
      35
     ]
    },
    "pyarrow.tests.test_convert_builtin._as_deque": {
     "line number": [
      154
     ]
    },
    "pyarrow.tests.test_convert_builtin._as_dict_values": {
     "line number": [
      154
     ]
    },
    "pyarrow.tests.test_convert_builtin._as_list": {
     "line number": [
      154
     ]
    },
    "pyarrow.tests.test_convert_builtin._as_numpy_array": {
     "line number": [
      154
     ]
    },
    "pyarrow.tests.test_convert_builtin._as_tuple": {
     "line number": [
      154
     ]
    },
    "pyarrow.tests.test_convert_builtin.int_type_pairs": {
     "line number": [
      45
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      153
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      40
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      41
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      42
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      39
     ]
    },
    "zip": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt.__int__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyDate": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": {
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1145
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyDatetime": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": {
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1149
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__int__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyTimedelta": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": {
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1153
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_deque": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": {
    "pyarrow.tests.test_convert_builtin.collections": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_dict_values": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_list": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_numpy_array": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "len": {
     "line number": [
      148
     ]
    },
    "numpy.empty": {
     "line number": [
      148
     ]
    },
    "object": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_tuple": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "tuple": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      712
     ]
    },
    "pyarrow.array": {
     "line number": [
      716,
      717,
      721,
      722,
      726,
      727
     ]
    },
    "pyarrow.binary": {
     "line number": [
      717,
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.check_struct_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "pyarrow.types.is_struct": {
     "line number": [
      73
     ]
    },
    "set": {
     "line number": [
      74,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.int_type_pairs": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.test_array_ignore_nan_from_pandas": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      676
     ]
    },
    "numpy.nan": {
     "line number": [
      677,
      679
     ]
    },
    "pyarrow.array": {
     "line number": [
      677,
      679,
      680
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      676
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_array_mixed_unicode_bytes": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      733
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      734
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      734
     ]
    },
    "pyarrow.string": {
     "line number": [
      733
     ]
    },
    "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes": {
     "line number": [
      733,
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_array_to_pylist_roundtrip": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      2003
     ]
    },
    "pyarrow.array": {
     "line number": [
      2006
     ]
    },
    "pyarrow.tests.strategies.all_arrays": {
     "line number": [
      2003
     ]
    },
    "seq": {
     "line number": [
      2005,
      2006
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_auto_chunking_binary_like": {
  "data": {
   "lineno": 2010,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2019,
      2028,
      2040
     ]
    },
    "len": {
     "line number": [
      2020,
      2030,
      2031,
      2042,
      2043,
      2044
     ]
    },
    "pyarrow.Array": {
     "line number": [
      2019
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2028,
      2040
     ]
    },
    "pyarrow.array": {
     "line number": [
      2018,
      2027,
      2039
     ]
    },
    "pyarrow.binary": {
     "line number": [
      2018,
      2027,
      2039
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      2010
     ]
    },
    "range": {
     "line number": [
      2045
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_auto_chunking_list_like": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2070,
      2076
     ]
    },
    "len": {
     "line number": [
      2071,
      2078,
      2079
     ]
    },
    "list": {
     "line number": [
      2080
     ]
    },
    "numpy.ones": {
     "line number": [
      2067,
      2073
     ]
    },
    "pyarrow.Array": {
     "line number": [
      2070
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2076
     ]
    },
    "pyarrow.array": {
     "line number": [
      2069,
      2075
     ]
    },
    "pyarrow.list_": {
     "line number": [
      2069,
      2075
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      2064,
      2065
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      2069,
      2075
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_auto_chunking_list_of_binary": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2057
     ]
    },
    "len": {
     "line number": [
      2059,
      2060
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2057
     ]
    },
    "pyarrow.array": {
     "line number": [
      2056
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      2052
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_auto_chunking_map_type": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2091
     ]
    },
    "len": {
     "line number": [
      2092,
      2093
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2091
     ]
    },
    "pyarrow.array": {
     "line number": [
      2090
     ]
    },
    "pyarrow.int8": {
     "line number": [
      2087,
      2087
     ]
    },
    "pyarrow.map_": {
     "line number": [
      2087
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      2083,
      2084
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_broken_integers": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      385
     ]
    },
    "pyarrow.array": {
     "line number": [
      386
     ]
    },
    "pyarrow.int64": {
     "line number": [
      386
     ]
    },
    "pyarrow.tests.test_convert_builtin.MyBrokenInt": {
     "line number": [
      384
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      382
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      385
     ]
    },
    "seq": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_convert_with_mask": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      446
     ]
    },
    "numpy.array": {
     "line number": [
      438
     ]
    },
    "pyarrow.array": {
     "line number": [
      440,
      441,
      447
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_date32_overflow": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      852
     ]
    },
    "pyarrow.ArrowException": {
     "line number": [
      852
     ]
    },
    "pyarrow.array": {
     "line number": [
      853
     ]
    },
    "pyarrow.date32": {
     "line number": [
      853
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      852
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1163,
      1176,
      1182,
      1188,
      1202,
      1207,
      1212,
      1217
     ]
    },
    "pyarrow.array": {
     "line number": [
      1162,
      1175,
      1181,
      1187,
      1201,
      1206,
      1211,
      1216
     ]
    },
    "pyarrow.date32": {
     "line number": [
      1161
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1197,
      1198,
      1199
     ]
    },
    "pyarrow.tests.test_convert_builtin.MyDate": {
     "line number": [
      1159
     ]
    },
    "pyarrow.tests.test_convert_builtin.MyDatetime": {
     "line number": [
      1168
     ]
    },
    "pyarrow.tests.test_convert_builtin.MyTimedelta": {
     "line number": [
      1194
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1165,
      1178,
      1184,
      1190,
      1204,
      1209,
      1214,
      1219
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1171,
      1172,
      1173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_decimal_array_with_none_and_nan": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1794
     ]
    },
    "numpy.nan": {
     "line number": [
      1792
     ]
    },
    "pyarrow.array": {
     "line number": [
      1796,
      1798,
      1802
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1799,
      1802
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1792,
      1792,
      1803
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1794
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_dictionary_from_boolean": {
  "data": {
   "lineno": 1860,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1863
     ]
    },
    "pyarrow.DictionaryType": {
     "line number": [
      1863
     ]
    },
    "pyarrow.array": {
     "line number": [
      1862,
      1866,
      1867
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1861,
      1867
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1861
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1861,
      1866
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_dictionary_from_integers": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1887
     ]
    },
    "pyarrow.DictionaryType": {
     "line number": [
      1887
     ]
    },
    "pyarrow.array": {
     "line number": [
      1886,
      1890,
      1891
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1885
     ]
    },
    "pyarrow.float32": {
     "line number": [
      1881
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1882
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1874
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1875
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1876
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1885,
      1890,
      1873
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1872
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      1878
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      1879
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      1880
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      1877
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_dictionary_from_strings": {
  "data": {
   "lineno": 1926,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1931,
      1941
     ]
    },
    "pyarrow.DictionaryType": {
     "line number": [
      1931,
      1941
     ]
    },
    "pyarrow.array": {
     "line number": [
      1929,
      1933,
      1934,
      1940,
      1943,
      1944
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1927,
      1939,
      1944
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1928,
      1939
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1928,
      1933,
      1939,
      1943
     ]
    },
    "pyarrow.string": {
     "line number": [
      1927
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_dictionary_index_type": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1907
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1906
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1898
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1899
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1906,
      1900
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1897
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1896
     ]
    },
    "range": {
     "line number": [
      1907
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_dictionary_is_always_adaptive": {
  "data": {
   "lineno": 1911,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1917,
      1921
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1915,
      1918,
      1922
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1922
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1915,
      1918,
      1922
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1915,
      1918
     ]
    },
    "range": {
     "line number": [
      1917,
      1921
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_auto_coerce_from_integer": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      474,
      477,
      482,
      485
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_integer_coerce_representable_range": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      499,
      502
     ]
    },
    "pyarrow.array": {
     "line number": [
      496,
      500,
      503
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      499,
      502
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_duration_array_roundtrip_corner_cases": {
  "data": {
   "lineno": 1949,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      1968
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      1971
     ]
    },
    "pyarrow.array": {
     "line number": [
      1959,
      1960
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1958
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1950,
      1951,
      1952,
      1953
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1949
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_iterable": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "len": {
     "line number": [
      86
     ]
    },
    "pyarrow.array": {
     "line number": [
      85
     ]
    },
    "pyarrow.null": {
     "line number": [
      88
     ]
    },
    "pyarrow.tests.test_convert_builtin.StrangeIterable": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_list": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": {
    "len": {
     "line number": [
      194
     ]
    },
    "pyarrow.array": {
     "line number": [
      193
     ]
    },
    "pyarrow.null": {
     "line number": [
      196
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      191
     ]
    },
    "seq": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_range": {
  "data": {
   "lineno": 1491,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1493
     ]
    },
    "pyarrow.array": {
     "line number": [
      1492
     ]
    },
    "pyarrow.null": {
     "line number": [
      1495
     ]
    },
    "range": {
     "line number": [
      1492
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_binary_length_check": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": {
    "len": {
     "line number": [
      813
     ]
    },
    "pyarrow.array": {
     "line number": [
      815
     ]
    },
    "pyarrow.binary": {
     "line number": [
      814
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      806
     ]
    },
    "pyarrow.array": {
     "line number": [
      807
     ]
    },
    "pyarrow.binary": {
     "line number": [
      807
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      806
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_float32_integer_coerce_representable_range": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      516,
      519
     ]
    },
    "f32": {
     "line number": [
      508,
      509,
      510
     ]
    },
    "numpy.float32": {
     "line number": [
      507
     ]
    },
    "pyarrow.array": {
     "line number": [
      513,
      517,
      520
     ]
    },
    "pyarrow.float32": {
     "line number": [
      513,
      517,
      520
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      516,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_garbage_collection": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      457
     ]
    },
    "pyarrow.tests.test_convert_builtin.gc": {
     "line number": [
      454,
      458
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      456,
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_infinite_iterator": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      120,
      121,
      124
     ]
    },
    "pyarrow.int64": {
     "line number": [
      124
     ]
    },
    "pyarrow.tests.test_convert_builtin.itertools": {
     "line number": [
      121,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterable_types": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      78,
      79
     ]
    },
    "pyarrow.tests.test_convert_builtin.StrangeIterable": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterator_without_size": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      112,
      115
     ]
    },
    "pyarrow.array": {
     "line number": [
      111,
      112,
      115
     ]
    },
    "pyarrow.int64": {
     "line number": [
      115
     ]
    },
    "range": {
     "line number": [
      112,
      115
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_array": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      745
     ]
    },
    "len": {
     "line number": [
      742,
      747
     ]
    },
    "pyarrow.Array": {
     "line number": [
      745
     ]
    },
    "pyarrow.array": {
     "line number": [
      744
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      738
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      738
     ]
    },
    "pyarrow.tests.test_convert_builtin.math": {
     "line number": [
      742
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      737,
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_value": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      757
     ]
    },
    "len": {
     "line number": [
      755,
      759,
      761,
      761
     ]
    },
    "pyarrow.Array": {
     "line number": [
      757
     ]
    },
    "pyarrow.array": {
     "line number": [
      756
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      751
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      751
     ]
    },
    "pyarrow.tests.test_convert_builtin.math": {
     "line number": [
      755
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      750,
      751
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_overflow": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      99
     ]
    },
    "pyarrow.array": {
     "line number": [
      99,
      100
     ]
    },
    "pyarrow.int64": {
     "line number": [
      99
     ]
    },
    "range": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_underflow": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      105
     ]
    },
    "pyarrow.array": {
     "line number": [
      105,
      106
     ]
    },
    "pyarrow.int64": {
     "line number": [
      105
     ]
    },
    "range": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_types": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      93
     ]
    },
    "pyarrow.array": {
     "line number": [
      93,
      94
     ]
    },
    "pyarrow.int64": {
     "line number": [
      93
     ]
    },
    "range": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_list_array_from_object_ndarray": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      652
     ]
    },
    "object": {
     "line number": [
      652
     ]
    },
    "pyarrow.array": {
     "line number": [
      653
     ]
    },
    "pyarrow.binary": {
     "line number": [
      640,
      641
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      630
     ]
    },
    "pyarrow.date32": {
     "line number": [
      634
     ]
    },
    "pyarrow.date64": {
     "line number": [
      635
     ]
    },
    "pyarrow.duration": {
     "line number": [
      639
     ]
    },
    "pyarrow.float32": {
     "line number": [
      633
     ]
    },
    "pyarrow.int16": {
     "line number": [
      647
     ]
    },
    "pyarrow.int8": {
     "line number": [
      632,
      647
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      642
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      644
     ]
    },
    "pyarrow.list_": {
     "line number": [
      651
     ]
    },
    "pyarrow.null": {
     "line number": [
      631
     ]
    },
    "pyarrow.string": {
     "line number": [
      643
     ]
    },
    "pyarrow.struct": {
     "line number": [
      647
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      634,
      635,
      636,
      637,
      638,
      639
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      629
     ]
    },
    "pyarrow.time32": {
     "line number": [
      636
     ]
    },
    "pyarrow.time64": {
     "line number": [
      637
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_list_with_non_list": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      229,
      231
     ]
    },
    "pyarrow.array": {
     "line number": [
      230,
      232
     ]
    },
    "pyarrow.int64": {
     "line number": [
      230,
      232
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      232
     ]
    },
    "pyarrow.list_": {
     "line number": [
      230
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      226
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      229,
      231
     ]
    },
    "seq": {
     "line number": [
      230,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_map_from_dicts": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1828
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1833
     ]
    },
    "pyarrow.array": {
     "line number": [
      1814,
      1822,
      1829,
      1834
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1814,
      1822
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1814,
      1822
     ]
    },
    "pyarrow.map_": {
     "line number": [
      1814,
      1822,
      1829,
      1834
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1828,
      1833
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_map_from_tuples": {
  "data": {
   "lineno": 1837,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1856
     ]
    },
    "pyarrow.array": {
     "line number": [
      1843,
      1850,
      1857
     ]
    },
    "pyarrow.binary": {
     "line number": [
      1843,
      1850
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1843,
      1850
     ]
    },
    "pyarrow.map_": {
     "line number": [
      1843,
      1850,
      1857
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1856
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_mixed_sequence_errors": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      524,
      527,
      530
     ]
    },
    "pyarrow.array": {
     "line number": [
      525,
      528,
      531
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      525
     ]
    },
    "pyarrow.float32": {
     "line number": [
      528
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      524,
      527,
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_multidimensional_ndarray_as_nested_list": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      613
     ]
    },
    "numpy.array": {
     "line number": [
      616,
      617
     ]
    },
    "numpy.int64": {
     "line number": [
      616,
      617
     ]
    },
    "pyarrow.array": {
     "line number": [
      622,
      623
     ]
    },
    "pyarrow.infer_type": {
     "line number": [
      620
     ]
    },
    "pyarrow.int64": {
     "line number": [
      619
     ]
    },
    "pyarrow.list_": {
     "line number": [
      619,
      619
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      611
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_ndarray_nested_numpy_double": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "inner_seq": {
     "line number": [
      568,
      569,
      570
     ]
    },
    "len": {
     "line number": [
      574
     ]
    },
    "list": {
     "line number": [
      564
     ]
    },
    "numpy.array": {
     "line number": [
      567,
      564
     ]
    },
    "numpy.nan": {
     "line number": [
      570,
      581
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      580
     ]
    },
    "object": {
     "line number": [
      572
     ]
    },
    "pyarrow.array": {
     "line number": [
      573
     ]
    },
    "pyarrow.float64": {
     "line number": [
      576
     ]
    },
    "pyarrow.list_": {
     "line number": [
      576
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      563,
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_arrays": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "len": {
     "line number": [
      239
     ]
    },
    "numpy.array": {
     "line number": [
      237,
      238
     ]
    },
    "numpy.int64": {
     "line number": [
      237,
      238
     ]
    },
    "pyarrow.array": {
     "line number": [
      237
     ]
    },
    "pyarrow.int64": {
     "line number": [
      241
     ]
    },
    "pyarrow.list_": {
     "line number": [
      241
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      235
     ]
    },
    "seq": {
     "line number": [
      237
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_auto_chunking": {
  "data": {
   "lineno": 2096,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      2114,
      2118
     ]
    },
    "len": {
     "line number": [
      2120,
      2121
     ]
    },
    "pyarrow.Array": {
     "line number": [
      2114
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      2118
     ]
    },
    "pyarrow.array": {
     "line number": [
      2113,
      2117
     ]
    },
    "pyarrow.binary": {
     "line number": [
      2099
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      2106
     ]
    },
    "pyarrow.field": {
     "line number": [
      2106,
      2107,
      2108
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2107
     ]
    },
    "pyarrow.string": {
     "line number": [
      2098
     ]
    },
    "pyarrow.struct": {
     "line number": [
      2105
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      2096,
      2097
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_fixed_size_list": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      268
     ]
    },
    "len": {
     "line number": [
      250,
      259,
      274
     ]
    },
    "numpy.array": {
     "line number": [
      256,
      256,
      266
     ]
    },
    "pyarrow.array": {
     "line number": [
      249,
      258,
      269,
      273
     ]
    },
    "pyarrow.int64": {
     "line number": [
      249,
      252,
      258,
      261,
      269,
      273,
      276
     ]
    },
    "pyarrow.list_": {
     "line number": [
      249,
      252,
      258,
      261,
      269,
      273,
      276
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      245
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      267
     ]
    },
    "seq": {
     "line number": [
      249,
      258,
      269,
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_large_lists": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "len": {
     "line number": [
      220
     ]
    },
    "pyarrow.array": {
     "line number": [
      219
     ]
    },
    "pyarrow.int16": {
     "line number": [
      219,
      222
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      219,
      222
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      216
     ]
    },
    "seq": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_list_array_from_object_ndarray": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "len": {
     "line number": [
      664
     ]
    },
    "numpy.array": {
     "line number": [
      665
     ]
    },
    "numpy.empty": {
     "line number": [
      664
     ]
    },
    "object": {
     "line number": [
      664,
      665
     ]
    },
    "pyarrow.array": {
     "line number": [
      668
     ]
    },
    "pyarrow.int64": {
     "line number": [
      659,
      660,
      661
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      661
     ]
    },
    "pyarrow.list_": {
     "line number": [
      667,
      659,
      660
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_lists": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "len": {
     "line number": [
      204,
      210
     ]
    },
    "pyarrow.array": {
     "line number": [
      203,
      209
     ]
    },
    "pyarrow.int32": {
     "line number": [
      209,
      212
     ]
    },
    "pyarrow.int64": {
     "line number": [
      206
     ]
    },
    "pyarrow.list_": {
     "line number": [
      206,
      209,
      212
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      200
     ]
    },
    "seq": {
     "line number": [
      203,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_different_dtypes": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      686,
      688
     ]
    },
    "pyarrow.array": {
     "line number": [
      691,
      692,
      697
     ]
    },
    "pyarrow.int64": {
     "line number": [
      693
     ]
    },
    "pyarrow.list_": {
     "line number": [
      693,
      696
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      696
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_in_object_array": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      587,
      588,
      606,
      606
     ]
    },
    "numpy.empty": {
     "line number": [
      586,
      590,
      605
     ]
    },
    "numpy.int64": {
     "line number": [
      587,
      588
     ]
    },
    "object": {
     "line number": [
      586,
      590,
      605
     ]
    },
    "pyarrow.array": {
     "line number": [
      597,
      598,
      607
     ]
    },
    "pyarrow.infer_type": {
     "line number": [
      595
     ]
    },
    "pyarrow.int64": {
     "line number": [
      594
     ]
    },
    "pyarrow.list_": {
     "line number": [
      594,
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_numpy_scalars_mixed_type": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      391,
      397
     ]
    },
    "numpy.int32": {
     "line number": [
      391
     ]
    },
    "numpy.int8": {
     "line number": [
      397
     ]
    },
    "pyarrow.array": {
     "line number": [
      392,
      393,
      398,
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_pyarrow_ignore_timezone_environment_variable": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1045
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1027,
      1029,
      1032,
      1035
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1017
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytz": {
     "line number": [
      1028,
      1031,
      1034,
      1041
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1044
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_range_types": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1486,
      1487
     ]
    },
    "range": {
     "line number": [
      1486
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_roundtrip_nanosecond_resolution_pandas_temporal_objects": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1985,
      1995
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      1985,
      1989
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      1995,
      1999
     ]
    },
    "pyarrow.array": {
     "line number": [
      1983,
      1986,
      1993,
      1996
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1982
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1976
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1992
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_all_none": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "len": {
     "line number": [
      283
     ]
    },
    "pyarrow.array": {
     "line number": [
      282
     ]
    },
    "pyarrow.null": {
     "line number": [
      285
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      280
     ]
    },
    "seq": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_boolean": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "len": {
     "line number": [
      169
     ]
    },
    "pyarrow.array": {
     "line number": [
      168
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      171
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      165
     ]
    },
    "seq": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_bytes": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      771
     ]
    },
    "len": {
     "line number": [
      775
     ]
    },
    "memoryview": {
     "line number": [
      768,
      769
     ]
    },
    "pyarrow.array": {
     "line number": [
      774
     ]
    },
    "pyarrow.binary": {
     "line number": [
      773,
      777
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_custom_integers": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "list": {
     "line number": [
      377
     ]
    },
    "map": {
     "line number": [
      377
     ]
    },
    "pyarrow.array": {
     "line number": [
      378
     ]
    },
    "pyarrow.int64": {
     "line number": [
      378
     ]
    },
    "pyarrow.tests.test_convert_builtin.MyInt": {
     "line number": [
      377
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      374
     ]
    },
    "seq": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "len": {
     "line number": [
      823
     ]
    },
    "pyarrow.array": {
     "line number": [
      822
     ]
    },
    "pyarrow.date32": {
     "line number": [
      824
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      820,
      820,
      821,
      826,
      828,
      829
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1429
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1428
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1427,
      1427
     ]
    },
    "type": {
     "line number": [
      1428,
      1429
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_different_precisions": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1438
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1437
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1435,
      1435
     ]
    },
    "type": {
     "line number": [
      1437,
      1438
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_from_integers": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1475
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1474
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1473
     ]
    },
    "type": {
     "line number": [
      1474,
      1475
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_large_integer": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1467
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1466
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1464,
      1465
     ]
    },
    "type": {
     "line number": [
      1466,
      1467
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_negative": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1452
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1451
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1450,
      1450
     ]
    },
    "type": {
     "line number": [
      1451,
      1452
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_scale": {
  "data": {
   "lineno": 1442,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1445
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1444
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1443,
      1443
     ]
    },
    "type": {
     "line number": [
      1444,
      1445
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_whole_part": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1459
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      1458
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1457,
      1457
     ]
    },
    "type": {
     "line number": [
      1458,
      1459
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_too_high_precision": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1481
     ]
    },
    "pyarrow.array": {
     "line number": [
      1482
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      1482
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1481
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_double": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "len": {
     "line number": [
      465
     ]
    },
    "pyarrow.array": {
     "line number": [
      464
     ]
    },
    "pyarrow.float64": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1303
     ]
    },
    "np_scalar": {
     "line number": [
      1297
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      1298,
      1298
     ]
    },
    "pyarrow.array": {
     "line number": [
      1302
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1304
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1295,
      1296
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1293
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_from_int_with_unit": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1335
     ]
    },
    "pyarrow.array": {
     "line number": [
      1334
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1333
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1329
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_nested_lists": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1347,
      1352
     ]
    },
    "pyarrow.array": {
     "line number": [
      1346,
      1351
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1348,
      1351,
      1353
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1348,
      1351,
      1353
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1341,
      1342
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_nested_lists_numpy": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1365,
      1373
     ]
    },
    "numpy.array": {
     "line number": [
      1369,
      1370
     ]
    },
    "numpy.timedelta64": {
     "line number": [
      1361,
      1362,
      1362,
      1369,
      1370,
      1370
     ]
    },
    "pyarrow.array": {
     "line number": [
      1364,
      1372
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1366,
      1374
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1366,
      1374
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1358,
      1359
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_duration_with_unit": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1324
     ]
    },
    "pyarrow.array": {
     "line number": [
      1323
     ]
    },
    "pyarrow.duration": {
     "line number": [
      1321
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1314,
      1316,
      1317,
      1318,
      1319
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_explicit_types": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "input": {
     "line number": [
      836
     ]
    },
    "len": {
     "line number": [
      842
     ]
    },
    "pyarrow.array": {
     "line number": [
      838,
      839
     ]
    },
    "pyarrow.date32": {
     "line number": [
      833
     ]
    },
    "pyarrow.date64": {
     "line number": [
      834
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      837,
      845
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      832
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_fixed_size_bytes": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      796
     ]
    },
    "len": {
     "line number": [
      798
     ]
    },
    "pyarrow.array": {
     "line number": [
      797
     ]
    },
    "pyarrow.binary": {
     "line number": [
      797,
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "len": {
     "line number": [
      296
     ]
    },
    "numpy.iinfo": {
     "line number": [
      294,
      294
     ]
    },
    "pyarrow.array": {
     "line number": [
      295
     ]
    },
    "pyarrow.tests.test_convert_builtin.int_type_pairs": {
     "line number": [
      290
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      289
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      290
     ]
    },
    "seq": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_inferred": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "len": {
     "line number": [
      340
     ]
    },
    "pyarrow.array": {
     "line number": [
      339
     ]
    },
    "pyarrow.int64": {
     "line number": [
      342
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      336
     ]
    },
    "seq": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_nested_np_nan": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      325
     ]
    },
    "len": {
     "line number": [
      330
     ]
    },
    "numpy.nan": {
     "line number": [
      326,
      328
     ]
    },
    "pyarrow.array": {
     "line number": [
      326,
      328
     ]
    },
    "pyarrow.list_": {
     "line number": [
      326,
      328,
      332
     ]
    },
    "pyarrow.tests.test_convert_builtin.int_type_pairs": {
     "line number": [
      320
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      319
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      325,
      320
     ]
    },
    "seq": {
     "line number": [
      326,
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_np_nan": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      308
     ]
    },
    "len": {
     "line number": [
      313
     ]
    },
    "numpy.nan": {
     "line number": [
      309,
      311
     ]
    },
    "pyarrow.array": {
     "line number": [
      309,
      311
     ]
    },
    "pyarrow.tests.test_convert_builtin.int_type_pairs": {
     "line number": [
      303
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      302
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      308,
      303
     ]
    },
    "seq": {
     "line number": [
      309,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_numpy_python_bools": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      185
     ]
    },
    "pyarrow.array": {
     "line number": [
      186
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      187
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      183
     ]
    },
    "seq": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_fails": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "pyarrow.ArrowTypeError": {
     "line number": [
      1414
     ]
    },
    "pyarrow.array": {
     "line number": [
      1415
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1414
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_with_specified_type_fails": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1422
     ]
    },
    "pyarrow.array": {
     "line number": [
      1423
     ]
    },
    "pyarrow.string": {
     "line number": [
      1421
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1422
     ]
    },
    "type": {
     "line number": [
      1421,
      1423
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_nesting_levels": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1399
     ]
    },
    "pyarrow.ArrowTypeError": {
     "line number": [
      1399
     ]
    },
    "pyarrow.array": {
     "line number": [
      1380,
      1385,
      1390,
      1395,
      1403,
      1406,
      1409
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1381,
      1386,
      1391,
      1396
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1386,
      1391,
      1396,
      1396
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1402,
      1405,
      1408
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_boolean": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "numpy.bool": {
     "line number": [
      177,
      177
     ]
    },
    "pyarrow.array": {
     "line number": [
      178
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      179
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      175
     ]
    },
    "seq": {
     "line number": [
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_double": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "len": {
     "line number": [
      544
     ]
    },
    "np_scalar": {
     "line number": [
      542,
      542,
      542
     ]
    },
    "numpy.float16": {
     "line number": [
      536
     ]
    },
    "numpy.float32": {
     "line number": [
      537
     ]
    },
    "numpy.float64": {
     "line number": [
      538
     ]
    },
    "numpy.isnan": {
     "line number": [
      560
     ]
    },
    "numpy.nan": {
     "line number": [
      542
     ]
    },
    "pyarrow.array": {
     "line number": [
      543
     ]
    },
    "pyarrow.float16": {
     "line number": [
      536
     ]
    },
    "pyarrow.float32": {
     "line number": [
      537
     ]
    },
    "pyarrow.float64": {
     "line number": [
      554,
      538
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      534
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      535,
      540
     ]
    },
    "seq": {
     "line number": [
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "len": {
     "line number": [
      354
     ]
    },
    "np_scalar": {
     "line number": [
      350,
      350,
      351,
      351,
      352,
      352
     ]
    },
    "numpy.iinfo": {
     "line number": [
      351,
      352
     ]
    },
    "pyarrow.array": {
     "line number": [
      353
     ]
    },
    "pyarrow.tests.test_convert_builtin.int_type_pairs": {
     "line number": [
      347
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      346
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      347
     ]
    },
    "seq": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer_inferred": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "len": {
     "line number": [
      368
     ]
    },
    "np_scalar": {
     "line number": [
      363,
      364,
      364,
      365,
      365,
      366,
      366
     ]
    },
    "numpy.iinfo": {
     "line number": [
      365,
      366
     ]
    },
    "pyarrow.array": {
     "line number": [
      367
     ]
    },
    "pyarrow.tests.test_convert_builtin.int_type_pairs": {
     "line number": [
      361
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      360
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      361
     ]
    },
    "seq": {
     "line number": [
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_timestamp": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1133
     ]
    },
    "numpy.datetime64": {
     "line number": [
      1127,
      1129,
      1130
     ]
    },
    "pyarrow.array": {
     "line number": [
      1132
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1127,
      1129,
      1130,
      1136,
      1139,
      1141
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1134
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_time_with_timezone": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": {
    "expected_time_value": {
     "line number": [
      909,
      910,
      912,
      913
     ]
    },
    "len": {
     "line number": [
      899
     ]
    },
    "list": {
     "line number": [
      905
     ]
    },
    "map": {
     "line number": [
      905
     ]
    },
    "pyarrow.array": {
     "line number": [
      898
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      890,
      891,
      893,
      894
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      856
     ]
    },
    "pyarrow.time32": {
     "line number": [
      857,
      858
     ]
    },
    "pyarrow.time64": {
     "line number": [
      859,
      860
     ]
    },
    "time_type": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_time_with_timezone.expected_integer_value": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": {
    "int": {
     "line number": [
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_time_with_timezone.expected_time_value": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_time_with_timezone.tz": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      916,
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": {
    "len": {
     "line number": [
      928
     ]
    },
    "pyarrow.array": {
     "line number": [
      927
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      922,
      924,
      925,
      931,
      934,
      936
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      929
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": {
    "CustomClass": {
     "line number": [
      1290
     ]
    },
    "TypeError": {
     "line number": [
      1283
     ]
    },
    "len": {
     "line number": [
      1252,
      1260,
      1268,
      1276
     ]
    },
    "pyarrow.array": {
     "line number": [
      1251,
      1259,
      1267,
      1275,
      1290
     ]
    },
    "pyarrow.date32": {
     "line number": [
      1288
     ]
    },
    "pyarrow.date64": {
     "line number": [
      1288
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1289,
      1239
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1246,
      1247,
      1248,
      1249
     ]
    },
    "repr": {
     "line number": [
      1254,
      1262,
      1270,
      1278
     ]
    },
    "str": {
     "line number": [
      1257,
      1265,
      1273,
      1281
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit.CustomClass": {
  "data": {
   "lineno": 1285
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_mixed_builtin_and_pandas_datetimes": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1100
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      1081
     ]
    },
    "pyarrow.array": {
     "line number": [
      1096
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1083,
      1085
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1076
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytz": {
     "line number": [
      1081,
      1084,
      1090,
      1091,
      1092
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1097
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_nanoseconds": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1233
     ]
    },
    "pyarrow.array": {
     "line number": [
      1232
     ]
    },
    "pyarrow.pandas_compat._pandas_api.have_pandas": {
     "line number": [
      1222
     ]
    },
    "pyarrow.tests.test_convert_builtin.MyDatetime": {
     "line number": [
      1227
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1226,
      1235
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1222
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_out_of_bounds_nanosecond": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1108,
      1118
     ]
    },
    "pyarrow.array": {
     "line number": [
      1109,
      1112,
      1119,
      1121
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1107,
      1116,
      1116,
      1117,
      1122
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1108,
      1118
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1109,
      1112,
      1119,
      1121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_timezone": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": {
    "expected_datetime_value": {
     "line number": [
      1014
     ]
    },
    "len": {
     "line number": [
      1003,
      1013
     ]
    },
    "list": {
     "line number": [
      1009
     ]
    },
    "map": {
     "line number": [
      1009
     ]
    },
    "pyarrow.array": {
     "line number": [
      1002
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      981,
      983,
      987,
      990
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      940,
      946
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytz": {
     "line number": [
      982,
      986,
      989,
      994,
      997,
      998
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1001
     ]
    },
    "range": {
     "line number": [
      1013
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_timezone.expected_datetime_value": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": {
    "pyarrow.tests.test_convert_builtin.pytz": {
     "line number": [
      978
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_timezone.expected_integer_value": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": {
    "int": {
     "line number": [
      961
     ]
    },
    "pyarrow.tests.test_convert_builtin.decimal": {
     "line number": [
      960
     ]
    },
    "str": {
     "line number": [
      960
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_timezone_inference": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1072
     ]
    },
    "pyarrow.tests.test_convert_builtin.datetime": {
     "line number": [
      1051,
      1053,
      1057,
      1060
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytz": {
     "line number": [
      1052,
      1056,
      1059
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1064,
      1065,
      1066,
      1067,
      1068
     ]
    },
    "zip": {
     "line number": [
      1070
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_types": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      159,
      160
     ]
    },
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
     "line number": [
      157
     ]
    },
    "seq": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_unicode": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": {
    "len": {
     "line number": [
      705
     ]
    },
    "pyarrow.array": {
     "line number": [
      704
     ]
    },
    "pyarrow.string": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_utf8_to_unicode": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      791
     ]
    },
    "pyarrow.array": {
     "line number": [
      785,
      792
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      781
     ]
    },
    "pyarrow.string": {
     "line number": [
      781
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      791,
      781
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_signed_integer_overflow": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      420,
      422
     ]
    },
    "getattr": {
     "line number": [
      418
     ]
    },
    "pyarrow": {
     "line number": [
      418
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      420,
      422
     ]
    },
    "pyarrow.array": {
     "line number": [
      421,
      423
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      420,
      422,
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1530,
      1535,
      1543
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1529
     ]
    },
    "pyarrow.field": {
     "line number": [
      1527,
      1528,
      1529
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1527
     ]
    },
    "pyarrow.string": {
     "line number": [
      1528
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1527
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_bytes_keys": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1556,
      1561
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1555
     ]
    },
    "pyarrow.field": {
     "line number": [
      1553,
      1554,
      1555
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1553
     ]
    },
    "pyarrow.string": {
     "line number": [
      1554
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1553
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_inference": {
  "data": {
   "lineno": 1715,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1737
     ]
    },
    "numpy.empty": {
     "line number": [
      1737
     ]
    },
    "object": {
     "line number": [
      1737
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1763
     ]
    },
    "pyarrow.ArrowTypeError": {
     "line number": [
      1763
     ]
    },
    "pyarrow.array": {
     "line number": [
      1722,
      1736,
      1739,
      1753,
      1758,
      1764
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1718,
      1748
     ]
    },
    "pyarrow.field": {
     "line number": [
      1716,
      1717,
      1718,
      1747,
      1747,
      1748,
      1749
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1716,
      1747
     ]
    },
    "pyarrow.list_": {
     "line number": [
      1747
     ]
    },
    "pyarrow.string": {
     "line number": [
      1717,
      1749
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1716,
      1746,
      1747,
      1759
     ]
    },
    "pyarrow.tests.test_convert_builtin.check_struct_type": {
     "line number": [
      1723,
      1741
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1763
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_list_of_pairs": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1631
     ]
    },
    "pyarrow.array": {
     "line number": [
      1613,
      1630,
      1653
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1606,
      1624,
      1639
     ]
    },
    "pyarrow.field": {
     "line number": [
      1604,
      1605,
      1606,
      1622,
      1623,
      1624,
      1637,
      1638,
      1639
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1604,
      1622,
      1637
     ]
    },
    "pyarrow.string": {
     "line number": [
      1605,
      1623,
      1638
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1603,
      1621,
      1636
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1631
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_list_of_pairs_errors": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1691,
      1697
     ]
    },
    "ValueError": {
     "line number": [
      1670
     ]
    },
    "pyarrow.array": {
     "line number": [
      1671,
      1692,
      1698
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1661
     ]
    },
    "pyarrow.field": {
     "line number": [
      1659,
      1660,
      1661
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1659
     ]
    },
    "pyarrow.string": {
     "line number": [
      1660
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1658
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1670,
      1691,
      1697
     ]
    },
    "str": {
     "line number": [
      1687
     ]
    },
    "tuple": {
     "line number": [
      1680,
      1681,
      1682
     ]
    },
    "type": {
     "line number": [
      1688
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_mixed_sequence": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1711
     ]
    },
    "pyarrow.array": {
     "line number": [
      1712
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1708
     ]
    },
    "pyarrow.field": {
     "line number": [
      1706,
      1707,
      1708
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1706
     ]
    },
    "pyarrow.string": {
     "line number": [
      1707
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1706
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1711
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_tuples": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1598
     ]
    },
    "len": {
     "line number": [
      1579
     ]
    },
    "numpy.empty": {
     "line number": [
      1579
     ]
    },
    "object": {
     "line number": [
      1579
     ]
    },
    "pyarrow.array": {
     "line number": [
      1577,
      1581,
      1593,
      1599
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1571
     ]
    },
    "pyarrow.field": {
     "line number": [
      1569,
      1570,
      1571
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1569
     ]
    },
    "pyarrow.string": {
     "line number": [
      1570
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1569
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1598
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1522
     ]
    },
    "len": {
     "line number": [
      1502
     ]
    },
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      1500,
      1508,
      1523
     ]
    },
    "pyarrow.array": {
     "line number": [
      1505,
      1506,
      1507
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      1507
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1505
     ]
    },
    "pyarrow.string": {
     "line number": [
      1506
     ]
    },
    "pyarrow.struct": {
     "line number": [
      1501
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1522
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray_from_arrays_coerce": {
  "data": {
   "lineno": 1767,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1785
     ]
    },
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      1775,
      1778,
      1786
     ]
    },
    "pyarrow.array": {
     "line number": [
      1779,
      1780,
      1781,
      1782
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      1785
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_uint64_max_convert": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      404
     ]
    },
    "numpy.array": {
     "line number": [
      409
     ]
    },
    "numpy.iinfo": {
     "line number": [
      406
     ]
    },
    "numpy.uint64": {
     "line number": [
      406
     ]
    },
    "pyarrow.array": {
     "line number": [
      408,
      409,
      412
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      403
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_unsigned_integer_overflow": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      430,
      432
     ]
    },
    "getattr": {
     "line number": [
      428
     ]
    },
    "pyarrow": {
     "line number": [
      428
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      430,
      432
     ]
    },
    "pyarrow.array": {
     "line number": [
      431,
      433
     ]
    },
    "pyarrow.tests.test_convert_builtin.pytest": {
     "line number": [
      430,
      432,
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.check_names": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "len": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.read_bytes": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_auto_dict_encode": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "len": {
     "line number": [
      594
     ]
    },
    "pyarrow.binary": {
     "line number": [
      601
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      562
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      565,
      601
     ]
    },
    "pyarrow.int32": {
     "line number": [
      565,
      601
     ]
    },
    "pyarrow.int64": {
     "line number": [
      566,
      583,
      602
     ]
    },
    "pyarrow.schema": {
     "line number": [
      565,
      582,
      601
     ]
    },
    "pyarrow.string": {
     "line number": [
      565,
      582
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_bom": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "decimal.Decimal": {
     "line number": [
      688,
      688
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      704
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      681,
      696,
      698
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      671,
      693
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      674,
      682,
      697
     ]
    },
    "pyarrow.float32": {
     "line number": [
      679,
      694
     ]
    },
    "pyarrow.int64": {
     "line number": [
      678
     ]
    },
    "pyarrow.schema": {
     "line number": [
      678,
      694
     ]
    },
    "pyarrow.string": {
     "line number": [
      680,
      695
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      704
     ]
    },
    "str": {
     "line number": [
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types_dict": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      739
     ]
    },
    "decimal.Decimal": {
     "line number": [
      729,
      729,
      729
     ]
    },
    "dict": {
     "line number": [
      718,
      738
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      718,
      738
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      715
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      713,
      714,
      715,
      716,
      736
     ]
    },
    "pyarrow.int32": {
     "line number": [
      713,
      714,
      715,
      716
     ]
    },
    "pyarrow.int64": {
     "line number": [
      714
     ]
    },
    "pyarrow.int8": {
     "line number": [
      736
     ]
    },
    "pyarrow.large_utf8": {
     "line number": [
      716
     ]
    },
    "pyarrow.schema": {
     "line number": [
      725
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      739
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      713,
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types_with_column_names": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      747,
      750
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      747
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      746
     ]
    },
    "pyarrow.schema": {
     "line number": [
      750
     ]
    },
    "pyarrow.string": {
     "line number": [
      751
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_bools": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "pyarrow.bool_": {
     "line number": [
      660
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      650
     ]
    },
    "pyarrow.schema": {
     "line number": [
      659
     ]
    },
    "pyarrow.string": {
     "line number": [
      659,
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_nulls": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      612,
      627,
      637
     ]
    },
    "pyarrow.int64": {
     "line number": [
      618
     ]
    },
    "pyarrow.null": {
     "line number": [
      615
     ]
    },
    "pyarrow.schema": {
     "line number": [
      615,
      640
     ]
    },
    "pyarrow.string": {
     "line number": [
      616,
      617,
      640,
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_dates": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "datetime.date": {
     "line number": [
      557,
      557,
      558,
      558
     ]
    },
    "datetime.datetime": {
     "line number": [
      545,
      545,
      546,
      546
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      550
     ]
    },
    "pyarrow.date32": {
     "line number": [
      551,
      553
     ]
    },
    "pyarrow.date64": {
     "line number": [
      551,
      554
     ]
    },
    "pyarrow.schema": {
     "line number": [
      541,
      553
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      541,
      542
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_empty_lines": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "pyarrow.csv.ParseOptions": {
     "line number": [
      781
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      787
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_file_object": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      223
     ]
    },
    "pyarrow.tests.test_csv.io": {
     "line number": [
      218,
      222
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      229
     ]
    },
    "pyarrow.Table": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_autogenerate_column_names": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      361
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      342
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_column_names": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      317,
      324
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      291
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      317,
      324
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_skip_rows": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      274
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      256
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_columns": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      388
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      367
     ]
    },
    "pyarrow.schema": {
     "line number": [
      378
     ]
    },
    "pyarrow.string": {
     "line number": [
      378,
      379
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      388
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_missing_columns": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      426,
      430
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      397
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      396
     ]
    },
    "pyarrow.int32": {
     "line number": [
      427,
      431
     ]
    },
    "pyarrow.null": {
     "line number": [
      402,
      404,
      418
     ]
    },
    "pyarrow.schema": {
     "line number": [
      402,
      417,
      430
     ]
    },
    "pyarrow.string": {
     "line number": [
      403,
      417
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_invalid_csv": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      798,
      801,
      804
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      798,
      801,
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_no_ending_newline": {
  "data": {
   "lineno": 758
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_one_chunk": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "len": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_options_delimiter": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "pyarrow.csv.ParseOptions": {
     "line number": [
      814
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_ints": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "pyarrow.int64": {
     "line number": [
      442,
      443,
      444
     ]
    },
    "pyarrow.schema": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_nulls": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      479
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      480
     ]
    },
    "pyarrow.float64": {
     "line number": [
      475
     ]
    },
    "pyarrow.int64": {
     "line number": [
      476
     ]
    },
    "pyarrow.null": {
     "line number": [
      478
     ]
    },
    "pyarrow.schema": {
     "line number": [
      475
     ]
    },
    "pyarrow.string": {
     "line number": [
      477
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_timestamps": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      500,
      500
     ]
    },
    "pyarrow.int64": {
     "line number": [
      495
     ]
    },
    "pyarrow.schema": {
     "line number": [
      495
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_varied": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "pyarrow.bool_": {
     "line number": [
      459
     ]
    },
    "pyarrow.float64": {
     "line number": [
      456
     ]
    },
    "pyarrow.int64": {
     "line number": [
      457
     ]
    },
    "pyarrow.schema": {
     "line number": [
      456
     ]
    },
    "pyarrow.string": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_small_random_csv": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.make_random_csv": {
     "line number": [
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_block_sizes": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": {
    "pyarrow.csv.ReadOptions": {
     "line number": [
      835
     ]
    },
    "pyarrow.tests.test_csv.make_random_csv": {
     "line number": [
      830
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_convert_options_blowup": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      847
     ]
    },
    "clock": {
     "line number": [
      852,
      856
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      853
     ]
    },
    "pyarrow.string": {
     "line number": [
      854
     ]
    },
    "pyarrow.tests.test_csv.make_empty_csv": {
     "line number": [
      851
     ]
    },
    "pyarrow.tests.test_csv.time": {
     "line number": [
      846,
      848
     ]
    },
    "range": {
     "line number": [
      850
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_timestamp_parsers": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      514,
      514,
      523,
      523,
      533,
      533,
      534,
      534
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      506
     ]
    },
    "pyarrow.csv.ISO8601": {
     "line number": [
      527
     ]
    },
    "pyarrow.schema": {
     "line number": [
      509,
      519,
      529
     ]
    },
    "pyarrow.string": {
     "line number": [
      509,
      520
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      510,
      519,
      529,
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_trivial": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead": {
  "data": {
   "lineno": 1189
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.read_csv": {
  "data": {
   "lineno": 1197,
   "symbols_in_volume": {
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      1200
     ]
    },
    "pyarrow.csv.read_csv": {
     "line number": [
      1199
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      1201
     ]
    },
    "str": {
     "line number": [
      1201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.setUp": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.tempfile": {
     "line number": [
      1192
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.tearDown": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.shutil": {
     "line number": [
      1195
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.test_random_csv": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.make_random_csv": {
     "line number": [
      1204
     ]
    },
    "pyarrow.tests.test_csv.os": {
     "line number": [
      1205
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead": {
  "data": {
   "lineno": 887
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.check_reader": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": {
    "len": {
     "line number": [
      895,
      895
     ]
    },
    "list": {
     "line number": [
      894
     ]
    },
    "zip": {
     "line number": [
      896
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.open_bytes": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_column_options": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1070
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      1047
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      1035
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1086,
      1089
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1038,
      1039,
      1040,
      1051,
      1052,
      1061,
      1079,
      1090
     ]
    },
    "pyarrow.null": {
     "line number": [
      1078
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1038,
      1051,
      1061,
      1078,
      1089
     ]
    },
    "pyarrow.string": {
     "line number": [
      1058,
      1062,
      1080,
      1086,
      1091
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      1069
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_empty_file": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1029
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      1029
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_encoding": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      1103
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      1100
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1102,
      1110,
      1121
     ]
    },
    "pyarrow.string": {
     "line number": [
      1102,
      1110,
      1111,
      1121,
      1122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_file_object": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": {
    "pyarrow.int64": {
     "line number": [
      906,
      907
     ]
    },
    "pyarrow.schema": {
     "line number": [
      906
     ]
    },
    "pyarrow.tests.test_csv.io": {
     "line number": [
      904
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_header": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": {
    "pyarrow.null": {
     "line number": [
      913,
      914,
      915
     ]
    },
    "pyarrow.schema": {
     "line number": [
      913
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_inference": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "len": {
     "line number": [
      925,
      931
     ]
    },
    "pyarrow.binary": {
     "line number": [
      922
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      924
     ]
    },
    "pyarrow.schema": {
     "line number": [
      921
     ]
    },
    "pyarrow.string": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_inference_failure": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      956,
      975
     ]
    },
    "ValueError": {
     "line number": [
      952,
      969
     ]
    },
    "len": {
     "line number": [
      943
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      942
     ]
    },
    "pyarrow.int64": {
     "line number": [
      945,
      946,
      964,
      965
     ]
    },
    "pyarrow.schema": {
     "line number": [
      945,
      964
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      952,
      956,
      969,
      975
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_invalid_csv": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      996
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      983,
      992
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      981
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      983,
      992,
      996
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_no_ending_newline": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": {
    "pyarrow.int64": {
     "line number": [
      1020,
      1021,
      1022
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1020
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_options_delimiter": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": {
    "pyarrow.csv.ParseOptions": {
     "line number": [
      1008
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1002,
      1010
     ]
    },
    "pyarrow.string": {
     "line number": [
      1002,
      1003,
      1010,
      1011
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_small_random_csv": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.make_random_csv": {
     "line number": [
      1128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestStreamingCSVRead.test_stress_block_sizes": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": {
    "pyarrow.csv.ReadOptions": {
     "line number": [
      1144
     ]
    },
    "pyarrow.tests.test_csv.make_random_csv": {
     "line number": [
      1137
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.ConvertOptions": {
  "data": {
   "shadows": "pyarrow.csv.ConvertOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ISO8601": {
  "data": {
   "shadows": "pyarrow.csv.ISO8601"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ParseOptions": {
  "data": {
   "shadows": "pyarrow.csv.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ReadOptions": {
  "data": {
   "shadows": "pyarrow.csv.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.BaseTestCompressedCSVRead": {
     "line number": [
      1235
     ]
    },
    "pyarrow.tests.test_csv.unittest": {
     "line number": [
      1235
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead.write_file": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.bz2": {
     "line number": [
      1239
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.BaseTestCompressedCSVRead": {
     "line number": [
      1214
     ]
    },
    "pyarrow.tests.test_csv.unittest": {
     "line number": [
      1214
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.test_concatenated": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.gzip": {
     "line number": [
      1224,
      1226
     ]
    },
    "pyarrow.tests.test_csv.os": {
     "line number": [
      1223
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.write_file": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.gzip": {
     "line number": [
      1218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.BaseTestCSVRead": {
     "line number": [
      877
     ]
    },
    "pyarrow.tests.test_csv.unittest": {
     "line number": [
      877
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead.read_csv": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": {
    "pyarrow.csv.ReadOptions": {
     "line number": [
      880
     ]
    },
    "pyarrow.csv.read_csv": {
     "line number": [
      882
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.BaseTestCSVRead": {
     "line number": [
      867
     ]
    },
    "pyarrow.tests.test_csv.unittest": {
     "line number": [
      867
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead.read_csv": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": {
    "pyarrow.csv.ReadOptions": {
     "line number": [
      870
     ]
    },
    "pyarrow.csv.read_csv": {
     "line number": [
      872
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.BaseTestStreamingCSVRead": {
     "line number": [
      1153
     ]
    },
    "pyarrow.tests.test_csv.unittest": {
     "line number": [
      1153
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.open_csv": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": {
    "pyarrow.csv.ReadOptions": {
     "line number": [
      1156
     ]
    },
    "pyarrow.csv.open_csv": {
     "line number": [
      1158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.test_batch_lifetime": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": {
    "StopIteration": {
     "line number": [
      1182
     ]
    },
    "check_one_batch": {
     "line number": [
      1174,
      1176,
      1178,
      1180
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      1170
     ]
    },
    "pyarrow.tests.test_csv.gc": {
     "line number": [
      1161
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      1182
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      1162,
      1175,
      1177,
      1179,
      1181,
      1184,
      1186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialStreamingCSVRead.test_batch_lifetime.check_one_batch": {
  "data": {
   "lineno": 1165
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.check_options_class": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      86
     ]
    },
    "cls": {
     "line number": [
      77,
      91
     ]
    },
    "getattr": {
     "line number": [
      80,
      84,
      93
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      86
     ]
    },
    "setattr": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.check_options_class_pickling": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      97
     ]
    },
    "getattr": {
     "line number": [
      101
     ]
    },
    "pyarrow.tests.test_csv.pickle": {
     "line number": [
      98,
      98,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.generate_col_names": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.string": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.make_empty_csv": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pyarrow.tests.test_csv.io": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.make_random_csv": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "list": {
     "line number": [
      53
     ]
    },
    "map": {
     "line number": [
      58
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      52
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      62
     ]
    },
    "pyarrow.array": {
     "line number": [
      61
     ]
    },
    "pyarrow.int64": {
     "line number": [
      61
     ]
    },
    "pyarrow.tests.test_csv.generate_col_names": {
     "line number": [
      53
     ]
    },
    "pyarrow.tests.test_csv.io": {
     "line number": [
      54
     ]
    },
    "pyarrow.tests.test_csv.itertools": {
     "line number": [
      53
     ]
    },
    "str": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.open_csv": {
  "data": {
   "shadows": "pyarrow.csv.open_csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.read_csv": {
  "data": {
   "shadows": "pyarrow.csv.read_csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.test_convert_options": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      171,
      173
     ]
    },
    "cls": {
     "line number": [
      142,
      143,
      146,
      194
     ]
    },
    "isinstance": {
     "line number": [
      176,
      182,
      186
     ]
    },
    "list": {
     "line number": [
      176,
      182,
      186
     ]
    },
    "pyarrow.binary": {
     "line number": [
      168,
      169
     ]
    },
    "pyarrow.csv.ConvertOptions": {
     "line number": [
      142
     ]
    },
    "pyarrow.csv.ISO8601": {
     "line number": [
      151,
      191,
      192,
      197,
      203
     ]
    },
    "pyarrow.float32": {
     "line number": [
      159,
      160
     ]
    },
    "pyarrow.int16": {
     "line number": [
      159,
      160,
      162
     ]
    },
    "pyarrow.int32": {
     "line number": [
      164,
      166
     ]
    },
    "pyarrow.null": {
     "line number": [
      162,
      194,
      198
     ]
    },
    "pyarrow.schema": {
     "line number": [
      164
     ]
    },
    "pyarrow.string": {
     "line number": [
      164,
      166
     ]
    },
    "pyarrow.tests.test_csv.check_options_class": {
     "line number": [
      145
     ]
    },
    "pyarrow.tests.test_csv.pytest": {
     "line number": [
      171,
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_parse_options": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      123,
      125,
      133
     ]
    },
    "pyarrow.csv.ParseOptions": {
     "line number": [
      123
     ]
    },
    "pyarrow.tests.test_csv.check_options_class": {
     "line number": [
      125
     ]
    },
    "pyarrow.tests.test_csv.check_options_class_pickling": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_csv_does_not_close_passed_file_handles": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": {
    "pyarrow.csv.read_csv": {
     "line number": [
      1246
     ]
    },
    "pyarrow.tests.test_csv.io": {
     "line number": [
      1245
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_options": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      105,
      106,
      108,
      118
     ]
    },
    "pyarrow.csv.ReadOptions": {
     "line number": [
      105
     ]
    },
    "pyarrow.tests.test_csv.check_options_class": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda.has_ipc_support": {
     "line number": [
      39
     ]
    },
    "pyarrow.tests.test_cuda.platform": {
     "line number": [
      36,
      40
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      32,
      38
     ]
    },
    "pyarrow.tests.test_cuda.sysconfig": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_cuda.cuda": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.cuda_ipc": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.global_context": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.global_context1": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.has_ipc_support": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.make_random_buffer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      105
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      92,
      96
     ]
    },
    "numpy.random.randint": {
     "line number": [
      94
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      97
     ]
    },
    "numpy.uint8": {
     "line number": [
      92,
      94,
      96
     ]
    },
    "pyarrow.allocate_buffer": {
     "line number": [
      90
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_recordbatch": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": {
    "numpy.int16": {
     "line number": [
      663,
      664
     ]
    },
    "numpy.random.randint": {
     "line number": [
      663,
      664
     ]
    },
    "pyarrow.array": {
     "line number": [
      663,
      664
     ]
    },
    "pyarrow.field": {
     "line number": [
      661,
      662
     ]
    },
    "pyarrow.int16": {
     "line number": [
      661,
      662
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      665
     ]
    },
    "pyarrow.schema": {
     "line number": [
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_table": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      713
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      701,
      704,
      707
     ]
    },
    "pyarrow.Table.from_batches": {
     "line number": [
      715
     ]
    },
    "pyarrow.array": {
     "line number": [
      694,
      695,
      696,
      703
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      698
     ]
    },
    "pyarrow.int16": {
     "line number": [
      694
     ]
    },
    "pyarrow.int32": {
     "line number": [
      695
     ]
    },
    "pyarrow.list_": {
     "line number": [
      695
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      714
     ]
    },
    "pyarrow.schema": {
     "line number": [
      712
     ]
    },
    "pyarrow.struct": {
     "line number": [
      697
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      697
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.other_process_for_test_IPC": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      754
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      755
     ]
    },
    "pyarrow.cuda.Context": {
     "line number": [
      748
     ]
    },
    "pyarrow.cuda.IpcMemHandle.from_buffer": {
     "line number": [
      749
     ]
    },
    "repr": {
     "line number": [
      753
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.platform": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.setup_module": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      47,
      48,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.sysconfig": {
  "data": {
   "shadows": "sysconfig"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.teardown_module": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "len": {
     "line number": [
      631
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      644
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      639,
      645
     ]
    },
    "numpy.uint8": {
     "line number": [
      635,
      644
     ]
    },
    "numpy.zeros": {
     "line number": [
      635
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      626
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      624
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader_zero_size": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "len": {
     "line number": [
      653
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      656
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      657
     ]
    },
    "numpy.uint8": {
     "line number": [
      656
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      650
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "allocate": {
     "line number": [
      574
     ]
    },
    "numpy.arange": {
     "line number": [
      575,
      576,
      577,
      581,
      582,
      583
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      580
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      581,
      582,
      583
     ]
    },
    "numpy.uint8": {
     "line number": [
      575,
      576,
      577,
      580,
      581,
      582,
      583
     ]
    },
    "test_writes": {
     "line number": [
      571,
      572
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.allocate": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      538
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.test_writes": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "allocate": {
     "line number": [
      542
     ]
    },
    "min": {
     "line number": [
      557
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      567
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      568
     ]
    },
    "numpy.uint8": {
     "line number": [
      567
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter_edge_cases": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      618
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      619
     ]
    },
    "numpy.uint8": {
     "line number": [
      618
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      590
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      589
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      591
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_Context": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      60
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      56,
      58,
      63,
      63
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      57
     ]
    },
    "pyarrow.tests.test_cuda.global_context1": {
     "line number": [
      58
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_CudaBuffer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      318
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      320
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      299
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      297
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      318,
      295
     ]
    },
    "range": {
     "line number": [
      306
     ]
    },
    "slice": {
     "line number": [
      310,
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_HostBuffer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      345
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      328
     ]
    },
    "numpy.uint8": {
     "line number": [
      328
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      327,
      347
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      325
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      345,
      323
     ]
    },
    "range": {
     "line number": [
      332
     ]
    },
    "slice": {
     "line number": [
      335,
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_IPC": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda.cuda_ipc": {
     "line number": [
      758
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      763
     ]
    },
    "pyarrow.tests.test_cuda.multiprocessing": {
     "line number": [
      762
     ]
    },
    "pyarrow.tests.test_cuda.other_process_for_test_IPC": {
     "line number": [
      766
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      759
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_batch_serialize": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      676
     ]
    },
    "pyarrow.RecordBatch": {
     "line number": [
      676
     ]
    },
    "pyarrow.ipc.read_record_batch": {
     "line number": [
      684
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      672,
      675
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      672
     ]
    },
    "pyarrow.tests.test_cuda.make_recordbatch": {
     "line number": [
      670
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_allocate_del": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      78,
      79,
      80,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_device_buffer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "BufferError": {
     "line number": [
      118
     ]
    },
    "memoryview": {
     "line number": [
      119
     ]
    },
    "numpy.concatenate": {
     "line number": [
      142
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      114,
      124,
      130,
      136,
      141,
      149,
      153,
      159,
      164,
      173,
      179,
      185,
      190,
      198,
      209,
      215,
      219,
      226,
      232
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      115,
      125,
      131,
      137,
      142,
      150,
      154,
      160,
      165,
      174,
      180,
      186,
      191,
      199,
      210,
      220,
      227,
      233
     ]
    },
    "numpy.uint8": {
     "line number": [
      114,
      124,
      130,
      136,
      141,
      149,
      153,
      159,
      164,
      173,
      179,
      185,
      190,
      198,
      209,
      215,
      219,
      226,
      232
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      214
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      112,
      122,
      128,
      147,
      170,
      176,
      183,
      188,
      194,
      202,
      206,
      217,
      224,
      229
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      111
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      118,
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_from_object": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      265
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      244,
      247,
      253
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      248,
      254
     ]
    },
    "pyarrow.ArrowTypeError": {
     "line number": [
      257,
      262
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      259
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      243
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      238
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      239
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      257,
      262,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      467,
      474,
      485
     ]
    },
    "put": {
     "line number": [
      457,
      459,
      460,
      461,
      469,
      477,
      488
     ]
    },
    "pyarrow.tests.test_cuda.global_context1": {
     "line number": [
      446
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      443
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      448,
      467,
      474,
      485,
      440,
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device.put": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      456
     ]
    },
    "numpy.uint8": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      511,
      518,
      529
     ]
    },
    "put": {
     "line number": [
      501,
      503,
      504,
      505,
      513,
      521,
      532
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      495
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      493
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      511,
      518,
      529,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host.put": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      500
     ]
    },
    "numpy.uint8": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_to_host": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      355,
      356,
      364,
      365
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      357,
      360,
      372
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      361,
      373
     ]
    },
    "numpy.uint8": {
     "line number": [
      357,
      360,
      372
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      355,
      365
     ]
    },
    "pyarrow.allocate_buffer": {
     "line number": [
      354
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      356,
      364
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      363
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      350
     ]
    },
    "range": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_to_host": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      400,
      407,
      434
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      382,
      386,
      391,
      414,
      421,
      424,
      428
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      382,
      386,
      390,
      414,
      420,
      424,
      427
     ]
    },
    "numpy.uint8": {
     "line number": [
      382,
      386,
      391,
      414,
      421,
      424,
      428
     ]
    },
    "pyarrow.allocate_buffer": {
     "line number": [
      412
     ]
    },
    "pyarrow.tests.test_cuda.make_random_buffer": {
     "line number": [
      378
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      400,
      407,
      434,
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_foreign_buffer": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      270
     ]
    },
    "numpy.uint8": {
     "line number": [
      270
     ]
    },
    "pyarrow.ArrowIOError": {
     "line number": [
      290
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      272,
      287
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      269
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      290
     ]
    },
    "pyarrow.tests.test_cuda.sys": {
     "line number": [
      275,
      277,
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_manage_allocate_free_host": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      69,
      72
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      73
     ]
    },
    "numpy.uint8": {
     "line number": [
      69,
      72
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      68
     ]
    },
    "pyarrow.tests.test_cuda.pytest": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_table_deserialize": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": {
    "len": {
     "line number": [
      730,
      731
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      724
     ]
    },
    "pyarrow.ipc.new_stream": {
     "line number": [
      725
     ]
    },
    "pyarrow.ipc.open_stream": {
     "line number": [
      733,
      742
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      727
     ]
    },
    "pyarrow.tests.test_cuda.cuda": {
     "line number": [
      733
     ]
    },
    "pyarrow.tests.test_cuda.global_context": {
     "line number": [
      730
     ]
    },
    "pyarrow.tests.test_cuda.make_table": {
     "line number": [
      722
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      23,
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_cuda_numba_interop.DeviceNDArray": {
  "data": {
   "shadows": "numba.cuda.cudadrv.devicearray.DeviceNDArray"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.context_choices": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.cuda": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.dtypes": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "numpy.dtype": {
     "line number": [
      62
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      66
     ]
    },
    "numpy.random.randint": {
     "line number": [
      67
     ]
    },
    "numpy.uint8": {
     "line number": [
      68
     ]
    },
    "pyarrow.allocate_buffer": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.setup_module": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "numpy.random.seed": {
     "line number": [
      34
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.cuda": {
     "line number": [
      35,
      38
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.teardown_module": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_context": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "len": {
     "line number": [
      46
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
     "line number": [
      46,
      47
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choices": {
     "line number": [
      49
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.cuda": {
     "line number": [
      52
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      46
     ]
    },
    "range": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "MyObj": {
     "line number": [
      151
     ]
    },
    "ValueError": {
     "line number": [
      110,
      123,
      137
     ]
    },
    "len": {
     "line number": [
      78
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      90,
      99,
      107,
      120,
      134,
      153
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      91,
      100,
      108,
      121,
      135,
      154
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
     "line number": [
      78,
      79
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choices": {
     "line number": [
      83
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.dtypes": {
     "line number": [
      80,
      80
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
     "line number": [
      84
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
     "line number": [
      87
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      110,
      123,
      137,
      78,
      80,
      81
     ]
    },
    "range": {
     "line number": [
      78
     ]
    },
    "slice": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__cuda_array_interface__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "property": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_context": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "len": {
     "line number": [
      194
     ]
    },
    "numba.cuda.cudadrv.devicearray.DeviceNDArray": {
     "line number": [
      205
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      209
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      206
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
     "line number": [
      194,
      195
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choices": {
     "line number": [
      198
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.dtypes": {
     "line number": [
      196,
      196
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
     "line number": [
      201
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
     "line number": [
      200
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      194,
      196
     ]
    },
    "range": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_memalloc": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "len": {
     "line number": [
      157
     ]
    },
    "numba.cuda.cudadrv.devicearray.DeviceNDArray": {
     "line number": [
      168
     ]
    },
    "numpy.dtype": {
     "line number": [
      162
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      176
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      171,
      172,
      177
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
     "line number": [
      157,
      158
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choices": {
     "line number": [
      161
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.cuda": {
     "line number": [
      175
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.dtypes": {
     "line number": [
      159,
      159
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      157,
      159
     ]
    },
    "range": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "len": {
     "line number": [
      213
     ]
    },
    "numba.cuda.cudadrv.devicearray.DeviceNDArray": {
     "line number": [
      231
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      234
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      235
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
     "line number": [
      213,
      214
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choices": {
     "line number": [
      217
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.dtypes": {
     "line number": [
      215,
      215
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
     "line number": [
      227
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      213,
      215
     ]
    },
    "range": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit.increment_by_one": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
     "line number": [
      221,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_memalloc": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "len": {
     "line number": [
      180
     ]
    },
    "numba.cuda.cudadrv.devicearray.DeviceNDArray": {
     "line number": [
      190
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      191
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
     "line number": [
      180,
      181
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.context_choices": {
     "line number": [
      184
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.dtypes": {
     "line number": [
      182,
      182
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
     "line number": [
      186
     ]
    },
    "pyarrow.tests.test_cuda_numba_interop.pytest": {
     "line number": [
      180,
      182
     ]
    },
    "range": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.tests.test_cython.os": {
     "line number": [
      29,
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_cython.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.here": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.setup_template": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.test_cython_api": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      105
     ]
    },
    "__import__": {
     "line number": [
      102
     ]
    },
    "open": {
     "line number": [
      86
     ]
    },
    "pyarrow.array": {
     "line number": [
      103
     ]
    },
    "pyarrow.get_library_dirs": {
     "line number": [
      127
     ]
    },
    "pyarrow.tests.test_cython.here": {
     "line number": [
      76
     ]
    },
    "pyarrow.tests.test_cython.os": {
     "line number": [
      71,
      76,
      77,
      79
     ]
    },
    "pyarrow.tests.test_cython.pytest": {
     "line number": [
      105,
      63
     ]
    },
    "pyarrow.tests.test_cython.setup_template": {
     "line number": [
      83
     ]
    },
    "pyarrow.tests.test_cython.shutil": {
     "line number": [
      76
     ]
    },
    "pyarrow.tests.test_cython.subprocess": {
     "line number": [
      94,
      130,
      131
     ]
    },
    "pyarrow.tests.test_cython.sys": {
     "line number": [
      94,
      99,
      100,
      108,
      121,
      130
     ]
    },
    "pyarrow.tests.util.get_modified_env_with_pythonpath": {
     "line number": [
      91
     ]
    },
    "str": {
     "line number": [
      77,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      34,
      39
     ]
    },
    "pandas": {
     "line number": [
      35
     ]
    },
    "pyarrow.dataset": {
     "line number": [
      40
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_dataset.FSSpecHandler": {
  "data": {
   "shadows": "pyarrow.fs.FSSpecHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.PyFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.PyFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset._check_dataset": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1285,
      1285,
      1286,
      1287
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      1285,
      1285
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._check_dataset_from_path": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1292,
      1297,
      1303
     ]
    },
    "pyarrow.dataset.FileSystemDataset": {
     "line number": [
      1297,
      1303
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1296,
      1302
     ]
    },
    "pyarrow.tests.test_dataset._check_dataset": {
     "line number": [
      1298,
      1304
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1296,
      1297,
      1298,
      1302,
      1303,
      1304
     ]
    },
    "pyarrow.tests.test_dataset.pathlib": {
     "line number": [
      1292
     ]
    },
    "pyarrow.tests.util.change_cwd": {
     "line number": [
      1301
     ]
    },
    "str": {
     "line number": [
      1295,
      1295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._check_dataset_roundtrip": {
  "data": {
   "lineno": 2251,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2259
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2263
     ]
    },
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2255
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2255,
      2265
     ]
    },
    "set": {
     "line number": [
      2260,
      2260
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_dataset_all_types": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      922,
      923,
      924,
      925,
      926,
      927,
      928,
      929,
      930,
      931,
      932,
      933,
      934,
      935,
      936,
      937,
      938,
      939,
      940,
      941
     ]
    },
    "pyarrow.binary": {
     "line number": [
      934
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      922
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      972
     ]
    },
    "pyarrow.date32": {
     "line number": [
      938
     ]
    },
    "pyarrow.date64": {
     "line number": [
      939
     ]
    },
    "pyarrow.float32": {
     "line number": [
      931
     ]
    },
    "pyarrow.float64": {
     "line number": [
      932
     ]
    },
    "pyarrow.int16": {
     "line number": [
      925
     ]
    },
    "pyarrow.int32": {
     "line number": [
      927
     ]
    },
    "pyarrow.int64": {
     "line number": [
      929
     ]
    },
    "pyarrow.int8": {
     "line number": [
      923
     ]
    },
    "pyarrow.parquet.write_to_dataset": {
     "line number": [
      970
     ]
    },
    "pyarrow.table": {
     "line number": [
      920
     ]
    },
    "pyarrow.time32": {
     "line number": [
      940
     ]
    },
    "pyarrow.time64": {
     "line number": [
      941
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      935,
      936,
      937
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      926
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      928
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      930
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      924
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      933
     ]
    },
    "str": {
     "line number": [
      967
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      689
     ]
    },
    "pyarrow.parquet.write_to_dataset": {
     "line number": [
      687
     ]
    },
    "pyarrow.table": {
     "line number": [
      679
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      689,
      693
     ]
    },
    "range": {
     "line number": [
      680
     ]
    },
    "str": {
     "line number": [
      684
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_directory_of_files": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": {
    "pyarrow.parquet.write_table": {
     "line number": [
      1276,
      1279
     ]
    },
    "pyarrow.table": {
     "line number": [
      1274,
      1277
     ]
    },
    "range": {
     "line number": [
      1274,
      1277
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_metadata_file": {
  "data": {
   "lineno": 2069,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2073
     ]
    },
    "pyarrow.parquet.ParquetFile": {
     "line number": [
      2074,
      2078
     ]
    },
    "pyarrow.parquet.write_metadata": {
     "line number": [
      2083
     ]
    },
    "sorted": {
     "line number": [
      2073
     ]
    },
    "str": {
     "line number": [
      2079
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2093
     ]
    },
    "numpy.repeat": {
     "line number": [
      2094
     ]
    },
    "pyarrow.array": {
     "line number": [
      2093,
      2093,
      2094
     ]
    },
    "pyarrow.parquet.write_to_dataset": {
     "line number": [
      2098
     ]
    },
    "pyarrow.table": {
     "line number": [
      2092
     ]
    },
    "pyarrow.tests.test_dataset._create_metadata_file": {
     "line number": [
      2099
     ]
    },
    "range": {
     "line number": [
      2093
     ]
    },
    "str": {
     "line number": [
      2098
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_parquet_dataset_simple": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2029
     ]
    },
    "pyarrow.parquet.write_metadata": {
     "line number": [
      2036
     ]
    },
    "pyarrow.parquet.write_to_dataset": {
     "line number": [
      2030
     ]
    },
    "pyarrow.table": {
     "line number": [
      2029
     ]
    },
    "range": {
     "line number": [
      2028
     ]
    },
    "str": {
     "line number": [
      2031,
      2034
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._create_single_file": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": {
    "pyarrow.parquet.write_table": {
     "line number": [
      1268
     ]
    },
    "pyarrow.table": {
     "line number": [
      1266
     ]
    },
    "range": {
     "line number": [
      1266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._filesystem_uri": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset.os": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._generate_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "float": {
     "line number": [
      57
     ]
    },
    "next": {
     "line number": [
      57
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      60
     ]
    },
    "pyarrow.tests.test_dataset.datetime": {
     "line number": [
      51,
      52
     ]
    },
    "pyarrow.tests.test_dataset.itertools": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset._table_from_pandas": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pyarrow.Table.from_pandas": {
     "line number": [
      70
     ]
    },
    "pyarrow.date32": {
     "line number": [
      65
     ]
    },
    "pyarrow.field": {
     "line number": [
      65,
      66,
      67,
      68
     ]
    },
    "pyarrow.float64": {
     "line number": [
      67
     ]
    },
    "pyarrow.int64": {
     "line number": [
      66
     ]
    },
    "pyarrow.schema": {
     "line number": [
      64
     ]
    },
    "pyarrow.string": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.change_cwd": {
  "data": {
   "shadows": "pyarrow.tests.util.change_cwd"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.dataset": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "format": {
     "line number": [
      204,
      213
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning": {
     "line number": [
      207
     ]
    },
    "pyarrow.dataset.FileSystemDatasetFactory": {
     "line number": [
      213
     ]
    },
    "pyarrow.dataset.FileSystemFactoryOptions": {
     "line number": [
      206
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      204
     ]
    },
    "pyarrow.field": {
     "line number": [
      209,
      210
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      205
     ]
    },
    "pyarrow.int32": {
     "line number": [
      209
     ]
    },
    "pyarrow.schema": {
     "line number": [
      208
     ]
    },
    "pyarrow.string": {
     "line number": [
      210
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      213
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.ds": {
  "data": {
   "shadows": "pyarrow.dataset"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.feather": {
  "data": {
   "shadows": "pyarrow.feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.fs": {
  "data": {
   "shadows": "pyarrow.fs"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.mockfs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      95
     ]
    },
    "float": {
     "line number": [
      101
     ]
    },
    "list": {
     "line number": [
      100,
      101,
      102
     ]
    },
    "map": {
     "line number": [
      101,
      102
     ]
    },
    "pyarrow.Table.from_batches": {
     "line number": [
      112
     ]
    },
    "pyarrow.field": {
     "line number": [
      106,
      107,
      108,
      109
     ]
    },
    "pyarrow.float64": {
     "line number": [
      107
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      88
     ]
    },
    "pyarrow.int64": {
     "line number": [
      106,
      109
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      114
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      111
     ]
    },
    "pyarrow.schema": {
     "line number": [
      105
     ]
    },
    "pyarrow.string": {
     "line number": [
      108
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      83,
      84
     ]
    },
    "range": {
     "line number": [
      100,
      101,
      102
     ]
    },
    "str": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.multisourcefs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      167
     ]
    },
    "numpy.array_split": {
     "line number": [
      162,
      167
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      158
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      170,
      179,
      188,
      197
     ]
    },
    "pyarrow.tests.test_dataset._generate_data": {
     "line number": [
      157
     ]
    },
    "pyarrow.tests.test_dataset._table_from_pandas": {
     "line number": [
      170,
      179,
      188,
      197
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      158,
      166,
      169,
      173,
      177,
      178,
      182,
      186,
      187,
      191,
      195,
      196,
      199
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.open_logging_fs": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "ProxyHandler": {
     "line number": [
      138
     ]
    },
    "pyarrow.fs": {
     "line number": [
      138,
      148
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      124
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      138
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      119
     ]
    },
    "set": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.assert_opens": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "normalized": {
     "line number": [
      146,
      146
     ]
    },
    "pyarrow.tests.test_dataset.contextlib": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.normalized": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "str": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.open_logging_fs.open_input_file": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "str": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pyarrow.csv": {
  "data": {
   "shadows": "pyarrow.csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.pytestmark": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyarrow.tests.test_dataset.s3_example_simple": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": {
    "pyarrow.fs": {
     "line number": [
      1645,
      1652
     ]
    },
    "pyarrow.fs.FileSystem.from_uri": {
     "line number": [
      1645
     ]
    },
    "pyarrow.fs.create_dir": {
     "line number": [
      1647
     ]
    },
    "pyarrow.fs.open_output_stream": {
     "line number": [
      1649
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      1650
     ]
    },
    "pyarrow.table": {
     "line number": [
      1648
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1634
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_abstract_classes": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      366
     ]
    },
    "klass": {
     "line number": [
      367
     ]
    },
    "pyarrow.dataset.FileFormat": {
     "line number": [
      361
     ]
    },
    "pyarrow.dataset.Partitioning": {
     "line number": [
      363
     ]
    },
    "pyarrow.dataset.Scanner": {
     "line number": [
      362
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_empty_dataset": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1439,
      1444
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1445
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1444
     ]
    },
    "pyarrow.string": {
     "line number": [
      1446
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_invalid_sources_raise": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1465,
      1472,
      1479
     ]
    },
    "pyarrow.dataset.FileSystemDatasetFactory": {
     "line number": [
      1454,
      1459
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      1457,
      1462
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1466,
      1473,
      1480
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1456,
      1461
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      1455,
      1460
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1465,
      1472,
      1479
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_list_of_files": {
  "data": {
   "lineno": 1385,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1395,
      1395
     ]
    },
    "map": {
     "line number": [
      1395
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1393,
      1397,
      1399,
      1401
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1401
     ]
    },
    "pyarrow.tests.test_dataset._create_directory_of_files": {
     "line number": [
      1389
     ]
    },
    "pyarrow.tests.test_dataset._filesystem_uri": {
     "line number": [
      1397
     ]
    },
    "pyarrow.tests.util.change_cwd": {
     "line number": [
      1392
     ]
    },
    "sum": {
     "line number": [
      1395
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_list_of_mixed_paths_fails": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      1413
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1414
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      1414
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1413
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_mixed_child_datasets": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1425
     ]
    },
    "len": {
     "line number": [
      1426,
      1429,
      1432
     ]
    },
    "list": {
     "line number": [
      1426
     ]
    },
    "pyarrow.dataset.UnionDataset": {
     "line number": [
      1425
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1419,
      1421,
      1423
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1423,
      1425,
      1426,
      1428,
      1432,
      1433
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      1420,
      1421
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_single_directory": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1371,
      1372,
      1373
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1372
     ]
    },
    "pyarrow.tests.test_dataset._create_directory_of_files": {
     "line number": [
      1369
     ]
    },
    "pyarrow.tests.test_dataset._filesystem_uri": {
     "line number": [
      1373
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      1381,
      1381
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_construct_from_single_file": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1355,
      1357,
      1359
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1357
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1351
     ]
    },
    "pyarrow.tests.test_dataset._filesystem_uri": {
     "line number": [
      1359
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      1361,
      1361
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_csv_format": {
  "data": {
   "lineno": 1976,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1978,
      1979
     ]
    },
    "pyarrow.dataset.CsvFileFormat": {
     "line number": [
      1984
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1984,
      1988
     ]
    },
    "pyarrow.table": {
     "line number": [
      1978
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1984,
      1985,
      1988,
      1989
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1976
     ]
    },
    "str": {
     "line number": [
      1981
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "all": {
     "line number": [
      324
     ]
    },
    "isinstance": {
     "line number": [
      311,
      312,
      318,
      324,
      327
     ]
    },
    "len": {
     "line number": [
      328
     ]
    },
    "pyarrow.RecordBatch": {
     "line number": [
      324
     ]
    },
    "pyarrow.Schema": {
     "line number": [
      312
     ]
    },
    "pyarrow.Table": {
     "line number": [
      327
     ]
    },
    "pyarrow.array": {
     "line number": [
      315,
      316
     ]
    },
    "pyarrow.dataset.Dataset": {
     "line number": [
      311
     ]
    },
    "pyarrow.dataset.ScanTask": {
     "line number": [
      318
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      330
     ]
    },
    "pyarrow.float64": {
     "line number": [
      316
     ]
    },
    "pyarrow.int64": {
     "line number": [
      315
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      311,
      312,
      317,
      323,
      326,
      331
     ]
    },
    "sorted": {
     "line number": [
      336,
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_from_a_list_of_local_directories_raises": {
  "data": {
   "lineno": 1867,
   "symbols_in_volume": {
    "IsADirectoryError": {
     "line number": [
      1869
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1870
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      1870
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1869
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_project_null_column": {
  "data": {
   "lineno": 2236,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2240
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      2240
     ]
    },
    "pyarrow.array": {
     "line number": [
      2247
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2245
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2246,
      2247
     ]
    },
    "pyarrow.schema": {
     "line number": [
      2246
     ]
    },
    "pyarrow.table": {
     "line number": [
      2247
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2245,
      2248
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2236,
      2237
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_project_only_partition_columns": {
  "data": {
   "lineno": 2218,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2224
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2228
     ]
    },
    "pyarrow.parquet.write_to_dataset": {
     "line number": [
      2227
     ]
    },
    "pyarrow.table": {
     "line number": [
      2224
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2228,
      2230,
      2231
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2218,
      2219
     ]
    },
    "range": {
     "line number": [
      2224
     ]
    },
    "str": {
     "line number": [
      2226
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_schema_metadata": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      2182
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2185
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2185,
      2187,
      2188
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2178,
      2179
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_dataset_union": {
  "data": {
   "lineno": 1786,
   "symbols_in_volume": {
    "all": {
     "line number": [
      1795
     ]
    },
    "isinstance": {
     "line number": [
      1795,
      1798
     ]
    },
    "len": {
     "line number": [
      1794
     ]
    },
    "pyarrow.Schema": {
     "line number": [
      1795
     ]
    },
    "pyarrow.dataset.Dataset": {
     "line number": [
      1798
     ]
    },
    "pyarrow.dataset.FileSystemDatasetFactory": {
     "line number": [
      1787
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      1789
     ]
    },
    "pyarrow.dataset.UnionDatasetFactory": {
     "line number": [
      1791
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1788
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      1788
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_deterministic_row_order": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset._check_dataset_from_path": {
     "line number": [
      1319
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1318
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1313
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_expression_construction": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      460
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      463
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      455
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      451
     ]
    },
    "pyarrow.dataset.scalar": {
     "line number": [
      446,
      447,
      448,
      449,
      450
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      460,
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_expression_serialization": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      440
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      426
     ]
    },
    "pyarrow.dataset.Expression": {
     "line number": [
      440
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      421,
      428,
      431,
      437,
      437,
      438
     ]
    },
    "pyarrow.dataset.scalar": {
     "line number": [
      413,
      414,
      415,
      416,
      417,
      418,
      419,
      429,
      432
     ]
    },
    "pyarrow.field": {
     "line number": [
      423,
      424
     ]
    },
    "pyarrow.float64": {
     "line number": [
      424
     ]
    },
    "pyarrow.int32": {
     "line number": [
      435,
      436
     ]
    },
    "pyarrow.int64": {
     "line number": [
      423
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      419
     ]
    },
    "pyarrow.schema": {
     "line number": [
      422
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      441,
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_feather_format": {
  "data": {
   "lineno": 1993,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2019
     ]
    },
    "pyarrow.array": {
     "line number": [
      1996,
      1997
     ]
    },
    "pyarrow.dataset.IpcFileFormat": {
     "line number": [
      2003
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2003,
      2007,
      2020
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      2001,
      2018
     ]
    },
    "pyarrow.table": {
     "line number": [
      1996
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2003,
      2004,
      2007,
      2008,
      2012,
      2014
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2019
     ]
    },
    "str": {
     "line number": [
      2001,
      2018
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_file_format_pickling": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": {
    "pyarrow.csv.ParseOptions": {
     "line number": [
      505
     ]
    },
    "pyarrow.dataset.CsvFileFormat": {
     "line number": [
      504,
      505
     ]
    },
    "pyarrow.dataset.IpcFileFormat": {
     "line number": [
      503
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      507,
      508,
      511
     ]
    },
    "pyarrow.dataset.ParquetReadOptions": {
     "line number": [
      509
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      519,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_dataset": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      277,
      280,
      284
     ]
    },
    "isinstance": {
     "line number": [
      238,
      239,
      247,
      248,
      254
     ]
    },
    "len": {
     "line number": [
      253,
      260
     ]
    },
    "list": {
     "line number": [
      243,
      252,
      259
     ]
    },
    "pyarrow.dataset.FileSystemDataset": {
     "line number": [
      228,
      238,
      263,
      278,
      281
     ]
    },
    "pyarrow.dataset.FileSystemDataset.from_paths": {
     "line number": [
      232,
      269,
      285
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      221,
      239,
      247
     ]
    },
    "pyarrow.dataset.ParquetFileFragment": {
     "line number": [
      248,
      254
     ]
    },
    "pyarrow.dataset.RowGroupInfo": {
     "line number": [
      256
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      223,
      226,
      259
     ]
    },
    "pyarrow.dataset.scalar": {
     "line number": [
      226,
      266,
      272,
      274
     ]
    },
    "pyarrow.field": {
     "line number": [
      219
     ]
    },
    "pyarrow.int64": {
     "line number": [
      219
     ]
    },
    "pyarrow.schema": {
     "line number": [
      218
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      237,
      238,
      239,
      240,
      241,
      243,
      259,
      263,
      266,
      269,
      272,
      273
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      224,
      230,
      233,
      264,
      270
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      277,
      280,
      284
     ]
    },
    "range": {
     "line number": [
      223
     ]
    },
    "set": {
     "line number": [
      241,
      241
     ]
    },
    "zip": {
     "line number": [
      225,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_dataset_no_filesystem_interaction": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      306
     ]
    },
    "pyarrow.dataset.FileSystemDataset.from_paths": {
     "line number": [
      297
     ]
    },
    "pyarrow.dataset.IpcFileFormat": {
     "line number": [
      293
     ]
    },
    "pyarrow.field": {
     "line number": [
      291
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      299
     ]
    },
    "pyarrow.int64": {
     "line number": [
      291
     ]
    },
    "pyarrow.schema": {
     "line number": [
      290
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      297,
      303,
      307
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filesystem_factory": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "format": {
     "line number": [
      530,
      546
     ]
    },
    "isinstance": {
     "line number": [
      559,
      560,
      565,
      589
     ]
    },
    "len": {
     "line number": [
      566,
      590
     ]
    },
    "list": {
     "line number": [
      559,
      566
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      571
     ]
    },
    "pyarrow.Table": {
     "line number": [
      589
     ]
    },
    "pyarrow.array": {
     "line number": [
      569,
      570,
      572,
      573,
      576,
      577,
      578
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning": {
     "line number": [
      535
     ]
    },
    "pyarrow.dataset.FileSystemDataset": {
     "line number": [
      561,
      565
     ]
    },
    "pyarrow.dataset.FileSystemDatasetFactory": {
     "line number": [
      545
     ]
    },
    "pyarrow.dataset.FileSystemFactoryOptions": {
     "line number": [
      534
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      530
     ]
    },
    "pyarrow.dataset.ParquetReadOptions": {
     "line number": [
      531
     ]
    },
    "pyarrow.dataset.Scanner.from_dataset": {
     "line number": [
      568
     ]
    },
    "pyarrow.dataset.scalar": {
     "line number": [
      562
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      553
     ]
    },
    "pyarrow.field": {
     "line number": [
      537,
      538,
      551,
      552,
      553,
      554,
      555,
      556
     ]
    },
    "pyarrow.float64": {
     "line number": [
      552,
      570
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      523
     ]
    },
    "pyarrow.int32": {
     "line number": [
      537,
      553,
      555,
      572,
      576
     ]
    },
    "pyarrow.int64": {
     "line number": [
      551,
      554,
      569,
      578
     ]
    },
    "pyarrow.schema": {
     "line number": [
      536,
      550
     ]
    },
    "pyarrow.string": {
     "line number": [
      538,
      553,
      556,
      573,
      577
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      564,
      565,
      566,
      568,
      588
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      546
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      522
     ]
    },
    "zip": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filter_implicit_cast": {
  "data": {
   "lineno": 1775,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1783
     ]
    },
    "pyarrow.array": {
     "line number": [
      1778
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1780
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      1782
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1778
     ]
    },
    "pyarrow.table": {
     "line number": [
      1778
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1779
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1780,
      1783
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1775
     ]
    },
    "str": {
     "line number": [
      1780
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_filter_mismatching_schema": {
  "data": {
   "lineno": 2196,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      2210,
      2214
     ]
    },
    "list": {
     "line number": [
      2213
     ]
    },
    "pyarrow.array": {
     "line number": [
      2201
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2206
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      2211,
      2215
     ]
    },
    "pyarrow.int64": {
     "line number": [
      2205
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      2202
     ]
    },
    "pyarrow.schema": {
     "line number": [
      2205
     ]
    },
    "pyarrow.table": {
     "line number": [
      2201
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2206,
      2211,
      2213
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2210,
      2214,
      2196
     ]
    },
    "str": {
     "line number": [
      2202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": {
    "len": {
     "line number": [
      703
     ]
    },
    "list": {
     "line number": [
      702
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      710,
      725
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      699
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      699,
      702,
      719,
      725
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      696,
      697
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_implicit_cast": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "len": {
     "line number": [
      742
     ]
    },
    "list": {
     "line number": [
      742
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      740
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      741
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      739
     ]
    },
    "pyarrow.parquet.write_to_dataset": {
     "line number": [
      737
     ]
    },
    "pyarrow.schema": {
     "line number": [
      739
     ]
    },
    "pyarrow.table": {
     "line number": [
      735
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      740,
      741
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      729,
      730
     ]
    },
    "range": {
     "line number": [
      735
     ]
    },
    "str": {
     "line number": [
      736
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_ensure_metadata": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": {
    "assert_opens": {
     "line number": [
      881,
      886
     ]
    },
    "len": {
     "line number": [
      894
     ]
    },
    "list": {
     "line number": [
      877
     ]
    },
    "pyarrow.fs": {
     "line number": [
      873,
      875
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      874
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      874,
      877
     ]
    },
    "pyarrow.tests.test_dataset.open_logging_fs": {
     "line number": [
      873
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      909,
      909
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      870,
      871
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_num_row_groups": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "len": {
     "line number": [
      849
     ]
    },
    "list": {
     "line number": [
      839
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      838
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      837
     ]
    },
    "pyarrow.table": {
     "line number": [
      836
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      838,
      839
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      832
     ]
    },
    "range": {
     "line number": [
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "len": {
     "line number": [
      812,
      815,
      827,
      829
     ]
    },
    "list": {
     "line number": [
      808,
      811,
      825,
      826
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      825,
      826,
      828
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      806
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      806,
      808,
      813,
      825
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      803,
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_dictionary": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      857
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      857
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      864
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      865
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      861
     ]
    },
    "pyarrow.table": {
     "line number": [
      861
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      864,
      865
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      852,
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_predicate": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1047,
      1053
     ]
    },
    "list": {
     "line number": [
      1037,
      1044,
      1050
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      1038,
      1045,
      1051
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      1035
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1035,
      1037,
      1046,
      1052
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1032,
      1033
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_row_groups_reconstruct": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1092
     ]
    },
    "len": {
     "line number": [
      1085
     ]
    },
    "list": {
     "line number": [
      1061,
      1063
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      1083
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      1059
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1059,
      1061
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      1066,
      1066
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1092,
      1056,
      1057
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_subset_filter": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1138
     ]
    },
    "list": {
     "line number": [
      1132
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      1135,
      1145,
      1153
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      1131
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1131,
      1132,
      1148,
      1153
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1128,
      1129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_subset_ids": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1106,
      1116
     ]
    },
    "list": {
     "line number": [
      1100
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      1099
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1099,
      1100,
      1123
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1096,
      1097
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_parquet_subset_invalid": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1164,
      1167
     ]
    },
    "list": {
     "line number": [
      1161
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      1165
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      1160
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1160,
      1161
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1164,
      1167,
      1157,
      1158
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_reconstruct": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      796
     ]
    },
    "assert_yields_projected": {
     "line number": [
      772,
      778,
      784,
      791
     ]
    },
    "list": {
     "line number": [
      760
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      778,
      785,
      792,
      800
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_for_fragments": {
     "line number": [
      748
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      748,
      760
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      764,
      764
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      796,
      745,
      746
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_fragments_reconstruct.assert_yields_projected": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      753
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_ipc_format": {
  "data": {
   "lineno": 1956,
   "symbols_in_volume": {
    "pyarrow.RecordBatchFileWriter": {
     "line number": [
      1962
     ]
    },
    "pyarrow.array": {
     "line number": [
      1957,
      1958
     ]
    },
    "pyarrow.dataset.IpcFileFormat": {
     "line number": [
      1966
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1966,
      1971
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1961
     ]
    },
    "pyarrow.table": {
     "line number": [
      1957
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1966,
      1967,
      1971,
      1972
     ]
    },
    "str": {
     "line number": [
      1960
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_csv_fragment_from_buffer": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "pyarrow.dataset.CsvFileFormat": {
     "line number": [
      623
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      621
     ]
    },
    "pyarrow.table": {
     "line number": [
      626
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      632,
      632
     ]
    },
    "pyarrow.tests.test_dataset.textwrap": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_fragment": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      607,
      609
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      595
     ]
    },
    "pyarrow.dataset.ParquetFileFragment": {
     "line number": [
      607
     ]
    },
    "pyarrow.dataset.RowGroupInfo": {
     "line number": [
      610
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      596
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      596,
      599
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      596,
      600,
      604,
      609
     ]
    },
    "type": {
     "line number": [
      609
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_make_parquet_fragment_from_buffer": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "pyarrow.BufferOutputStream": {
     "line number": [
      665
     ]
    },
    "pyarrow.array": {
     "line number": [
      641,
      642,
      643
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      650,
      659
     ]
    },
    "pyarrow.dataset.ParquetReadOptions": {
     "line number": [
      651
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      666
     ]
    },
    "pyarrow.table": {
     "line number": [
      663
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      672,
      672
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_directory": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": {
    "pyarrow.concat_tables": {
     "line number": [
      1325
     ]
    },
    "pyarrow.tests.test_dataset._check_dataset_from_path": {
     "line number": [
      1326
     ]
    },
    "pyarrow.tests.test_dataset._create_directory_of_files": {
     "line number": [
      1324
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_filesystem": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      1550
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1537,
      1541,
      1546,
      1551
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1541,
      1546
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      1551
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1534
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1550,
      1531
     ]
    },
    "pyarrow.tests.util.change_cwd": {
     "line number": [
      1545
     ]
    },
    "str": {
     "line number": [
      1537,
      1541,
      1551
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_fsspec": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1771
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1766
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1771,
      1772
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1768,
      1764
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_s3_with_filesystem_uri": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1753,
      1759
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1741
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1719,
      1738,
      1743,
      1754,
      1760
     ]
    },
    "pyarrow.fs": {
     "line number": [
      1709
     ]
    },
    "pyarrow.fs.FileSystem.from_uri": {
     "line number": [
      1709
     ]
    },
    "pyarrow.fs.create_dir": {
     "line number": [
      1712
     ]
    },
    "pyarrow.fs.open_output_stream": {
     "line number": [
      1715
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      1716
     ]
    },
    "pyarrow.table": {
     "line number": [
      1714
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1719,
      1720,
      1738,
      1739
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1741,
      1753,
      1759,
      1696,
      1697
     ]
    },
    "str": {
     "line number": [
      1755,
      1761
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_uri_s3": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1662,
      1666
     ]
    },
    "pyarrow.fs": {
     "line number": [
      1659,
      1666
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1662,
      1663,
      1666,
      1667
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1655,
      1656
     ]
    },
    "pyarrow.tests.test_dataset.s3_example_simple": {
     "line number": [
      1659
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_from_uri_s3_fsspec": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1687,
      1692
     ]
    },
    "pyarrow.fs": {
     "line number": [
      1678,
      1687,
      1691,
      1691,
      1692
     ]
    },
    "pyarrow.fs.FSSpecHandler": {
     "line number": [
      1691
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1691
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1687,
      1688,
      1692,
      1693
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1674,
      1670,
      1671
     ]
    },
    "pyarrow.tests.test_dataset.s3_example_simple": {
     "line number": [
      1673
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_list_of_files": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": {
    "pyarrow.concat_tables": {
     "line number": [
      1332
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1335,
      1336
     ]
    },
    "pyarrow.tests.test_dataset._create_directory_of_files": {
     "line number": [
      1331
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1342,
      1343,
      1344
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      1339,
      1339
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1329
     ]
    },
    "str": {
     "line number": [
      1336,
      1336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_non_existing_file": {
  "data": {
   "lineno": 1579,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      1582
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1585
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1583,
      1586
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1582,
      1585
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_dictionary_type": {
  "data": {
   "lineno": 1589,
   "symbols_in_volume": {
    "dict_type": {
     "line number": [
      1627,
      1629
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning.discover": {
     "line number": [
      1604
     ]
    },
    "pyarrow.dataset.HivePartitioning.discover": {
     "line number": [
      1608
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1621
     ]
    },
    "pyarrow.field": {
     "line number": [
      1627,
      1629
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      1619
     ]
    },
    "pyarrow.table": {
     "line number": [
      1601
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1621,
      1631
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1589,
      1590,
      1591
     ]
    },
    "range": {
     "line number": [
      1601
     ]
    },
    "str": {
     "line number": [
      1621
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_dictionary_type.dict_type": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1624
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1625
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1624,
      1625
     ]
    },
    "pyarrow.string": {
     "line number": [
      1624
     ]
    },
    "str": {
     "line number": [
      1624
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_partitioned_directory": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": {
    "numpy.repeat": {
     "line number": [
      1527
     ]
    },
    "pyarrow.array": {
     "line number": [
      1527
     ]
    },
    "pyarrow.concat_tables": {
     "line number": [
      1497
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1501,
      1508,
      1514,
      1518
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      1502,
      1509,
      1520
     ]
    },
    "pyarrow.field": {
     "line number": [
      1503,
      1510,
      1522
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1503,
      1510
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1521,
      1522,
      1527
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      1494
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1521
     ]
    },
    "pyarrow.table": {
     "line number": [
      1486
     ]
    },
    "pyarrow.tests.test_dataset._check_dataset_from_path": {
     "line number": [
      1498
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1501,
      1504,
      1508,
      1511,
      1514,
      1515,
      1518,
      1523,
      1525
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1483
     ]
    },
    "pyarrow.tests.util.change_cwd": {
     "line number": [
      1507
     ]
    },
    "range": {
     "line number": [
      1486,
      1491
     ]
    },
    "str": {
     "line number": [
      1502,
      1514,
      1519
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_single_file": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset._check_dataset_from_path": {
     "line number": [
      1310
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1309
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1307
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_dataset_unsupported_format": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1557
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1558
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1556
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1557,
      1554
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_union_dataset": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1567
     ]
    },
    "pyarrow.dataset.UnionDataset": {
     "line number": [
      1567
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1564,
      1566
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1563
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1564,
      1566,
      1566
     ]
    },
    "pyarrow.tests.test_dataset.pickle": {
     "line number": [
      1569,
      1569
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1561
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_open_union_dataset_with_additional_kwargs": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1575
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1574,
      1576
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      1574
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1575
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2050
     ]
    },
    "pyarrow.dataset.parquet_dataset": {
     "line number": [
      2048
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_simple": {
     "line number": [
      2047
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2048,
      2049,
      2050,
      2051
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2043,
      2044
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_invalid": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      2065
     ]
    },
    "len": {
     "line number": [
      2064
     ]
    },
    "list": {
     "line number": [
      2061
     ]
    },
    "pyarrow.dataset.parquet_dataset": {
     "line number": [
      2062
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_simple": {
     "line number": [
      2059
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2062,
      2063,
      2064,
      2066
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2065,
      2055,
      2056
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_metadata": {
  "data": {
   "lineno": 2122,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2133
     ]
    },
    "pyarrow.dataset.parquet_dataset": {
     "line number": [
      2129
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
     "line number": [
      2127
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2129,
      2130,
      2131,
      2133
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2122,
      2123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_factory_partitioned": {
  "data": {
   "lineno": 2102,
   "symbols_in_volume": {
    "len": {
     "line number": [
      2112
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      2119
     ]
    },
    "pyarrow.dataset.parquet_dataset": {
     "line number": [
      2109
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      2108
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
     "line number": [
      2106
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2109,
      2111,
      2112,
      2113
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2102,
      2103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_dataset_lazy_filtering": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": {
    "assert_opens": {
     "line number": [
      2140,
      2149,
      2156,
      2160,
      2164,
      2168
     ]
    },
    "list": {
     "line number": [
      2157,
      2161
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      2161,
      2165
     ]
    },
    "pyarrow.dataset.parquet_dataset": {
     "line number": [
      2150
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      2152
     ]
    },
    "pyarrow.fs": {
     "line number": [
      2140,
      2153
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_simple": {
     "line number": [
      2146
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2150,
      2157,
      2161
     ]
    },
    "pyarrow.tests.test_dataset.open_logging_fs": {
     "line number": [
      2140
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2137,
      2138
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": {
    "date": {
     "line number": [
      1012,
      1012,
      1013,
      1013
     ]
    },
    "dt_ms": {
     "line number": [
      1010,
      1010
     ]
    },
    "dt_s": {
     "line number": [
      1009,
      1009
     ]
    },
    "dt_us": {
     "line number": [
      1011,
      1011
     ]
    },
    "list": {
     "line number": [
      980,
      990
     ]
    },
    "pyarrow.tests.test_dataset._create_dataset_all_types": {
     "line number": [
      978
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      978,
      980
     ]
    },
    "pyarrow.tests.test_dataset.datetime": {
     "line number": [
      986,
      987
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      975,
      976
     ]
    },
    "time": {
     "line number": [
      1014,
      1014,
      1015,
      1015
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_ms": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset.datetime": {
     "line number": [
      984
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_s": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset.datetime": {
     "line number": [
      983
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics.dt_us": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": {
    "pyarrow.tests.test_dataset.datetime": {
     "line number": [
      985
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_fragment_statistics_nulls": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1027
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1026
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      1024
     ]
    },
    "pyarrow.table": {
     "line number": [
      1023
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1026,
      1027
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1019
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_parquet_read_options": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "pyarrow.dataset.ParquetReadOptions": {
     "line number": [
      478,
      479,
      481
     ]
    },
    "set": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partition_keys": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "pyarrow.dataset._get_partition_keys": {
     "line number": [
      469,
      470,
      473,
      474
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      468,
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      377,
      386
     ]
    },
    "klass": {
     "line number": [
      375,
      376
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      391,
      408
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning": {
     "line number": [
      375,
      379
     ]
    },
    "pyarrow.dataset.Expression": {
     "line number": [
      386
     ]
    },
    "pyarrow.dataset.HivePartitioning": {
     "line number": [
      375,
      394
     ]
    },
    "pyarrow.dataset.Partitioning": {
     "line number": [
      377
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      388,
      388,
      402,
      403
     ]
    },
    "pyarrow.dataset.scalar": {
     "line number": [
      402,
      403
     ]
    },
    "pyarrow.field": {
     "line number": [
      372,
      373,
      381,
      382,
      396,
      397
     ]
    },
    "pyarrow.float64": {
     "line number": [
      373,
      382
     ]
    },
    "pyarrow.int64": {
     "line number": [
      372,
      381,
      396,
      397
     ]
    },
    "pyarrow.schema": {
     "line number": [
      371,
      380,
      395
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      391,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_factory": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": {
    "format": {
     "line number": [
      1173,
      1181
     ]
    },
    "isinstance": {
     "line number": [
      1177,
      1196
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning.discover": {
     "line number": [
      1176
     ]
    },
    "pyarrow.dataset.FileSystemDatasetFactory": {
     "line number": [
      1180
     ]
    },
    "pyarrow.dataset.FileSystemFactoryOptions": {
     "line number": [
      1175
     ]
    },
    "pyarrow.dataset.HivePartitioning.discover": {
     "line number": [
      1195
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      1173
     ]
    },
    "pyarrow.dataset.PartitioningFactory": {
     "line number": [
      1177,
      1196
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1187
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1172
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1190
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1186,
      1189
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1185
     ]
    },
    "pyarrow.string": {
     "line number": [
      1188,
      1191
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      1181
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_factory_dictionary": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": {
    "format": {
     "line number": [
      1202,
      1209
     ]
    },
    "pyarrow.array": {
     "line number": [
      1218
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning.discover": {
     "line number": [
      1205
     ]
    },
    "pyarrow.dataset.FileSystemDatasetFactory": {
     "line number": [
      1208
     ]
    },
    "pyarrow.dataset.FileSystemFactoryOptions": {
     "line number": [
      1203
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      1202
     ]
    },
    "pyarrow.dataset.field": {
     "line number": [
      1222
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      1213
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1201
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1213
     ]
    },
    "pyarrow.string": {
     "line number": [
      1213,
      1227
     ]
    },
    "pyarrow.tests.test_dataset.mockfs": {
     "line number": [
      1209
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_partitioning_function": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1240,
      1242,
      1244,
      1253,
      1255,
      1259
     ]
    },
    "isinstance": {
     "line number": [
      1236,
      1238,
      1249,
      1251
     ]
    },
    "pyarrow.dataset.DirectoryPartitioning": {
     "line number": [
      1236
     ]
    },
    "pyarrow.dataset.HivePartitioning": {
     "line number": [
      1249
     ]
    },
    "pyarrow.dataset.PartitioningFactory": {
     "line number": [
      1238,
      1251
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      1235,
      1237,
      1241,
      1243,
      1245,
      1248,
      1250,
      1254,
      1256,
      1260
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1231
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1231
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1231
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1240,
      1242,
      1244,
      1253,
      1255,
      1259
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_scanner": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      343,
      352
     ]
    },
    "len": {
     "line number": [
      344,
      353
     ]
    },
    "list": {
     "line number": [
      344,
      353
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      346
     ]
    },
    "pyarrow.dataset.Scanner": {
     "line number": [
      343,
      352
     ]
    },
    "pyarrow.dataset.Scanner.from_dataset": {
     "line number": [
      341,
      347,
      349
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      342,
      350
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      341,
      347,
      349
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      346
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_specified_schema": {
  "data": {
   "lineno": 1905,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1952
     ]
    },
    "pyarrow.array": {
     "line number": [
      1944
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1950
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      1910
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1932,
      1937,
      1942,
      1949
     ]
    },
    "pyarrow.table": {
     "line number": [
      1909,
      1933,
      1938,
      1943
     ]
    },
    "pyarrow.tests.test_dataset._check_dataset": {
     "line number": [
      1924,
      1929,
      1934,
      1939,
      1946
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1950,
      1951,
      1953
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1952,
      1905
     ]
    },
    "str": {
     "line number": [
      1950
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_specified_schema._check_dataset": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1913
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1913,
      1915,
      1917,
      1918
     ]
    },
    "str": {
     "line number": [
      1913
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_union_dataset_filesystem_datasets": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      1875,
      1876,
      1877,
      1878,
      1889,
      1890,
      1891,
      1892
     ]
    },
    "pyarrow.date32": {
     "line number": [
      1881,
      1895
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1883,
      1897
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1899,
      1900
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1882,
      1896
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1880,
      1894
     ]
    },
    "pyarrow.string": {
     "line number": [
      1884,
      1898
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      1875,
      1886,
      1889,
      1902
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      1876,
      1877,
      1878,
      1890,
      1891,
      1892
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_union_dataset_from_other_datasets": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1814
     ]
    },
    "isinstance": {
     "line number": [
      1811
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      1863
     ]
    },
    "pyarrow.dataset.UnionDataset": {
     "line number": [
      1811
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      1802,
      1803,
      1805,
      1810,
      1815,
      1829,
      1846,
      1854,
      1861,
      1864
     ]
    },
    "pyarrow.date32": {
     "line number": [
      1818,
      1831,
      1844
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1820,
      1833
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1822,
      1823,
      1824,
      1835,
      1836,
      1842,
      1850
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1819,
      1832
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1817,
      1830,
      1841,
      1849
     ]
    },
    "pyarrow.string": {
     "line number": [
      1821,
      1834,
      1843,
      1851,
      1852
     ]
    },
    "pyarrow.table": {
     "line number": [
      1858
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      1860
     ]
    },
    "pyarrow.tests.test_dataset.multisourcefs": {
     "line number": [
      1802,
      1803,
      1805,
      1815
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      1814,
      1863
     ]
    },
    "range": {
     "line number": [
      1858
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset": {
  "data": {
   "lineno": 2268,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      2274,
      2297
     ]
    },
    "pyarrow.tests.test_dataset._check_dataset_roundtrip": {
     "line number": [
      2279,
      2284,
      2301
     ]
    },
    "pyarrow.tests.test_dataset._create_directory_of_files": {
     "line number": [
      2296
     ]
    },
    "pyarrow.tests.test_dataset._create_single_file": {
     "line number": [
      2273
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2274,
      2279,
      2284,
      2297,
      2301
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2268
     ]
    },
    "str": {
     "line number": [
      2279,
      2301
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset_arrow_schema_metadata": {
  "data": {
   "lineno": 2465,
   "symbols_in_volume": {
    "pandas.Timestamp": {
     "line number": [
      2472
     ]
    },
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2475
     ]
    },
    "pyarrow.parquet.read_table": {
     "line number": [
      2476
     ]
    },
    "pyarrow.table": {
     "line number": [
      2472
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2465,
      2466
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset_parquet": {
  "data": {
   "lineno": 2434,
   "symbols_in_volume": {
    "format": {
     "line number": [
      2457,
      2460
     ]
    },
    "format.make_write_options": {
     "line number": [
      2458
     ]
    },
    "list": {
     "line number": [
      2448
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2439
     ]
    },
    "numpy.repeat": {
     "line number": [
      2440
     ]
    },
    "pyarrow.array": {
     "line number": [
      2439,
      2439,
      2440
     ]
    },
    "pyarrow.dataset.ParquetFileFormat": {
     "line number": [
      2457
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2452
     ]
    },
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2446,
      2460
     ]
    },
    "pyarrow.parquet.read_metadata": {
     "line number": [
      2461
     ]
    },
    "pyarrow.table": {
     "line number": [
      2438
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2434
     ]
    },
    "range": {
     "line number": [
      2439
     ]
    },
    "set": {
     "line number": [
      2450,
      2450
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset_partitioned": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      2310
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      2309,
      2318,
      2330
     ]
    },
    "pyarrow.schema": {
     "line number": [
      2319,
      2331
     ]
    },
    "pyarrow.string": {
     "line number": [
      2319,
      2331
     ]
    },
    "pyarrow.tests.test_dataset._check_dataset_roundtrip": {
     "line number": [
      2320,
      2332
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
     "line number": [
      2308
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2310,
      2321,
      2333
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2304,
      2305
     ]
    },
    "str": {
     "line number": [
      2321,
      2333
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset_schema_metadata": {
  "data": {
   "lineno": 2480,
   "symbols_in_volume": {
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2486
     ]
    },
    "pyarrow.feather.read_table": {
     "line number": [
      2488
     ]
    },
    "pyarrow.table": {
     "line number": [
      2484
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset_schema_metadata_parquet": {
  "data": {
   "lineno": 2492,
   "symbols_in_volume": {
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2499
     ]
    },
    "pyarrow.parquet.read_table": {
     "line number": [
      2501
     ]
    },
    "pyarrow.table": {
     "line number": [
      2497
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2492
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_dataset_use_threads": {
  "data": {
   "lineno": 2337,
   "symbols_in_volume": {
    "pyarrow.dataset.dataset": {
     "line number": [
      2342,
      2359,
      2360
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      2344
     ]
    },
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2348,
      2353
     ]
    },
    "pyarrow.schema": {
     "line number": [
      2345
     ]
    },
    "pyarrow.string": {
     "line number": [
      2345
     ]
    },
    "pyarrow.tests.test_dataset._create_parquet_dataset_partitioned": {
     "line number": [
      2341
     ]
    },
    "pyarrow.tests.test_dataset.dataset": {
     "line number": [
      2342,
      2349,
      2354
     ]
    },
    "pyarrow.tests.test_dataset.pytest": {
     "line number": [
      2337,
      2338
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_table": {
  "data": {
   "lineno": 2364,
   "symbols_in_volume": {
    "list": {
     "line number": [
      2374,
      2388
     ]
    },
    "numpy.random.randn": {
     "line number": [
      2366
     ]
    },
    "numpy.repeat": {
     "line number": [
      2367
     ]
    },
    "pyarrow.array": {
     "line number": [
      2366,
      2366,
      2367
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2378,
      2394
     ]
    },
    "pyarrow.dataset.partitioning": {
     "line number": [
      2383
     ]
    },
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2371,
      2385
     ]
    },
    "pyarrow.schema": {
     "line number": [
      2384
     ]
    },
    "pyarrow.string": {
     "line number": [
      2384
     ]
    },
    "pyarrow.table": {
     "line number": [
      2365
     ]
    },
    "range": {
     "line number": [
      2366
     ]
    },
    "set": {
     "line number": [
      2376,
      2376,
      2393,
      2393
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.test_write_table_multiple_fragments": {
  "data": {
   "lineno": 2398,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      2400
     ]
    },
    "numpy.repeat": {
     "line number": [
      2401
     ]
    },
    "pyarrow.array": {
     "line number": [
      2400,
      2400,
      2401
     ]
    },
    "pyarrow.concat_tables": {
     "line number": [
      2403,
      2430
     ]
    },
    "pyarrow.dataset.dataset": {
     "line number": [
      2409,
      2415,
      2422,
      2429
     ]
    },
    "pyarrow.dataset.write_dataset": {
     "line number": [
      2407,
      2413,
      2419,
      2426
     ]
    },
    "pyarrow.table": {
     "line number": [
      2399
     ]
    },
    "range": {
     "line number": [
      2400
     ]
    },
    "set": {
     "line number": [
      2408,
      2408,
      2414,
      2414,
      2420,
      2420,
      2427,
      2427
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_dataset.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "pyarrow.tests.test_dataset.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_deprecations.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_extension_type.IntegerType": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.IntegerType.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType.__init__": {
     "line number": [
      30
     ]
    },
    "pyarrow.int64": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.IntegerType.__reduce__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.MyListType": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.MyListType.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType.__init__": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.MyListType.__reduce__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.MyListType": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.MyStructType": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType": {
     "line number": [
      59
     ]
    },
    "pyarrow.int64": {
     "line number": [
      60,
      61
     ]
    },
    "pyarrow.struct": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.MyStructType.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType.__init__": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.MyStructType.__reduce__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.MyStructType": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType.__init__": {
     "line number": [
      49
     ]
    },
    "pyarrow.binary": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__reduce__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.width": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "property": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodArray": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "pyarrow.ExtensionType": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_deserialize__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      322
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_serialize__": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__eq__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      334
     ]
    },
    "isinstance": {
     "line number": [
      330
     ]
    },
    "pyarrow.BaseExtensionType": {
     "line number": [
      330
     ]
    },
    "type": {
     "line number": [
      331,
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "pyarrow.ExtensionType.__init__": {
     "line number": [
      313
     ]
    },
    "pyarrow.int64": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.freq": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "property": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__arrow_ext_class__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.PeriodArray": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__arrow_ext_deserialize__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      344
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      346
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodTypeWithClass": {
     "line number": [
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodTypeWithClass.__init__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.UuidType.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "pyarrow.PyExtensionType.__init__": {
     "line number": [
      39
     ]
    },
    "pyarrow.binary": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType.__reduce__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.check_example_batch": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      257
     ]
    },
    "pyarrow.ExtensionArray": {
     "line number": [
      257
     ]
    },
    "pyarrow.binary": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.example_batch": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      251
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      252
     ]
    },
    "pyarrow.array": {
     "line number": [
      250
     ]
    },
    "pyarrow.binary": {
     "line number": [
      250
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_read_batch": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pyarrow.RecordBatchStreamReader": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_write_batch": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "pyarrow.BufferOutputStream": {
     "line number": [
      80
     ]
    },
    "pyarrow.RecordBatchStreamWriter": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.registered_period_type": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      361
     ]
    },
    "pyarrow.register_extension_type": {
     "line number": [
      356
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      351
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodTypeWithClass": {
     "line number": [
      351
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      351
     ]
    },
    "pyarrow.unregister_extension_type": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_cast_kernel_on_extension_arrays": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      233,
      239
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      239
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      215
     ]
    },
    "pyarrow.Int16Array": {
     "line number": [
      225
     ]
    },
    "pyarrow.Int32Array": {
     "line number": [
      224
     ]
    },
    "pyarrow.Int64Array": {
     "line number": [
      223
     ]
    },
    "pyarrow.UInt16Array": {
     "line number": [
      228
     ]
    },
    "pyarrow.UInt32Array": {
     "line number": [
      227
     ]
    },
    "pyarrow.UInt64Array": {
     "line number": [
      226
     ]
    },
    "pyarrow.array": {
     "line number": [
      214
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      236
     ]
    },
    "pyarrow.int16": {
     "line number": [
      225,
      237,
      238
     ]
    },
    "pyarrow.int32": {
     "line number": [
      224
     ]
    },
    "pyarrow.int64": {
     "line number": [
      214,
      219,
      223
     ]
    },
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      215
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      218,
      220
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      228
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      227
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_casting_to_extension_type_raises": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      244
     ]
    },
    "pyarrow.array": {
     "line number": [
      243
     ]
    },
    "pyarrow.int64": {
     "line number": [
      243
     ]
    },
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      245
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_basics": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      152
     ]
    },
    "pyarrow.array": {
     "line number": [
      151
     ]
    },
    "pyarrow.binary": {
     "line number": [
      151
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_equality": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      183,
      184,
      186,
      188,
      190,
      192
     ]
    },
    "pyarrow.array": {
     "line number": [
      177,
      178,
      179
     ]
    },
    "pyarrow.binary": {
     "line number": [
      177,
      178,
      179
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      181
     ]
    },
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_errors": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      172
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      173
     ]
    },
    "pyarrow.array": {
     "line number": [
      171
     ]
    },
    "pyarrow.binary": {
     "line number": [
      171
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      170
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_lifetime": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      161
     ]
    },
    "pyarrow.array": {
     "line number": [
      160
     ]
    },
    "pyarrow.binary": {
     "line number": [
      160
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      159
     ]
    },
    "pyarrow.tests.test_extension_type.weakref": {
     "line number": [
      163,
      163,
      163
     ]
    },
    "ref": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_pickling": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      205
     ]
    },
    "pyarrow.ExtensionArray": {
     "line number": [
      205
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      200
     ]
    },
    "pyarrow.array": {
     "line number": [
      199
     ]
    },
    "pyarrow.binary": {
     "line number": [
      199,
      207,
      208
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      198,
      206
     ]
    },
    "pyarrow.tests.test_extension_type.pickle": {
     "line number": [
      197,
      201,
      203
     ]
    },
    "range": {
     "line number": [
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__lifetime": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      110
     ]
    },
    "pyarrow.tests.test_extension_type.weakref": {
     "line number": [
      111
     ]
    },
    "wr": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__storage_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      118,
      121
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      120,
      122
     ]
    },
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      117,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_basics": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_equality": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      138,
      139,
      140
     ]
    },
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      143,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_repr": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      105
     ]
    },
    "repr": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_str": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "pyarrow.DataType.__str__": {
     "line number": [
      101
     ]
    },
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      98
     ]
    },
    "str": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray": {
     "line number": [
      370
     ]
    },
    "pyarrow.int64": {
     "line number": [
      368
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_equality": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      438,
      441,
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      392,
      408
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      376,
      401
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      377,
      402
     ]
    },
    "pyarrow.array": {
     "line number": [
      375
     ]
    },
    "pyarrow.int64": {
     "line number": [
      375
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      392,
      408
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_read_batch": {
     "line number": [
      383,
      406
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_write_batch": {
     "line number": [
      381,
      404
     ]
    },
    "pyarrow.tests.test_extension_type.registered_period_type": {
     "line number": [
      374
     ]
    },
    "type": {
     "line number": [
      379,
      387,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc_unknown": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      429
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      416
     ]
    },
    "pyarrow.Int64Array": {
     "line number": [
      429
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      417
     ]
    },
    "pyarrow.array": {
     "line number": [
      415
     ]
    },
    "pyarrow.int64": {
     "line number": [
      415
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_read_batch": {
     "line number": [
      426
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_write_batch": {
     "line number": [
      419
     ]
    },
    "pyarrow.tests.test_extension_type.registered_period_type": {
     "line number": [
      414
     ]
    },
    "pyarrow.unregister_extension_type": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_register": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      454
     ]
    },
    "TypeError": {
     "line number": [
      449
     ]
    },
    "pyarrow.register_extension_type": {
     "line number": [
      450,
      455
     ]
    },
    "pyarrow.string": {
     "line number": [
      450
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      453
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      449,
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      270
     ]
    },
    "pyarrow.tests.test_extension_type.check_example_batch": {
     "line number": [
      269
     ]
    },
    "pyarrow.tests.test_extension_type.example_batch": {
     "line number": [
      264
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_read_batch": {
     "line number": [
      268
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_write_batch": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc_unknown_type": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "globals": {
     "line number": [
      282,
      296
     ]
    },
    "isinstance": {
     "line number": [
      286,
      294
     ]
    },
    "pyarrow.UnknownExtensionType": {
     "line number": [
      286,
      294
     ]
    },
    "pyarrow.tests.test_extension_type.ParamExtType": {
     "line number": [
      278,
      301
     ]
    },
    "pyarrow.tests.test_extension_type.check_example_batch": {
     "line number": [
      285,
      293,
      300
     ]
    },
    "pyarrow.tests.test_extension_type.example_batch": {
     "line number": [
      274
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_read_batch": {
     "line number": [
      284,
      292,
      299
     ]
    },
    "pyarrow.tests.test_extension_type.ipc_write_batch": {
     "line number": [
      275,
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet_extension_nested_in_extension": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      582,
      586
     ]
    },
    "pyarrow.ListArray.from_arrays": {
     "line number": [
      585
     ]
    },
    "pyarrow.array": {
     "line number": [
      581
     ]
    },
    "pyarrow.int64": {
     "line number": [
      581
     ]
    },
    "pyarrow.parquet.read_table": {
     "line number": [
      593
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      591
     ]
    },
    "pyarrow.table": {
     "line number": [
      589
     ]
    },
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      580
     ]
    },
    "pyarrow.tests.test_extension_type.MyListType": {
     "line number": [
      587
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet_extension_with_nested_storage": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      514,
      516
     ]
    },
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      509
     ]
    },
    "pyarrow.array": {
     "line number": [
      510,
      510,
      512
     ]
    },
    "pyarrow.int32": {
     "line number": [
      512
     ]
    },
    "pyarrow.list_": {
     "line number": [
      512
     ]
    },
    "pyarrow.parquet.read_table": {
     "line number": [
      524
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      522
     ]
    },
    "pyarrow.table": {
     "line number": [
      519
     ]
    },
    "pyarrow.tests.test_extension_type.MyListType": {
     "line number": [
      517
     ]
    },
    "pyarrow.tests.test_extension_type.MyStructType": {
     "line number": [
      514
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet_nested_extension": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": {
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      537
     ]
    },
    "pyarrow.LargeListArray.from_arrays": {
     "line number": [
      564
     ]
    },
    "pyarrow.ListArray.from_arrays": {
     "line number": [
      553
     ]
    },
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      540
     ]
    },
    "pyarrow.array": {
     "line number": [
      536
     ]
    },
    "pyarrow.int64": {
     "line number": [
      536
     ]
    },
    "pyarrow.parquet.read_table": {
     "line number": [
      548,
      559,
      570
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      546,
      557,
      568
     ]
    },
    "pyarrow.table": {
     "line number": [
      544,
      555,
      566
     ]
    },
    "pyarrow.tests.test_extension_type.IntegerType": {
     "line number": [
      535
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet_period": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      479
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      463
     ]
    },
    "pyarrow.array": {
     "line number": [
      462
     ]
    },
    "pyarrow.int64": {
     "line number": [
      462,
      495
     ]
    },
    "pyarrow.ipc.read_schema": {
     "line number": [
      479
     ]
    },
    "pyarrow.parquet.read_metadata": {
     "line number": [
      473
     ]
    },
    "pyarrow.parquet.read_table": {
     "line number": [
      485,
      494
     ]
    },
    "pyarrow.parquet.write_table": {
     "line number": [
      469
     ]
    },
    "pyarrow.table": {
     "line number": [
      464
     ]
    },
    "pyarrow.tests.test_extension_type.base64": {
     "line number": [
      478
     ]
    },
    "pyarrow.tests.test_extension_type.pytest": {
     "line number": [
      458
     ]
    },
    "pyarrow.tests.test_extension_type.registered_period_type": {
     "line number": [
      461
     ]
    },
    "pyarrow.unregister_extension_type": {
     "line number": [
      493
     ]
    },
    "type": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_to_numpy": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      627
     ]
    },
    "numpy.asarray": {
     "line number": [
      607,
      617,
      625
     ]
    },
    "numpy.hstack": {
     "line number": [
      613
     ]
    },
    "numpy.int64": {
     "line number": [
      618,
      626
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      605,
      608,
      619,
      627
     ]
    },
    "pyarrow.ExtensionArray.from_storage": {
     "line number": [
      601
     ]
    },
    "pyarrow.array": {
     "line number": [
      600
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      611,
      612,
      622
     ]
    },
    "pyarrow.int64": {
     "line number": [
      600
     ]
    },
    "pyarrow.tests.test_extension_type.PeriodType": {
     "line number": [
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_uuid_type_pickle": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": {
    "pyarrow.tests.test_extension_type.UuidType": {
     "line number": [
      127
     ]
    },
    "pyarrow.tests.test_extension_type.pickle": {
     "line number": [
      126,
      128,
      130
     ]
    },
    "pyarrow.tests.test_extension_type.weakref": {
     "line number": [
      131
     ]
    },
    "range": {
     "line number": [
      126
     ]
    },
    "wr": {
     "line number": [
      131,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_feather.FeatherDataset": {
  "data": {
   "shadows": "pyarrow.feather.FeatherDataset"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.TEST_FILES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyarrow.tests.test_feather._assert_error_on_write": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      118
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      123
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather._assert_error_on_write.f": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "pyarrow.feather.write_feather": {
     "line number": [
      121
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather._check_arrow_roundtrip": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      105
     ]
    },
    "pyarrow.feather.read_table": {
     "line number": [
      107
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      103
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      102
     ]
    },
    "pyarrow.tests.test_feather.compression": {
     "line number": [
      103
     ]
    },
    "pyarrow.tests.test_feather.os": {
     "line number": [
      104
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather._check_pandas_roundtrip": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      89
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      95
     ]
    },
    "pyarrow.feather.read_feather": {
     "line number": [
      91
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      86
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      85
     ]
    },
    "pyarrow.tests.test_feather.compression": {
     "line number": [
      86
     ]
    },
    "pyarrow.tests.test_feather.os": {
     "line number": [
      88
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      83
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.compression": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pyarrow.pandas_compat": {
  "data": {
   "shadows": "pyarrow.pandas_compat"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.random_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "pyarrow.tests.test_feather.tempfile": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.read_feather": {
  "data": {
   "shadows": "pyarrow.feather.read_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.read_table": {
  "data": {
   "shadows": "pyarrow.feather.read_table"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.setup_module": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.teardown_module": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      65
     ]
    },
    "pyarrow.tests.test_feather.os": {
     "line number": [
      67,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.test_all_none": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      384
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      385
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      382
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      385
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_all_null_category": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      391
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      393
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      388
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_no_nulls": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      283
     ]
    },
    "numpy.random.seed": {
     "line number": [
      281
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      283
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      284
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      277
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_nulls": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      296,
      297
     ]
    },
    "numpy.random.seed": {
     "line number": [
      294
     ]
    },
    "pyarrow.array": {
     "line number": [
      299
     ]
    },
    "pyarrow.table": {
     "line number": [
      299
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      291
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      300
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      303
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      287
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      290
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_boolean_object_nulls": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      322
     ]
    },
    "object": {
     "line number": [
      322
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      321
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_buffer_bounds_error": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "list": {
     "line number": [
      313
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      312
     ]
    },
    "pyarrow.array": {
     "line number": [
      313
     ]
    },
    "pyarrow.float64": {
     "line number": [
      313
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      309
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      316
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      308
     ]
    },
    "range": {
     "line number": [
      311,
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_category": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      415
     ]
    },
    "pandas.Categorical": {
     "line number": [
      420
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      416,
      420
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      421
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      412
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_chunked_binary_error_message": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      693
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      685
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      691
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      690
     ]
    },
    "pyarrow.feather.read_feather": {
     "line number": [
      690
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      689,
      696
     ]
    },
    "pyarrow.tests.test_feather.io": {
     "line number": [
      688,
      696
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      693,
      675,
      676
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_dataset": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      137
     ]
    },
    "numpy.random.randn": {
     "line number": [
      131
     ]
    },
    "pyarrow.feather.FeatherDataset": {
     "line number": [
      145
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      143
     ]
    },
    "pyarrow.table": {
     "line number": [
      134
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      136
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      129
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      143
     ]
    },
    "range": {
     "line number": [
      129,
      132
     ]
    },
    "str": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_delete_partial_file_on_error": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "CustomClass": {
     "line number": [
      340
     ]
    },
    "Exception": {
     "line number": [
      346
     ]
    },
    "numpy.nan": {
     "line number": [
      340
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      337
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      345
     ]
    },
    "pyarrow.tests.test_feather.os": {
     "line number": [
      349
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      331,
      328
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      343
     ]
    },
    "pyarrow.tests.test_feather.sys": {
     "line number": [
      330
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      345
     ]
    },
    "range": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_delete_partial_file_on_error.CustomClass": {
  "data": {
   "lineno": 333
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.test_duplicate_columns": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      561
     ]
    },
    "pyarrow.table": {
     "line number": [
      559
     ]
    },
    "pyarrow.tests.test_feather._assert_error_on_write": {
     "line number": [
      561
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_duplicate_columns_pandas": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      554
     ]
    },
    "list": {
     "line number": [
      553
     ]
    },
    "numpy.arange": {
     "line number": [
      552
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      552
     ]
    },
    "pyarrow.tests.test_feather._assert_error_on_write": {
     "line number": [
      554
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_empty_strings": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      378
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      379
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      376
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_feather_without_pandas": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      701
     ]
    },
    "pyarrow.table": {
     "line number": [
      701
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      703
     ]
    },
    "str": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_file_not_exist": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      74
     ]
    },
    "pyarrow.feather.read_feather": {
     "line number": [
      75
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      74,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_filelike_objects": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      523
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      523
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      530
     ]
    },
    "pyarrow.feather.read_feather": {
     "line number": [
      529
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      525
     ]
    },
    "pyarrow.tests.test_feather.io": {
     "line number": [
      520
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      518
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_float_no_nulls": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      156
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      159
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      160
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      149
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_float_nulls": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      203
     ]
    },
    "numpy.random.randint": {
     "line number": [
      194
     ]
    },
    "numpy.random.randn": {
     "line number": [
      200
     ]
    },
    "pyarrow.array": {
     "line number": [
      201
     ]
    },
    "pyarrow.table": {
     "line number": [
      207
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      192
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      208
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      211
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      187
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      191
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_integer_no_nulls": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      223
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      227
     ]
    },
    "pyarrow.table": {
     "line number": [
      230
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      231
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      228
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      214
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_integer_with_nulls": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      266
     ]
    },
    "numpy.random.randint": {
     "line number": [
      259,
      262
     ]
    },
    "pyarrow.array": {
     "line number": [
      263
     ]
    },
    "pyarrow.table": {
     "line number": [
      270
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      253
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      271
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      274
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      249
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      252
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_large_dataframe": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      671
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      671
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      672
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      668,
      669
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      672
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_multithreaded_read": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      400
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      401
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      396
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      401
     ]
    },
    "range": {
     "line number": [
      399
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_nan_as_null": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      407
     ]
    },
    "numpy.nan": {
     "line number": [
      407,
      407
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      408
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      409
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      404
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      409
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_nested_types": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": {
    "pyarrow.StructArray.from_arrays": {
     "line number": [
      758
     ]
    },
    "pyarrow.array": {
     "line number": [
      762,
      765
     ]
    },
    "pyarrow.table": {
     "line number": [
      758,
      762,
      765
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      760,
      763,
      766
     ]
    },
    "pyarrow.tests.test_feather.compression": {
     "line number": [
      760,
      763,
      766
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_non_string_columns": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      471
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      475
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      469
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      475
     ]
    },
    "str": {
     "line number": [
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_out_of_float64_timestamp_with_nulls": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      462
     ]
    },
    "pandas.DatetimeIndex": {
     "line number": [
      463
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      466
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      460
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      466
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_overwritten_file": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      509
     ]
    },
    "numpy.random.seed": {
     "line number": [
      507
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      512
     ]
    },
    "pyarrow.table": {
     "line number": [
      511,
      514
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      504
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      515
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      503
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_platform_numpy_integers": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      242
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      245
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      246
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      234
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_duplicated_in_file": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      752
     ]
    },
    "pyarrow.feather.read_table": {
     "line number": [
      744,
      748,
      753
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      741
     ]
    },
    "pyarrow.table": {
     "line number": [
      739
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      752
     ]
    },
    "str": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_duplicated_selection": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "pyarrow.feather.read_table": {
     "line number": [
      733
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      728
     ]
    },
    "pyarrow.table": {
     "line number": [
      726,
      730
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      728
     ]
    },
    "str": {
     "line number": [
      727
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_column_selection": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      709
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      709
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      712,
      714,
      718,
      720
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      706
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      713,
      715,
      719,
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_columns": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      491
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      498
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      489
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_read_table": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      170
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      184
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      172
     ]
    },
    "pyarrow.feather.read_feather": {
     "line number": [
      183
     ]
    },
    "pyarrow.feather.read_table": {
     "line number": [
      176,
      180
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      174
     ]
    },
    "pyarrow.tests.test_feather.TEST_FILES": {
     "line number": [
      168
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      163
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      166
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      174
     ]
    },
    "range": {
     "line number": [
      171
     ]
    },
    "str": {
     "line number": [
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_roundtrip": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      769
     ]
    },
    "hypothesis.strategies.sampled_from": {
     "line number": [
      769
     ]
    },
    "pyarrow.tests.strategies.all_tables": {
     "line number": [
      769
     ]
    },
    "pyarrow.tests.test_feather._check_arrow_roundtrip": {
     "line number": [
      771
     ]
    },
    "pyarrow.tests.test_feather.compression": {
     "line number": [
      771
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_sparse_dataframe": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      542
     ]
    },
    "pyarrow.pandas_compat._pandas_api.has_sparse": {
     "line number": [
      537
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      544
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      538,
      533,
      534,
      535
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_strings": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      357,
      360,
      370
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      358,
      361,
      366,
      367,
      371,
      372
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      362,
      368,
      373
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      352
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      362,
      368,
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timedelta_with_nulls": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      454
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      454,
      456
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      457
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timedelta_with_nulls_v1": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      444
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      446
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      446,
      448
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      449
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      443,
      444
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timestamp": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      426
     ]
    },
    "pandas.date_range": {
     "line number": [
      426
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      430
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      424
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_timestamp_with_nulls": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      435
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      435,
      437
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      440
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      433
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unicode_filename": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": {
    "pandas.DataFrame": {
     "line number": [
      484
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      485
     ]
    },
    "pyarrow.tests.test_feather.os": {
     "line number": [
      479
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      478,
      479
     ]
    },
    "pyarrow.tests.test_feather.random_path": {
     "line number": [
      485
     ]
    },
    "pyarrow.tests.test_feather.version": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unsupported": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "A": {
     "line number": [
      573,
      573
     ]
    },
    "TypeError": {
     "line number": [
      578
     ]
    },
    "ValueError": {
     "line number": [
      574
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      573,
      577
     ]
    },
    "pyarrow.tests.test_feather._assert_error_on_write": {
     "line number": [
      574,
      578
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_unsupported.A": {
  "data": {
   "lineno": 570
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.test_v1_unsupported_types": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      661
     ]
    },
    "pyarrow.array": {
     "line number": [
      658
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      665
     ]
    },
    "pyarrow.table": {
     "line number": [
      658
     ]
    },
    "pyarrow.tests.test_feather.io": {
     "line number": [
      660
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      661
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_compression_options": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      621,
      627,
      632
     ]
    },
    "numpy.arange": {
     "line number": [
      598
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      598
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      615
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      617,
      623,
      629,
      634
     ]
    },
    "pyarrow.tests.test_feather._check_pandas_roundtrip": {
     "line number": [
      609
     ]
    },
    "pyarrow.tests.test_feather.compression": {
     "line number": [
      608,
      609
     ]
    },
    "pyarrow.tests.test_feather.io": {
     "line number": [
      612
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      615,
      620,
      626,
      632,
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_lz4_default_compression": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "len": {
     "line number": [
      654,
      654
     ]
    },
    "numpy.repeat": {
     "line number": [
      644
     ]
    },
    "pyarrow.Codec.is_available": {
     "line number": [
      640
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      647,
      651
     ]
    },
    "pyarrow.table": {
     "line number": [
      644
     ]
    },
    "pyarrow.tests.test_feather.io": {
     "line number": [
      646,
      650
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.test_v2_set_chunksize": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "len": {
     "line number": [
      593
     ]
    },
    "numpy.arange": {
     "line number": [
      583
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      583
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      591
     ]
    },
    "pyarrow.feather.write_feather": {
     "line number": [
      587
     ]
    },
    "pyarrow.ipc.open_file": {
     "line number": [
      591
     ]
    },
    "pyarrow.table": {
     "line number": [
      584
     ]
    },
    "pyarrow.tests.test_feather.io": {
     "line number": [
      586
     ]
    },
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.version": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "pyarrow.tests.test_feather.pytest": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_filesystem.filesystem": {
  "data": {
   "shadows": "pyarrow.filesystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem.test_filesystem_deprecated": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      27,
      30
     ]
    },
    "pyarrow.filesystem.LocalFileSystem": {
     "line number": [
      28
     ]
    },
    "pyarrow.filesystem.LocalFileSystem.get_instance": {
     "line number": [
      31
     ]
    },
    "pyarrow.tests.test_filesystem.pytest": {
     "line number": [
      27,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_filesystem.test_filesystem_deprecated_toplevel": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      38,
      41,
      44,
      47
     ]
    },
    "pyarrow.FileSystem": {
     "line number": [
      42
     ]
    },
    "pyarrow.HadoopFileSystem": {
     "line number": [
      48
     ]
    },
    "pyarrow.LocalFileSystem": {
     "line number": [
      45
     ]
    },
    "pyarrow.localfs": {
     "line number": [
      39
     ]
    },
    "pyarrow.tests.test_filesystem.pytest": {
     "line number": [
      38,
      41,
      44,
      47,
      34
     ]
    },
    "pyarrow.tests.test_filesystem.sys": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_filesystem.test_resolve_local_path": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      66
     ]
    },
    "pyarrow.filesystem.LocalFileSystem": {
     "line number": [
      66
     ]
    },
    "pyarrow.filesystem.resolve_filesystem_and_path": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_filesystem.test_resolve_uri": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      54
     ]
    },
    "pyarrow.filesystem.LocalFileSystem": {
     "line number": [
      54
     ]
    },
    "pyarrow.filesystem.resolve_filesystem_and_path": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_fs.DummyHandler": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "pyarrow.fs.FileSystemHandler": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.DummyHandler.__eq__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      41
     ]
    },
    "isinstance": {
     "line number": [
      39
     ]
    },
    "pyarrow.fs.FileSystemHandler": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.__ne__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      46
     ]
    },
    "isinstance": {
     "line number": [
      44
     ]
    },
    "pyarrow.fs.FileSystemHandler": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.copy_file": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.create_dir": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_dir": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_dir_contents": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_file": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.delete_root_dir_contents": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_file_info": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      67
     ]
    },
    "object": {
     "line number": [
      65
     ]
    },
    "pyarrow.fs.FileInfo": {
     "line number": [
      58,
      60,
      62
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      60
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      58
     ]
    },
    "pyarrow.fs.FileType.NotFound": {
     "line number": [
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_file_info_selector": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      75
     ]
    },
    "pyarrow.fs.FileInfo": {
     "line number": [
      77,
      78,
      82
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      78
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      77,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.get_type_name": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.move": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.normalize_path": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_append_stream": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      135
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_input_file": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      124
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_input_stream": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      118
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.DummyHandler.open_output_stream": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      130
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.FSSpecHandler": {
  "data": {
   "shadows": "pyarrow.fs.FSSpecHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileInfo": {
  "data": {
   "shadows": "pyarrow.fs.FileInfo"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSelector": {
  "data": {
   "shadows": "pyarrow.fs.FileSelector"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSystemHandler": {
  "data": {
   "shadows": "pyarrow.fs.FileSystemHandler"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileType": {
  "data": {
   "shadows": "pyarrow.fs.FileType"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.HadoopFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.HadoopFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.ProxyHandler": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "pyarrow.fs.FileSystemHandler": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__eq__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      147
     ]
    },
    "isinstance": {
     "line number": [
      145
     ]
    },
    "pyarrow.tests.test_fs.ProxyHandler": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__init__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.__ne__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "NotImplemented": {
     "line number": [
      152
     ]
    },
    "isinstance": {
     "line number": [
      150
     ]
    },
    "pyarrow.tests.test_fs.ProxyHandler": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.copy_file": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.create_dir": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_dir": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_dir_contents": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_file": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.delete_root_dir_contents": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_file_info": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_file_info_selector": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.get_type_name": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.move": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.normalize_path": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_append_stream": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_input_file": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_input_stream": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.ProxyHandler.open_output_stream": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.PyFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.PyFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.S3FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.S3FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.SubTreeFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.SubTreeFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs._MockFileSystem": {
  "data": {
   "shadows": "pyarrow.fs._MockFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs._check_root_dir_contents": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      762
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      752,
      754,
      756
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      745,
      751,
      753,
      755,
      757,
      759,
      760,
      761,
      763
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      746,
      748,
      749
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      752,
      754,
      756,
      762
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_append_to_file": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.filesystem_config": {
     "line number": [
      449
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      447
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_copy_file": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.filesystem_config": {
     "line number": [
      444
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.allow_move_dir": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.filesystem_config": {
     "line number": [
      439
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.assert_file_not_found": {
  "data": {
   "shadows": "pyarrow.tests.test_io.assert_file_not_found"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.check_mtime": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "datetime.datetime": {
     "line number": [
      453
     ]
    },
    "datetime.timedelta": {
     "line number": [
      461
     ]
    },
    "int": {
     "line number": [
      454
     ]
    },
    "isinstance": {
     "line number": [
      453,
      454
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime_absent": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.check_mtime_or_absent": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.check_mtime": {
     "line number": [
      473
     ]
    },
    "pyarrow.tests.test_fs.check_mtime_absent": {
     "line number": [
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.filesystem_config": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      377,
      378,
      379,
      382,
      383,
      386,
      387,
      390,
      391,
      394,
      395,
      398,
      399,
      402,
      403,
      406,
      407,
      410,
      411,
      414,
      415,
      418,
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.fs": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.filesystem_config": {
     "line number": [
      429
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      427
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.hdfs": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      314
     ]
    },
    "pyarrow.fs.HadoopFileSystem": {
     "line number": [
      312
     ]
    },
    "pyarrow.have_libhdfs": {
     "line number": [
      306
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      307,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.identity": {
  "data": {
   "lineno": 835
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.localfs": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      202
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      203
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.localfs_with_mmap": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      246
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      247
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.mockfs": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      224
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      225
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.pathfn": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.filesystem_config": {
     "line number": [
      434
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.py_fsspec_localfs": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      327
     ]
    },
    "pyarrow.fs.FSSpecHandler": {
     "line number": [
      328
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      328
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      325,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_memoryfs": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      340
     ]
    },
    "pyarrow.fs.FSSpecHandler": {
     "line number": [
      341
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      341
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      338,
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_fsspec_s3fs": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      364
     ]
    },
    "dict": {
     "line number": [
      359,
      368
     ]
    },
    "pyarrow.fs.FSSpecHandler": {
     "line number": [
      361
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      361
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      351,
      349
     ]
    },
    "pyarrow.tests.test_fs.s3fs": {
     "line number": [
      351,
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_localfs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      213
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      214
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      214
     ]
    },
    "pyarrow.tests.test_fs.ProxyHandler": {
     "line number": [
      214
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.py_mockfs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      235
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      236
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      236
     ]
    },
    "pyarrow.tests.test_fs.ProxyHandler": {
     "line number": [
      236
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.s3fs": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      282
     ]
    },
    "pyarrow.fs.S3FileSystem": {
     "line number": [
      274
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      477
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.subtree_localfs": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      257
     ]
    },
    "pyarrow.fs.SubTreeFileSystem": {
     "line number": [
      258
     ]
    },
    "pyarrow.tests.test_fs.localfs": {
     "line number": [
      258
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      255
     ]
    },
    "str": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.subtree_s3fs": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      294
     ]
    },
    "pyarrow.fs.SubTreeFileSystem": {
     "line number": [
      295
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      291
     ]
    },
    "pyarrow.tests.test_fs.s3fs": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.test_cannot_instantiate_base_filesystem": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      511
     ]
    },
    "pyarrow.fs.FileSystem": {
     "line number": [
      512
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_copy_file": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": {
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      783
     ]
    },
    "pyarrow.tests.test_fs.allow_copy_file": {
     "line number": [
      778
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      775,
      779,
      780,
      781,
      784
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      772,
      773
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_create_dir": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      704
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      700,
      705,
      707,
      708,
      711,
      712
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      702,
      710
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      704
     ]
    },
    "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      723,
      725
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      716,
      721,
      722,
      724,
      726
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      718,
      719
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      723,
      725
     ]
    },
    "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
     "line number": [
      716
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir_contents": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      737,
      740
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      730,
      735,
      736,
      738,
      739,
      741
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      732,
      733
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      737,
      740
     ]
    },
    "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
     "line number": [
      730
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_file": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      823
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      819,
      822,
      824,
      827,
      829,
      832
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      818,
      826,
      828
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      823
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_root_dir_contents": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs._check_root_dir_contents": {
     "line number": [
      767,
      768
     ]
    },
    "pyarrow.tests.test_fs.mockfs": {
     "line number": [
      767
     ]
    },
    "pyarrow.tests.test_fs.py_mockfs": {
     "line number": [
      768
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_file_info_constructor": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "datetime.datetime.fromtimestamp": {
     "line number": [
      482
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      482
     ]
    },
    "pyarrow.fs.FileInfo": {
     "line number": [
      484,
      491,
      500
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      500,
      503
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      491,
      495
     ]
    },
    "pyarrow.fs.FileType.Unknown": {
     "line number": [
      487
     ]
    },
    "pyarrow.tests.test_fs.check_mtime": {
     "line number": [
      498,
      507
     ]
    },
    "pyarrow.tests.test_fs.check_mtime_absent": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_equals": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      522
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      516,
      517
     ]
    },
    "pyarrow.fs.SubTreeFileSystem": {
     "line number": [
      530,
      530,
      531,
      531,
      532,
      532
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      518,
      528
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_path_object": {
  "data": {
   "lineno": 1107,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1118
     ]
    },
    "pyarrow.fs.FileSystem.from_uri": {
     "line number": [
      1117
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1118
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1117,
      1118
     ]
    },
    "pyarrow.tests.test_fs.pathlib": {
     "line number": [
      1116
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1107,
      1111
     ]
    },
    "pyarrow.tests.test_fs.sys": {
     "line number": [
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_uri": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1103
     ]
    },
    "pyarrow.fs.FileSystem.from_uri": {
     "line number": [
      1102
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1094,
      1095,
      1096,
      1097,
      1098,
      1099
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      1090,
      1091,
      1092,
      1093
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1102,
      1103
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1087
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_from_uri_s3": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1132
     ]
    },
    "pyarrow.fs.FileSystem.from_uri": {
     "line number": [
      1131
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      1138
     ]
    },
    "pyarrow.fs.S3FileSystem": {
     "line number": [
      1132
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1131,
      1132,
      1135,
      1136
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_is_functional_after_pickling": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      574
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      575,
      576
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      558,
      560,
      566,
      567,
      569,
      572
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      562,
      563,
      564
     ]
    },
    "pyarrow.tests.test_fs.pickle": {
     "line number": [
      572,
      572
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      559
     ]
    },
    "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_filesystem_pickling": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      553
     ]
    },
    "pyarrow.fs.FileSystem": {
     "line number": [
      553
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      548,
      551,
      554
     ]
    },
    "pyarrow.tests.test_fs.pickle": {
     "line number": [
      551,
      552
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_file_info": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": {
    "pyarrow.fs.FileType.File": {
     "line number": [
      629,
      638
     ]
    },
    "pyarrow.fs.FileType.NotFound": {
     "line number": [
      647
     ]
    },
    "pyarrow.tests.test_fs.check_mtime": {
     "line number": [
      633,
      642
     ]
    },
    "pyarrow.tests.test_fs.check_mtime_absent": {
     "line number": [
      651
     ]
    },
    "pyarrow.tests.test_fs.check_mtime_or_absent": {
     "line number": [
      624
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      604,
      611,
      612,
      614,
      617,
      632,
      641,
      654
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      606,
      607,
      608,
      609
     ]
    },
    "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
     "line number": [
      604
     ]
    },
    "repr": {
     "line number": [
      620,
      622,
      630,
      639,
      650
     ]
    },
    "str": {
     "line number": [
      626,
      635,
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_file_info_with_selector": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      690
     ]
    },
    "len": {
     "line number": [
      680
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      675
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      688
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      684,
      686
     ]
    },
    "pyarrow.tests.test_fs.check_mtime_or_absent": {
     "line number": [
      691
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      660,
      668,
      669,
      671,
      673,
      679,
      693,
      694,
      695,
      696
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      662,
      663,
      664,
      665
     ]
    },
    "pyarrow.tests.test_fs.skip_fsspec_s3fs": {
     "line number": [
      660
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_hdfs_options": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1067,
      1069
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1079,
      1084
     ]
    },
    "pyarrow.fs.HadoopFileSystem": {
     "line number": [
      1029,
      1041,
      1043,
      1044,
      1046,
      1048,
      1050,
      1068,
      1078
     ]
    },
    "pyarrow.fs.HadoopFileSystem.from_uri": {
     "line number": [
      1032,
      1035,
      1038,
      1042,
      1070,
      1081
     ]
    },
    "pyarrow.have_libhdfs": {
     "line number": [
      1018
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1072,
      1074,
      1074
     ]
    },
    "pyarrow.tests.test_fs.hdfs": {
     "line number": [
      1078,
      1079,
      1081,
      1084
     ]
    },
    "pyarrow.tests.test_fs.pathlib": {
     "line number": [
      1047
     ]
    },
    "pyarrow.tests.test_fs.pickle": {
     "line number": [
      1074,
      1074
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1019,
      1067,
      1069,
      1015
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_errors": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      941,
      943,
      945,
      947,
      949,
      951,
      953,
      955
     ]
    },
    "pyarrow.tests.test_fs.localfs": {
     "line number": [
      941
     ]
    },
    "pyarrow.tests.test_io.assert_file_not_found": {
     "line number": [
      942,
      944,
      946,
      948,
      950,
      952,
      954
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_file_info": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.check_mtime": {
     "line number": [
      967,
      969
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      959,
      963
     ]
    },
    "pyarrow.tests.test_fs.localfs": {
     "line number": [
      959
     ]
    },
    "pyarrow.tests.test_fs.pathlib": {
     "line number": [
      961
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_localfs_options": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      934
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      932,
      935
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      934
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_mockfs_mtime_roundtrip": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": {
    "datetime.datetime.fromtimestamp": {
     "line number": [
      973
     ]
    },
    "datetime.timezone.utc": {
     "line number": [
      973
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      974
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      974,
      976,
      978
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move_directory": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      796,
      800
     ]
    },
    "pyarrow.tests.test_fs.allow_move_dir": {
     "line number": [
      794
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      792,
      795,
      797,
      798,
      801
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      789,
      790
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      796,
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move_file": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "pyarrow.ArrowIOError": {
     "line number": [
      812
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      808,
      811,
      813,
      814
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      805,
      806
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      812
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "Path": {
     "line number": [
      596
     ]
    },
    "TypeError": {
     "line number": [
      599
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      600
     ]
    },
    "pyarrow.tests.test_fs.pathlib": {
     "line number": [
      597
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      599
     ]
    },
    "tuple": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises.Path": {
  "data": {
   "lineno": 593
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.test_normalize_path": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": {
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_append_stream": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": {
    "compressor": {
     "line number": [
      910
     ]
    },
    "decompressor": {
     "line number": [
      922
     ]
    },
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      925
     ]
    },
    "pyarrow.tests.test_fs.allow_append_to_file": {
     "line number": [
      914
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      911,
      915,
      919,
      926
     ]
    },
    "pyarrow.tests.test_fs.gzip": {
     "line number": [
      902,
      902,
      903,
      903
     ]
    },
    "pyarrow.tests.test_fs.identity": {
     "line number": [
      900,
      900,
      901,
      901
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      908
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      925,
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_file": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": {
    "len": {
     "line number": [
      868
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      865,
      869
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      862
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_stream": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": {
    "compressor": {
     "line number": [
      853
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      852,
      855
     ]
    },
    "pyarrow.tests.test_fs.gzip": {
     "line number": [
      844,
      845
     ]
    },
    "pyarrow.tests.test_fs.identity": {
     "line number": [
      842,
      843
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      849
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      839
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_output_stream": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "len": {
     "line number": [
      894
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      890,
      893
     ]
    },
    "pyarrow.tests.test_fs.gzip": {
     "line number": [
      881,
      882
     ]
    },
    "pyarrow.tests.test_fs.identity": {
     "line number": [
      879,
      880
     ]
    },
    "pyarrow.tests.test_fs.pathfn": {
     "line number": [
      887
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1148
     ]
    },
    "isinstance": {
     "line number": [
      1144
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1143,
      1144,
      1149
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1142
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1143,
      1144,
      1145,
      1146
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_equality": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1169
     ]
    },
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      1168
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1156,
      1157,
      1158,
      1159
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1153,
      1154,
      1155
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_get_file_info": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      1224
     ]
    },
    "TypeError": {
     "line number": [
      1221
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      1211
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      1215
     ]
    },
    "pyarrow.fs.FileType.NotFound": {
     "line number": [
      1219
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1207
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1206
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1207,
      1209,
      1213,
      1217,
      1222,
      1225
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1221,
      1224
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_get_file_info_selector": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      1250
     ]
    },
    "len": {
     "line number": [
      1234,
      1244
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1232,
      1242,
      1249,
      1253
     ]
    },
    "pyarrow.fs.FileType.Directory": {
     "line number": [
      1239
     ]
    },
    "pyarrow.fs.FileType.File": {
     "line number": [
      1236
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1230
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1229
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1230,
      1233,
      1243,
      1251,
      1254
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1250
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_lifetime": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1187
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1186,
      1187,
      1196
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1185,
      1195
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1186,
      1187,
      1191,
      1196,
      1199,
      1201
     ]
    },
    "pyarrow.tests.test_fs.weakref": {
     "line number": [
      1188,
      1197
     ]
    },
    "wr": {
     "line number": [
      1190,
      1192,
      1197,
      1199,
      1200,
      1202
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_ops": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      1263
     ]
    },
    "ValueError": {
     "line number": [
      1269
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1259
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1258
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1259,
      1261,
      1262,
      1264,
      1266,
      1267,
      1270,
      1271,
      1272,
      1273,
      1274
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1263,
      1269
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_filesystem_pickling": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1178
     ]
    },
    "pyarrow.fs.FileSystem": {
     "line number": [
      1178
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1174
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1173
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1174,
      1176,
      1179
     ]
    },
    "pyarrow.tests.test_fs.pickle": {
     "line number": [
      1176,
      1177
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_append_stream": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": {
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1303
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1303
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1303,
      1305
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_input_file": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      1291
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1287
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1287
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1287,
      1289,
      1292
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1291
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_input_stream": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      1282
     ]
    },
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1278
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1278
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1278,
      1280,
      1283
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1282
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_py_open_output_stream": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": {
    "pyarrow.fs.PyFileSystem": {
     "line number": [
      1296
     ]
    },
    "pyarrow.tests.test_fs.DummyHandler": {
     "line number": [
      1296
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1296,
      1298
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_options": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1001,
      1003,
      1005,
      1007,
      1009
     ]
    },
    "isinstance": {
     "line number": [
      992,
      998
     ]
    },
    "pyarrow.fs.S3FileSystem": {
     "line number": [
      989,
      992,
      996,
      998,
      1002,
      1004,
      1006,
      1008,
      1010
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      989,
      992,
      993,
      994,
      994,
      996,
      998,
      999,
      999
     ]
    },
    "pyarrow.tests.test_fs.pickle": {
     "line number": [
      994,
      994,
      999,
      999
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1001,
      1003,
      1005,
      1007,
      1009,
      982
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_real_aws": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1319
     ]
    },
    "pyarrow.fs.FileSelector": {
     "line number": [
      1318
     ]
    },
    "pyarrow.fs.S3FileSystem": {
     "line number": [
      1314,
      1317
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1314,
      1315,
      1317,
      1318
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1309
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_s3_real_aws_region_selection": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      1338
     ]
    },
    "pyarrow.fs.FileSystem.from_uri": {
     "line number": [
      1326,
      1332,
      1339,
      1340
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      1326,
      1327,
      1328,
      1332,
      1334,
      1340,
      1342
     ]
    },
    "pyarrow.tests.test_fs.pytest": {
     "line number": [
      1338,
      1322
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_subtree_filesystem": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": {
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      536,
      542
     ]
    },
    "pyarrow.fs.SubTreeFileSystem": {
     "line number": [
      538,
      542
     ]
    },
    "pyarrow.tests.test_fs.localfs": {
     "line number": [
      536,
      538,
      540,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_type_name": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "pyarrow.fs.LocalFileSystem": {
     "line number": [
      580
     ]
    },
    "pyarrow.fs._MockFileSystem": {
     "line number": [
      582
     ]
    },
    "pyarrow.tests.test_fs.fs": {
     "line number": [
      580,
      581,
      582,
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_gandiva.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.gandiva": {
  "data": {
   "shadows": "pyarrow.gandiva"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.test_boolean": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      242
     ]
    },
    "filter.evaluate": {
     "line number": [
      243
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      224
     ]
    },
    "pyarrow.array": {
     "line number": [
      224,
      225,
      244
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      235,
      237,
      238
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      243
     ]
    },
    "pyarrow.float64": {
     "line number": [
      232,
      233
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      229
     ]
    },
    "pyarrow.gandiva.make_filter": {
     "line number": [
      242
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      220
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_filter": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      101
     ]
    },
    "filter.evaluate": {
     "line number": [
      105
     ]
    },
    "filter.llvm_ir.find": {
     "line number": [
      103
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      92
     ]
    },
    "pyarrow.array": {
     "line number": [
      92,
      106
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      98
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      105
     ]
    },
    "pyarrow.float64": {
     "line number": [
      97
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      95
     ]
    },
    "pyarrow.gandiva.make_filter": {
     "line number": [
      101
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      88
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      106
     ]
    },
    "range": {
     "line number": [
      92,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_get_registered_function_signatures": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      318
     ]
    },
    "list": {
     "line number": [
      317
     ]
    },
    "pyarrow.DataType": {
     "line number": [
      316
     ]
    },
    "pyarrow.gandiva.get_registered_function_signatures": {
     "line number": [
      314
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      311
     ]
    },
    "type": {
     "line number": [
      316,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      121,
      131,
      141
     ]
    },
    "filter.evaluate": {
     "line number": [
      122,
      132,
      142
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      114,
      127,
      137
     ]
    },
    "pyarrow.array": {
     "line number": [
      113,
      123,
      126,
      133,
      136,
      143
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      122,
      132,
      142
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      117
     ]
    },
    "pyarrow.gandiva.make_filter": {
     "line number": [
      121,
      131,
      141
     ]
    },
    "pyarrow.int32": {
     "line number": [
      127,
      129
     ]
    },
    "pyarrow.int64": {
     "line number": [
      139
     ]
    },
    "pyarrow.string": {
     "line number": [
      119
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      109
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      123,
      133,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr_todo": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      164,
      181,
      198,
      215
     ]
    },
    "filter.evaluate": {
     "line number": [
      165,
      182,
      199,
      216
     ]
    },
    "list": {
     "line number": [
      183,
      200,
      217
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      157,
      174,
      191,
      208
     ]
    },
    "pyarrow.array": {
     "line number": [
      156,
      166,
      173,
      190,
      207
     ]
    },
    "pyarrow.binary": {
     "line number": [
      161
     ]
    },
    "pyarrow.date32": {
     "line number": [
      212
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      165,
      182,
      199,
      216
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      159,
      176,
      193,
      210
     ]
    },
    "pyarrow.gandiva.make_filter": {
     "line number": [
      164,
      181,
      198,
      215
     ]
    },
    "pyarrow.tests.test_gandiva.datetime": {
     "line number": [
      169,
      170,
      171
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      146
     ]
    },
    "pyarrow.time64": {
     "line number": [
      195
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      178
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_literals": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      281,
      283
     ]
    },
    "pyarrow.binary": {
     "line number": [
      265
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      253
     ]
    },
    "pyarrow.float32": {
     "line number": [
      262
     ]
    },
    "pyarrow.float64": {
     "line number": [
      263
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      251
     ]
    },
    "pyarrow.int16": {
     "line number": [
      259
     ]
    },
    "pyarrow.int32": {
     "line number": [
      260
     ]
    },
    "pyarrow.int64": {
     "line number": [
      261,
      282
     ]
    },
    "pyarrow.int8": {
     "line number": [
      258
     ]
    },
    "pyarrow.string": {
     "line number": [
      264
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      281,
      283,
      247
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      255
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      256
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      257
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_regex": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      293
     ]
    },
    "pyarrow.array": {
     "line number": [
      292,
      307
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      298,
      300,
      307
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      304
     ]
    },
    "pyarrow.field": {
     "line number": [
      300
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      295
     ]
    },
    "pyarrow.gandiva.make_projector": {
     "line number": [
      303
     ]
    },
    "pyarrow.string": {
     "line number": [
      292,
      297
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_table": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      65
     ]
    },
    "pyarrow.array": {
     "line number": [
      65,
      65,
      84
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      78
     ]
    },
    "pyarrow.field": {
     "line number": [
      74
     ]
    },
    "pyarrow.float64": {
     "line number": [
      72,
      74
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      68
     ]
    },
    "pyarrow.gandiva.make_projector": {
     "line number": [
      77
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      61
     ]
    },
    "sum": {
     "line number": [
      72,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_tree_exp_builder": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      55
     ]
    },
    "pyarrow.array": {
     "line number": [
      52,
      53,
      54
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      41
     ]
    },
    "pyarrow.default_memory_pool": {
     "line number": [
      47
     ]
    },
    "pyarrow.field": {
     "line number": [
      30,
      31,
      35
     ]
    },
    "pyarrow.gandiva.TreeExprBuilder": {
     "line number": [
      28
     ]
    },
    "pyarrow.gandiva.make_projector": {
     "line number": [
      46
     ]
    },
    "pyarrow.int32": {
     "line number": [
      30,
      31,
      35,
      42,
      52,
      53,
      54
     ]
    },
    "pyarrow.schema": {
     "line number": [
      33
     ]
    },
    "pyarrow.tests.test_gandiva.pytest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_io.BufferedIOBase": {
  "data": {
   "shadows": "io.BufferedIOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.Codec": {
  "data": {
   "shadows": "pyarrow.Codec"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": {
    "FACTORY": {
     "line number": [
      749
     ]
    },
    "len": {
     "line number": [
      757,
      764,
      765,
      773
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      770,
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "pyarrow.tests.test_io.os": {
     "line number": [
      809,
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.assert_file_not_found": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "FileNotFoundError": {
     "line number": [
      59
     ]
    },
    "contextlib.contextmanager": {
     "line number": [
      57
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.check_compressed_concatenated": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": {
    "pyarrow.CompressedInputStream": {
     "line number": [
      1179
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      1178
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_compressed_input": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1154
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      1154
     ]
    },
    "pyarrow.CompressedInputStream": {
     "line number": [
      1140,
      1152
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      1139,
      1151
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_large_seeks": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "file_factory": {
     "line number": [
      48
     ]
    },
    "open": {
     "line number": [
      44
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      54
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      41
     ]
    },
    "pyarrow.tests.test_io.sys": {
     "line number": [
      40
     ]
    },
    "pyarrow.tests.test_io.tempfile": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_transcoding": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      1327
     ]
    },
    "next": {
     "line number": [
      1333
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1329
     ]
    },
    "pyarrow.transcoding_input_stream": {
     "line number": [
      1328
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.guid": {
  "data": {
   "shadows": "pyarrow.util.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.make_compressed_output": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1217
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      1208
     ]
    },
    "pyarrow.CompressedOutputStream": {
     "line number": [
      1209
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      730
     ]
    },
    "open": {
     "line number": [
      735
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      733
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      727
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      733
     ]
    },
    "str": {
     "line number": [
      733
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "pyarrow.tests.test_io._try_delete": {
     "line number": [
      739
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      545
     ]
    },
    "pyarrow.allocate_buffer": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer_resizable": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      553
     ]
    },
    "pyarrow.ResizableBuffer": {
     "line number": [
      553
     ]
    },
    "pyarrow.allocate_buffer": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_address": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      400,
      401
     ]
    },
    "numpy.arange": {
     "line number": [
      413
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      403,
      404,
      405,
      406,
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      334,
      341
     ]
    },
    "isinstance": {
     "line number": [
      337
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      337
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      306
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      306
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      305
     ]
    },
    "pyarrow.tests.test_io.pickle": {
     "line number": [
      315,
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_eq_bytes": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      453
     ]
    },
    "bytearray": {
     "line number": [
      450
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      448
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      431,
      432
     ]
    },
    "eq": {
     "line number": [
      439,
      440,
      441,
      444
     ]
    },
    "ne": {
     "line number": [
      442
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      438
     ]
    },
    "numpy.int16": {
     "line number": [
      438
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      434,
      435,
      436,
      437,
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.eq": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.ne": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_from_numpy": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      394
     ]
    },
    "numpy.arange": {
     "line number": [
      383
     ]
    },
    "numpy.int8": {
     "line number": [
      383
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      384,
      389,
      395
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_getitem": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      465,
      468
     ]
    },
    "bytearray": {
     "line number": [
      458
     ]
    },
    "len": {
     "line number": [
      461
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      459
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      465,
      468
     ]
    },
    "range": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hashing": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      510
     ]
    },
    "hash": {
     "line number": [
      511
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      511
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hex": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      365
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_invalid": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      347
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      349
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      324
     ]
    },
    "memoryview": {
     "line number": [
      328
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      324
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      609,
      614
     ]
    },
    "bytes": {
     "line number": [
      613
     ]
    },
    "isinstance": {
     "line number": [
      604
     ]
    },
    "memoryview": {
     "line number": [
      606
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      604
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      602
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      609,
      614
     ]
    },
    "str": {
     "line number": [
      611,
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "make_buffer": {
     "line number": [
      655,
      663
     ]
    },
    "pyarrow.tests.test_io.gc": {
     "line number": [
      656,
      664
     ]
    },
    "pyarrow.tests.test_io.sys": {
     "line number": [
      661,
      665
     ]
    },
    "range": {
     "line number": [
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      653
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_respects_immutability": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      521
     ]
    },
    "numpy.uint8": {
     "line number": [
      521
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_slicing": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      490,
      497,
      499
     ]
    },
    "len": {
     "line number": [
      488,
      488,
      496,
      502
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      474,
      477,
      481
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      490,
      497,
      499
     ]
    },
    "range": {
     "line number": [
      503,
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_to_numpy": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      371
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      374
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_weakref": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      353
     ]
    },
    "pyarrow.tests.test_io.weakref": {
     "line number": [
      354
     ]
    },
    "wr": {
     "line number": [
      354,
      355,
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      1068
     ]
    },
    "pyarrow.BufferedInputStream": {
     "line number": [
      1069
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_non_seekable": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": {
    "EnvironmentError": {
     "line number": [
      1101
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1093
     ]
    },
    "pyarrow.BufferedInputStream": {
     "line number": [
      1092,
      1093
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1101
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_seekable": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      1079
     ]
    },
    "pyarrow.BufferedInputStream": {
     "line number": [
      1079
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": {
    "numpy.int8": {
     "line number": [
      1106
     ]
    },
    "numpy.zeros": {
     "line number": [
      1106
     ]
    },
    "pyarrow.BufferedOutputStream": {
     "line number": [
      1110
     ]
    },
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      1109
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      1107
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream_detach": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": {
    "numpy.int8": {
     "line number": [
      1123
     ]
    },
    "numpy.zeros": {
     "line number": [
      1123
     ]
    },
    "pyarrow.BufferedOutputStream": {
     "line number": [
      1126
     ]
    },
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      1126
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      1124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "len": {
     "line number": [
      199,
      208
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      221
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      222
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "get_buffer": {
     "line number": [
      235
     ]
    },
    "pyarrow.tests.test_io.gc": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compress_decompress": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      595
     ]
    },
    "bytes": {
     "line number": [
      583,
      590
     ]
    },
    "isinstance": {
     "line number": [
      583,
      590
     ]
    },
    "numpy.random.randint": {
     "line number": [
      574
     ]
    },
    "numpy.uint8": {
     "line number": [
      575
     ]
    },
    "pyarrow.Codec.is_available": {
     "line number": [
      570
     ]
    },
    "pyarrow.compress": {
     "line number": [
      579,
      580
     ]
    },
    "pyarrow.decompress": {
     "line number": [
      585,
      587,
      596
     ]
    },
    "pyarrow.lib.ArrowNotImplementedError": {
     "line number": [
      561
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      577
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      571,
      595,
      559,
      560,
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_concatenated_gzip": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "pyarrow.tests.test_io.check_compressed_concatenated": {
     "line number": [
      1191
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1187,
      1189
     ]
    },
    "str": {
     "line number": [
      1186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_bz2": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1173
     ]
    },
    "pyarrow.tests.test_io.bz2": {
     "line number": [
      1169
     ]
    },
    "pyarrow.tests.test_io.check_compressed_input": {
     "line number": [
      1172
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1174
     ]
    },
    "str": {
     "line number": [
      1168,
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_gzip": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": {
    "pyarrow.tests.test_io.check_compressed_input": {
     "line number": [
      1163
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1161
     ]
    },
    "str": {
     "line number": [
      1160
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_invalid": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      1203
     ]
    },
    "TypeError": {
     "line number": [
      1199
     ]
    },
    "ValueError": {
     "line number": [
      1197
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1196
     ]
    },
    "pyarrow.CompressedInputStream": {
     "line number": [
      1198,
      1200,
      1202
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1197,
      1199,
      1203
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_bz2": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1235
     ]
    },
    "pyarrow.tests.test_io.bz2": {
     "line number": [
      1237
     ]
    },
    "pyarrow.tests.test_io.make_compressed_output": {
     "line number": [
      1234
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1236
     ]
    },
    "str": {
     "line number": [
      1232,
      1236
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_gzip": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": {
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1225
     ]
    },
    "pyarrow.tests.test_io.make_compressed_output": {
     "line number": [
      1224
     ]
    },
    "str": {
     "line number": [
      1223
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_recordbatch_stream": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": {
    "pyarrow.BufferOutputStream": {
     "line number": [
      1305
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1312
     ]
    },
    "pyarrow.Codec.is_available": {
     "line number": [
      1300
     ]
    },
    "pyarrow.CompressedInputStream": {
     "line number": [
      1312
     ]
    },
    "pyarrow.CompressedOutputStream": {
     "line number": [
      1306
     ]
    },
    "pyarrow.RecordBatchStreamReader": {
     "line number": [
      1313
     ]
    },
    "pyarrow.RecordBatchStreamWriter": {
     "line number": [
      1307
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1304
     ]
    },
    "pyarrow.array": {
     "line number": [
      1304
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1301,
      1295
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_roundtrip": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1288,
      1288
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      1283
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1289
     ]
    },
    "pyarrow.Codec.is_available": {
     "line number": [
      1279
     ]
    },
    "pyarrow.CompressedInputStream": {
     "line number": [
      1290
     ]
    },
    "pyarrow.CompressedOutputStream": {
     "line number": [
      1284
     ]
    },
    "pyarrow.lib.ArrowNotImplementedError": {
     "line number": [
      1275
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1280,
      1267,
      1273,
      1275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compression_detection": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1254
     ]
    },
    "pyarrow.Codec": {
     "line number": [
      1254
     ]
    },
    "pyarrow.Codec.detect": {
     "line number": [
      1251,
      1253
     ]
    },
    "pyarrow.Codec.is_available": {
     "line number": [
      1249
     ]
    },
    "pyarrow.lib.ArrowNotImplementedError": {
     "line number": [
      1250
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1245,
      1246
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1250,
      1242
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_foreign_buffer": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      526
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      532
     ]
    },
    "numpy.int32": {
     "line number": [
      526,
      532
     ]
    },
    "pyarrow.foreign_buffer": {
     "line number": [
      529
     ]
    },
    "pyarrow.tests.test_io.weakref": {
     "line number": [
      530
     ]
    },
    "wr": {
     "line number": [
      530,
      533,
      535
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      647
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      641
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_buffer": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      1400,
      1405,
      1407
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1401,
      1405,
      1407
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      1400
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1404
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": {
    "DuckReader": {
     "line number": [
      1425
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1425
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader": {
  "data": {
   "lineno": 1413
  },
  "type": "class"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.close": {
  "data": {
   "lineno": 1415
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.closed": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1418
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.read": {
  "data": {
   "lineno": 1422
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_errors": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1544,
      1551
     ]
    },
    "ValueError": {
     "line number": [
      1540
     ]
    },
    "bytearray": {
     "line number": [
      1543
     ]
    },
    "io.StringIO": {
     "line number": [
      1543
     ]
    },
    "memoryview": {
     "line number": [
      1539
     ]
    },
    "open": {
     "line number": [
      1550
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1541,
      1545,
      1548,
      1552
     ]
    },
    "pyarrow.tests.test_io.assert_file_not_found": {
     "line number": [
      1547
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1540,
      1544,
      1551
     ]
    },
    "str": {
     "line number": [
      1550
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1432
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1435,
      1437,
      1439
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1439
     ]
    },
    "str": {
     "line number": [
      1432,
      1437,
      1439
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_buffered": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1485
     ]
    },
    "ValueError": {
     "line number": [
      1483
     ]
    },
    "isinstance": {
     "line number": [
      1470,
      1473,
      1476,
      1480
     ]
    },
    "open": {
     "line number": [
      1466
     ]
    },
    "pyarrow.BufferedInputStream": {
     "line number": [
      1470,
      1473,
      1476
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      1480
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1469,
      1472,
      1475,
      1479,
      1484,
      1486
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1475
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1483,
      1485
     ]
    },
    "str": {
     "line number": [
      1466,
      1472,
      1475
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1447
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1450,
      1452,
      1454,
      1457,
      1459
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1445
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1454
     ]
    },
    "str": {
     "line number": [
      1447,
      1452,
      1454
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed_and_buffered": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1493
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1496,
      1498,
      1500
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1491
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1500
     ]
    },
    "str": {
     "line number": [
      1493,
      1498,
      1500
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_native_file": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      1530,
      1533
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1531,
      1534
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1529
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_python_file": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      1506,
      1512
     ]
    },
    "open": {
     "line number": [
      1520,
      1522
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      1508,
      1513,
      1516,
      1523
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1511
     ]
    },
    "str": {
     "line number": [
      1520,
      1522
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_close_remove": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": {
    "pyarrow.create_memory_map": {
     "line number": [
      890
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      889,
      893
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      889
     ]
    },
    "str": {
     "line number": [
      889
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_deref_remove": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": {
    "pyarrow.create_memory_map": {
     "line number": [
      898
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      897,
      899
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      897
     ]
    },
    "str": {
     "line number": [
      897
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_large_seeks": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": {
    "pyarrow.memory_map": {
     "line number": [
      884
     ]
    },
    "pyarrow.tests.test_io.check_large_seeks": {
     "line number": [
      884
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": {
    "pyarrow.memory_map": {
     "line number": [
      779
     ]
    },
    "pyarrow.tests.test_io._check_native_file_reader": {
     "line number": [
      779
     ]
    },
    "pyarrow.tests.test_io.sample_disk_data": {
     "line number": [
      779
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_resize": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      857
     ]
    },
    "numpy.uint8": {
     "line number": [
      857
     ]
    },
    "open": {
     "line number": [
      871
     ]
    },
    "pyarrow.create_memory_map": {
     "line number": [
      863
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      861
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      861
     ]
    },
    "str": {
     "line number": [
      861
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": {
    "pyarrow.memory_map": {
     "line number": [
      787
     ]
    },
    "pyarrow.tests.test_io.gc": {
     "line number": [
      793
     ]
    },
    "pyarrow.tests.test_io.sample_disk_data": {
     "line number": [
      784
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      848
     ]
    },
    "numpy.random.randint": {
     "line number": [
      816
     ]
    },
    "open": {
     "line number": [
      820
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      823,
      832,
      842,
      845
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      819
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      848
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      819
     ]
    },
    "str": {
     "line number": [
      819
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "len": {
     "line number": [
      636,
      636
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      629
     ]
    },
    "range": {
     "line number": [
      632
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_zero_length": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": {
    "open": {
     "line number": [
      877
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      879
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      876
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      876
     ]
    },
    "str": {
     "line number": [
      876
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": {
    "len": {
     "line number": [
      704,
      720
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      697,
      710
     ]
    },
    "pyarrow.MockOutputStream": {
     "line number": [
      696,
      709
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      707
     ]
    },
    "pyarrow.RecordBatchStreamWriter": {
     "line number": [
      712,
      713
     ]
    },
    "pyarrow.array": {
     "line number": [
      707
     ]
    },
    "range": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_TextIOWrapper": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": {
    "io.TextIOWrapper": {
     "line number": [
      1035,
      1041,
      1048,
      1052
     ]
    },
    "list": {
     "line number": [
      1043
     ]
    },
    "open": {
     "line number": [
      1032
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      1035,
      1041,
      1048,
      1052
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      1031,
      1047
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      1031,
      1047
     ]
    },
    "str": {
     "line number": [
      1031,
      1047
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": {
    "open": {
     "line number": [
      931,
      958
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      934,
      940,
      946,
      952
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      961,
      967,
      973
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      930
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      930
     ]
    },
    "str": {
     "line number": [
      930
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_open_error": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": {
    "pyarrow.OSFile": {
     "line number": [
      1059
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      1061
     ]
    },
    "pyarrow.tests.test_io.assert_file_not_found": {
     "line number": [
      1058,
      1060
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_permissions": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": {
    "pyarrow.OSFile": {
     "line number": [
      986
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      991
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      982,
      983,
      985,
      988,
      990,
      993
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      985,
      990
     ]
    },
    "str": {
     "line number": [
      985,
      990
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_raises_ValueError_after_close": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1022
     ]
    },
    "getattr": {
     "line number": [
      1023
     ]
    },
    "open": {
     "line number": [
      998
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      1001
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      1005
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      997
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1022
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      997
     ]
    },
    "str": {
     "line number": [
      997
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_write_reject_unicode": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      925
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      924
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      925
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      677
     ]
    },
    "bytearray": {
     "line number": [
      675
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      672
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      669
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      676
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      677
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_large_seeks": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "pyarrow.OSFile": {
     "line number": [
      804
     ]
    },
    "pyarrow.tests.test_io.check_large_seeks": {
     "line number": [
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": {
    "pyarrow.OSFile": {
     "line number": [
      800
     ]
    },
    "pyarrow.tests.test_io._check_native_file_reader": {
     "line number": [
      800
     ]
    },
    "pyarrow.tests.test_io.sample_disk_data": {
     "line number": [
      800
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      918
     ]
    },
    "numpy.random.randint": {
     "line number": [
      904
     ]
    },
    "open": {
     "line number": [
      908
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      912,
      915
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      907
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      918
     ]
    },
    "pyarrow.util.guid": {
     "line number": [
      907
     ]
    },
    "str": {
     "line number": [
      907
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_buffer": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      1557,
      1562
     ]
    },
    "len": {
     "line number": [
      1557,
      1562
     ]
    },
    "memoryview": {
     "line number": [
      1563
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1558,
      1563
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      1558
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": {
    "check_data": {
     "line number": [
      1690,
      1691
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor.check_data": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1687
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1683
     ]
    },
    "pyarrow.tests.test_io.gc": {
     "line number": [
      1686
     ]
    },
    "str": {
     "line number": [
      1687
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing": {
  "data": {
   "lineno": 1568,
   "symbols_in_volume": {
    "DuckWriter": {
     "line number": [
      1584
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1585
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter": {
  "data": {
   "lineno": 1570
  },
  "type": "class"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.__init__": {
  "data": {
   "lineno": 1571,
   "symbols_in_volume": {
    "pyarrow.BufferOutputStream": {
     "line number": [
      1572
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.close": {
  "data": {
   "lineno": 1574
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.closed": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": {
    "property": {
     "line number": [
      1577
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.write": {
  "data": {
   "lineno": 1581
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_errors": {
  "data": {
   "lineno": 1712,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1718,
      1725
     ]
    },
    "ValueError": {
     "line number": [
      1714
     ]
    },
    "bytearray": {
     "line number": [
      1713,
      1717
     ]
    },
    "io.StringIO": {
     "line number": [
      1717
     ]
    },
    "memoryview": {
     "line number": [
      1713
     ]
    },
    "open": {
     "line number": [
      1722,
      1724
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1715,
      1719,
      1726
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1714,
      1718,
      1725
     ]
    },
    "str": {
     "line number": [
      1721
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": {
    "check_data": {
     "line number": [
      1600,
      1601,
      1602
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1602
     ]
    },
    "str": {
     "line number": [
      1601,
      1602
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path.check_data": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1597
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1595
     ]
    },
    "str": {
     "line number": [
      1597
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered": {
  "data": {
   "lineno": 1628,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1644
     ]
    },
    "check_data": {
     "line number": [
      1645,
      1647,
      1648,
      1649,
      1651
     ]
    },
    "isinstance": {
     "line number": [
      1641
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      1641
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1640
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1651
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1644
     ]
    },
    "str": {
     "line number": [
      1649,
      1651
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered.check_data": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      1635
     ]
    },
    "open": {
     "line number": [
      1637
     ]
    },
    "pyarrow.BufferedOutputStream": {
     "line number": [
      1635
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1633
     ]
    },
    "str": {
     "line number": [
      1637
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1624
     ]
    },
    "check_data": {
     "line number": [
      1615,
      1616,
      1618,
      1621,
      1622,
      1625
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1615,
      1616,
      1617,
      1620
     ]
    },
    "pyarrow.tests.test_io.pathlib": {
     "line number": [
      1618
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1624
     ]
    },
    "str": {
     "line number": [
      1616,
      1618
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed.check_data": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1612
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1610
     ]
    },
    "str": {
     "line number": [
      1612
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": {
    "check_data": {
     "line number": [
      1665,
      1668,
      1671
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1666,
      1669,
      1672
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered.check_data": {
  "data": {
   "lineno": 1659,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1662
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1660
     ]
    },
    "str": {
     "line number": [
      1662
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file": {
  "data": {
   "lineno": 1694,
   "symbols_in_volume": {
    "check_data": {
     "line number": [
      1708,
      1709
     ]
    },
    "pyarrow.tests.test_io.gzip": {
     "line number": [
      1709
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file.check_data": {
  "data": {
   "lineno": 1697,
   "symbols_in_volume": {
    "open": {
     "line number": [
      1702,
      1705
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      1703
     ]
    },
    "str": {
     "line number": [
      1701
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_closing": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      287
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      288,
      293
     ]
    },
    "pyarrow.tests.test_io.weakref": {
     "line number": [
      289
     ]
    },
    "wr": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_correct_abc": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "io.BufferedIOBase": {
     "line number": [
      168
     ]
    },
    "io.BytesIO": {
     "line number": [
      167
     ]
    },
    "io.IOBase": {
     "line number": [
      169
     ]
    },
    "isinstance": {
     "line number": [
      168,
      169
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_implicit_mode": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      257
     ]
    },
    "open": {
     "line number": [
      243,
      250
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      244,
      251,
      258
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      242
     ]
    },
    "str": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_iterable": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      178,
      179
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      181
     ]
    },
    "zip": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "pyarrow.tests.test_io.check_large_seeks": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks.factory": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "open": {
     "line number": [
      188
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      124
     ]
    },
    "io.BytesIO": {
     "line number": [
      98
     ]
    },
    "io.StringIO": {
     "line number": [
      125
     ]
    },
    "len": {
     "line number": [
      101,
      116,
      118
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      99,
      125
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read_at": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      131
     ]
    },
    "len": {
     "line number": [
      137,
      142
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readall": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "io.BytesIO": {
     "line number": [
      148
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readinto": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      156
     ]
    },
    "io.BytesIO": {
     "line number": [
      157
     ]
    },
    "len": {
     "line number": [
      163
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      91
     ]
    },
    "io.BytesIO": {
     "line number": [
      68
     ]
    },
    "io.StringIO": {
     "line number": [
      92
     ]
    },
    "len": {
     "line number": [
      78
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      70,
      92
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_writelines": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "open": {
     "line number": [
      269,
      277
     ]
    },
    "pyarrow.PythonFile": {
     "line number": [
      271,
      279
     ]
    },
    "pyarrow.tests.test_io.os": {
     "line number": [
      268
     ]
    },
    "str": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_decoding_error": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": {
    "UnicodeError": {
     "line number": [
      1391
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1388
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1391,
      1381
     ]
    },
    "pyarrow.transcoding_input_stream": {
     "line number": [
      1387
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_encoding_error": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": {
    "UnicodeEncodeError": {
     "line number": [
      1377
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1374
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1377,
      1367
     ]
    },
    "pyarrow.transcoding_input_stream": {
     "line number": [
      1373
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_input_stream": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": {
    "pyarrow.tests.test_io.check_transcoding": {
     "line number": [
      1349,
      1352
     ]
    },
    "pyarrow.tests.test_io.itertools": {
     "line number": [
      1354
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1341
     ]
    },
    "pyarrow.tests.test_io.unicode_transcoding_example": {
     "line number": [
      1349,
      1352
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_transcoding_no_ops": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      1362
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1357
     ]
    },
    "pyarrow.transcoding_input_stream": {
     "line number": [
      1363
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_uninitialized_buffer": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      622
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      623
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_unknown_compression_raises": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1261
     ]
    },
    "ValueError": {
     "line number": [
      1259,
      1263
     ]
    },
    "pyarrow.Codec": {
     "line number": [
      1262,
      1264
     ]
    },
    "pyarrow.Codec.is_available": {
     "line number": [
      1260
     ]
    },
    "pyarrow.tests.test_io.pytest": {
     "line number": [
      1259,
      1261,
      1263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.unicode_transcoding_example": {
  "data": {
   "lineno": 1320
  },
  "type": "constant"
 },
 "pyarrow.tests.test_io.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.check_names": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "len": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.read_bytes": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_block_sizes": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      122
     ]
    },
    "pyarrow.json.ParseOptions": {
     "line number": [
      116
     ]
    },
    "pyarrow.json.ReadOptions": {
     "line number": [
      115
     ]
    },
    "pyarrow.tests.test_json.pytest": {
     "line number": [
      122
     ]
    },
    "range": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_explicit_schema_with_unexpected_behaviour": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      228
     ]
    },
    "pyarrow.binary": {
     "line number": [
      200,
      206,
      219
     ]
    },
    "pyarrow.int64": {
     "line number": [
      207
     ]
    },
    "pyarrow.json.ParseOptions": {
     "line number": [
      203,
      215,
      226
     ]
    },
    "pyarrow.schema": {
     "line number": [
      199,
      205,
      218
     ]
    },
    "pyarrow.tests.test_json.pytest": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_file_object": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      110
     ]
    },
    "pyarrow.tests.test_json.io": {
     "line number": [
      105,
      109
     ]
    },
    "pyarrow.tests.test_json.pytest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_no_newline_at_end": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_ints": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "pyarrow.int64": {
     "line number": [
      148,
      149,
      150
     ]
    },
    "pyarrow.schema": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_nulls": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "pyarrow.bool_": {
     "line number": [
      185
     ]
    },
    "pyarrow.float64": {
     "line number": [
      181
     ]
    },
    "pyarrow.int64": {
     "line number": [
      182
     ]
    },
    "pyarrow.null": {
     "line number": [
      184
     ]
    },
    "pyarrow.schema": {
     "line number": [
      181
     ]
    },
    "pyarrow.string": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_varied": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "pyarrow.bool_": {
     "line number": [
      166
     ]
    },
    "pyarrow.float64": {
     "line number": [
      163
     ]
    },
    "pyarrow.int64": {
     "line number": [
      164
     ]
    },
    "pyarrow.schema": {
     "line number": [
      163
     ]
    },
    "pyarrow.string": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_small_random_json": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "pyarrow.tests.test_json.make_random_json": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_stress_block_sizes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "pyarrow.json.ParseOptions": {
     "line number": [
      243
     ]
    },
    "pyarrow.json.ReadOptions": {
     "line number": [
      242
     ]
    },
    "pyarrow.tests.test_json.make_random_json": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.ParseOptions": {
  "data": {
   "shadows": "pyarrow.json.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.ReadOptions": {
  "data": {
   "shadows": "pyarrow.json.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "pyarrow.tests.test_json.BaseTestJSONRead": {
     "line number": [
      268
     ]
    },
    "pyarrow.tests.test_json.unittest": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead.read_json": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "pyarrow.json.ReadOptions": {
     "line number": [
      271
     ]
    },
    "pyarrow.json.read_json": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "pyarrow.tests.test_json.BaseTestJSONRead": {
     "line number": [
      258
     ]
    },
    "pyarrow.tests.test_json.unittest": {
     "line number": [
      258
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead.read_json": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": {
    "pyarrow.json.ReadOptions": {
     "line number": [
      261
     ]
    },
    "pyarrow.json.read_json": {
     "line number": [
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.generate_col_names": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "pyarrow.tests.test_json.string": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.make_random_json": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      46
     ]
    },
    "int": {
     "line number": [
      46
     ]
    },
    "list": {
     "line number": [
      43
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      42
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      50
     ]
    },
    "pyarrow.array": {
     "line number": [
      49
     ]
    },
    "pyarrow.int64": {
     "line number": [
      49
     ]
    },
    "pyarrow.tests.test_json.generate_col_names": {
     "line number": [
      43
     ]
    },
    "pyarrow.tests.test_json.itertools": {
     "line number": [
      43
     ]
    },
    "pyarrow.tests.test_json.json": {
     "line number": [
      47
     ]
    },
    "zip": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.read_json": {
  "data": {
   "shadows": "pyarrow.json.read_json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.test_parse_options": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      89
     ]
    },
    "cls": {
     "line number": [
      72,
      73
     ]
    },
    "pyarrow.field": {
     "line number": [
      80
     ]
    },
    "pyarrow.int32": {
     "line number": [
      80
     ]
    },
    "pyarrow.json.ParseOptions": {
     "line number": [
      72
     ]
    },
    "pyarrow.schema": {
     "line number": [
      80
     ]
    },
    "pyarrow.tests.test_json.pytest": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.test_read_options": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "cls": {
     "line number": [
      56,
      66
     ]
    },
    "pyarrow.json.ReadOptions": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_jvm.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.IllegalArgumentException": {
  "data": {
   "shadows": "java.lang.IllegalArgumentException"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm._jvm_field": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      88,
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._jvm_schema": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "pyarrow.tests.test_jvm._jvm_field": {
     "line number": [
      94
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      95,
      96,
      99
     ]
    },
    "schema_cls": {
     "line number": [
      102,
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._string_to_varchar_holder": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": {
    "len": {
     "line number": [
      409,
      410,
      412
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      401,
      406,
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.jpype": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyarrow.tests.test_jvm.jpype.imports": {
  "data": {
   "shadows": "jpype.imports"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa_jvm": {
  "data": {
   "shadows": "pyarrow.jvm"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.root_allocator": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      35
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      51,
      51,
      53
     ]
    },
    "pyarrow.tests.test_jvm.os": {
     "line number": [
      34,
      36,
      36,
      37,
      44,
      47
     ]
    },
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      30
     ]
    },
    "pyarrow.tests.test_jvm.sys": {
     "line number": [
      53
     ]
    },
    "xml.etree.ElementTree.parse": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.test_jvm_array": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      228
     ]
    },
    "len": {
     "line number": [
      227,
      233
     ]
    },
    "list": {
     "line number": [
      204,
      205,
      206,
      207,
      208,
      209,
      210,
      211,
      212,
      213,
      219,
      220
     ]
    },
    "pyarrow.array": {
     "line number": [
      235
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      203
     ]
    },
    "pyarrow.date32": {
     "line number": [
      219
     ]
    },
    "pyarrow.date64": {
     "line number": [
      220
     ]
    },
    "pyarrow.float32": {
     "line number": [
      208
     ]
    },
    "pyarrow.float64": {
     "line number": [
      209
     ]
    },
    "pyarrow.int32": {
     "line number": [
      206
     ]
    },
    "pyarrow.int64": {
     "line number": [
      207
     ]
    },
    "pyarrow.jvm.array": {
     "line number": [
      236
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      226,
      231
     ]
    },
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      202
     ]
    },
    "pyarrow.tests.test_jvm.root_allocator": {
     "line number": [
      226
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      210,
      211,
      212,
      213
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      205
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      204
     ]
    },
    "range": {
     "line number": [
      204,
      205,
      206,
      207,
      208,
      209,
      210,
      211,
      212,
      213,
      219,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_array_empty": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "len": {
     "line number": [
      246
     ]
    },
    "pyarrow.int32": {
     "line number": [
      247
     ]
    },
    "pyarrow.jvm.array": {
     "line number": [
      245
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      243
     ]
    },
    "pyarrow.tests.test_jvm.root_allocator": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "pyarrow.jvm.jvm_buffer": {
     "line number": [
      65
     ]
    },
    "pyarrow.tests.test_jvm.root_allocator": {
     "line number": [
      58
     ]
    },
    "range": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer_released": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "java.lang.IllegalArgumentException": {
     "line number": [
      83
     ]
    },
    "pyarrow.jvm.jvm_buffer": {
     "line number": [
      84
     ]
    },
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      83
     ]
    },
    "pyarrow.tests.test_jvm.root_allocator": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_record_batch": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      366
     ]
    },
    "jvm_vsr": {
     "line number": [
      388,
      394
     ]
    },
    "len": {
     "line number": [
      365,
      370,
      388
     ]
    },
    "list": {
     "line number": [
      258,
      264,
      270,
      276,
      282,
      288,
      294,
      300,
      307,
      313,
      319,
      325,
      331,
      337,
      348,
      354
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      390
     ]
    },
    "pyarrow.array": {
     "line number": [
      391
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      255
     ]
    },
    "pyarrow.date32": {
     "line number": [
      347
     ]
    },
    "pyarrow.date64": {
     "line number": [
      353
     ]
    },
    "pyarrow.float32": {
     "line number": [
      306
     ]
    },
    "pyarrow.float64": {
     "line number": [
      312
     ]
    },
    "pyarrow.int16": {
     "line number": [
      287
     ]
    },
    "pyarrow.int32": {
     "line number": [
      293
     ]
    },
    "pyarrow.int64": {
     "line number": [
      299
     ]
    },
    "pyarrow.int8": {
     "line number": [
      281
     ]
    },
    "pyarrow.jvm.record_batch": {
     "line number": [
      394
     ]
    },
    "pyarrow.tests.test_jvm._jvm_field": {
     "line number": [
      380
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      364,
      368,
      383,
      385,
      387
     ]
    },
    "pyarrow.tests.test_jvm.json": {
     "line number": [
      376,
      380
     ]
    },
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      253
     ]
    },
    "pyarrow.tests.test_jvm.root_allocator": {
     "line number": [
      364
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      318,
      324,
      330,
      336
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      263
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      269
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      275
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      257
     ]
    },
    "range": {
     "line number": [
      258,
      264,
      270,
      276,
      282,
      288,
      294,
      300,
      307,
      313,
      319,
      325,
      331,
      337,
      348,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_string_array": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      425
     ]
    },
    "pyarrow.array": {
     "line number": [
      430
     ]
    },
    "pyarrow.jvm.array": {
     "line number": [
      431
     ]
    },
    "pyarrow.string": {
     "line number": [
      430
     ]
    },
    "pyarrow.tests.test_jvm._string_to_varchar_holder": {
     "line number": [
      426
     ]
    },
    "pyarrow.tests.test_jvm.jpype": {
     "line number": [
      422
     ]
    },
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      417
     ]
    },
    "pyarrow.tests.test_jvm.root_allocator": {
     "line number": [
      422,
      426
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_types": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      151,
      152
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      119
     ]
    },
    "pyarrow.date32": {
     "line number": [
      147
     ]
    },
    "pyarrow.date64": {
     "line number": [
      148
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      149
     ]
    },
    "pyarrow.field": {
     "line number": [
      178
     ]
    },
    "pyarrow.float16": {
     "line number": [
      128
     ]
    },
    "pyarrow.float32": {
     "line number": [
      129
     ]
    },
    "pyarrow.float64": {
     "line number": [
      130
     ]
    },
    "pyarrow.int16": {
     "line number": [
      121
     ]
    },
    "pyarrow.int32": {
     "line number": [
      122
     ]
    },
    "pyarrow.int64": {
     "line number": [
      123
     ]
    },
    "pyarrow.int8": {
     "line number": [
      120
     ]
    },
    "pyarrow.jvm.field": {
     "line number": [
      177
     ]
    },
    "pyarrow.jvm.schema": {
     "line number": [
      182,
      187,
      193
     ]
    },
    "pyarrow.null": {
     "line number": [
      167,
      118
     ]
    },
    "pyarrow.schema": {
     "line number": [
      183,
      188,
      196
     ]
    },
    "pyarrow.string": {
     "line number": [
      150
     ]
    },
    "pyarrow.tests.test_jvm._jvm_field": {
     "line number": [
      176
     ]
    },
    "pyarrow.tests.test_jvm._jvm_schema": {
     "line number": [
      181,
      186,
      192
     ]
    },
    "pyarrow.tests.test_jvm.json": {
     "line number": [
      172,
      176,
      181,
      186,
      192
     ]
    },
    "pyarrow.tests.test_jvm.pytest": {
     "line number": [
      117,
      165
     ]
    },
    "pyarrow.time32": {
     "line number": [
      131,
      132
     ]
    },
    "pyarrow.time64": {
     "line number": [
      133,
      134
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      135,
      137,
      139,
      141,
      143,
      145
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      125
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      126
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      127
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_memory.allocate_bytes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "len": {
     "line number": [
      34
     ]
    },
    "pyarrow.array": {
     "line number": [
      29
     ]
    },
    "pyarrow.binary": {
     "line number": [
      29
     ]
    },
    "pyarrow.tests.test_memory.contextlib": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.check_allocated_bytes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "pyarrow.tests.test_memory.allocate_bytes": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_memory.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_memory.test_default_allocated_bytes": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "pyarrow.default_memory_pool": {
     "line number": [
      56
     ]
    },
    "pyarrow.tests.test_memory.allocate_bytes": {
     "line number": [
      57
     ]
    },
    "pyarrow.tests.test_memory.check_allocated_bytes": {
     "line number": [
      58
     ]
    },
    "pyarrow.total_allocated_bytes": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_logging_memory_pool": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "pyarrow.default_memory_pool": {
     "line number": [
      72
     ]
    },
    "pyarrow.logging_memory_pool": {
     "line number": [
      72
     ]
    },
    "pyarrow.tests.test_memory.check_allocated_bytes": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_proxy_memory_pool": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "pyarrow.default_memory_pool": {
     "line number": [
      63
     ]
    },
    "pyarrow.proxy_memory_pool": {
     "line number": [
      63
     ]
    },
    "pyarrow.tests.test_memory.check_allocated_bytes": {
     "line number": [
      64
     ]
    },
    "pyarrow.tests.test_memory.weakref": {
     "line number": [
      65
     ]
    },
    "wr": {
     "line number": [
      66,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_set_memory_pool": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "pyarrow.default_memory_pool": {
     "line number": [
      81
     ]
    },
    "pyarrow.proxy_memory_pool": {
     "line number": [
      82
     ]
    },
    "pyarrow.set_memory_pool": {
     "line number": [
      83,
      90
     ]
    },
    "pyarrow.tests.test_memory.allocate_bytes": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.test_build_info": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      46,
      47,
      48,
      49
     ]
    },
    "pyarrow.BuildInfo": {
     "line number": [
      46
     ]
    },
    "pyarrow.VersionInfo": {
     "line number": [
      47
     ]
    },
    "pyarrow.__version__": {
     "line number": [
      49
     ]
    },
    "pyarrow.cpp_build_info": {
     "line number": [
      46
     ]
    },
    "pyarrow.cpp_build_info.version_info": {
     "line number": [
      50
     ]
    },
    "pyarrow.cpp_version": {
     "line number": [
      48
     ]
    },
    "pyarrow.cpp_version_info": {
     "line number": [
      47,
      50
     ]
    },
    "str": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_cpu_count": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyarrow.cpu_count": {
     "line number": [
      36,
      40
     ]
    },
    "pyarrow.set_cpu_count": {
     "line number": [
      39,
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_extension_type_constructor_errors": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      145
     ]
    },
    "klass": {
     "line number": [
      146
     ]
    },
    "pyarrow.Array": {
     "line number": [
      62
     ]
    },
    "pyarrow.BinaryArray": {
     "line number": [
      94
     ]
    },
    "pyarrow.BinaryScalar": {
     "line number": [
      127
     ]
    },
    "pyarrow.BooleanArray": {
     "line number": [
      80
     ]
    },
    "pyarrow.BooleanScalar": {
     "line number": [
      107
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      61
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      58
     ]
    },
    "pyarrow.Date32Array": {
     "line number": [
      98
     ]
    },
    "pyarrow.Date32Scalar": {
     "line number": [
      120
     ]
    },
    "pyarrow.Date64Array": {
     "line number": [
      99
     ]
    },
    "pyarrow.Date64Scalar": {
     "line number": [
      121
     ]
    },
    "pyarrow.Decimal128Array": {
     "line number": [
      104
     ]
    },
    "pyarrow.Decimal128Scalar": {
     "line number": [
      119
     ]
    },
    "pyarrow.DictionaryArray": {
     "line number": [
      97
     ]
    },
    "pyarrow.DictionaryScalar": {
     "line number": [
      135
     ]
    },
    "pyarrow.DoubleScalar": {
     "line number": [
      118
     ]
    },
    "pyarrow.DurationArray": {
     "line number": [
      103
     ]
    },
    "pyarrow.DurationScalar": {
     "line number": [
      125
     ]
    },
    "pyarrow.Field": {
     "line number": [
      56
     ]
    },
    "pyarrow.FixedSizeBinaryArray": {
     "line number": [
      96
     ]
    },
    "pyarrow.FixedSizeBinaryScalar": {
     "line number": [
      128
     ]
    },
    "pyarrow.FixedSizeListArray": {
     "line number": [
      92
     ]
    },
    "pyarrow.FixedSizeListScalar": {
     "line number": [
      132
     ]
    },
    "pyarrow.FloatScalar": {
     "line number": [
      117
     ]
    },
    "pyarrow.FloatingPointArray": {
     "line number": [
      79
     ]
    },
    "pyarrow.HalfFloatScalar": {
     "line number": [
      116
     ]
    },
    "pyarrow.Int16Array": {
     "line number": [
      82
     ]
    },
    "pyarrow.Int16Scalar": {
     "line number": [
      109
     ]
    },
    "pyarrow.Int32Array": {
     "line number": [
      83
     ]
    },
    "pyarrow.Int32Scalar": {
     "line number": [
      110
     ]
    },
    "pyarrow.Int64Array": {
     "line number": [
      84
     ]
    },
    "pyarrow.Int64Scalar": {
     "line number": [
      111
     ]
    },
    "pyarrow.Int8Array": {
     "line number": [
      81
     ]
    },
    "pyarrow.Int8Scalar": {
     "line number": [
      108
     ]
    },
    "pyarrow.IntegerArray": {
     "line number": [
      78
     ]
    },
    "pyarrow.LargeListArray": {
     "line number": [
      90
     ]
    },
    "pyarrow.LargeListScalar": {
     "line number": [
      130
     ]
    },
    "pyarrow.ListArray": {
     "line number": [
      89
     ]
    },
    "pyarrow.ListScalar": {
     "line number": [
      129
     ]
    },
    "pyarrow.LoggingMemoryPool": {
     "line number": [
      139
     ]
    },
    "pyarrow.MapArray": {
     "line number": [
      91
     ]
    },
    "pyarrow.MapScalar": {
     "line number": [
      131
     ]
    },
    "pyarrow.MemoryPool": {
     "line number": [
      138
     ]
    },
    "pyarrow.NullArray": {
     "line number": [
      76
     ]
    },
    "pyarrow.NumericArray": {
     "line number": [
      77
     ]
    },
    "pyarrow.ProxyMemoryPool": {
     "line number": [
      140
     ]
    },
    "pyarrow.RecordBatch": {
     "line number": [
      59
     ]
    },
    "pyarrow.Scalar": {
     "line number": [
      106
     ]
    },
    "pyarrow.Schema": {
     "line number": [
      57
     ]
    },
    "pyarrow.StringArray": {
     "line number": [
      95
     ]
    },
    "pyarrow.StringScalar": {
     "line number": [
      126
     ]
    },
    "pyarrow.StructArray": {
     "line number": [
      105
     ]
    },
    "pyarrow.StructScalar": {
     "line number": [
      134
     ]
    },
    "pyarrow.Table": {
     "line number": [
      60
     ]
    },
    "pyarrow.Tensor": {
     "line number": [
      63
     ]
    },
    "pyarrow.Time32Array": {
     "line number": [
      101
     ]
    },
    "pyarrow.Time32Scalar": {
     "line number": [
      122
     ]
    },
    "pyarrow.Time64Array": {
     "line number": [
      102
     ]
    },
    "pyarrow.Time64Scalar": {
     "line number": [
      123
     ]
    },
    "pyarrow.TimestampArray": {
     "line number": [
      100
     ]
    },
    "pyarrow.TimestampScalar": {
     "line number": [
      124
     ]
    },
    "pyarrow.UInt16Array": {
     "line number": [
      86
     ]
    },
    "pyarrow.UInt16Scalar": {
     "line number": [
      113
     ]
    },
    "pyarrow.UInt32Array": {
     "line number": [
      87
     ]
    },
    "pyarrow.UInt32Scalar": {
     "line number": [
      114
     ]
    },
    "pyarrow.UInt64Array": {
     "line number": [
      88
     ]
    },
    "pyarrow.UInt64Scalar": {
     "line number": [
      115
     ]
    },
    "pyarrow.UInt8Array": {
     "line number": [
      85
     ]
    },
    "pyarrow.UInt8Scalar": {
     "line number": [
      112
     ]
    },
    "pyarrow.UnionArray": {
     "line number": [
      93
     ]
    },
    "pyarrow.UnionScalar": {
     "line number": [
      133
     ]
    },
    "pyarrow.ipc.Message": {
     "line number": [
      136
     ]
    },
    "pyarrow.ipc.MessageReader": {
     "line number": [
      137
     ]
    },
    "pyarrow.lib.DataType": {
     "line number": [
      64
     ]
    },
    "pyarrow.lib.Decimal128Type": {
     "line number": [
      73
     ]
    },
    "pyarrow.lib.DictionaryType": {
     "line number": [
      74
     ]
    },
    "pyarrow.lib.FixedSizeBinaryType": {
     "line number": [
      75
     ]
    },
    "pyarrow.lib.FixedSizeListType": {
     "line number": [
      67
     ]
    },
    "pyarrow.lib.LargeListType": {
     "line number": [
      66
     ]
    },
    "pyarrow.lib.ListType": {
     "line number": [
      65
     ]
    },
    "pyarrow.lib.StructType": {
     "line number": [
      69
     ]
    },
    "pyarrow.lib.Time32Type": {
     "line number": [
      70
     ]
    },
    "pyarrow.lib.Time64Type": {
     "line number": [
      71
     ]
    },
    "pyarrow.lib.TimestampType": {
     "line number": [
      72
     ]
    },
    "pyarrow.lib.UnionType": {
     "line number": [
      68
     ]
    },
    "pyarrow.tests.test_misc.pytest": {
     "line number": [
      145,
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_include": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "pyarrow.get_include": {
     "line number": [
      25
     ]
    },
    "pyarrow.tests.test_misc.os": {
     "line number": [
      26,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_library_dirs_win32": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "any": {
     "line number": [
      31
     ]
    },
    "pyarrow.get_library_dirs": {
     "line number": [
      32
     ]
    },
    "pyarrow.tests.test_misc.os": {
     "line number": [
      31,
      31
     ]
    },
    "pyarrow.tests.test_misc.pytest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      32
     ]
    },
    "pyarrow.tests.test_orc.pytest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_orc.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.check_example_file": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      85
     ]
    },
    "len": {
     "line number": [
      108,
      109
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      89,
      105
     ]
    },
    "pyarrow.Table": {
     "line number": [
      85
     ]
    },
    "pyarrow.orc.ORCFile": {
     "line number": [
      82
     ]
    },
    "pyarrow.tests.test_orc.check_example_values": {
     "line number": [
      100,
      105
     ]
    },
    "pyarrow.tests.test_orc.fix_example_values": {
     "line number": [
      98
     ]
    },
    "range": {
     "line number": [
      103
     ]
    },
    "set": {
     "line number": [
      91,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.check_example_values": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "pandas.testing.assert_frame_equal": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.datadir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "pyarrow.tests.test_orc.pytest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.fix_example_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      59
     ]
    },
    "issubclass": {
     "line number": [
      50,
      53
     ]
    },
    "len": {
     "line number": [
      57
     ]
    },
    "pandas.Series": {
     "line number": [
      65
     ]
    },
    "pandas.isnull": {
     "line number": [
      60
     ]
    },
    "pandas.to_datetime": {
     "line number": [
      52
     ]
    },
    "pyarrow.tests.test_orc.datetime": {
     "line number": [
      50,
      53
     ]
    },
    "pyarrow.tests.test_orc.decimal": {
     "line number": [
      56,
      64
     ]
    },
    "round": {
     "line number": [
      64
     ]
    },
    "zip": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.orc": {
  "data": {
   "shadows": "pyarrow.orc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pytestmark": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_orc.test_example_using_json": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "pandas.read_json": {
     "line number": [
      127
     ]
    },
    "pyarrow.tests.test_orc.check_example_file": {
     "line number": [
      128
     ]
    },
    "pyarrow.tests.test_orc.datadir": {
     "line number": [
      126
     ]
    },
    "pyarrow.tests.test_orc.pytest": {
     "line number": [
      113,
      114
     ]
    },
    "str": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.test_orcfile_empty": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      145
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      138
     ]
    },
    "pyarrow.float32": {
     "line number": [
      143
     ]
    },
    "pyarrow.float64": {
     "line number": [
      144
     ]
    },
    "pyarrow.int16": {
     "line number": [
      140
     ]
    },
    "pyarrow.int32": {
     "line number": [
      141,
      149,
      154,
      160
     ]
    },
    "pyarrow.int64": {
     "line number": [
      142
     ]
    },
    "pyarrow.int8": {
     "line number": [
      139
     ]
    },
    "pyarrow.list_": {
     "line number": [
      148,
      153,
      157
     ]
    },
    "pyarrow.orc.ORCFile": {
     "line number": [
      134
     ]
    },
    "pyarrow.schema": {
     "line number": [
      137
     ]
    },
    "pyarrow.string": {
     "line number": [
      146,
      150,
      155,
      158,
      161
     ]
    },
    "pyarrow.struct": {
     "line number": [
      147,
      148,
      153,
      157,
      159
     ]
    },
    "pyarrow.tests.test_orc.datadir": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.os": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.EXTERNAL_STORE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      904
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.setup_method": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "pyarrow.plasma.connect": {
     "line number": [
      916
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      910
     ]
    },
    "pyarrow.tests.test_plasma.EXTERNAL_STORE": {
     "line number": [
      913
     ]
    },
    "pyarrow.tests.test_plasma.USE_VALGRIND": {
     "line number": [
      912
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.teardown_method": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.signal": {
     "line number": [
      922
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.test_eviction": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      930,
      954
     ]
    },
    "range": {
     "line number": [
      930,
      934,
      944
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.USE_VALGRIND": {
     "line number": [
      702
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      85
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient._client_blocked_in_get": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "pyarrow.plasma.connect": {
     "line number": [
      843
     ]
    },
    "staticmethod": {
     "line number": [
      840
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient._client_get_multiple": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": {
    "pyarrow.plasma.connect": {
     "line number": [
      872
     ]
    },
    "staticmethod": {
     "line number": [
      869
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "pyarrow.plasma.connect": {
     "line number": [
      96,
      97
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      91
     ]
    },
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
     "line number": [
      92
     ]
    },
    "pyarrow.tests.test_plasma.USE_VALGRIND": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.USE_VALGRIND": {
     "line number": [
      107
     ]
    },
    "pyarrow.tests.test_plasma.signal": {
     "line number": [
      109
     ]
    },
    "pyarrow.tests.test_plasma.time": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_buffer_lifetime": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      280
     ]
    },
    "pyarrow.MockOutputStream": {
     "line number": [
      273
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      270
     ]
    },
    "pyarrow.RecordBatchStreamReader": {
     "line number": [
      289
     ]
    },
    "pyarrow.RecordBatchStreamWriter": {
     "line number": [
      274,
      281
     ]
    },
    "pyarrow.array": {
     "line number": [
      269
     ]
    },
    "pyarrow.int32": {
     "line number": [
      269
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_death_during_get": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.multiprocessing": {
     "line number": [
      850
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      848,
      867
     ]
    },
    "pyarrow.tests.test_plasma.time": {
     "line number": [
      854,
      860
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_getting_multiple_objects": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      898
     ]
    },
    "pyarrow.tests.test_plasma.multiprocessing": {
     "line number": [
      879
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      877,
      892
     ]
    },
    "pyarrow.tests.test_plasma.time": {
     "line number": [
      883,
      895,
      897
     ]
    },
    "range": {
     "line number": [
      877
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "IOError": {
     "line number": [
      118
     ]
    },
    "pyarrow.plasma.connect": {
     "line number": [
      119
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      471,
      472
     ]
    },
    "range": {
     "line number": [
      471,
      472
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      126,
      134
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      123
     ]
    },
    "range": {
     "line number": [
      129,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_and_seal": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "pyarrow.plasma.PlasmaObjectExists": {
     "line number": [
      203
     ]
    },
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
     "line number": [
      207
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      203
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      188,
      201,
      210,
      212
     ]
    },
    "range": {
     "line number": [
      187,
      192,
      209,
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pyarrow.lib.ArrowException": {
     "line number": [
      178
     ]
    },
    "pyarrow.tests.test_plasma.generate_metadata": {
     "line number": [
      173,
      176
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      171
     ]
    },
    "range": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "len": {
     "line number": [
      162,
      162,
      163
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      146,
      155,
      160
     ]
    },
    "pyarrow.tests.test_plasma.generate_metadata": {
     "line number": [
      144
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      142
     ]
    },
    "range": {
     "line number": [
      140,
      150,
      157,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      664,
      670,
      671,
      678,
      687,
      688,
      689
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      244,
      245
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      246
     ]
    },
    "pyarrow.tests.test_plasma.create_object_with_id": {
     "line number": [
      230
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      221,
      257
     ]
    },
    "range": {
     "line number": [
      221,
      228,
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      498,
      511,
      525,
      540
     ]
    },
    "pyarrow.lib.ArrowException": {
     "line number": [
      489
     ]
    },
    "pyarrow.tests.test_plasma.generate_metadata": {
     "line number": [
      497,
      524,
      539
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      485,
      510,
      523,
      538
     ]
    },
    "range": {
     "line number": [
      502,
      515,
      529,
      544
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      643,
      659
     ]
    },
    "illegal_assignment": {
     "line number": [
      660
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      643,
      659
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      638
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "chr": {
     "line number": [
      658
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "len": {
     "line number": [
      590
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      558,
      569,
      581
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      557,
      568,
      580
     ]
    },
    "range": {
     "line number": [
      556,
      561,
      567,
      572,
      579,
      584
     ]
    },
    "set": {
     "line number": [
      590
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.pickle": {
     "line number": [
      421,
      422
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "pyarrow.plasma.ObjectNotAvailable": {
     "line number": [
      308
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      326
     ]
    },
    "deserialize_or_output": {
     "line number": [
      333,
      340
     ]
    },
    "isinstance": {
     "line number": [
      326
     ]
    },
    "pyarrow.plasma.ObjectNotAvailable": {
     "line number": [
      341
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      310
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      313,
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer.deserialize_or_output": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "pyarrow.deserialize": {
     "line number": [
      323
     ]
    },
    "pyarrow.plasma.ObjectNotAvailable": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "CustomType": {
     "line number": [
      351,
      357
     ]
    },
    "pyarrow.ArrowSerializationError": {
     "line number": [
      353,
      362
     ]
    },
    "pyarrow.lib.SerializationContext": {
     "line number": [
      356
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      353,
      362,
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "data": {
   "lineno": 347
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      370
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      384
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      381
     ]
    },
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      376
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      373
     ]
    },
    "pyarrow.ipc.get_tensor_size": {
     "line number": [
      374
     ]
    },
    "pyarrow.ipc.read_tensor": {
     "line number": [
      382
     ]
    },
    "pyarrow.ipc.write_tensor": {
     "line number": [
      377
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": {
    "assert_create_raises_plasma_full": {
     "line number": [
      449,
      455,
      461,
      467
     ]
    },
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
     "line number": [
      441
     ]
    },
    "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE": {
     "line number": [
      450,
      456,
      462,
      468
     ]
    },
    "pyarrow.tests.test_plasma.create_object": {
     "line number": [
      445,
      451,
      453,
      458,
      464
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      429
     ]
    },
    "pyarrow.lib.ArrowException": {
     "line number": [
      435
     ]
    },
    "pyarrow.tests.test_plasma.create_object": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "numpy.random.bytes": {
     "line number": [
      401
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      392
     ]
    },
    "pandas.Series": {
     "line number": [
      390,
      391
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      415
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      412
     ]
    },
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      404
     ]
    },
    "pyarrow.MockOutputStream": {
     "line number": [
      397
     ]
    },
    "pyarrow.RecordBatch.from_pandas": {
     "line number": [
      395
     ]
    },
    "pyarrow.RecordBatchStreamReader": {
     "line number": [
      412
     ]
    },
    "pyarrow.RecordBatchStreamWriter": {
     "line number": [
      398,
      405
     ]
    },
    "pyarrow.plasma.ObjectID": {
     "line number": [
      401
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      715
     ]
    },
    "numpy.random.bytes": {
     "line number": [
      715
     ]
    },
    "numpy.random.randint": {
     "line number": [
      710,
      711
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      709
     ]
    },
    "range": {
     "line number": [
      709,
      710,
      711,
      712,
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      766,
      802
     ]
    },
    "numpy.random.bytes": {
     "line number": [
      766,
      802
     ]
    },
    "numpy.random.randint": {
     "line number": [
      761,
      762,
      797,
      798
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      759,
      794
     ]
    },
    "range": {
     "line number": [
      759,
      761,
      762,
      763,
      771,
      780,
      794,
      799,
      805,
      813
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_socket": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      738
     ]
    },
    "numpy.random.bytes": {
     "line number": [
      738
     ]
    },
    "numpy.random.randint": {
     "line number": [
      732,
      733
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      731
     ]
    },
    "pyarrow.tests.test_plasma.struct": {
     "line number": [
      745
     ]
    },
    "range": {
     "line number": [
      731,
      732,
      733,
      735,
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_use_full_memory": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      826
     ]
    },
    "pyarrow.plasma.PlasmaStoreFull": {
     "line number": [
      836
     ]
    },
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
     "line number": [
      826,
      830,
      838
     ]
    },
    "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE": {
     "line number": [
      838
     ]
    },
    "pyarrow.tests.test_plasma.create_object": {
     "line number": [
      824,
      830
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      836
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      834
     ]
    },
    "range": {
     "line number": [
      823,
      829,
      835
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.USE_VALGRIND": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.create_object_with_id": {
     "line number": [
      79
     ]
    },
    "pyarrow.tests.test_plasma.random_object_id": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.generate_metadata": {
     "line number": [
      69
     ]
    },
    "pyarrow.tests.test_plasma.write_to_data_buffer": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "bytearray": {
     "line number": [
      49
     ]
    },
    "pyarrow.tests.test_plasma.random": {
     "line number": [
      51,
      52,
      54,
      54
     ]
    },
    "range": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.random": {
     "line number": [
      40
     ]
    },
    "str": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.random.bytes": {
     "line number": [
      45
     ]
    },
    "pyarrow.plasma.ObjectID": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.test_object_id_equality_operators": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "pyarrow.plasma.ObjectID": {
     "line number": [
      970,
      971,
      972
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      966
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_randomness": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": {
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      1060
     ]
    },
    "pyarrow.tests.test_plasma.subprocess": {
     "line number": [
      1063,
      1064
     ]
    },
    "pyarrow.tests.test_plasma.sys": {
     "line number": [
      1063,
      1064
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_size": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      961
     ]
    },
    "pyarrow.plasma.ObjectID": {
     "line number": [
      962,
      963
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      961,
      958
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_client_sharing": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      1003,
      1006
     ]
    },
    "pyarrow.plasma.connect": {
     "line number": [
      1002
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      999
     ]
    },
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
     "line number": [
      1000
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      995
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_list": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      1026
     ]
    },
    "pyarrow.plasma.connect": {
     "line number": [
      1017
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      1014
     ]
    },
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
     "line number": [
      1015
     ]
    },
    "pyarrow.tests.test_plasma.create_object": {
     "line number": [
      1020,
      1037,
      1047
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      1010
     ]
    },
    "pyarrow.tests.test_plasma.time": {
     "line number": [
      1046,
      1048,
      1051,
      1052,
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_store_capacity": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": {
    "pyarrow.plasma.connect": {
     "line number": [
      1072
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      1071
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      1068
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_use_huge_pages": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "pyarrow.plasma.connect": {
     "line number": [
      988
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      984
     ]
    },
    "pyarrow.tests.test_plasma.create_object": {
     "line number": [
      989
     ]
    },
    "pyarrow.tests.test_plasma.os": {
     "line number": [
      980
     ]
    },
    "pyarrow.tests.test_plasma.pytest": {
     "line number": [
      979,
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.frombuffer": {
     "line number": [
      59
     ]
    },
    "pyarrow.tests.test_plasma.random": {
     "line number": [
      61,
      62,
      64,
      64
     ]
    },
    "range": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_plasma_tf_op.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "FromPlasma": {
     "line number": [
      50
     ]
    },
    "ToPlasma": {
     "line number": [
      49
     ]
    },
    "numpy.array_equal": {
     "line number": [
      65,
      66,
      79,
      80
     ]
    },
    "numpy.ones": {
     "line number": [
      29
     ]
    },
    "numpy.random.bytes": {
     "line number": [
      26
     ]
    },
    "numpy.random.randn": {
     "line number": [
      28
     ]
    },
    "numpy.split": {
     "line number": [
      59,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.FromPlasma": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.ToPlasma": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.test_plasma_tf_op": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      97
     ]
    },
    "numpy.float64": {
     "line number": [
      97
     ]
    },
    "numpy.int16": {
     "line number": [
      98
     ]
    },
    "numpy.int32": {
     "line number": [
      98
     ]
    },
    "numpy.int64": {
     "line number": [
      98
     ]
    },
    "numpy.int8": {
     "line number": [
      98
     ]
    },
    "pyarrow.plasma": {
     "line number": [
      99
     ]
    },
    "pyarrow.plasma.build_plasma_tensorflow_op": {
     "line number": [
      90
     ]
    },
    "pyarrow.plasma.connect": {
     "line number": [
      96
     ]
    },
    "pyarrow.plasma.start_plasma_store": {
     "line number": [
      95
     ]
    },
    "pyarrow.plasma.tf_plasma_op": {
     "line number": [
      92
     ]
    },
    "pyarrow.tests.test_plasma_tf_op.pytest": {
     "line number": [
      93,
      83,
      84,
      85
     ]
    },
    "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype": {
     "line number": [
      99
     ]
    },
    "tensorflow": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_scalars.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.test_basics": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      78
     ]
    },
    "hash": {
     "line number": [
      76,
      76
     ]
    },
    "isinstance": {
     "line number": [
      71,
      79
     ]
    },
    "numpy.float16": {
     "line number": [
      43
     ]
    },
    "pyarrow.BinaryScalar": {
     "line number": [
      47
     ]
    },
    "pyarrow.BinaryValue": {
     "line number": [
      47
     ]
    },
    "pyarrow.BooleanScalar": {
     "line number": [
      30,
      31
     ]
    },
    "pyarrow.BooleanValue": {
     "line number": [
      30,
      31
     ]
    },
    "pyarrow.Date32Scalar": {
     "line number": [
      58
     ]
    },
    "pyarrow.Date32Value": {
     "line number": [
      58
     ]
    },
    "pyarrow.Date64Scalar": {
     "line number": [
      59
     ]
    },
    "pyarrow.Date64Value": {
     "line number": [
      59
     ]
    },
    "pyarrow.Decimal128Scalar": {
     "line number": [
      45
     ]
    },
    "pyarrow.Decimal128Value": {
     "line number": [
      45
     ]
    },
    "pyarrow.DoubleScalar": {
     "line number": [
      42
     ]
    },
    "pyarrow.DoubleValue": {
     "line number": [
      42
     ]
    },
    "pyarrow.DurationScalar": {
     "line number": [
      64
     ]
    },
    "pyarrow.DurationValue": {
     "line number": [
      64
     ]
    },
    "pyarrow.FixedSizeBinaryScalar": {
     "line number": [
      52
     ]
    },
    "pyarrow.FixedSizeBinaryValue": {
     "line number": [
      52
     ]
    },
    "pyarrow.FixedSizeListScalar": {
     "line number": [
      56
     ]
    },
    "pyarrow.FixedSizeListValue": {
     "line number": [
      57
     ]
    },
    "pyarrow.FloatScalar": {
     "line number": [
      44
     ]
    },
    "pyarrow.FloatValue": {
     "line number": [
      44
     ]
    },
    "pyarrow.HalfFloatScalar": {
     "line number": [
      43
     ]
    },
    "pyarrow.HalfFloatValue": {
     "line number": [
      43
     ]
    },
    "pyarrow.Int16Scalar": {
     "line number": [
      36
     ]
    },
    "pyarrow.Int16Value": {
     "line number": [
      36
     ]
    },
    "pyarrow.Int32Scalar": {
     "line number": [
      38
     ]
    },
    "pyarrow.Int32Value": {
     "line number": [
      38
     ]
    },
    "pyarrow.Int64Scalar": {
     "line number": [
      32,
      33,
      40
     ]
    },
    "pyarrow.Int64Value": {
     "line number": [
      32,
      33,
      40
     ]
    },
    "pyarrow.Int8Scalar": {
     "line number": [
      34
     ]
    },
    "pyarrow.Int8Value": {
     "line number": [
      34
     ]
    },
    "pyarrow.LargeBinaryScalar": {
     "line number": [
      50
     ]
    },
    "pyarrow.LargeBinaryValue": {
     "line number": [
      51
     ]
    },
    "pyarrow.LargeListScalar": {
     "line number": [
      54
     ]
    },
    "pyarrow.LargeListValue": {
     "line number": [
      55
     ]
    },
    "pyarrow.LargeStringScalar": {
     "line number": [
      48
     ]
    },
    "pyarrow.LargeStringValue": {
     "line number": [
      49
     ]
    },
    "pyarrow.ListScalar": {
     "line number": [
      53
     ]
    },
    "pyarrow.ListValue": {
     "line number": [
      53
     ]
    },
    "pyarrow.MapScalar": {
     "line number": [
      66
     ]
    },
    "pyarrow.MapValue": {
     "line number": [
      67
     ]
    },
    "pyarrow.StringScalar": {
     "line number": [
      46
     ]
    },
    "pyarrow.StringValue": {
     "line number": [
      46
     ]
    },
    "pyarrow.StructScalar": {
     "line number": [
      65
     ]
    },
    "pyarrow.StructValue": {
     "line number": [
      65
     ]
    },
    "pyarrow.Time32Scalar": {
     "line number": [
      62
     ]
    },
    "pyarrow.Time32Value": {
     "line number": [
      62
     ]
    },
    "pyarrow.Time64Scalar": {
     "line number": [
      63
     ]
    },
    "pyarrow.Time64Value": {
     "line number": [
      63
     ]
    },
    "pyarrow.TimestampScalar": {
     "line number": [
      60
     ]
    },
    "pyarrow.TimestampValue": {
     "line number": [
      60
     ]
    },
    "pyarrow.UInt16Scalar": {
     "line number": [
      37
     ]
    },
    "pyarrow.UInt16Value": {
     "line number": [
      37
     ]
    },
    "pyarrow.UInt32Scalar": {
     "line number": [
      39
     ]
    },
    "pyarrow.UInt32Value": {
     "line number": [
      39
     ]
    },
    "pyarrow.UInt64Scalar": {
     "line number": [
      41
     ]
    },
    "pyarrow.UInt64Value": {
     "line number": [
      41
     ]
    },
    "pyarrow.UInt8Scalar": {
     "line number": [
      35
     ]
    },
    "pyarrow.UInt8Value": {
     "line number": [
      35
     ]
    },
    "pyarrow.binary": {
     "line number": [
      52
     ]
    },
    "pyarrow.date64": {
     "line number": [
      59
     ]
    },
    "pyarrow.float16": {
     "line number": [
      43
     ]
    },
    "pyarrow.float32": {
     "line number": [
      44
     ]
    },
    "pyarrow.int16": {
     "line number": [
      36
     ]
    },
    "pyarrow.int32": {
     "line number": [
      38
     ]
    },
    "pyarrow.int64": {
     "line number": [
      40
     ]
    },
    "pyarrow.int8": {
     "line number": [
      34,
      54,
      56,
      66
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      50
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      54
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      48
     ]
    },
    "pyarrow.list_": {
     "line number": [
      56
     ]
    },
    "pyarrow.map_": {
     "line number": [
      66
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      70,
      73,
      81,
      84
     ]
    },
    "pyarrow.string": {
     "line number": [
      66
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      58,
      59,
      60,
      61,
      63,
      64
     ]
    },
    "pyarrow.tests.test_scalars.decimal": {
     "line number": [
      45
     ]
    },
    "pyarrow.tests.test_scalars.pickle": {
     "line number": [
      87,
      87
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      78,
      29
     ]
    },
    "pyarrow.tests.test_scalars.weakref": {
     "line number": [
      91
     ]
    },
    "pyarrow.time32": {
     "line number": [
      61
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      37
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      39
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      41
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      35
     ]
    },
    "wr": {
     "line number": [
      92,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_binary": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      362,
      370
     ]
    },
    "pyarrow.BinaryScalar": {
     "line number": [
      357
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      370
     ]
    },
    "pyarrow.LargeBinaryScalar": {
     "line number": [
      358
     ]
    },
    "pyarrow.binary": {
     "line number": [
      357
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      358
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      361
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      355,
      356
     ]
    },
    "repr": {
     "line number": [
      365,
      365
     ]
    },
    "str": {
     "line number": [
      364,
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_bool": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      141,
      142
     ]
    },
    "pyarrow.BooleanScalar": {
     "line number": [
      141,
      142
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      138,
      139
     ]
    },
    "repr": {
     "line number": [
      144,
      146
     ]
    },
    "str": {
     "line number": [
      145,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_cast": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      224
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      220,
      221,
      222,
      223,
      225
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_date": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "pyarrow.date32": {
     "line number": [
      202
     ]
    },
    "pyarrow.date64": {
     "line number": [
      202
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      204
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      199,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_decimal": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      182,
      193
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      187,
      189
     ]
    },
    "pyarrow.Decimal128Scalar": {
     "line number": [
      182,
      193
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      184,
      188,
      190,
      192
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      181,
      188,
      190,
      192
     ]
    },
    "pyarrow.tests.test_scalars.decimal": {
     "line number": [
      180,
      186
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      187,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_dictionary": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      549,
      551
     ]
    },
    "enumerate": {
     "line number": [
      541
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      537
     ]
    },
    "pyarrow.array": {
     "line number": [
      534,
      535
     ]
    },
    "pyarrow.tests.test_scalars.pickle": {
     "line number": [
      554,
      554
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      549,
      551
     ]
    },
    "zip": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      299
     ]
    },
    "isinstance": {
     "line number": [
      303
     ]
    },
    "numpy.array": {
     "line number": [
      295
     ]
    },
    "pyarrow.array": {
     "line number": [
      301
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      302,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration_nanos_nopandas": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      333
     ]
    },
    "isinstance": {
     "line number": [
      327
     ]
    },
    "pyarrow.array": {
     "line number": [
      325,
      332
     ]
    },
    "pyarrow.duration": {
     "line number": [
      325,
      332
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      326,
      327
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      333,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_duration_nanos_pandas": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      314
     ]
    },
    "pandas.Timedelta": {
     "line number": [
      313,
      314,
      320
     ]
    },
    "pyarrow.array": {
     "line number": [
      312,
      319
     ]
    },
    "pyarrow.duration": {
     "line number": [
      312,
      319
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_fixed_size_binary": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      376
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      379
     ]
    },
    "pyarrow.FixedSizeBinaryScalar": {
     "line number": [
      376
     ]
    },
    "pyarrow.binary": {
     "line number": [
      375,
      380
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      375,
      380
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_fixed_size_list": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      447,
      449
     ]
    },
    "isinstance": {
     "line number": [
      441
     ]
    },
    "len": {
     "line number": [
      440
     ]
    },
    "pyarrow.FixedSizeListScalar": {
     "line number": [
      441
     ]
    },
    "pyarrow.int64": {
     "line number": [
      438
     ]
    },
    "pyarrow.list_": {
     "line number": [
      438
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      438
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      447,
      449
     ]
    },
    "repr": {
     "line number": [
      442
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_hashing": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      133
     ]
    },
    "len": {
     "line number": [
      134
     ]
    },
    "list": {
     "line number": [
      130
     ]
    },
    "pyarrow.array": {
     "line number": [
      131
     ]
    },
    "range": {
     "line number": [
      130
     ]
    },
    "set": {
     "line number": [
      132,
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      401,
      403
     ]
    },
    "isinstance": {
     "line number": [
      392,
      394
     ]
    },
    "len": {
     "line number": [
      391
     ]
    },
    "pyarrow.Array": {
     "line number": [
      392
     ]
    },
    "pyarrow.LargeListScalar": {
     "line number": [
      385
     ]
    },
    "pyarrow.ListScalar": {
     "line number": [
      384
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      385
     ]
    },
    "pyarrow.list_": {
     "line number": [
      384
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      389
     ]
    },
    "pyarrow.string": {
     "line number": [
      384,
      385
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      401,
      403,
      383
     ]
    },
    "repr": {
     "line number": [
      395,
      395
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list_from_numpy": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      408
     ]
    },
    "numpy.int64": {
     "line number": [
      408
     ]
    },
    "pyarrow.int64": {
     "line number": [
      409
     ]
    },
    "pyarrow.list_": {
     "line number": [
      409
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_list_from_pandas": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      430
     ]
    },
    "ValueError": {
     "line number": [
      430
     ]
    },
    "numpy.nan": {
     "line number": [
      421,
      422,
      423,
      424,
      425,
      426
     ]
    },
    "pandas.Series": {
     "line number": [
      417
     ]
    },
    "pyarrow.binary": {
     "line number": [
      422,
      424
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      425
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      426
     ]
    },
    "pyarrow.list_": {
     "line number": [
      422,
      423,
      424,
      425,
      426
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      417,
      431,
      434
     ]
    },
    "pyarrow.tests.test_scalars.decimal": {
     "line number": [
      426
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      430,
      413
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_map": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      524,
      526
     ]
    },
    "isinstance": {
     "line number": [
      505,
      506
     ]
    },
    "len": {
     "line number": [
      504
     ]
    },
    "pyarrow.Array": {
     "line number": [
      506
     ]
    },
    "pyarrow.MapScalar": {
     "line number": [
      505
     ]
    },
    "pyarrow.int8": {
     "line number": [
      500,
      520
     ]
    },
    "pyarrow.map_": {
     "line number": [
      500
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      502,
      519,
      520
     ]
    },
    "pyarrow.string": {
     "line number": [
      500,
      519
     ]
    },
    "pyarrow.tests.test_scalars.pickle": {
     "line number": [
      529,
      529
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      524,
      526
     ]
    },
    "repr": {
     "line number": [
      507
     ]
    },
    "zip": {
     "line number": [
      514
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_null_singleton": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      98
     ]
    },
    "pyarrow.NullScalar": {
     "line number": [
      99
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_nulls": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "pyarrow.NA": {
     "line number": [
      104,
      109,
      109,
      110,
      114
     ]
    },
    "pyarrow.array": {
     "line number": [
      112
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      103,
      107
     ]
    },
    "pyarrow.tests.test_scalars.pickle": {
     "line number": [
      118,
      118
     ]
    },
    "pyarrow.tests.test_scalars.weakref": {
     "line number": [
      122
     ]
    },
    "wr": {
     "line number": [
      122,
      123,
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_numerics": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "OverflowError": {
     "line number": [
      161
     ]
    },
    "isinstance": {
     "line number": [
      156,
      166,
      173
     ]
    },
    "numpy.float16": {
     "line number": [
      172
     ]
    },
    "pyarrow.DoubleScalar": {
     "line number": [
      166
     ]
    },
    "pyarrow.HalfFloatScalar": {
     "line number": [
      173
     ]
    },
    "pyarrow.Int64Scalar": {
     "line number": [
      156
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      155,
      162,
      165,
      172
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      161
     ]
    },
    "repr": {
     "line number": [
      157,
      167,
      174
     ]
    },
    "str": {
     "line number": [
      158,
      168,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_string": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      344,
      351
     ]
    },
    "pyarrow.Buffer": {
     "line number": [
      351
     ]
    },
    "pyarrow.LargeStringScalar": {
     "line number": [
      340
     ]
    },
    "pyarrow.StringScalar": {
     "line number": [
      339
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      340
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      343
     ]
    },
    "pyarrow.string": {
     "line number": [
      339
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      337,
      338
     ]
    },
    "repr": {
     "line number": [
      347,
      347
     ]
    },
    "str": {
     "line number": [
      348,
      348
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_struct": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      483
     ]
    },
    "isinstance": {
     "line number": [
      478,
      479,
      491,
      492
     ]
    },
    "len": {
     "line number": [
      477
     ]
    },
    "list": {
     "line number": [
      461,
      461,
      462,
      466,
      487
     ]
    },
    "pyarrow.FloatScalar": {
     "line number": [
      479,
      492
     ]
    },
    "pyarrow.Int16Scalar": {
     "line number": [
      478,
      491
     ]
    },
    "pyarrow.field": {
     "line number": [
      455,
      456
     ]
    },
    "pyarrow.float32": {
     "line number": [
      456,
      464,
      468
     ]
    },
    "pyarrow.int16": {
     "line number": [
      455,
      463,
      467
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      460,
      463,
      464,
      467,
      468,
      486
     ]
    },
    "pyarrow.struct": {
     "line number": [
      454
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      483
     ]
    },
    "repr": {
     "line number": [
      475,
      475,
      476,
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_time": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "pyarrow.scalar": {
     "line number": [
      215
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      209,
      210
     ]
    },
    "pyarrow.time32": {
     "line number": [
      212,
      212
     ]
    },
    "pyarrow.time64": {
     "line number": [
      212,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      235
     ]
    },
    "pandas.Timestamp": {
     "line number": [
      238,
      248
     ]
    },
    "pandas.date_range": {
     "line number": [
      231
     ]
    },
    "pyarrow.Array.from_pandas": {
     "line number": [
      237,
      247
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      228
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp_nanos_nopandas": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      276
     ]
    },
    "pyarrow.scalar": {
     "line number": [
      264,
      275
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      267
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      276,
      256
     ]
    },
    "pyarrow.tests.test_scalars.pytz": {
     "line number": [
      266
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_timestamp_no_overflow": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "pyarrow.scalar": {
     "line number": [
      290
     ]
    },
    "pyarrow.tests.test_scalars.datetime": {
     "line number": [
      285,
      286,
      287
     ]
    },
    "pyarrow.tests.test_scalars.pytz": {
     "line number": [
      285,
      286,
      287
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.test_union": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      568,
      589
     ]
    },
    "pyarrow.ArrowNotImplementedError": {
     "line number": [
      571,
      592
     ]
    },
    "pyarrow.UnionArray.from_dense": {
     "line number": [
      580
     ]
    },
    "pyarrow.UnionArray.from_sparse": {
     "line number": [
      560
     ]
    },
    "pyarrow.UnionScalar": {
     "line number": [
      568,
      589
     ]
    },
    "pyarrow.array": {
     "line number": [
      561,
      563,
      564,
      581,
      582,
      584,
      585
     ]
    },
    "pyarrow.int8": {
     "line number": [
      561
     ]
    },
    "pyarrow.tests.test_scalars.pickle": {
     "line number": [
      572,
      572,
      593,
      593
     ]
    },
    "pyarrow.tests.test_scalars.pytest": {
     "line number": [
      571,
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_schema.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.test_empty_table": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      640
     ]
    },
    "pyarrow.Table": {
     "line number": [
      640
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      629
     ]
    },
    "pyarrow.field": {
     "line number": [
      628,
      629,
      630,
      634,
      635
     ]
    },
    "pyarrow.int32": {
     "line number": [
      629
     ]
    },
    "pyarrow.int64": {
     "line number": [
      628,
      630,
      634,
      635
     ]
    },
    "pyarrow.list_": {
     "line number": [
      630,
      630
     ]
    },
    "pyarrow.schema": {
     "line number": [
      627,
      633
     ]
    },
    "pyarrow.string": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_flatten": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      407,
      410,
      411,
      413,
      414,
      417,
      419,
      420,
      422,
      423
     ]
    },
    "pyarrow.float64": {
     "line number": [
      410,
      414,
      420
     ]
    },
    "pyarrow.int32": {
     "line number": [
      407,
      413,
      419
     ]
    },
    "pyarrow.struct": {
     "line number": [
      411,
      417,
      422,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_from_numpy_dtype": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      215
     ]
    },
    "TypeError": {
     "line number": [
      218
     ]
    },
    "bool": {
     "line number": [
      213
     ]
    },
    "numpy.dtype": {
     "line number": [
      182,
      183,
      184,
      185,
      186,
      187,
      188,
      189,
      190,
      191,
      192,
      193,
      194,
      195,
      196,
      197,
      198,
      199,
      200,
      201,
      202,
      216
     ]
    },
    "numpy.unicode": {
     "line number": [
      211
     ]
    },
    "pyarrow.binary": {
     "line number": [
      194
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      182,
      213
     ]
    },
    "pyarrow.duration": {
     "line number": [
      199,
      200,
      201,
      202
     ]
    },
    "pyarrow.float16": {
     "line number": [
      190
     ]
    },
    "pyarrow.float32": {
     "line number": [
      191
     ]
    },
    "pyarrow.float64": {
     "line number": [
      192
     ]
    },
    "pyarrow.from_numpy_dtype": {
     "line number": [
      206,
      210,
      211,
      212,
      213,
      216,
      219
     ]
    },
    "pyarrow.int16": {
     "line number": [
      184
     ]
    },
    "pyarrow.int32": {
     "line number": [
      185,
      212
     ]
    },
    "pyarrow.int64": {
     "line number": [
      186
     ]
    },
    "pyarrow.int8": {
     "line number": [
      183
     ]
    },
    "pyarrow.string": {
     "line number": [
      193,
      210,
      211
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      215,
      218
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      195,
      196,
      197,
      198
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      188
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      189
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      245
     ]
    },
    "len": {
     "line number": [
      233
     ]
    },
    "pyarrow.field": {
     "line number": [
      224,
      225,
      226
     ]
    },
    "pyarrow.int32": {
     "line number": [
      224,
      231
     ]
    },
    "pyarrow.int8": {
     "line number": [
      226,
      231
     ]
    },
    "pyarrow.list_": {
     "line number": [
      226,
      231
     ]
    },
    "pyarrow.schema": {
     "line number": [
      228,
      246
     ]
    },
    "pyarrow.string": {
     "line number": [
      225,
      231
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      245
     ]
    },
    "repr": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      428,
      429,
      430
     ]
    },
    "pyarrow.int32": {
     "line number": [
      428
     ]
    },
    "pyarrow.int8": {
     "line number": [
      430
     ]
    },
    "pyarrow.list_": {
     "line number": [
      430
     ]
    },
    "pyarrow.schema": {
     "line number": [
      433
     ]
    },
    "pyarrow.string": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_constructor_errors": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      35
     ]
    },
    "pyarrow.Schema": {
     "line number": [
      36
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_duplicate_fields": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": {
    "FutureWarning": {
     "line number": [
      392,
      394,
      396
     ]
    },
    "UserWarning": {
     "line number": [
      396
     ]
    },
    "len": {
     "line number": [
      383
     ]
    },
    "pyarrow.field": {
     "line number": [
      376,
      377,
      378
     ]
    },
    "pyarrow.int32": {
     "line number": [
      376,
      382
     ]
    },
    "pyarrow.int8": {
     "line number": [
      378,
      382
     ]
    },
    "pyarrow.list_": {
     "line number": [
      378,
      382
     ]
    },
    "pyarrow.schema": {
     "line number": [
      380
     ]
    },
    "pyarrow.string": {
     "line number": [
      377,
      382
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      392,
      394,
      396
     ]
    },
    "repr": {
     "line number": [
      384
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equality_operators": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      499,
      500,
      501
     ]
    },
    "pyarrow.int32": {
     "line number": [
      499
     ]
    },
    "pyarrow.int8": {
     "line number": [
      501
     ]
    },
    "pyarrow.list_": {
     "line number": [
      501
     ]
    },
    "pyarrow.schema": {
     "line number": [
      505,
      506,
      507,
      508
     ]
    },
    "pyarrow.string": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      452,
      453,
      454
     ]
    },
    "pyarrow.int32": {
     "line number": [
      452
     ]
    },
    "pyarrow.int8": {
     "line number": [
      454
     ]
    },
    "pyarrow.list_": {
     "line number": [
      454
     ]
    },
    "pyarrow.schema": {
     "line number": [
      458,
      459,
      460,
      461,
      470
     ]
    },
    "pyarrow.string": {
     "line number": [
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_invalid_type": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      493
     ]
    },
    "pyarrow.array": {
     "line number": [
      492
     ]
    },
    "pyarrow.field": {
     "line number": [
      490
     ]
    },
    "pyarrow.int64": {
     "line number": [
      490
     ]
    },
    "pyarrow.schema": {
     "line number": [
      490
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      493
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_propagates_check_metadata": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      477,
      478,
      481,
      482
     ]
    },
    "pyarrow.int32": {
     "line number": [
      477,
      481
     ]
    },
    "pyarrow.schema": {
     "line number": [
      476,
      480
     ]
    },
    "pyarrow.string": {
     "line number": [
      478,
      482
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_mapping": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      370
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      354,
      369
     ]
    },
    "len": {
     "line number": [
      362
     ]
    },
    "pyarrow.int32": {
     "line number": [
      355,
      361
     ]
    },
    "pyarrow.int8": {
     "line number": [
      357,
      361
     ]
    },
    "pyarrow.list_": {
     "line number": [
      357,
      361
     ]
    },
    "pyarrow.schema": {
     "line number": [
      359,
      371
     ]
    },
    "pyarrow.string": {
     "line number": [
      356,
      361
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      370
     ]
    },
    "repr": {
     "line number": [
      363
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_pandas": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "distutils.version.LooseVersion": {
     "line number": [
      658
     ]
    },
    "list": {
     "line number": [
      649,
      650
     ]
    },
    "numpy.array": {
     "line number": [
      652
     ]
    },
    "pandas.Categorical": {
     "line number": [
      650
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      661
     ]
    },
    "pandas.Int32Dtype": {
     "line number": [
      659
     ]
    },
    "pandas.__version__": {
     "line number": [
      658
     ]
    },
    "pandas.array": {
     "line number": [
      659
     ]
    },
    "pyarrow.Schema.from_pandas": {
     "line number": [
      662
     ]
    },
    "pyarrow.Table.from_pandas": {
     "line number": [
      663
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      645
     ]
    },
    "range": {
     "line number": [
      649,
      650
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_tuples": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      349
     ]
    },
    "len": {
     "line number": [
      342
     ]
    },
    "pyarrow.int32": {
     "line number": [
      335,
      341
     ]
    },
    "pyarrow.int8": {
     "line number": [
      337,
      341
     ]
    },
    "pyarrow.list_": {
     "line number": [
      337,
      341
     ]
    },
    "pyarrow.schema": {
     "line number": [
      339,
      350
     ]
    },
    "pyarrow.string": {
     "line number": [
      336,
      341
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      349
     ]
    },
    "repr": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_get_fields": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      541
     ]
    },
    "KeyError": {
     "line number": [
      537
     ]
    },
    "TypeError": {
     "line number": [
      539
     ]
    },
    "pyarrow.field": {
     "line number": [
      526,
      527,
      528
     ]
    },
    "pyarrow.int32": {
     "line number": [
      526
     ]
    },
    "pyarrow.int8": {
     "line number": [
      528
     ]
    },
    "pyarrow.list_": {
     "line number": [
      528
     ]
    },
    "pyarrow.schema": {
     "line number": [
      531
     ]
    },
    "pyarrow.string": {
     "line number": [
      527
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      537,
      539,
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_merge": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      709
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      689,
      696,
      704
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      692,
      705
     ]
    },
    "pyarrow.field": {
     "line number": [
      683,
      684,
      685,
      688,
      689,
      692,
      695,
      696,
      701,
      702,
      703,
      704,
      705
     ]
    },
    "pyarrow.int32": {
     "line number": [
      683,
      688,
      692,
      701,
      705
     ]
    },
    "pyarrow.int64": {
     "line number": [
      695
     ]
    },
    "pyarrow.int8": {
     "line number": [
      685,
      703
     ]
    },
    "pyarrow.list_": {
     "line number": [
      685,
      703
     ]
    },
    "pyarrow.schema": {
     "line number": [
      682,
      687,
      691,
      694,
      700
     ]
    },
    "pyarrow.string": {
     "line number": [
      684,
      692,
      702,
      705
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      709
     ]
    },
    "pyarrow.unify_schemas": {
     "line number": [
      699,
      710
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      558,
      561
     ]
    },
    "pyarrow.field": {
     "line number": [
      547,
      548,
      549
     ]
    },
    "pyarrow.int32": {
     "line number": [
      547
     ]
    },
    "pyarrow.int8": {
     "line number": [
      549
     ]
    },
    "pyarrow.list_": {
     "line number": [
      549
     ]
    },
    "pyarrow.schema": {
     "line number": [
      552
     ]
    },
    "pyarrow.string": {
     "line number": [
      548
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      558,
      561
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "pyarrow.dictionary": {
     "line number": [
      567
     ]
    },
    "pyarrow.field": {
     "line number": [
      567,
      568
     ]
    },
    "pyarrow.int16": {
     "line number": [
      567
     ]
    },
    "pyarrow.int32": {
     "line number": [
      568
     ]
    },
    "pyarrow.schema": {
     "line number": [
      570
     ]
    },
    "pyarrow.string": {
     "line number": [
      567
     ]
    },
    "repr": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_sizeof": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      669,
      670
     ]
    },
    "pyarrow.int32": {
     "line number": [
      669
     ]
    },
    "pyarrow.schema": {
     "line number": [
      668
     ]
    },
    "pyarrow.string": {
     "line number": [
      670
     ]
    },
    "pyarrow.tests.test_schema.sys": {
     "line number": [
      673,
      676,
      676,
      678,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_to_string_with_metadata": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "len": {
     "line number": [
      289
     ]
    },
    "pyarrow.field": {
     "line number": [
      275,
      277
     ]
    },
    "pyarrow.schema": {
     "line number": [
      275,
      292
     ]
    },
    "str": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_weakref": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      251,
      252,
      253
     ]
    },
    "pyarrow.int32": {
     "line number": [
      251
     ]
    },
    "pyarrow.int8": {
     "line number": [
      253
     ]
    },
    "pyarrow.list_": {
     "line number": [
      253
     ]
    },
    "pyarrow.schema": {
     "line number": [
      255
     ]
    },
    "pyarrow.string": {
     "line number": [
      252
     ]
    },
    "pyarrow.tests.test_schema.weakref": {
     "line number": [
      256
     ]
    },
    "wr": {
     "line number": [
      257,
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      173,
      176
     ]
    },
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      173,
      176
     ]
    },
    "pyarrow.time32": {
     "line number": [
      160,
      161,
      174
     ]
    },
    "pyarrow.time64": {
     "line number": [
      162,
      163,
      177
     ]
    },
    "str": {
     "line number": [
      170,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_comparisons": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "pyarrow.int32": {
     "line number": [
      96,
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_for_alias": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      128
     ]
    },
    "pyarrow.date32": {
     "line number": [
      124
     ]
    },
    "pyarrow.date64": {
     "line number": [
      125
     ]
    },
    "pyarrow.duration": {
     "line number": [
      137,
      138,
      139,
      140
     ]
    },
    "pyarrow.float32": {
     "line number": [
      120,
      121
     ]
    },
    "pyarrow.float64": {
     "line number": [
      122,
      123
     ]
    },
    "pyarrow.int16": {
     "line number": [
      106,
      107
     ]
    },
    "pyarrow.int32": {
     "line number": [
      108,
      109
     ]
    },
    "pyarrow.int64": {
     "line number": [
      110,
      111
     ]
    },
    "pyarrow.int8": {
     "line number": [
      104,
      105
     ]
    },
    "pyarrow.string": {
     "line number": [
      126,
      127
     ]
    },
    "pyarrow.time32": {
     "line number": [
      129,
      130
     ]
    },
    "pyarrow.time64": {
     "line number": [
      131,
      132
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      133,
      134,
      135,
      136
     ]
    },
    "pyarrow.type_for_alias": {
     "line number": [
      144
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      114,
      115
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      116,
      117
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      118,
      119
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      112,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "factory": {
     "line number": [
      45
     ]
    },
    "getattr": {
     "line number": [
      44
     ]
    },
    "pyarrow": {
     "line number": [
      44
     ]
    },
    "str": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      90
     ]
    },
    "pyarrow.int32": {
     "line number": [
      86
     ]
    },
    "pyarrow.list_": {
     "line number": [
      87,
      91
     ]
    },
    "pyarrow.string": {
     "line number": [
      90
     ]
    },
    "str": {
     "line number": [
      88,
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_schema_pickling": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      615
     ]
    },
    "isinstance": {
     "line number": [
      616
     ]
    },
    "pyarrow.Field": {
     "line number": [
      616
     ]
    },
    "pyarrow.binary": {
     "line number": [
      584,
      585
     ]
    },
    "pyarrow.date32": {
     "line number": [
      602
     ]
    },
    "pyarrow.date64": {
     "line number": [
      603
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      606
     ]
    },
    "pyarrow.field": {
     "line number": [
      589,
      590,
      593,
      594,
      597,
      598,
      607,
      619
     ]
    },
    "pyarrow.int16": {
     "line number": [
      594,
      598
     ]
    },
    "pyarrow.int8": {
     "line number": [
      582,
      587,
      593,
      597
     ]
    },
    "pyarrow.lib.UnionMode_DENSE": {
     "line number": [
      599
     ]
    },
    "pyarrow.lib.UnionMode_SPARSE": {
     "line number": [
      595
     ]
    },
    "pyarrow.list_": {
     "line number": [
      586
     ]
    },
    "pyarrow.map_": {
     "line number": [
      587
     ]
    },
    "pyarrow.schema": {
     "line number": [
      621
     ]
    },
    "pyarrow.string": {
     "line number": [
      583,
      586,
      587
     ]
    },
    "pyarrow.struct": {
     "line number": [
      588
     ]
    },
    "pyarrow.tests.test_schema.pickle": {
     "line number": [
      611,
      611,
      622,
      622
     ]
    },
    "pyarrow.time32": {
     "line number": [
      600
     ]
    },
    "pyarrow.time64": {
     "line number": [
      601
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      604,
      605
     ]
    },
    "pyarrow.union": {
     "line number": [
      592,
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "pyarrow.string": {
     "line number": [
      148
     ]
    },
    "str": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "pyarrow.timestamp": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      53
     ]
    },
    "numpy.dtype": {
     "line number": [
      50
     ]
    },
    "numpy.float16": {
     "line number": [
      62
     ]
    },
    "numpy.float32": {
     "line number": [
      63
     ]
    },
    "numpy.float64": {
     "line number": [
      64
     ]
    },
    "numpy.int16": {
     "line number": [
      55
     ]
    },
    "numpy.int32": {
     "line number": [
      56
     ]
    },
    "numpy.int64": {
     "line number": [
      57
     ]
    },
    "numpy.int8": {
     "line number": [
      54
     ]
    },
    "numpy.object_": {
     "line number": [
      52,
      68,
      69,
      70,
      71,
      73
     ]
    },
    "numpy.uint16": {
     "line number": [
      59
     ]
    },
    "numpy.uint32": {
     "line number": [
      60
     ]
    },
    "numpy.uint64": {
     "line number": [
      61
     ]
    },
    "numpy.uint8": {
     "line number": [
      58
     ]
    },
    "pyarrow.binary": {
     "line number": [
      68,
      69
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      53
     ]
    },
    "pyarrow.date32": {
     "line number": [
      65
     ]
    },
    "pyarrow.date64": {
     "line number": [
      66
     ]
    },
    "pyarrow.float16": {
     "line number": [
      62
     ]
    },
    "pyarrow.float32": {
     "line number": [
      63
     ]
    },
    "pyarrow.float64": {
     "line number": [
      64,
      73
     ]
    },
    "pyarrow.int16": {
     "line number": [
      55
     ]
    },
    "pyarrow.int32": {
     "line number": [
      56
     ]
    },
    "pyarrow.int64": {
     "line number": [
      57,
      73
     ]
    },
    "pyarrow.int8": {
     "line number": [
      54,
      71
     ]
    },
    "pyarrow.list_": {
     "line number": [
      71
     ]
    },
    "pyarrow.map_": {
     "line number": [
      73
     ]
    },
    "pyarrow.null": {
     "line number": [
      52
     ]
    },
    "pyarrow.string": {
     "line number": [
      70
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      67
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      59
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      60
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      61
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype_check_import": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "pyarrow.tests.test_schema.pytest": {
     "line number": [
      79
     ]
    },
    "pyarrow.tests.util.invoke_script": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_undecodable_metadata": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      718
     ]
    },
    "pyarrow.int16": {
     "line number": [
      718
     ]
    },
    "pyarrow.schema": {
     "line number": [
      717
     ]
    },
    "str": {
     "line number": [
      720,
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      232
     ]
    },
    "ImportError": {
     "line number": [
      36,
      44,
      51
     ]
    },
    "numpy.array": {
     "line number": [
      159,
      160,
      169
     ]
    },
    "numpy.float16": {
     "line number": [
      157
     ]
    },
    "numpy.float32": {
     "line number": [
      157
     ]
    },
    "numpy.float64": {
     "line number": [
      158
     ]
    },
    "numpy.int32": {
     "line number": [
      155
     ]
    },
    "numpy.int64": {
     "line number": [
      155
     ]
    },
    "numpy.int8": {
     "line number": [
      155
     ]
    },
    "numpy.random.normal": {
     "line number": [
      159,
      161,
      174
     ]
    },
    "numpy.uint32": {
     "line number": [
      156
     ]
    },
    "numpy.uint64": {
     "line number": [
      156
     ]
    },
    "numpy.uint8": {
     "line number": [
      156
     ]
    },
    "numpy.zeros": {
     "line number": [
      158,
      234
     ]
    },
    "object": {
     "line number": [
      160
     ]
    },
    "pyarrow.tests.test_serialization.Bar": {
     "line number": [
      233
     ]
    },
    "pyarrow.tests.test_serialization.Baz": {
     "line number": [
      233
     ]
    },
    "pyarrow.tests.test_serialization.CustomError": {
     "line number": [
      232
     ]
    },
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      233
     ]
    },
    "pyarrow.tests.test_serialization.NamedTupleExample": {
     "line number": [
      234
     ]
    },
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS": {
     "line number": [
      169
     ]
    },
    "pyarrow.tests.test_serialization.Point": {
     "line number": [
      232
     ]
    },
    "pyarrow.tests.test_serialization.Qux": {
     "line number": [
      233
     ]
    },
    "pyarrow.tests.test_serialization.SubQux": {
     "line number": [
      233
     ]
    },
    "pyarrow.tests.test_serialization.SubQuxPickle": {
     "line number": [
      233
     ]
    },
    "pyarrow.tests.test_serialization.collections": {
     "line number": [
      227,
      228,
      235,
      236,
      237
     ]
    },
    "pyarrow.tests.test_serialization.make_serialization_context": {
     "line number": [
      258
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      57
     ]
    },
    "pyarrow.tests.test_serialization.string": {
     "line number": [
      147
     ]
    },
    "pyarrow.tests.test_serialization.sys": {
     "line number": [
      40
     ]
    },
    "range": {
     "line number": [
      174
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      45
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      47
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "data": {
   "lineno": 193
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      195
     ]
    },
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
     "line number": [
      195
     ]
    },
    "setattr": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "data": {
   "lineno": 199
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Bar": {
     "line number": [
      202
     ]
    },
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CUSTOM_OBJECTS": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "data": {
   "lineno": 182
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "hash": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.NamedTupleExample": {
  "data": {
   "lineno": 228
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Point": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      210,
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Serializable": {
  "data": {
   "lineno": 960
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Serializable": {
     "line number": [
      974
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass.__init__": {
  "data": {
   "lineno": 975
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Qux": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Qux": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Qux": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Qux": {
     "line number": [
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization._check_component_roundtrip": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "pyarrow.SerializedPyObject.from_components": {
     "line number": [
      277
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      275
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      279
     ]
    },
    "pyarrow.tests.test_serialization.global_serialization_context": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      95,
      95
     ]
    },
    "hasattr": {
     "line number": [
      71,
      72,
      81,
      81
     ]
    },
    "isinstance": {
     "line number": [
      118,
      118,
      120,
      120,
      122,
      122,
      124,
      125,
      127,
      128,
      130,
      131,
      133,
      134,
      136,
      136,
      138,
      138
     ]
    },
    "len": {
     "line number": [
      100,
      100,
      103,
      106,
      106,
      109,
      113,
      113,
      116
     ]
    },
    "list": {
     "line number": [
      83,
      84,
      99,
      99
     ]
    },
    "numpy.__name__": {
     "line number": [
      68,
      69
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      80
     ]
    },
    "print": {
     "line number": [
      91
     ]
    },
    "pyarrow.Array": {
     "line number": [
      118,
      118
     ]
    },
    "pyarrow.RecordBatch": {
     "line number": [
      136,
      136
     ]
    },
    "pyarrow.SparseCOOTensor": {
     "line number": [
      124,
      125
     ]
    },
    "pyarrow.SparseCSCMatrix": {
     "line number": [
      130,
      131
     ]
    },
    "pyarrow.SparseCSFTensor": {
     "line number": [
      133,
      134
     ]
    },
    "pyarrow.SparseCSRMatrix": {
     "line number": [
      127,
      128
     ]
    },
    "pyarrow.Table": {
     "line number": [
      138,
      138
     ]
    },
    "pyarrow.Tensor": {
     "line number": [
      120,
      120,
      122,
      122
     ]
    },
    "pyarrow.lib.is_named_tuple": {
     "line number": [
      111,
      112
     ]
    },
    "pyarrow.tests.test_serialization.torch": {
     "line number": [
      61,
      61,
      61,
      66
     ]
    },
    "range": {
     "line number": [
      103,
      109,
      116
     ]
    },
    "set": {
     "line number": [
      83,
      84
     ]
    },
    "tuple": {
     "line number": [
      105,
      105
     ]
    },
    "type": {
     "line number": [
      68,
      69,
      95,
      95,
      99,
      99,
      105,
      105,
      111,
      112,
      141,
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.coo_matrix": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.csc_matrix": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.csr_matrix": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.deserialize_regex": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": {
    "pyarrow.deserialize": {
     "line number": [
      1073
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.deserialize_serializable": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.global_serialization_context": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.index_types": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.large_buffer": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "pyarrow.allocate_buffer": {
     "line number": [
      284
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "numpy.random.randint": {
     "line number": [
      293
     ]
    },
    "open": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      241
     ]
    },
    "Exception": {
     "line number": [
      250
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      242
     ]
    },
    "pyarrow.tests.test_serialization.Bar": {
     "line number": [
      245
     ]
    },
    "pyarrow.tests.test_serialization.Baz": {
     "line number": [
      246
     ]
    },
    "pyarrow.tests.test_serialization.CustomError": {
     "line number": [
      251
     ]
    },
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      244
     ]
    },
    "pyarrow.tests.test_serialization.NamedTupleExample": {
     "line number": [
      253
     ]
    },
    "pyarrow.tests.test_serialization.Point": {
     "line number": [
      252
     ]
    },
    "pyarrow.tests.test_serialization.Qux": {
     "line number": [
      247
     ]
    },
    "pyarrow.tests.test_serialization.SubQux": {
     "line number": [
      248
     ]
    },
    "pyarrow.tests.test_serialization.SubQuxPickle": {
     "line number": [
      249
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pytestmark": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "pyarrow.BufferReader": {
     "line number": [
      266
     ]
    },
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      263
     ]
    },
    "pyarrow.deserialize_from": {
     "line number": [
      267
     ]
    },
    "pyarrow.serialize_to": {
     "line number": [
      264
     ]
    },
    "pyarrow.tests.test_serialization._check_component_roundtrip": {
     "line number": [
      270
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      268
     ]
    },
    "pyarrow.tests.test_serialization.global_serialization_context": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialize_serializable": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": {
    "type": {
     "line number": [
      965
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.sparse": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.tensor_types": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      899,
      902
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      883
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      878
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      888,
      891,
      894,
      897,
      900,
      903
     ]
    },
    "range": {
     "line number": [
      902
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.large_memory_map": {
     "line number": [
      881
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": {
    "BufferClass": {
     "line number": [
      874
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      868
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      875
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      874
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.BufferClass": {
  "data": {
   "lineno": 859
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.deserialize_buffer_class": {
  "data": {
   "lineno": 865
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.serialize_buffer_class": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      863
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "pyarrow.SerializationContext": {
     "line number": [
      301
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      318,
      322
     ]
    },
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      312,
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.Foo": {
  "data": {
   "lineno": 303
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_deserializer": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_serializer": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
     "line number": [
      368
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      369
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.CUSTOM_OBJECTS": {
     "line number": [
      373
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      374
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_datetime_serialization": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.datetime": {
     "line number": [
      399,
      402,
      405,
      408,
      411,
      414,
      417
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      421
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_default_dict_serialization": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.collections": {
     "line number": [
      380
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      381
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      378
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      381
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_buffer_in_different_process": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "pyarrow.py_buffer": {
     "line number": [
      1099
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1099
     ]
    },
    "pyarrow.tests.test_serialization.tempfile": {
     "line number": [
      1098
     ]
    },
    "pyarrow.tests.util.invoke_script": {
     "line number": [
      1103
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_components_in_different_process": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": {
    "print": {
     "line number": [
      1054,
      1055
     ]
    },
    "pyarrow.array": {
     "line number": [
      1037
     ]
    },
    "pyarrow.int8": {
     "line number": [
      1037
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1038
     ]
    },
    "pyarrow.tests.test_serialization.pickle": {
     "line number": [
      1039
     ]
    },
    "pyarrow.tests.test_serialization.subprocess": {
     "line number": [
      1056
     ]
    },
    "pyarrow.tests.test_serialization.sys": {
     "line number": [
      1054,
      1056
     ]
    },
    "pyarrow.tests.util.get_modified_env_with_pythonpath": {
     "line number": [
      1053
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": {
    "multiprocessing.Process": {
     "line number": [
      1089
     ]
    },
    "multiprocessing.Queue": {
     "line number": [
      1088
     ]
    },
    "pyarrow.SerializationContext": {
     "line number": [
      1082
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1085
     ]
    },
    "pyarrow.tests.test_serialization.deserialize_regex": {
     "line number": [
      1089
     ]
    },
    "pyarrow.tests.test_serialization.re": {
     "line number": [
      1080
     ]
    },
    "type": {
     "line number": [
      1083
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_empty_tensor": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1181,
      1185,
      1189
     ]
    },
    "numpy.float64": {
     "line number": [
      1181,
      1185,
      1189
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      1183,
      1187,
      1191
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      1182,
      1186,
      1190
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1182,
      1186,
      1190
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": {
    "SubFoo": {
     "line number": [
      950
     ]
    },
    "pyarrow.SerializationContext": {
     "line number": [
      947
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      952
     ]
    },
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      948,
      957
     ]
    },
    "type": {
     "line number": [
      957
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      941
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo.__init__": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      943
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_integer_limits": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "dt": {
     "line number": [
      345,
      345,
      347,
      348,
      348,
      351,
      354
     ]
    },
    "numpy.iinfo": {
     "line number": [
      345,
      348
     ]
    },
    "numpy.int32": {
     "line number": [
      343
     ]
    },
    "numpy.int64": {
     "line number": [
      343,
      343
     ]
    },
    "numpy.int8": {
     "line number": [
      343
     ]
    },
    "numpy.uint32": {
     "line number": [
      344
     ]
    },
    "numpy.uint64": {
     "line number": [
      344,
      344,
      347
     ]
    },
    "numpy.uint8": {
     "line number": [
      344
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      355
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      356
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      346,
      349,
      352
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      355
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      346,
      349,
      352
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_base_object": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      484
     ]
    },
    "numpy.int32": {
     "line number": [
      484
     ]
    },
    "open": {
     "line number": [
      486
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      489
     ]
    },
    "pyarrow.read_serialized": {
     "line number": [
      489
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      487
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      491,
      493
     ]
    },
    "pyarrow.tests.test_serialization.os": {
     "line number": [
      483
     ]
    },
    "str": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      476
     ]
    },
    "numpy.zeros": {
     "line number": [
      469
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      474
     ]
    },
    "pyarrow.FixedSizeBufferWriter": {
     "line number": [
      471
     ]
    },
    "pyarrow.deserialize_from": {
     "line number": [
      475
     ]
    },
    "pyarrow.serialize_to": {
     "line number": [
      472
     ]
    },
    "pyarrow.tests.test_serialization.global_serialization_context": {
     "line number": [
      472,
      475
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      471,
      474
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": {
    "float": {
     "line number": [
      821
     ]
    },
    "int": {
     "line number": [
      821
     ]
    },
    "numpy.dtype": {
     "line number": [
      816
     ]
    },
    "numpy.matrix": {
     "line number": [
      822
     ]
    },
    "numpy.random.randint": {
     "line number": [
      819
     ]
    },
    "open": {
     "line number": [
      824
     ]
    },
    "pyarrow.OSFile": {
     "line number": [
      827
     ]
    },
    "pyarrow.read_serialized": {
     "line number": [
      827
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      825
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      829,
      830,
      832
     ]
    },
    "pyarrow.tests.test_serialization.os": {
     "line number": [
      818
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      809
     ]
    },
    "str": {
     "line number": [
      818,
      821
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType": {
  "data": {
   "lineno": 812
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType.__init__": {
  "data": {
   "lineno": 813
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      388,
      389
     ]
    },
    "numpy.random.randint": {
     "line number": [
      390
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      391,
      393
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      391,
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "CustomNDArray": {
     "line number": [
      538,
      541
     ]
    },
    "numpy.alltrue": {
     "line number": [
      542
     ]
    },
    "numpy.ndarray": {
     "line number": [
      542
     ]
    },
    "numpy.zeros": {
     "line number": [
      538,
      542
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      532
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      540
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      539
     ]
    },
    "type": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      520
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray.__new__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.deserializer": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.serializer": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "numpy.ndarray": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_path_objects": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": {
    "pyarrow.deserialize_from": {
     "line number": [
      1152
     ]
    },
    "pyarrow.serialize_to": {
     "line number": [
      1151
     ]
    },
    "pyarrow.tests.test_serialization.pathlib": {
     "line number": [
      1149
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      1145
     ]
    },
    "pyarrow.tests.test_serialization.sys": {
     "line number": [
      1145
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS": {
     "line number": [
      336
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      337
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_broken": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      332
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_notbroken": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      328
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pyarrow_objects_serialization": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": {
    "numpy.random.rand": {
     "line number": [
      843
     ]
    },
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      844
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      848
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      843
     ]
    },
    "pyarrow.array": {
     "line number": [
      840,
      840,
      842,
      845,
      846,
      848,
      849
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      854
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      854
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pydata_sparse_sparse_coo_tensor_serialization": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      608,
      609
     ]
    },
    "numpy.array_equal": {
     "line number": [
      619
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      616
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      606
     ]
    },
    "pyarrow.tests.test_serialization.sparse": {
     "line number": [
      615,
      606
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_coo_tensor_serialization": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      594,
      595,
      596
     ]
    },
    "numpy.array_equal": {
     "line number": [
      603
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      600
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      592
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      599,
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_csc_matrix_serialization": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      726,
      727,
      728
     ]
    },
    "numpy.array_equal": {
     "line number": [
      735
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      732
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      724
     ]
    },
    "scipy.sparse.csc_matrix": {
     "line number": [
      731,
      724
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_scipy_sparse_csr_matrix_serialization": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      668,
      669,
      670
     ]
    },
    "numpy.array_equal": {
     "line number": [
      677
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      674
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      666
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      673,
      666
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": {
    "TempClass": {
     "line number": [
      915,
      920,
      921
     ]
    },
    "TypeError": {
     "line number": [
      935
     ]
    },
    "pyarrow.DeserializationCallbackError": {
     "line number": [
      926
     ]
    },
    "pyarrow.SerializationCallbackError": {
     "line number": [
      916
     ]
    },
    "pyarrow.SerializationContext": {
     "line number": [
      914,
      922
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      917,
      921
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      916,
      926,
      935
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "data": {
   "lineno": 909
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass2": {
  "data": {
   "lineno": 930
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "DummyClass": {
     "line number": [
      515
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      510
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.DummyClass": {
  "data": {
   "lineno": 500
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.deserialize_dummy_class": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.serialize_dummy_class": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      504
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_determinism": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": {
    "pyarrow.serialize": {
     "line number": [
      1196,
      1197
     ]
    },
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
     "line number": [
      1195
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_read_concatenated_records": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": {
    "pyarrow.BufferOutputStream": {
     "line number": [
      1061
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      1066
     ]
    },
    "pyarrow.read_serialized": {
     "line number": [
      1067,
      1068
     ]
    },
    "pyarrow.serialize_to": {
     "line number": [
      1062,
      1063
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": {
    "ClassA": {
     "line number": [
      1210,
      1214,
      1215
     ]
    },
    "Exception": {
     "line number": [
      1233
     ]
    },
    "numpy.array": {
     "line number": [
      1224
     ]
    },
    "object": {
     "line number": [
      1224
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1234
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      1233
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects.ClassA": {
  "data": {
   "lineno": 1202
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialize_subclasses": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "pyarrow.default_serialization_context": {
     "line number": [
      992
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      999
     ]
    },
    "pyarrow.tests.test_serialization.Serializable": {
     "line number": [
      994
     ]
    },
    "pyarrow.tests.test_serialization.SerializableClass": {
     "line number": [
      998,
      1002
     ]
    },
    "pyarrow.tests.test_serialization.deserialize_serializable": {
     "line number": [
      996
     ]
    },
    "pyarrow.tests.test_serialization.serialize_serializable": {
     "line number": [
      995
     ]
    },
    "type": {
     "line number": [
      1002
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "pyarrow.deserialize": {
     "line number": [
      363
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      362
     ]
    },
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
     "line number": [
      361
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      364
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_components_invalid_cases": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1019,
      1032
     ]
    },
    "pyarrow.deserialize_components": {
     "line number": [
      1020,
      1033
     ]
    },
    "pyarrow.py_buffer": {
     "line number": [
      1007
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      1019,
      1032
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": {
    "pyarrow.SerializationContext": {
     "line number": [
      1111
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      1127,
      1141
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1126,
      1140
     ]
    },
    "pyarrow.tests.test_serialization.Foo": {
     "line number": [
      1112,
      1114
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.Foo": {
  "data": {
   "lineno": 1108
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps1": {
  "data": {
   "lineno": 1118
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps2": {
  "data": {
   "lineno": 1132
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads1": {
  "data": {
   "lineno": 1121
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads2": {
  "data": {
   "lineno": 1135
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_coo_tensor_components_serialization": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      579,
      580
     ]
    },
    "numpy.dtype": {
     "line number": [
      577,
      578
     ]
    },
    "pyarrow.SparseCOOTensor.from_numpy": {
     "line number": [
      587
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      574
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      589
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      573,
      574
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      589
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      573
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_coo_tensor_serialization": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      565
     ]
    },
    "numpy.array": {
     "line number": [
      550,
      551
     ]
    },
    "numpy.array_equal": {
     "line number": [
      568,
      569
     ]
    },
    "numpy.dtype": {
     "line number": [
      548,
      549
     ]
    },
    "pyarrow.SparseCOOTensor": {
     "line number": [
      565
     ]
    },
    "pyarrow.SparseCOOTensor.from_numpy": {
     "line number": [
      558
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      561
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      563
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      562
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      564
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      546
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      545,
      546
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      545
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csc_matrix_components_serialization": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      713,
      714,
      715
     ]
    },
    "numpy.dtype": {
     "line number": [
      711,
      712
     ]
    },
    "pyarrow.SparseCSCMatrix.from_numpy": {
     "line number": [
      719
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      708
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      721
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      707,
      708
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      721
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csc_matrix_serialization": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      698
     ]
    },
    "numpy.array": {
     "line number": [
      685,
      686,
      687
     ]
    },
    "numpy.array_equal": {
     "line number": [
      701,
      702,
      703
     ]
    },
    "numpy.dtype": {
     "line number": [
      683,
      684
     ]
    },
    "pyarrow.SparseCSCMatrix": {
     "line number": [
      698
     ]
    },
    "pyarrow.SparseCSCMatrix.from_numpy": {
     "line number": [
      691
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      694
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      696
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      695
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      697
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      681
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      680,
      681
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      680
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csf_tensor_components_serialization": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      781,
      783,
      784,
      785,
      788,
      789,
      790,
      791
     ]
    },
    "numpy.dtype": {
     "line number": [
      779,
      780
     ]
    },
    "pyarrow.SparseCSFTensor.from_numpy": {
     "line number": [
      800
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      776
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      806
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      775,
      776
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      806
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      775
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csf_tensor_serialization": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      772
     ]
    },
    "numpy.array": {
     "line number": [
      743,
      745,
      746,
      747,
      750,
      751,
      752,
      753
     ]
    },
    "numpy.dtype": {
     "line number": [
      741,
      742
     ]
    },
    "pyarrow.SparseCSFTensor": {
     "line number": [
      772
     ]
    },
    "pyarrow.SparseCSFTensor.from_numpy": {
     "line number": [
      762
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      768
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      770
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      769
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      771
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      739
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      738,
      739
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      738
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csr_matrix_components_serialization": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      655,
      656,
      657
     ]
    },
    "numpy.dtype": {
     "line number": [
      653,
      654
     ]
    },
    "pyarrow.SparseCSRMatrix.from_numpy": {
     "line number": [
      661
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      650
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      663
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      649,
      650
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      663
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_sparse_csr_matrix_serialization": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      640
     ]
    },
    "numpy.array": {
     "line number": [
      627,
      628,
      629
     ]
    },
    "numpy.array_equal": {
     "line number": [
      643,
      644,
      645
     ]
    },
    "numpy.dtype": {
     "line number": [
      625,
      626
     ]
    },
    "pyarrow.SparseCSRMatrix": {
     "line number": [
      640
     ]
    },
    "pyarrow.SparseCSRMatrix.from_numpy": {
     "line number": [
      633
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      636
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      638
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      637
     ]
    },
    "pyarrow.tests.test_serialization.assert_equal": {
     "line number": [
      639
     ]
    },
    "pyarrow.tests.test_serialization.index_types": {
     "line number": [
      623
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      622,
      623
     ]
    },
    "pyarrow.tests.test_serialization.tensor_types": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_tensor_alignment": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1173
     ]
    },
    "numpy.random.normal": {
     "line number": [
      1158,
      1162,
      1167,
      1172
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      1159,
      1163,
      1168,
      1174
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      1159,
      1163,
      1168,
      1174
     ]
    },
    "range": {
     "line number": [
      1162,
      1167,
      1172,
      1173
     ]
    },
    "slice": {
     "line number": [
      1173
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_cuda": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      457
     ]
    },
    "pyarrow.tests.test_serialization.torch": {
     "line number": [
      464,
      457,
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_serialization": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      451
     ]
    },
    "numpy.random.randn": {
     "line number": [
      436
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      427
     ]
    },
    "pyarrow.register_torch_serialization_handlers": {
     "line number": [
      428
     ]
    },
    "pyarrow.tests.test_serialization.large_buffer": {
     "line number": [
      437,
      441,
      453
     ]
    },
    "pyarrow.tests.test_serialization.pytest": {
     "line number": [
      425
     ]
    },
    "pyarrow.tests.test_serialization.serialization_roundtrip": {
     "line number": [
      437,
      441,
      453
     ]
    },
    "pyarrow.tests.test_serialization.torch": {
     "line number": [
      436,
      440,
      450,
      451,
      452,
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.torch": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization_deprecated": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_serialization_deprecated.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization_deprecated.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization_deprecated.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization_deprecated.test_serialization_deprecated": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      26,
      29,
      33,
      38,
      41,
      45
     ]
    },
    "pyarrow.BufferOutputStream": {
     "line number": [
      32
     ]
    },
    "pyarrow.BufferReader": {
     "line number": [
      37
     ]
    },
    "pyarrow.default_serialization_context": {
     "line number": [
      42
     ]
    },
    "pyarrow.deserialize": {
     "line number": [
      30
     ]
    },
    "pyarrow.lib.SerializationContext": {
     "line number": [
      44
     ]
    },
    "pyarrow.read_serialized": {
     "line number": [
      39
     ]
    },
    "pyarrow.register_default_serialization_handlers": {
     "line number": [
      46
     ]
    },
    "pyarrow.serialize": {
     "line number": [
      27
     ]
    },
    "pyarrow.serialize_to": {
     "line number": [
      34
     ]
    },
    "pyarrow.tests.test_serialization_deprecated.pytest": {
     "line number": [
      26,
      29,
      33,
      38,
      41,
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization_deprecated.test_serialization_deprecated_toplevel": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      52,
      55
     ]
    },
    "pyarrow.SerializationContext": {
     "line number": [
      56
     ]
    },
    "pyarrow.SerializedPyObject": {
     "line number": [
      53
     ]
    },
    "pyarrow.tests.test_serialization_deprecated.pytest": {
     "line number": [
      52,
      55,
      49
     ]
    },
    "pyarrow.tests.test_serialization_deprecated.sys": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27,
      33
     ]
    },
    "pyarrow.float16": {
     "line number": [
      46
     ]
    },
    "pyarrow.float32": {
     "line number": [
      47
     ]
    },
    "pyarrow.float64": {
     "line number": [
      48
     ]
    },
    "pyarrow.int16": {
     "line number": [
      39
     ]
    },
    "pyarrow.int32": {
     "line number": [
      40
     ]
    },
    "pyarrow.int64": {
     "line number": [
      41
     ]
    },
    "pyarrow.int8": {
     "line number": [
      38
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      43
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      44
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      45
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      42
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      28
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_sparse_tensor.coo_matrix": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.csr_matrix": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.sparse": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.test_dense_to_sparse_tensor": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      378
     ]
    },
    "numpy.array_equal": {
     "line number": [
      391
     ]
    },
    "numpy.dtype": {
     "line number": [
      377
     ]
    },
    "pyarrow.SparseCOOTensor": {
     "line number": [
      372
     ]
    },
    "pyarrow.SparseCSCMatrix": {
     "line number": [
      371
     ]
    },
    "pyarrow.SparseCSFTensor": {
     "line number": [
      373
     ]
    },
    "pyarrow.SparseCSRMatrix": {
     "line number": [
      370
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      369,
      375
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_pydata_sparse_sparse_coo_tensor_roundtrip": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      472,
      473
     ]
    },
    "numpy.array_equal": {
     "line number": [
      488,
      489,
      490
     ]
    },
    "numpy.dtype": {
     "line number": [
      471
     ]
    },
    "pyarrow.SparseCOOTensor.from_pydata_sparse": {
     "line number": [
      481
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      468,
      469
     ]
    },
    "pyarrow.tests.test_sparse_tensor.sparse": {
     "line number": [
      480,
      468
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_base_object": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      83,
      84,
      88
     ]
    },
    "numpy.array_equal": {
     "line number": [
      101,
      102
     ]
    },
    "pyarrow.SparseCOOTensor.from_dense_numpy": {
     "line number": [
      94
     ]
    },
    "pyarrow.tests.test_sparse_tensor.sys": {
     "line number": [
      95,
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_from_dense": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      184,
      185,
      189
     ]
    },
    "numpy.array_equal": {
     "line number": [
      202,
      203,
      210,
      211
     ]
    },
    "numpy.dtype": {
     "line number": [
      183
     ]
    },
    "pyarrow.SparseCOOTensor.from_dense_numpy": {
     "line number": [
      198
     ]
    },
    "pyarrow.SparseCOOTensor.from_tensor": {
     "line number": [
      206
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      195
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      181
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      181
     ]
    },
    "repr": {
     "line number": [
      199,
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      305,
      306
     ]
    },
    "numpy.array_equal": {
     "line number": [
      318,
      319
     ]
    },
    "numpy.dtype": {
     "line number": [
      304
     ]
    },
    "pyarrow.SparseCOOTensor.from_numpy": {
     "line number": [
      313
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      302
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      302
     ]
    },
    "repr": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_coo_tensor_scipy_roundtrip": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      398,
      399,
      400
     ]
    },
    "numpy.array_equal": {
     "line number": [
      416,
      417,
      418,
      425
     ]
    },
    "numpy.dtype": {
     "line number": [
      397
     ]
    },
    "numpy.float16": {
     "line number": [
      422
     ]
    },
    "numpy.float32": {
     "line number": [
      422
     ]
    },
    "pyarrow.SparseCOOTensor.from_scipy": {
     "line number": [
      406,
      429
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      394,
      395
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      395
     ]
    },
    "scipy.sparse.coo_matrix": {
     "line number": [
      405,
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_base_object": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      128,
      129,
      131,
      132,
      134
     ]
    },
    "numpy.array_equal": {
     "line number": [
      146,
      147,
      148,
      149
     ]
    },
    "pyarrow.SparseCSFTensor.from_dense_numpy": {
     "line number": [
      140
     ]
    },
    "pyarrow.tests.test_sparse_tensor.sys": {
     "line number": [
      141,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_from_dense_numpy": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      250,
      251,
      253,
      254,
      256
     ]
    },
    "numpy.array_equal": {
     "line number": [
      268,
      269,
      270,
      271
     ]
    },
    "numpy.dtype": {
     "line number": [
      249
     ]
    },
    "pyarrow.SparseCSFTensor.from_dense_numpy": {
     "line number": [
      264
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      247
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      247
     ]
    },
    "repr": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_from_dense_tensor": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      277,
      278,
      280,
      281,
      283
     ]
    },
    "numpy.array_equal": {
     "line number": [
      296,
      297,
      298,
      299
     ]
    },
    "numpy.dtype": {
     "line number": [
      276
     ]
    },
    "pyarrow.SparseCSFTensor.from_tensor": {
     "line number": [
      292
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      289
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      274
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      274
     ]
    },
    "repr": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csf_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      346,
      347,
      349,
      350
     ]
    },
    "numpy.array_equal": {
     "line number": [
      362,
      363,
      364,
      365
     ]
    },
    "numpy.dtype": {
     "line number": [
      345
     ]
    },
    "pyarrow.SparseCSFTensor.from_numpy": {
     "line number": [
      356
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      343
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      343
     ]
    },
    "repr": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_base_object": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      107,
      108,
      109,
      110
     ]
    },
    "numpy.array_equal": {
     "line number": [
      122,
      123,
      124
     ]
    },
    "pyarrow.SparseCSRMatrix.from_dense_numpy": {
     "line number": [
      116
     ]
    },
    "pyarrow.tests.test_sparse_tensor.sys": {
     "line number": [
      117,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_from_dense": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      217,
      218,
      219,
      220
     ]
    },
    "numpy.array_equal": {
     "line number": [
      233,
      234,
      235,
      242,
      243,
      244
     ]
    },
    "numpy.dtype": {
     "line number": [
      216
     ]
    },
    "pyarrow.SparseCSRMatrix.from_dense_numpy": {
     "line number": [
      229
     ]
    },
    "pyarrow.SparseCSRMatrix.from_tensor": {
     "line number": [
      238
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      226
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      214
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      214
     ]
    },
    "repr": {
     "line number": [
      230,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_numpy_roundtrip": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      326,
      327,
      328
     ]
    },
    "numpy.array_equal": {
     "line number": [
      337,
      338,
      339
     ]
    },
    "numpy.dtype": {
     "line number": [
      325
     ]
    },
    "pyarrow.SparseCSRMatrix.from_numpy": {
     "line number": [
      332
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      323
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      323
     ]
    },
    "repr": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_csr_matrix_scipy_roundtrip": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      442,
      443,
      444
     ]
    },
    "numpy.array_equal": {
     "line number": [
      456,
      457,
      458,
      465
     ]
    },
    "numpy.dtype": {
     "line number": [
      441
     ]
    },
    "numpy.float16": {
     "line number": [
      462
     ]
    },
    "numpy.float32": {
     "line number": [
      462
     ]
    },
    "pyarrow.SparseCSRMatrix.from_scipy": {
     "line number": [
      449
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      438,
      439
     ]
    },
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
     "line number": [
      439
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      448,
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_attrs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      59
     ]
    },
    "pyarrow.SparseCOOTensor": {
     "line number": [
      55
     ]
    },
    "pyarrow.SparseCSCMatrix": {
     "line number": [
      54
     ]
    },
    "pyarrow.SparseCSFTensor": {
     "line number": [
      56
     ]
    },
    "pyarrow.SparseCSRMatrix": {
     "line number": [
      53
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      52
     ]
    },
    "pyarrow.tests.test_sparse_tensor.weakref": {
     "line number": [
      76
     ]
    },
    "wr": {
     "line number": [
      77,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "eq": {
     "line number": [
      173
     ]
    },
    "ne": {
     "line number": [
      178
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      172,
      177
     ]
    },
    "numpy.random.randn": {
     "line number": [
      169
     ]
    },
    "pyarrow.SparseCOOTensor": {
     "line number": [
      155
     ]
    },
    "pyarrow.SparseCSCMatrix": {
     "line number": [
      154
     ]
    },
    "pyarrow.SparseCSFTensor": {
     "line number": [
      156
     ]
    },
    "pyarrow.SparseCSRMatrix": {
     "line number": [
      153
     ]
    },
    "pyarrow.tests.test_sparse_tensor.pytest": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.eq": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.ne": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_strategies.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.test_array_nullability": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      44
     ]
    },
    "pyarrow.tests.strategies.arrays": {
     "line number": [
      44
     ]
    },
    "pyarrow.tests.strategies.primitive_types": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_arrays": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      39
     ]
    },
    "isinstance": {
     "line number": [
      41
     ]
    },
    "pyarrow.lib.Array": {
     "line number": [
      41
     ]
    },
    "pyarrow.tests.strategies.all_arrays": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_chunked_arrays": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      49
     ]
    },
    "isinstance": {
     "line number": [
      51
     ]
    },
    "pyarrow.lib.ChunkedArray": {
     "line number": [
      51
     ]
    },
    "pyarrow.tests.strategies.all_chunked_arrays": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_fields": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      29
     ]
    },
    "isinstance": {
     "line number": [
      31
     ]
    },
    "pyarrow.lib.Field": {
     "line number": [
      31
     ]
    },
    "pyarrow.tests.strategies.all_fields": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_record_batches": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      54
     ]
    },
    "isinstance": {
     "line number": [
      56
     ]
    },
    "pyarrow.lib.RecordBatch": {
     "line number": [
      56
     ]
    },
    "pyarrow.tests.strategies.all_record_batches": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_schemas": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      34
     ]
    },
    "isinstance": {
     "line number": [
      36
     ]
    },
    "pyarrow.lib.Schema": {
     "line number": [
      36
     ]
    },
    "pyarrow.tests.strategies.all_schemas": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_tables": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      59
     ]
    },
    "isinstance": {
     "line number": [
      61
     ]
    },
    "pyarrow.lib.Table": {
     "line number": [
      61
     ]
    },
    "pyarrow.tests.strategies.all_tables": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_types": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "hypothesis.given": {
     "line number": [
      24
     ]
    },
    "isinstance": {
     "line number": [
      26
     ]
    },
    "pyarrow.lib.DataType": {
     "line number": [
      26
     ]
    },
    "pyarrow.tests.strategies.all_types": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_table.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table._table_like_slice_tests": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      602
     ]
    },
    "factory": {
     "line number": [
      584,
      589,
      593
     ]
    },
    "len": {
     "line number": [
      600,
      600,
      609,
      610,
      611
     ]
    },
    "pyarrow.array": {
     "line number": [
      579,
      580
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      602
     ]
    },
    "range": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.test_chunked_array_asarray": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      342,
      347,
      357,
      368
     ]
    },
    "numpy.dtype": {
     "line number": [
      344,
      362,
      369
     ]
    },
    "numpy.isnan": {
     "line number": [
      360
     ]
    },
    "pyarrow.DictionaryArray.from_arrays": {
     "line number": [
      365
     ]
    },
    "pyarrow.array": {
     "line number": [
      337,
      338,
      352,
      353,
      366,
      366
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      340,
      355,
      367
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      331,
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_basics": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      38
     ]
    },
    "all": {
     "line number": [
      47,
      48
     ]
    },
    "isinstance": {
     "line number": [
      46,
      47,
      48
     ]
    },
    "len": {
     "line number": [
      49
     ]
    },
    "list": {
     "line number": [
      46
     ]
    },
    "object.__sizeof__": {
     "line number": [
      51
     ]
    },
    "pyarrow.binary": {
     "line number": [
      36
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      30,
      35,
      39,
      41
     ]
    },
    "pyarrow.lib.Int64Array": {
     "line number": [
      47,
      48
     ]
    },
    "pyarrow.string": {
     "line number": [
      30,
      31
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      38
     ]
    },
    "pyarrow.tests.test_table.sys": {
     "line number": [
      51
     ]
    },
    "pyarrow.tests.test_table.weakref": {
     "line number": [
      54
     ]
    },
    "sum": {
     "line number": [
      50
     ]
    },
    "wr": {
     "line number": [
      55,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_construction": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      100
     ]
    },
    "len": {
     "line number": [
      67,
      68,
      76,
      77,
      85,
      86,
      93,
      94
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      61,
      70,
      79,
      88,
      101,
      103,
      104,
      105
     ]
    },
    "pyarrow.int64": {
     "line number": [
      66,
      75,
      92
     ]
    },
    "pyarrow.int8": {
     "line number": [
      83,
      84
     ]
    },
    "pyarrow.null": {
     "line number": [
      104
     ]
    },
    "pyarrow.string": {
     "line number": [
      103,
      103,
      105,
      105
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "eq": {
     "line number": [
      249,
      259,
      261,
      262
     ]
    },
    "ne": {
     "line number": [
      251,
      260,
      263
     ]
    },
    "pyarrow.array": {
     "line number": [
      254,
      255,
      256,
      257
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      249,
      250,
      251,
      252,
      265
     ]
    },
    "pyarrow.int32": {
     "line number": [
      249,
      250,
      251,
      254,
      256,
      257,
      265
     ]
    },
    "pyarrow.int64": {
     "line number": [
      252,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.eq": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      223,
      227
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      223,
      227
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      226,
      230
     ]
    },
    "str": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.ne": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      237,
      241
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      237,
      241
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      240,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_flatten": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      376,
      379,
      380,
      384,
      387,
      388
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      377,
      379,
      380,
      385,
      387,
      388
     ]
    },
    "pyarrow.field": {
     "line number": [
      374,
      375
     ]
    },
    "pyarrow.float32": {
     "line number": [
      375,
      381,
      388
     ]
    },
    "pyarrow.int16": {
     "line number": [
      374,
      379,
      387
     ]
    },
    "pyarrow.struct": {
     "line number": [
      374
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_getitem": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      164,
      166
     ]
    },
    "numpy.int32": {
     "line number": [
      169
     ]
    },
    "pyarrow.array": {
     "line number": [
      157,
      158
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      160
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      164,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_iter": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "collections.abc.Iterable": {
     "line number": [
      218
     ]
    },
    "isinstance": {
     "line number": [
      218
     ]
    },
    "pyarrow.array": {
     "line number": [
      208,
      209,
      210,
      211
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      213
     ]
    },
    "range": {
     "line number": [
      215
     ]
    },
    "zip": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_mismatch_types": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      123,
      130
     ]
    },
    "pyarrow.array": {
     "line number": [
      126,
      127,
      132
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      125,
      132
     ]
    },
    "pyarrow.float64": {
     "line number": [
      132
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      123,
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_pickle": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      285
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      271
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      287
     ]
    },
    "pyarrow.field": {
     "line number": [
      279,
      279
     ]
    },
    "pyarrow.float64": {
     "line number": [
      273
     ]
    },
    "pyarrow.int64": {
     "line number": [
      272,
      276,
      279
     ]
    },
    "pyarrow.list_": {
     "line number": [
      275,
      276,
      277
     ]
    },
    "pyarrow.string": {
     "line number": [
      274,
      277,
      279
     ]
    },
    "pyarrow.struct": {
     "line number": [
      279
     ]
    },
    "pyarrow.tests.test_table.pickle": {
     "line number": [
      289,
      289
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      268
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_slice": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "len": {
     "line number": [
      189,
      193,
      198,
      199,
      202,
      203
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      197,
      201
     ]
    },
    "pyarrow.array": {
     "line number": [
      184,
      185
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_str": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      137,
      138
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      140
     ]
    },
    "str": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_numpy": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      117
     ]
    },
    "numpy.array_equal": {
     "line number": [
      119
     ]
    },
    "numpy.asarray": {
     "line number": [
      114
     ]
    },
    "numpy.ndarray": {
     "line number": [
      117
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      303,
      305
     ]
    },
    "pandas.Series": {
     "line number": [
      305
     ]
    },
    "pyarrow.ChunkedArray": {
     "line number": [
      303
     ]
    },
    "pyarrow.array": {
     "line number": [
      299
     ]
    },
    "pyarrow.table": {
     "line number": [
      301
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas_preserve_name": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "pandas.Categorical": {
     "line number": [
      319
     ]
    },
    "pandas.Series": {
     "line number": [
      327
     ]
    },
    "pandas.date_range": {
     "line number": [
      320,
      321
     ]
    },
    "pandas.testing.assert_series_equal": {
     "line number": [
      328
     ]
    },
    "pyarrow.array": {
     "line number": [
      318,
      319,
      320,
      321,
      322,
      323
     ]
    },
    "pyarrow.table": {
     "line number": [
      324
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      311
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      322,
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1026
     ]
    },
    "list": {
     "line number": [
      1011,
      1015
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1019,
      1021,
      1028
     ]
    },
    "pyarrow.array": {
     "line number": [
      1019,
      1021,
      1028
     ]
    },
    "pyarrow.concat_tables": {
     "line number": [
      1024
     ]
    },
    "range": {
     "line number": [
      1011,
      1015
     ]
    },
    "zip": {
     "line number": [
      1029
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_different_schema_metadata": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": {
    "list": {
     "line number": [
      1044
     ]
    },
    "numpy.nan": {
     "line number": [
      1046
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1045,
      1046
     ]
    },
    "pyarrow.Table.from_pandas": {
     "line number": [
      1048,
      1049
     ]
    },
    "pyarrow.concat_tables": {
     "line number": [
      1053
     ]
    },
    "pyarrow.field": {
     "line number": [
      1040,
      1041
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1039
     ]
    },
    "pyarrow.string": {
     "line number": [
      1040,
      1041
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1035
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_promotion": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      1059,
      1061,
      1066
     ]
    },
    "pyarrow.array": {
     "line number": [
      1060,
      1062,
      1067,
      1068
     ]
    },
    "pyarrow.concat_tables": {
     "line number": [
      1064
     ]
    },
    "pyarrow.float32": {
     "line number": [
      1062,
      1068
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1060,
      1067
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_promotion_error": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1078
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1073,
      1075
     ]
    },
    "pyarrow.array": {
     "line number": [
      1074,
      1076
     ]
    },
    "pyarrow.concat_tables": {
     "line number": [
      1079
     ]
    },
    "pyarrow.float32": {
     "line number": [
      1076
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1074
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1078
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_factory_functions_invalid_input": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1449,
      1452
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      1453
     ]
    },
    "pyarrow.table": {
     "line number": [
      1450
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1449,
      1452
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_from_arrays_schema": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1222
     ]
    },
    "TypeError": {
     "line number": [
      1222
     ]
    },
    "ValueError": {
     "line number": [
      1209,
      1226,
      1229
     ]
    },
    "klass": {
     "line number": [
      1199,
      1199
     ]
    },
    "list": {
     "line number": [
      1194
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1202,
      1210,
      1214,
      1227,
      1230
     ]
    },
    "pyarrow.Table.from_pydict": {
     "line number": [
      1223
     ]
    },
    "pyarrow.array": {
     "line number": [
      1195
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1196
     ]
    },
    "pyarrow.float32": {
     "line number": [
      1200,
      1213
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1200,
      1208,
      1213,
      1221
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1209,
      1222,
      1226,
      1229,
      1193
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1221
     ]
    },
    "pyarrow.types.is_float32": {
     "line number": [
      1215
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1200,
      1208,
      1213,
      1221
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_invalid_table_construct": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1185
     ]
    },
    "numpy.uint8": {
     "line number": [
      1185
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1190
     ]
    },
    "pyarrow.array": {
     "line number": [
      1187,
      1187
     ]
    },
    "pyarrow.lib.ArrowInvalid": {
     "line number": [
      1189
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1189
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      1186
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      416
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      407,
      414
     ]
    },
    "dict": {
     "line number": [
      412
     ]
    },
    "len": {
     "line number": [
      400,
      402
     ]
    },
    "object.__sizeof__": {
     "line number": [
      405
     ]
    },
    "pyarrow.array": {
     "line number": [
      393,
      394
     ]
    },
    "pyarrow.field": {
     "line number": [
      421,
      423
     ]
    },
    "pyarrow.int16": {
     "line number": [
      421
     ]
    },
    "pyarrow.int32": {
     "line number": [
      423
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      397,
      425,
      428
     ]
    },
    "pyarrow.schema": {
     "line number": [
      421
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      416
     ]
    },
    "pyarrow.tests.test_table.sys": {
     "line number": [
      405,
      411
     ]
    },
    "pyarrow.tests.test_table.weakref": {
     "line number": [
      443
     ]
    },
    "range": {
     "line number": [
      393
     ]
    },
    "str": {
     "line number": [
      430
     ]
    },
    "type": {
     "line number": [
      412,
      414
     ]
    },
    "wr": {
     "line number": [
      443,
      444,
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_column_sets_private_name": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      490
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      533,
      534
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      537
     ]
    },
    "range": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_equals": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      451,
      452,
      455,
      456
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      460,
      461,
      462,
      464,
      465,
      467
     ]
    },
    "range": {
     "line number": [
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_invalid_names": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      524,
      527
     ]
    },
    "pyarrow.array": {
     "line number": [
      521,
      522
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      525,
      528
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      524,
      527
     ]
    },
    "range": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_lengths": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      507
     ]
    },
    "pyarrow.array": {
     "line number": [
      504,
      504,
      505
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      508
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      507
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_schema": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      498
     ]
    },
    "pyarrow.array": {
     "line number": [
      496
     ]
    },
    "pyarrow.field": {
     "line number": [
      497
     ]
    },
    "pyarrow.list_": {
     "line number": [
      497
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      499
     ]
    },
    "pyarrow.schema": {
     "line number": [
      497
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      498
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      497
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_struct_array": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": {
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      569
     ]
    },
    "pyarrow.RecordBatch.from_struct_array": {
     "line number": [
      568
     ]
    },
    "pyarrow.array": {
     "line number": [
      564,
      571,
      572
     ]
    },
    "pyarrow.float32": {
     "line number": [
      566,
      572
     ]
    },
    "pyarrow.int32": {
     "line number": [
      566,
      571
     ]
    },
    "pyarrow.struct": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_struct_array_invalid": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      559
     ]
    },
    "pyarrow.RecordBatch.from_struct_array": {
     "line number": [
      560
     ]
    },
    "pyarrow.array": {
     "line number": [
      560
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      559
     ]
    },
    "range": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_no_fields": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": {
    "len": {
     "line number": [
      514
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      512
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_pickle": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      543,
      544
     ]
    },
    "pyarrow.field": {
     "line number": [
      547,
      548
     ]
    },
    "pyarrow.float32": {
     "line number": [
      548
     ]
    },
    "pyarrow.int8": {
     "line number": [
      547
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      551
     ]
    },
    "pyarrow.schema": {
     "line number": [
      550
     ]
    },
    "pyarrow.tests.test_table.pickle": {
     "line number": [
      553,
      553
     ]
    },
    "range": {
     "line number": [
      543
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "pyarrow.RecordBatch.from_arrays": {
     "line number": [
      615
     ]
    },
    "pyarrow.tests.test_table._table_like_slice_tests": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_take": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      479,
      480,
      482,
      483,
      484,
      484
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      478,
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      634,
      635
     ]
    },
    "pyarrow.ArrowInvalid": {
     "line number": [
      639
     ]
    },
    "pyarrow.Table.from_batches": {
     "line number": [
      640
     ]
    },
    "pyarrow.array": {
     "line number": [
      636,
      637
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      636,
      637
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      639
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_slice_zero_length_table": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      625
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      629
     ]
    },
    "pyarrow.string": {
     "line number": [
      629
     ]
    },
    "pyarrow.table": {
     "line number": [
      625,
      629
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      622
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      625
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      877,
      883,
      889
     ]
    },
    "pyarrow.array": {
     "line number": [
      873,
      874,
      875
     ]
    },
    "pyarrow.field": {
     "line number": [
      879
     ]
    },
    "range": {
     "line number": [
      873,
      875
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      743,
      746
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      728,
      735
     ]
    },
    "dict": {
     "line number": [
      733
     ]
    },
    "len": {
     "line number": [
      721
     ]
    },
    "object.__sizeof__": {
     "line number": [
      726
     ]
    },
    "pyarrow.array": {
     "line number": [
      716,
      717
     ]
    },
    "pyarrow.table": {
     "line number": [
      719,
      750,
      751
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      743,
      746
     ]
    },
    "pyarrow.tests.test_table.sys": {
     "line number": [
      726,
      732
     ]
    },
    "pyarrow.tests.test_table.weakref": {
     "line number": [
      754
     ]
    },
    "range": {
     "line number": [
      716
     ]
    },
    "type": {
     "line number": [
      733,
      735
     ]
    },
    "wr": {
     "line number": [
      754,
      755,
      757
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_cast_to_incompatible_schema": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1119,
      1121
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1108
     ]
    },
    "pyarrow.array": {
     "line number": [
      1105,
      1106
     ]
    },
    "pyarrow.field": {
     "line number": [
      1111,
      1112,
      1115
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1112
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1111,
      1115
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1110,
      1114
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1119,
      1121
     ]
    },
    "range": {
     "line number": [
      1105
     ]
    },
    "tuple": {
     "line number": [
      1108
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_sets_private_name": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      645
     ]
    },
    "pyarrow.table": {
     "line number": [
      645
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_with_duplicates": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      866
     ]
    },
    "pyarrow.array": {
     "line number": [
      862,
      863,
      864
     ]
    },
    "pyarrow.table": {
     "line number": [
      862
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      866
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_combine_chunks": {
  "data": {
   "lineno": 996,
   "symbols_in_volume": {
    "pyarrow.Table.from_batches": {
     "line number": [
      1001
     ]
    },
    "pyarrow.array": {
     "line number": [
      997,
      997,
      999,
      999
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      997,
      999
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_drop": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      925
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      918,
      921
     ]
    },
    "pyarrow.array": {
     "line number": [
      914,
      915,
      916
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      925
     ]
    },
    "range": {
     "line number": [
      914,
      916
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_equals": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      650,
      656
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      1386
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1393
     ]
    },
    "pyarrow.Table.from_pandas": {
     "line number": [
      1395,
      1398
     ]
    },
    "pyarrow.Table.from_pydict": {
     "line number": [
      1402,
      1407
     ]
    },
    "pyarrow.array": {
     "line number": [
      1388,
      1389
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1391
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1391
     ]
    },
    "pyarrow.string": {
     "line number": [
      1391
     ]
    },
    "pyarrow.table": {
     "line number": [
      1394,
      1397,
      1401,
      1406
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1381
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1413
     ]
    },
    "pyarrow.array": {
     "line number": [
      1418,
      1422
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1417,
      1419
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1418,
      1426
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1417,
      1426
     ]
    },
    "pyarrow.table": {
     "line number": [
      1414,
      1418,
      1424,
      1427
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1413
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args_pandas": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1436,
      1439
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1437,
      1440,
      1444
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1443,
      1445
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1443
     ]
    },
    "pyarrow.table": {
     "line number": [
      1437,
      1440,
      1444
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1436,
      1439,
      1431
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_flatten": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      984,
      987
     ]
    },
    "pyarrow.array": {
     "line number": [
      980,
      981,
      982,
      988,
      989,
      990
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      982
     ]
    },
    "pyarrow.field": {
     "line number": [
      977,
      978,
      979
     ]
    },
    "pyarrow.float32": {
     "line number": [
      978,
      989
     ]
    },
    "pyarrow.int16": {
     "line number": [
      977,
      988
     ]
    },
    "pyarrow.struct": {
     "line number": [
      977,
      979
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_invalid_names": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      777,
      780
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      778,
      781
     ]
    },
    "pyarrow.array": {
     "line number": [
      774,
      775
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      777,
      780
     ]
    },
    "range": {
     "line number": [
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_preserves_column_metadata": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      764
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      766
     ]
    },
    "pyarrow.array": {
     "line number": [
      762,
      763
     ]
    },
    "pyarrow.field": {
     "line number": [
      764,
      765
     ]
    },
    "pyarrow.int64": {
     "line number": [
      764,
      765
     ]
    },
    "pyarrow.schema": {
     "line number": [
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_batches_and_schema": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      674,
      678
     ]
    },
    "pyarrow.Table.from_batches": {
     "line number": [
      668,
      675,
      679
     ]
    },
    "pyarrow.array": {
     "line number": [
      666,
      666,
      677
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      670,
      671
     ]
    },
    "pyarrow.field": {
     "line number": [
      663,
      664,
      673
     ]
    },
    "pyarrow.float64": {
     "line number": [
      664
     ]
    },
    "pyarrow.int64": {
     "line number": [
      663,
      673
     ]
    },
    "pyarrow.record_batch": {
     "line number": [
      666,
      677
     ]
    },
    "pyarrow.schema": {
     "line number": [
      662,
      673
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      674,
      678
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_lists": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": {
    "list": {
     "line number": [
      786
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      791,
      799
     ]
    },
    "pyarrow.field": {
     "line number": [
      795,
      796
     ]
    },
    "pyarrow.int64": {
     "line number": [
      796
     ]
    },
    "pyarrow.schema": {
     "line number": [
      794
     ]
    },
    "pyarrow.table": {
     "line number": [
      790,
      798
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      795
     ]
    },
    "range": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pandas_schema": {
  "data": {
   "lineno": 1348,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1370
     ]
    },
    "NotImplementedError": {
     "line number": [
      1364
     ]
    },
    "TypeError": {
     "line number": [
      1364
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1353
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      1353
     ]
    },
    "pyarrow.Table.from_pandas": {
     "line number": [
      1358,
      1365,
      1371,
      1375
     ]
    },
    "pyarrow.float32": {
     "line number": [
      1357
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1368
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1369
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1357,
      1363,
      1368,
      1374
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1364,
      1370,
      1348
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1363
     ]
    },
    "pyarrow.types.is_float32": {
     "line number": [
      1359
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1357,
      1363,
      1368,
      1374
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1275
     ]
    },
    "TypeError": {
     "line number": [
      1270,
      1286
     ]
    },
    "ValueError": {
     "line number": [
      1266
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1243
     ]
    },
    "pyarrow.Table.from_pydict": {
     "line number": [
      1234,
      1245,
      1254,
      1260,
      1267,
      1271,
      1276,
      1287
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1240
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1281
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1280
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1279
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1237,
      1240,
      1272,
      1278
     ]
    },
    "pyarrow.string": {
     "line number": [
      1272
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1266,
      1270,
      1275,
      1286
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1240
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_arrow_arrays": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      1320
     ]
    },
    "TypeError": {
     "line number": [
      1320
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1295
     ]
    },
    "klass": {
     "line number": [
      1295,
      1295
     ]
    },
    "pyarrow.Table.from_pydict": {
     "line number": [
      1299,
      1305,
      1312,
      1321
     ]
    },
    "pyarrow.array": {
     "line number": [
      1291
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1292
     ]
    },
    "pyarrow.float32": {
     "line number": [
      1311
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1296
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1296,
      1311,
      1319
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1320,
      1290
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      1319
     ]
    },
    "pyarrow.types.is_float32": {
     "line number": [
      1313
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1296,
      1311,
      1319
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_schema": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      1337
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      1332
     ]
    },
    "klass": {
     "line number": [
      1332,
      1332
     ]
    },
    "list": {
     "line number": [
      1325
     ]
    },
    "pyarrow.Table.from_pydict": {
     "line number": [
      1338,
      1342
     ]
    },
    "pyarrow.array": {
     "line number": [
      1326
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      1327
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1335
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1336
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1335,
      1341
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1337,
      1324
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      1335,
      1341
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_function_unicode_schema": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": {
    "collections.OrderedDict": {
     "line number": [
      1484
     ]
    },
    "pyarrow.array": {
     "line number": [
      1489,
      1490
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1486
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1486
     ]
    },
    "pyarrow.string": {
     "line number": [
      1486
     ]
    },
    "pyarrow.table": {
     "line number": [
      1488
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_get_field": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      835
     ]
    },
    "KeyError": {
     "line number": [
      829
     ]
    },
    "TypeError": {
     "line number": [
      832
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      824
     ]
    },
    "pyarrow.array": {
     "line number": [
      820,
      821,
      822
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      829,
      832,
      835
     ]
    },
    "range": {
     "line number": [
      820,
      822
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1096,
      1099
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1089
     ]
    },
    "pyarrow.array": {
     "line number": [
      1084,
      1085,
      1086,
      1087
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1096,
      1099
     ]
    },
    "range": {
     "line number": [
      1084
     ]
    },
    "tuple": {
     "line number": [
      1089
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pickle": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      811
     ]
    },
    "pyarrow.chunked_array": {
     "line number": [
      805,
      806
     ]
    },
    "pyarrow.field": {
     "line number": [
      808,
      809
     ]
    },
    "pyarrow.schema": {
     "line number": [
      808
     ]
    },
    "pyarrow.string": {
     "line number": [
      806,
      809
     ]
    },
    "pyarrow.tests.test_table.pickle": {
     "line number": [
      813,
      813
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      805,
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      935,
      939
     ]
    },
    "pyarrow.array": {
     "line number": [
      931,
      932,
      933
     ]
    },
    "range": {
     "line number": [
      931,
      933
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column_empty": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": {
    "len": {
     "line number": [
      952,
      952
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      948
     ]
    },
    "pyarrow.array": {
     "line number": [
      946
     ]
    },
    "range": {
     "line number": [
      946
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_rename_columns": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      965,
      972
     ]
    },
    "pyarrow.array": {
     "line number": [
      961,
      962,
      963
     ]
    },
    "range": {
     "line number": [
      961,
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_repr_to_string": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1463,
      1464
     ]
    },
    "pyarrow.field": {
     "line number": [
      1458,
      1460
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1458
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1460
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1458
     ]
    },
    "pyarrow.table": {
     "line number": [
      1463
     ]
    },
    "str": {
     "line number": [
      1465
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_safe_casting": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": {
    "pyarrow.Table.from_arrays": {
     "line number": [
      1132,
      1140
     ]
    },
    "pyarrow.array": {
     "line number": [
      1127,
      1128,
      1129,
      1130,
      1135,
      1136,
      1137,
      1138
     ]
    },
    "pyarrow.field": {
     "line number": [
      1143,
      1144,
      1145,
      1146
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1129
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1136,
      1144
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1128,
      1135,
      1143
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1127,
      1137,
      1145
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1142
     ]
    },
    "pyarrow.string": {
     "line number": [
      1130,
      1138,
      1146
     ]
    },
    "range": {
     "line number": [
      1127,
      1135
     ]
    },
    "tuple": {
     "line number": [
      1132,
      1140
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1563
     ]
    },
    "KeyError": {
     "line number": [
      1560,
      1573
     ]
    },
    "pyarrow.array": {
     "line number": [
      1531,
      1532,
      1533
     ]
    },
    "pyarrow.table": {
     "line number": [
      1534,
      1538,
      1542,
      1547,
      1551,
      1568,
      1572,
      1577
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1560,
      1563,
      1573
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select_column": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      856
     ]
    },
    "KeyError": {
     "line number": [
      849
     ]
    },
    "TypeError": {
     "line number": [
      853
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      845
     ]
    },
    "pyarrow.array": {
     "line number": [
      841,
      842,
      843
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      849,
      853,
      856
     ]
    },
    "range": {
     "line number": [
      841,
      843
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_set_column": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": {
    "list": {
     "line number": [
      905
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      900,
      907
     ]
    },
    "pyarrow.array": {
     "line number": [
      896,
      897,
      898
     ]
    },
    "pyarrow.field": {
     "line number": [
      902
     ]
    },
    "range": {
     "line number": [
      896,
      898
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_slice_getitem": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": {
    "pyarrow.table": {
     "line number": [
      619
     ]
    },
    "pyarrow.tests.test_table._table_like_slice_tests": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_non_consecutive": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1518,
      1519,
      1523,
      1524,
      1527
     ]
    },
    "pyarrow.table": {
     "line number": [
      1517,
      1522
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_null_index": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1504,
      1505,
      1509,
      1510,
      1513
     ]
    },
    "pyarrow.table": {
     "line number": [
      1503,
      1508
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_take_vanilla_functionality": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": {
    "pyarrow.array": {
     "line number": [
      1495,
      1496,
      1499
     ]
    },
    "pyarrow.table": {
     "line number": [
      1494
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_to_batches": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "iter": {
     "line number": [
      710
     ]
    },
    "len": {
     "line number": [
      698,
      704
     ]
    },
    "list": {
     "line number": [
      687,
      688,
      704
     ]
    },
    "map": {
     "line number": [
      704
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      687,
      688
     ]
    },
    "pandas.concat": {
     "line number": [
      695
     ]
    },
    "pandas.testing.assert_frame_equal": {
     "line number": [
      700,
      706,
      707
     ]
    },
    "pyarrow.RecordBatch.from_pandas": {
     "line number": [
      690,
      691
     ]
    },
    "pyarrow.Table.from_batches": {
     "line number": [
      693,
      700,
      707,
      710
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      682
     ]
    },
    "range": {
     "line number": [
      687,
      688
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_unsafe_casting": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": {
    "pyarrow.ArrowInvalid": {
     "line number": [
      1177
     ]
    },
    "pyarrow.Table.from_arrays": {
     "line number": [
      1160,
      1168
     ]
    },
    "pyarrow.array": {
     "line number": [
      1155,
      1156,
      1157,
      1158,
      1163,
      1164,
      1165,
      1166
     ]
    },
    "pyarrow.field": {
     "line number": [
      1171,
      1172,
      1173,
      1174
     ]
    },
    "pyarrow.float64": {
     "line number": [
      1157
     ]
    },
    "pyarrow.int16": {
     "line number": [
      1164,
      1172
     ]
    },
    "pyarrow.int32": {
     "line number": [
      1156,
      1163,
      1171
     ]
    },
    "pyarrow.int64": {
     "line number": [
      1155,
      1165,
      1173
     ]
    },
    "pyarrow.schema": {
     "line number": [
      1170
     ]
    },
    "pyarrow.string": {
     "line number": [
      1158,
      1166,
      1174
     ]
    },
    "pyarrow.tests.test_table.pytest": {
     "line number": [
      1177
     ]
    },
    "range": {
     "line number": [
      1155,
      1163
     ]
    },
    "tuple": {
     "line number": [
      1160,
      1168
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.tm": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor": {
  "data": {
   "symbols_in_volume": {
    "pyarrow.float16": {
     "line number": [
      36
     ]
    },
    "pyarrow.float32": {
     "line number": [
      37
     ]
    },
    "pyarrow.float64": {
     "line number": [
      38
     ]
    },
    "pyarrow.int16": {
     "line number": [
      29
     ]
    },
    "pyarrow.int32": {
     "line number": [
      30
     ]
    },
    "pyarrow.int64": {
     "line number": [
      31
     ]
    },
    "pyarrow.int8": {
     "line number": [
      28
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      33
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      34
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      35
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "module"
 },
 "pyarrow.tests.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.tensor_type_pairs": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      181
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      190
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      182
     ]
    },
    "pyarrow.create_memory_map": {
     "line number": [
      185
     ]
    },
    "pyarrow.ipc.get_tensor_size": {
     "line number": [
      183
     ]
    },
    "pyarrow.ipc.read_tensor": {
     "line number": [
      189
     ]
    },
    "pyarrow.ipc.write_tensor": {
     "line number": [
      186
     ]
    },
    "pyarrow.memory_map": {
     "line number": [
      188
     ]
    },
    "pyarrow.tests.test_tensor.os": {
     "line number": [
      184
     ]
    },
    "str": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      43
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      45,
      59,
      63
     ]
    },
    "pyarrow.tests.test_tensor.weakref": {
     "line number": [
      69
     ]
    },
    "wr": {
     "line number": [
      70,
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      76
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      76
     ]
    },
    "pyarrow.tests.test_tensor.sys": {
     "line number": [
      77,
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "eq": {
     "line number": [
      160
     ]
    },
    "ne": {
     "line number": [
      164
     ]
    },
    "numpy.ascontiguousarray": {
     "line number": [
      159,
      163
     ]
    },
    "numpy.random.randn": {
     "line number": [
      157
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      158,
      159,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.eq": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.ne": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_hashing": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      169
     ]
    },
    "hash": {
     "line number": [
      170
     ]
    },
    "numpy.arange": {
     "line number": [
      170
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      170
     ]
    },
    "pyarrow.tests.test_tensor.pytest": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_read_from_compressed": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      113
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      114
     ]
    },
    "pyarrow.input_stream": {
     "line number": [
      122
     ]
    },
    "pyarrow.ipc.read_tensor": {
     "line number": [
      122
     ]
    },
    "pyarrow.ipc.write_tensor": {
     "line number": [
      119
     ]
    },
    "pyarrow.output_stream": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      97
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      98
     ]
    },
    "pyarrow.create_memory_map": {
     "line number": [
      101
     ]
    },
    "pyarrow.ipc.read_tensor": {
     "line number": [
      106
     ]
    },
    "pyarrow.ipc.write_tensor": {
     "line number": [
      103
     ]
    },
    "pyarrow.tests.test_tensor.os": {
     "line number": [
      100
     ]
    },
    "str": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      127,
      130
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      128,
      131
     ]
    },
    "pyarrow.create_memory_map": {
     "line number": [
      134
     ]
    },
    "pyarrow.ipc.read_tensor": {
     "line number": [
      141
     ]
    },
    "pyarrow.ipc.write_tensor": {
     "line number": [
      138
     ]
    },
    "pyarrow.tests.test_tensor.os": {
     "line number": [
      133
     ]
    },
    "str": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_memoryview": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "memoryview": {
     "line number": [
      205
     ]
    },
    "numpy.arange": {
     "line number": [
      201
     ]
    },
    "numpy.float16": {
     "line number": [
      198
     ]
    },
    "numpy.float64": {
     "line number": [
      199
     ]
    },
    "numpy.frombuffer": {
     "line number": [
      213,
      215
     ]
    },
    "numpy.int64": {
     "line number": [
      196
     ]
    },
    "numpy.int8": {
     "line number": [
      195
     ]
    },
    "numpy.uint64": {
     "line number": [
      197
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "numpy.dtype": {
     "line number": [
      84
     ]
    },
    "numpy.random.randn": {
     "line number": [
      85
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      87
     ]
    },
    "pyarrow.tests.test_tensor.pytest": {
     "line number": [
      82
     ]
    },
    "pyarrow.tests.test_tensor.tensor_type_pairs": {
     "line number": [
      82
     ]
    },
    "repr": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      174
     ]
    },
    "pyarrow.Tensor.from_numpy": {
     "line number": [
      175
     ]
    },
    "pyarrow.ipc.get_tensor_size": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_types.Iterator": {
  "data": {
   "shadows": "collections.abc.Iterator"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.get_many_types": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      57,
      58,
      71,
      73,
      76,
      78
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      43
     ]
    },
    "pyarrow.date32": {
     "line number": [
      47
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      55
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      80
     ]
    },
    "pyarrow.duration": {
     "line number": [
      51
     ]
    },
    "pyarrow.field": {
     "line number": [
      65,
      66,
      67,
      68,
      69,
      70,
      71,
      72,
      73,
      74,
      76,
      77,
      78,
      79
     ]
    },
    "pyarrow.float16": {
     "line number": [
      52
     ]
    },
    "pyarrow.float32": {
     "line number": [
      53
     ]
    },
    "pyarrow.float64": {
     "line number": [
      54
     ]
    },
    "pyarrow.int32": {
     "line number": [
      44,
      61,
      62,
      64,
      65,
      68,
      80
     ]
    },
    "pyarrow.int8": {
     "line number": [
      66,
      69
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      60
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      63
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      59
     ]
    },
    "pyarrow.lib.UnionMode_DENSE": {
     "line number": [
      72,
      74
     ]
    },
    "pyarrow.lib.UnionMode_SPARSE": {
     "line number": [
      77,
      79
     ]
    },
    "pyarrow.list_": {
     "line number": [
      61,
      62
     ]
    },
    "pyarrow.map_": {
     "line number": [
      64
     ]
    },
    "pyarrow.null": {
     "line number": [
      42
     ]
    },
    "pyarrow.string": {
     "line number": [
      56,
      64,
      67,
      70,
      72,
      74,
      77,
      79,
      80
     ]
    },
    "pyarrow.struct": {
     "line number": [
      65,
      68
     ]
    },
    "pyarrow.time32": {
     "line number": [
      45
     ]
    },
    "pyarrow.time64": {
     "line number": [
      46
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      48,
      49,
      50
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      63
     ]
    },
    "pyarrow.union": {
     "line number": [
      71,
      73,
      76,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.test_bit_width": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      701
     ]
    },
    "pyarrow.binary": {
     "line number": [
      698,
      700
     ]
    },
    "pyarrow.bool_": {
     "line number": [
      693
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      697
     ]
    },
    "pyarrow.float16": {
     "line number": [
      696
     ]
    },
    "pyarrow.int16": {
     "line number": [
      700
     ]
    },
    "pyarrow.int8": {
     "line number": [
      694
     ]
    },
    "pyarrow.list_": {
     "line number": [
      700
     ]
    },
    "pyarrow.string": {
     "line number": [
      700
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      701
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "BuggyTimezone1": {
     "line number": [
      355
     ]
    },
    "BuggyTimezone2": {
     "line number": [
      355
     ]
    },
    "BuggyTimezone3": {
     "line number": [
      355
     ]
    },
    "CorrectTimezone1": {
     "line number": [
      350
     ]
    },
    "CorrectTimezone2": {
     "line number": [
      351
     ]
    },
    "ValueError": {
     "line number": [
      356
     ]
    },
    "pyarrow.lib.tzinfo_to_string": {
     "line number": [
      350,
      351,
      357
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone1": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone1.tzname": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone1.utcoffset": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone2": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      328
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone2.tzname": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone2.utcoffset": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone3": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone3.tzname": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.BuggyTimezone3.utcoffset": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.CorrectTimezone1": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.CorrectTimezone1.tzname": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.CorrectTimezone1.utcoffset": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.CorrectTimezone2": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "class"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.CorrectTimezone2.tzname": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_convert_custom_tzinfo_objects_to_string.CorrectTimezone2.utcoffset": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_overflow": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      721
     ]
    },
    "pyarrow.decimal128": {
     "line number": [
      718,
      719,
      722
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      721
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_properties": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": {
    "pyarrow.decimal128": {
     "line number": [
      711
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_ordered_equals": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "pyarrow.dictionary": {
     "line number": [
      604,
      605,
      606,
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_type": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      596,
      598
     ]
    },
    "pyarrow.dictionary": {
     "line number": [
      579,
      584,
      590,
      597,
      599
     ]
    },
    "pyarrow.float64": {
     "line number": [
      584,
      586
     ]
    },
    "pyarrow.int32": {
     "line number": [
      579,
      580
     ]
    },
    "pyarrow.int64": {
     "line number": [
      597
     ]
    },
    "pyarrow.int8": {
     "line number": [
      584,
      585,
      591
     ]
    },
    "pyarrow.string": {
     "line number": [
      579,
      581,
      592,
      597,
      599
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      596,
      598
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      599
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_duration": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      423
     ]
    },
    "pyarrow.duration": {
     "line number": [
      419,
      424
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_exact_primitive_types": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "check_func": {
     "line number": [
      683
     ]
    },
    "pyarrow.date32": {
     "line number": [
      666
     ]
    },
    "pyarrow.date64": {
     "line number": [
      667
     ]
    },
    "pyarrow.float16": {
     "line number": [
      678
     ]
    },
    "pyarrow.float32": {
     "line number": [
      679
     ]
    },
    "pyarrow.float64": {
     "line number": [
      680
     ]
    },
    "pyarrow.int16": {
     "line number": [
      671
     ]
    },
    "pyarrow.int32": {
     "line number": [
      672
     ]
    },
    "pyarrow.int64": {
     "line number": [
      673
     ]
    },
    "pyarrow.int8": {
     "line number": [
      670
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      665
     ]
    },
    "pyarrow.time32": {
     "line number": [
      668
     ]
    },
    "pyarrow.time64": {
     "line number": [
      669
     ]
    },
    "pyarrow.types.is_date32": {
     "line number": [
      666
     ]
    },
    "pyarrow.types.is_date64": {
     "line number": [
      667
     ]
    },
    "pyarrow.types.is_float16": {
     "line number": [
      678
     ]
    },
    "pyarrow.types.is_float32": {
     "line number": [
      679
     ]
    },
    "pyarrow.types.is_float64": {
     "line number": [
      680
     ]
    },
    "pyarrow.types.is_int16": {
     "line number": [
      671
     ]
    },
    "pyarrow.types.is_int32": {
     "line number": [
      672
     ]
    },
    "pyarrow.types.is_int64": {
     "line number": [
      673
     ]
    },
    "pyarrow.types.is_int8": {
     "line number": [
      670
     ]
    },
    "pyarrow.types.is_time32": {
     "line number": [
      668
     ]
    },
    "pyarrow.types.is_time64": {
     "line number": [
      669
     ]
    },
    "pyarrow.types.is_uint16": {
     "line number": [
      675
     ]
    },
    "pyarrow.types.is_uint32": {
     "line number": [
      676
     ]
    },
    "pyarrow.types.is_uint64": {
     "line number": [
      677
     ]
    },
    "pyarrow.types.is_uint8": {
     "line number": [
      674
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      675
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      676
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      677
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      674
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_add_remove_metadata": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      906
     ]
    },
    "pyarrow.field": {
     "line number": [
      890,
      916
     ]
    },
    "pyarrow.int32": {
     "line number": [
      890,
      916
     ]
    },
    "pyarrow.tests.test_types.collections": {
     "line number": [
      895
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      906
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_basic": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      831
     ]
    },
    "pyarrow.field": {
     "line number": [
      821,
      828,
      832
     ]
    },
    "pyarrow.string": {
     "line number": [
      820
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      831
     ]
    },
    "repr": {
     "line number": [
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equality_operators": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      866,
      867,
      868,
      869
     ]
    },
    "pyarrow.int8": {
     "line number": [
      866,
      867,
      868,
      869
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equals": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      839,
      840,
      841,
      842,
      843,
      844,
      845,
      846
     ]
    },
    "pyarrow.int16": {
     "line number": [
      842,
      843
     ]
    },
    "pyarrow.int8": {
     "line number": [
      839,
      840,
      841,
      844,
      845,
      846
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_metadata": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      878,
      879,
      880
     ]
    },
    "pyarrow.int8": {
     "line number": [
      878,
      879,
      880
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_modified_copies": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      922,
      923,
      926,
      932,
      938
     ]
    },
    "pyarrow.int32": {
     "line number": [
      922,
      923,
      932,
      938
     ]
    },
    "pyarrow.int64": {
     "line number": [
      926,
      927
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fields_hashable": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      650,
      653
     ]
    },
    "len": {
     "line number": [
      652,
      652
     ]
    },
    "pyarrow.field": {
     "line number": [
      645,
      646,
      647,
      648,
      649
     ]
    },
    "pyarrow.int32": {
     "line number": [
      645,
      648,
      649
     ]
    },
    "pyarrow.int64": {
     "line number": [
      646,
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fields_weakrefable": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      658
     ]
    },
    "pyarrow.int32": {
     "line number": [
      658
     ]
    },
    "pyarrow.tests.test_types.weakref": {
     "line number": [
      659
     ]
    },
    "wr": {
     "line number": [
      659,
      660,
      662
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_binary_byte_width": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      706
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_list_type": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      463
     ]
    },
    "isinstance": {
     "line number": [
      459
     ]
    },
    "pyarrow.FixedSizeListType": {
     "line number": [
      459
     ]
    },
    "pyarrow.float64": {
     "line number": [
      458,
      460,
      464
     ]
    },
    "pyarrow.list_": {
     "line number": [
      458,
      464
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_hashing": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": {
    "all": {
     "line number": [
      987
     ]
    },
    "enumerate": {
     "line number": [
      987,
      991,
      997
     ]
    },
    "hash": {
     "line number": [
      992,
      992
     ]
    },
    "hypothesis.assume": {
     "line number": [
      985
     ]
    },
    "hypothesis.given": {
     "line number": [
      979
     ]
    },
    "hypothesis.strategies.lists": {
     "line number": [
      980,
      981,
      982
     ]
    },
    "len": {
     "line number": [
      995,
      995
     ]
    },
    "pyarrow.tests.strategies.all_fields": {
     "line number": [
      981
     ]
    },
    "pyarrow.tests.strategies.all_schemas": {
     "line number": [
      982
     ]
    },
    "pyarrow.tests.strategies.all_types": {
     "line number": [
      980
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_binary_string": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "pyarrow.binary": {
     "line number": [
      193,
      200,
      206,
      212,
      214,
      215
     ]
    },
    "pyarrow.large_binary": {
     "line number": [
      195,
      202,
      204,
      210
     ]
    },
    "pyarrow.large_string": {
     "line number": [
      196,
      201,
      205,
      209
     ]
    },
    "pyarrow.string": {
     "line number": [
      194,
      198,
      199,
      207,
      211
     ]
    },
    "pyarrow.types.is_binary": {
     "line number": [
      193,
      194,
      195,
      196
     ]
    },
    "pyarrow.types.is_fixed_size_binary": {
     "line number": [
      214,
      215
     ]
    },
    "pyarrow.types.is_large_binary": {
     "line number": [
      204,
      205,
      206,
      207
     ]
    },
    "pyarrow.types.is_large_string": {
     "line number": [
      209,
      210,
      211,
      212
     ]
    },
    "pyarrow.types.is_string": {
     "line number": [
      198,
      200,
      201,
      202
     ]
    },
    "pyarrow.types.is_unicode": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "pyarrow.bool_": {
     "line number": [
      85
     ]
    },
    "pyarrow.int8": {
     "line number": [
      86
     ]
    },
    "pyarrow.types.is_boolean": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean_value": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": {
    "numpy.bool_": {
     "line number": [
      962,
      963
     ]
    },
    "pyarrow.types.is_boolean_value": {
     "line number": [
      959,
      960,
      961,
      962,
      963
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_decimal": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "pyarrow.decimal128": {
     "line number": [
      127
     ]
    },
    "pyarrow.int32": {
     "line number": [
      128
     ]
    },
    "pyarrow.types.is_decimal": {
     "line number": [
      127,
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_dictionary": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "pyarrow.dictionary": {
     "line number": [
      162
     ]
    },
    "pyarrow.int32": {
     "line number": [
      162,
      163
     ]
    },
    "pyarrow.string": {
     "line number": [
      162
     ]
    },
    "pyarrow.types.is_dictionary": {
     "line number": [
      162,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_float_value": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      954
     ]
    },
    "pyarrow.types.is_float_value": {
     "line number": [
      952,
      953,
      954,
      955
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_floating": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "pyarrow.float16": {
     "line number": [
      109
     ]
    },
    "pyarrow.float32": {
     "line number": [
      109
     ]
    },
    "pyarrow.float64": {
     "line number": [
      109
     ]
    },
    "pyarrow.int32": {
     "line number": [
      112
     ]
    },
    "pyarrow.types.is_floating": {
     "line number": [
      110,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "pyarrow.float32": {
     "line number": [
      104,
      105
     ]
    },
    "pyarrow.int16": {
     "line number": [
      90
     ]
    },
    "pyarrow.int32": {
     "line number": [
      90
     ]
    },
    "pyarrow.int64": {
     "line number": [
      90
     ]
    },
    "pyarrow.int8": {
     "line number": [
      90
     ]
    },
    "pyarrow.types.is_integer": {
     "line number": [
      94,
      104
     ]
    },
    "pyarrow.types.is_signed_integer": {
     "line number": [
      97,
      102,
      105
     ]
    },
    "pyarrow.types.is_unsigned_integer": {
     "line number": [
      98,
      101
     ]
    },
    "pyarrow.uint16": {
     "line number": [
      91
     ]
    },
    "pyarrow.uint32": {
     "line number": [
      91
     ]
    },
    "pyarrow.uint64": {
     "line number": [
      91
     ]
    },
    "pyarrow.uint8": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer_value": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": {
    "numpy.int64": {
     "line number": [
      947
     ]
    },
    "pyarrow.types.is_integer_value": {
     "line number": [
      946,
      947,
      948
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_list": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "pyarrow.int32": {
     "line number": [
      132,
      133,
      134,
      146
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      133
     ]
    },
    "pyarrow.list_": {
     "line number": [
      132,
      134
     ]
    },
    "pyarrow.types.is_fixed_size_list": {
     "line number": [
      138,
      141,
      142
     ]
    },
    "pyarrow.types.is_large_list": {
     "line number": [
      137,
      139,
      144
     ]
    },
    "pyarrow.types.is_list": {
     "line number": [
      136,
      140,
      143,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_map": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      155,
      156
     ]
    },
    "pyarrow.int32": {
     "line number": [
      150,
      153
     ]
    },
    "pyarrow.int8": {
     "line number": [
      155,
      156
     ]
    },
    "pyarrow.list_": {
     "line number": [
      157
     ]
    },
    "pyarrow.map_": {
     "line number": [
      150
     ]
    },
    "pyarrow.struct": {
     "line number": [
      155
     ]
    },
    "pyarrow.types.is_map": {
     "line number": [
      152,
      153,
      158
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_nested_or_struct": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      167,
      168,
      169
     ]
    },
    "pyarrow.int32": {
     "line number": [
      167,
      172,
      175,
      176,
      177
     ]
    },
    "pyarrow.int8": {
     "line number": [
      168
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      176
     ]
    },
    "pyarrow.list_": {
     "line number": [
      172,
      175
     ]
    },
    "pyarrow.string": {
     "line number": [
      169
     ]
    },
    "pyarrow.struct": {
     "line number": [
      167
     ]
    },
    "pyarrow.types.is_nested": {
     "line number": [
      174,
      175,
      176,
      177
     ]
    },
    "pyarrow.types.is_struct": {
     "line number": [
      171,
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_null": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "pyarrow.int32": {
     "line number": [
      117
     ]
    },
    "pyarrow.list_": {
     "line number": [
      117
     ]
    },
    "pyarrow.null": {
     "line number": [
      116
     ]
    },
    "pyarrow.types.is_null": {
     "line number": [
      116,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_primitive": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "pyarrow.int32": {
     "line number": [
      255,
      256
     ]
    },
    "pyarrow.list_": {
     "line number": [
      256
     ]
    },
    "pyarrow.types.is_primitive": {
     "line number": [
      255,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_temporal_date_time_timestamp": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "pyarrow.date32": {
     "line number": [
      219
     ]
    },
    "pyarrow.date64": {
     "line number": [
      219
     ]
    },
    "pyarrow.duration": {
     "line number": [
      222
     ]
    },
    "pyarrow.int32": {
     "line number": [
      251
     ]
    },
    "pyarrow.time32": {
     "line number": [
      220
     ]
    },
    "pyarrow.time64": {
     "line number": [
      220
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      221
     ]
    },
    "pyarrow.types.is_date": {
     "line number": [
      228,
      235,
      241,
      247
     ]
    },
    "pyarrow.types.is_duration": {
     "line number": [
      231,
      237,
      243,
      246
     ]
    },
    "pyarrow.types.is_temporal": {
     "line number": [
      225,
      251
     ]
    },
    "pyarrow.types.is_time": {
     "line number": [
      229,
      234,
      242,
      248
     ]
    },
    "pyarrow.types.is_timestamp": {
     "line number": [
      230,
      236,
      240,
      249
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_union": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "pyarrow.field": {
     "line number": [
      182,
      183,
      184
     ]
    },
    "pyarrow.int32": {
     "line number": [
      182,
      186
     ]
    },
    "pyarrow.int8": {
     "line number": [
      183
     ]
    },
    "pyarrow.lib.UnionMode_DENSE": {
     "line number": [
      181
     ]
    },
    "pyarrow.lib.UnionMode_SPARSE": {
     "line number": [
      181
     ]
    },
    "pyarrow.list_": {
     "line number": [
      186
     ]
    },
    "pyarrow.string": {
     "line number": [
      184
     ]
    },
    "pyarrow.types.is_union": {
     "line number": [
      182,
      186
     ]
    },
    "pyarrow.union": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_key_value_metadata": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      803
     ]
    },
    "TypeError": {
     "line number": [
      759,
      761,
      763
     ]
    },
    "collections.abc.Iterator": {
     "line number": [
      789,
      790,
      791
     ]
    },
    "isinstance": {
     "line number": [
      789,
      790,
      791
     ]
    },
    "len": {
     "line number": [
      741,
      772,
      788
     ]
    },
    "list": {
     "line number": [
      769,
      770,
      771,
      792,
      793,
      794
     ]
    },
    "pyarrow.KeyValueMetadata": {
     "line number": [
      740,
      749,
      750,
      751,
      760,
      762,
      764,
      775,
      804
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      759,
      761,
      763,
      803
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_key_value_metadata_duplicates": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      815
     ]
    },
    "pyarrow.KeyValueMetadata": {
     "line number": [
      813,
      816
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      815
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_large_list_type": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      441
     ]
    },
    "isinstance": {
     "line number": [
      438
     ]
    },
    "pyarrow.LargeListType": {
     "line number": [
      438
     ]
    },
    "pyarrow.large_list": {
     "line number": [
      437,
      442
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      441
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      437,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_list_type": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      432
     ]
    },
    "isinstance": {
     "line number": [
      429
     ]
    },
    "pyarrow.ListType": {
     "line number": [
      429
     ]
    },
    "pyarrow.int64": {
     "line number": [
      428,
      430
     ]
    },
    "pyarrow.list_": {
     "line number": [
      428,
      433
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      432
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_map_type": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      451,
      453
     ]
    },
    "isinstance": {
     "line number": [
      447
     ]
    },
    "pyarrow.MapType": {
     "line number": [
      447
     ]
    },
    "pyarrow.int32": {
     "line number": [
      446,
      449,
      454
     ]
    },
    "pyarrow.map_": {
     "line number": [
      446,
      452,
      454
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      451,
      453
     ]
    },
    "pyarrow.utf8": {
     "line number": [
      446,
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_null_field_may_not_be_non_nullable": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      122
     ]
    },
    "pyarrow.field": {
     "line number": [
      123
     ]
    },
    "pyarrow.null": {
     "line number": [
      123
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_pickling": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": {
    "hypothesis.example": {
     "line number": [
      971
     ]
    },
    "hypothesis.given": {
     "line number": [
      966
     ]
    },
    "pyarrow.field": {
     "line number": [
      972
     ]
    },
    "pyarrow.null": {
     "line number": [
      972
     ]
    },
    "pyarrow.tests.strategies.all_fields": {
     "line number": [
      968
     ]
    },
    "pyarrow.tests.strategies.all_schemas": {
     "line number": [
      969
     ]
    },
    "pyarrow.tests.strategies.all_types": {
     "line number": [
      967
     ]
    },
    "pyarrow.tests.test_types.pickle": {
     "line number": [
      975,
      976
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_pytz_timezone_roundtrip": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "hypothesis.extra.pytz.timezones": {
     "line number": [
      287
     ]
    },
    "hypothesis.given": {
     "line number": [
      287
     ]
    },
    "pyarrow.lib.string_to_tzinfo": {
     "line number": [
      290
     ]
    },
    "pyarrow.lib.tzinfo_to_string": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_string_to_tzinfo": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": {
    "pyarrow.lib.string_to_tzinfo": {
     "line number": [
      368
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      360
     ]
    },
    "pyarrow.tests.test_types.pytz": {
     "line number": [
      361,
      362,
      363,
      364,
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_duplicate_field_names": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      528
     ]
    },
    "UserWarning": {
     "line number": [
      527
     ]
    },
    "pyarrow.field": {
     "line number": [
      520,
      521,
      522
     ]
    },
    "pyarrow.int32": {
     "line number": [
      521,
      522
     ]
    },
    "pyarrow.int64": {
     "line number": [
      520
     ]
    },
    "pyarrow.struct": {
     "line number": [
      524
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      527,
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_type": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      480
     ]
    },
    "KeyError": {
     "line number": [
      486
     ]
    },
    "TypeError": {
     "line number": [
      490,
      514
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      507
     ]
    },
    "len": {
     "line number": [
      476
     ]
    },
    "list": {
     "line number": [
      477,
      500,
      509
     ]
    },
    "pyarrow.field": {
     "line number": [
      470,
      471,
      472,
      505,
      506
     ]
    },
    "pyarrow.int32": {
     "line number": [
      471,
      472,
      479,
      498,
      499,
      506,
      508
     ]
    },
    "pyarrow.int64": {
     "line number": [
      470,
      497,
      505,
      507
     ]
    },
    "pyarrow.struct": {
     "line number": [
      474,
      497,
      507,
      515
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      480,
      486,
      490,
      514
     ]
    },
    "zip": {
     "line number": [
      493,
      501,
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time32_units": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      402
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      402
     ]
    },
    "pyarrow.time32": {
     "line number": [
      397,
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time64_units": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      413
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      413
     ]
    },
    "pyarrow.time64": {
     "line number": [
      408,
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_timestamp": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      391
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      391
     ]
    },
    "pyarrow.timestamp": {
     "line number": [
      386,
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_timezone_string_roundtrip": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "pyarrow.lib.string_to_tzinfo": {
     "line number": [
      380
     ]
    },
    "pyarrow.lib.tzinfo_to_string": {
     "line number": [
      379
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      372
     ]
    },
    "pyarrow.tests.test_types.pytz": {
     "line number": [
      373,
      374,
      375,
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_equality_operators": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      729,
      732
     ]
    },
    "pyarrow.tests.test_types.get_many_types": {
     "line number": [
      726
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_id": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": {
    "int": {
     "line number": [
      689
     ]
    },
    "isinstance": {
     "line number": [
      689
     ]
    },
    "pyarrow.tests.test_types.get_many_types": {
     "line number": [
      688
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_hashable": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      617,
      621
     ]
    },
    "hash": {
     "line number": [
      618,
      618
     ]
    },
    "len": {
     "line number": [
      620,
      620
     ]
    },
    "pyarrow.tests.test_types.get_many_types": {
     "line number": [
      615
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_picklable": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "pyarrow.tests.test_types.get_many_types": {
     "line number": [
      626
     ]
    },
    "pyarrow.tests.test_types.pickle": {
     "line number": [
      627,
      628
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_weakref": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": {
    "pyarrow.int32": {
     "line number": [
      637,
      639
     ]
    },
    "pyarrow.list_": {
     "line number": [
      639
     ]
    },
    "pyarrow.tests.test_types.get_many_types": {
     "line number": [
      632
     ]
    },
    "pyarrow.tests.test_types.weakref": {
     "line number": [
      633,
      637,
      639
     ]
    },
    "wr": {
     "line number": [
      634,
      637,
      638,
      639,
      640
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_tzinfo_to_string": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "pyarrow.lib.tzinfo_to_string": {
     "line number": [
      270
     ]
    },
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      266,
      267,
      267
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      259
     ]
    },
    "pyarrow.tests.test_types.pytz": {
     "line number": [
      260,
      261,
      264,
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_tzinfo_to_string_errors": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      275
     ]
    },
    "ValueError": {
     "line number": [
      283
     ]
    },
    "pyarrow.lib.tzinfo_to_string": {
     "line number": [
      276,
      284
     ]
    },
    "pyarrow.tests.test_types.datetime": {
     "line number": [
      281,
      281
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      275,
      283
     ]
    },
    "pyarrow.tests.test_types.sys": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      557,
      570,
      574
     ]
    },
    "check_fields": {
     "line number": [
      550,
      554,
      563,
      567
     ]
    },
    "pyarrow.binary": {
     "line number": [
      544
     ]
    },
    "pyarrow.field": {
     "line number": [
      543,
      544
     ]
    },
    "pyarrow.int32": {
     "line number": [
      543
     ]
    },
    "pyarrow.lib.UnionMode_DENSE": {
     "line number": [
      560
     ]
    },
    "pyarrow.lib.UnionMode_SPARSE": {
     "line number": [
      547
     ]
    },
    "pyarrow.list_": {
     "line number": [
      543
     ]
    },
    "pyarrow.tests.test_types.pytest": {
     "line number": [
      557,
      570,
      574
     ]
    },
    "pyarrow.union": {
     "line number": [
      548,
      552,
      558,
      561,
      565,
      571,
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type.check_fields": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "len": {
     "line number": [
      540
     ]
    },
    "range": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.tzst": {
  "data": {
   "shadows": "hypothesis.extra.pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.util.change_cwd": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "pyarrow.tests.util.contextlib": {
     "line number": [
      215
     ]
    },
    "pyarrow.tests.util.os": {
     "line number": [
      217,
      218,
      222
     ]
    },
    "str": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.changed_environ": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "pyarrow.tests.util.contextlib": {
     "line number": [
      199
     ]
    },
    "pyarrow.tests.util.os": {
     "line number": [
      204,
      205,
      210,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.util.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.util.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.util.get_modified_env_with_pythonpath": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "pyarrow.__file__": {
     "line number": [
      177
     ]
    },
    "pyarrow.tests.util.os": {
     "line number": [
      173,
      176,
      177,
      177,
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.invoke_script": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "pyarrow.tests.util.get_modified_env_with_pythonpath": {
     "line number": [
      188
     ]
    },
    "pyarrow.tests.util.os": {
     "line number": [
      190,
      190,
      191
     ]
    },
    "pyarrow.tests.util.subprocess": {
     "line number": [
      196
     ]
    },
    "pyarrow.tests.util.sys": {
     "line number": [
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.make_dataframe": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "numpy.random.randn": {
     "line number": [
      122
     ]
    },
    "pandas.DataFrame": {
     "line number": [
      121
     ]
    },
    "pandas.Index": {
     "line number": [
      123
     ]
    },
    "pyarrow.tests.util.rands": {
     "line number": [
      123
     ]
    },
    "pyarrow.tests.util.string": {
     "line number": [
      122
     ]
    },
    "range": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "_get_use": {
     "line number": [
      156
     ]
    },
    "_leak_check": {
     "line number": [
      168
     ]
    },
    "f": {
     "line number": [
      166
     ]
    },
    "pyarrow.tests.util.psutil": {
     "line number": [
      150
     ]
    },
    "range": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check._get_use": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      154
     ]
    },
    "pyarrow.tests.util.gc": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.memory_leak_check._leak_check": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      161
     ]
    },
    "_get_use": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.util.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.util.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.util.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "pyarrow.tests.util.randdecimal": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86
     ]
    },
    "pyarrow.tests.util.decimal": {
     "line number": [
      94,
      99
     ]
    },
    "pyarrow.tests.util.random": {
     "line number": [
      91,
      97
     ]
    },
    "str": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.util.random_ascii": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "bytes": {
     "line number": [
      105
     ]
    },
    "numpy.random.randint": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.random_seed": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "pyarrow.tests.util.contextlib": {
     "line number": [
      45
     ]
    },
    "pyarrow.tests.util.random": {
     "line number": [
      59,
      60,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.rands": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "list": {
     "line number": [
      113
     ]
    },
    "numpy.array": {
     "line number": [
      112
     ]
    },
    "numpy.random.choice": {
     "line number": [
      114
     ]
    },
    "numpy.str_": {
     "line number": [
      113
     ]
    },
    "pyarrow.tests.util.string": {
     "line number": [
      113,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.randsign": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "pyarrow.tests.util.random": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "pyarrow.tests.util.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.util.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}