{
 "*": {
  "data": {
   "imports": [
    "caffe2.python.caffe2_pybind11_state",
    "caffe2.python.caffe2_pybind11_state_gpu",
    "caffe2.python.caffe2_pybind11_state_hip"
   ]
  },
  "type": "star-import"
 },
 "caffe2": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.AnyExp": {
  "data": {
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.log",
    "caffe2.contrib.playground.AnyExp.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.log",
    "caffe2.contrib.playground.AnyExp.logging",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.add_metric": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.add_plot": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.assembleAllOutputs": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.buildModelAndTrain": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.inspect",
    "caffe2.contrib.playground.AnyExp.log",
    "caffe2.contrib.playground.AnyExp.time",
    "dir",
    "float",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.checkpoint": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.checkpoint",
    "float"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.createMetricsPlotsModelsOutputs": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.extendMetricsOutput": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_conclude_operator": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_epoch_aftRunNet": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_epoch_b4RunNet": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_iter_aftRunNetAftTest": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_iter_aftRunNetB4Test": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.fun_per_iter_b4RunNet": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_checkpoint_path": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_forward_pass_builder_fun": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_input_builder_fun": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_optimizer_fun": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_param_update_builder_fun": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.gen_rendezvous_ctx": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.getMeterClass": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.ModuleRegister"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.get_input_dataset": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.get_model_input_fun": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_logs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_metrics": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "meterClass"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_model": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.init_plots": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.list_of_epoch_iters": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.list_of_epochs": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.loadCheckpoint": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.checkpoint",
    "caffe2.contrib.playground.AnyExp.log",
    "caffe2.contrib.playground.AnyExp.os",
    "caffe2.python.data_parallel_model.FinalizeAfterCheckpoint"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.planning_output": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.prep_a_data_parallel_model": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.log",
    "caffe2.python.data_parallel_model.Parallelize",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.prep_data_parallel_models": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.run_testing_net": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "caffe2.python.timeout_guard.CompleteInTimeOrDie",
    "caffe2.python.workspace.RunNet"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.AnyExpTrainer.run_training_net": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.ModuleRegister": {
  "data": {
   "shadows": "ModuleRegister"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.aquireDatasets": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.ModuleRegister"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.checkpoint": {
  "data": {
   "shadows": "checkpoint"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.createTrainerClass": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.ModuleRegister"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.data_parallel_model": {
  "data": {
   "shadows": "caffe2.python.data_parallel_model"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.initDefaultModuleMap": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.module_map",
    "caffe2.contrib.playground.AnyExp.registerModuleMap"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.initOpts": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.initialize_params_from_file": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.checkpoint"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.log": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.AnyExp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.module_map": {
  "data": {
   "shadows": "module_map"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.overrideAdditionalMethods": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.ModuleRegister"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.registerModuleMap": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.ModuleRegister",
    "caffe2.contrib.playground.AnyExp.module_map"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExp.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.timeout_guard": {
  "data": {
   "shadows": "caffe2.python.timeout_guard"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExp.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.contrib.playground.AnyExp.aquireDatasets",
    "caffe2.contrib.playground.AnyExp.initDefaultModuleMap",
    "caffe2.contrib.playground.AnyExp.initOpts",
    "caffe2.contrib.playground.AnyExpOnTerm.argparse",
    "caffe2.contrib.playground.AnyExpOnTerm.args",
    "caffe2.contrib.playground.AnyExpOnTerm.json",
    "caffe2.contrib.playground.AnyExpOnTerm.log",
    "caffe2.contrib.playground.AnyExpOnTerm.logging",
    "caffe2.contrib.playground.AnyExpOnTerm.opts",
    "caffe2.contrib.playground.AnyExpOnTerm.parser",
    "caffe2.contrib.playground.AnyExpOnTerm.ret",
    "caffe2.contrib.playground.AnyExpOnTerm.runShardedTrainLoop",
    "caffe2.contrib.playground.AnyExpOnTerm.trainFun",
    "str"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.AnyExp": {
  "data": {
   "shadows": "caffe2.contrib.playground.AnyExp"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.args": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.checkpoint": {
  "data": {
   "shadows": "caffe2.contrib.playground.checkpoint"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.log": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.opts": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.parser": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.ret": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.runShardedTrainLoop": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExpOnTerm.log",
    "caffe2.contrib.playground.AnyExpOnTerm.os",
    "caffe2.contrib.playground.checkpoint.initialize_params_from_file",
    "myTrainFun",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.trainFun": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.trainFun.simpleTrainFun": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.contrib.playground.AnyExp.createTrainerClass",
    "caffe2.contrib.playground.AnyExp.overrideAdditionalMethods",
    "trainerClass"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.AnyExpOnTerm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.contrib.playground.meter.Meter"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.Add": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.Compute": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.Reset": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.ComputeLoss.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_loss.Meter": {
  "data": {
   "shadows": "caffe2.contrib.playground.meter"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_loss.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.contrib.playground.meter.Meter"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.Add": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "len",
    "numpy.argsort",
    "numpy.repeat",
    "numpy.squeeze",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.Compute": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.Reset": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.ComputeTopKAccuracy.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.Meter": {
  "data": {
   "shadows": "caffe2.contrib.playground.meter"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.compute_topk_accuracy.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.meter": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.meter.Meter": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.playground.meter.Meter.Add": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.meter.Meter.Compute": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.meter.Meter.Reset": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.meter.Meter.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.meter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.meter.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.meter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.meter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.meter.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.module_map.ComputeLoss": {
  "data": {
   "shadows": "caffe2.contrib.playground.compute_loss"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.ComputeTopKAccuracy": {
  "data": {
   "shadows": "caffe2.contrib.playground.compute_topk_accuracy"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.IN1k_resnet": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.IN1k_resnet"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.IN1k_resnet_no_test_model": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.caffe2_resnet50_default_forward": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.caffe2_resnet50_default_param_update": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.explicit_resnet_forward": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.explicit_resnet_param_update": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.gfs_IN1k": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.gfs_IN1k"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.output_generator": {
  "data": {
   "shadows": "caffe2.contrib.playground.output_generator"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.override_no_test_model_no_checkpoint": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.rendezvous_filestore": {
  "data": {
   "shadows": "caffe2.contrib.playground.resnetdemo.rendezvous_filestore"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.module_map.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.output_generator": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.output_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.output_generator.assembleAllOutputs": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "caffe2.contrib.playground.output_generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.output_generator.fun_conclude_operator": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.EuthanizeIfNecessary"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.output_generator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.output_generator.timeout_guard": {
  "data": {
   "shadows": "caffe2.python.timeout_guard"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.output_generator.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.fun_per_epoch_b4RunNet": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.fun_per_iter_b4RunNet": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.init_model": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.run_training_net": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.CompleteInTimeOrDie",
    "caffe2.python.workspace.RunNet"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.timeout_guard": {
  "data": {
   "shadows": "caffe2.python.timeout_guard"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.fun_per_epoch_b4RunNet": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.fun_per_iter_b4RunNet": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.init_model": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.run_training_net": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.CompleteInTimeOrDie",
    "caffe2.python.workspace.RunNet"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.timeout_guard": {
  "data": {
   "shadows": "caffe2.python.timeout_guard"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.IN1k_resnet_no_test_model.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.gen_forward_pass_builder_fun": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.gen_forward_pass_builder_fun.create_resnet50_model_ops": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.models.resnet.create_resnet50"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.resnet": {
  "data": {
   "shadows": "caffe2.python.models.resnet"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_forward.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.gen_param_update_builder_fun": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.gen_param_update_builder_fun.add_parameter_update_ops": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.caffe2_resnet50_default_param_update.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward": {
  "data": {
   "symbols_in_volume": [
    "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.log",
    "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.BLOCK_CONFIG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper": {
  "data": {
   "lineno": 135
  },
  "type": "class"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.__init__": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.add_shortcut": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.basic_block": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.bottleneck_block": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.conv_bn": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.conv_bn_relu": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.group_bottleneck_block": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.multiway_bottleneck_block": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper.residual_layer": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "block_fn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.gen_forward_pass_builder_fun": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.gen_forward_pass_builder_fun.model_creator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.resnet_imagenet_create_model"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.log": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.resnet_imagenet_create_model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.BLOCK_CONFIG",
    "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.ResNetModelHelper",
    "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.log"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_forward.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.gen_param_update_builder_fun": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.CreateBlob",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.gen_param_update_builder_fun.add_parameter_update_ops": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.explicit_resnet_param_update.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.gen_input_builder_fun": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.gen_input_builder_fun.AddImageInput": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.gen_input_builder_fun.add_image_input": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "AddImageInput"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.get_input_dataset": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.get_model_input_fun": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.gfs_IN1k.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.checkpoint": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.prep_data_parallel_models": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.run_testing_net": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.override_no_test_model_no_checkpoint.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.dyndep.InitOpsLibrary"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.gen_rendezvous_ctx": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.playground.resnetdemo.rendezvous_filestore.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.contrib.tensorboard.tensorboard.cli"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard.CODE_TEMPLATE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.contrib.tensorboard.tensorboard.Config": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.tensorboard.tensorboard.IFRAME_TEMPLATE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "caffe2.contrib.tensorboard.tensorboard.IPython.display": {
  "data": {
   "shadows": "IPython.display"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard._show_graph": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard.CODE_TEMPLATE",
    "caffe2.contrib.tensorboard.tensorboard.Config",
    "caffe2.contrib.tensorboard.tensorboard.IFRAME_TEMPLATE",
    "numpy.random.rand",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.cli": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard.click"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.google.protobuf.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.graph_def_to_event": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "tensorflow.Event"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.tb_exporter": {
  "data": {
   "shadows": "caffe2.contrib.tensorboard.tensorboard_exporter"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "__name__",
    "caffe2.contrib.tensorboard.tensorboard.cli",
    "caffe2.contrib.tensorboard.tensorboard.click",
    "caffe2.contrib.tensorboard.tensorboard.collections",
    "caffe2.contrib.tensorboard.tensorboard.logging",
    "caffe2.contrib.tensorboard.tensorboard.write_events",
    "events",
    "get_named_summaries",
    "len",
    "named_summaries_to_events",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.get_named_summaries": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard.os",
    "parse_summary"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.inferred_histo": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "hash",
    "len",
    "numpy.clip",
    "numpy.histogram",
    "numpy.random.randn",
    "numpy.random.seed",
    "tensorflow.HistogramProto"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.named_summaries_to_events": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "enumerate",
    "event",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.named_summaries_to_events.event": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "inferred_histo",
    "int",
    "tensorflow.Event",
    "tensorflow.Summary",
    "tensorflow.Summary.Value",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_events.parse_summary": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "S",
    "float",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_graphs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "__name__",
    "caffe2.contrib.tensorboard.tensorboard.cli",
    "caffe2.contrib.tensorboard.tensorboard.click",
    "caffe2.contrib.tensorboard.tensorboard.graph_def_to_event",
    "caffe2.contrib.tensorboard.tensorboard.logging",
    "caffe2.contrib.tensorboard.tensorboard.write_events",
    "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def",
    "enumerate",
    "events",
    "len",
    "parse_net_def"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tensorboard_graphs.parse_net_def": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.Net",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard.visualize_cnn": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard._show_graph",
    "caffe2.contrib.tensorboard.tensorboard_exporter.cnn_to_graph_def"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.visualize_net": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard._show_graph",
    "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.visualize_ops": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard._show_graph",
    "caffe2.contrib.tensorboard.tensorboard_exporter.ops_to_graph_def"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard.write_events": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "events",
    "hasattr",
    "len",
    "tensorflow.summary",
    "tensorflow.summary.FileWriter",
    "tensorflow.train.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter": {
  "data": {},
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._rename_all",
    "f"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope.f": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._add_tf_shape": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto",
    "tensorflow.core.framework.tensor_shape_pb2.TensorShapeProto.Dim"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._blob_to_node": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "all",
    "caffe2.contrib.tensorboard.tensorboard_exporter._add_tf_shape",
    "caffe2.contrib.tensorboard.tensorboard_exporter._tf_device",
    "hasattr",
    "input",
    "input.device_option",
    "tensorflow",
    "tensorflow.NodeDef",
    "tensorflow.core.framework.graph_pb2.NodeDef"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.core.IR",
    "list",
    "set",
    "ssa_name",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa.ssa_name": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._make_unique_name"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._fill_missing_operator_names": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._make_unique_name",
    "caffe2.contrib.tensorboard.tensorboard_exporter.os",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._make_unique_name": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._operator_to_node": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._add_tf_shape",
    "caffe2.contrib.tensorboard.tensorboard_exporter._set_tf_attr",
    "caffe2.contrib.tensorboard.tensorboard_exporter._tf_device",
    "hasattr",
    "tensorflow",
    "tensorflow.NodeDef",
    "tensorflow.core.framework.graph_pb2.NodeDef"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._operators_to_graph_def": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope",
    "caffe2.contrib.tensorboard.tensorboard_exporter._blob_to_node",
    "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa",
    "caffe2.contrib.tensorboard.tensorboard_exporter._fill_missing_operator_names",
    "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
    "caffe2.contrib.tensorboard.tensorboard_exporter._operator_to_node",
    "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons",
    "enumerate",
    "g",
    "g.node.extend",
    "hasattr",
    "set",
    "tensorflow",
    "tensorflow.GraphDef",
    "tensorflow.core.framework.graph_pb2.GraphDef"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._propagate_device_option": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._remap_keys": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter.six",
    "f"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._rename_all": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._remap_keys",
    "g",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._rename_all.g": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._make_unique_name",
    "f"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._rename_all",
    "f"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons.f": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._set_tf_attr": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "builtins.bytes",
    "caffe2.contrib.tensorboard.tensorboard_exporter._add_tf_shape",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._tf_device": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter._try_get_shapes": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Exception",
    "caffe2.contrib.tensorboard.tensorboard_exporter.logging",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.bytes": {
  "data": {
   "shadows": "builtins.bytes"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.cnn_to_graph_def": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._operators_to_graph_def",
    "caffe2.contrib.tensorboard.tensorboard_exporter._propagate_device_option",
    "caffe2.contrib.tensorboard.tensorboard_exporter._try_get_shapes",
    "caffe2.contrib.tensorboard.tensorboard_exporter.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.ops_to_graph_def": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._operators_to_graph_def",
    "caffe2.contrib.tensorboard.tensorboard_exporter.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.tensor_shape_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.tensor_shape_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.contrib.tensorboard.tensorboard_exporter_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.EXPECTED": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_simple_cnnmodel": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter.cnn_to_graph_def",
    "caffe2.contrib.tensorboard.tensorboard_exporter_test.EXPECTED",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.NameScope",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_adding_gradient_scope_does_no_fancy_renaming": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._add_gradient_scope",
    "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_auto_ssa_gives_non_colliding_names": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._convert_to_ssa",
    "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_operators_gets_non_colliding_names": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._fill_missing_operator_names",
    "caffe2.proto.caffe2_pb2.OperatorDef"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.TensorboardExporterTest.test_that_replacing_colons_gives_non_colliding_names": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_exporter._get_blob_names",
    "caffe2.contrib.tensorboard.tensorboard_exporter._replace_colons",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.tb": {
  "data": {
   "shadows": "caffe2.contrib.tensorboard.tensorboard_exporter"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_exporter_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.contrib.tensorboard.tensorboard_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.TensorboardTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.TensorboardTest.test_events": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard.cli",
    "caffe2.contrib.tensorboard.tensorboard_test.os",
    "caffe2.contrib.tensorboard.tensorboard_test.tempfile",
    "enumerate",
    "events",
    "len",
    "list",
    "numpy.random.randn",
    "numpy.random.seed",
    "open",
    "str",
    "tensorflow.train.summary_iterator"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.TensorboardTest.test_tensorboard_graphs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.contrib.tensorboard.tensorboard.cli",
    "caffe2.contrib.tensorboard.tensorboard_exporter.nets_to_graph_def",
    "caffe2.contrib.tensorboard.tensorboard_test.os",
    "caffe2.contrib.tensorboard.tensorboard_test.tempfile",
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.image_input",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.core.NameScope",
    "caffe2.python.model_helper.ModelHelper",
    "enumerate",
    "events",
    "len",
    "list",
    "open",
    "str",
    "tensorflow.train.summary_iterator",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.click.testing": {
  "data": {
   "shadows": "click.testing"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.tb": {
  "data": {
   "shadows": "caffe2.contrib.tensorboard.tensorboard"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.tb_exporter": {
  "data": {
   "shadows": "caffe2.contrib.tensorboard.tensorboard_exporter"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.contrib.tensorboard.tensorboard_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.proto": {
  "data": {},
  "type": "module"
 },
 "caffe2.proto.caffe2_legacy_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_legacy_pb2.CaffeDatum",
    "caffe2.proto.caffe2_legacy_pb2.DESCRIPTOR",
    "caffe2.proto.caffe2_legacy_pb2._CAFFEDATUM",
    "caffe2.proto.caffe2_legacy_pb2._LEGACYPADDING",
    "caffe2.proto.caffe2_legacy_pb2._b",
    "caffe2.proto.caffe2_legacy_pb2._sym_db",
    "caffe2.proto.caffe2_legacy_pb2.sys",
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.caffe2_legacy_pb2.CAFFE_LEGACY_POOLING": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2.CaffeDatum": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2.LegacyPadding": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2.NOTSET": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2.SAME": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2.VALID": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2._CAFFEDATUM": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2._LEGACYPADDING": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_legacy_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_legacy_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_legacy_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_legacy_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_legacy_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_legacy_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_legacy_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.Argument",
    "caffe2.proto.caffe2_pb2.BlobProto",
    "caffe2.proto.caffe2_pb2.DBReaderProto",
    "caffe2.proto.caffe2_pb2.DESCRIPTOR",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.proto.caffe2_pb2.ExecutionStep",
    "caffe2.proto.caffe2_pb2.ExternalDataProto",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.proto.caffe2_pb2.PlanDef",
    "caffe2.proto.caffe2_pb2.QTensorProto",
    "caffe2.proto.caffe2_pb2.TensorProto",
    "caffe2.proto.caffe2_pb2.TensorProtos",
    "caffe2.proto.caffe2_pb2.TensorShape",
    "caffe2.proto.caffe2_pb2.TensorShapes",
    "caffe2.proto.caffe2_pb2._ARGUMENT",
    "caffe2.proto.caffe2_pb2._BLOBPROTO",
    "caffe2.proto.caffe2_pb2._DBREADERPROTO",
    "caffe2.proto.caffe2_pb2._DEVICEOPTION",
    "caffe2.proto.caffe2_pb2._DEVICETYPEPROTO",
    "caffe2.proto.caffe2_pb2._EXECUTIONSTEP",
    "caffe2.proto.caffe2_pb2._EXTERNALDATAPROTO",
    "caffe2.proto.caffe2_pb2._EXTERNALDATAPROTO_SOURCETYPE",
    "caffe2.proto.caffe2_pb2._NETDEF",
    "caffe2.proto.caffe2_pb2._OPERATORDEF",
    "caffe2.proto.caffe2_pb2._PLANDEF",
    "caffe2.proto.caffe2_pb2._QTENSORPROTO",
    "caffe2.proto.caffe2_pb2._TENSORPROTO",
    "caffe2.proto.caffe2_pb2._TENSORPROTOS",
    "caffe2.proto.caffe2_pb2._TENSORPROTO_DATATYPE",
    "caffe2.proto.caffe2_pb2._TENSORPROTO_SEGMENT",
    "caffe2.proto.caffe2_pb2._TENSORPROTO_STORAGETYPE",
    "caffe2.proto.caffe2_pb2._TENSORSHAPE",
    "caffe2.proto.caffe2_pb2._TENSORSHAPES",
    "caffe2.proto.caffe2_pb2._b",
    "caffe2.proto.caffe2_pb2._sym_db",
    "caffe2.proto.caffe2_pb2.sys",
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.caffe2_pb2.Argument": {
  "data": {
   "lineno": 1368
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.BlobProto": {
  "data": {
   "lineno": 1410
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.DBReaderProto": {
  "data": {
   "lineno": 1417
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.DeviceOption": {
  "data": {
   "lineno": 1375
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.DeviceTypeProto": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.ExecutionStep": {
  "data": {
   "lineno": 1396
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.ExternalDataProto": {
  "data": {
   "lineno": 1318
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.NetDef": {
  "data": {
   "lineno": 1389
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.OperatorDef": {
  "data": {
   "lineno": 1382
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_COMPILE_TIME_MAX_DEVICE_TYPES": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_CPU": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_CUDA": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_FPGA": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_HIP": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_IDEEP": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_MKLDNN": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_ONLY_FOR_TEST": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_OPENCL": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PROTO_OPENGL": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.PlanDef": {
  "data": {
   "lineno": 1403
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.QTensorProto": {
  "data": {
   "lineno": 1340
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.TensorProto": {
  "data": {
   "lineno": 1325
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.TensorProtos": {
  "data": {
   "lineno": 1347
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.TensorShape": {
  "data": {
   "lineno": 1354
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2.TensorShapes": {
  "data": {
   "lineno": 1361
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._ARGUMENT": {
  "data": {
   "lineno": 634
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._BLOBPROTO": {
  "data": {
   "lineno": 1149
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._DBREADERPROTO": {
  "data": {
   "lineno": 1222
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._DEVICEOPTION": {
  "data": {
   "lineno": 735
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._DEVICETYPEPROTO": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._EXECUTIONSTEP": {
  "data": {
   "lineno": 989
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._EXTERNALDATAPROTO": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._EXTERNALDATAPROTO_SOURCETYPE": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._NETDEF": {
  "data": {
   "lineno": 909
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._OPERATORDEF": {
  "data": {
   "lineno": 801
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._PLANDEF": {
  "data": {
   "lineno": 1104
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._QTENSORPROTO": {
  "data": {
   "lineno": 433
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORPROTO": {
  "data": {
   "lineno": 309
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORPROTOS": {
  "data": {
   "lineno": 513
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORPROTO_DATATYPE": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORPROTO_SEGMENT": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORPROTO_STORAGETYPE": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORSHAPE": {
  "data": {
   "lineno": 544
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._TENSORSHAPES": {
  "data": {
   "lineno": 603
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.proto.caffe2_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "caffe2.proto.caffe2_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.proto.hsm_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.hsm_pb2.DESCRIPTOR",
    "caffe2.proto.hsm_pb2.HierarchyProto",
    "caffe2.proto.hsm_pb2.NodeProto",
    "caffe2.proto.hsm_pb2.PathNodeProto",
    "caffe2.proto.hsm_pb2.PathProto",
    "caffe2.proto.hsm_pb2.TreeProto",
    "caffe2.proto.hsm_pb2._HIERARCHYPROTO",
    "caffe2.proto.hsm_pb2._NODEPROTO",
    "caffe2.proto.hsm_pb2._PATHNODEPROTO",
    "caffe2.proto.hsm_pb2._PATHPROTO",
    "caffe2.proto.hsm_pb2._TREEPROTO",
    "caffe2.proto.hsm_pb2._b",
    "caffe2.proto.hsm_pb2._sym_db",
    "caffe2.proto.hsm_pb2.sys",
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.hsm_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2.HierarchyProto": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2.NodeProto": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2.PathNodeProto": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2.PathProto": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2.TreeProto": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._HIERARCHYPROTO": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._NODEPROTO": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._PATHNODEPROTO": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._PATHPROTO": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._TREEPROTO": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.hsm_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.hsm_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.hsm_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.proto.hsm_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.hsm_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.hsm_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DESCRIPTOR",
    "caffe2.proto.caffe2_pb2._NETDEF",
    "caffe2.proto.caffe2_pb2._PLANDEF",
    "caffe2.proto.metanet_pb2.BlobsMap",
    "caffe2.proto.metanet_pb2.DESCRIPTOR",
    "caffe2.proto.metanet_pb2.MetaNetDef",
    "caffe2.proto.metanet_pb2.ModelInfo",
    "caffe2.proto.metanet_pb2.NetsMap",
    "caffe2.proto.metanet_pb2.PlansMap",
    "caffe2.proto.metanet_pb2.StringMap",
    "caffe2.proto.metanet_pb2._BLOBSMAP",
    "caffe2.proto.metanet_pb2._METANETDEF",
    "caffe2.proto.metanet_pb2._MODELINFO",
    "caffe2.proto.metanet_pb2._NETSMAP",
    "caffe2.proto.metanet_pb2._PLANSMAP",
    "caffe2.proto.metanet_pb2._STRINGMAP",
    "caffe2.proto.metanet_pb2._b",
    "caffe2.proto.metanet_pb2._sym_db",
    "caffe2.proto.metanet_pb2.sys",
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.metanet_pb2.BlobsMap": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2.MetaNetDef": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2.ModelInfo": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2.NetsMap": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2.PlansMap": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2.StringMap": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._BLOBSMAP": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._METANETDEF": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._MODELINFO": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._NETSMAP": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._PLANSMAP": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._STRINGMAP": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.proto.metanet_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2.caffe2_dot_proto_dot_caffe2__pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.metanet_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.proto.predictor_consts_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.predictor_consts_pb2.DESCRIPTOR",
    "caffe2.proto.predictor_consts_pb2.PredictorConsts",
    "caffe2.proto.predictor_consts_pb2._PREDICTORCONSTS",
    "caffe2.proto.predictor_consts_pb2._b",
    "caffe2.proto.predictor_consts_pb2._sym_db",
    "caffe2.proto.predictor_consts_pb2.sys",
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.predictor_consts_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.proto.predictor_consts_pb2.PredictorConsts": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "caffe2.proto.predictor_consts_pb2._PREDICTORCONSTS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.proto.predictor_consts_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.predictor_consts_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.predictor_consts_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.predictor_consts_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.predictor_consts_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.proto.predictor_consts_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.predictor_consts_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.predictor_consts_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.proto.prof_dag_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.prof_dag_pb2.BlobProfile",
    "caffe2.proto.prof_dag_pb2.DESCRIPTOR",
    "caffe2.proto.prof_dag_pb2.ProfDAGProto",
    "caffe2.proto.prof_dag_pb2.ProfDAGProtos",
    "caffe2.proto.prof_dag_pb2.TwoNumberStatsProto",
    "caffe2.proto.prof_dag_pb2._BLOBPROFILE",
    "caffe2.proto.prof_dag_pb2._PROFDAGPROTO",
    "caffe2.proto.prof_dag_pb2._PROFDAGPROTOS",
    "caffe2.proto.prof_dag_pb2._TWONUMBERSTATSPROTO",
    "caffe2.proto.prof_dag_pb2._b",
    "caffe2.proto.prof_dag_pb2._sym_db",
    "caffe2.proto.prof_dag_pb2.sys",
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.prof_dag_pb2.BlobProfile": {
  "data": {
   "lineno": 224
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2.ProfDAGProto": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2.ProfDAGProtos": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2.TwoNumberStatsProto": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._BLOBPROFILE": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._PROFDAGPROTO": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._PROFDAGPROTOS": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._TWONUMBERSTATSPROTO": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.prof_dag_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.prof_dag_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.prof_dag_pb2._sym_db": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.proto.prof_dag_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.prof_dag_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.prof_dag_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DESCRIPTOR",
    "caffe2.proto.caffe2_pb2._NETDEF",
    "caffe2.proto.caffe2_pb2._TENSORPROTO_DATATYPE",
    "caffe2.proto.torch_pb2.DESCRIPTOR",
    "caffe2.proto.torch_pb2.ModelDef",
    "caffe2.proto.torch_pb2.ModuleDef",
    "caffe2.proto.torch_pb2.ParameterDef",
    "caffe2.proto.torch_pb2.RecordRef",
    "caffe2.proto.torch_pb2.TensorDef",
    "caffe2.proto.torch_pb2._MODELDEF",
    "caffe2.proto.torch_pb2._MODULEDEF",
    "caffe2.proto.torch_pb2._PARAMETERDEF",
    "caffe2.proto.torch_pb2._PROTOVERSION",
    "caffe2.proto.torch_pb2._RECORDREF",
    "caffe2.proto.torch_pb2._TENSORDEF",
    "caffe2.proto.torch_pb2._b",
    "caffe2.proto.torch_pb2._sym_db",
    "caffe2.proto.torch_pb2.sys",
    "dict",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.internal.enum_type_wrapper.EnumTypeWrapper",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default"
   ]
  },
  "type": "module"
 },
 "caffe2.proto.torch_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.ModelDef": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.ModuleDef": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.PROTO_VERSION_NEWEST": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.ParameterDef": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.ProtoVersion": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.RecordRef": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2.TensorDef": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._MODELDEF": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._MODULEDEF": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._PARAMETERDEF": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._PROTOVERSION": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._RECORDREF": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._TENSORDEF": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._b": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2._sym_db": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.proto.torch_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2.caffe2_dot_proto_dot_caffe2__pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2.enum_type_wrapper": {
  "data": {
   "shadows": "google.protobuf.internal.enum_type_wrapper"
  },
  "type": "import"
 },
 "caffe2.proto.torch_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.COMPILE_TIME_MAX_DEVICE_TYPES",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.proto.caffe2_pb2.HIP",
    "caffe2.proto.caffe2_pb2.IDEEP",
    "caffe2.proto.caffe2_pb2.MKLDNN",
    "caffe2.proto.caffe2_pb2.ONLY_FOR_TEST",
    "caffe2.proto.caffe2_pb2.OPENCL",
    "caffe2.proto.caffe2_pb2.OPENGL",
    "caffe2.proto.caffe2_pb2.PROTO_COMPILE_TIME_MAX_DEVICE_TYPES",
    "caffe2.proto.caffe2_pb2.PROTO_CPU",
    "caffe2.proto.caffe2_pb2.PROTO_CUDA",
    "caffe2.proto.caffe2_pb2.PROTO_HIP",
    "caffe2.proto.caffe2_pb2.PROTO_IDEEP",
    "caffe2.proto.caffe2_pb2.PROTO_MKLDNN",
    "caffe2.proto.caffe2_pb2.PROTO_ONLY_FOR_TEST",
    "caffe2.proto.caffe2_pb2.PROTO_OPENCL",
    "caffe2.proto.caffe2_pb2.PROTO_OPENGL",
    "caffe2.python.dll_paths",
    "caffe2.python.get_nvToolsExt_path",
    "caffe2.python.os",
    "caffe2.python.platform",
    "caffe2.python.py_dll_path",
    "caffe2.python.sys",
    "caffe2.python.th_dll_path",
    "caffe2.python.th_root"
   ]
  },
  "type": "module"
 },
 "caffe2.python._import_c_extension": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "caffe2.python._import_c_extension.RTLD_LAZY",
    "caffe2.python._import_c_extension._TensorCPU_reshape",
    "caffe2.python._import_c_extension._TensorCPU_shape",
    "caffe2.python._import_c_extension.atexit",
    "caffe2.python._import_c_extension.logging",
    "caffe2.python._import_c_extension.sys",
    "caffe2.python.extension_loader.DlopenGuard",
    "num_cuda_devices",
    "num_hip_devices",
    "property",
    "str"
   ]
  },
  "type": "module"
 },
 "caffe2.python._import_c_extension.RTLD_LAZY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python._import_c_extension._TensorCPU_reshape": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python._import_c_extension._TensorCPU_shape": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python._import_c_extension.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "caffe2.python._import_c_extension.extension_loader": {
  "data": {
   "shadows": "caffe2.python.extension_loader"
  },
  "type": "import"
 },
 "caffe2.python._import_c_extension.has_gpu_support": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python._import_c_extension.has_hip_support": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "caffe2.python._import_c_extension.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python._import_c_extension.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.allcompare_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.allcompare_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.TemporaryDirectory": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "caffe2.python.allcompare_test.TemporaryDirectory.__enter__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.allcompare_test.tempfile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.allcompare_test.TemporaryDirectory.__exit__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.allcompare_test.shutil"
   ]
  },
  "type": "function"
 },
 "caffe2.python.allcompare_test.TestAllCompare": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.allcompare_test.TestAllCompare.test_allcompare": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.allcompare_test.TemporaryDirectory",
    "caffe2.python.allcompare_test.allcompare_process",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "multiprocessing.Process",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.ranf",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.allcompare_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.allcompare_process": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.allcompare_test.op_engine",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.data_parallel_model._RunComparison",
    "caffe2.python.dyndep.InitOpsLibrary",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.allcompare_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.data_parallel_model": {
  "data": {
   "shadows": "caffe2.python.data_parallel_model"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.op_engine": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.allcompare_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.allcompare_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.attention": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.attention.AttentionType": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "class"
 },
 "caffe2.python.attention._apply_fc_weight_for_sum_match": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.attention.s",
    "caffe2.python.brew.fc",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention._calc_attention_logits_from_sum_match": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.attention.s",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention._calc_attention_weights": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.attention.s",
    "caffe2.python.brew.softmax"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention._calc_weighted_context": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.attention.s",
    "caffe2.python.brew.batch_mat_mul"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.attention.apply_dot_attention": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "caffe2.python.attention._calc_attention_weights",
    "caffe2.python.attention._calc_weighted_context",
    "caffe2.python.attention.s",
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention.apply_recurrent_attention": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "caffe2.python.attention._apply_fc_weight_for_sum_match",
    "caffe2.python.attention._calc_attention_logits_from_sum_match",
    "caffe2.python.attention._calc_attention_weights",
    "caffe2.python.attention._calc_weighted_context",
    "caffe2.python.attention.s"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention.apply_regular_attention": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "caffe2.python.attention._apply_fc_weight_for_sum_match",
    "caffe2.python.attention._calc_attention_logits_from_sum_match",
    "caffe2.python.attention._calc_attention_weights",
    "caffe2.python.attention._calc_weighted_context",
    "caffe2.python.attention.s"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention.apply_soft_coverage_attention": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "caffe2.python.attention._apply_fc_weight_for_sum_match",
    "caffe2.python.attention._calc_attention_logits_from_sum_match",
    "caffe2.python.attention._calc_attention_weights",
    "caffe2.python.attention._calc_weighted_context",
    "caffe2.python.attention.s",
    "caffe2.python.brew.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.attention.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.attention.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.attention.s": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.attention.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.benchmark_generator.argparse",
    "caffe2.python.benchmark_generator.args",
    "caffe2.python.benchmark_generator.main",
    "caffe2.python.benchmark_generator.parse_kwarg",
    "caffe2.python.benchmark_generator.parser"
   ]
  },
  "type": "module"
 },
 "caffe2.python.benchmark_generator.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.args": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "caffe2.python.benchmark_generator.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.main": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "add_op",
    "caffe2.python.brew",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.predictor.mobile_exporter.Export",
    "caffe2.python.workspace",
    "caffe2.python.workspace.RunNetOnce",
    "dict",
    "getattr",
    "int",
    "make_blob_on_context",
    "numpy.float32",
    "numpy.random.rand",
    "open",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.benchmark_generator.main.make_blob_on_context": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.utils.MakeArgument"
   ]
  },
  "type": "function"
 },
 "caffe2.python.benchmark_generator.mobile_exporter": {
  "data": {
   "shadows": "caffe2.python.predictor.mobile_exporter"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.parse_kwarg": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.benchmark_generator.string",
    "float",
    "int",
    "map"
   ]
  },
  "type": "function"
 },
 "caffe2.python.benchmark_generator.parser": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "caffe2.python.benchmark_generator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.benchmark_generator.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.binarysize": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.binarysize.main",
    "caffe2.python.binarysize.sys"
   ]
  },
  "type": "module"
 },
 "caffe2.python.binarysize.GetSymbolTrie": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.binarysize.Trie",
    "caffe2.python.binarysize.subprocess",
    "caffe2.python.binarysize.sys",
    "int",
    "len",
    "print",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.binarysize.MaybeAddColor": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "caffe2.python.binarysize.PrintTrie": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "caffe2.python.binarysize.MaybeAddColor",
    "caffe2.python.binarysize.ReadableSize",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.binarysize.ReadableSize": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.binarysize.Trie": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.binarysize.Trie.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "caffe2.python.binarysize.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.binarysize.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.binarysize.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.binarysize.main": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.binarysize.GetSymbolTrie",
    "caffe2.python.binarysize.PrintTrie",
    "caffe2.python.binarysize.argparse",
    "caffe2.python.binarysize.sys",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.binarysize.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.binarysize.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "caffe2.python.binarysize.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.binarysize.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.brew": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.brew.HelperWrapper",
    "caffe2.python.brew.sys"
   ]
  },
  "type": "module"
 },
 "caffe2.python.brew.HelperWrapper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "iter",
    "object",
    "sum"
   ]
  },
  "type": "class"
 },
 "caffe2.python.brew.HelperWrapper.Register": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.__getattr__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.__getattr__.scope_wrapper": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.brew.copy",
    "caffe2.python.brew.inspect",
    "caffe2.python.model_helper.ModelHelper",
    "func",
    "get_current_scope",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "caffe2.python.brew.HelperWrapper.has_helper": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "isinstance",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.brew.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.brew.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "caffe2.python.brew.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.brew.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.brew.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "caffe2.python.brew.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.brew.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.brew.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.brew_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.brew_test.BrewGPUTest": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "caffe2.python.brew_test.unittest",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.brew_test.BrewGPUTest.test_relu": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "caffe2.python.brew.relu",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewGPUTest.test_tanh": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "caffe2.python.brew.tanh",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.ones",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.brew_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.brew_test.BrewTest.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.brew.Register",
    "caffe2.python.brew.has_helper",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.setUp.myhelper": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.setUp.myhelper2": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_arg_scope": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "caffe2.python.brew.arg_scope",
    "caffe2.python.brew.myhelper",
    "caffe2.python.brew.myhelper2"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_arg_scope_nested": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python.brew.arg_scope",
    "caffe2.python.brew.myhelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_arg_scope_single": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.brew.arg_scope",
    "caffe2.python.brew.conv",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_cnn_model_helper_deprecated": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_cond": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "caffe2.python.brew.cond",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_double_register": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "AttributeError",
    "caffe2.python.brew.Register"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_dropout": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abs",
    "caffe2.python.brew.dropout",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_fc": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_get_params": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
    "caffe2.python.scope.NameScope",
    "param",
    "to_str_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_get_params.param": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_get_params.to_str_list": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_has_helper": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.has_helper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_has_helper.myhelper3": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_loop": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "caffe2.python.brew.loop",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_model_helper": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "caffe2.python.brew.arg_scope",
    "caffe2.python.brew.conv",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_param_consistence": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_relu": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.brew.relu",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_tanh": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.brew.tanh",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.ones",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.BrewTest.test_validate": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.brew_test.CNNModelHelper": {
  "data": {
   "shadows": "caffe2.python.cnn.CNNModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.ParameterTags": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterTags"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.brew_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.build": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.define_caffe2_no_operator_schema",
    "caffe2.python._import_c_extension.get_build_options"
   ]
  },
  "type": "module"
 },
 "caffe2.python.build.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.build.CAFFE2_NO_OPERATOR_SCHEMA": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "caffe2.python.build.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.build.build_options": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "caffe2.python.build.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.build.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.build.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.cached_reader.CachedReader": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.db_file_reader.DBFileReader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.cached_reader.CachedReader.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.cached_reader.CachedReader",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cached_reader.CachedReader._init_reader_schema": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "caffe2.python.cached_reader.CachedReader._save_field_blobs_to_db_file": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "caffe2.python.cached_reader.CachedReader.build_cache_step": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.python.cached_reader.os",
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.core.execution_step",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.task.Cluster",
    "caffe2.python.task.TaskGroup"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cached_reader.Cluster": {
  "data": {
   "shadows": "caffe2.python.task.Cluster"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.DBFileReader": {
  "data": {
   "shadows": "caffe2.python.db_file_reader.DBFileReader"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.pipe": {
  "data": {
   "shadows": "caffe2.python.pipeline.pipe"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.cached_reader.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe.proto.caffe_pb2.NetParameter",
    "caffe2.python.caffe_translator.ConvertTensorProtosToInitNet",
    "caffe2.python.caffe_translator.TranslateModel",
    "caffe2.python.caffe_translator.argparse",
    "caffe2.python.caffe_translator.args",
    "caffe2.python.caffe_translator.caffenet",
    "caffe2.python.caffe_translator.caffenet_pretrained",
    "caffe2.python.caffe_translator.external_input",
    "caffe2.python.caffe_translator.external_output",
    "caffe2.python.caffe_translator.init_net",
    "caffe2.python.caffe_translator.input_caffemodel",
    "caffe2.python.caffe_translator.input_proto",
    "caffe2.python.caffe_translator.log",
    "caffe2.python.caffe_translator.logging",
    "caffe2.python.caffe_translator.output_init_net",
    "caffe2.python.caffe_translator.output_predict_net",
    "caffe2.python.caffe_translator.parser",
    "google.protobuf.text_format.Merge",
    "int",
    "open",
    "str"
   ]
  },
  "type": "module"
 },
 "caffe2.python.caffe_translator.AddArgument": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "caffe2.python.utils.MakeArgument"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.BaseTranslate": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.ConvertTensorProtosToInitNet": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.utils.MakeArgument",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateAccuracy": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateBatchNorm": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
    "len",
    "numpy.tile",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateConcat": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateConv": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.caffe_translator._TranslateStridePadKernelHelper",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateConvNd": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateCrop": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.caffe_translator._GetBlobDimMap",
    "int",
    "len",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateData": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateDeconv": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.caffe_translator._TranslateStridePadKernelHelper",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateDropout": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateElementWise": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateFlatten": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateInnerProduct": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateInput": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateInstanceNorm": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateLRN": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "caffe.proto.caffe_pb2.LRNParameter.ACROSS_CHANNELS",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateModel": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatePRelu": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatePool": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "AttributeError",
    "caffe.proto.caffe_pb2.PoolingParameter.AVE",
    "caffe.proto.caffe_pb2.PoolingParameter.MAX",
    "caffe2.proto.caffe2_legacy_pb2.CAFFE_LEGACY_POOLING",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.caffe_translator._TranslateStridePadKernelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatePool3D": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "caffe.proto.caffe_pb2.Pooling3DParameter.AVE",
    "caffe.proto.caffe_pb2.Pooling3DParameter.MAX",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateROIPooling": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateReduction": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe.proto.caffe_pb2.ReductionParameter.MEAN",
    "caffe.proto.caffe_pb2.ReductionParameter.SUM",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateRelu": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateReshape": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateScale": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.caffe_translator.AddArgument",
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.caffe_translator.copy",
    "caffe2.python.utils.NumpyArrayToCaffe2Tensor",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateSigmoid": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateSoftmax": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateSoftmaxWithLoss": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.TranslatorRegistry",
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateTanH": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.BaseTranslate",
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslateVideoData": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator.TranslatorRegistry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.Register": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.Register.Wrapper": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.TranslateLayer": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "KeyError",
    "classmethod",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.TranslatorRegistry.TranslateModel": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "caffe.proto.caffe_pb2.NetState",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.TensorProtos",
    "caffe2.python.caffe_translator._GetInputDims",
    "caffe2.python.caffe_translator._RemoveLegacyPad",
    "caffe2.python.caffe_translator._ShouldInclude",
    "caffe2.python.caffe_translator.log",
    "caffe2.python.utils.CaffeBlobToNumpyArray",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._AdjustDims": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.Argument"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetBlobDimMap": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "caffe2.python.utils.Caffe2TensorToNumpyArray",
    "caffe2.python.workspace.C.Workspace",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetInputDims": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetLegacyDims": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.utils.Caffe2TensorToNumpyArray",
    "caffe2.python.workspace.C.Workspace",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._GetLegacyPadArgs": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._RemoveLegacyPad": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator._AdjustDims",
    "caffe2.python.caffe_translator._GetLegacyDims",
    "caffe2.python.caffe_translator._GetLegacyPadArgs",
    "caffe2.python.caffe_translator.re",
    "caffe2.python.utils.Caffe2TensorToNumpyArray",
    "caffe2.python.workspace.C.Workspace",
    "len",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._ShouldInclude": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "any",
    "caffe2.python.caffe_translator._StateMeetsRule",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._StateMeetsRule": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "any",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator._TranslateStridePadKernelHelper": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "caffe2.python.caffe_translator.AddArgument",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.args": {
  "data": {
   "lineno": 905
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.caffe2_legacy_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_legacy_pb2"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.caffe_pb2": {
  "data": {
   "shadows": "caffe.proto.caffe_pb2"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.caffenet": {
  "data": {
   "lineno": 907
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.caffenet_pretrained": {
  "data": {
   "lineno": 908
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.external_input": {
  "data": {
   "lineno": 927
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.external_output": {
  "data": {
   "lineno": 928
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.init_net": {
  "data": {
   "lineno": 933
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.input_caffemodel": {
  "data": {
   "lineno": 910
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.input_proto": {
  "data": {
   "lineno": 909
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.log": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.output_init_net": {
  "data": {
   "lineno": 911
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.output_predict_net": {
  "data": {
   "lineno": 912
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.parser": {
  "data": {
   "lineno": 891
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "caffe2.python.caffe_translator_test.sys",
    "caffe2.python.caffe_translator_test.unittest",
    "len",
    "print",
    "str"
   ]
  },
  "type": "module"
 },
 "caffe2.python.caffe_translator_test.CAFFE_FOUND": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "caffe2.python.caffe_translator_test.TestNumericalEquivalence": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python.caffe_translator_test.CAFFE_FOUND",
    "caffe2.python.caffe_translator_test.os",
    "caffe2.python.caffe_translator_test.unittest",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.caffe_translator_test.TestNumericalEquivalence.testBlobs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.load",
    "numpy.max",
    "numpy.testing.assert_almost_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator_test.caffe_pb2": {
  "data": {
   "shadows": "caffe.proto.caffe_pb2"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.caffe_translator": {
  "data": {
   "shadows": "caffe2.python.caffe_translator"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.setUpModule": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe.proto.caffe_pb2.NetParameter",
    "caffe2.python.caffe_translator.TranslateModel",
    "caffe2.python.caffe_translator_test.CAFFE_FOUND",
    "caffe2.python.caffe_translator_test.os",
    "caffe2.python.utils.Caffe2TensorToNumpyArray",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "google.protobuf.text_format.Merge",
    "numpy.float32",
    "numpy.load",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.caffe_translator_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.caffe_translator_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.checkpoint.logger",
    "caffe2.python.checkpoint.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.checkpoint.CheckpointManager": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint.CheckpointManager.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager._timed_task": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "add_op",
    "caffe2.python.net_builder.ops.TimerBegin",
    "caffe2.python.net_builder.ops.TimerGetAndEnd",
    "caffe2.python.net_builder.ops.task_exit",
    "caffe2.python.net_builder.ops.task_init",
    "caffe2.python.task.Task",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.blob_list": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.check_db_exists": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint.logger",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.DBExists",
    "caffe2.python.task.Task"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.collect_checkpoint_stats": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.cp_accessible": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.get_resume_from_epoch_id": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.init": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint.logger",
    "caffe2.python.net_builder.ops.GetAllBlobNames",
    "caffe2.python.net_builder.ops.Load",
    "caffe2.python.task.Task",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "add_op",
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load.add_op": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Load"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load_blobs_from_checkpoint": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "add_op",
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.load_blobs_from_checkpoint.add_op": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Load"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.report_checkpoint_stats": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.save": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "add_op",
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.save.add_op": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Save"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.set_params": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.CheckpointManager.write_checkpoint_metadata": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Job": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.context.define_context",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint.Job.__enter__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.__exit__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.WorkspaceType.GLOBAL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.add_stop_condition": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.task.Task",
    "caffe2.python.task.TaskOutput",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.compile": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Job.nodes_to_checkpoint": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint.JobRunner.__init__": {
  "data": {
   "lineno": 670
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner.load_blobs_from_checkpoints": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner.save_checkpoints": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.JobRunner.train": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "any",
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.__init__": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager._task_group": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "caffe2.python.task.Node",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.WorkspaceType.GLOBAL",
    "func"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.cp_accessible": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.get_ckpt_db_name": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.db_name",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.get_resume_from_epoch_id": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.init": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.CheckpointManager",
    "caffe2.python.task.Node",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.WorkspaceType.GLOBAL",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.load": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.CheckpointManager"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.load_blobs_locally": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.CheckpointManager",
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint.logger",
    "caffe2.python.task.Node",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.report_checkpoint_stats": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.save": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.CheckpointManager"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.set_params": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.MultiNodeCheckpointManager.write_checkpoint_metadata": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.Node": {
  "data": {
   "shadows": "caffe2.python.task.Node"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.TaskOutput": {
  "data": {
   "shadows": "caffe2.python.task.TaskOutput"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.UploadTaskGroupBuilder": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint.UploadTaskGroupBuilder.build": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.WorkspaceType": {
  "data": {
   "shadows": "caffe2.python.task.WorkspaceType"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.context": {
  "data": {
   "shadows": "caffe2.python.context"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.db_name": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.get_ckpt_filename",
    "caffe2.python.checkpoint.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.epoch_limiter": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.task.Task"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.final_output": {
  "data": {
   "shadows": "caffe2.python.task.final_output"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.get_ckpt_filename": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.checkpoint.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.checkpoint_test.CheckpointManager": {
  "data": {
   "shadows": "caffe2.python.checkpoint.CheckpointManager"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.Cluster": {
  "data": {
   "shadows": "caffe2.python.task.Cluster"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.ConstRecord": {
  "data": {
   "shadows": "caffe2.python.schema.ConstRecord"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.Dataset": {
  "data": {
   "shadows": "caffe2.python.dataset.Dataset"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.EXPECTED_TOTALS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "caffe2.python.checkpoint_test.Job": {
  "data": {
   "shadows": "caffe2.python.checkpoint.Job"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.JobRunner": {
  "data": {
   "shadows": "caffe2.python.checkpoint.JobRunner"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.LocalSession": {
  "data": {
   "shadows": "caffe2.python.session.LocalSession"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.MultiNodeCheckpointManager": {
  "data": {
   "shadows": "caffe2.python.checkpoint.MultiNodeCheckpointManager"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.Node": {
  "data": {
   "shadows": "caffe2.python.task.Node"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.ReaderWithLimit": {
  "data": {
   "shadows": "caffe2.python.dataio.ReaderWithLimit"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.run_with": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "builder",
    "caffe2.python.checkpoint.Job",
    "caffe2.python.checkpoint.JobRunner",
    "caffe2.python.checkpoint_test.EXPECTED_TOTALS",
    "caffe2.python.checkpoint_test.build_pipeline",
    "caffe2.python.core.Net",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Cluster",
    "caffe2.python.task.Task",
    "fetch_total",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.run_with.fetch_total": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_ckpt_name_and_load_model_from_ckpts": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.checkpoint.JobRunner",
    "caffe2.python.checkpoint.MultiNodeCheckpointManager",
    "caffe2.python.checkpoint_test.EXPECTED_TOTALS",
    "caffe2.python.checkpoint_test.build_pipeline",
    "caffe2.python.checkpoint_test.shutil",
    "caffe2.python.checkpoint_test.tempfile",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Cluster",
    "caffe2.python.workspace.C.Workspace",
    "caffe2.python.workspace.ResetWorkspace",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_ckpt_save_failure": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.checkpoint.JobRunner",
    "caffe2.python.checkpoint.MultiNodeCheckpointManager",
    "caffe2.python.checkpoint_test.EXPECTED_TOTALS",
    "caffe2.python.checkpoint_test.build_pipeline",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Cluster",
    "caffe2.python.workspace.C.Workspace",
    "caffe2.python.workspace.ResetWorkspace",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_download_group_simple": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.checkpoint.JobRunner",
    "caffe2.python.checkpoint.epoch_limiter",
    "caffe2.python.core.Net",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.net_builder.ops.net",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Node",
    "caffe2.python.task.Task",
    "caffe2.python.workspace.C.Workspace",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_reuse_checkpoint_manager": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.checkpoint.JobRunner",
    "caffe2.python.checkpoint.MultiNodeCheckpointManager",
    "caffe2.python.checkpoint_test.EXPECTED_TOTALS",
    "caffe2.python.checkpoint_test.build_pipeline",
    "caffe2.python.checkpoint_test.shutil",
    "caffe2.python.checkpoint_test.tempfile",
    "caffe2.python.core.Net",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Task",
    "caffe2.python.workspace.C.Workspace",
    "fetch_total",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_reuse_checkpoint_manager.fetch_total": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_single_checkpoint": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "builder",
    "caffe2.python.checkpoint_test.shutil",
    "caffe2.python.checkpoint_test.tempfile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_single_checkpoint.builder": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.MultiNodeCheckpointManager",
    "caffe2.python.session.LocalSession",
    "caffe2.python.workspace.C.Workspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.TestCheckpoint.test_upload_checkpoint": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.checkpoint.JobRunner",
    "caffe2.python.checkpoint.MultiNodeCheckpointManager",
    "caffe2.python.checkpoint_test.EXPECTED_TOTALS",
    "caffe2.python.checkpoint_test.UploadToLocalFile",
    "caffe2.python.checkpoint_test.build_pipeline",
    "caffe2.python.checkpoint_test.os",
    "caffe2.python.checkpoint_test.shutil",
    "caffe2.python.checkpoint_test.tempfile",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Cluster",
    "caffe2.python.workspace.C.Workspace",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.UploadTaskGroupBuilder": {
  "data": {
   "shadows": "caffe2.python.checkpoint.UploadTaskGroupBuilder"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.UploadToLocalFile": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.UploadTaskGroupBuilder"
   ]
  },
  "type": "class"
 },
 "caffe2.python.checkpoint_test.UploadToLocalFile.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.UploadToLocalFile.build": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.db_name",
    "caffe2.python.checkpoint_test.local_copy_op",
    "caffe2.python.checkpoint_test.os",
    "caffe2.python.net_builder.ops.Python",
    "caffe2.python.task.Node",
    "caffe2.python.task.Task",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.WorkspaceType.GLOBAL",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.WorkspaceType": {
  "data": {
   "shadows": "caffe2.python.task.WorkspaceType"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.build_pipeline": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job.current",
    "caffe2.python.dataio.ReaderWithLimit",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.net_builder.ops",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.schema.ConstRecord",
    "caffe2.python.schema.Struct",
    "caffe2.python.task.Node",
    "caffe2.python.task.Task",
    "list",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.build_pipeline.inc_total": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.db_name": {
  "data": {
   "shadows": "caffe2.python.checkpoint.db_name"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.epoch_limiter": {
  "data": {
   "shadows": "caffe2.python.checkpoint.epoch_limiter"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.local_copy_op": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.local_copy_op.copy_op": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.checkpoint_test.shutil"
   ]
  },
  "type": "function"
 },
 "caffe2.python.checkpoint_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.pipe": {
  "data": {
   "shadows": "caffe2.python.pipeline.pipe"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.checkpoint_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.cnn": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.cnn.CNNModelHelper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "class"
 },
 "caffe2.python.cnn.CNNModelHelper.Accuracy": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "caffe2.python.brew.accuracy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.AddWeightDecay": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "caffe2.python.brew.add_weight_decay"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.AveragePool": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "caffe2.python.brew.average_pool"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.CPU": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Concat": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "caffe2.python.brew.concat"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ConstantInit": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Conv": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.brew.conv"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ConvNd": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.brew.conv_nd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ConvTranspose": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.brew.conv_transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.DepthConcat": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Dropout": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "caffe2.python.brew.dropout"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC_Decomp": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "caffe2.python.brew.fc_decomp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC_Prune": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "caffe2.python.brew.fc_prune"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.FC_Sparse": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "caffe2.python.brew.fc_sparse"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.GPU": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.workspace.GpuDeviceType",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.GroupConv": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.brew.group_conv"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.GroupConv_Deprecated": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.brew.group_conv_deprecated"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ImageInput": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.brew.image_input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.InstanceNorm": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.python.brew.instance_norm"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Iter": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "caffe2.python.brew.iter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.LRN": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "caffe2.python.brew.lrn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.MSRAInit": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.MaxPool": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "caffe2.python.brew.max_pool"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.MaxPoolWithIndex": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.brew.max_pool_with_index"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.PRelu": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "caffe2.python.brew.prelu"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.PackedFC": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python.brew.packed_fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.PadImage": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Relu": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "caffe2.python.brew.relu"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Softmax": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "caffe2.python.brew.softmax"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.SpatialBN": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "caffe2.python.brew.spatial_bn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.SpatialGN": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "caffe2.python.brew.spatial_gn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Sum": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "caffe2.python.brew.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.Transpose": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "caffe2.python.brew.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.VideoInput": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "caffe2.python.brew.video_input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.XavierInit": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.ZeroInit": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.CNNModelHelper.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.cnn.logging",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.cnn.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.cnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.cnn.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.cnn.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.cnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.cnn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.cnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.cnn.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.cnn.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.compatibility": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.compatibility.collections",
    "six.PY2",
    "six.PY3"
   ]
  },
  "type": "module"
 },
 "caffe2.python.compatibility.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "caffe2.python.compatibility.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "caffe2.python.compatibility.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.compatibility.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "caffe2.python.compatibility.container_abcs": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "caffe2.python.context": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.context._ContextRegistry"
   ]
  },
  "type": "module"
 },
 "caffe2.python.context._CONTEXT_REGISTRY": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "caffe2.python.context._ContextInfo": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.context._ContextInfo.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.context.threading"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._ContextInfo._stack": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._ContextInfo.enter": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.context._ContextInfo.exit": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._ContextInfo.get_active": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._ContextRegistry": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.context._ContextRegistry.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "caffe2.python.context._ContextRegistry.get": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "caffe2.python.context._ContextRegistry.register": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.context._ContextInfo",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context.__call__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "caffe2.python.context.__call__.wrapper": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.context.six",
    "func"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context.__enter__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.context._context_registry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context.__exit__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "caffe2.python.context._context_registry"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._context_registry": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.context._CONTEXT_REGISTRY"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._current": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.context._get_active_context",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context._get_active_context": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "caffe2.python.context._context_registry",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.context.define_context": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.context.define_context.__call__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "caffe2.python.context._ContextInfo",
    "caffe2.python.context.__call__",
    "caffe2.python.context.__enter__",
    "caffe2.python.context.__exit__",
    "caffe2.python.context._context_registry",
    "caffe2.python.context._current",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context.define_context.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "caffe2.python.context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.context.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.context.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.context.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.context_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.context_test.MyContext": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.context.define_context",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.context_test.TestContext": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.context_test.TestContext.testDecorator": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.context_test.MyContext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context_test.TestContext.testMultiThreaded": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "range",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context_test.TestContext.use_my_context": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.context_test.MyContext",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.context_test.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "caffe2.python.context_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.context_test.context": {
  "data": {
   "shadows": "caffe2.python.context"
  },
  "type": "import"
 },
 "caffe2.python.context_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.context_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.context_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.context_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.control_ops_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.control_ops_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.control_ops_util.add_if_op": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.control_ops_util.get_external_blob_names",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.Net",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_ops_util.add_while_op": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "caffe2.python.control_ops_util.get_external_blob_names",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.core.Net",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_ops_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.control_ops_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.control_ops_util.get_external_blob_names": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.core.get_ssa",
    "caffe2.python.core.get_undefined_blobs",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_ops_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.control_ops_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.control_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.control_test.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.control_test.TestControl": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.control_test.TestControl.BuildAndRunPlan": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.control.Do",
    "caffe2.python.core.Plan",
    "caffe2.python.workspace.RunPlan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.CheckNetAllOutput": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.CheckNetOutput": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.DoUntilLoopTest": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "caffe2.python.control.DoUntil"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.DoWhileLoopTest": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "caffe2.python.control.DoWhile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.ForLoopTest": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.control.For"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfCondTest": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "caffe2.python.control.Do",
    "caffe2.python.control.If"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfElseCondTest": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "caffe2.python.control.Do",
    "caffe2.python.control.If"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfNotCondTest": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "caffe2.python.control.Do",
    "caffe2.python.control.IfNot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.IfNotElseCondTest": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "caffe2.python.control.Do",
    "caffe2.python.control.IfNot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.UntilLoopTest": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "caffe2.python.control.Until"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.WhileLoopTest": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.control.While"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.control_test.TestControl",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.Net",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testBoolNet": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "caffe2.python.control.BoolNet",
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testCombineConditions": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "caffe2.python.control.CombineConditions",
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoUntilLoopWithNet": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoUntilLoopWithStep": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoWhileLoopWithNet": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testDoWhileLoopWithStep": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testForLoopWithNets": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testForLoopWithStep": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondFalseOnBlob": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondFalseOnNet": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondTrueOnBlob": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfCondTrueOnNet": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondFalseOnBlob": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondFalseOnNet": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondTrueOnBlob": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfElseCondTrueOnNet": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondFalseOnBlob": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondFalseOnNet": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondTrueOnBlob": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotCondTrueOnNet": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondFalseOnBlob": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondFalseOnNet": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondTrueOnBlob": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testIfNotElseCondTrueOnNet": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testMergeConditionNets": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "caffe2.python.control.Do",
    "caffe2.python.control.MergeConditionNets"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testSwitch": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "caffe2.python.control.Switch"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testSwitchNot": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "caffe2.python.control.SwitchNot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testUntilLoopWithNet": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testUntilLoopWithStep": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testWhileLoopWithNet": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "caffe2.python.control_test.TestControl.testWhileLoopWithStep": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.control.Do"
   ]
  },
  "type": "function"
 },
 "caffe2.python.control_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.control_test.control": {
  "data": {
   "shadows": "caffe2.python.control"
  },
  "type": "import"
 },
 "caffe2.python.control_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.control_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.control_test.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "caffe2.python.control_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.control_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.control_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.control_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.control_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.convert": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.convert.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.convert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.convert.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.convert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.convert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.convert.torch_pb2": {
  "data": {
   "shadows": "caffe2.proto.torch_pb2"
  },
  "type": "import"
 },
 "caffe2.python.convert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.convert_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.convert_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.convert_test.TestOperator": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.convert_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.convert_test.TestOperator.setUp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convert_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.convert": {
  "data": {
   "shadows": "caffe2.python.convert"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.torch_pb2": {
  "data": {
   "shadows": "caffe2.proto.torch_pb2"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.convert_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.convnet_benchmarks.AlexNet",
    "caffe2.python.convnet_benchmarks.Benchmark",
    "caffe2.python.convnet_benchmarks.GetArgumentParser",
    "caffe2.python.convnet_benchmarks.Inception",
    "caffe2.python.convnet_benchmarks.MLP",
    "caffe2.python.convnet_benchmarks.OverFeat",
    "caffe2.python.convnet_benchmarks.VGGA",
    "caffe2.python.convnet_benchmarks.model_map",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.convnet_benchmarks.AddParameterUpdate": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "caffe2.python.brew.iter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.AlexNet": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.Benchmark": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "caffe2.python.convnet_benchmarks.AddParameterUpdate",
    "caffe2.python.workspace.BenchmarkNet",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNetOnce",
    "model_gen",
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.GetArgumentParser": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "caffe2.python.convnet_benchmarks.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.Inception": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "caffe2.python.brew.average_pool",
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.convnet_benchmarks._InceptionModule",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.MLP": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.model_helper.ModelHelper",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.OverFeat": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.VGGA": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks._InceptionModule": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "caffe2.python.brew.concat",
    "caffe2.python.brew.conv",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks.model_map": {
  "data": {
   "lineno": 720
  },
  "type": "constant"
 },
 "caffe2.python.convnet_benchmarks.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.convnet_benchmarks_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.convnet_benchmarks_test.TestConvnetBenchmarks": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "caffe2.python.convnet_benchmarks_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.convnet_benchmarks_test.TestConvnetBenchmarks.testConvnetBenchmarks": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "caffe2.python.convnet_benchmarks.AlexNet",
    "caffe2.python.convnet_benchmarks.Benchmark",
    "caffe2.python.convnet_benchmarks.GetArgumentParser",
    "caffe2.python.convnet_benchmarks.Inception",
    "caffe2.python.convnet_benchmarks.OverFeat",
    "caffe2.python.convnet_benchmarks.VGGA"
   ]
  },
  "type": "function"
 },
 "caffe2.python.convnet_benchmarks_test.cb": {
  "data": {
   "shadows": "caffe2.python.convnet_benchmarks"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.convnet_benchmarks_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core_gradients_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.core_gradients_test.AddDirectGradient": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.RegisterGradient",
    "caffe2.python.core_gradients_test.CopyDeviceOption",
    "caffe2.python.core_gradients_test.GIS",
    "caffe2.python.core_gradients_test.NeedAll"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.AddNogradient": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.core.GradientRegistry.RegisterGradient"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.AddUseInputGradient": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.RegisterGradient",
    "caffe2.python.core_gradients_test.CopyDeviceOption",
    "caffe2.python.core_gradients_test.GIS",
    "caffe2.python.core_gradients_test.NeedAll",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.AddUseOutputGradient": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.RegisterGradient",
    "caffe2.python.core_gradients_test.CopyDeviceOption",
    "caffe2.python.core_gradients_test.GIS",
    "caffe2.python.core_gradients_test.NeedAll",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.CopyDeviceOption": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.CreateOperator": {
  "data": {
   "shadows": "caffe2.python.core.CreateOperator"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.GIS": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.GradientRegistry": {
  "data": {
   "shadows": "caffe2.python.core.GradientRegistry"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.NeedAll": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.assertOperatorListEqual": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirect": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "caffe2.python.workspace.GpuDeviceType",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirectButNoOutputGradientGiven": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirectImplicitGradientSource": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDirectInPlace": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testDoesNotGenerateUnnecessaryGradients": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testGradientCalculationWithPrint": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testGradientMappingUsingSumOp": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInput": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "caffe2.python.workspace.GpuDeviceType",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputAndMultipleVersions": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputAndMultipleVersionsBig": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testMultiUseInputButWithNoGradient": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradient": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradientInplace": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradientOrphan": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testStopGradientWithMultiUseOperators": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseInput": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseInputButInputHasBeenChanged": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseOutput": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseOutputButOutputHasBeenChanged": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testUseOutputInPlace": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.testVersionMismatch": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.test_two_grads": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "input",
    "numpy.array",
    "numpy.float32",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientCalculation.test_zero_gradient": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithNoGradientOps": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithNoGradientOps.testAccumulationWithNoGradientBranch": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithNoGradientOps.testNormalAccumulation": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAccumulationRuns": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "input",
    "numpy.array",
    "numpy.float32",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddAndDynamicConstant": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddAndStaticConstant": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddOpAtLeaf": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testAddOpInMiddle": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testIncorrectOperator": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testMultiLayerAddOps": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testMultiLayerSubOps": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testSubOpAtLeaf": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestGradientsAccumulationWithPassThroughGradients.testSubOpInMiddle": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator",
    "caffe2.python.core_gradients_test.unittest",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation.testSparseAccumulationWithIndicesAndValues": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation.testSparseAccumulationWithValues": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.TestSparseGradientsAccumulation.testSparseGradientToDense": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_gradients_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.bytes_to_native_str": {
  "data": {
   "shadows": "future.utils.bytes_to_native_str"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.core_gradients_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.core_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.core_test.ExtractPredictorNet": {
  "data": {
   "shadows": "caffe2.python.model_helper.ExtractPredictorNet"
  },
  "type": "import"
 },
 "caffe2.python.core_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.core_test.Node": {
  "data": {
   "shadows": "caffe2.python.task.Node"
  },
  "type": "import"
 },
 "caffe2.python.core_test.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.core_test.TestAppendNet": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestAppendNet.test_external_inputs_merged_correctly": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestAppendNet.test_external_inputs_merged_correctlyB": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestAutoNaming.assertOperatorListEqual": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_auto_naming": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "add_ops",
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_auto_naming.add_ops": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_next_blob": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "create_net",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestAutoNaming.test_next_blob.create_net": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestCloneNet": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestCloneNet.testPartialClone": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNetOnce",
    "isinstance",
    "net_assert",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestCloneNet.testPartialClone.net_assert": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "input",
    "len",
    "numpy.array",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestCloneNet.test_mask_clone_update_external_list": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "map",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestCreateOperator": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestCreateOperator.testCreate": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.GpuDeviceType",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestCreatePlan": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestCreatePlan.test_create_plan_from_proto_correctly": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "caffe2.python.core.Plan",
    "caffe2.python.core.Plan.create_from_proto",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.Copy",
    "caffe2.python.net_builder.ops.Mul",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.net_builder.ops.task_exit",
    "caffe2.python.net_builder.ops.task_init",
    "caffe2.python.net_builder.ops.task_instance_exit",
    "caffe2.python.net_builder.ops.task_instance_init",
    "caffe2.python.task.Node",
    "caffe2.python.task.Task",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestDeviceOption": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestDeviceOption.test_check_equal_default_value": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.device_option_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestDeviceOption.test_check_equal_node_name": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.device_option_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestExternalInputs": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestExternalInputs.testSetInputRecordWithBlobs": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestExternalInputs.testSetInputRecordWithoutBlobs": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestExtractPredictorNet": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestExtractPredictorNet.test_extract_simple": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.image_input",
    "caffe2.python.brew.softmax",
    "caffe2.python.model_helper.ExtractPredictorNet",
    "caffe2.python.model_helper.ModelHelper",
    "len",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "caffe2.python.core_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestInferDevice._test_op": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InferOpBlobDevices",
    "isinstance",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.setUp": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_blob_inplace": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectCrossDeviceCopies",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_cross_nets": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectDeviceCopiesAmongNets",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_cross_nets_no_change": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectDeviceCopiesAmongNetsWithoutB2D",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_device_inference_function": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InferOpBlobDevices",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device_adam": {
  "data": {
   "lineno": 711
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device_cross_device": {
  "data": {
   "lineno": 725
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_infer_device_split_by_lengths": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_inject_copy": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectCrossDeviceCopies",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_inject_copy_multi_use": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectCrossDeviceCopies",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDevice.test_inject_copy_placeholder_ops": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectCrossDeviceCopies",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.GpuDeviceType",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestInferDeviceCpuOnly": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestInferDeviceCpuOnly.test_inject_copy": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InjectCrossDeviceCopies",
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOpRegistryKey": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestOpRegistryKey.test_is_operator": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOpRegistryKey.test_is_operator_with_engine": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperatorWithEngine"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestOperatorTraceback.op_name_check": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "inspect.getframeinfo"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_async_exception_handling": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "inspect.currentframe",
    "numpy.array",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_c_workspace_constructor": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.C.Workspace",
    "inspect.currentframe"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_c_workspace_runtime": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.C.Workspace",
    "inspect.currentframe",
    "numpy.array",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_operator_constructor_traceback": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNetOnce",
    "inspect.currentframe"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestOperatorTraceback.test_operator_runtime_traceback": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "inspect.currentframe",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestRerouteTensor": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestRerouteTensor.test_reroute_tensor": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.core_test.TestScopes.testBlobReferenceIsIndependentFromNameScope": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.NameScope",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testDeviceScope": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testNameAndDeviceScopeTogether": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.workspace.GpuDeviceType",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testNameScopeWithOp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.NameScope",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.TestScopes.testNameScopeWithReset": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.NameScope",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.core_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.core_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.core_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.core_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.core_test.currentframe": {
  "data": {
   "shadows": "inspect.currentframe"
  },
  "type": "import"
 },
 "caffe2.python.core_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.core_test.getframeinfo": {
  "data": {
   "shadows": "inspect.getframeinfo"
  },
  "type": "import"
 },
 "caffe2.python.core_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.core_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.core_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.core_test.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.core_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.core_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.core_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.core_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.crf": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.crf.CRFWithLoss": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.crf.CRFWithLoss.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss._crf_forward": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss._gather_entries_sum": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss._path_binary_scores": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.build_crf_net": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python.brew.transpose",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.recurrent.recurrent_net",
    "s"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.build_crf_net.s": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.crf_loss": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.crf.CRFWithLoss"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.pad_labels": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.pad_predictions": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.update_predictions": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.crf.CRFWithLoss"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.CRFWithLoss.update_predictions.crf_update_predictions_op": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "enumerate",
    "numpy.argmax",
    "numpy.expand_dims",
    "numpy.int32",
    "numpy.max",
    "numpy.zeros",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.crf.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.crf.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.crf.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.crf.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.crf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.crf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.crf.recurrent": {
  "data": {
   "shadows": "caffe2.python.recurrent"
  },
  "type": "import"
 },
 "caffe2.python.crf.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.crf_predict": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.crf_predict.CRFWithLoss": {
  "data": {
   "shadows": "caffe2.python.crf.CRFWithLoss"
  },
  "type": "import"
 },
 "caffe2.python.crf_predict.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.crf_predict.apply_crf": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.crf.CRFWithLoss.pad_predictions",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf_predict.crf_update_predictions": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "caffe2.python.crf_predict.apply_crf"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf_predict.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.crf_predict.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.crf_predict.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.crf_predict.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.crf_viterbi_test.CNNModelHelper": {
  "data": {
   "shadows": "caffe2.python.cnn.CNNModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.TestCrfDecode": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.crf_viterbi_test.TestCrfDecode.test_crf_viterbi": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.crf.CRFWithLoss",
    "caffe2.python.crf_predict.crf_update_predictions",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.uniform",
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.crf_viterbi_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.crf": {
  "data": {
   "shadows": "caffe2.python.crf"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.crf_update_predictions": {
  "data": {
   "shadows": "caffe2.python.crf_predict.crf_update_predictions"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.crf_viterbi_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.dyndep.InitOpsLibrary"
   ]
  },
  "type": "module"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.os",
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "_test_backward_pass",
    "_test_forward_pass",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.data_parallel_model.Parallelize",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_backward_pass": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.isclose",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level._test_forward_pass": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_input_ops": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_model_ops": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._bn_check_op_level.add_optimizer": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "_create_model",
    "_verify_bn_outputs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.reshape"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.data_parallel_model.Parallelize"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_input_ops_combine": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "int"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_input_ops_no_combine": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_model_ops": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._create_model.add_optimizer": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest._test_multi_device_bn_net_lvl._verify_bn_outputs": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.isclose",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abs",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.data_parallel_model.AddBlobSync",
    "caffe2.python.data_parallel_model.GetLearningRateBlobNames",
    "caffe2.python.data_parallel_model.Parallelize",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "hypothesis.strategies",
    "hypothesis.strategies.astype",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.round",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model.add_optimizer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model.input_builder_fun": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_model.model_build_fun": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_test_locally": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.run_test_locally.run_fn": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.ResetWorkspace",
    "fn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.BlobReference",
    "caffe2.python.data_parallel_model.GetCheckpointParams",
    "caffe2.python.data_parallel_model.Parallelize_CPU"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_input_ops": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_model_ops": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_checkpoint_params.add_optimizer": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_device_scope_check": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.data_parallel_model.Parallelize_GPU",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_equiv": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "caffe2.python.workspace.NumCudaDevices",
    "caffe2.python.workspace.has_gpu_support",
    "list",
    "numpy.allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_net_lvl_cpu": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_net_lvl_gpu": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.workspace.NumCudaDevices",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_op_level_cpu": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_multi_device_bn_op_level_gpu": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.workspace.NumCudaDevices",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.data_parallel_model.Parallelize_CPU",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_input_ops": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_model_ops": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model.ConvertNetForDevice"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_conversion_and_append_net.add_optimizer": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model.Parallelize_CPU",
    "caffe2.python.model_helper.ModelHelper",
    "mock.Mock"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_input_ops": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_model_ops": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_net_transformer_function.add_optimizer": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.data_parallel_model.Parallelize_CPU",
    "caffe2.python.data_parallel_model.RunInitNet",
    "caffe2.python.data_parallel_model.RunNet",
    "caffe2.python.data_parallel_model._DEFAULT_TIMEOUT_SEC",
    "caffe2.python.data_parallel_model_test.time",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_input_ops": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_model_ops": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_pre_train_synchronization_barrier.run.add_optimizer": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.data_parallel_model.Parallelize_CPU",
    "caffe2.python.data_parallel_model.RunInitNet",
    "caffe2.python.data_parallel_model.Synchronize",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_input_ops": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_model_ops": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.DataParallelModelTest.test_synchronization_barrier.run.add_optimizer": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.Mock": {
  "data": {
   "shadows": "mock.Mock"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._generate_data": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.FeedBlob",
    "enumerate",
    "hypothesis.strategies",
    "hypothesis.strategies.astype",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.round",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._model_build_fun": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._param_update_fun": {
  "data": {
   "lineno": 1099
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._run_model": {
  "data": {
   "lineno": 1080
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest._run_model.input_builder_fun": {
  "data": {
   "lineno": 1084
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest.test_parallelize_bmuf": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.data_parallel_model.Parallelize_BMUF",
    "caffe2.python.data_parallel_model.RunInitNet",
    "caffe2.python.data_parallel_model.RunNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "future.utils.viewkeys",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "list",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.ParallelizeBMUFTest.test_parallelize_bmuf.input_builder_fun": {
  "data": {
   "lineno": 1146
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.data_parallel_model.Parallelize",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "hypothesis.strategies",
    "hypothesis.strategies.astype",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model.input_builder_fun": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model.model_build_fun": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.run_model.param_update_fun": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.RecurrentNetworkParallelTest.test_equiv_recurrent": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "caffe2.python.workspace.NumCudaDevices",
    "caffe2.python.workspace.has_gpu_support",
    "list",
    "numpy.allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.NumCudaDevices",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest._test_equiv_sparse": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "caffe2.python.workspace.NumCudaDevices",
    "list",
    "numpy.allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.data_parallel_model.Parallelize_GPU",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "hypothesis.strategies",
    "hypothesis.strategies.astype",
    "len",
    "list",
    "numpy.allclose",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.permutation",
    "numpy.random.rand",
    "numpy.random.seed",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model.input_builder_fun": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model.model_build_fun": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.run_model.param_update_fun": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTest.test_equiv_sparse": {
  "data": {
   "lineno": 1071
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.data_parallel_model.Parallelize_GPU",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "hypothesis.strategies",
    "hypothesis.strategies.astype",
    "len",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.permutation",
    "numpy.random.rand",
    "numpy.random.seed",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.input_builder_fun": {
  "data": {
   "lineno": 1233
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.model_build_fun": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.run_model.param_update_fun": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.SparseDataParallelModelTestWithSharedIndices.test_sparse_shared_indices_gpu": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "caffe2.python.workspace.NumGpuDevices",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.TemporaryDirectory": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "caffe2.python.data_parallel_model_test.TemporaryDirectory.__enter__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.tempfile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.TemporaryDirectory.__exit__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model_test.shutil"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_parallel_model_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.data_parallel_model": {
  "data": {
   "shadows": "caffe2.python.data_parallel_model"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.optimizer": {
  "data": {
   "shadows": "caffe2.python.optimizer"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.data_parallel_model_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.data_workers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "caffe2.python.data_workers.GlobalCoordinator",
    "caffe2.python.data_workers.log",
    "caffe2.python.data_workers.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.data_workers.BatchFeeder": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.State"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_workers.BatchFeeder.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.data_workers.time",
    "queue"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._create_caffe2_ops": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._create_caffe2_queues": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "create_queue"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._create_caffe2_queues.create_queue": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._enqueue": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "queue"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._enqueue_batch": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "caffe2.python.data_workers.time",
    "enumerate",
    "numpy.append",
    "numpy.array",
    "numpy.split",
    "queue.Full",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._enqueue_batch_direct": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._get": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "caffe2.python.data_workers.log",
    "caffe2.python.data_workers.time",
    "queue.Empty"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._init_scratch": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.workspace.FeedBlob",
    "itertools.chain",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._log_inputs_per_interval": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "caffe2.python.data_workers.LOG_INT_SECS",
    "caffe2.python.data_workers.log",
    "caffe2.python.data_workers.time",
    "int"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder._validate_chunk": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "caffe2.python.data_workers.log",
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.cleanup": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "caffe2.python.utils.ResetBlobs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.put": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "caffe2.python.data_workers.LOG_INT_SECS",
    "caffe2.python.data_workers.log",
    "caffe2.python.data_workers.time",
    "queue.Full"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.start": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "caffe2.python.data_workers.time"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.BatchFeeder.stop": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.DataWorker": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.Worker"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_workers.DataWorker.__init__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.Worker.__init__"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.DataWorker.finish": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "caffe2.python.data_workers.time"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.DataWorker.run": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalCoordinator": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.GlobalWorkerCoordinator"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_workers.GlobalCoordinator.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.GlobalWorkerCoordinator.__init__"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalCoordinator.get_queue": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "queue.Queue"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalCoordinator.reset_data_input": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "caffe2.python.data_workers.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.GlobalWorkerCoordinator": {
  "data": {
   "shadows": "caffe2.python.parallel_workers.GlobalWorkerCoordinator"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.LOG_INT_SECS": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "caffe2.python.data_workers.Metrics": {
  "data": {
   "shadows": "caffe2.python.parallel_workers.Metrics"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.Queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.State": {
  "data": {
   "shadows": "caffe2.python.parallel_workers.State"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.Worker": {
  "data": {
   "shadows": "caffe2.python.parallel_workers.Worker"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.WorkerCoordinator": {
  "data": {
   "shadows": "caffe2.python.parallel_workers.WorkerCoordinator"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.enqueuer": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "caffe2.python.data_workers.get_worker_ids": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.global_coordinator": {
  "data": {
   "lineno": 460
  },
  "type": "constant"
 },
 "caffe2.python.data_workers.init_data_input_workers": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.data_workers.BatchFeeder",
    "caffe2.python.data_workers.DataWorker",
    "caffe2.python.data_workers.threading",
    "caffe2.python.parallel_workers.Metrics",
    "caffe2.python.parallel_workers.WorkerCoordinator",
    "caffe2.python.parallel_workers.run_worker",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.CurrentNameScope",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers.log": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "caffe2.python.data_workers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.run_worker": {
  "data": {
   "shadows": "caffe2.python.parallel_workers.run_worker"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.data_workers.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.data_workers_test.DataWorkersTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.data_workers_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testInputOrder": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "caffe2.python.data_workers.init_data_input_workers",
    "caffe2.python.data_workers_test.time",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.timeout_guard.CompleteInTimeOrDie",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testInputOrder.dummy_fetcher_rnn_ordered1": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testNonParallelModel": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.data_workers.global_coordinator._fetcher_id_seq",
    "caffe2.python.data_workers.init_data_input_workers",
    "caffe2.python.data_workers_test.dummy_fetcher",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.timeout_guard.CompleteInTimeOrDie",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers_test.DataWorkersTest.testRNNInput": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.data_workers.global_coordinator._fetcher_id_seq",
    "caffe2.python.data_workers.init_data_input_workers",
    "caffe2.python.data_workers_test.dummy_fetcher_rnn",
    "caffe2.python.data_workers_test.time",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.data_workers": {
  "data": {
   "shadows": "caffe2.python.data_workers"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.dummy_fetcher": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randint",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers_test.dummy_fetcher_rnn": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.data_workers_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.timeout_guard": {
  "data": {
   "shadows": "caffe2.python.timeout_guard"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.data_workers_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.dataio": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.dataio.CompositeReader": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.CompositeReader.__init__": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "caffe2.python.dataio.CompositeReader",
    "caffe2.python.schema.Struct",
    "len",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReader.read_ex": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.core.Net",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReader.reset": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReader.setup_ex": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderBuilder"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "caffe2.python.dataio.CompositeReaderBuilder",
    "caffe2.python.schema.Struct",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.new_reader": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.dataio.CompositeReader",
    "caffe2.python.dataio.Reader",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.schema": {
  "data": {
   "lineno": 583
  },
  "type": "function"
 },
 "caffe2.python.dataio.CompositeReaderBuilder.setup": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "caffe2.python.dataio.CountUntil": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "caffe2.python.dataio.CounterReader",
    "caffe2.python.dataio.ReaderWithLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CounterReader": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.CounterReader.__init__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader",
    "caffe2.python.schema.Struct",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CounterReader.read_ex": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.CounterReader.setup_ex": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.BOOL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Field": {
  "data": {
   "shadows": "caffe2.python.schema.Field"
  },
  "type": "import"
 },
 "caffe2.python.dataio.Pipe": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.Pipe.__init__": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe._new_reader": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe._new_writer": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.num_readers": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.num_writers": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.reader": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.schema": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.setup": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "caffe2.python.dataio.Pipe.writer": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderBuilder"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.PipedReaderBuilder.__init__": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder.new_reader": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder.schema": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "caffe2.python.dataio.PipedReaderBuilder.setup": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.Reader.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.schema.Field",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader._set_schema": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.execution_step": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.execution_step"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read_ex": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read_record": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "caffe2.python.schema.from_blob_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.read_record_ex": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.schema.from_blob_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.reset": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.schema": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "caffe2.python.dataio.Reader.setup_ex": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderBuilder": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.ReaderBuilder.new_reader": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderBuilder.schema": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderBuilder.setup": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithDelay.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay.read_ex": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay.read_ex.sleep_op": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "caffe2.python.dataio.time"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithDelay.setup_ex": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimit": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimitBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithLimit.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimit",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimit.check_limiter_condition": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.BOOL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimit.setup_limiter": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.check_limiter_condition": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.data_finished": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.read_ex": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.setup_ex": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.BOOL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithLimitBase.setup_limiter": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimitBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit.__init__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithTimeLimit",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit.check_limiter_condition": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.BOOL",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.ReaderWithTimeLimit.setup_limiter": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.dataio.Writer": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio.Writer.commit": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "caffe2.python.dataio.Writer.schema": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "caffe2.python.dataio.Writer.setup_ex": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write_ex": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write_record": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.schema.Field",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.Writer.write_record_ex": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "caffe2.python.schema.Field",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.dataio.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.dataio.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.dataio.from_blob_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_blob_list"
  },
  "type": "import"
 },
 "caffe2.python.dataio.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.dataio.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.dataio.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.dataio.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.dataio_test.CachedReader": {
  "data": {
   "shadows": "caffe2.python.cached_reader.CachedReader"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.CompositeReader": {
  "data": {
   "shadows": "caffe2.python.dataio.CompositeReader"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.CompositeReaderBuilder": {
  "data": {
   "shadows": "caffe2.python.dataio.CompositeReaderBuilder"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.DBFileReader": {
  "data": {
   "shadows": "caffe2.python.db_file_reader.DBFileReader"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.Dataset": {
  "data": {
   "shadows": "caffe2.python.dataset.Dataset"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.FeedRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FeedRecord"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.LocalSession": {
  "data": {
   "shadows": "caffe2.python.session.LocalSession"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.NewRecord": {
  "data": {
   "shadows": "caffe2.python.schema.NewRecord"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.Reader": {
  "data": {
   "shadows": "caffe2.python.dataio.Reader"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.ReaderBuilder": {
  "data": {
   "shadows": "caffe2.python.dataio.ReaderBuilder"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.ReaderWithDelay": {
  "data": {
   "shadows": "caffe2.python.dataio.ReaderWithDelay"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.ReaderWithLimit": {
  "data": {
   "shadows": "caffe2.python.dataio.ReaderWithLimit"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.ReaderWithTimeLimit": {
  "data": {
   "shadows": "caffe2.python.dataio.ReaderWithTimeLimit"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.TestCompositeReader": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio_test.TestCompositeReader.test_composite_reader": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.dataio.CompositeReader",
    "caffe2.python.dataio_test.make_destination_dataset",
    "caffe2.python.dataio_test.make_source_dataset",
    "caffe2.python.dataio_test.os",
    "caffe2.python.dataio_test.unittest",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.schema.Struct",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.workspace.C.Workspace",
    "numpy.testing.assert_array_equal",
    "range",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestCompositeReader.test_composite_reader_builder": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "caffe2.python.dataio.CompositeReaderBuilder",
    "caffe2.python.dataio_test.TestReaderBuilder",
    "caffe2.python.dataio_test.make_destination_dataset",
    "caffe2.python.dataio_test.os",
    "caffe2.python.dataio_test.unittest",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.schema.Struct",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.workspace.C.Workspace",
    "numpy.testing.assert_array_equal",
    "range",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio_test.TestDBFileReader._build_source_reader": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "caffe2.python.dataio_test.make_source_dataset",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader._delete_path": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "caffe2.python.dataio_test.os",
    "caffe2.python.dataio_test.shutil",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader._make_temp_path": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "caffe2.python.dataio_test.tempfile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader._read_all_data": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "caffe2.python.dataio_test.make_destination_dataset",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.task.TaskGroup",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.setUp": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.tearDown": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.test_cached_reader": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "caffe2.python.cached_reader.CachedReader",
    "caffe2.python.session.LocalSession",
    "caffe2.python.workspace.C.Workspace",
    "list",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestDBFileReader.test_db_file_reader": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "caffe2.python.cached_reader.CachedReader",
    "caffe2.python.db_file_reader.DBFileReader",
    "caffe2.python.session.LocalSession",
    "caffe2.python.workspace.C.Workspace",
    "list",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderBuilder"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.new_reader": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.schema": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderBuilder.setup": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.dataio_test.make_source_dataset"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit._test_limit_reader_init_shared": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.dataio_test.make_destination_dataset",
    "caffe2.python.dataio_test.make_source_dataset",
    "caffe2.python.session.LocalSession",
    "caffe2.python.workspace.C.Workspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit._test_limit_reader_shared": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithDelay",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.WorkspaceType.GLOBAL",
    "len",
    "list",
    "range",
    "reader_class",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_with_high_limit": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_with_low_limit": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_with_zero_limit": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_count_limit_reader_without_limit": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_runtime_threads": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithLimit",
    "caffe2.python.dataio_test.make_source_dataset",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.workspace.C.Workspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_runtime_threads.proc": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.CountUp",
    "caffe2.python.net_builder.ops.CreateCounter",
    "caffe2.python.net_builder.ops.RetrieveCount",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.net_builder.ops.task_exit",
    "caffe2.python.net_builder.ops.task_init",
    "caffe2.python.net_builder.ops.task_instance_exit",
    "caffe2.python.net_builder.ops.task_instance_init",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_time_limit_reader_with_long_limit": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithTimeLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_time_limit_reader_with_short_limit": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithTimeLimit",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.TestReaderWithLimit.test_time_limit_reader_without_limit": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "caffe2.python.dataio.ReaderWithTimeLimit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.WorkspaceType": {
  "data": {
   "shadows": "caffe2.python.task.WorkspaceType"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.final_output": {
  "data": {
   "shadows": "caffe2.python.task.final_output"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.make_destination_dataset": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.schema"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.make_source_dataset": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Struct",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataio_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.pipe": {
  "data": {
   "shadows": "caffe2.python.pipeline.pipe"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.dataio_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.dataset": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.dataset.Const": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedBlob",
    "isinstance",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataset.Dataset.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_column_list",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.content": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "caffe2.python.schema.from_blob_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.field_names": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.field_types": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.get_blobs": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.init_empty": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "caffe2.python.schema.InitEmptyRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.init_from_dataframe": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "caffe2.python.dataset.Const",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.random_reader": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "caffe2.python.dataset._DatasetRandomReader"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.reader": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "caffe2.python.dataset._DatasetReader"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.trim": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "caffe2.python.dataset.Dataset.writer": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "caffe2.python.dataset._DatasetWriter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.InitEmptyRecord": {
  "data": {
   "shadows": "caffe2.python.schema.InitEmptyRecord"
  },
  "type": "import"
 },
 "caffe2.python.dataset.Reader": {
  "data": {
   "shadows": "caffe2.python.dataio.Reader"
  },
  "type": "import"
 },
 "caffe2.python.dataset.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.dataset.Writer": {
  "data": {
   "shadows": "caffe2.python.dataio.Writer"
  },
  "type": "import"
 },
 "caffe2.python.dataset._DatasetRandomReader": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataset._DatasetRandomReader.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader.__init__"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.computeoffset": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.read": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.output_to_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.reset": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.setup_ex": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetRandomReader.sort_and_shuffle": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataset._DatasetReader.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader.__init__"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader.read": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.output_to_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader.reset": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetReader.setup_ex": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.dataio.Writer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.dataset._DatasetWriter.__init__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter.commit": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter.setup_ex": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "caffe2.python.dataset._DatasetWriter.write": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.dataset.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.dataset.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.dataset.execution_step_with_progress": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.execution_step"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dataset.from_blob_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_blob_list"
  },
  "type": "import"
 },
 "caffe2.python.dataset.from_column_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_column_list"
  },
  "type": "import"
 },
 "caffe2.python.dataset.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.dataset.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.dataset.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.dataset.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.db_file_reader.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.DBFileReader": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.db_file_reader.DBFileReader.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.registered_dbs",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.db_file_reader.DBFileReader",
    "caffe2.python.db_file_reader.os",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._extract_db_name_from_db_path": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "caffe2.python.db_file_reader.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._feed_field_blobs_from_db_file": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "caffe2.python.db_file_reader.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._init_field_blobs_as_empty": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._init_name": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader._init_reader_schema": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.NameScope",
    "caffe2.python.db_file_reader.os",
    "caffe2.python.schema.from_column_list",
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.RunOperatorOnce",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader.read": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.DBFileReader.setup_ex": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "caffe2.python.db_file_reader.Dataset": {
  "data": {
   "shadows": "caffe2.python.dataset.Dataset"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.Reader": {
  "data": {
   "shadows": "caffe2.python.dataio.Reader"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.from_column_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_column_list"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.db_file_reader.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.db_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.db_test.TestDB": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.db_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.db_test.TestDB.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.db_test.os",
    "caffe2.python.db_test.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_test.TestDB.testSimple": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.workspace.C.Mode.read",
    "caffe2.python.workspace.C.Mode.write",
    "caffe2.python.workspace.C.create_db"
   ]
  },
  "type": "function"
 },
 "caffe2.python.db_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.db_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.db_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.db_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.db_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.db_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.db_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.db_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.device_checker": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.device_checker.DeviceChecker": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.device_checker.DeviceChecker.CheckNet": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.workspace.CurrentWorkspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.SwitchWorkspace",
    "future.utils.viewitems",
    "len",
    "list",
    "numpy.abs",
    "numpy.allclose",
    "numpy.max",
    "print",
    "range",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.device_checker.DeviceChecker.CheckSimple": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.device_checker.copy",
    "caffe2.python.workspace.CurrentWorkspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.SwitchWorkspace",
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.allclose",
    "numpy.array",
    "numpy.max",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.device_checker.DeviceChecker.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "caffe2.python.device_checker.InferOpBlobDevicesAsDict": {
  "data": {
   "shadows": "caffe2.python.core.InferOpBlobDevicesAsDict"
  },
  "type": "import"
 },
 "caffe2.python.device_checker.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.device_checker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.device_checker.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.device_checker.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.dll_paths": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "caffe2.python.dyndep": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "caffe2.python.dyndep.GetImportedOpsLibraries": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.dyndep._IMPORTED_DYNDEPS"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dyndep.InitOpsLibrary": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.dyndep._init_impl",
    "caffe2.python.dyndep.os",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dyndep._IMPORTED_DYNDEPS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "caffe2.python.dyndep._init_impl": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.core.RefreshRegisteredOperators",
    "caffe2.python.dyndep._IMPORTED_DYNDEPS",
    "caffe2.python.dyndep.ctypes",
    "caffe2.python.extension_loader.DlopenGuard"
   ]
  },
  "type": "function"
 },
 "caffe2.python.dyndep.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.extension_loader": {
  "data": {
   "shadows": "caffe2.python.extension_loader"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.dyndep.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.embedding_generation_benchmark.Benchmark",
    "caffe2.python.embedding_generation_benchmark.GetArgumentParser",
    "caffe2.python.embedding_generation_benchmark.device",
    "caffe2.python.embedding_generation_benchmark.log",
    "caffe2.python.embedding_generation_benchmark.logging",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.embedding_generation_benchmark.Benchmark": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python.embedding_generation_benchmark.Caffe2EmbeddingGeneration",
    "caffe2.python.utils.debug"
   ]
  },
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.Caffe2EmbeddingGeneration": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.embedding_generation_benchmark.create_model",
    "caffe2.python.embedding_generation_benchmark.generate_data",
    "caffe2.python.embedding_generation_benchmark.generate_embedding_table",
    "caffe2.python.embedding_generation_benchmark.log",
    "caffe2.python.embedding_generation_benchmark.time",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.GetArgumentParser": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "caffe2.python.embedding_generation_benchmark.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.create_model": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.device": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "caffe2.python.embedding_generation_benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.generate_data": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.embedding_generation_benchmark.log",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "max",
    "numpy.arange",
    "numpy.random.seed",
    "numpy.tile",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.generate_embedding_table": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.embedding_generation_benchmark.log",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.embedding_generation_benchmark.log": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.embedding_generation_benchmark.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.embedding_generation_benchmark.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.experiment_util.ExternalLogger": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.experiment_util.abc",
    "caffe2.python.experiment_util.six",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.experiment_util.ExternalLogger.log": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.experiment_util.abc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.experiment_util.ExternalLogger.set_runtime_args": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.experiment_util.abc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.experiment_util.ModelTrainerLog": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "caffe2.python.experiment_util.ModelTrainerLog.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.experiment_util.datetime",
    "caffe2.python.experiment_util.socket",
    "caffe2.python.experiment_util.time",
    "dict",
    "isinstance",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "caffe2.python.experiment_util.ModelTrainerLog.log": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.experiment_util.logging",
    "caffe2.python.experiment_util.time",
    "collections.OrderedDict",
    "future.utils.viewkeys",
    "future.utils.viewvalues",
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.experiment_util.ModelTrainerLog.logstr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "caffe2.python.experiment_util.logging",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.experiment_util.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.experiment_util.viewvalues": {
  "data": {
   "shadows": "future.utils.viewvalues"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.extension_loader.sys",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "caffe2.python.extension_loader.DlopenGuard": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.extension_loader._set_global_flags",
    "caffe2.python.extension_loader.contextlib",
    "caffe2.python.extension_loader.ctypes",
    "caffe2.python.extension_loader.sys"
   ]
  },
  "type": "function"
 },
 "caffe2.python.extension_loader._set_global_flags": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "caffe2.python.extension_loader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.extension_loader.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.functional": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.functional._Functional",
    "caffe2.python.workspace.C.OpSchema"
   ]
  },
  "type": "module"
 },
 "caffe2.python.functional.Functional": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "caffe2.python.functional.OpSchema": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "caffe2.python.functional.Workspace": {
  "data": {
   "shadows": "caffe2.python.onnx.workspace.Workspace"
  },
  "type": "import"
 },
 "caffe2.python.functional._Functional": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.functional._Functional.__getattribute__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "caffe2.python.functional._Functional.__getattribute__.op_func": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.functional.OpSchema",
    "caffe2.python.functional.namedtupledict",
    "caffe2.python.onnx.workspace.Workspace",
    "enumerate",
    "get_name_list",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional._Functional.__getattribute__.op_func.get_name_list": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "min",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.functional.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.functional.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.functional.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.functional.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "caffe2.python.functional.namedtupledict": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "collections.namedtuple",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional.namedtupledict.getitem": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.functional.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "caffe2.python.functional.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.functional.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.functional_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.functional_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.functional_test.Functional": {
  "data": {
   "shadows": "caffe2.python.functional.Functional"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.TestFunctional": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.functional_test.TestFunctional.test_concat": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.python.functional.Functional.Concat",
    "caffe2.python.functional_test._tensor_splits",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "numpy.array",
    "numpy.concatenate",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional_test.TestFunctional.test_relu": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.functional.Functional.Relu",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.WorkspaceGuard",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.sign",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional_test.TestFunctional.test_split": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.functional.Functional.Split",
    "caffe2.python.functional_test._tensor_splits",
    "caffe2.python.hypothesis_test_util.gcs",
    "dict",
    "enumerate",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "len",
    "numpy.concatenate",
    "numpy.testing.assert_array_equal",
    "split_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional_test.TestFunctional.test_split.split_ref": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "input.take",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.cumsum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional_test._tensor_splits": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.tensor",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "len",
    "numpy.array",
    "numpy.diff",
    "numpy.int32",
    "numpy.ones",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.functional_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.functional_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test": {
  "data": {
   "symbols_in_volume": [
    "numpy.vectorize",
    "round"
   ]
  },
  "type": "module"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.TestFused8BitRowwiseQuantizationConversion": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.TestFused8BitRowwiseQuantizationConversion.test_quantize_and_dequantize_op": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_dequantize_reference",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.TestFused8BitRowwiseQuantizationConversion.test_quantize_op": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_reference",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.float32",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.bytes_to_floats": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bytearray",
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.struct",
    "enumerate",
    "numpy.empty",
    "numpy.float32",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.floats_to_bytes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.struct",
    "enumerate",
    "int",
    "isinstance",
    "list",
    "map",
    "numpy.empty",
    "numpy.float32",
    "numpy.shape",
    "numpy.uint8",
    "ord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_dequantize_reference": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.bytes_to_floats",
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_reference",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.fused_rowwise_8bit_quantize_reference": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.floats_to_bytes",
    "caffe2.python.fused_8bit_rowwise_conversion_ops_test.round_to_nearest",
    "numpy.concatenate",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.round_to_nearest": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.fused_8bit_rowwise_conversion_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.get_nvToolsExt_path": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.device_checker",
    "caffe2.python.device_checker.DeviceChecker",
    "caffe2.python.gradient_check_test.cpu_device_option",
    "caffe2.python.gradient_check_test.gpu_device_option",
    "caffe2.python.gradient_check_test.unittest",
    "caffe2.python.gradient_checker.GradientChecker",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support"
   ]
  },
  "type": "module"
 },
 "caffe2.python.gradient_check_test.NetBuilder": {
  "data": {
   "shadows": "caffe2.python.net_builder.NetBuilder"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.NetGradientChecker": {
  "data": {
   "shadows": "caffe2.python.gradient_checker.NetGradientChecker"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.TestAbs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestAbs.setUp": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestAbs.testAbs": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestConcat": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestConcat.setUp": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestConcat.testConcatNCHW": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestConcat.testConcatNHWC": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestCos": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestCos.setUp": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestCos.testCos": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestExp": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestExp.setUp": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestExp.testExp": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestFlatten": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestFlatten.testFlatten": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestIf": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestIf.testIf": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "abs",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.net_builder.NetBuilder",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.ConstantFill",
    "caffe2.python.net_builder.ops.Else",
    "caffe2.python.net_builder.ops.FC",
    "caffe2.python.net_builder.ops.GaussianFill",
    "caffe2.python.net_builder.ops.GivenTensorFill",
    "caffe2.python.net_builder.ops.IfNet",
    "caffe2.python.net_builder.ops.LT",
    "caffe2.python.net_builder.ops.SquaredL2Distance",
    "caffe2.python.net_builder.ops.UniformFill",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestLRN": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestLRN.setUp": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestLRN.testLRN": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestMakeTwoClass": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestMakeTwoClass.setUp": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestMakeTwoClass.testMakeTwoClass": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestNetGradientChecker": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestNetGradientChecker.test_net_comparison": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
    "enumerate",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestNetGradientChecker.test_net_gradient_checker": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.gradient_checker.NetGradientChecker.Check",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestRelu": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestRelu.setUp": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestRelu.testRelu": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSigmoid": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestSigmoid.setUp": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSigmoid.testSigmoid": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSin": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestSin.setUp": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSin.testSin": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSum": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestSum.setUp": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestSum.testSum": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestTanh": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestTanh.setUp": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestTanh.testTanh": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.device_checker.CheckSimple",
    "caffe2.python.gradient_check_test.gradient_checkers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.TestWhile": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_check_test.TestWhile.testWhile": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "caffe2.python.gradient_check_test.unittest",
    "caffe2.python.net_builder.NetBuilder",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Condition",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.Copy",
    "caffe2.python.net_builder.ops.Else",
    "caffe2.python.net_builder.ops.IfNet",
    "caffe2.python.net_builder.ops.LE",
    "caffe2.python.net_builder.ops.LT",
    "caffe2.python.net_builder.ops.Pow",
    "caffe2.python.net_builder.ops.WhileNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_check_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.cpu_device_option": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "caffe2.python.gradient_check_test.device_checker": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "caffe2.python.gradient_check_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.gpu_device_checker": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "caffe2.python.gradient_check_test.gpu_device_option": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "caffe2.python.gradient_check_test.gpu_gradient_checkers": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "caffe2.python.gradient_check_test.gradient_checker": {
  "data": {
   "shadows": "caffe2.python.gradient_checker"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.gradient_checkers": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "caffe2.python.gradient_check_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.gradient_check_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.gradient_checker.GradientChecker": {
  "data": {
   "lineno": 155
  },
  "type": "class"
 },
 "caffe2.python.gradient_checker.GradientChecker.CheckSimple": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.gradient_checker.getGradientForOp",
    "caffe2.python.workspace.CurrentWorkspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.SwitchWorkspace",
    "enumerate",
    "numpy.any",
    "numpy.flatnonzero",
    "numpy.isclose",
    "numpy.vstack",
    "numpy.zeros_like",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.GradientChecker.GetLossAndGrad": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.RunOperatorsOnce",
    "isinstance",
    "len",
    "numpy.float32",
    "numpy.ones",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.GradientChecker.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.Check": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "GetLoss",
    "GetValue",
    "caffe2.python.gradient_checker._assert_close",
    "caffe2.python.gradient_checker._get_grad",
    "numpy.zeros_like",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.Check.GetLoss": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.Check.GetValue": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.CompareNets": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_get_output_with_grad_names",
    "caffe2.python.gradient_checker._assert_close",
    "caffe2.python.gradient_checker._get_grad",
    "caffe2.python.net_drawer.GetPydotGraph",
    "enumerate",
    "len",
    "open",
    "staticmethod",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.NetGradientChecker.CompareNets._get_output_with_grad_names": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker._assert_close": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "max",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker._get_grad": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.gradient_checker._get_grad_blob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker._get_grad_blob": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.blobs",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.getGradientForOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.GradientRegistry.GetGradientForOp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gradient_checker.net_drawer": {
  "data": {
   "shadows": "caffe2.python.net_drawer"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.gradient_checker.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.gru_cell.GRUCell",
    "caffe2.python.gru_cell.functools",
    "caffe2.python.rnn_cell._LSTM"
   ]
  },
  "type": "module"
 },
 "caffe2.python.gru_cell.GRU": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "caffe2.python.gru_cell.GRUCell": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.gru_cell.GRUCell.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.gru_cell.GRUCell",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell._apply": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell.get_output_dim": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell.get_state_names": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "caffe2.python.gru_cell.GRUCell.prepare_input": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.gru_cell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.gru_cell.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.algebra": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.algebra.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.algebra.batch_mat_mul": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "caffe2.python.helpers.algebra.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.algebra.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.algebra.sum": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "caffe2.python.helpers.algebra.transpose": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "caffe2.python.helpers.algebra.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.arg_scope": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.helpers.arg_scope.threading"
   ]
  },
  "type": "module"
 },
 "caffe2.python.helpers.arg_scope._threadlocal_scope": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "caffe2.python.helpers.arg_scope.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.arg_scope.arg_scope": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.helpers.arg_scope._threadlocal_scope",
    "caffe2.python.helpers.arg_scope.contextlib",
    "caffe2.python.helpers.arg_scope.copy",
    "caffe2.python.helpers.arg_scope.get_current_scope",
    "callable",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.arg_scope.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "caffe2.python.helpers.arg_scope.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.helpers.arg_scope.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.arg_scope.get_current_scope": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.helpers.arg_scope._threadlocal_scope",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.arg_scope.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.arg_scope.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.helpers.array_helpers": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.array_helpers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.array_helpers.concat": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "caffe2.python.helpers.array_helpers.depth_concat": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.helpers.array_helpers.concat",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.array_helpers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.array_helpers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.array_helpers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.control_ops": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.control_ops.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.control_ops.add_if_op": {
  "data": {
   "shadows": "caffe2.python.control_ops_util.add_if_op"
  },
  "type": "import"
 },
 "caffe2.python.helpers.control_ops.add_while_op": {
  "data": {
   "shadows": "caffe2.python.control_ops_util.add_while_op"
  },
  "type": "import"
 },
 "caffe2.python.helpers.control_ops.cond": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.control_ops_util.add_if_op"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.control_ops.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.control_ops.loop": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.control_ops_util.add_while_op"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.control_ops.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.control_ops.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.conv.ParameterTags": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterTags"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv._ConvBase": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.modeling.initializers.ExternalInitializer",
    "caffe2.python.modeling.initializers.update_initializer",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "int",
    "isinstance",
    "len",
    "list",
    "transform_inputs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.conv.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv.conv": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.python.helpers.conv._ConvBase",
    "transform_inputs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.conv.conv_nd": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "caffe2.python.helpers.conv._ConvBase",
    "transform_inputs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.conv.conv_transpose": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.conv.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv.group_conv": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "caffe2.python.helpers.conv.conv"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.conv.group_conv_deprecated": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "int",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.conv.initializers": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.conv.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.db_input": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.db_input.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.db_input.db_input": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "caffe2.python.helpers.db_input.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.db_input.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.db_input.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.dropout": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.dropout.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.dropout.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.dropout.dropout": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "caffe2.python.helpers.dropout.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.dropout.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.elementwise_linear": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.elementwise_linear.ParameterTags": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterTags"
  },
  "type": "import"
 },
 "caffe2.python.helpers.elementwise_linear._elementwise_linear": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "op_call"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.elementwise_linear.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.elementwise_linear.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.helpers.elementwise_linear.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.elementwise_linear.elementwise_linear": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.helpers.elementwise_linear._elementwise_linear"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.elementwise_linear.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.elementwise_linear.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.fc.ParameterTags": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterTags"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc._FC_or_packed_FC": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.ExternalInitializer",
    "caffe2.python.modeling.initializers.update_initializer",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "op_call"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.fc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc.fc": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.helpers.fc._FC_or_packed_FC"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc_decomp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.update_initializer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc_prune": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.fc.fc_sparse": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.fc.initializers": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc.packed_fc": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python.helpers.fc._FC_or_packed_FC"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.fc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.fc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.nonlinearity": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.nonlinearity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.nonlinearity.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.helpers.nonlinearity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.nonlinearity.prelu": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedBlobReference"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.nonlinearity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.nonlinearity.relu": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "caffe2.python.helpers.nonlinearity.tanh": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "caffe2.python.helpers.nonlinearity.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.normalization.ParameterTags": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterTags"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.initializers": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.instance_norm": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "init_blob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.instance_norm.init_blob": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.layer_norm": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.Initializer",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.lrn": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.scope.CurrentDeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.helpers.normalization.softmax": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.spatial_bn": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.ExternalInitializer",
    "caffe2.python.modeling.initializers.update_initializer",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.spatial_gn": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.ExternalInitializer",
    "caffe2.python.modeling.initializers.update_initializer",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.normalization.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.pooling": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.pooling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.pooling.average_pool": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.python.helpers.pooling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.pooling.max_pool": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "caffe2.python.helpers.pooling.max_pool_with_index": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "caffe2.python.helpers.pooling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.pooling.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.tools": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.tools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.tools.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.tools.image_input": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.tools.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.tools.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.helpers.tools.video_input": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "caffe2.python.helpers.train": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.helpers.train._get_weights": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentNameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.train.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.helpers.train.accuracy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.train.add_weight_decay": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.helpers.train._get_weights"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.train.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.helpers.train.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.helpers.train.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.helpers.train.iter": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.DeviceOption"
   ]
  },
  "type": "function"
 },
 "caffe2.python.helpers.train.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.helpers.train.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.helpers.train.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.hip_test_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.hip_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.hip_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.hip_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.hip_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.hip_test_util.run_in_hip": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.HIP"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hip_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.hsm_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.hsm_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.hsm_util.create_hierarchy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.proto.hsm_pb2.HierarchyProto",
    "recursive_path_builder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hsm_util.create_hierarchy.create_path": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.proto.hsm_pb2.PathProto"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hsm_util.create_hierarchy.recursive_path_builder": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "create_path",
    "enumerate",
    "len",
    "recursive_path_builder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hsm_util.create_node_with_nodes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.proto.hsm_pb2.NodeProto"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hsm_util.create_node_with_words": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.proto.hsm_pb2.NodeProto"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hsm_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.hsm_util.hsm_pb2": {
  "data": {
   "shadows": "caffe2.proto.hsm_pb2"
  },
  "type": "import"
 },
 "caffe2.python.hsm_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.hsm_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.core.DataType.DOUBLE",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT16",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.DataType.INT8",
    "caffe2.python.core.DataType.UINT16",
    "caffe2.python.core.DataType.UINT8",
    "caffe2.python.dyndep.InitOpsLibrary",
    "caffe2.python.hypothesis_test.unittest",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint8"
   ]
  },
  "type": "module"
 },
 "caffe2.python.hypothesis_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.TestOperators": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.hypothesis_test.TestOperators._dense_ftrl": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "isinstance",
    "numpy.abs",
    "numpy.asscalar",
    "numpy.ndarray",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.stack",
    "numpy.take",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators._dense_ftrl_send_alpha_by_input": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test.TestOperators",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators._dense_gftrl": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asscalar",
    "numpy.linalg.norm",
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.stack",
    "numpy.take",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_abs": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_abs.abs_ref": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accumulate_histogram_op": {
  "data": {
   "lineno": 2332,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accumulate_histogram_op.histogram": {
  "data": {
   "lineno": 2345,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accuracy": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_accuracy.op_ref": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_add": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._test_binary",
    "caffe2.python.hypothesis_test._test_binary_broadcast",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_add.not_overflow": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_add.ref": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_atomic_iter_with_concurrent_steps": {
  "data": {
   "lineno": 1762,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "list",
    "numpy.asarray",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_averaged_loss": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_batch_to_space": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_blobs_dequeue_timeout": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test.time"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_blobs_queue_threading": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "ImportError",
    "Queue.Queue",
    "any",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test.threading",
    "caffe2.python.hypothesis_test_util.device_options",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_blobs_queue_threading.enqueue": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "Queue.Empty",
    "caffe2.python.core.CreateOperator",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cast": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.TensorProto.DataType.Name",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test._NUMPY_TYPE_TO_ENUM",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "future.utils.viewkeys",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "list",
    "numpy.bool",
    "numpy.clip",
    "numpy.float32",
    "numpy.float64",
    "numpy.iinfo",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cast.ref": {
  "data": {
   "lineno": 1816
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_comparison_ops": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._test_binary",
    "caffe2.python.hypothesis_test._test_binary_broadcast",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "future.utils.viewitems",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_constant_fill": {
  "data": {
   "lineno": 1865,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test._NUMPY_TYPE_TO_ENUM",
    "caffe2.python.hypothesis_test._dtypes",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "list",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "ref",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_constant_fill.ref": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cos": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_cos.cos_ref": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dag_net_forking": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.has_gpu_support",
    "dict",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.square",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "print",
    "range",
    "reversed",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dag_net_forking.run": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat.depth_concat": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.shape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat_with_order": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_depth_concat_with_order.depth_concat_with_order": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.shape"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_disabled_execution_step": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "createNets",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_disabled_execution_step.createNets": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._test_binary",
    "caffe2.python.hypothesis_test._test_binary_broadcast",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div.div_dtypes": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div.non_zero": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_div.ref": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product.dotproduct": {
  "data": {
   "lineno": 2259,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_padding": {
  "data": {
   "lineno": 2267,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_padding.dotproduct": {
  "data": {
   "lineno": 2278,
   "symbols_in_volume": [
    "max",
    "numpy.float32",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_rep_padding": {
  "data": {
   "lineno": 2292,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_dot_product_with_rep_padding.dotproduct": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "numpy.matlib.repmat",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_elman_recurrent_network": {
  "data": {
   "lineno": 1911,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "future.utils.viewitems",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_elman_recurrent_network.reference": {
  "data": {
   "lineno": 1991,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test.sigmoid",
    "input.reshape",
    "input.shape",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_ensure_dense": {
  "data": {
   "lineno": 2318,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_exp": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_exp.exp_ref": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_ftrl_sgd": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.abs",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_ftrl_sgd_send_alpha_by_input": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.abs",
    "numpy.array",
    "numpy.float32",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_fully_connected_axis": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "enumerate",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "list",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "prod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_fully_connected_axis.prod": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_gftrl_sgd": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.abs",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_has_elements": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_instance_norm": {
  "data": {
   "lineno": 2172,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal",
    "range",
    "ref_nchw"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_instance_norm.ref_nchw": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_instance_norm.ref_nhwc": {
  "data": {
   "lineno": 2204,
   "symbols_in_volume": [
    "ref_nchw"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_iter_count_with_execution_step": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.asarray",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_last_n_windows": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.CreateBlob",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_range_fill": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_range_fill.op_ref": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.array",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_ranges": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_ranges.op_ref": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.concatenate",
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_segment_ids": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_segment_ids.op_ref": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_weights": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_lengths_to_weights.lengths_to_weights": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "float",
    "numpy.array",
    "pow"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_log": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_log.log_ref": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_logit": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_logit.ref": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_max": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "numpy.logical_and",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_max.elementwise_max": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_momentum_sgd": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "int",
    "numpy.asarray",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_momentum_sgd.momentum_sgd": {
  "data": {
   "lineno": 512
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_mul": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._test_binary",
    "caffe2.python.hypothesis_test._test_binary_broadcast",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_mul.not_overflow": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_mul.ref": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_multi_class_accuracy": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_multi_class_accuracy.op_ref": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.argmax",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_negative": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_pad_image": {
  "data": {
   "lineno": 2125,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "max",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_pad_image.numpy_pad_ref": {
  "data": {
   "lineno": 2163,
   "symbols_in_volume": [
    "numpy.pad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_perplexity": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_perplexity.op_ref": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "functools.reduce",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_print": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.random.permutation"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_random_seed_behaviour": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.hypothesis_test.copy",
    "caffe2.python.hypothesis_test_util.expanded_device_options",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_random_seed_behaviour.run": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.C.Workspace",
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_recurrent": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test.unittest",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.hip_do",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "enumerate",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.empty",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_replace_nan": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_replace_nan.ref": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_rmsprop_sgd": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.abs",
    "numpy.asarray",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_rmsprop_sgd.rmsprop": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_row_mul": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "range",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_row_mul.ref": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_safe_blobs_queue": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "Queue",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.hypothesis_test_util.device_options",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_same_pad_image": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_same_pad_image.numpy_pad_ref": {
  "data": {
   "lineno": 2117,
   "symbols_in_volume": [
    "numpy.pad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_scale": {
  "data": {
   "lineno": 2066,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_lengths": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "lengths_to_ids",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_lengths.ids_to_lengths": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_lengths.lengths_to_ids": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_ranges": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "lengths_to_segment_ids",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_ranges.lengths_to_segment_ids": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_segment_ids_to_ranges.op_ref": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_shape": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_shape_with_axes": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "len",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_shape_with_axes.shape_ref": {
  "data": {
   "lineno": 1637
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_should_stop_as_criteria_net_execution_step": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "max",
    "numpy.asarray",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sin": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sin.sin_ref": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_slice": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "input",
    "input.shape",
    "len",
    "list",
    "max",
    "min",
    "numpy.int32",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_slice.slice_ref": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "len",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_softsign": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_softsign.softsign": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_space_to_batch": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.abs",
    "numpy.arange",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd.ftrl": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd_send_alpha_by_input": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_ftrl_sgd_send_alpha_by_input.ftrl": {
  "data": {
   "lineno": 765
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_to_dense": {
  "data": {
   "lineno": 2226,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.proto.caffe2_pb2.HIP",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test._dtypes",
    "caffe2.python.hypothesis_test._tensor_and_indices",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sparse_to_dense.sparse_to_dense": {
  "data": {
   "lineno": 2244,
   "symbols_in_volume": [
    "enumerate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_squeeze_expand_dims": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_squeeze_expand_dims.expand_dims_ref": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "list",
    "numpy.expand_dims",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_squeeze_expand_dims.squeeze_ref": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "list",
    "numpy.squeeze",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_string_serde": {
  "data": {
   "lineno": 2077,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.text"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sub": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._test_binary",
    "caffe2.python.hypothesis_test._test_binary_broadcast",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sub.ref": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_sum": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "hypothesis.strategies.booleans"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tanh": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_tt_layer": {
  "data": {
   "lineno": 1481,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.tt_core.init_tt_cores",
    "hypothesis.given",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_unique": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_no_hip",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "input",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_unique.unique_valid": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "len",
    "numpy.testing.assert_array_equal",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_weighted_sample_blobs_queue": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.random.randint",
    "numpy.random.uniform",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.TestOperators.test_weighted_sample_blobs_queue.append": {
  "data": {
   "lineno": 1407
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._NUMPY_TYPE_TO_ENUM": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test._dtypes": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._tensor_and_indices": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.tuples",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._tensor_and_prefix": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "draw",
    "hypothesis.assume",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.lists",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._dtypes",
    "caffe2.python.hypothesis_test_util.gcs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary.test_binary": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.tensors",
    "dtypes",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.sampled_from",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary_broadcast": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test._dtypes",
    "caffe2.python.hypothesis_test_util.gcs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary_broadcast.test_binary_broadcast": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test._tensor_and_prefix",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "dtypes",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.just"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test._test_binary_broadcast.test_binary_broadcast.cast_ref": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.array",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.npm": {
  "data": {
   "shadows": "numpy.matlib"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.sigmoid": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.tt_core": {
  "data": {
   "shadows": "caffe2.python.tt_core"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.proto.caffe2_pb2.HIP",
    "caffe2.python.hypothesis_test_util._device_options_no_hip",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.device_checker_device_options",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.gradient_checker_device_option",
    "caffe2.python.hypothesis_test_util.hip_do",
    "caffe2.python.hypothesis_test_util.hypothesis",
    "caffe2.python.hypothesis_test_util.is_sandcastle",
    "caffe2.python.hypothesis_test_util.os",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "dict",
    "hypothesis.strategies.just",
    "hypothesis.strategies.sampled_from",
    "range"
   ]
  },
  "type": "module"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase._assertGradReferenceChecks": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorsOnce",
    "grad_reference",
    "isinstance",
    "len",
    "numpy.testing.assert_allclose",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase._assertInferTensorChecks": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.proto.caffe2_pb2.TensorProto.INT32",
    "caffe2.proto.caffe2_pb2.TensorProto.INT64",
    "caffe2.python.hypothesis_test_util.logging",
    "caffe2.python.hypothesis_test_util.os",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "numpy.dtype",
    "numpy.int32",
    "numpy.ndarray",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertDeviceChecks": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "caffe2.python.device_checker.DeviceChecker",
    "caffe2.python.hypothesis_test_util.device_options"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertGradientChecks": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "caffe2.python.gradient_checker.GradientChecker",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertReferenceChecks": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.copy",
    "caffe2.python.hypothesis_test_util.logging",
    "caffe2.python.hypothesis_test_util.os",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "grad_reference",
    "isinstance",
    "len",
    "list",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "reference",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertRunOpRaises": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.hypothesis_test_util.copy",
    "caffe2.python.hypothesis_test_util.six",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.HypothesisTestCase.assertValidationChecks": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.hypothesis_test_util.copy",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "len",
    "list",
    "set",
    "validator",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util._device_options_no_hip": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.arrays": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.dims",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.hypothesis",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.cpu_do": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.device_checker": {
  "data": {
   "shadows": "caffe2.python.device_checker"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.device_checker_device_options": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.device_options",
    "hypothesis.strategies.just"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.device_options": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.dims": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.elements_of_type": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.bool",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.expanded_device_options": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.gcs": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.gcs_cpu_only": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.gcs_gpu_only": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.gcs_no_hip": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.gpu_do": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.gradient_checker": {
  "data": {
   "shadows": "caffe2.python.gradient_checker"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.gradient_checker_device_option": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.device_options",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.hip_do": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "caffe2.python.hypothesis_test_util.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.hypothesis.extra.numpy": {
  "data": {
   "shadows": "hypothesis.extra.numpy"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.is_sandcastle": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.is_travis": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.lengths": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.hypothesis",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "max",
    "numpy.append",
    "numpy.array",
    "numpy.diff",
    "numpy.empty",
    "numpy.int32",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.lengths_tensor": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.functools",
    "caffe2.python.hypothesis_test_util.lengths",
    "caffe2.python.hypothesis_test_util.segmented_tensor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.runOpBenchmark": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.hypothesis_test_util.copy",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.BenchmarkNet",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.runOpOnInput": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.InferOpBlobDevicesAsDict",
    "caffe2.python.hypothesis_test_util.copy",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.segment_ids": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.segmented_tensor": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "caffe2.python.hypothesis_test_util.segment_ids",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.tuples",
    "numpy.float32",
    "segment_generator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.sparse_lengths_tensor": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.lengths",
    "caffe2.python.hypothesis_test_util.sparse_segmented_tensor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.sparse_segmented_tensor": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "caffe2.python.hypothesis_test_util.segment_ids",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.tuples",
    "numpy.float32",
    "numpy.int64",
    "segment_generator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.temp_workspace": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.contextlib",
    "caffe2.python.workspace.CurrentWorkspace",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.SwitchWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensor": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "hypothesis.strategies.lists",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensor1d": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.tensor",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensors": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "hypothesis.strategies.lists",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.tensors1d": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.tensors",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.hypothesis_test_util.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.hypothesis_test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.proto.caffe2_pb2.IDEEP",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.ideep_test_util.cpu_do",
    "caffe2.python.ideep_test_util.device_checker_device_options",
    "caffe2.python.ideep_test_util.gradient_checker_device_option",
    "caffe2.python.ideep_test_util.ideep_do",
    "dict",
    "hypothesis.strategies.just",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "module"
 },
 "caffe2.python.ideep_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.cpu_do": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.device_checker_device_options": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.ideep_test_util.device_options",
    "hypothesis.strategies.just"
   ]
  },
  "type": "function"
 },
 "caffe2.python.ideep_test_util.device_options": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.gcs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.gcs_cpu_ideep": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.gcs_cpu_only": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.gcs_ideep_only": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.gradient_checker_device_option": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.ideep_test_util.device_options",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.ideep_test_util.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.ideep_do": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.ideep_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.ideep_test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layer_model_helper.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.NoOptim": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._GetOne": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "AttributeError",
    "caffe2.python.layers.layers.layer_exists",
    "is_functional_layer",
    "resolve_functional_layer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.is_functional_layer": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.resolve_functional_layer": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.IsOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.wrapper": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.create_layer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__getattr__.wrapper.apply_operator": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.layer_model_helper.LayerModelHelper",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Struct",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._add_global_constants": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "future.utils.viewvalues"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._get_global_constant_initializer_op": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "initializer",
    "numpy.array",
    "numpy.bool",
    "numpy.int32",
    "numpy.int64",
    "numpy.str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._get_global_constant_initializer_op.initializer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._init_global_constants": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper._validate_param_shape": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.scope.CurrentNameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_ad_hoc_plot_blob": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.layer_model_helper.six",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "numpy.float",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_final_net_modifiers": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_global_constant": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "caffe2.python.layer_model_helper.LayerModelHelper",
    "caffe2.python.layer_model_helper.six",
    "initializer",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_layer": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.layer_model_helper.logger",
    "caffe2.python.layers.layers.LayerParameter",
    "caffe2.python.modeling.parameter_info.ParameterInfo",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_loss": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_metric_field": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_output_schema": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_post_grad_net_modifiers": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_prediction": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.add_trainer_extra_schema": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "caffe2.python.schema.NewRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_final_net_modifiers": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "modifier"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_optimizers": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.muji.OnCPU",
    "caffe2.python.optimizer.get_param_device",
    "future.utils.viewitems",
    "optimizer",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_post_grad_net_modifiers": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "modifier"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_regularizers_after_optimizer": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.muji.OnCPU",
    "caffe2.python.optimizer.get_param_device",
    "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
    "caffe2.python.regularizer.Regularizer",
    "future.utils.viewitems",
    "isinstance",
    "regularizer",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_regularizers_on_loss": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
    "caffe2.python.regularizer.Regularizer",
    "caffe2.python.schema.Scalar",
    "future.utils.viewitems",
    "isinstance",
    "regularizer",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.apply_seed": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.breakdown_map": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "all",
    "caffe2.python.layer_model_helper.six",
    "dict",
    "isinstance",
    "len",
    "list",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.clear_output_schema": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.create_init_net": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.create_param": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.layer_model_helper.copy",
    "caffe2.python.layer_model_helper.six",
    "caffe2.python.layers.layers.LayerParameter",
    "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
    "initializer",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.default_optimizer": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.get_parameter_blobs": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.has_loss": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.input_feature_schema": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.layers": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.loss": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.maybe_add_global_constant": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "caffe2.python.layer_model_helper.LayerModelHelper",
    "caffe2.python.utils.OpAlmostEqual",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.metrics_schema": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.next_layer_name": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "caffe2.python.core.ScopedName",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.output_schema": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "caffe2.python.schema"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.prediction": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.preproc_output_schema": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "caffe2.python.schema"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.seed": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.sequence_seed": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.set_initialize_params": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.store_seed": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.LayerModelHelper.trainer_extra_schema": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_helper.NetModifier": {
  "data": {
   "shadows": "caffe2.python.modeling.net_modifier.NetModifier"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.ParameterInfo": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterInfo"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.RegularizationBy": {
  "data": {
   "shadows": "caffe2.python.regularizer.RegularizationBy"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.Regularizer": {
  "data": {
   "shadows": "caffe2.python.regularizer.Regularizer"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.get_param_device": {
  "data": {
   "shadows": "caffe2.python.optimizer.get_param_device"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.layers": {
  "data": {
   "shadows": "caffe2.python.layers.layers"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "caffe2.python.layer_model_helper.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.muji": {
  "data": {
   "shadows": "caffe2.python.muji"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.parameter_sharing_context": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_sharing.parameter_sharing_context"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_helper.viewvalues": {
  "data": {
   "shadows": "future.utils.viewvalues"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layer_model_instantiator.InstantiationContext": {
  "data": {
   "shadows": "caffe2.python.layers.layers.InstantiationContext"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator._filter_layers": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator._generate_training_net_only": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.layer_model_instantiator._filter_layers",
    "caffe2.python.layer_model_instantiator.shrink_output_schema",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_TRAIN"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator.generate_eval_net": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.layer_model_instantiator._filter_layers",
    "caffe2.python.layer_model_instantiator.shrink_output_schema",
    "caffe2.python.layers.layers.InstantiationContext.EVAL",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_EVAL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_predict_net": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.layer_model_instantiator._filter_layers",
    "caffe2.python.layer_model_instantiator.shrink_output_schema",
    "caffe2.python.layers.layers.InstantiationContext.PREDICTION",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_training_nets": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator._generate_training_net_only"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator._generate_training_net_only"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layer_model_instantiator.shrink_output_schema": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.schema.from_column_list",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_model_instantiator.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layer_parameter_sharing_test.LayersTestCase": {
  "data": {
   "shadows": "caffe2.python.layer_test_util.LayersTestCase"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharing": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_sharing.ParameterSharing"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.LayersTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_duplicated_parameter_init": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_parameter_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.scope.NameScope",
    "fc1_output",
    "fc2_output",
    "fc3_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_different_namescopes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope",
    "fc1_output",
    "fc2_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_different_shapes": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.layer_parameter_sharing_test.six",
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_within_same_namescope": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.ParameterSharingTest.test_layer_shared_parameter_name_within_same_namescope_customized_name": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_parameter_sharing_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.layer_parameter_sharing_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layer_test_util.LayersTestCase": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertArgsEqual": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "parse_args"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertArgsEqual.parse_args": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python.utils.MakeArgument"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertBlobsEqual": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.assertNetContainOps": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.get_eval_net": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_eval_net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.get_predict_net": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_predict_net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.get_training_nets": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.new_record": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.schema.NewRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.reset_model": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.layer_model_helper.LayerModelHelper",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.run_train_net": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_training_nets",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.run_train_net_forward_only": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.setUp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.LayersTestCase",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.LayersTestCase.setup_example": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.OpSpec": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layer_test_util.OpSpec.__new__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layer_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.layer_model_helper": {
  "data": {
   "shadows": "caffe2.python.layer_model_helper"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.layer_model_instantiator": {
  "data": {
   "shadows": "caffe2.python.layer_model_instantiator"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.layer_test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.layers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.find_subclasses_recursively",
    "caffe2.python.layers.import_recursive",
    "caffe2.python.layers.model_layer_subcls",
    "caffe2.python.layers.sys",
    "list",
    "set"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.layers.adaptive_weight.AdaptiveWeight",
    "caffe2.python.schema.Scalar",
    "float",
    "getattr",
    "len",
    "min",
    "numpy.array",
    "numpy.float32",
    "range",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight._add_ops_impl": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.add_ops": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.concat_data": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.inv_var_init": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.regularizer.BoundedGradientProjection",
    "caffe2.python.regularizer.LogBarrier"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.inv_var_reg": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.inv_var_weight": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.log_std_init": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.log_std_reg": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.AdaptiveWeight.log_std_weight": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "caffe2.python.layers.adaptive_weight.BoundedGradientProjection": {
  "data": {
   "shadows": "caffe2.python.regularizer.BoundedGradientProjection"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.LogBarrier": {
  "data": {
   "shadows": "caffe2.python.regularizer.LogBarrier"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.adaptive_weight.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.add_bias.AddBias": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.add_bias.AddBias.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.layers.add_bias.AddBias",
    "caffe2.python.layers.add_bias.math",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.add_bias.AddBias.add_ops": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "caffe2.python.layers.add_bias.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.add_bias.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap",
    "caffe2.python.schema.Scalar",
    "int",
    "isinstance",
    "numpy.float32",
    "numpy.random.normal",
    "numpy.random.uniform",
    "numpy.sqrt",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap._heaviside_with_power": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap._initialize_params": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap.add_ops": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "caffe2.python.layers.arc_cosine_feature_map.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.arc_cosine_feature_map.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.batch_distill_lr_loss.BatchDistillLRLoss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.batch_distill_lr_loss.BatchDistillLRLoss.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.layers.batch_distill_lr_loss.BatchDistillLRLoss",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "numpy.float",
    "numpy.float32",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_distill_lr_loss.BatchDistillLRLoss.add_ops": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "float",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_distill_lr_loss.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_distill_lr_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.layers.batch_lr_loss.BatchLRLoss",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.add_ops": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.init_weight": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.BatchLRLoss.update_weight": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_lr_loss.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_lr_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.batch_mse_loss.BatchMSELoss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.batch_mse_loss.BatchMSELoss.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.layers.batch_mse_loss.BatchMSELoss",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_mse_loss.BatchMSELoss.add_ops": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.schema.data_type_for_dtype",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_mse_loss.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_mse_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.layers.batch_normalization.BatchNormalization",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "len",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization._add_ops": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.add_eval_ops": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.add_ops": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.BatchNormalization.add_train_ops": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_normalization.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_normalization.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "numpy.float32",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.BatchSigmoidCrossEntropyLoss.add_ops": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_sigmoid_cross_entropy_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.add_ops": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT32",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.compute_smoothed_label": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.BatchSoftmaxLoss.initialize_label_smoothing_constants": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.batch_softmax_loss.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.batch_softmax_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.blob_weighted_sum": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "all",
    "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum",
    "caffe2.python.schema.Scalar",
    "float",
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.blob_weighted_sum.BlobWeightedSum.add_ops": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.blob_weighted_sum.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.blob_weighted_sum.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.blob_weighted_sum.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.blob_weighted_sum.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.blob_weighted_sum.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.blob_weighted_sum.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.bucket_weighted.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.layers.bucket_weighted.BucketWeighted",
    "caffe2.python.layers.layers.get_categorical_limit",
    "caffe2.python.layers.tags.Tags.HANDLE_AS_SPARSE_LAYER",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "len",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted.add_ops": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.bucket_weighted.BucketWeighted.get_memory_usage": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "caffe2.python.layers.bucket_weighted.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.get_categorical_limit": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_categorical_limit"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.layers.bucket_weighted.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.bucket_weighted.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.build_index.MapToRange": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.build_index.MapToRange.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.layers.build_index.MapToRange",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "numpy.int64",
    "numpy.void",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.build_index.MapToRange.add_eval_ops": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "caffe2.python.layers.build_index.MapToRange.add_ops": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "caffe2.python.layers.build_index.MapToRange.add_train_ops": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.build_index.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.build_index.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.concat.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.concat.Concat": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.concat.Concat.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.layers.concat.Concat",
    "caffe2.python.layers.concat.get_concatenated_feature_to_index",
    "caffe2.python.layers.concat.logger",
    "caffe2.python.schema.FeatureSpec",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "future.utils.viewitems",
    "isinstance",
    "len",
    "list",
    "numpy.float32",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.concat.Concat.add_ops": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "caffe2.python.layers.concat.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.get_concatenated_feature_to_index": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "hasattr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.concat.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.layers.concat.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.concat.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.constant_weight.ConstantWeight": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.constant_weight.ConstantWeight.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.constant_weight.ConstantWeight",
    "caffe2.python.schema.Scalar",
    "float",
    "len",
    "numpy.float32",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.constant_weight.ConstantWeight.add_ops": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.constant_weight.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.constant_weight.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.conv.Conv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.conv.Conv.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.layers.conv.Conv",
    "caffe2.python.schema.Scalar",
    "int",
    "isinstance",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.conv.Conv.add_ops": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "caffe2.python.layers.conv.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.conv.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.dropout": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.dropout.Dropout": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.dropout.Dropout.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.layers.dropout.Dropout",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout._add_ops": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout.add_eval_ops": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout.add_ops": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "caffe2.python.layers.dropout.Dropout.add_train_ops": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "caffe2.python.layers.dropout.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.dropout.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.dropout.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.dropout.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.dropout.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.dropout.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.fc.FC": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer",
    "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.fc.FC.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.layers.fc.FC",
    "caffe2.python.layers.fc.math",
    "caffe2.python.schema.Scalar",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.float32",
    "numpy.prod",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.fc.FC._add_ops": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.calculate_fc_output_dims": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "int",
    "numpy.floor",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.fc.FC.param_blobs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.fc.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.SamplingTrainableMixin": {
  "data": {
   "shadows": "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer",
    "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.layers.fc_without_bias.FCWithoutBias",
    "caffe2.python.layers.fc_without_bias.math",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "len",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias._add_ops": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "caffe2.python.layers.fc_without_bias.FCWithoutBias.param_blobs": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.fc_without_bias.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.SamplingTrainableMixin": {
  "data": {
   "shadows": "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.fc_without_bias.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.attach_metadata_to_scalars",
    "len",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.add_ops": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense.FeatureSparseToDense.get_metadata": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "caffe2.python.layers.feature_sparse_to_dense.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.feature_sparse_to_dense.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.find_subclasses_recursively": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "caffe2.python.layers.functional": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.functional.logger",
    "caffe2.python.layers.functional.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.functional.Functional": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.functional.Functional.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT16",
    "caffe2.proto.caffe2_pb2.TensorProto.INT32",
    "caffe2.proto.caffe2_pb2.TensorProto.INT64",
    "caffe2.python.core.Net",
    "caffe2.python.layers.functional.Functional",
    "caffe2.python.layers.functional.logger",
    "caffe2.python.layers.functional.six",
    "caffe2.python.schema.Field",
    "caffe2.python.schema.InitEmptyRecord",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.RawTuple",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.as_record",
    "caffe2.python.scope.NameScope",
    "caffe2.python.workspace.InferShapesAndTypes",
    "function",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.void",
    "range",
    "scalar_schema",
    "scalar_schema.set_type",
    "str",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.functional.Functional.add_ops": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "caffe2.python.layers.functional.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.layers.functional.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.functional.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.gather_record.GatherRecord": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.gather_record.GatherRecord.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.layers.gather_record.GatherRecord",
    "caffe2.python.schema.NewRecord",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._dispatch": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "output_record",
    "record"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._gather_list": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT32",
    "output_record._items",
    "output_record.lengths",
    "record._items",
    "record.lengths",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._gather_scalar": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "output_record",
    "record"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord._gather_struct": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "output_record",
    "record.get_children"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.gather_record.GatherRecord.add_ops": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "caffe2.python.layers.gather_record.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.gather_record.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.homotopy_weight.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.layers.homotopy_weight.HomotopyWeight",
    "caffe2.python.schema.Scalar",
    "float",
    "len",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.add_ops": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.create_atomic_iter": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.solve_inv_lr_params": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.layers.homotopy_weight.logger",
    "float",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.HomotopyWeight.update_weight": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "caffe2.python.layers.homotopy_weight.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.python.layers.homotopy_weight.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.homotopy_weight.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "caffe2.python.layers.import_recursive": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.pkgutil",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.layers.label_smooth.LabelSmooth",
    "caffe2.python.schema.Scalar",
    "numpy.array",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.add_ops": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.add_ops_for_binary_prob_label": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.add_ops_for_categorical_label": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT64",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.set_dim": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "int",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.LabelSmooth.set_smooth_matrix": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.label_smooth.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.label_smooth.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.last_n_window_collector.LastNWindowCollector": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.last_n_window_collector.LastNWindowCollector.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.layers.last_n_window_collector.LastNWindowCollector",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.last_n_window_collector.LastNWindowCollector.add_ops": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "caffe2.python.layers.last_n_window_collector.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.last_n_window_collector.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.layers.layer_normalization.LayerNormalization",
    "caffe2.python.schema.Scalar",
    "float",
    "isinstance",
    "len",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.add_ops": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.add_ops_with_layer_norm_op": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.LayerNormalization.add_ops_without_layer_norm_op": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "caffe2.python.layers.layer_normalization.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.layer_normalization.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.layers.logger",
    "caffe2.python.layers.layers.logging",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Map",
    "collections.namedtuple",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.layers.IdList": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.layers.layers.IdScoreList": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.layers.layers.InstantiationContext": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.layers.LayerParameter": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.layers.LayerParameter.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter.__str__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter._infer_shape_from_initializer": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.Net",
    "caffe2.python.layers.layers.logger",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.WorkspaceGuard",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter.initializer": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerParameter.shape": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.LayerPsParam": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "caffe2.python.layers.layers.ModelLayer": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.layers.ModelLayer.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.is_request_only_scalar",
    "caffe2.python.layers.tags.TagContext.current",
    "isinstance",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer._check_output_schema": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "caffe2.python.schema.is_schema_subset"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_eval_ops": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_init_params": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "any",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.utils.OpAlmostEqual"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_operators": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.InstantiationContext",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_ops": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_ops_to_accumulate_pred": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_param_copy_operators": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.add_train_ops": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.create_param": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "all",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.export_output_for_metrics": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.export_params_for_metrics": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_fp16_compatible_parameters": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_memory_usage": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_next_blob_reference": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_parameters": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.get_type": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.input_record": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.output_schema": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.predict_input_record": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.ModelLayer.predict_output_schema": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.TagContext": {
  "data": {
   "shadows": "caffe2.python.layers.tags.TagContext"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers._LAYER_REGISTRY": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "caffe2.python.layers.layers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.create_layer": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "caffe2.python.layers.layers._LAYER_REGISTRY"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.get_avg_length": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.get_categorical_limit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.get_key"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.get_key": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.layers.layers.IdList",
    "caffe2.python.layers.layers.IdScoreList",
    "caffe2.python.schema.equal_schemas",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.get_layer_class": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.layers.layers._LAYER_REGISTRY"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.is_request_only_scalar": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.layer_exists": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "caffe2.python.layers.layers._LAYER_REGISTRY"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "caffe2.python.layers.layers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.register_layer": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.layers.layers._LAYER_REGISTRY"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.set_request_only": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.schema.FeatureSpec",
    "caffe2.python.schema.Metadata",
    "numpy.integer",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.layers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.layers.layers.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.margin_rank_loss.MarginRankLoss": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.margin_rank_loss.MarginRankLoss.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.layers.margin_rank_loss.MarginRankLoss",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "numpy.float32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.margin_rank_loss.MarginRankLoss.add_ops": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.margin_rank_loss.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.margin_rank_loss.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.merge_id_lists.IdList": {
  "data": {
   "shadows": "caffe2.python.layers.layers.IdList"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.MergeIdLists": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.merge_id_lists.MergeIdLists.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "all",
    "caffe2.python.layers.layers.IdList",
    "caffe2.python.layers.layers.get_categorical_limit",
    "caffe2.python.layers.merge_id_lists.MergeIdLists",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.equal_schemas",
    "max",
    "numpy.int64",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.merge_id_lists.MergeIdLists.add_ops": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "caffe2.python.layers.merge_id_lists.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.get_categorical_limit": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_categorical_limit"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.merge_id_lists.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.model_layer_subcls": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "caffe2.python.layers.pairwise_similarity": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.pairwise_similarity.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.pairwise_similarity.PairwiseSimilarity.add_ops": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.pairwise_similarity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.pairwise_similarity.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.pairwise_similarity.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.pairwise_similarity.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.pairwise_similarity.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.position_weighted.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.position_weighted.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.get_categorical_limit",
    "caffe2.python.layers.position_weighted.PositionWeighted",
    "caffe2.python.layers.position_weighted.logger",
    "caffe2.python.layers.tags.Tags.HANDLE_AS_SPARSE_LAYER",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance",
    "numpy.float32",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted.add_ops": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "caffe2.python.layers.position_weighted.PositionWeighted.get_memory_usage": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "caffe2.python.layers.position_weighted.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.get_categorical_limit": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_categorical_limit"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.layers.position_weighted.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.position_weighted.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.random_fourier_features.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features.RandomFourierFeatures": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.random_fourier_features.RandomFourierFeatures.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.layers.random_fourier_features.RandomFourierFeatures",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "numpy.float32",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.random_fourier_features.RandomFourierFeatures.add_ops": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.random_fourier_features.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.random_fourier_features.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.reservoir_sampling.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling.ReservoirSampling": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.reservoir_sampling.ReservoirSampling.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.layers.reservoir_sampling.ReservoirSampling",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.reservoir_sampling.ReservoirSampling.add_ops": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "caffe2.python.layers.reservoir_sampling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.reservoir_sampling.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.sampling_train.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.get_layer_class",
    "caffe2.python.layers.sampling_train.SamplingTrain",
    "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin",
    "caffe2.python.schema.Scalar",
    "isinstance",
    "issubclass",
    "layer_class",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain.add_ops": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_train.SamplingTrain.add_train_ops": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_train.SamplingTrainableMixin": {
  "data": {
   "shadows": "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.get_layer_class": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_layer_class"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_train.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_trainable_mixin": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.layers.sampling_trainable_mixin.abc",
    "caffe2.python.layers.sampling_trainable_mixin.six",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin._add_ops": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.layers.sampling_trainable_mixin.abc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.add_ops": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.add_train_ops": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.param_blobs": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.layers.sampling_trainable_mixin.abc",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.SamplingTrainableMixin.train_param_blobs": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "caffe2.python.layers.sampling_trainable_mixin.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_trainable_mixin.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_trainable_mixin.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_trainable_mixin.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_trainable_mixin.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.layers.sampling_trainable_mixin.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers.select_record_by_context.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.select_record_by_context.InstantiationContext": {
  "data": {
   "shadows": "caffe2.python.layers.layers.InstantiationContext"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.layers.select_record_by_context.SelectRecordByContext",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.equal_schemas",
    "isinstance",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext._set_output_blobs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_eval_ops": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.InstantiationContext.EVAL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_ops": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.InstantiationContext.PREDICTION"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_ops_to_accumulate_pred": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.InstantiationContext.ACCUMULATE_PRED"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.SelectRecordByContext.add_train_ops": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.InstantiationContext.TRAINING"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.select_record_by_context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "caffe2.python.layers.select_record_by_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.select_record_by_context.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.semi_random_features.ArcCosineFeatureMap": {
  "data": {
   "shadows": "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features.SemiRandomFeatures": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.layers.arc_cosine_feature_map.ArcCosineFeatureMap"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.semi_random_features.SemiRandomFeatures.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.layers.semi_random_features.SemiRandomFeatures",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.is_schema_subset",
    "isinstance",
    "numpy.float32",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.semi_random_features.SemiRandomFeatures.add_ops": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "caffe2.python.layers.semi_random_features.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.semi_random_features.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.sparse_feature_hash.IdList": {
  "data": {
   "shadows": "caffe2.python.layers.layers.IdList"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.IdScoreList": {
  "data": {
   "shadows": "caffe2.python.layers.layers.IdScoreList"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.layers.layers.IdList",
    "caffe2.python.layers.layers.IdScoreList",
    "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash",
    "caffe2.python.layers.tags.Tags.CPU_ONLY",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.equal_schemas",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash.add_ops": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.layers.layers.IdList",
    "caffe2.python.layers.layers.IdScoreList",
    "caffe2.python.schema.equal_schemas"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_feature_hash.SparseFeatureHash.extract_hash_size": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_feature_hash.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_feature_hash.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.sparse_lookup.IdList": {
  "data": {
   "shadows": "caffe2.python.layers.layers.IdList"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.IdScoreList": {
  "data": {
   "shadows": "caffe2.python.layers.layers.IdScoreList"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.LayerPsParam": {
  "data": {
   "shadows": "caffe2.python.layers.layers.LayerPsParam"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.layers.layers.LayerPsParam",
    "caffe2.python.layers.layers.get_categorical_limit",
    "caffe2.python.layers.layers.get_key",
    "caffe2.python.layers.sparse_lookup.SparseLookup",
    "caffe2.python.layers.sparse_lookup._is_id_list",
    "caffe2.python.layers.sparse_lookup._is_id_score_list",
    "caffe2.python.schema.Scalar",
    "int",
    "isinstance",
    "list",
    "numpy.float32",
    "repr",
    "super",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._add_ops": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "caffe2.python.layers.sparse_lookup._is_id_list",
    "caffe2.python.layers.sparse_lookup._is_id_score_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._add_ops_id_list": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._add_ops_id_score_list": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._gather_wrapper": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._get_default_init_op": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.helpers.arg_scope.get_current_scope",
    "caffe2.python.layers.sparse_lookup.get_sparse_lookup_trainer_version",
    "caffe2.python.layers.sparse_lookup.math"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup._sparse_lengths_weighted_reducer": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.add_ops": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "caffe2.python.helpers.arg_scope.get_current_scope",
    "caffe2.python.layers.sparse_lookup.get_sparse_lookup_predictor_version"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.add_train_ops": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.get_8bits_compatible_parameters": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "RowwiseQuantized8BitsWeight",
    "caffe2.python.layers.sparse_lookup.collections"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.get_fp16_compatible_parameters": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.get_memory_usage": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "caffe2.python.layers.sparse_lookup.functools",
    "caffe2.python.layers.sparse_lookup.operator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.SparseLookup.support_8bit": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup._is_id_list": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.IdList",
    "caffe2.python.schema.equal_schemas"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup._is_id_score_list": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.IdScoreList",
    "caffe2.python.schema.equal_schemas"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.get_categorical_limit": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_categorical_limit"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.get_current_scope": {
  "data": {
   "shadows": "caffe2.python.helpers.arg_scope.get_current_scope"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.get_key": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_key"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.get_sparse_lookup_predictor_version": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.get_sparse_lookup_trainer_version": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "caffe2.python.layers.sparse_lookup.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.sparse_lookup.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.split": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.split.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.split.Split": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.split.Split.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.layers.split.Split",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Tuple",
    "int",
    "isinstance",
    "len",
    "list",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.split.Split.add_ops": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "caffe2.python.layers.split.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.split.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.split.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.split.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.split.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.layers.tags": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.layers.tags.Tags"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers.tags.TagContext": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.context.define_context",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.tags.TagContext.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.TagContext.add_tags": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.TagContext.remove_tags": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.tags.Tags.__call__": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__call__.wrapper": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "caffe2.python.layers.tags.six",
    "func"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__enter__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "caffe2.python.layers.tags.TagContext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__exit__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "caffe2.python.layers.tags.TagContext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.Tags.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.tags.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.tags.context": {
  "data": {
   "shadows": "caffe2.python.context"
  },
  "type": "import"
 },
 "caffe2.python.layers.tags.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.tags.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.tags.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.layers.tags.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.layers.uniform_sampling.ModelLayer": {
  "data": {
   "shadows": "caffe2.python.layers.layers.ModelLayer"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.UniformSampling": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.ModelLayer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers.uniform_sampling.UniformSampling.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.layers.uniform_sampling.UniformSampling",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "float",
    "isinstance",
    "numpy.float32",
    "numpy.int32",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers.uniform_sampling.UniformSampling.add_ops": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "caffe2.python.layers.uniform_sampling.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers.uniform_sampling.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.layers_test.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.layers_test.IdList": {
  "data": {
   "shadows": "caffe2.python.layers.layers.IdList"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.InstantiationContext": {
  "data": {
   "shadows": "caffe2.python.layers.layers.InstantiationContext"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.LayersTestCase": {
  "data": {
   "shadows": "caffe2.python.layer_test_util.LayersTestCase"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.OpSpec": {
  "data": {
   "shadows": "caffe2.python.layer_test_util.OpSpec"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.Tags": {
  "data": {
   "shadows": "caffe2.python.layers.tags.Tags"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.TestLayers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.LayersTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.layers_test.TestLayers._testLabelSmooth": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "int",
    "numpy.array",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "smoothed_label"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers._test_net": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testAdaptiveWeight": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.RawTuple",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.log",
    "numpy.random.random",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "range",
    "result"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testAddLoss": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.schema.NamedTuple",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "numpy.float64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testAddOutputSchema": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testArcCosineFeatureMap": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "_arc_cosine_hypothesis_test",
    "ac_output",
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "float",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testArcCosineFeatureMap._arc_cosine_hypothesis_test": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.matmul",
    "numpy.multiply",
    "numpy.piecewise",
    "numpy.power",
    "numpy.testing.assert_allclose",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchLRLoss": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "numpy.float64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchMSELoss": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "numpy.float64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchNormalization": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchSigmoidCrossEntropyLoss": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchSoftmaxLoss": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBatchSoftmaxLossWeight": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "numpy.float64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBlobWeightedSum": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Tuple",
    "caffe2.python.schema.equal_schemas",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "get_blob_weighted_sum",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.float32",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "range",
    "ws_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testBlobWeightedSum.get_blob_weighted_sum": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.HasBlob",
    "numpy.sum",
    "range",
    "result"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testConcat": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testConstantWeight": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.RawTuple",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.random.random",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "result"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testConv": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.Scalar",
    "numpy.float32",
    "numpy.random.random",
    "output_record",
    "output_record.field_types"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testDistillBatchLRLoss": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "numpy.float64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testDistillBatchLRLossWithTeacherWeightScreen": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.FetchBlob",
    "cal_cross_entropy",
    "numpy.array",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testDistillBatchLRLossWithTeacherWeightScreen.cal_cross_entropy": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "cross_entropy",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testDistillBatchLRLossWithTeacherWeightScreen.cross_entropy": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testDropout": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCWithoutBias": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.Scalar",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFCwithAxis2": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayer": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_predict_net",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayer.normalize": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "in_record",
    "out_record"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerHelper": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_predict_net",
    "caffe2.python.schema.Tuple",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerHelperAutoInference": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_predict_net",
    "caffe2.python.schema.Tuple",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerHelperAutoInferenceScalar": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerInputCoercion": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerSameOperatorOutputNames": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerWithOutputDtypes": {
  "data": {
   "lineno": 1326,
   "symbols_in_volume": [
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testFunctionalLayerWithOutputNames": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testGatherRecord": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.equal_schemas",
    "caffe2.python.workspace.FetchBlob",
    "indices",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testHalfToFloatTypeInference": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "caffe2.python.layers_test.unittest",
    "caffe2.python.schema.Scalar",
    "caffe2.python.workspace.has_gpu_support",
    "input",
    "numpy.float16",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testHomotopyWeight": {
  "data": {
   "lineno": 1968,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.RawTuple",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "int",
    "numpy.array",
    "numpy.float32",
    "numpy.random.random",
    "numpy.testing.assert_allclose",
    "result"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLabelSmoothForBinaryProbLabel": {
  "data": {
   "lineno": 2040,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLabelSmoothForCategoricalLabel": {
  "data": {
   "lineno": 2032,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLastNWindowCollector": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.Scalar",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "max",
    "num_visited",
    "numpy.float32",
    "numpy.testing.assert_array_equal",
    "output_record"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testLayerNormalization": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testMapToRange": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "indices",
    "indices_blob",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testMarginRankLoss": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testMergeIdListsLayer": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.IdList",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Tuple",
    "caffe2.python.schema.equal_schemas",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityIncorrectInput": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.schema.List",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityWithAllEmbeddings": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityWithXandYEmbeddings": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPairwiseSimilarityWithXandYEmbeddingsAndGather": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "len",
    "numpy.float32",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testPropagateRequestOnly": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.is_request_only_scalar",
    "caffe2.python.layers.layers.set_request_only",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testRandomFourierFeatures": {
  "data": {
   "lineno": 1460,
   "symbols_in_volume": [
    "_rff_hypothesis_test",
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.FetchBlob",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.random",
    "numpy.sqrt",
    "rff_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testRandomFourierFeatures._rff_hypothesis_test": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.cos",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testReservoirSamplingWithID": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.DeserializeBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.SerializeBlob",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "num_visited",
    "numpy.array",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSamplingTrain": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "indices",
    "len",
    "numpy.float32",
    "numpy.int32",
    "sampling_prob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSelectRecordByContext": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "caffe2.python.layer_model_instantiator.generate_eval_net",
    "caffe2.python.layer_model_instantiator.generate_predict_net",
    "caffe2.python.layer_model_instantiator.generate_training_nets_forward_only",
    "caffe2.python.layers.layers.InstantiationContext.EVAL",
    "caffe2.python.layers.layers.InstantiationContext.PREDICTION",
    "caffe2.python.layers.layers.InstantiationContext.TRAINING",
    "caffe2.python.layers.tags.Tags",
    "caffe2.python.layers.tags.Tags.EXCLUDE_FROM_PREDICTION",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.log",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSemiRandomFeatures": {
  "data": {
   "lineno": 1652,
   "symbols_in_volume": [
    "_semi_random_hypothesis_test",
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "float",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.normal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSemiRandomFeatures._semi_random_hypothesis_test": {
  "data": {
   "lineno": 1664,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.matmul",
    "numpy.multiply",
    "numpy.piecewise",
    "numpy.power",
    "numpy.testing.assert_allclose",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSetRequestOnly": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "caffe2.python.layers.layers.set_request_only",
    "caffe2.python.schema.FeatureSpec",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.attach_metadata_to_scalars",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseFeatureHashIdList": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseFeatureHashIdScoreList": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupIncorrectPositionWeightedOnIdList": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupIncorrectRecencyWeightedOnIdList": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupPositionWeightedOnIdList": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.layers.layers.get_key",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "embedding_after_pooling",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupPositionWeightedOnIdScoreList": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "embedding_after_pooling",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupRecencyWeightedOnIdScoreList": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "embedding_after_pooling",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testSparseLookupSumPooling": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.OpSpec",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "embedding_after_pooling",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testUniformSampling": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.workspace.FetchBlob",
    "float",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "sampling_prob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.TestLayers.testUniformSamplingWithIncorrectSampleSize": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.schema.Scalar",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.layers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.get_key": {
  "data": {
   "shadows": "caffe2.python.layers.layers.get_key"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.is_request_only_scalar": {
  "data": {
   "shadows": "caffe2.python.layers.layers.is_request_only_scalar"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.layer_model_instantiator": {
  "data": {
   "shadows": "caffe2.python.layer_model_instantiator"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "caffe2.python.layers_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.set_request_only": {
  "data": {
   "shadows": "caffe2.python.layers.layers.set_request_only"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.layers_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.TestLengthsReducerOpsFused8BitRowwise": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.TestLengthsReducerOpsFused8BitRowwise.test_sparse_lengths_mean": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.clip",
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.TestLengthsReducerOpsFused8BitRowwise.test_sparse_lengths_sum": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.clip",
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.random.uniform",
    "numpy.testing.assert_array_almost_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_fused_8bit_rowwise_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.FakeQuantization8BitsRowwise": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits.test_SparseSegmentUint8": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits.test_quantize_op": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.FakeQuantization8BitsRowwise",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.asarray",
    "numpy.float32",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.TestQuantize8bits.test_quantize_tensor_with_const_row_op": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.FakeQuantization8BitsRowwise",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.asarray",
    "numpy.float32",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.lengths_reducer_rowwise_8bit_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.lstm_benchmark.Benchmark",
    "caffe2.python.lstm_benchmark.GetArgumentParser",
    "caffe2.python.lstm_benchmark.device",
    "caffe2.python.lstm_benchmark.log",
    "caffe2.python.lstm_benchmark.logging",
    "caffe2.python.lstm_benchmark.rnn_executor_opt",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "module"
 },
 "caffe2.python.lstm_benchmark.Benchmark": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "caffe2.python.lstm_benchmark.Caffe2LSTM",
    "caffe2.python.utils.debug"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.Caffe2LSTM": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "caffe2.python.lstm_benchmark.create_model",
    "caffe2.python.lstm_benchmark.generate_data",
    "caffe2.python.lstm_benchmark.log",
    "caffe2.python.lstm_benchmark.time",
    "caffe2.python.utils.GetGPUMemoryUsageStats",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "min",
    "numpy.array",
    "numpy.int32",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.GetArgumentParser": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "caffe2.python.lstm_benchmark.argparse",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.create_model": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.recurrent.set_rnn_executor_config",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.rnn_cell.cudnn_LSTM",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.device": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "caffe2.python.lstm_benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.generate_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.lstm_benchmark.log",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "max",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.lstm_benchmark.log": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.lstm_benchmark.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.recurrent": {
  "data": {
   "shadows": "caffe2.python.recurrent"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.rnn_executor_opt": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "caffe2.python.lstm_benchmark.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.lstm_benchmark.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.memonger_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.memonger_test.MemongerTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_assignments_dp": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "LiveRange",
    "caffe2.python.memonger.LiveRange",
    "caffe2.python.memonger.compute_assignments_dp",
    "caffe2.python.memonger.get_memory_usage"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_assignments_dp1": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "LiveRange",
    "caffe2.python.memonger.LiveRange",
    "caffe2.python.memonger.compute_assignments_dp",
    "caffe2.python.memonger.get_memory_usage"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_assignments_greedy": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "LiveRange",
    "caffe2.python.memonger.LiveRange",
    "caffe2.python.memonger.compute_assignments_greedy",
    "caffe2.python.memonger.get_memory_usage"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_compute_interference_graph_inplace_ops": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "caffe2.python.memonger.compute_interference_graph",
    "caffe2.python.model_helper.ModelHelper",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_fast_memonger": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.memonger.optimize_inference_fast",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_fast_memonger_unique_outputs": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "caffe2.python.brew.concat",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.sum",
    "caffe2.python.memonger.optimize_inference_fast",
    "caffe2.python.model_helper.ModelHelper",
    "len",
    "range",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_forward_optim_tree_daggy": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.optimize_inference_for_dag",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_forward_optim_tree_harder": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.optimize_inference_for_dag",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_gradient_optim": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.share_grad_blobs",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.memonger_test.has_blob",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "future.utils.viewvalues",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_gradient_optim_tree": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.share_grad_blobs",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.memonger_test.has_blob",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "future.utils.viewvalues",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_memonger_mix_cpu_gpu": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CPU.intersection",
    "caffe2.python.brew.fc",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.memonger.share_grad_blobs",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.memonger_test.unittest",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "future.utils.viewvalues",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_release_blobs_when_used": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.memonger.release_blobs_when_used",
    "caffe2.python.model_helper.ModelHelper",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_rnn": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "caffe2.python.memonger.share_grad_blobs",
    "caffe2.python.memonger_test.count_blobs",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "future.utils.viewvalues",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_simple_memonger": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.memonger.AssignmentAlgorithm",
    "caffe2.python.memonger.collect_blob_sizes",
    "caffe2.python.memonger.compute_statistics",
    "caffe2.python.memonger.optimize_interference",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_topological_sort_longest_path": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.memonger.compute_interference_graph",
    "caffe2.python.memonger.topological_sort_traversal",
    "caffe2.python.memonger.topological_sort_traversal_longest_path",
    "caffe2.python.model_helper.ModelHelper",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_topological_sort_longest_path_multi_target": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.memonger.compute_interference_graph",
    "caffe2.python.memonger.topological_sort_traversal",
    "caffe2.python.memonger.topological_sort_traversal_longest_path",
    "caffe2.python.model_helper.ModelHelper",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_topological_sort_longest_path_single_node": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "caffe2.python.memonger.compute_interference_graph",
    "caffe2.python.memonger.topological_sort_traversal",
    "caffe2.python.memonger.topological_sort_traversal_longest_path",
    "caffe2.python.model_helper.ModelHelper",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_equality": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.verify_graph_equality",
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_equality_harder": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.verify_graph_equality",
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_inequality": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.verify_graph_equality",
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.MemongerTest.test_verify_graph_inequality_harder": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.verify_graph_equality",
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.count_blobs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.has_blob": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "caffe2.python.memonger_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.memonger": {
  "data": {
   "shadows": "caffe2.python.memonger"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.viewvalues": {
  "data": {
   "shadows": "future.utils.viewvalues"
  },
  "type": "import"
 },
 "caffe2.python.memonger_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.proto.caffe2_pb2.MKLDNN",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.mkl_test_util.cpu_do",
    "caffe2.python.mkl_test_util.device_checker_device_options",
    "caffe2.python.mkl_test_util.gpu_do",
    "caffe2.python.mkl_test_util.gradient_checker_device_option",
    "caffe2.python.mkl_test_util.mkl_do",
    "caffe2.python.workspace.C.has_mkldnn",
    "dict",
    "hypothesis.strategies.just",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "module"
 },
 "caffe2.python.mkl_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.cpu_do": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.device_checker_device_options": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.mkl_test_util.device_options",
    "hypothesis.strategies.just"
   ]
  },
  "type": "function"
 },
 "caffe2.python.mkl_test_util.device_options": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.gcs": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.gcs_cpu_mkl": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.gcs_cpu_only": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.gcs_gpu_only": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.gcs_mkl_only": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.gpu_do": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.gradient_checker_device_option": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.mkl_test_util.device_options",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.mkl_test_util.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.mkl_do": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.mkl_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.mkl_test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.model_device_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet._MiniAlexNetNoDropout": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.group_conv",
    "caffe2.python.brew.lrn",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet._testMiniAlexNet": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.device_checker.DeviceChecker",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "dict",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_device_test.TestMiniAlexNet.testMiniAlexNetNCHW": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "caffe2.python.model_device_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_device_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.device_checker": {
  "data": {
   "shadows": "caffe2.python.device_checker"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.model_device_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.model_helper": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.model_helper.DEFAULT_OPTIM": {
  "data": {
   "shadows": "caffe2.python.optimizer_context.DEFAULT_OPTIM"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.ExtractPredictorNet": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "caffe2.python.core.Net",
    "caffe2.python.model_helper.logging",
    "len",
    "list",
    "max",
    "min",
    "range",
    "rename_list",
    "set",
    "str",
    "validate_op"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ExtractPredictorNet.rename_list": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ExtractPredictorNet.validate_op": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "Exception",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.model_helper.ModelHelper.AddGradientOperators": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.modeling.parameter_info.ParameterInfo"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.AddParameter": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.modeling.parameter_info.ParameterTags.BIAS",
    "caffe2.python.modeling.parameter_info.ParameterTags.COMPUTED_PARAM",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.ConstructInitTrainNetfromNet": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.CreateDB": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetAllParams": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetCompleteNet": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetComputedParams": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetDevices": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetOptimizationParamInfo": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.GradientSlice",
    "future.utils.viewitems",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.GetParams": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.InitProto": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.Proto": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.RunAllOnGPU": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.TensorProtosDBInput": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "caffe2.python.helpers.db_input.db_input",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.Validate": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._NormalizeNamescope": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope._NAMESCOPE_SEPARATOR",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._Validate": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.__dir__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "caffe2.python.model_helper._known_working_ops",
    "dir",
    "future.utils.viewkeys",
    "itertools.chain",
    "set",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.__getattr__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "AttributeError",
    "caffe2.python.core.IsOperator",
    "caffe2.python.model_helper._known_working_ops",
    "caffe2.python.model_helper.logging",
    "caffe2.python.workspace.C.nearby_opnames"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._infer_param_shape": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._normalize_tags": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper._update_param_info_deprecated": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.modeling.parameter_info.ParameterInfo",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.add_param_DEPRECATED": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.model_helper.logging",
    "caffe2.python.modeling.parameter_info.ParameterInfo",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.arg_scope": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.create_param": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.model_helper.six",
    "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
    "caffe2.python.optimizer_context.DEFAULT_OPTIM",
    "caffe2.python.optimizer_context.OptimizerContext.current",
    "caffe2.python.regularizer_context.RegularizerContext.current",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.get_name": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.get_param_info": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.ModelHelper.get_param_to_grad": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "RuntimeError",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper.OptimizerContext": {
  "data": {
   "shadows": "caffe2.python.optimizer_context.OptimizerContext"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.RegularizerContext": {
  "data": {
   "shadows": "caffe2.python.regularizer_context.RegularizerContext"
  },
  "type": "import"
 },
 "caffe2.python.model_helper._known_working_ops": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "caffe2.python.model_helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.helpers": {
  "data": {
   "shadows": "caffe2.python.helpers"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.parameter_info": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.parameter_sharing_context": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_sharing.parameter_sharing_context"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.model_helper.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.model_helper_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.model_helper_test.ModelHelperTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.model_helper_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.model_helper_test.ModelHelperTest.test_get_complete_net": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.model_helper.ModelHelper",
    "map",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper_test.ModelHelperTest.test_get_complete_net_type": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.model_helper_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.model_helper_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.model_helper_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.model_helper_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.model_helper_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.model_helper_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs.field_name_suffix": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs.modify_net": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.NetModifier": {
  "data": {
   "shadows": "caffe2.python.modeling.net_modifier.NetModifier"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobs": {
  "data": {
   "shadows": "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.modeling.compute_histogram_for_blobs_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest.histogram": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest.test_compute_histogram_for_blobs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.ComputeHistogramForBlobsTest.test_compute_histogram_for_blobs_modify_output_record": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_histogram_for_blobs.ComputeHistogramForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "net_modifier.field_name_suffix",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_histogram_for_blobs_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs.field_name_suffix": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs.modify_net": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.muji.OnCPU",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.NetModifier": {
  "data": {
   "shadows": "caffe2.python.modeling.net_modifier.NetModifier"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.muji": {
  "data": {
   "shadows": "caffe2.python.muji"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobs": {
  "data": {
   "shadows": "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.modeling.compute_norm_for_blobs_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_averaged_norm_for_blobs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_l1_averaged_norm_for_blobs": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.abs",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_l1_norm_for_blobs": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.abs",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_for_blobs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_for_blobs_modify_output_record": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "net_modifier.field_name_suffix",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.ComputeNormForBlobsTest.test_compute_norm_for_blobs_no_print": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_norm_for_blobs.ComputeNormForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_norm_for_blobs_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs.field_name_suffix": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs.modify_net": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.NetModifier": {
  "data": {
   "shadows": "caffe2.python.modeling.net_modifier.NetModifier"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobs": {
  "data": {
   "shadows": "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobsTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.modeling.compute_statistics_for_blobs_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobsTest.test_compute_statistics_for_blobs": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "net_modifier",
    "numpy.array",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.ComputeStatisticsForBlobsTest.test_compute_statistics_for_blobs_modify_output_record": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.compute_statistics_for_blobs.ComputeStatisticsForBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "net_modifier.field_name_suffix",
    "numpy.array",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling.compute_statistics_for_blobs_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs.__init__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs.field_name_suffix": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs.modify_net": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs.NetModifier": {
  "data": {
   "shadows": "caffe2.python.modeling.net_modifier.NetModifier"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobs": {
  "data": {
   "shadows": "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobsTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.modeling.get_entry_from_blobs_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobsTest.test_get_entry_from_blobs": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.GetEntryFromBlobsTest.test_get_entry_from_blobs_modify_output_record": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.get_entry_from_blobs.GetEntryFromBlobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "net_modifier",
    "net_modifier.field_name_suffix",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling.get_entry_from_blobs_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.modeling.gradient_clipping.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.modeling.gradient_clipping.GradientClipping": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.NetModifier"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.gradient_clipping.GradientClipping.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping.GradientClipping.modify_net": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.optimizer.get_param_device",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping.NetModifier": {
  "data": {
   "shadows": "caffe2.python.modeling.net_modifier.NetModifier"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.get_param_device": {
  "data": {
   "shadows": "caffe2.python.optimizer.get_param_device"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.python.modeling.gradient_clipping.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClipping": {
  "data": {
   "shadows": "caffe2.python.modeling.gradient_clipping.GradientClipping"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.modeling.gradient_clipping_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_compute_norm_ratio": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_excluding_blobs": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_including_blobs": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_l1_norm": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_norm_using_param_norm": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.GradientClippingTest.test_gradient_clipping_by_value": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.gradient_clipping.GradientClipping",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "net_modifier",
    "numpy.amax",
    "numpy.amin",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.gradient_clipping_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling.gradient_clipping_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.initializers.BlobReference": {
  "data": {
   "shadows": "caffe2.python.core.BlobReference"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.DataType": {
  "data": {
   "shadows": "caffe2.python.core.DataType"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.ExternalInitializer": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.initializers.ExternalInitializer.create_param": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.modeling.initializers.six",
    "caffe2.python.modeling.parameter_info.ParameterInfo",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.Initializer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.initializers.Initializer.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.Initializer.create_param": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_info.ParameterInfo"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.Initializer.update": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.ParameterInfo": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterInfo"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.PseudoFP16Initializer": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.Initializer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.initializers.PseudoFP16Initializer.create_param": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.modeling.parameter_info.ParameterInfo"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.PseudoFP16Initializer.update": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.ReversePseudoFP16Initializer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.Initializer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.initializers.ReversePseudoFP16Initializer.create_param": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT16",
    "caffe2.python.modeling.parameter_info.ParameterInfo"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.ReversePseudoFP16Initializer.update": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.ScopedBlobReference": {
  "data": {
   "shadows": "caffe2.python.core.ScopedBlobReference"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers.update_initializer": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.Initializer",
    "get_initializer_args",
    "initializer_class"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers.update_initializer.get_initializer_args": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.initializers_test.Initializer": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers.Initializer"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest.test_fc_external_initializer": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest.test_fc_fp16_initializer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.initializers.PseudoFP16Initializer",
    "caffe2.python.modeling.initializers_test.unittest",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test.InitializerTest.test_fc_initializer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.initializers.Initializer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.initializers_test.PseudoFP16Initializer": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers.PseudoFP16Initializer"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.modeling.initializers_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modeling.net_modifier": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.net_modifier.NetModifier": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.abc",
    "caffe2.python.modeling.net_modifier.six",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.net_modifier.NetModifier.__call__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "caffe2.python.modeling.net_modifier.NetModifier.__init__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "caffe2.python.modeling.net_modifier.NetModifier.modify_net": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.modeling.net_modifier.abc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.net_modifier.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "caffe2.python.modeling.net_modifier.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.net_modifier.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.net_modifier.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.net_modifier.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.modeling.net_modifier.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_info": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "isinstance",
    "max",
    "numpy.prod",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.__str__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.optimizer": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterInfo.parameter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_info.ParameterTags": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.parameter_info.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_info.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_info.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_info.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_info.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.modeling.parameter_sharing.ParameterSharingContext",
    "caffe2.python.modeling.parameter_sharing.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharing": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing._normalize_namescope",
    "caffe2.python.modeling.parameter_sharing.contextlib",
    "caffe2.python.modeling.parameter_sharing.parameter_sharing_context",
    "caffe2.python.scope.CurrentNameScope",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext._resolve_scope_overrides": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.scope._NAMESCOPE_SEPARATOR",
    "caffe2.python.scope._NAMESCOPE_SEPARATOR.join",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.add_scope_overrides": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.get_parameter_name": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.logger",
    "caffe2.python.scope.CurrentNameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.ParameterSharingContext.pop": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing._normalize_namescope": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.scope._NAMESCOPE_SEPARATOR"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "caffe2.python.modeling.parameter_sharing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing.parameter_sharing_context": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "caffe2.python.modeling.parameter_sharing.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modeling.parameter_sharing_test.Initializer": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers.Initializer"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharing": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_sharing.ParameterSharing"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_create_param": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.initializers.Initializer",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_deep_hierarchy": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.initializers.Initializer",
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_brew": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.scope.NameScope",
    "len",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_default_scopes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_nested_scopes": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.ParameterSharingTest.test_parameter_sharing_subscopes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.modeling.parameter_sharing.parameter_sharing_context.get_parameter_name",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modeling.parameter_sharing_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.parameter_sharing_context": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_sharing.parameter_sharing_context"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.modeling.parameter_sharing_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.models": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.models.__sym_init__": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.models.__sym_init__._parseFile"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.__sym_init__._parseFile": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.models.__sym_init__.os",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.__sym_init__.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.__sym_init__.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.models.__sym_init__.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.__sym_init__.init_net": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.models.__sym_init__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.models.__sym_init__.predict_net": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.models.__sym_init__.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.__sym_init__.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.download": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "caffe2.python.models.download.argparse",
    "caffe2.python.models.download.args",
    "caffe2.python.models.download.downloadModel",
    "caffe2.python.models.download.parser",
    "caffe2.python.models.download.signal",
    "caffe2.python.models.download.signalHandler",
    "caffe2.python.models.download.validModelName",
    "print",
    "urllib.error.HTTPError",
    "urllib.error.URLError",
    "urllib2.HTTPError",
    "urllib2.URLError"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.download.DOWNLOAD_BASE_URL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.python.models.download.DOWNLOAD_COLUMNS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "caffe2.python.models.download.HTTPError": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "caffe2.python.models.download.ModelDownloader": {
  "data": {
   "lineno": 149
  },
  "type": "class"
 },
 "caffe2.python.models.download.ModelDownloader._download": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "caffe2.python.models.download.deleteDirectory",
    "caffe2.python.models.download.downloadFromURLToFile",
    "caffe2.python.models.download.getURLFromName",
    "caffe2.python.models.download.os",
    "exit",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.ModelDownloader._model_dir": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caffe2.python.models.download.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.ModelDownloader.get_c2_model": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.models.download.json",
    "caffe2.python.models.download.os",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.URLError": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "caffe2.python.models.download.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.download.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.models.download.args": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "caffe2.python.models.download.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.models.download.deleteDirectory": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.models.download.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.download.downloadFromURLToFile": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.models.download.HTTPError",
    "caffe2.python.models.download.URLError",
    "caffe2.python.models.download.progressBar",
    "int",
    "len",
    "min",
    "open",
    "print",
    "urllib2.urlopen"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.downloadModel": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception",
    "NameError",
    "caffe2.python.models.download.deleteDirectory",
    "caffe2.python.models.download.downloadFromURLToFile",
    "caffe2.python.models.download.getURLFromName",
    "caffe2.python.models.download.os",
    "exit",
    "input",
    "print",
    "raw_input",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.getURLFromName": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "caffe2.python.models.download.DOWNLOAD_BASE_URL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.models.download.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.models.download.parser": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "caffe2.python.models.download.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.download.progressBar": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "caffe2.python.models.download.DOWNLOAD_COLUMNS",
    "caffe2.python.models.download.sys",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "caffe2.python.models.download.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "caffe2.python.models.download.signalHandler": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "exit",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.download.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.models.download.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.download.urllib": {
  "data": {
   "shadows": "urllib2"
  },
  "type": "import"
 },
 "caffe2.python.models.download.urlliberror": {
  "data": {
   "shadows": "urllib.error"
  },
  "type": "import"
 },
 "caffe2.python.models.download.validModelName": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "caffe2.python.models.download.re"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.models.resnet.log",
    "caffe2.python.models.resnet.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.resnet.RESNEXT_BLOCK_CONFIG": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "caffe2.python.models.resnet.RESNEXT_STRIDES": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "caffe2.python.models.resnet.ResNetBuilder": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "caffe2.python.models.resnet.ResNetBuilder.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_bottleneck": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.brew.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_conv": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.brew.conv"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_relu": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "caffe2.python.brew.relu"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_simple_block": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.brew.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.ResNetBuilder.add_spatial_bn": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "caffe2.python.brew.spatial_bn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet.create_resnet50": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "caffe2.python.models.resnet.create_resnext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.create_resnet_32x32": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "caffe2.python.brew.average_pool",
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.models.resnet.ResNetBuilder",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.create_resnext": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "caffe2.python.brew.average_pool",
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.models.resnet.RESNEXT_BLOCK_CONFIG",
    "caffe2.python.models.resnet.RESNEXT_STRIDES",
    "caffe2.python.models.resnet.ResNetBuilder",
    "caffe2.python.models.resnet.log",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet.log": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "caffe2.python.models.resnet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.models.resnet_test.random",
    "caffe2.python.models.resnet_test.unittest",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest.test_resnet_forward_only": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.optimize_inference_for_dag",
    "caffe2.python.models.resnet.create_resnet50",
    "caffe2.python.models.resnet_test.count_blobs",
    "caffe2.python.models.resnet_test.count_shared_blobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest.test_resnet_forward_only_fast_simplenet": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.NameScope",
    "caffe2.python.memonger.optimize_inference_fast",
    "caffe2.python.models.resnet.create_resnet50",
    "caffe2.python.models.resnet_test.count_blobs",
    "caffe2.python.models.resnet_test.count_shared_blobs",
    "caffe2.python.models.resnet_test.time",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet_test.ResnetMemongerTest.test_resnet_shared_grads": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.NameScope",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.memonger.share_grad_blobs",
    "caffe2.python.models.resnet.create_resnet50",
    "caffe2.python.models.resnet_test.count_blobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "print",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.count_blobs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet_test.count_shared_blobs": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.resnet_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.has_blob": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "caffe2.python.models.resnet_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.memonger": {
  "data": {
   "shadows": "caffe2.python.memonger"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.resnet": {
  "data": {
   "shadows": "caffe2.python.models.resnet"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.models.resnet_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.models.seq2seq.beam_search": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "collections.namedtuple",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
    "caffe2.python.models.seq2seq.seq2seq_util.GO_ID"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.apply": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "choose_state_per_hypo",
    "float",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.apply.choose_state_per_hypo": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.get_previous_tokens": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.get_step_model": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.get_timestep": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.beam_search.Seq2SeqModelHelper": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.seq2seq_util": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_util"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.beam_search.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest._build_seq2seq_model": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_beam_search_test.os",
    "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2",
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest._run_compare_train_inference": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_beam_search_test.tempfile",
    "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
    "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "dict",
    "len",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.random_integers",
    "numpy.testing.assert_almost_equal",
    "range",
    "reversed",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest.test_2layer_attention": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest.test_attention": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqBeamSearchTest.test_multi_decoder": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqModelCaffe2": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.Seq2SeqModelCaffe2EnsembleDecoder": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.seq2seq_util": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_util"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_beam_search_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.AddParam": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.GetAllParams": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.GetNonTrainableParams": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope._NAMESCOPE_SEPARATOR"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.models.seq2seq.seq2seq_model_helper_test.random",
    "caffe2.python.models.seq2seq.seq2seq_model_helper_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testAddParam": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testConstuctor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testGetAllParams": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.Seq2SeqModelHelperTest.testGetNonTrainableParams": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.seq2seq_model_helper": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_model_helper"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_model_helper_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.EOS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.GO": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.GO_ID": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.AttentionCell",
    "caffe2.python.rnn_cell.MultiRNNCell",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder._get_attention_type": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Recurrent",
    "caffe2.python.attention.AttentionType.Regular"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.apply": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.apply_over_sequence": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_attention_weights": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_output_dim": {
  "data": {
   "lineno": 388
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_outputs_with_grads": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.get_state_names": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder.scope": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.PAD": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.PAD_ID": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.UNK": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.UNK_ID": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.attention": {
  "data": {
   "shadows": "caffe2.python.attention"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_decoder": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder",
    "caffe2.python.models.seq2seq.seq2seq_util.build_initial_rnn_decoder_states",
    "caffe2.python.models.seq2seq.seq2seq_util.get_layer_scope",
    "caffe2.python.rnn_cell.DropoutCell",
    "caffe2.python.rnn_cell.LSTMCell",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_encoder": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.models.seq2seq.seq2seq_util.get_layer_scope",
    "caffe2.python.models.seq2seq.seq2seq_util.rnn_bidirectional_layer",
    "caffe2.python.models.seq2seq.seq2seq_util.rnn_unidirectional_layer",
    "enumerate",
    "layer_func",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_embeddings": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.build_initial_rnn_decoder_states": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.gen_vocab": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.EOS",
    "caffe2.python.models.seq2seq.seq2seq_util.GO",
    "caffe2.python.models.seq2seq.seq2seq_util.PAD",
    "caffe2.python.models.seq2seq.seq2seq_util.UNK",
    "caffe2.python.models.seq2seq.seq2seq_util.collections",
    "future.utils.viewitems",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.get_layer_scope": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.get_numberized_sentence": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.UNK"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.output_projection": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.rnn_bidirectional_layer": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.models.seq2seq.seq2seq_util.rnn_unidirectional_layer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.rnn_unidirectional_layer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.rnn_cell.DropoutCell",
    "caffe2.python.rnn_cell.LSTMCell"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.seq2seq_util.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.models.seq2seq.train.collections",
    "caffe2.python.models.seq2seq.train.logger",
    "caffe2.python.models.seq2seq.train.logging",
    "caffe2.python.models.seq2seq.train.main",
    "caffe2.python.models.seq2seq.train.sys"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.seq2seq.train.Batch": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.__enter__": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.__exit__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.__init__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "caffe2.python.workspace.GlobalInit",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._apply_norm_ratio": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.core.NameScope",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_embeddings": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.models.seq2seq.train.math"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_model": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "caffe2.python.data_parallel_model.Parallelize_GPU",
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_model.clipped_grad_update_bound": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._build_shared": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.models.seq2seq.train.time",
    "float"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._calc_norm_ratio": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.core.NameScope",
    "caffe2.python.models.seq2seq.train.logger",
    "enumerate",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._init_model": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "caffe2.python.workspace.RunNetOnce",
    "create_net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2._init_model.create_net": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "caffe2.python.workspace.CreateNet",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.forward_model_build_fun": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.get_current_step": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.inc_current_step": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.initialize_from_scratch": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.train.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.model_build_fun": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_decoder",
    "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_encoder",
    "caffe2.python.models.seq2seq.seq2seq_util.output_projection",
    "caffe2.python.workspace.GetNameScope",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.norm_clipped_grad_update": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.models.seq2seq.train.logger",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.norm_clipped_sparse_grad_update": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.models.seq2seq.train.logger",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.save": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.models.seq2seq.train.logger",
    "caffe2.python.models.seq2seq.train.os",
    "caffe2.python.workspace.RunOperatorOnce",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.step": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.models.seq2seq.train.Batch",
    "caffe2.python.models.seq2seq.train.prepare_batch",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.RunNet",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2.total_loss_scalar": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.Seq2SeqModelHelper": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.data_parallel_model": {
  "data": {
   "shadows": "caffe2.python.data_parallel_model"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.gen_batches": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.get_numberized_sentence",
    "caffe2.python.models.seq2seq.train.random",
    "len",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.train.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.main": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.train.argparse",
    "caffe2.python.models.seq2seq.train.random",
    "caffe2.python.models.seq2seq.train.run_seq2seq_model",
    "dict",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.prepare_batch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
    "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
    "caffe2.python.models.seq2seq.seq2seq_util.PAD_ID",
    "caffe2.python.models.seq2seq.train.Batch",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "reversed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.run_seq2seq_model": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.gen_vocab",
    "caffe2.python.models.seq2seq.train.Seq2SeqModelCaffe2",
    "caffe2.python.models.seq2seq.train.gen_batches",
    "caffe2.python.models.seq2seq.train.logger",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.train.seq2seq_util": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_util"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.train.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.models.seq2seq.translate.logger",
    "caffe2.python.models.seq2seq.translate.logging",
    "caffe2.python.models.seq2seq.translate.main",
    "caffe2.python.models.seq2seq.translate.sys"
   ]
  },
  "type": "module"
 },
 "caffe2.python.models.seq2seq.translate.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.BeamSearchForwardOnly": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly",
    "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper",
    "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
    "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
    "caffe2.python.models.seq2seq.translate._weighted_sum",
    "caffe2.python.models.seq2seq.translate.logger",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "float",
    "len",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder._build_decoder": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.LinkConfig",
    "caffe2.python.models.seq2seq.beam_search.BeamSearchForwardOnly.StateConfig",
    "caffe2.python.models.seq2seq.seq2seq_util.LSTMWithAttentionDecoder",
    "caffe2.python.models.seq2seq.seq2seq_util.build_embedding_encoder",
    "caffe2.python.models.seq2seq.seq2seq_util.build_embeddings",
    "caffe2.python.models.seq2seq.seq2seq_util.build_initial_rnn_decoder_states",
    "caffe2.python.models.seq2seq.seq2seq_util.output_projection",
    "caffe2.python.rnn_cell.LSTMCell",
    "enumerate",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.decode": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "len",
    "list",
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.get_db_type": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.get_model_file": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder.scope": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.build_word_rewards": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.EOS_ID",
    "caffe2.python.models.seq2seq.seq2seq_util.GO_ID",
    "caffe2.python.models.seq2seq.seq2seq_util.PAD_ID",
    "caffe2.python.models.seq2seq.seq2seq_util.UNK_ID",
    "numpy.float32",
    "numpy.full"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.get_db_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.get_model_file": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoderBase.load_models": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.models.seq2seq.translate.logger",
    "caffe2.python.workspace.RunOperatorOnce",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.Seq2SeqModelHelper": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_model_helper.Seq2SeqModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate._weighted_sum": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.models.seq2seq.translate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.main": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.translate.argparse",
    "caffe2.python.models.seq2seq.translate.run_seq2seq_beam_decoder",
    "dict",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.run_seq2seq_beam_decoder": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "caffe2.python.models.seq2seq.seq2seq_util.gen_vocab",
    "caffe2.python.models.seq2seq.seq2seq_util.get_numberized_sentence",
    "caffe2.python.models.seq2seq.translate.Seq2SeqModelCaffe2EnsembleDecoder",
    "caffe2.python.models.seq2seq.translate.logger",
    "caffe2.python.models.seq2seq.translate.sys",
    "dict",
    "future.utils.viewitems",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.models.seq2seq.translate.seq2seq_util": {
  "data": {
   "shadows": "caffe2.python.models.seq2seq.seq2seq_util"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.with_metaclass": {
  "data": {
   "shadows": "six.with_metaclass"
  },
  "type": "import"
 },
 "caffe2.python.models.seq2seq.translate.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.modifier_context": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.modifier_context.DEFAULT_MODIFIER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "caffe2.python.modifier_context.ModifierContext": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modifier_context.ModifierContext.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext._get_modifier": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext._has_modifier": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext._rebuild_modifiers": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext.pop_modifiers": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.ModifierContext.push_modifiers": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.modifier_context.UseModifierBase.__enter__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase.__exit__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.modifier_context.DEFAULT_MODIFIER",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.UseModifierBase._context_class": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.modifier_context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.modifier_context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.modifier_context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.modifier_context.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.muji": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.muji.Allreduce": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.muji.Allreduce2",
    "caffe2.python.muji.Allreduce4",
    "caffe2.python.muji.Allreduce4Group2",
    "caffe2.python.muji.Allreduce8",
    "caffe2.python.muji.AllreduceFallback",
    "caffe2.python.workspace.GetGpuPeerAccessPattern",
    "len",
    "list",
    "numpy.all",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.Allreduce2": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.muji.OnGPU"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.Allreduce4": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.muji.OnGPU",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.Allreduce4Group2": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "caffe2.python.muji.OnGPU",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.Allreduce8": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "caffe2.python.muji.OnGPU",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.AllreduceFallback": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "caffe2.python.muji.OnGPU",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.OnCPU": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.DeviceOption"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.OnGPU": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.muji.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.muji.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.muji_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.muji_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.muji_test.TestMuji": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "caffe2.python.muji_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.muji_test.TestMuji.RunningAllreduceWithGPUs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "allreduce_function",
    "caffe2.python.core.Net",
    "caffe2.python.muji.OnGPU",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "float",
    "id",
    "len",
    "numpy.testing.assert_array_equal",
    "print",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceFallback": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.muji.AllreduceFallback",
    "caffe2.python.workspace.NumGpuDevices",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceSingleGPU": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.muji.Allreduce",
    "caffe2.python.workspace.NumGpuDevices",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithEightGPUs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.python.muji.Allreduce8",
    "caffe2.python.workspace.GetGpuPeerAccessPattern",
    "list",
    "numpy.all",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithFourGPUs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.muji.Allreduce4",
    "caffe2.python.workspace.GetGpuPeerAccessPattern",
    "numpy.all",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithFourGPUsAndTwoGroups": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.muji.Allreduce4Group2",
    "caffe2.python.workspace.GetGpuPeerAccessPattern",
    "numpy.all",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.TestMuji.testAllreduceWithTwoGPUs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.muji.Allreduce2",
    "caffe2.python.workspace.GetGpuPeerAccessPattern",
    "numpy.all",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.muji_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.muji_test.muji": {
  "data": {
   "shadows": "caffe2.python.muji"
  },
  "type": "import"
 },
 "caffe2.python.muji_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.muji_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.muji_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.muji_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.net_builder_test.LocalSession": {
  "data": {
   "shadows": "caffe2.python.session.LocalSession"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.Net": {
  "data": {
   "shadows": "caffe2.python.core.Net"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.NetBuilder": {
  "data": {
   "shadows": "caffe2.python.net_builder.NetBuilder"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.Plan": {
  "data": {
   "shadows": "caffe2.python.core.Plan"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.PythonOpStats": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.net_builder_test.threading",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_builder_test.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.TestNetBuilder": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.net_builder_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_builder_test.TestNetBuilder._actual_loop": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.GE",
    "caffe2.python.net_builder.ops.If",
    "caffe2.python.net_builder.ops.Mul",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder._expected_loop": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_if_net": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "caffe2.python.core.Plan",
    "caffe2.python.core.to_execution_step",
    "caffe2.python.net_builder.NetBuilder",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.EQ",
    "caffe2.python.net_builder.ops.Else",
    "caffe2.python.net_builder.ops.GT",
    "caffe2.python.net_builder.ops.IfNet",
    "caffe2.python.net_builder.ops.LT",
    "caffe2.python.workspace.C.Workspace",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_loops": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Task",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_multi_instance": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.CountUp",
    "caffe2.python.net_builder.ops.CreateCounter",
    "caffe2.python.net_builder.ops.Mul",
    "caffe2.python.net_builder.ops.RetrieveCount",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.net_builder.ops.task_exit",
    "caffe2.python.net_builder.ops.task_init",
    "caffe2.python.net_builder.ops.task_instance_exit",
    "caffe2.python.net_builder.ops.task_instance_init",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Task",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_multi_instance_python_op": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Python",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.net_builder_test.PythonOpStats",
    "caffe2.python.net_builder_test.python_op_builder",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Task"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_net_multi_use": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.net",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Task",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_ops": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.core.Plan",
    "caffe2.python.core.to_execution_step",
    "caffe2.python.net_builder.NetBuilder",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder_test._test_if",
    "caffe2.python.net_builder_test._test_loop",
    "caffe2.python.net_builder_test._test_outer",
    "caffe2.python.workspace.C.Workspace",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_setup": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.task_exit",
    "caffe2.python.net_builder.ops.task_init",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.Task",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.TestNetBuilder.test_while_net": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "caffe2.python.core.Plan",
    "caffe2.python.core.to_execution_step",
    "caffe2.python.net_builder.NetBuilder",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Condition",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.LT",
    "caffe2.python.net_builder.ops.WhileNet",
    "caffe2.python.workspace.C.Workspace",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_if": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.GT",
    "caffe2.python.net_builder.ops.If",
    "caffe2.python.net_builder.ops.LT",
    "caffe2.python.net_builder.ops.stop"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_inner_stop": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.LT",
    "caffe2.python.net_builder.ops.stop_if"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_loop": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.EQ",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.net_builder.ops.stop_if"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test._test_outer": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.stop_guard",
    "caffe2.python.net_builder_test._test_inner_stop"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.final_output": {
  "data": {
   "shadows": "caffe2.python.task.final_output"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.python_op_builder": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.net_builder_test.PythonOpStats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.python_op_builder.my_op": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.net_builder_test.PythonOpStats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_builder_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.to_execution_step": {
  "data": {
   "shadows": "caffe2.python.core.to_execution_step"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.net_builder_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "caffe2.python.net_drawer.logger",
    "caffe2.python.net_drawer.logging",
    "caffe2.python.net_drawer.main",
    "print"
   ]
  },
  "type": "module"
 },
 "caffe2.python.net_drawer.BLOB_STYLE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "caffe2.python.net_drawer.GetGraphInJson": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "caffe2.python.net_drawer._escape_label",
    "caffe2.python.net_drawer._rectify_operator_and_name",
    "caffe2.python.net_drawer.json",
    "collections.defaultdict",
    "enumerate",
    "int",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetGraphPngSafe": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "caffe2.python.net_drawer._DummyPngImage",
    "caffe2.python.net_drawer.logger",
    "caffe2.python.net_drawer.pydot",
    "func",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetOpNodeProducer": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetOpNodeProducer.ReallyGetOpNode": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.net_drawer.pydot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetOperatorMapForPlan": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetPlanGraph": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "caffe2.python.net_drawer._draw_steps",
    "caffe2.python.net_drawer.pydot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetPydotGraph": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.net_drawer.BLOB_STYLE",
    "caffe2.python.net_drawer.GetOpNodeProducer",
    "caffe2.python.net_drawer.OP_STYLE",
    "caffe2.python.net_drawer._escape_label",
    "caffe2.python.net_drawer._rectify_operator_and_name",
    "caffe2.python.net_drawer.pydot",
    "collections.defaultdict",
    "enumerate",
    "int",
    "node_producer",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.GetPydotGraphMinimal": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "all",
    "caffe2.python.net_drawer.GetOpNodeProducer",
    "caffe2.python.net_drawer.OP_STYLE",
    "caffe2.python.net_drawer._rectify_operator_and_name",
    "caffe2.python.net_drawer.pydot",
    "collections.defaultdict",
    "enumerate",
    "node_producer",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.OP_STYLE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "caffe2.python.net_drawer._DummyPngImage": {
  "data": {
   "lineno": 319
  },
  "type": "constant"
 },
 "caffe2.python.net_drawer._draw_nets": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "caffe2.python.net_drawer._escape_label",
    "caffe2.python.net_drawer.pydot",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_steps": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.net_drawer.OP_STYLE",
    "caffe2.python.net_drawer._draw_nets",
    "caffe2.python.net_drawer._escape_label",
    "caffe2.python.net_drawer.pydot",
    "enumerate",
    "get_label",
    "len",
    "substep_edge"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_steps.get_label": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "caffe2.python.net_drawer._draw_steps.substep_edge": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "caffe2.python.net_drawer.pydot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer._escape_label": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.net_drawer.json"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer._rectify_operator_and_name": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.NetDef",
    "hasattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.python.net_drawer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.main": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.PlanDef",
    "caffe2.python.net_drawer.GetOpNodeProducer",
    "caffe2.python.net_drawer.GetOperatorMapForPlan",
    "caffe2.python.net_drawer.GetPydotGraph",
    "caffe2.python.net_drawer.GetPydotGraphMinimal",
    "caffe2.python.net_drawer.OP_STYLE",
    "caffe2.python.net_drawer.argparse",
    "caffe2.python.utils.GetContentFromProtoString",
    "future.utils.viewitems",
    "open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_drawer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.pydot": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "caffe2.python.net_drawer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.net_drawer.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.net_printer": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.net_printer.Analyzer": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Visitor"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_printer.Analyzer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "collections.defaultdict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.define_blob": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.need_blob": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "any",
    "caffe2.python.net_printer.Analyzer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.set_workspace": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "copy.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Analyzer.workspace": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.ExecutionStep": {
  "data": {
   "shadows": "caffe2.python.core.ExecutionStep"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.Job": {
  "data": {
   "shadows": "caffe2.python.checkpoint.Job"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.Net": {
  "data": {
   "shadows": "caffe2.python.core.Net"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.NetDef": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2.NetDef"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.OperatorDef": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2.OperatorDef"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.Plan": {
  "data": {
   "shadows": "caffe2.python.core.Plan"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.Printer": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Text",
    "caffe2.python.net_printer.Visitor"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_printer.Printer.__init__": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Text",
    "caffe2.python.net_printer.Visitor",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.TaskOutput": {
  "data": {
   "shadows": "caffe2.python.task.TaskOutput"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.Text": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_printer.Text.__init__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Text.__str__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Text.add": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Text.context": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Visitor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_printer.Visitor.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Visitor.register": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "classmethod",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.Visitor.register._register": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "caffe2.python.net_printer.WorkspaceType": {
  "data": {
   "shadows": "caffe2.python.task.WorkspaceType"
  },
  "type": "import"
 },
 "caffe2.python.net_printer._arg_val": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "caffe2.python.net_printer._sanitize_str",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer._get_step_context": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "caffe2.python.net_printer.call",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer._print_task_output": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "caffe2.python.task.TaskOutput",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer._sanitize_str": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "six.binary_type",
    "six.text_type",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.analyze": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Analyzer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_job": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "analyzer",
    "caffe2.python.checkpoint.Job",
    "caffe2.python.net_printer.Analyzer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_net": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "analyzer",
    "caffe2.python.core.Net",
    "caffe2.python.net_printer.Analyzer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_op": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python.net_printer.Analyzer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_step": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "analyzer",
    "analyzer.define_blob",
    "analyzer.need_blob",
    "analyzer.set_workspace",
    "analyzer.workspace",
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.net_printer.Analyzer",
    "future.utils.viewkeys",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_task": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "analyzer",
    "analyzer.set_workspace",
    "caffe2.python.core.Plan",
    "caffe2.python.net_printer.Analyzer",
    "caffe2.python.task.Task",
    "caffe2.python.task.WorkspaceType.GLOBAL",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.analyze_task_group": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "analyzer",
    "analyzer.set_workspace",
    "caffe2.python.net_printer.Analyzer",
    "caffe2.python.task.TaskGroup"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.call": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "caffe2.python.net_printer.factor_prefix",
    "isinstance",
    "itertools.chain",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.commonprefix": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "enumerate",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.debug_net": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.net_printer.Text",
    "caffe2.python.net_printer.print_op",
    "isinstance",
    "str",
    "text"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.factor_prefix": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "caffe2.python.net_printer.commonprefix",
    "caffe2.python.net_printer.format_value",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.format_device_option": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "caffe2.python.net_printer.call"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.format_value": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.print_job": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.net_printer.Printer",
    "caffe2.python.net_printer._print_task_output",
    "text",
    "text.add",
    "text.context"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_net": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.net_printer.Printer",
    "text"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_net_def": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.net_printer.Printer",
    "caffe2.python.net_printer.call",
    "text",
    "text.add",
    "text.c2_net_name",
    "text.c2_syntax"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_op": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python.net_printer.Printer",
    "caffe2.python.net_printer._arg_val",
    "caffe2.python.net_printer.call",
    "caffe2.python.net_printer.format_device_option",
    "list",
    "text"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_step": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.net_printer.Printer",
    "caffe2.python.net_printer._get_step_context",
    "caffe2.python.net_printer.call",
    "isinstance",
    "str",
    "text",
    "text.add",
    "text.context"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_task": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Printer",
    "caffe2.python.net_printer._print_task_output",
    "caffe2.python.net_printer.call",
    "caffe2.python.task.Task",
    "text",
    "text.context"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.print_task_group": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Printer",
    "caffe2.python.net_printer.call",
    "caffe2.python.task.TaskGroup",
    "text",
    "text.context"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.to_string": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "caffe2.python.net_printer.Printer",
    "printer",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.net_printer.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.net_printer_test.Job": {
  "data": {
   "shadows": "caffe2.python.checkpoint.Job"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.TestNetPrinter": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.python.net_printer_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_multiple_definition": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_printer.analyze",
    "caffe2.python.net_printer_test.example_job",
    "caffe2.python.task.Task",
    "caffe2.python.task.WorkspaceType.GLOBAL"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_print": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.net_printer.to_string",
    "caffe2.python.net_printer_test.example_job",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_undefined_blob": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AssertionError",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_printer.analyze",
    "caffe2.python.net_printer_test.example_job",
    "caffe2.python.task.Task",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.TestNetPrinter.test_valid_job": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_printer.to_string",
    "caffe2.python.net_printer_test.example_job",
    "caffe2.python.task.Task",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.WorkspaceType": {
  "data": {
   "shadows": "caffe2.python.task.WorkspaceType"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.example_job": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python.checkpoint.Job",
    "caffe2.python.net_printer_test.example_loop",
    "caffe2.python.net_printer_test.example_task"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.example_loop": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.GE",
    "caffe2.python.net_builder.ops.If",
    "caffe2.python.net_builder.ops.Mul",
    "caffe2.python.net_builder.ops.loop",
    "caffe2.python.task.Task"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.example_task": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Const",
    "caffe2.python.net_builder.ops.LogInfo",
    "caffe2.python.net_builder.ops.task_exit",
    "caffe2.python.net_builder.ops.task_init",
    "caffe2.python.net_builder.ops.task_instance_init",
    "caffe2.python.task.Task",
    "caffe2.python.task.final_output"
   ]
  },
  "type": "function"
 },
 "caffe2.python.net_printer_test.final_output": {
  "data": {
   "shadows": "caffe2.python.task.final_output"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.net_printer": {
  "data": {
   "shadows": "caffe2.python.net_printer"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.net_printer_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.Annotation",
    "caffe2.python._import_c_extension.Graph",
    "caffe2.python._import_c_extension.NNMatchGraph",
    "caffe2.python._import_c_extension.NNSubgraph",
    "caffe2.python._import_c_extension.NeuralNetData",
    "caffe2.python._import_c_extension.NeuralNetOperator"
   ]
  },
  "type": "module"
 },
 "caffe2.python.nomnigraph.Annotation": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.Data": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.Graph": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.NNMatchGraph": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.NNModule": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.nomnigraph.NNModule.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python._import_c_extension.NNModule",
    "caffe2.python._import_c_extension.NNModuleFromProtobuf",
    "caffe2.python._import_c_extension.NNModuleFromProtobufDistributed",
    "caffe2.python.core.Net",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.controlFlow": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.convertToCaffe2Proto": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.createEdge": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.createNode": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.createUniqueDataNode": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.dataFlow": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.deleteEdge": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.deleteNode": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.deleteSubgraph": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.match": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.matchSubgraph"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.nodes": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.operators": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceAllUsesWith": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.replaceAllUsesWith"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceAsConsumer": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.replaceAsConsumer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceNode": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceProducer": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.replaceProducer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.replaceSubgraph": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNModule.tensors": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.NNSubgraph": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.NeuralNetData": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.NeuralNetOperator": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.Operator": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "caffe2.python.nomnigraph.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph.render": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "IOError",
    "any",
    "caffe2.python.nomnigraph.errno",
    "caffe2.python.nomnigraph.os",
    "cmd_exists",
    "print",
    "str",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.nomnigraph_test.TestBindings": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_basic": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.Annotation"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_device_option": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_from_graph": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_annotation_operator_def": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.nomnigraph.NNModule",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_convertToProto": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "len",
    "print",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_core_net_controlflow": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_core_net_nn_accessors": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_core_net_simple": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_createUniqueDataNode": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.Operator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_debug": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "caffe2.python.nomnigraph.render"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_delete_node": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_delete_subgraph": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNMatchGraph",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_distributed_annotations": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.Annotation",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_distributed_device_map": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_edges_complex": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "caffe2.python.nomnigraph_test.random",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_edges_simple": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NNSubgraph",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_genericGraph": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.Graph",
    "caffe2.python.nomnigraph.render"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_has_device_option": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_invalid_node": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.nomnigraph.NNModule"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_match_graph": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNMatchGraph",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_match_graph_node": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNMatchGraph",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_match_graph_node_strict": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.nomnigraph.NNMatchGraph",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_netdef_simple": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_node_interactions": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.Data",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.Operator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_operatordef_simple": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.nomnigraph.NNModule"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_all_uses_with": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_as_consumer": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_producer": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_replace_subraph": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNMatchGraph",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_simple": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph.NeuralNetData",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.TestBindings.test_traversal": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.ng": {
  "data": {
   "shadows": "caffe2.python.nomnigraph"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.nomnigraph_transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.ng": {
  "data": {
   "shadows": "caffe2.python.nomnigraph"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.transpose_network": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.nomnigraph.NeuralNetOperator",
    "caffe2.python.utils.ArgsToDict",
    "collections.defaultdict",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations.test_simple_replace": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations.test_simple_rewire": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations_test.TestNomnigraphTransformations.test_transpose_network": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.nomnigraph.NNModule",
    "caffe2.python.nomnigraph_transformations.transpose_network",
    "caffe2.python.test_util.randBlobFloat32",
    "caffe2.python.test_util.randBlobsFloat32",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.FetchBlobs",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.nomnigraph_transformations_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.ng": {
  "data": {
   "shadows": "caffe2.python.nomnigraph"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.transpose_network": {
  "data": {
   "shadows": "caffe2.python.nomnigraph_transformations.transpose_network"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.tu": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.nomnigraph_transformations_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.normalizer": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.normalizer.BatchNormalizer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.normalizer.Normalizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.normalizer.BatchNormalizer.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.normalizer.BatchNormalizer",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.normalizer.BatchNormalizer._run": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "caffe2.python.normalizer.LayerNormalizer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.python.normalizer.Normalizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.normalizer.LayerNormalizer.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.normalizer.LayerNormalizer",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.normalizer.LayerNormalizer._run": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "caffe2.python.normalizer.Normalizer": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.normalizer.Normalizer.__call__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "caffe2.python.normalizer.Normalizer.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "caffe2.python.normalizer.Normalizer._run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.normalizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.normalizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.normalizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.normalizer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.normalizer_context.ModifierContext": {
  "data": {
   "shadows": "caffe2.python.modifier_context.ModifierContext"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context.NormalizerContext": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.context.define_context",
    "caffe2.python.modifier_context.ModifierContext"
   ]
  },
  "type": "class"
 },
 "caffe2.python.normalizer_context.NormalizerContext.get_normalizer": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.normalizer_context.NormalizerContext.has_normalizer": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "caffe2.python.normalizer_context.UseModifierBase": {
  "data": {
   "shadows": "caffe2.python.modifier_context.UseModifierBase"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context.UseNormalizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.modifier_context.UseModifierBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.normalizer_context.UseNormalizer._context_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.normalizer_context.NormalizerContext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.normalizer_context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context.context": {
  "data": {
   "shadows": "caffe2.python.context"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_context.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.normalizer_test.BatchNormalizer": {
  "data": {
   "shadows": "caffe2.python.normalizer.BatchNormalizer"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test.LayersTestCase": {
  "data": {
   "shadows": "caffe2.python.layer_test_util.LayersTestCase"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test.NormalizerContext": {
  "data": {
   "shadows": "caffe2.python.normalizer_context.NormalizerContext"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test.TestNormalizerContext": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.LayersTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.normalizer_test.TestNormalizerContext.test_normalizer_context": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.normalizer.BatchNormalizer",
    "caffe2.python.normalizer_context.NormalizerContext.current",
    "caffe2.python.normalizer_context.UseNormalizer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.normalizer_test.UseNormalizer": {
  "data": {
   "shadows": "caffe2.python.normalizer_context.UseNormalizer"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.normalizer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core.GlobalInit",
    "caffe2.python.numa_benchmark.main"
   ]
  },
  "type": "module"
 },
 "caffe2.python.numa_benchmark.GB": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "caffe2.python.numa_benchmark.NUM_ITER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "caffe2.python.numa_benchmark.NUM_REPLICAS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "caffe2.python.numa_benchmark.SHAPE_LEN": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "caffe2.python.numa_benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark.build_net": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.Net",
    "caffe2.python.numa_benchmark.NUM_REPLICAS",
    "caffe2.python.numa_benchmark.SHAPE_LEN",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.numa_benchmark.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark.main": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.numa_benchmark.GB",
    "caffe2.python.numa_benchmark.NUM_ITER",
    "caffe2.python.numa_benchmark.NUM_REPLICAS",
    "caffe2.python.numa_benchmark.SHAPE_LEN",
    "caffe2.python.numa_benchmark.build_net",
    "caffe2.python.numa_benchmark.time",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.GetNumNUMANodes",
    "caffe2.python.workspace.IsNUMAEnabled",
    "caffe2.python.workspace.RunNet",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.numa_benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.numa_benchmark.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.numa_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core.GlobalInit",
    "caffe2.python.numa_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.numa_test.NUMATest": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.numa_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.GetNumNUMANodes",
    "caffe2.python.workspace.IsNUMAEnabled",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.numa_test.NUMATest.test_numa": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.numa_test.build_test_net",
    "caffe2.python.workspace.GetBlobNUMANode",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.numa_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.build_test_net": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.numa_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.numa_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.observer_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.observer_test.TestObservers": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.observer_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.observer_test.TestObservers.enable_rnn_executor": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "caffe2.python.observer_test.TestObservers.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.core.GlobalInit",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "dict",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.observer_test.TestObservers.testObserver": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.workspace.RunNet",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.observer_test.TestObservers.test_observer_rnn_executor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "int",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.observer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.observer_test.ws": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.onnx": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.backend": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.Caffe2Backend",
    "caffe2.python.onnx.backend.collections"
   ]
  },
  "type": "module"
 },
 "caffe2.python.onnx.backend.AttributeProto": {
  "data": {
   "shadows": "onnx.AttributeProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.Backend": {
  "data": {
   "shadows": "onnx.backend.base.Backend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.Caffe2Backend": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.DummyName",
    "onnx.backend.base.Backend"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._all_names_in_graph": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._common_onnx_node_to_caffe2_op": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python.core.IsOperator",
    "caffe2.python.onnx.backend.caffe2",
    "classmethod",
    "float",
    "kmap"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._common_onnx_node_to_caffe2_op.kmap": {
  "data": {
   "lineno": 811
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_control_op": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.Caffe2Ops",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_if": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_loop": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.caffe2",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "caffe2.python.core.Net",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.onnx.backend.Caffe2Ops",
    "caffe2.python.onnx.backend.force_unicode",
    "caffe2.python.onnx.backend.itertools",
    "classmethod",
    "dict",
    "len",
    "list",
    "make_rnn",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant.make_cell": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.LSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant.make_rnn": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "make_cell",
    "reform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_rnn_variant.reform": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_tensor_filling_op": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "classmethod",
    "onnx.TensorProto.BOOL",
    "onnx.TensorProto.DOUBLE",
    "onnx.TensorProto.FLOAT",
    "onnx.TensorProto.INT16",
    "onnx.TensorProto.INT32",
    "onnx.TensorProto.INT64",
    "onnx.TensorProto.INT8",
    "onnx.TensorProto.STRING",
    "onnx.TensorProto.UINT16",
    "onnx.TensorProto.UINT32",
    "onnx.TensorProto.UINT8",
    "tensor2list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._create_tensor_filling_op.tensor2list": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.onnx"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._direct_initialize_inputs": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._direct_initialize_parameters": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.onnx",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._external_value_resolution_pass": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._graph_to_net": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "Exception",
    "caffe2.proto.caffe2_pb2.NetDef",
    "classmethod",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._make_rnn_direction": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "classmethod",
    "input",
    "keep_outputs",
    "list",
    "make_cell",
    "reform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._onnx_model_to_caffe2_net": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.onnx.backend.get_device_option",
    "caffe2.python.onnx.backend.onnx",
    "classmethod",
    "onnx.backend.base.Device",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._onnx_node_to_caffe2_op": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python._import_c_extension.Caffe2Backend",
    "caffe2.python.compatibility.container_abcs.Iterable",
    "caffe2.python.onnx.backend.Caffe2Ops",
    "caffe2.python.onnx.backend.OnnxNode",
    "caffe2.python.onnx.backend.itertools",
    "classmethod",
    "getattr",
    "isinstance",
    "translator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._remove_ssa": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "classmethod",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._rnn_reform_weights": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._substitute_raw_value": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "RuntimeError",
    "bytes",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend._visit_and_substitute_raw_values": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.dummy_name": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.is_compatible": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.Caffe2Backend",
    "callable",
    "classmethod",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.onnx_graph_to_caffe2_net": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.optimize_onnx": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.onnx",
    "input",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.prepare": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.onnx.backend.Caffe2Backend",
    "caffe2.python.onnx.backend.get_device_option",
    "caffe2.python.onnx.backend.onnx",
    "caffe2.python.onnx.backend.warnings",
    "caffe2.python.onnx.backend_rep.Caffe2Rep",
    "caffe2.python.onnx.workspace.Workspace",
    "classmethod",
    "onnx.backend.base.Device",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.prepare_zip_archive": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.onnx",
    "caffe2.python.onnx.backend.zipfile",
    "classmethod",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.run_node": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python._import_c_extension.Caffe2Backend",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.onnx.backend.Caffe2Backend",
    "caffe2.python.onnx.backend.get_device_option",
    "caffe2.python.onnx.backend.onnx",
    "caffe2.python.onnx.workspace.Workspace",
    "classmethod",
    "dict",
    "isinstance",
    "len",
    "onnx.backend.base.Device",
    "onnx.backend.base.namedtupledict",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2Backend.supports_device": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "caffe2.python.workspace.has_gpu_support",
    "classmethod",
    "onnx.backend.base.Device",
    "onnx.backend.base.DeviceType.CPU",
    "onnx.backend.base.DeviceType.CUDA"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.Caffe2CppRep": {
  "data": {
   "shadows": "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.Caffe2Ops": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.Caffe2Rep": {
  "data": {
   "shadows": "caffe2.python.onnx.backend_rep.Caffe2Rep"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.Device": {
  "data": {
   "shadows": "onnx.backend.base.Device"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.DeviceType": {
  "data": {
   "shadows": "onnx.backend.base.DeviceType"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.GraphProto": {
  "data": {
   "shadows": "onnx.GraphProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.ModelProto": {
  "data": {
   "shadows": "onnx.ModelProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.OnnxAttributes": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.backend.OnnxAttributes.caffe2": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.caffe2",
    "kmap"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.OnnxAttributes.from_onnx": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.OnnxAttributes",
    "caffe2.python.onnx.backend.convertAttributeProto",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.OnnxNode": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.backend.OnnxNode.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.OnnxAttributes",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.TensorProto": {
  "data": {
   "shadows": "onnx.TensorProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.Workspace": {
  "data": {
   "shadows": "caffe2.python.onnx.workspace.Workspace"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.caffe2": {
  "data": {
   "shadows": "caffe2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.caffe2.python.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.checker": {
  "data": {
   "shadows": "onnx.checker"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.container_abcs": {
  "data": {
   "shadows": "caffe2.python.compatibility.container_abcs"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.convertAttributeProto": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.force_unicode": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.get_device_option": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "onnx.backend.base.DeviceType.CPU",
    "onnx.backend.base.DeviceType.CUDA"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend.gru_cell": {
  "data": {
   "shadows": "caffe2.python.gru_cell"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.is_compatible": {
  "data": {
   "lineno": 941
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.namedtupledict": {
  "data": {
   "shadows": "onnx.backend.base.namedtupledict"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx.backend": {
  "data": {
   "shadows": "onnx.backend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx.defs": {
  "data": {
   "shadows": "onnx.defs"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx.numpy_helper": {
  "data": {
   "shadows": "onnx.numpy_helper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx.optimizer": {
  "data": {
   "shadows": "onnx.optimizer"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx.shape_inference": {
  "data": {
   "shadows": "onnx.shape_inference"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.onnx.utils": {
  "data": {
   "shadows": "onnx.utils"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.prepare": {
  "data": {
   "lineno": 931
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.prepare_zip_archive": {
  "data": {
   "lineno": 933
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.run_model": {
  "data": {
   "lineno": 937
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.run_node": {
  "data": {
   "lineno": 935
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.supports_device": {
  "data": {
   "lineno": 939
  },
  "type": "constant"
 },
 "caffe2.python.onnx.backend.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_cpp_rep": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.backend_cpp_rep.BackendRep": {
  "data": {
   "shadows": "onnx.backend.base.BackendRep"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "onnx.backend.base.BackendRep"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.external_inputs": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.external_outputs": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.init_net": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.pred_net": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.Caffe2CppRep.run": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "isinstance",
    "len",
    "list",
    "onnx.backend.base.namedtupledict",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_cpp_rep.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_cpp_rep.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_cpp_rep.namedtupledict": {
  "data": {
   "shadows": "onnx.backend.base.namedtupledict"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_cpp_rep.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_cpp_rep.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.backend_rep.BackendRep": {
  "data": {
   "shadows": "onnx.backend.base.BackendRep"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "onnx.backend.base.BackendRep"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend_rep.Caffe2Rep",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep._name_scope": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_rep.Caffe2Rep.run": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.onnx.backend_rep.Caffe2Rep",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "onnx.backend.base.namedtupledict",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.backend_rep.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.namedtupledict": {
  "data": {
   "shadows": "onnx.backend.base.namedtupledict"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.backend_rep.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.bin.conversion": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.bin.conversion.ModelProto": {
  "data": {
   "shadows": "onnx.ModelProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.c2": {
  "data": {
   "shadows": "caffe2.python.onnx.backend.Caffe2Backend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.c2_onnx": {
  "data": {
   "shadows": "caffe2.python.onnx.frontend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.caffe2_to_onnx": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.onnx.bin.conversion.click",
    "caffe2.python.onnx.bin.conversion.json",
    "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.bin.conversion.checker": {
  "data": {
   "shadows": "onnx.checker"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.bin.conversion.onnx_to_caffe2": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.Caffe2Backend.onnx_graph_to_caffe2_net",
    "caffe2.python.onnx.bin.conversion.click",
    "onnx.ModelProto"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.bin.conversion.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.error": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.error.BaseException": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.error.Unsupported": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "caffe2.python.onnx.error.BaseException"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.error.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.error.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.error.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.error.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.onnx.frontend.Caffe2Frontend",
    "caffe2.python.onnx.frontend.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.onnx.frontend.AttributeProto": {
  "data": {
   "shadows": "onnx.AttributeProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.DummyName",
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._all_names_in_net": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._common_caffe2_arg_to_onnx_attr": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "onnx.helper.make_attribute"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._common_caffe2_op_to_onnx_node": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "classmethod",
    "filter",
    "onnx.NodeProto"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._extract_value_info": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "onnx.helper.make_tensor_value_info",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._filter_fake_init": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "caffe2.python.onnx.frontend.re",
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "caffe2.python.core.get_ssa",
    "caffe2.python.onnx.frontend.re",
    "classmethod",
    "len",
    "ssa_name",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite.ssa_name": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_arg_to_onnx_attr": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_init_net_to_initializer": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "caffe2.python.onnx.helper.c2_native_run_net",
    "classmethod",
    "onnx.numpy_helper.from_array",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_net_to_onnx_graph": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "caffe2.python.onnx.frontend.itertools",
    "caffe2.python.onnx.frontend.logger",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "classmethod",
    "dict",
    "hasattr",
    "isinstance",
    "list",
    "numpy.random.randn",
    "onnx.GraphProto",
    "onnx.helper.make_tensor_value_info",
    "onnx.mapping.NP_TYPE_TO_TENSOR_TYPE",
    "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_net_to_onnx_model": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "classmethod",
    "onnx.OperatorSetIdProto",
    "onnx.checker.check_model",
    "onnx.helper.make_model"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.caffe2_op_to_onnx_node": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.export_to_onnx",
    "caffe2.python._import_c_extension.support_onnx_export",
    "caffe2.python.compatibility.container_abcs.Iterable",
    "classmethod",
    "getattr",
    "isinstance",
    "onnx.NodeProto",
    "onnx.TensorProto",
    "translator",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.dummy_name": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Caffe2Frontend.ssa_rewrite": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.frontend.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.GraphProto": {
  "data": {
   "shadows": "onnx.GraphProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.ModelProto": {
  "data": {
   "shadows": "onnx.ModelProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.NodeProto": {
  "data": {
   "shadows": "onnx.NodeProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.OperatorSetIdProto": {
  "data": {
   "shadows": "onnx.OperatorSetIdProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.TensorProto": {
  "data": {
   "shadows": "onnx.TensorProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.Unsupported": {
  "data": {
   "shadows": "caffe2.python.onnx.error.Unsupported"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.c2_native_run_net": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_net"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.caffe2_core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.caffe2_init_net_to_initializer": {
  "data": {
   "lineno": 360
  },
  "type": "constant"
 },
 "caffe2.python.onnx.frontend.caffe2_legacy_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_legacy_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.caffe2_net_to_onnx_graph": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "caffe2.python.onnx.frontend.checker": {
  "data": {
   "shadows": "onnx.checker"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.container_abcs": {
  "data": {
   "shadows": "caffe2.python.compatibility.container_abcs"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.defs": {
  "data": {
   "shadows": "onnx.defs"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.helper": {
  "data": {
   "shadows": "onnx.helper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "caffe2.python.onnx.frontend.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.make_attribute": {
  "data": {
   "shadows": "onnx.helper.make_attribute"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.make_model": {
  "data": {
   "shadows": "onnx.helper.make_model"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.make_tensor": {
  "data": {
   "shadows": "onnx.helper.make_tensor"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.make_tensor_value_info": {
  "data": {
   "shadows": "onnx.helper.make_tensor_value_info"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.mapping": {
  "data": {
   "shadows": "onnx.mapping"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.numpy_helper": {
  "data": {
   "shadows": "onnx.numpy_helper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "caffe2.python.onnx.frontend.ssa_rewrite": {
  "data": {
   "lineno": 361
  },
  "type": "constant"
 },
 "caffe2.python.onnx.frontend.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.onnx.helper.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.onnx.helper.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.Workspace": {
  "data": {
   "shadows": "caffe2.python.onnx.workspace.Workspace"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.benchmark_caffe2_model": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "caffe2.python.onnx.workspace.Workspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.helper.benchmark_pytorch_model": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.onnx.helper.log",
    "caffe2.python.onnx.helper.time",
    "model",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.helper.c2_native_run_net": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.onnx.workspace.Workspace",
    "dict",
    "isinstance",
    "len",
    "onnx.backend.base.namedtupledict",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.helper.c2_native_run_op": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.onnx.workspace.Workspace",
    "dict",
    "isinstance",
    "len",
    "onnx.backend.base.namedtupledict",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.helper.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.load_caffe2_net": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.helper.log": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.onnx.helper.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.namedtupledict": {
  "data": {
   "shadows": "onnx.backend.base.namedtupledict"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.save_caffe2_net": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.helper.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.onnx.helper.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.onnxifi.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.onnxifi_caffe2_net": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python._import_c_extension.onnxifi",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.HasBlob",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.onnxifi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.onnxifi.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.test_onnxifi.ONNXIFI_DATATYPE_FLOAT32": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTest.test_conv_graph": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.test_onnxifi.ONNXIFI_DATATYPE_FLOAT32",
    "caffe2.python.onnx.test_onnxifi.onnx",
    "caffe2.python.onnx.test_onnxifi.unittest",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_almost_equal",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTest.test_relu_graph": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.test_onnxifi.ONNXIFI_DATATYPE_FLOAT32",
    "caffe2.python.onnx.test_onnxifi.onnx",
    "caffe2.python.onnx.test_onnxifi.unittest",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.float32",
    "numpy.maximum",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest._add_head_tail": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.OperatorDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest._download": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "caffe2.python.models.download.deleteDirectory",
    "caffe2.python.models.download.downloadFromURLToFile",
    "caffe2.python.models.download.getURLFromName",
    "caffe2.python.onnx.test_onnxifi.os",
    "exit",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest._get_c2_model": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.onnx.test_onnxifi.json",
    "caffe2.python.onnx.test_onnxifi.os",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest._model_dir": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "caffe2.python.onnx.test_onnxifi.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.OnnxifiTransformTest.test_resnet50_core": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.onnx.onnxifi.onnxifi_caffe2_net",
    "caffe2.python.onnx.test_onnxifi.time",
    "caffe2.python.onnx.test_onnxifi.unittest",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.SwitchWorkspace",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "onnx.backend.base.namedtupledict",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.TestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi._print_net": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.test_onnxifi.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.deleteDirectory": {
  "data": {
   "shadows": "caffe2.python.models.download.deleteDirectory"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.downloadFromURLToFile": {
  "data": {
   "shadows": "caffe2.python.models.download.downloadFromURLToFile"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.getURLFromName": {
  "data": {
   "shadows": "caffe2.python.models.download.getURLFromName"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.make_graph": {
  "data": {
   "shadows": "onnx.helper.make_graph"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.make_model": {
  "data": {
   "shadows": "onnx.helper.make_model"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.make_node": {
  "data": {
   "shadows": "onnx.helper.make_node"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.make_tensor": {
  "data": {
   "shadows": "onnx.helper.make_tensor"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.make_tensor_value_info": {
  "data": {
   "shadows": "onnx.helper.make_tensor_value_info"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.namedtupledict": {
  "data": {
   "shadows": "onnx.backend.base.namedtupledict"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.onnx.defs": {
  "data": {
   "shadows": "onnx.defs"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.onnxifi_caffe2_net": {
  "data": {
   "shadows": "caffe2.python.onnx.onnxifi.onnxifi_caffe2_net"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.onnx.test_onnxifi.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.onnx.tests.c2_ref_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.onnx.tests.c2_ref_test.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.DownloadingTestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.DownloadingTestCase"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.DownloadingTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_cast": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.INT8",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.backend.run_model",
    "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_check_arguments": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python._import_c_extension.Caffe2Backend",
    "caffe2.python.onnx.tests.c2_ref_test.six",
    "onnx.helper.make_node"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_concat": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.backend.run_model",
    "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_dummy_name": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.DummyName"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_gemm": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension",
    "caffe2.python.onnx.backend.run_node",
    "numpy.dot",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.random",
    "numpy.testing.assert_almost_equal",
    "numpy.transpose",
    "onnx.helper.make_node"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_gemm_conversion": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python._import_c_extension.Caffe2Backend",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_initializer": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.prepare",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "float",
    "numpy.array",
    "numpy.float32",
    "numpy.tanh",
    "numpy.testing.assert_almost_equal",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info",
    "sigmoid"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_initializer.sigmoid": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_relu_graph": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.prepare",
    "caffe2.python.onnx.backend.run_node",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "numpy.clip",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_slice": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.backend.run_model",
    "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_tensor_filling_ops": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.Caffe2Backend._create_tensor_filling_op",
    "caffe2.python.onnx.helper.c2_native_run_op",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "len",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "onnx.helper.make_tensor",
    "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_tensor_filling_ops_c_backend": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python._import_c_extension.Caffe2Backend",
    "caffe2.python.onnx.helper.c2_native_run_op",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "len",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "onnx.helper.make_tensor",
    "onnx.mapping.TENSOR_TYPE_TO_NP_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2Basic.test_upsample": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.backend.run_model",
    "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "caffe2.python.onnx.tests.c2_ref_test.onnx",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.DownloadingTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End._model_dir": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.c2_ref_test.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End._test_net": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.onnx.backend.prepare",
    "caffe2.python.onnx.frontend.caffe2_net_to_onnx_model",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "caffe2.python.onnx.tests.c2_ref_test.json",
    "caffe2.python.onnx.tests.c2_ref_test.os",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_alexnet": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_bvlc_googlenet": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_bvlc_reference_caffenet": {
  "data": {
   "lineno": 658
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_bvlc_reference_rcnn_ilsvrc13": {
  "data": {
   "lineno": 661
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_densenet121": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_inception_v1": {
  "data": {
   "lineno": 643
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_inception_v2": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_resnet50": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_squeezenet": {
  "data": {
   "lineno": 649
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_vgg16": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.c2_ref_test.os",
    "caffe2.python.onnx.tests.c2_ref_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.TestCaffe2End2End.test_zfnet": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.c2_ref_test.os",
    "caffe2.python.onnx.tests.c2_ref_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.c2_ref_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.c2": {
  "data": {
   "shadows": "caffe2.python.onnx.backend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.c2_native_run_net": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_net"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.c2_native_run_op": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_op"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.c2_onnx": {
  "data": {
   "shadows": "caffe2.python.onnx.frontend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.defs": {
  "data": {
   "shadows": "onnx.defs"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.deleteDirectory": {
  "data": {
   "shadows": "caffe2.python.models.download.deleteDirectory"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.downloadFromURLToFile": {
  "data": {
   "shadows": "caffe2.python.models.download.downloadFromURLToFile"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.getURLFromName": {
  "data": {
   "shadows": "caffe2.python.models.download.getURLFromName"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.make_graph": {
  "data": {
   "shadows": "onnx.helper.make_graph"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.make_model": {
  "data": {
   "shadows": "onnx.helper.make_model"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.make_node": {
  "data": {
   "shadows": "onnx.helper.make_node"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.make_tensor": {
  "data": {
   "shadows": "onnx.helper.make_tensor"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.make_tensor_value_info": {
  "data": {
   "shadows": "onnx.helper.make_tensor_value_info"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.mapping": {
  "data": {
   "shadows": "onnx.mapping"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.c2_ref_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.tests.conversion_test.CliRunner": {
  "data": {
   "shadows": "click.testing.CliRunner"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.ModelProto": {
  "data": {
   "shadows": "onnx.ModelProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.TensorProto": {
  "data": {
   "shadows": "onnx.TensorProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion._make_fake_if_op": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "onnx.TensorProto.BOOL",
    "onnx.TensorProto.FLOAT",
    "onnx.helper.make_graph",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion._make_fake_loop_op": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "onnx.TensorProto.BOOL",
    "onnx.TensorProto.INT32",
    "onnx.TensorProto.INT64",
    "onnx.helper.make_graph",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion._run_command": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.conversion_test.textwrap",
    "caffe2.python.onnx.tests.conversion_test.traceback",
    "click.testing.CliRunner"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_caffe2_to_onnx": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.brew.relu",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.onnx.bin.conversion.caffe2_to_onnx",
    "caffe2.python.onnx.tests.conversion_test.tempfile",
    "float",
    "len",
    "numpy.zeros",
    "onnx.ModelProto"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_caffe2_to_onnx_value_info": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.brew.relu",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.onnx.bin.conversion.caffe2_to_onnx",
    "caffe2.python.onnx.tests.conversion_test.json",
    "caffe2.python.onnx.tests.conversion_test.six",
    "caffe2.python.onnx.tests.conversion_test.tempfile",
    "len",
    "onnx.ModelProto",
    "onnx.TensorProto.FLOAT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_convert_end2end": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.backend.run_model",
    "caffe2.python.onnx.bin.conversion.caffe2_to_onnx",
    "caffe2.python.onnx.bin.conversion.onnx_to_caffe2",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "caffe2.python.onnx.tests.conversion_test.json",
    "caffe2.python.onnx.tests.conversion_test.tempfile",
    "caffe2.python.onnx.tests.conversion_test.unittest",
    "numpy.float32",
    "numpy.matmul",
    "numpy.random.randn",
    "numpy.testing.assert_almost_equal",
    "onnx.ModelProto",
    "onnx.TensorProto.FLOAT",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.onnx.bin.conversion.onnx_to_caffe2",
    "caffe2.python.onnx.tests.conversion_test.tempfile",
    "float",
    "len",
    "list",
    "numpy.zeros",
    "onnx.TensorProto.FLOAT",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2_if": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.prepare",
    "numpy.float32",
    "numpy.matmul",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "onnx.TensorProto.FLOAT",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2_loop": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.prepare",
    "numpy.float32",
    "numpy.matmul",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "onnx.TensorProto.FLOAT",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.TestConversion.test_onnx_to_caffe2_zipfile": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "caffe2.python.onnx.backend.prepare_zip_archive",
    "caffe2.python.onnx.tests.conversion_test.tempfile",
    "caffe2.python.onnx.tests.conversion_test.zipfile",
    "numpy.float32",
    "numpy.matmul",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "onnx.TensorProto.FLOAT",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.conversion_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.c2": {
  "data": {
   "shadows": "caffe2.python.onnx.backend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.c2_native_run_net": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_net"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.caffe2_to_onnx": {
  "data": {
   "shadows": "caffe2.python.onnx.bin.conversion.caffe2_to_onnx"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.helper": {
  "data": {
   "shadows": "onnx.helper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.onnx_to_caffe2": {
  "data": {
   "shadows": "caffe2.python.onnx.bin.conversion.onnx_to_caffe2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.conversion_test.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.onnx.tests.helper_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.onnx.tests.helper_test.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test.TestCaffe2Basic": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.helper_test.TestCaffe2Basic.test_dummy_name": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.DummyName",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.helper_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.helper_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.onnx.backend",
    "caffe2.python.onnx.tests.onnx_backend_test.backend_test",
    "caffe2.python.onnx.tests.onnx_backend_test.os",
    "caffe2.python.onnx.tests.onnx_backend_test.unittest",
    "globals"
   ]
  },
  "type": "module"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.backend_test": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.c2": {
  "data": {
   "shadows": "caffe2.python.onnx.backend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.onnx.backend.test": {
  "data": {
   "shadows": "onnx.backend.test"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.pytest_plugins": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.onnx_backend_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.tests.ssa_test.TensorProto": {
  "data": {
   "shadows": "onnx.TensorProto"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.TestFrontendSSAConversion": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.ssa_test.TestFrontendSSAConversion.test_idempotence": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite",
    "caffe2.python.onnx.tests.ssa_test.copy",
    "onnx.TensorProto.FLOAT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.ssa_test.TestFrontendSSAConversion.test_ssa": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.onnx.frontend.Caffe2Frontend._ssa_rewrite",
    "caffe2.python.onnx.helper.c2_native_run_net",
    "numpy.float32",
    "numpy.random.randn",
    "onnx.TensorProto.FLOAT"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.ssa_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.c2_native_run_net": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_net"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.c2_onnx": {
  "data": {
   "shadows": "caffe2.python.onnx.frontend"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.helper": {
  "data": {
   "shadows": "onnx.helper"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.ssa_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.tests.test_utils.DownloadingTestCase": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.test_utils.DownloadingTestCase._download": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "TypeError",
    "caffe2.python.models.download.deleteDirectory",
    "caffe2.python.models.download.downloadFromURLToFile",
    "caffe2.python.models.download.getURLFromName",
    "caffe2.python.onnx.tests.test_utils.os",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase.add_test_case": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase.assertSameOutputs": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils.TestCase.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.deleteDirectory": {
  "data": {
   "shadows": "caffe2.python.models.download.deleteDirectory"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.downloadFromURLToFile": {
  "data": {
   "shadows": "caffe2.python.models.download.downloadFromURLToFile"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.getURLFromName": {
  "data": {
   "shadows": "caffe2.python.models.download.getURLFromName"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.onnx.tests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.workspace": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.onnx.workspace.Workspace": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.workspace.Workspace.__del__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace.Workspace.__getattr__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace.Workspace.__getattr__.f": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python.workspace",
    "getattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace.Workspace.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.onnx.workspace._WorkspaceCtx",
    "caffe2.python.onnx.workspace.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx.__enter__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.workspace.CurrentWorkspace",
    "caffe2.python.workspace.SwitchWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx.__exit__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.workspace.SwitchWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace._WorkspaceCtx.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "caffe2.python.onnx.workspace.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.onnx.workspace.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.onnx.workspace.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.onnx.workspace.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.onnx.workspace.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "caffe2.python.onnx.workspace.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.activation_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_elu": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_elu.elu_ref": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu.leaky_relu_ref": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu_default": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_leaky_relu_default.leaky_relu_ref": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_prelu": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_prelu.prelu_ref": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.mkl_test_util.gcs",
    "caffe2.python.mkl_test_util.mkl_do",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu.relu_ref": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_fp16": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.activation_ops_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_fp16.relu_grad_ref": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_fp16.relu_ref": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_n": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.TestActivations.test_relu_n.relu_n_ref": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.activation_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.mu": {
  "data": {
   "shadows": "caffe2.python.mkl_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.activation_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.adadelta_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.ref_adadelta": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_adadelta": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adadelta_test.functools",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.floats",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.random.choice",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta.ref_sparse": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta_empty": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adadelta_test.hypothesis",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.float16",
    "numpy.float32",
    "numpy.int64",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.TestAdadelta.test_sparse_adadelta_empty.ref_sparse_empty": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adadelta_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adadelta_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.adagrad_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.ref_row_wise_adagrad": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sqrt",
    "numpy.square",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_adagrad": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test.functools",
    "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_adagrad_output_effective_lr": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test.functools",
    "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_adagrad_output_effective_lr_and_update": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test.functools",
    "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_row_wise_sparse_adagrad": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensor1d",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test.hypothesis",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int64",
    "numpy.sort",
    "numpy.unique",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_row_wise_sparse_adagrad.ref_row_wise_sparse": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_row_wise_sparse_adagrad_empty": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor1d",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test.hypothesis",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.float32",
    "numpy.int64",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_row_wise_sparse_adagrad_empty.ref_row_wise_sparse": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_sparse_adagrad": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper",
    "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_sparse_adagrad_empty": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adagrad_test.hypothesis",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.float16",
    "numpy.float32",
    "numpy.int64",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.TestAdagrad.test_sparse_adagrad_empty.ref_sparse": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.adagrad_sparse_test_helper": {
  "data": {
   "shadows": "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.ref_adagrad": {
  "data": {
   "shadows": "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.adagrad_test_helper.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.random.choice",
    "numpy.random.randint",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test_helper.adagrad_sparse_test_helper.ref_sparse": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad",
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test_helper.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.ref_adagrad": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.float16",
    "numpy.float32",
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adagrad_test_helper.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adagrad_test_helper.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.adam_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.adam_test.TestAdam": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.ref_adam": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.power",
    "numpy.sqrt",
    "numpy.square",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.ref_row_wise_adam": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.power",
    "numpy.sqrt",
    "numpy.square",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_adam": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adam_test.functools",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_adam_output_grad": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adam_test.functools",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensor1d",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adam_test.hypothesis",
    "hypothesis.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.absolute",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int64",
    "numpy.sort",
    "numpy.unique",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam.ref_row_wise_sparse": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam_output_grad": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.elements_of_type",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensor1d",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adam_test.functools",
    "caffe2.python.operator_test.adam_test.hypothesis",
    "hypothesis.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.absolute",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int64",
    "numpy.sort",
    "numpy.unique",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_row_wise_sparse_adam_output_grad.ref_row_wise_sparse_output_grad": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adam_test.hypothesis",
    "hypothesis.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.absolute",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int64",
    "numpy.sort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam.ref_sparse": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam_output_grad": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.adam_test.functools",
    "caffe2.python.operator_test.adam_test.hypothesis",
    "hypothesis.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.absolute",
    "numpy.arange",
    "numpy.array",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int64",
    "numpy.sort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.TestAdam.test_sparse_adam_output_grad.ref_sparse_output_grad": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.adam_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.adam_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.affine_channel_nchw_ref": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.affine_channel_nhwc_ref": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_2d": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_2d.ref_op": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_3d": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.TestAffineChannelOp.test_affine_channel_3d.ref_op": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "caffe2.python.operator_test.affine_channel_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.affine_channel_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision.op_ref": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.operator_test.apmeter_test.calculate_ap"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision_small_buffer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.TestAPMeterOps.test_average_precision_small_buffer.op_ref": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "caffe2.python.operator_test.apmeter_test.calculate_ap"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.calculate_ap": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "max",
    "numpy.arange",
    "numpy.argsort",
    "numpy.bool",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.apmeter_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.apmeter_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.arg_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmax": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmax.argmax_ref": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "list",
    "numpy.argmax",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmin": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.TestArgOps.test_argmin.argmin_ref": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "list",
    "numpy.argmin",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.arg_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.arg_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.assert_test.TestAssert": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.assert_test.TestAssert.test_assert": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "numpy.all",
    "numpy.dtype",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.assert_test.TestAssert.test_assert.assert_ref": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.operator_test.assert_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.assert_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.atomic_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.atomic_ops_test.TestAtomicOps": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.atomic_ops_test.TestAtomicOps.test_atomic_ops": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.atomic_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.atomic_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.basic_rnn_test.unittest",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.basic_rnn_test.BasicRNNCellTest": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.basic_rnn_test.BasicRNNCellTest.test_basic_rnn": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.basic_rnn_test.basic_rnn_reference",
    "caffe2.python.rnn_cell.BasicRNN",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.basic_rnn_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.basic_rnn_reference": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.rnn.rnn_cell_test_util.tanh",
    "input",
    "input.shape",
    "numpy.dot",
    "numpy.int32",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.basic_rnn_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.ht_settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.tanh": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util.tanh"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.basic_rnn_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.batch_box_cox_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TOLERANCE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.batch_box_cox": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.batch_box_cox_test.TOLERANCE",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.batch_box_cox.ref": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.log",
    "numpy.maximum",
    "numpy.power",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_batch_box_cox": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.batch_box_cox_test._inputs",
    "caffe2.python.serialized_test.serialized_test_util.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_bound_base_away_from_zero": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_lambda1_is_all_zero": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.TestBatchBoxCox.test_lambda1_is_partially_zero": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test._inputs": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.operator_test.batch_box_cox_test.TOLERANCE",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_box_cox_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_box_cox_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.append",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize.ref": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize_example": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.TestBatchBucketize.test_batch_bucketize_example.ref": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_bucketize_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.batch_moments_nchw_ref": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.batch_moments_nhwc_ref": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_2d": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_2d.ref": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_3d": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.TestBatchMomentsOp.test_batch_moments_3d.ref": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_moments_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_moments_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_dense_to_sparse": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.randint",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_dense_to_sparse.batch_dense_to_sparse_ref": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_sparse_to_dense": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.TestBatchSparseToDense.test_batch_sparse_to_dense.batch_sparse_to_dense_ref": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.batch_sparse_to_dense_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.bbox_transform_test.generate_rois",
    "caffe2.python.operator_test.bbox_transform_test.generate_rois_rotated",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.array",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform.bbox_transform_ref": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "caffe2.python.operator_test.bbox_transform_test.bbox_transform",
    "caffe2.python.operator_test.bbox_transform_test.bbox_transform_rotated",
    "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes",
    "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes_rotated"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform_batch": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.bbox_transform_test.generate_rois",
    "caffe2.python.operator_test.bbox_transform_test.generate_rois_rotated",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.TestBBoxTransformOp.test_bbox_transform_batch.bbox_transform_ref": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "caffe2.python.operator_test.bbox_transform_test.bbox_transform",
    "caffe2.python.operator_test.bbox_transform_test.bbox_transform_rotated",
    "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes",
    "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes_rotated",
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.bbox_transform": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.minimum",
    "numpy.newaxis",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.bbox_transform_rotated": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.minimum",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.clip_tiled_boxes_rotated": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.generate_rois": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float32",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.random.uniform",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.generate_rois_rotated": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "caffe2.python.operator_test.bbox_transform_test.generate_rois",
    "numpy.empty",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bbox_transform_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bbox_transform_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.bisect_percentile_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.compare_reference": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bisect_percentile_op_ref",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.blobs",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.compare_reference.bisect_percentile_op_ref": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.operator_test.bisect_percentile_op_test.bisect",
    "len",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.test_bisect_percentil_op_large": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.uniform",
    "numpy.sort",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.TestBisectPercentileOp.test_bisect_percentil_op_simple": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.bisect": {
  "data": {
   "shadows": "bisect"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.bisect_percentile_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.operator_test.blobs_queue_db_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest._add_blob_to_queue": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest._create_test_tensor_protos": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.TensorProtos",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.STRING"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest._test_create_blobs_queue_db": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "add_blobs_fun",
    "caffe2.python.core.Net",
    "caffe2.python.timeout_guard.CompleteInTimeOrDie",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "int",
    "len",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_string": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_string.add_blobs": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_tensor": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.BlobsQueueDBTest.test_create_blobs_queue_db_tensor.add_blobs": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "numpy.array",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.timeout_guard": {
  "data": {
   "shadows": "caffe2.python.timeout_guard"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.blobs_queue_db_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp._dtype_conversion": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "hypothesis.assume",
    "numpy.float16",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask.ref": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask_indices": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_boolean_mask_indices.ref": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_lengths": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "int",
    "len",
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_lengths.ref": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_triangle": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_triangle.compare": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_triangle.ref": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "compare",
    "int",
    "numpy.prod",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_window": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "int",
    "len",
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.prod",
    "numpy.random.randint",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_batching_window.ref": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_repeated": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_repeated.ref": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_triangle": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float16",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_triangle.compare": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_triangle.ref": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "compare",
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_lengths": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_lengths.ref": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_window": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.TestBooleanMaskOp.test_sequence_mask_with_window.ref": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.reshape",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_mask_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_mask_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.boolean_unmask_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.boolean_unmask_test.TestUnmaskOp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.boolean_unmask_test.TestUnmaskOp.test": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "enumerate",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.bool_",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.choice",
    "numpy.random.permutation",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.split",
    "numpy.uint16",
    "numpy.uint8",
    "numpy.zeros",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_unmask_test.TestUnmaskOp.test.ref": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "caffe2.python.operator_test.boolean_unmask_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.boolean_unmask_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im.ref": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh.verify": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh_multiclass": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_detections_per_im_same_thresh_multiclass.verify": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_multiclass": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.tile",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_multiclass.ref": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_score_thresh": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op",
    "hypothesis.given",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_score_thresh.ref": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_simple": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.HU_CONFIG",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes",
    "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.TestBoxWithNMSLimitOp.test_simple.ref": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_boxes": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_multiple_boxes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.operator_test.box_with_nms_limit_op_test.gen_boxes",
    "len",
    "numpy.float32",
    "numpy.ones",
    "numpy.tile",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.get_op": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.box_with_nms_limit_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp.test_cast_int_float": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cast_op_test.TestCastOp.test_cast_int_float_empty": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cast_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cast_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.ceil_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.ceil_op_test.TestCeil": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.ceil_op_test.TestCeil.test_ceil": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ceil_op_test.TestCeil.test_ceil.ceil_ref": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ceil_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ceil_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.channel_backprop_stats_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.TestChannelBackpropStats": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.TestChannelBackpropStats.testChannelBackpropStats": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.TestChannelBackpropStats.testChannelBackpropStats.referenceChannelBackpropStatsTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_backprop_stats_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest._channel_shuffle_nchw_ref": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest._channel_shuffle_nhwc_ref": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest.test_channel_shuffle": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.ChannelShuffleOpsTest.test_channel_shuffle.channel_shuffle_ref": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_shuffle_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_shuffle_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.channel_stats_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStats": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStats.testChannelStats": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.TestChannelStats.testChannelStats.referenceChannelStatsTest": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.channel_stats_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.channel_stats_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.checkpoint_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.checkpoint_test.CheckpointTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.operator_test.checkpoint_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.checkpoint_test.CheckpointTest.testCheckpoint": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.operator_test.checkpoint_test.os",
    "caffe2.python.operator_test.checkpoint_test.shutil",
    "caffe2.python.operator_test.checkpoint_test.tempfile",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNet",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.checkpoint_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.checkpoint_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.clip_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip.clip_ref": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip_default": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.TestClip.test_clip_default.clip_ref": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "caffe2.python.operator_test.clip_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.clip_tensor_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.TestClipTensorByScalingOp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.TestClipTensorByScalingOp.test_clip_tensor_by_scaling": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.TestClipTensorByScalingOp.test_clip_tensor_by_scaling.clip_tensor_by_scaling_ref": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.clip_tensor_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.TestCollectAndDistributeFpnRpnProposals.test_collect_and_dist": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect_and_distribute_fpn_rpn_ref",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.utils.MakeArgument",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.boxes_area": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect_and_distribute_fpn_rpn_ref": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.collect",
    "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.distribute",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.distribute": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.map_rois_to_fpn_levels",
    "enumerate",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.int32",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.map_rois_to_fpn_levels": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.boxes_area",
    "numpy.clip",
    "numpy.floor",
    "numpy.log2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.collect_and_distribute_fpn_rpn_proposals_op_test.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.concat_split_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_concat": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.concat_split_op_test._tensor_splits",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_concat_add_axis": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.concat_split_op_test._tensor_splits",
    "hypothesis.given",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.concat_split_op_test._tensor_splits",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "dict",
    "hypothesis.strategies.booleans",
    "len",
    "numpy.concatenate",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split.split_ref": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "input.take",
    "len",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.cumsum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split_by_lengths": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "_find_factor_simple",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "len",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split_by_lengths._find_factor_simple": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.TestConcatSplitOps.test_split_by_lengths.split_by_lengths_ref": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.cumsum",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test._tensor_splits": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.tensor",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "len",
    "numpy.array",
    "numpy.diff",
    "numpy.int32",
    "numpy.ones",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.concat_split_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.concat_split_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.conditional_test.TestConditionalOp": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.conditional_test.TestConditionalOp.test_conditional": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.choice",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conditional_test.TestConditionalOp.test_conditional.ref": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conditional_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conditional_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conftest": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.conftest.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conftest.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conftest.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conftest.pytest_addoption": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.DATA_DIR"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conftest.pytest_configure": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.DATA_DIR",
    "caffe2.python.serialized_test.serialized_test_util._output_context.__setattr__"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conftest.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conftest.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.conv_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.conv_test.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution._nd_convolution": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.conv_test.nchw2nhwc",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1d_convolution": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1x1_conv": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "filter",
    "hypothesis.assume",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1x1_conv.conv_1x1_nchw_ref": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "filter",
    "filter.reshape",
    "numpy.add",
    "numpy.dot",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_1x1_conv.conv_1x1_nhwc_ref": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "filter",
    "filter.reshape",
    "filter.transpose",
    "numpy.add",
    "numpy.dot",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_3d_convolution": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_3d_convolution_cudnn_nchw": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_no_hip",
    "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_gradients": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count",
    "caffe2.python.operator_test.conv_test._cudnn_supports",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "int",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_layout": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "Output",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.conv_test._cudnn_supports",
    "caffe2.python.operator_test.conv_test.collections",
    "canonical",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_layout.canonical": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_separate_stride_pad_gradients": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "int",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_separate_stride_pad_layout": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_sync": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.hypothesis_test_util.gcs_no_hip",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "dict",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.square",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range",
    "reversed",
    "run"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_convolution_sync.run": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.TestConvolution.test_use_cudnn_engine_interactions": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.brew.conv",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.conv_test.functools",
    "f"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test._cudnn_convolution_algo_count": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python._import_c_extension.cudnn_convolution_bwd_data_algo_count",
    "caffe2.python._import_c_extension.cudnn_convolution_bwd_filter_algo_count",
    "caffe2.python._import_c_extension.cudnn_convolution_fwd_algo_count",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test._cudnn_supports": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.workspace.GetCuDNNVersion"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.hiputl": {
  "data": {
   "shadows": "caffe2.python.hip_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.nchw2nhwc": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.nhwc2nchw": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.conv_transpose_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_gradients": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_layout": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "int",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_layout_legacy_args": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "int",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_separate_stride_pad_adj_gradient": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.TestConvolutionTranspose.test_convolution_transpose_separate_stride_pad_adj_layout": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.conv_transpose_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.hiputl": {
  "data": {
   "shadows": "caffe2.python.hip_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.conv_transpose_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.operator_test.copy_ops_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.run_test_copy_gradient": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.tearDown": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_cpu": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_gpu": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.operator_test.copy_ops_test.unittest",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_multiple_gpus": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.copy_ops_test.unittest",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.RunNetOnce",
    "get_op_with_output",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_copy_gradient_multiple_gpus.get_op_with_output": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_cpu2gpu_gpu2cpu_gradients": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.brew.fc",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.NameScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.copy_ops_test.unittest",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array_equal",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.CopyOpsTest.test_cpu2gpu_gpu2cpu_sparse_gradients": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.brew.fc",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.copy_ops_test.unittest",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.copy_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.copy_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.cosine_embedding_criterion_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.TestCosineEmbeddingCriterion": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.TestCosineEmbeddingCriterion.test_cosine_embedding_criterion": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.abs",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.TestCosineEmbeddingCriterion.test_cosine_embedding_criterion.ref_cec": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cosine_embedding_criterion_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.counter_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.counter_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.TestCounterOps": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.counter_ops_test.TestCounterOps.test_counter_ops": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.operator_test.counter_ops_test.tempfile",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.counter_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.counter_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.crf_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp._compute_loss_manual": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.concatenate",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "scipy.misc.logsumexp",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp.test_crf_gradient": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.crf.CRFWithLoss",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.crf_test.TestCRFOp.test_crf_with_loss_op": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.crf.CRFWithLoss",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int64",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.uniform",
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.crf_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.crf": {
  "data": {
   "shadows": "caffe2.python.crf"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.logsumexp": {
  "data": {
   "shadows": "scipy.misc.logsumexp"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.crf_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.cross_entropy_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_cross_entropy_and_unjoied_cross_entropy_relation": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.just",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_cross_entropy_and_unjoied_cross_entropy_relation.sigmoid_xentr_logit_grad_ref": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_grad",
    "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy_grad",
    "numpy.expand_dims"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_cross_entropy_and_unjoied_cross_entropy_relation.sigmoid_xentr_logit_ref": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits",
    "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy",
    "len",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_sigmoid_cross_entropy_with_logits": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.sampled_from",
    "hypothesis.strategies.tuples"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_sigmoid_cross_entropy_with_logits.sigmoid_xentr_logit_grad_ref": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_grad",
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_with_log_D_trick_grad",
    "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy_grad",
    "numpy.expand_dims"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_sigmoid_cross_entropy_with_logits.sigmoid_xentr_logit_ref": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits",
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_with_log_D_trick",
    "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy",
    "len",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_soft_label_cross_entropy": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_soft_label_cross_entropy.soft_label_xentr_ref": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.log",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_weighted_sigmoid_cross_entropy_with_logits": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.sampled_from",
    "hypothesis.strategies.tuples"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_weighted_sigmoid_cross_entropy_with_logits.weighted_sigmoid_xentr_logit_grad_ref": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid",
    "numpy.expand_dims",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.TestCrossEntropyOps.test_weighted_sigmoid_cross_entropy_with_logits.weighted_sigmoid_xentr_logit_ref": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits",
    "len",
    "numpy.mean",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_grad": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_with_log_D_trick": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid_cross_entropy_with_logits_with_log_D_trick_grad": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cross_entropy_ops_test.sigmoid"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.exp",
    "numpy.log",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cross_entropy_ops_test.unjoined_sigmoid_cross_entropy_grad": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.random",
    "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.DEFAULT_BEAM_WIDTH": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.DEFAULT_PRUNE_THRESHOLD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.DEFAULT_BEAM_WIDTH",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from",
    "input_generater",
    "ref_ctc_decoder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder.input_generater": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder.ref_ctc_decoder": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.DEFAULT_PRUNE_THRESHOLD",
    "collections.Counter",
    "collections.defaultdict",
    "len",
    "numpy.append",
    "numpy.array",
    "numpy.hstack",
    "numpy.int32",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.TestCTCBeamSearchDecoderOp.test_ctc_beam_search_decoder.ref_ctc_decoder_max_time": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ref_ctc_decoder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_beam_search_decoder_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.ctc_greedy_decoder_op_test.random",
    "caffe2.python.operator_test.ctc_greedy_decoder_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from",
    "input_generater",
    "ref_ctc_decoder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder.input_generater": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder.ref_ctc_decoder": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.argmax",
    "numpy.array",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder.ref_ctc_decoder_max_time": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ref_ctc_decoder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "input_generater"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg.input_generater": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg.ref_ctc_decoder_max_time": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ref_ctc_decoder_no_merge_arg"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.TestCTCGreedyDecoderOp.test_ctc_greedy_decoder_no_merge_arg.ref_ctc_decoder_no_merge_arg": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.argmax",
    "numpy.array",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ctc_greedy_decoder_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.TestLSTMs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.operator_test.cudnn_recurrent_test.unittest",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.TestLSTMs.testEqualToCudnn": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.InitFromLSTMParams",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.rnn_cell.cudnn_LSTM",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "future.utils.viewitems",
    "numpy.allclose",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.cudnn_recurrent_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.data_couple_op_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.TestDataCoupleOp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.data_couple_op_test.TestDataCoupleOp.test_data_couple_op": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.data_couple_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.data_couple_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.dataset_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.dataset_ops_test.Const": {
  "data": {
   "shadows": "caffe2.python.dataset.Const"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.FeedRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FeedRecord"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.FetchRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FetchRecord"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.Field": {
  "data": {
   "shadows": "caffe2.python.schema.Field"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.List": {
  "data": {
   "shadows": "caffe2.python.schema.List"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.Map": {
  "data": {
   "shadows": "caffe2.python.schema.Map"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.NewRecord": {
  "data": {
   "shadows": "caffe2.python.schema.NewRecord"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.Scalar": {
  "data": {
   "shadows": "caffe2.python.schema.Scalar"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_collect_tensor_ops": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "all",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.RunPlan",
    "len",
    "min",
    "numpy.histogram",
    "print",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_dataset_ops": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.dataset.Const",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.operator_test.dataset_ops_test._assert_records_equal",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.RunPlan",
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_last_n_window_ops": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.workspace.CreateBlob",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.TestDatasetOps.test_pack_unpack": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.operator_test.dataset_ops_test._dataset",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "input",
    "len",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._assert_arrays_equal": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._assert_records_equal": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.operator_test.dataset_ops_test._assert_arrays_equal",
    "caffe2.python.schema.Field",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._dataset": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.operator_test.dataset_ops_test._dense_features_map",
    "caffe2.python.operator_test.dataset_ops_test._sparse_features_map",
    "caffe2.python.operator_test.dataset_ops_test.string",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.text",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._dense_features_map": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test._sparse_features_map": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dataset_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.dataset": {
  "data": {
   "shadows": "caffe2.python.dataset"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.from_blob_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_blob_list"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dataset_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.deform_conv_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_conv_gradients": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_random_offsets",
    "caffe2.python.operator_test.deform_conv_test._cudnn_supports",
    "caffe2.python.operator_test.deform_conv_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_conv_separate_stride_pad_gradients": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_random_offsets",
    "caffe2.python.operator_test.deform_conv_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "int",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_flat_input_convolution": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_random_offsets",
    "caffe2.python.operator_test.deform_conv_test._cudnn_supports",
    "caffe2.python.operator_test.deform_conv_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_flat_input_convolution.reference_conv_op": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_null_offset_convolution": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_offsets_dims",
    "caffe2.python.operator_test.deform_conv_test._cudnn_supports",
    "caffe2.python.operator_test.deform_conv_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_null_offset_convolution.reference_conv_op": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_shuffle_input_convolution": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size",
    "caffe2.python.operator_test.deform_conv_test._conv_2d_shuffle_offsets",
    "caffe2.python.operator_test.deform_conv_test._cudnn_supports",
    "caffe2.python.operator_test.deform_conv_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.TestConvolution.test_shuffle_input_convolution.reference_conv_op": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_1d_output_size": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_offsets_dims": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_output_size": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.operator_test.deform_conv_test._conv_1d_output_size"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_random_offsets": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.uniform",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._conv_2d_shuffle_offsets": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.float32",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test._cudnn_supports": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.workspace.GetCuDNNVersion"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.deform_conv_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.deform_conv_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.Depthwise3x3ConvOpsTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.Depthwise3x3ConvOpsTest.test_convolution_gradients": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.depthwise_3x3_conv_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.detectron_keypoints": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.detectron_keypoints._INFERENCE_MIN_SIZE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.detectron_keypoints._NUM_KEYPOINTS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.detectron_keypoints.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.detectron_keypoints.approx_heatmap_keypoint": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "abs",
    "caffe2.python.operator_test.detectron_keypoints.scores_to_probs",
    "len",
    "max",
    "numpy.maximum",
    "numpy.transpose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.detectron_keypoints.cv2": {
  "data": {
   "shadows": "cv2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.detectron_keypoints.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.detectron_keypoints.heatmaps_to_keypoints": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.operator_test.detectron_keypoints._INFERENCE_MIN_SIZE",
    "caffe2.python.operator_test.detectron_keypoints._NUM_KEYPOINTS",
    "caffe2.python.operator_test.detectron_keypoints.cv2",
    "caffe2.python.operator_test.detectron_keypoints.scores_to_probs",
    "int",
    "len",
    "numpy.ceil",
    "numpy.float32",
    "numpy.int",
    "numpy.maximum",
    "numpy.transpose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.detectron_keypoints.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.detectron_keypoints.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.detectron_keypoints.scores_to_probs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.detectron_keypoints.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_L1_distance": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.uniform",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_L2_distance": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.uniform",
    "numpy.square",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_cosine_similarity": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.divide",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.multiply",
    "numpy.random.uniform",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_dot_product": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.DistanceTest.test_dot_product.dot_ref": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.dot",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.distance_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.distance_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_is_test": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.proto.caffe2_pb2.HIP",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.assume",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_is_test.reference_dropout_test": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_ratio0": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.proto.caffe2_pb2.HIP",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.TestDropout.test_dropout_ratio0.reference_dropout_ratio0": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.dropout_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.dropout_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.duplicate_operands_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.duplicate_operands_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.TestDuplicateOperands": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.duplicate_operands_test.TestDuplicateOperands.test_duplicate_operands": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.allclose",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.duplicate_operands_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.duplicate_operands_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.TestElementwiseLinearOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.TestElementwiseLinearOp.test": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.TestElementwiseLinearOp.test.ref_op": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_linear_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.elementwise_logical_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestIsMemberOf": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.array",
    "numpy.int64",
    "numpy.random.randint",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestIsMemberOf.test_is_member_of.test": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere.test_reference": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.python.operator_test.elementwise_logical_ops_test.rowmux",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere.test_rowwhere": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.elementwise_logical_ops_test.mux",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestRowWhere.test_rowwhere_dim2": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.elementwise_logical_ops_test.rowmux",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere.test_reference": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.operator_test.elementwise_logical_ops_test.mux",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere.test_where": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.elementwise_logical_ops_test.mux",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.TestWhere.test_where_dim2": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.elementwise_logical_ops_test.mux",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.mux": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.rowmux": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.operator_test.elementwise_logical_ops_test.mux",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_logical_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.elementwise_op_broadcast_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Add": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Mul": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_Sub": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_axis0": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sum",
    "powt_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_axis1": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sum",
    "powt_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_broadcast": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.sum",
    "powt_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_grad_mixed": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.reshape",
    "numpy.sum",
    "powt_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_axis0": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.newaxis",
    "powt_op"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_axis1": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.newaxis",
    "powt_op"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_powt.powt_op_mixed": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "numpy.newaxis",
    "powt_op"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_broadcast_scalar": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_semantic_broadcast": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_empty_blob": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_fp16": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.elementwise_op_broadcast_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "numpy.float16",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.TestElementwiseBroadcast.test_sum_reduce_fp16.ref_op": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_op_broadcast_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.elementwise_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._run_single_test": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op.ref": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "np_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_binary_op_in_place.ref": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "np_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps._test_bitwise_binary_op.ref": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "np_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_abs": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_abs.abs_ref": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.absolute"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_add": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.add"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_bitwise_and": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.bitwise_and"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_bitwise_or": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.bitwise_or"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_bitwise_xor": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.bitwise_xor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cbrt": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cbrt.cbrt_ref": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.cbrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cbrt_grad": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cube": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cube.cube_grad_ref": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_cube.cube_ref": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_div": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.divide"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_div_legacy_grad": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_div_legacy_grad.div_grad_ref": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs.shape",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "list",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq.eq": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq_bcast": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs.shape",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "list",
    "numpy.random.randint",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_eq_bcast.eq": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_exp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_exp.exp_ref": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_hard_sigmoid": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "abs",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_hard_sigmoid.hard_sigmoid_ref": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_log": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_log.log_op": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_mul": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_powt": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_powt.powt_grad": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_powt.powt_op": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_reciprocal": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_reciprocal.reciprocal_op": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "numpy.reciprocal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_rsqrt": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_rsqrt.rsqrt_ref": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sigmoid": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sigmoid.sigmoid_ref": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_softsign": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_softsign.softsign_ref": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.absolute"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqr": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqr.sqr_op": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqrt": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sqrt.sqrt_op": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_sub": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish.swish": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.divide",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "swish"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.divide",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.TestElementwiseOps.test_swish_gradient_inplace.swish_gradient": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "numpy.divide",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.elementwise_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.elementwise_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.emptysample_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.emptysample_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.TestEmptySampleOps": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.emptysample_ops_test.TestEmptySampleOps.test_emptysample": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.emptysample_ops_test.features1",
    "caffe2.python.operator_test.emptysample_ops_test.features1_exp",
    "caffe2.python.operator_test.emptysample_ops_test.features2",
    "caffe2.python.operator_test.emptysample_ops_test.features2_exp",
    "caffe2.python.operator_test.emptysample_ops_test.lengths",
    "caffe2.python.operator_test.emptysample_ops_test.lengths_exp",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.emptysample_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.features1": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.emptysample_ops_test.features1_exp": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.emptysample_ops_test.features2": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.emptysample_ops_test.features2_exp": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.emptysample_ops_test.lengths": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.emptysample_ops_test.lengths_exp": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.emptysample_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.emptysample_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite.test_enforce_finite": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "RuntimeError",
    "all_finite_value",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite.test_enforce_finite.all_finite_value": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.TestEnforceFinite.test_enforce_finite_device_check": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.enforce_finite_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.ensure_clipped_test.TestEnsureClipped": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.ensure_clipped_test.TestEnsureClipped.test_ensure_clipped": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.blobs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "input",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.int64",
    "numpy.nonzero",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_clipped_test.TestEnsureClipped.test_ensure_clipped.ref": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_clipped_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_clipped_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.TestEnsureCPUOutputOp": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.TestEnsureCPUOutputOp.test_ensure_cpu_output": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.ensure_cpu_output_op_test._dev_options",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "input",
    "input.shape",
    "numpy.float32",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test._dev_options": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.device_options",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ensure_cpu_output_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp._rand_shape": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "numpy.ones",
    "numpy.random.choice",
    "numpy.random.randint",
    "range",
    "reversed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp._run_expand_op_test": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp._run_expand_op_test.ref": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "abs",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp.test_expand_nonrand_shape1": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp.test_expand_nonrand_shape2": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.TestExpandOp.test_expand_rand_shape": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.expand_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.expand_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.fc_operator_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.fc_operator_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator._run_test": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.Argument",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "hypothesis.assume",
    "numpy.float16",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator._run_test.fc_op": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator._run_test.fc_tranposed_op": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator.test_fc": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.TestFcOperator.test_fc_transposed": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.fc_operator_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.fc_operator_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps._test_merge_multi_list_or_map_feature_tensors_gradient": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps._test_merge_single_list_or_map_feature_tensors_gradient": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_list_feature_tensors": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_list_feature_tensors_gradient": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_map_feature_tensors": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_map_feature_tensors_gradient": {
  "data": {
   "lineno": 610
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_scalar_feature_tensors": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_multi_scalar_feature_tensors_gradient": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_list_feature_tensors": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_list_feature_tensors_gradient": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_map_feature_tensors": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_map_feature_tensors_gradient": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_scalar_feature_tensors": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_scalar_feature_tensors_gradient": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.TestFeatureMapsOps.test_merge_single_scalar_feature_tensors_gradient_with_strings": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.bytes_",
    "numpy.testing.assert_array_equal",
    "numpy.unicode_"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.feature_maps_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.filler_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_diagonal_fill_op_float": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.filler_ops_test._fill_diagonal",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_diagonal_fill_op_int": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.filler_ops_test._fill_diagonal",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_gaussian_fill_op": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_int64_shape": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.blobs.shape",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_lengths_range_fill": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_lengths_range_fill._len_range_fill": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.array",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_msra_fill_op": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_shape_error": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_uniform_fill_using_arg": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "numpy.max",
    "numpy.min",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.TestFillerOperator.test_uniform_int_fill_op_blob_input": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test._fill_diagonal": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.fill_diagonal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.filler_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.filler_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.find_op_test.TestFindOperator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.find_op_test.TestFindOperator.test_find": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.find_op_test.TestFindOperator.test_find.findop": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "numpy.int32",
    "numpy.where",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.find_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.find_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.flatten_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.flatten_op_test.TestFlatten": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.flatten_op_test.TestFlatten.test_flatten": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.flatten_op_test.TestFlatten.test_flatten.flatten_ref": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "numpy.copy",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.flatten_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flatten_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.flexible_top_k_test.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.flexible_top_k_ref": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.float32",
    "numpy.int32",
    "numpy.ndarray",
    "range",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.test_flexible_top_k": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "int",
    "numpy.float32",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.test_flexible_top_k.bind_ref": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.TestFlexibleTopK.test_flexible_top_k_grad": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "int",
    "numpy.float32",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.flexible_top_k_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.flexible_top_k_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.floor_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.floor_op_test.TestFloor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.floor_op_test.TestFloor.test_floor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.floor_op_test.TestFloor.test_floor.floor_ref": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.floor_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.floor_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.gather_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.gather_ops_test.TestBatchGatherOps": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ops_test.TestBatchGatherOps.test_batch_gather_ops": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.gather_ops_test._inputs",
    "caffe2.python.operator_test.gather_ops_test.ref_gather",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherFused8BitRowwise": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherFused8BitRowwise.test_batch_gather_ops": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_gather_ops": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.gather_ops_test.ref_gather_axis0",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.TestGatherOps.test_gather_ops_axis2": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.gather_ops_test.ref_gather",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test._inputs": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "draw",
    "hypothesis.extra.numpy.arrays",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.hnp": {
  "data": {
   "shadows": "hypothesis.extra.numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather.inner": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "numpy.float32",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather_axis0": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.ref_gather_axis0.inner": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.gather_ranges_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.gather_ranges_op_test.batched_boarders_and_data",
    "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.apply_along_axis"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges.boarders_to_range": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges_split": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.gather_ranges_op_test._tensor_splits",
    "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges_to_dense",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_gather_ranges_with_key_split": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.gather_ranges_op_test._tensor_splits",
    "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges_to_dense_with_key",
    "hypothesis.given",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.TestGatherRanges.test_shape_and_type_inference": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test._tensor_splits": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.permutations",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.batched_boarders_and_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.tuples",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges_to_dense": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.gather_ranges_to_dense_with_key": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gather_ranges_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_empty_given_tensor_byte_string_to_uint8_fill": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "numpy.array",
    "numpy.uint8",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_empty_given_tensor_byte_string_to_uint8_fill.constant_fill": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_given_tensor_byte_string_to_uint8_fill": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.STRING",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "numpy.int32",
    "numpy.uint8",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.TestGivenTensorByteStringToUInt8FillOps.test_given_tensor_byte_string_to_uint8_fill.constant_fill": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_byte_string_to_uint8_fill_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.given_tensor_fill_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.TestGivenTensorFillOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.TestGivenTensorFillOps.test_given_tensor_fill": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.BOOL",
    "caffe2.python.core.DataType.DOUBLE",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.bool_",
    "numpy.double",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.TestGivenTensorFillOps.test_given_tensor_fill.constant_fill": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.given_tensor_fill_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.glu_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.glu_op_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.TestGlu": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.glu_op_test.TestGlu.test_glu_old": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.glu_op_test._glu_old_input",
    "caffe2.python.serialized_test.serialized_test_util.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.glu_op_test.TestGlu.test_glu_old.glu_ref": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.glu_op_test._glu_old_input": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.glu_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.glu_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.group_conv_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.group_conv_test.TestGroupConvolution": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.group_conv_test.TestGroupConvolution.test_group_convolution": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_conv_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.hiputl": {
  "data": {
   "shadows": "caffe2.python.hip_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_conv_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.group_norm_nchw_ref": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.group_norm_nhwc_ref": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_2d.ref_op": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_3d": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_3d.ref_op": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.TestGroupNormOp.test_group_norm_grad": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.shuffle",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.group_norm_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.group_norm_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.gru_test.unittest",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest.gru_base": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "functools.partial",
    "list",
    "locals",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest.test_gru_main": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "caffe2.python.gru_cell.GRU",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.gru_test.gru_input",
    "caffe2.python.operator_test.gru_test.gru_reference",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.GRUCellTest.test_gru_unit_op": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.gru_test._prepare_gru_unit_op",
    "caffe2.python.operator_test.gru_test.gru_unit",
    "caffe2.python.operator_test.gru_test.gru_unit_op_input",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "functools.partial",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.random.seed",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test._prepare_gru_unit_op": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.scope.NameScope",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "generate_input_state",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test._prepare_gru_unit_op.generate_input_state": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test._prepare_rnn": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.gru_cell": {
  "data": {
   "shadows": "caffe2.python.gru_cell"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.gru_input": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "hypothesis.strategies.integers",
    "hypothesis.strategies.tuples"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_input.create_input": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_reference": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.operator_test.gru_test.gru_unit",
    "caffe2.python.rnn.rnn_cell_test_util.sigmoid",
    "input.reshape",
    "input.shape",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_unit": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.rnn.rnn_cell_test_util.sigmoid",
    "caffe2.python.rnn.rnn_cell_test_util.tanh",
    "numpy.int32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_unit_op_input": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "hypothesis.strategies.integers",
    "hypothesis.strategies.tuples"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.gru_unit_op_input.create_input": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.gru_test.ht_settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.sigmoid": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util.sigmoid"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.tanh": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util.tanh"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.gru_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.HEATMAP_SIZE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.NUM_KEYPOINTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.NUM_TEST_ROI": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.setUp": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.HEATMAP_SIZE",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.NUM_KEYPOINTS",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.NUM_TEST_ROI",
    "caffe2.python.utils.MakeArgument",
    "f",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros",
    "range",
    "scipy.interpolate.interp2d"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_approx_heatmap_keypoint": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_approx_keypoint_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_close_to_FAIR": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_FAIR_keypoint_ref",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.sys",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.TestHeatmapMaxKeypointOp.test_special_cases": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_approx_keypoint_ref",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_FAIR_keypoint_ref": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.operator_test.detectron_keypoints.heatmaps_to_keypoints"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.heatmap_approx_keypoint_ref": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.operator_test.detectron_keypoints.approx_heatmap_keypoint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.keypoint_utils": {
  "data": {
   "shadows": "caffe2.python.operator_test.detectron_keypoints"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.heatmap_max_keypoint_op_test.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.proto.caffe2_pb2.Argument",
    "caffe2.proto.hsm_pb2.TreeProto",
    "caffe2.python.hsm_util.create_hierarchy",
    "caffe2.python.hsm_util.create_node_with_nodes",
    "caffe2.python.hsm_util.create_node_with_words",
    "caffe2.python.operator_test.hsm_test.arg",
    "caffe2.python.operator_test.hsm_test.arg_search",
    "caffe2.python.operator_test.hsm_test.args_search",
    "caffe2.python.operator_test.hsm_test.beam",
    "caffe2.python.operator_test.hsm_test.hierarchy_proto",
    "caffe2.python.operator_test.hsm_test.node",
    "caffe2.python.operator_test.hsm_test.node1",
    "caffe2.python.operator_test.hsm_test.node2",
    "caffe2.python.operator_test.hsm_test.node3",
    "caffe2.python.operator_test.hsm_test.node4",
    "caffe2.python.operator_test.hsm_test.tree",
    "caffe2.python.operator_test.hsm_test.unittest",
    "caffe2.python.operator_test.hsm_test.words"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.GradientRegistry.GetGradientForOp",
    "caffe2.python.gradient_checker.GradientChecker",
    "caffe2.python.operator_test.hsm_test.arg",
    "caffe2.python.operator_test.hsm_test.hierarchy_proto",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GlobalInit",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_gradient": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.hsm_test.arg",
    "caffe2.python.operator_test.hsm_test.hierarchy_proto",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GlobalInit",
    "hypothesis.given",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_run_once": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.hsm_test.arg",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_search": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.hsm_test.args_search",
    "caffe2.python.operator_test.hsm_test.hierarchy_proto",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.argsort",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.sort",
    "range",
    "simulation_hsm_search"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_hsm_search.simulation_hsm_search": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "caffe2.python.operator_test.hsm_test.beam",
    "caffe2.python.operator_test.hsm_test.struct",
    "enumerate",
    "numpy.dot",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.max",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_huffman_tree_hierarchy": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.Argument",
    "caffe2.proto.hsm_pb2.TreeProto",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hsm_util.create_hierarchy",
    "caffe2.python.operator_test.hsm_test.arg",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GlobalInit",
    "caffe2.python.workspace.RunOperatorOnce",
    "checkPath",
    "list",
    "numpy.array",
    "numpy.int64",
    "range",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.TestHsm.test_huffman_tree_hierarchy.checkPath": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hsm_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.arg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.arg_search": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.args_search": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.beam": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.gradient_checker": {
  "data": {
   "shadows": "caffe2.python.gradient_checker"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.hierarchy_proto": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.hsm_pb2": {
  "data": {
   "shadows": "caffe2.proto.hsm_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.hsmu": {
  "data": {
   "shadows": "caffe2.python.hsm_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.node": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.node1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.node2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.node3": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.node4": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.struct": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.tree": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hsm_test.words": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.hsm_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps._test_hyperbolic_op": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps._test_hyperbolic_op.ref": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "np_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps.test_cosh": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.cosh",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps.test_sinh": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32",
    "numpy.sinh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.TestHyperbolicOps.test_tanh": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.hyperbolic_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.im2col_col2im_test.TestReduceFrontSum": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.im2col_col2im_test.TestReduceFrontSum.test_col2im_gradients": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.im2col_col2im_test.TestReduceFrontSum.test_im2col_layout": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "int",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.im2col_col2im_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.im2col_col2im_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "caffe2.python.operator_test.image_input_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.image_input_op_test.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase",
    "caffe2.python.operator_test.image_input_op_test.sys",
    "caffe2.python.operator_test.image_input_op_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.image_input_op_test.run_test",
    "hypothesis.Verbosity.verbose",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.tuples",
    "min",
    "validator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput.validator": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput_with_additional_outputs": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.image_input_op_test.run_test",
    "hypothesis.Verbosity.verbose",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.tuples",
    "min",
    "validator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.test_imageinput_with_additional_outputs.validator": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.TestImport.validate_image_and_label": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "numpy.int32",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.Verbosity": {
  "data": {
   "shadows": "hypothesis.Verbosity"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.caffe2_img": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.create_test": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "PIL.Image.fromarray",
    "caffe2.proto.caffe2_pb2.TensorProtos",
    "caffe2.python.operator_test.image_input_op_test.caffe2_img",
    "caffe2.python.operator_test.image_input_op_test.lmdb",
    "caffe2.python.operator_test.image_input_op_test.six",
    "caffe2.python.operator_test.image_input_op_test.verify_apply_bounding_box",
    "caffe2.python.operator_test.image_input_op_test.verify_color_normalize",
    "caffe2.python.operator_test.image_input_op_test.verify_crop",
    "caffe2.python.operator_test.image_input_op_test.verify_rescale",
    "enumerate",
    "list",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.random_integers",
    "numpy.uint8",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.cv2": {
  "data": {
   "shadows": "cv2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.lmdb": {
  "data": {
   "shadows": "lmdb"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.run_test": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.operator_test.image_input_op_test.create_test",
    "caffe2.python.operator_test.image_input_op_test.shutil",
    "caffe2.python.operator_test.image_input_op_test.tempfile",
    "caffe2.python.workspace.RunNetOnce",
    "float",
    "validator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.skimage.util": {
  "data": {
   "shadows": "skimage.util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_apply_bounding_box": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "any",
    "int",
    "list",
    "numpy.isnan",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_color_normalize": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_crop": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.verify_rescale": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.operator_test.image_input_op_test.cv2",
    "float",
    "int",
    "min",
    "numpy.ceil",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.image_input_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps.test_index_hash_ops": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps.test_index_hash_ops.index_hash": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_hash_ops_test.TestIndexHashOps.test_shape_and_type_inference": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.temp_workspace",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_hash_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_hash_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.index_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.index_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps._test_index_ops": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.index_ops_test.tempfile",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "isinstance",
    "numpy.array",
    "numpy.concatenate",
    "numpy.str_",
    "numpy.testing.assert_array_equal",
    "object",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps.test_int_index_ops": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "list",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps.test_long_index_ops": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "list",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.TestIndexOps.test_string_index_ops": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.index_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.index_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.instance_norm_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm._feed_inputs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm._get_inputs": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm._get_op": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_device_check": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_gradients": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_layout": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_model_helper": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "caffe2.python.brew.instance_norm",
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_reference_check": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.assume",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.TestInstanceNorm.test_instance_norm_reference_check.ref": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.instance_norm_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.instance_norm_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_gradient_ops": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_gradient_ops.integral_image_gradient": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_ops": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.TestIntegralImageOps.test_integral_image_ops.integral_image": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.integral_image_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.integral_image_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.jsd_ops_test.TestJSDOps": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.jsd_ops_test.TestJSDOps.test_bernoulli_jsd": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.jsd_ops_test.jsd",
    "caffe2.python.operator_test.jsd_ops_test.jsd_grad",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.entropy": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.jsd": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.operator_test.jsd_ops_test.entropy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.jsd_grad": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.jsd_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.jsd_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.key_split_ops_test.TestKeySplitOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.key_split_ops_test.TestKeySplitOps.test_key_split_op": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.blobs",
    "enumerate",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "max",
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.key_split_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.key_split_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.lars_test.TestLars": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.lars_test.TestLars.test_lars": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lars_test.TestLars.test_lars.ref_lars": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lars_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lars_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.layer_norm_op_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_brew_wrapper": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "caffe2.python.brew.layer_norm",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "len",
    "numpy.expand_dims",
    "numpy.ndim",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad_op": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "layer_norm_ref",
    "len",
    "numpy.expand_dims",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad_op.layer_norm_grad_ref": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "numpy.power",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_grad_op.layer_norm_ref": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "numpy.mean",
    "numpy.power",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "layer_norm_ref",
    "len",
    "numpy.expand_dims",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.TestLayerNormOp.test_layer_norm_op.layer_norm_ref": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "int",
    "numpy.mean",
    "numpy.power",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.layer_norm_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.layer_norm_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.leaky_relu_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu._feed_inputs": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu._get_inputs": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.logical_and",
    "numpy.random.rand",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu._get_op": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_device_check": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_gradients": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_layout": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_model_helper_helper": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_reference_check": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.TestLeakyRelu.test_leaky_relu_reference_check.ref": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "caffe2.python.operator_test.leaky_relu_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.leaky_relu_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_normalization": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_normalization.ref": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "float",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_without_normalization": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.TestLearningRateAdaption.test_learning_rate_adaption_op_without_normalization.ref": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_adaption_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.learning_rate_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_alter_learning_rate_op": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "float",
    "int",
    "iter",
    "numpy.random.randint",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_alter_learning_rate_op.ref": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "float",
    "iter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.learning_rate_op_test.copy",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.asarray",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.random.uniform",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.all_sub_policy_check_ref": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "exp_lr",
    "fixed_lr",
    "iter",
    "numpy.array",
    "step_lr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.exp_lr": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.python.operator_test.learning_rate_op_test.math",
    "iter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.fixed_lr": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.one_policy_check_ref": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "exp_lr",
    "int",
    "iter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_composite_learning_rate_op.step_lr": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "caffe2.python.operator_test.learning_rate_op_test.math",
    "iter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_hill_learning_rate_op": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "float",
    "hypothesis.given",
    "int",
    "iter",
    "numpy.random.randint",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.TestLearningRate.test_hill_learning_rate_op.ref": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.operator_test.learning_rate_op_test.math",
    "float",
    "iter",
    "max",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.learning_rate_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.learning_rate_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.length_split_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator._length_split_op_ref": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_arg": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_edge": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_even_divide": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.int32",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_override_arg": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.TestLengthSplitOperator.test_length_split_random": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.int32",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.length_split_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.length_split_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.TestLengthsPadOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.TestLengthsPadOp.test_lengths_pad": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "len",
    "max",
    "numpy.float32",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.TestLengthsPadOp.test_lengths_pad.lengths_pad_op": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "numpy.float32",
    "numpy.ndarray",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_pad_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.TestLengthsTileOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.TestLengthsTileOp.test_lengths_tile": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.tuples",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.TestLengthsTileOp.test_lengths_tile.lengths_tile_op": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.concatenate",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_tile_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_empty_op": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_empty_op.lengths_top_k": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_op": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "map",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.TestLengthsTopKOps.test_lengths_top_k_op.lengths_top_k": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lengths_top_k_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "get_discounts",
    "len",
    "log_sigm",
    "numpy.abs",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sigm",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss.get_discounts": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.log2",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss.log_sigm": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.ref_lambda_rank_loss.sigm": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.TestListwiseL2rOps.test_lambda_rank_loss": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.blobs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.append",
    "numpy.empty",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.random",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.listwise_l2r_operator_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.operator_test.load_save_test.unittest",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.load_save_test.DEVICES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "caffe2.python.operator_test.load_save_test.TestLoadSaveBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testBlobNameOverrides": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "enumerate",
    "len",
    "numpy.random.permutation",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadAllMultipleFiles": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "OSError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "numpy.testing.assert_array_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadAllMultipleFilesWithSameKey": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadExcessblobs": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadMultipleFilesGivenSourceBlobNames": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "OSError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "numpy.testing.assert_array_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadRepeatedFiles": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testLoadSave": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testMissingFile": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.RunOperatorOnce",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testRepeatedArgs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "enumerate",
    "len",
    "numpy.bool",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.permutation",
    "numpy.uint16",
    "numpy.uint8",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSave.testTruncatedFile": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "open",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.operator_test.load_save_test.TestLoadSaveBase",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.load_save": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "OSError",
    "_LoadTest",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.operator_test.load_save_test.DEVICES",
    "caffe2.python.operator_test.load_save_test.errno",
    "caffe2.python.operator_test.load_save_test.max_gpuid",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.operator_test.load_save_test.shutil",
    "caffe2.python.operator_test.load_save_test.tempfile",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "enumerate",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.bool",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.permutation",
    "numpy.uint16",
    "numpy.uint8",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.load_save._LoadTest": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.BlobProto",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.SerializeBlob",
    "enumerate",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.TestLoadSaveBase.saveFile": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.load_save_test.os",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "enumerate",
    "len",
    "numpy.bool",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.permutation",
    "numpy.uint16",
    "numpy.uint8",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.load_save_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.max_gpuid": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.load_save_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.load_save_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_1d": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_1d.lc_1d_nchw": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "conv",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_1d.lc_1d_nchw.conv": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "lc_2d_nchw",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d.lc_2d_nchw": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "conv",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d.lc_2d_nchw.conv": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_2d.lc_2d_nhwc": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "lc_2d_nchw",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_3d": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_3d.lc_3d_nchw": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "conv",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.TestLocallyConnectedOp.test_lc_3d.lc_3d_nchw.conv": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.locally_connected_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.locally_connected_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.loss_ops_test.TestLossOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.loss_ops_test.TestLossOps.test_averaged_loss": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.loss_ops_test.TestLossOps.test_averaged_loss.avg_op": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.loss_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.loss_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.lpnorm_op_test.LpnormTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.lpnorm_op_test.LpnormTest.test_Lp_Norm": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.sign",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lpnorm_op_test.LpnormTest.test_lpnorm_shape_inference": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs.shape",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "list",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.lpnorm_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.lpnorm_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.map_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap.test_create_map": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.operator_test.map_ops_test.itertools",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap.test_map": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.int64",
    "test_map_func"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.map_ops_test.TestMap.test_map.test_map_func": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.operator_test.map_ops_test.os",
    "caffe2.python.operator_test.map_ops_test.tempfile",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.asarray",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.map_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.map_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.margin_ranking_criterion_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.TestMarginRankingCriterion": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.TestMarginRankingCriterion.test_margin_ranking_criterion": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.abs",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.choice",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.TestMarginRankingCriterion.test_margin_ranking_criterion.ref_cec": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.margin_ranking_criterion_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.math_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_elementwise_power": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_elementwise_power.powf": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_elementwise_power.powf_grad": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_sign": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.TestMathOps.test_sign.signf": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.math_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.math_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.matmul_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul._test_batch_matmul_with_broadcast_common": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul._test_batch_matmul_with_broadcast_common.matmul_ref": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_batch_matmul": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint",
    "relax_fp16_check"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_batch_matmul.matmul_ref": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_batch_matmul.relax_fp16_check": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "caffe2.python.operator_test.matmul_op_test.inspect",
    "check_func",
    "len",
    "numpy.float16"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "max",
    "numpy.float32",
    "numpy.int64",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul_1d": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul_1d_2d": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestBatchMatMul.test_numpy_batch_matmul_2d_1d": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.nan",
    "numpy.random.rand",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul.matmul_ref": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.canonical_axis": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.matmul_ref": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "canonical_axis",
    "reshape"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.reshape": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "size_from_dim",
    "size_to_dim"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.size_from_dim": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.TestMatMul.test_matmul_axis.size_to_dim": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.matmul_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.matmul_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.mean_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.mean_op_test.TestMean": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.mean_op_test.TestMean.test_mean": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mean_op_test.TestMean.test_mean.mean_ref": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mean_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mean_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.TestMergeIdListsOp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.TestMergeIdListsOp.test_merge_id_lists_op": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.merge_id_lists_op_test.id_list_batch",
    "caffe2.python.operator_test.merge_id_lists_op_test.merge_id_lists_ref",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.TestMergeIdListsOp.test_merge_id_lists_ref": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.operator_test.merge_id_lists_op_test.merge_id_lists_ref",
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.hnp": {
  "data": {
   "shadows": "hypothesis.extra.numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.id_list_batch": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.lengths",
    "draw",
    "hypothesis.extra.numpy.arrays",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.int32",
    "numpy.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.merge_id_lists_ref": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "len",
    "merge_arrays",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.insert",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.merge_id_lists_ref.merge_arrays": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.sort",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.merge_id_lists_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.mkl_conv_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.MKLConvTest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase",
    "caffe2.python.operator_test.mkl_conv_op_test.unittest",
    "caffe2.python.workspace.C.has_mkldnn"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.MKLConvTest.test_mkl_convolution": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.mkl_test_util.gcs",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.mu": {
  "data": {
   "shadows": "caffe2.python.mkl_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_conv_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.mkl_packed_fc_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator",
    "caffe2.python.hypothesis_test_util.HypothesisTestCase",
    "caffe2.python.operator_test.mkl_packed_fc_op_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.C.builtin_cpu_supports_avx2",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.mkl_packed_fc_op_test.unittest",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc.ref": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc_axis": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.core.C.builtin_cpu_supports_avx2",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.mkl_packed_fc_op_test.unittest",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.prod",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.PackedFCTest.test_packed_fc_axis.ref": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_packed_fc_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.mkl_speed_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.mkl_speed_test.TestMKLBasic": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.operator_test.mkl_speed_test.unittest",
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.C.has_mkldnn"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.mkl_speed_test.TestMKLBasic.testReLUSpeed": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.MKLDNN",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.BenchmarkNet",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mkl_speed_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mkl_speed_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.mod_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.mod_op_test.TestMod": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.mod_op_test.TestMod.test_mod": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.mod_op_test._data",
    "caffe2.python.operator_test.mod_op_test.numpy",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mod_op_test.TestMod.test_mod.ref": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.operator_test.mod_op_test.numpy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mod_op_test._data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.mod_op_test.numpy",
    "draw",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mod_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mod_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp.run_moments_test": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp.run_moments_test.ref": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.var",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.moments_op_test.TestMomentsOp.test_moments": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "itertools.combinations",
    "len",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.moments_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.moments_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.momentum_sgd_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_fp16momentum_sgd": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.momentum_sgd_test.unittest",
    "caffe2.python.workspace.GetDeviceProperties",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "int",
    "momentum_sgd",
    "numpy.float16",
    "numpy.float32",
    "numpy.random.rand",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_fp16momentum_sgd.momentum_sgd": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_momentum_sgd": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "int",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_momentum_sgd.momentum_sgd": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_sparse_momentum_sgd": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.momentum_sgd_test.hypothesis",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "int",
    "numpy.abs",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int64",
    "numpy.sort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_sparse_momentum_sgd.momentum_sgd": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.TestMomentumSGD.test_sparse_momentum_sgd.sparse": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "momentum_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.momentum_sgd_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.momentum_sgd_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.dyndep.InitOpsLibrary",
    "caffe2.python.operator_test.mpi_test.SetupMPI",
    "caffe2.python.operator_test.mpi_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.mpi_test.COMM": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.mpi_test.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.RANK": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.mpi_test.SIZE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.mpi_test.SetupMPI": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ImportError",
    "caffe2.python.core.IsOperatorWithEngine",
    "caffe2.python.operator_test.mpi_test.COMM",
    "caffe2.python.operator_test.mpi_test.RANK",
    "caffe2.python.operator_test.mpi_test.SIZE",
    "caffe2.python.operator_test.mpi_test._has_mpi",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase",
    "caffe2.python.operator_test.mpi_test._has_mpi",
    "caffe2.python.operator_test.mpi_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_allreduce": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.mpi_test.COMM",
    "caffe2.python.operator_test.mpi_test.RANK",
    "caffe2.python.operator_test.mpi_test.SIZE",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_broadcast": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.mpi_test.COMM",
    "caffe2.python.operator_test.mpi_test.RANK",
    "caffe2.python.operator_test.mpi_test.SIZE",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_reduce": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.mpi_test.COMM",
    "caffe2.python.operator_test.mpi_test.RANK",
    "caffe2.python.operator_test.mpi_test.SIZE",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test.TestMPI.test_sendrecv": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.mpi_test.COMM",
    "caffe2.python.operator_test.mpi_test.RANK",
    "caffe2.python.operator_test.mpi_test.SIZE",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.mpi_test._has_mpi": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.mpi_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.mpi_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient.test_forward": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient.test_forward.neg_grad_ref": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.TestNegateGradient.test_grad": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlobs",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.float32",
    "numpy.random.random_sample",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.negate_gradient_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.ngram_ops_test.TestNGramOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.ngram_ops_test.TestNGramOps.test_ngram_from_categorical_op": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.blobs",
    "enumerate",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "int",
    "max",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.prod",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.ngram_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.ngram_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.normalize_op_test.copy",
    "caffe2.python.operator_test.normalize_op_test.functools",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize.ref_normalize": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.maximum",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize_L1": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.normalize_op_test.functools",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.TestNormalizeOp.test_normalize_L1.ref": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.normalize_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.normalize_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.numpy_tile_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "input",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile.tile_ref": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "input",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile_zero_dim": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "input",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.TestNumpyTile.test_numpy_tile_zero_dim.tile_ref": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "input",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.numpy_tile_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.one_hot_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_bucket_one_hot_shape_inference": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs.shape",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "list",
    "numpy.append",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_bucketized_one_hot": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.append",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_bucketized_one_hot.ref": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "enumerate",
    "numpy.add",
    "numpy.digitize",
    "numpy.floor_divide",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_one_hot": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.array",
    "numpy.int32",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_batch_one_hot.ref": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "enumerate",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_one_hot": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "max",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_one_hot.one_hot_ref": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_segment_one_hot": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.operator_test.one_hot_ops_test._one_hots",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.array",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.TestOneHotOps.test_segment_one_hot.segment_one_hot_ref": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test._one_hots": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.tuples",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.one_hot_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.one_hot_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.onnx_while_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.onnx_while_test.TestONNXWhile": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.onnx_while_test.TestONNXWhile.test_onnx_while_fibb": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.bool",
    "numpy.float32",
    "numpy.int64",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.onnx_while_test.TestONNXWhile.test_onnx_while_fibb.ref": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.onnx_while_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.onnx_while_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nchw2nhwc": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nchw2nhwc.nchw2nhwc_ref": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nhwc2nchw": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.OrderSwitchOpsTest.test_nhwc2nchw.nhwc2nchw_ref": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.order_switch_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.order_switch_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.pack_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.pack_segments_ref": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.pack_segments_ref.pack_segments_ref": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.max",
    "numpy.ones",
    "numpy.pad",
    "numpy.size",
    "numpy.sum",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_out_of_bounds": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_ops": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.pack_ops_test.time",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.int32",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_ops_str": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pack_with_max_length_ops": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.pack_ops_test.time",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.strategies.integers",
    "numpy.arange",
    "numpy.cumsum",
    "numpy.float32",
    "numpy.int32",
    "numpy.sum",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_pad_minf": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_presence_mask": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.array",
    "numpy.bool",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_presence_mask_empty": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.TestTensorPackOps.test_under_bounds": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.pack_rnn_sequence_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_pack_rnn_seqence": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_pack_rnn_seqence.pack_op": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "any",
    "max",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_unpack_rnn_seqence": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "any",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "max",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.TestPackRNNSequenceOperator.test_unpack_rnn_seqence.unpack_op": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pack_rnn_sequence_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.pad_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.pad_test.TestPad": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.pad_test.TestPad.test_crop": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pad_test.TestPad.test_crop.ref": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pad_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pad_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.partition_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.partition_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testLengthsPartition": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.test_util.rand_array",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.testing.assert_array_equal",
    "range",
    "sharding",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testLengthsPartition.sharding": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate",
    "join",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testLengthsPartition.sharding.join": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testPartition": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.test_util.rand_array",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "enumerate",
    "len",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.randint",
    "numpy.testing.assert_array_equal",
    "print",
    "range",
    "sharding",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testPartition.sharding": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "enumerate",
    "join",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.testPartition.sharding.join": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.stack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.TestPartitionOps.test_configs": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.partition_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.rand_array": {
  "data": {
   "shadows": "caffe2.python.test_util.rand_array"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.partition_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.percentile_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp._test_percentile_op": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp._test_shape_inference": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs.shape",
    "list",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_all_elements_in_map": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_elements_bigger_than_map_range": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_elements_smaller_than_map_range": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_interpolation": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_large_sample_size_per_dist": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_only_one_dist": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.TestPercentileOp.test_percentile_op_with_same_value": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "caffe2.python.operator_test.percentile_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.percentile_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.piecewise_linear_transform_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.constrain": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "constrain_internal",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.constrain.constrain_internal": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_1D_predictions_params_from_input": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_1D_predictions_params_from_input.piecewise": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_arg": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_arg.piecewise": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_input": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_binary_predictions_params_from_input.piecewise": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_arg": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_arg.piecewise": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_input": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.uniform"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.test_multi_predictions_params_from_input.piecewise": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.TestPiecewiseLinearTransform.transform": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.piecewise_linear_transform_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.pooling_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_avg_pool_nchw": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_max_pool_nchw": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.GetCuDNNVersion",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_pooling": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.GetCuDNNVersion",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_global_pooling_3d": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_1d": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_3d": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_big_batch": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.pooling_test.os",
    "caffe2.python.operator_test.pooling_test.unittest",
    "hypothesis.given",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_separate_stride_pad": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.max",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.TestPooling.test_pooling_with_index": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.pooling_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.pooling_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.hiputl": {
  "data": {
   "shadows": "caffe2.python.hip_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.pooling_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.prepend_dim_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestPrependDim": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestPrependDim._test_fwd_bwd": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.prepend_dim_test.TestPrependDim.test_prepend_dim": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.prepend_dim_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.prepend_dim_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.python_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.python_op_test.CreatePythonOperator": {
  "data": {
   "shadows": "caffe2.python.core.CreatePythonOperator"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest.test_simple_python_op": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.testing.assert_almost_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest.test_simple_python_op.f": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "g"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.python_op_test.PythonOpTest.test_simple_python_op.g": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "caffe2.python.operator_test.python_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.python_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.rand_quantization_op_speed_test.unittest",
    "numpy.set_printoptions"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.TestSpeedFloatToFusedRandRowwiseQuantized": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.TestSpeedFloatToFusedRandRowwiseQuantized.test_speed_of_rand_quantization": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.rand_quantization_op_speed_test.time",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNet",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_speed_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.rand_quantization_op_test.unittest",
    "numpy.set_printoptions"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.rand_quantization_op_test.struct",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dec_ref",
    "get_allowed_errors",
    "hypothesis.example",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.sampled_from",
    "numpy.absolute",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.zeros_like",
    "print",
    "quantization_ref",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization.dec_ref": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rand_quantization_op_test.struct",
    "numpy.array",
    "numpy.float",
    "numpy.uint8",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization.get_allowed_errors": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.amax",
    "numpy.amin",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.TestFloatToFusedRandRowwiseQuantized.test_rand_quantization.quantization_ref": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bytearray",
    "caffe2.python.operator_test.rand_quantization_op_test.struct",
    "numpy.amax",
    "numpy.amin",
    "numpy.around",
    "numpy.uint8",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.example": {
  "data": {
   "shadows": "hypothesis.example"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rand_quantization_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_batch": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_batch.pair_wise_op": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "f",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_batch.pair_wise_op.f": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_gradient": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abs",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.asscalar",
    "numpy.exp",
    "numpy.float32",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.TestPairWiseLossOps.test_pair_wise_loss_predictions": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.asscalar",
    "numpy.exp",
    "numpy.float32",
    "numpy.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rank_loss_operator_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.rebatching_queue_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_parallel_producer_consumer": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.operator_test.rebatching_queue_test.functools",
    "caffe2.python.operator_test.rebatching_queue_test.primefac",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_parallel_producer_consumer.append": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_closes_properly": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_multi_enqueue_dequeue": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_multiple_components": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.TestReBatchingQueue.test_rebatching_queue_single_enqueue_dequeue": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.primefac": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rebatching_queue_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rebatching_queue_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.record_queue_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.record_queue_test.Dataset": {
  "data": {
   "shadows": "caffe2.python.dataset.Dataset"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.FeedRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FeedRecord"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.Map": {
  "data": {
   "shadows": "caffe2.python.schema.Map"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.NewRecord": {
  "data": {
   "shadows": "caffe2.python.schema.NewRecord"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.RecordQueue": {
  "data": {
   "shadows": "caffe2.python.record_queue.RecordQueue"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.Scalar": {
  "data": {
   "shadows": "caffe2.python.schema.Scalar"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.TestRecordQueue": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.record_queue_test.TestRecordQueue.test_record_queue": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.core.workspace.RunPlan",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.record_queue.RecordQueue",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "caffe2.python.workspace.FetchBlobs",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.int32",
    "range",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.record_queue_test.TestRecordQueue.test_record_queue.process": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.schema.from_blob_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.record_queue_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.from_blob_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_blob_list"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.record_queue_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.AttentionType": {
  "data": {
   "shadows": "caffe2.python.attention.AttentionType"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.recurrent_net_executor_test.random",
    "caffe2.python.operator_test.recurrent_net_executor_test.unittest",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor._compare": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "list",
    "numpy.allclose",
    "numpy.float32",
    "numpy.ndarray",
    "numpy.random.rand",
    "numpy.random.seed",
    "print",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.enable_rnn_executor": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.init_lstm_model": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.setUp": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.test_empty_sequence": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.test_lstm_equal_simplenet": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.ResetWorkspace",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.TestRNNExecutor.test_lstm_with_attention_equal_simplenet": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Recurrent",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LSTMWithAttention",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_net_executor_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.recurrent_network_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest._convolution_1d": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.simple_rnn": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.recurrent.recurrent_net",
    "caffe2.python.workspace.blobs",
    "input",
    "locals",
    "numpy.float32",
    "numpy.random.randn",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.simple_rnn.reference": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "caffe2.python.workspace.CurrentWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.SwitchWorkspace",
    "caffe2.python.workspace.blobs",
    "input",
    "input.shape",
    "list",
    "numpy.float32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_extract": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.recurrent.recurrent_net",
    "caffe2.python.recurrent.retrieve_step_blobs",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randn",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_mul": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_stateful_convolution_forward_only": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.testing.assert_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.RecurrentNetworkTest.test_sum_mul": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.recurrent_network_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.recurrent": {
  "data": {
   "shadows": "caffe2.python.recurrent"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.recurrent_network_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_columnwise_max": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_columnwise_max.columnwise_max": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_avg": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_avg.avg_op": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_int_sum": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_int_sum.sum_op": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sqrsum": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.assume",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sqrsum.sumsqr_op": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sum": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_elementwise_sum.sum_op": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_rowwise_max": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.TestReductionOps.test_rowwise_max.rowwise_max": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.reduction_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.reduction_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.resize_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest.ref": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.meshgrid",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_grad": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_grad.ref": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.minimum",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx.ref": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "numpy.meshgrid",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx_grad": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.TestResize.test_nearest_onnx_grad.ref": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.int32",
    "numpy.minimum",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.resize_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.resize_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.RMACRegionsOpTest": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.RMACRegionsOpTest.test": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.RMACRegionsOpTest.test.ref_op": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.float32",
    "numpy.floor",
    "numpy.maximum",
    "numpy.minimum",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rmac_regions_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.rnn_cell_test.unittest",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.rnn_cell_test.AttentionType": {
  "data": {
   "shadows": "caffe2.python.attention.AttentionType"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.ExtractPredictorNet": {
  "data": {
   "shadows": "caffe2.python.model_helper.ExtractPredictorNet"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.MulCell": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rnn_cell_test.MulCell._apply": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.MulCell.get_state_names": {
  "data": {
   "lineno": 891
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.lstm_base": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.operator_test.rnn_cell_test.lstm_input",
    "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "list",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.lstm_with_attention": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "create_lstm_with_attention",
    "enumerate",
    "list",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_layer_norm_lstm_params": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LayerNormLSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_layered_lstm": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_reference",
    "caffe2.python.rnn_cell.LSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_extract_predictor_net": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ExtractPredictorNet",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_params": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.LSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_unit_recurrent_network": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_unit_recurrent_network.lstm_unit_reference": {
  "data": {
   "lineno": 1601,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_unit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_coverage_attention": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_coverage_attention_reference",
    "caffe2.python.rnn_cell.LSTMWithAttention",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_dot_attention_different_dim": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Dot",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference_different_dim",
    "caffe2.python.rnn_cell.LSTMWithAttention",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_dot_attention_same_dim": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Dot",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference_same_dim",
    "caffe2.python.rnn_cell.LSTMWithAttention",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_recurrent_attention": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Recurrent",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_recurrent_attention_reference",
    "caffe2.python.rnn_cell.LSTMWithAttention",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_lstm_with_regular_attention": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Regular",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_regular_attention_reference",
    "caffe2.python.rnn_cell.LSTMWithAttention",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_milstm": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.milstm_reference",
    "caffe2.python.rnn_cell.MILSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_milstm_params": {
  "data": {
   "lineno": 1241,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.MILSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_multi_lstm": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "caffe2.python.gradient_checker.NetGradientChecker.Check",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.rnn_cell_test.multi_lstm_reference",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.abs",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.random.randn",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_norm_lstm": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.layer_norm_lstm_reference",
    "caffe2.python.operator_test.rnn_cell_test.unittest",
    "caffe2.python.rnn_cell.LayerNormLSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_norm_milstm": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.layer_norm_milstm_reference",
    "caffe2.python.operator_test.rnn_cell_test.unittest",
    "caffe2.python.rnn_cell.LayerNormMILSTM"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_unroll_attention": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.rnn_cell_test._prepare_attention",
    "caffe2.python.utils.debug",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.random.random",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_unroll_lstm": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.utils.debug",
    "caffe2.python.workspace.FeedBlob",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.RNNCellTest.test_unroll_mul": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "caffe2.python.gradient_checker.NetGradientChecker.CompareNets",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.rnn_cell_test.prepare_mul_rnn",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test._prepare_attention": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Recurrent",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.rnn_cell.AttentionCell",
    "caffe2.python.rnn_cell.DropoutCell",
    "caffe2.python.rnn_cell.MILSTMCell",
    "caffe2.python.rnn_cell.MultiRNNCell",
    "caffe2.python.rnn_cell.UnrolledCell",
    "caffe2.python.scope.NameScope",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "enumerate",
    "generate_input_state",
    "len",
    "numpy.int32",
    "numpy.random.randint",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test._prepare_attention.generate_input_state": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test._prepare_rnn": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_coverage_attention_logits": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_dot_attention_logits": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.matmul",
    "numpy.sum",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_recurrent_attention_logits": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.compute_regular_attention_logits": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.gradient_checker": {
  "data": {
   "shadows": "caffe2.python.gradient_checker"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.ht_settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.layer_norm_lstm_reference": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.layer_norm_with_scale_and_bias_ref",
    "caffe2.python.operator_test.rnn_cell_test.lstm_unit",
    "input.reshape",
    "input.shape",
    "numpy.dot",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.layer_norm_milstm_reference": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.layer_norm_with_scale_and_bias_ref",
    "caffe2.python.operator_test.rnn_cell_test.lstm_unit",
    "input.reshape",
    "input.shape",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.layer_norm_with_scale_and_bias_ref": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.prod",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_input": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "hypothesis.strategies.integers",
    "hypothesis.strategies.tuples"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_input.create_input": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_reference": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_unit",
    "input.reshape",
    "input.shape",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_unit": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.rnn.rnn_cell_test_util.sigmoid",
    "caffe2.python.rnn.rnn_cell_test_util.tanh",
    "numpy.int32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_attention_reference": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_unit",
    "compute_attention_logits",
    "input.reshape",
    "input.shape",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.exp",
    "numpy.sum",
    "numpy.transpose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_coverage_attention_reference": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.compute_coverage_attention_logits",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_attention_reference",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.compute_dot_attention_logits",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_attention_reference",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference_different_dim": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference_same_dim": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_dot_attention_reference",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_recurrent_attention_reference": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.compute_recurrent_attention_logits",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_attention_reference",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.lstm_with_regular_attention_reference": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.compute_regular_attention_logits",
    "caffe2.python.operator_test.rnn_cell_test.lstm_with_attention_reference",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.milstm_reference": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_unit",
    "input.reshape",
    "input.shape",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.multi_lstm_reference": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.lstm_reference",
    "input",
    "len",
    "numpy.dot",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.prepare_mul_rnn": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "caffe2.python.operator_test.rnn_cell_test.MulCell",
    "caffe2.python.rnn_cell.MultiRNNCell",
    "caffe2.python.rnn_cell.UnrolledCell",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.rnn_cell_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.rnn_cell": {
  "data": {
   "shadows": "caffe2.python.rnn_cell"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.sigmoid": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util.sigmoid"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.tanh": {
  "data": {
   "shadows": "caffe2.python.rnn.rnn_cell_test_util.tanh"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.rnn_cell_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.roi_align_rotated_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.bbox_xywh_to_xyxy": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_horizontal_rois": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "min",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.uniform",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_horizontal_rois.roialign_ref": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.roi_align_rotated_op_test.copy",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "min",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.uniform",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations.roialign_flip": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "hasattr",
    "numpy.asarray",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations.roialign_ref": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.roi_align_rotated_op_test.copy",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "roialign_rot90"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.RoIAlignRotatedOp.test_simple_rotations.roialign_rot90": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.absolute",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.transpose",
    "roialign_flip",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.roi_align_rotated_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.segment_ops_test.logmeanexp",
    "caffe2.python.operator_test.segment_ops_test.logsumexp",
    "caffe2.python.operator_test.segment_ops_test.logsumexp_grad",
    "caffe2.python.operator_test.segment_ops_test.max_fwd",
    "caffe2.python.operator_test.segment_ops_test.max_grad",
    "caffe2.python.operator_test.segment_ops_test.mean",
    "caffe2.python.operator_test.segment_ops_test.mean_grad",
    "caffe2.python.operator_test.segment_ops_test.sum_grad",
    "caffe2.python.operator_test.segment_ops_test.unittest",
    "functools.partial",
    "numpy.amax",
    "numpy.mean",
    "numpy.sum"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.segment_ops_test.LengthsTester": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "caffe2.python.operator_test.segment_ops_test.TesterBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.LengthsTester.split": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.LengthsTester.unsplit": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.segment_ops_test.REFERENCES_LENGTHS_ONLY": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.segment_ops_test.REFERENCES_SORTED": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.segment_ops_test.SegmentsTester": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "caffe2.python.operator_test.segment_ops_test.TesterBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.SegmentsTester.split": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "max",
    "numpy.count_nonzero",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.SegmentsTester.unsplit": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "max",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_legacy_sparse_and_lengths_sum_gradient": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_mean": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_mean.ref": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_ops": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.operator_test.segment_ops_test.LengthsTester",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_LENGTHS_ONLY",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_sum": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_lengths_sum.ref": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sorted_segment_ops": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.segmented_tensor",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_SORTED",
    "caffe2.python.operator_test.segment_ops_test.SegmentsTester",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sorted_segment_range_log_mean_exp": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.segment_ops_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sorted_segment_range_mean": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.segment_ops_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_indices_in_gradient_mean_gpu": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_indices_in_gradient_sum_gpu": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_mean": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_mean.ref": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_ops": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
    "caffe2.python.operator_test.segment_ops_test.LengthsTester",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_positional_weighted_sum": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_positional_weighted_sum.ref_sparse": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_sum": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_sum.ref": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_sum_invalid_index": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.asarray",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_lengths_weighted_sum": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.sparse_lengths_tensor",
    "caffe2.python.operator_test.segment_ops_test.sparse_lengths_weighted_sum_grad_ref",
    "caffe2.python.operator_test.segment_ops_test.sparse_lengths_weighted_sum_ref",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "functools.partial",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "int",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_sorted_segment_ops": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.sparse_segmented_tensor",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "caffe2.python.operator_test.segment_ops_test.SegmentsTester",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_sparse_unsorted_segment_ops": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.sparse_segmented_tensor",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "caffe2.python.operator_test.segment_ops_test.SegmentsTester",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_means_large": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.segment_ops_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_segment_ops": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.segmented_tensor",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "caffe2.python.operator_test.segment_ops_test.SegmentsTester",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_segment_ops_gpu": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.segmented_tensor",
    "caffe2.python.operator_test.segment_ops_test.REFERENCES_ALL",
    "caffe2.python.operator_test.segment_ops_test.SegmentsTester",
    "caffe2.python.workspace.has_gpu_support",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TestSegmentOps.test_unsorted_sums_large": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.segment_ops_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test.test_segment_ops": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "len",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test.test_segment_ops.seg_reduce": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase._test.test_segment_ops.seg_reduce_grad": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase.segment_reduce_grad_op": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "enumerate",
    "reducer_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.TesterBase.segment_reduce_op": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "reducer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.logmeanexp": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.logsumexp": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.logsumexp_grad": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.expand_dims",
    "numpy.repeat",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.max_fwd": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.amax"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.max_grad": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.resize",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.mean": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.mean_grad": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.sparse_lengths_weighted_sum_grad_ref": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "numpy.dot",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.sparse_lengths_weighted_sum_ref": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.sum_grad": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.expand_dims",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.segment_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.segment_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.selu_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.fix0": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.sign",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.selu_ref": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.exp",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_1": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.selu_op_test.TestSelu",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_2": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.selu_op_test.TestSelu",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_3": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.selu_op_test.TestSelu",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.TestSelu.test_selu_inplace": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.selu_op_test.TestSelu",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.selu_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.selu_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.sequence_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_add_padding": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.sequence_ops_test._add_padding_ref",
    "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "functools.partial",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_add_padding_no_length": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.sequence_ops_test._add_padding_ref",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_add_zero_padding": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.sequence_ops_test._add_padding_ref",
    "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_find_duplicate_elements": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.array",
    "op_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_find_duplicate_elements.op_ref": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_gather_padding": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.sequence_ops_test._add_padding_ref",
    "caffe2.python.operator_test.sequence_ops_test._gather_padding_ref",
    "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "functools.partial",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_remove_data_blocks": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "op_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_remove_data_blocks.op_ref": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "numpy.delete",
    "numpy.sort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_remove_padding": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding",
    "caffe2.python.operator_test.sequence_ops_test._remove_padding_ref",
    "caffe2.python.operator_test.sequence_ops_test.unittest",
    "functools.partial",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_reverse_packed_segs": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.float32",
    "numpy.inf",
    "numpy.random.randint",
    "op_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_grad_ref": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "op_ref"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.TestSequenceOps.test_reverse_packed_segs.op_ref": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._add_padding_ref": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "numpy.ndarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._gather_padding_ref": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.tuples"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._gen_test_add_padding.gen_with_size": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "hypothesis.strategies.just",
    "hypothesis.strategies.tuples",
    "numpy.array",
    "numpy.int32",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test._remove_padding_ref": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sequence_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sequence_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.shape_inference_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.build.CAFFE2_NO_OPERATOR_SCHEMA",
    "caffe2.python.operator_test.shape_inference_test.unittest",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.InferTensorRunAndCompare": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.TensorProto.BOOL",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT16",
    "caffe2.proto.caffe2_pb2.TensorProto.INT16",
    "caffe2.proto.caffe2_pb2.TensorProto.INT32",
    "caffe2.proto.caffe2_pb2.TensorProto.INT64",
    "caffe2.proto.caffe2_pb2.TensorProto.INT8",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "numpy.int32",
    "numpy.ndarray",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testCast": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.TensorProto.BOOL",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.proto.caffe2_pb2.TensorProto.INT16",
    "caffe2.proto.caffe2_pb2.TensorProto.INT32",
    "caffe2.proto.caffe2_pb2.TensorProto.INT64",
    "caffe2.proto.caffe2_pb2.TensorProto.INT8",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.rand",
    "numpy.uint16",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testConcat": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testConcatInt32": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testFCAxis2": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testFCTransposed": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testGather": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testHalfInt8Conversion": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.allclose",
    "numpy.float16",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testInt8Conversion": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.allclose",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testLengthsPad": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testLengthsSum": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceConvNet": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.dropout",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceDistances": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceFlatten": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceIm2Col": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceMatMul": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferencePad": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferencePadZero": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferencePow": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceReduceBackFrontX": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceReshape": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceRoiPool": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceSimpleFC": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceSlice": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceSoftmaxWithLoss": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceTile": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceTranspose": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "caffe2.python.brew.transpose",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.permutation",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceTwoClass": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeInferenceUnique": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.int64",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testShapeOp": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.TestShapeInference.testSqueeze": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.InferShapesAndTypes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.shape_inference_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.build": {
  "data": {
   "shadows": "caffe2.python.build"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.shape_inference_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_ALPHA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_AMPLITUDE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_BATCH_SIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_EMBEDDING_SIZE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_SEQUENCE_LENGTH": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MIN_TEST_ALPHA": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MIN_TEST_AMPLITUDE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_ALPHA",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_AMPLITUDE",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_BATCH_SIZE",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_EMBEDDING_SIZE",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MAX_TEST_SEQUENCE_LENGTH",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MIN_TEST_ALPHA",
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.MIN_TEST_AMPLITUDE",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.int32",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_embedding_op": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "range",
    "sinusoid_encoding"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.TestSinusoidPositionEncodingOp.test_sinusoid_embedding.sinusoid_encoding": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "caffe2.python.operator_test.sinusoid_position_encoding_op_test.math"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sinusoid_position_encoding_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.softmax_ops_test.random",
    "caffe2.python.operator_test.softmax_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_compare_cpugpu": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.operator_test.softmax_ops_test.unittest",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.has_gpu_support",
    "int",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax.label_softmax": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_axis": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "list",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.random.seed",
    "prod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_axis.label_softmax": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_axis.prod": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_grad": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_grad.label_softmax_grad": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.dot",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss.label_softmax_crossent": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "float",
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_axis_2": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_axis_2.label_softmax_crossent": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "float",
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob.label_softmax_crossent": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "float",
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob_weighted": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_label_prob_weighted.label_softmax_crossent_weighted": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_large": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.operator_test.softmax_ops_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_large.label_softmax_crossent": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "float",
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_weighted": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_weighted.label_softmax_crossent_weighted": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_zero_weight": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_softmax_with_loss_zero_weight.label_softmax_crossent": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss.label_softmax_crossent_spatial": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.zeros",
    "print",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss_allignore": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.TestSoftmaxOps.test_spatial_softmax_with_loss_allignore.label_softmax_crossent_spatial": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.log",
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softmax_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softmax_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.softplus_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.softplus_op_test.TestSoftplus": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.softplus_op_test.TestSoftplus.test_softplus": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.softplus_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.softplus_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.sparse_gradient_checker_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.TestSparseGradient": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.TestSparseGradient.test_sparse_gradient": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_gradient_checker_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core.GlobalInit",
    "caffe2.python.operator_test.sparse_lengths_sum_benchmark.DTYPES",
    "caffe2.python.operator_test.sparse_lengths_sum_benchmark.argparse",
    "caffe2.python.operator_test.sparse_lengths_sum_benchmark.benchmark_sparse_lengths_sum",
    "caffe2.python.operator_test.sparse_lengths_sum_benchmark.parser",
    "int",
    "list",
    "numpy.float16",
    "numpy.float32",
    "numpy.uint8"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.DTYPES": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.benchmark_sparse_lengths_sum": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.operator_test.sparse_lengths_sum_benchmark.DTYPES",
    "caffe2.python.operator_test.sparse_lengths_sum_benchmark.datetime",
    "caffe2.python.workspace.BenchmarkNet",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.seed",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.benchmark_sparse_lengths_sum.f": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randint",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.parser": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_lengths_sum_benchmark.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_normalize_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize.ref_normalize": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize.test_sparse_normalize": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.sparse_normalize_test.hypothesis",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.int64",
    "numpy.sign",
    "numpy.sort",
    "numpy.unique",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_normalize_test.TestSparseNormalize.test_sparse_normalize.ref_sparse_normalize": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_normalize_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_normalize_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.sparse_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterAssign": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.test_util.rand_array",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.choice"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterAssign.ref": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterWeightedSum": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.hip_do",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.test_util.rand_array",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randint",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.TestScatterOps.testScatterWeightedSum.ref": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.rand_array": {
  "data": {
   "shadows": "caffe2.python.test_util.rand_array"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.sparse_to_dense_mask_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator.test_sparse_to_dense_mask": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.arange",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.shuffle",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator.test_sparse_to_dense_mask_high_dim": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.arange",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.shuffle",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.TestFcOperator.test_sparse_to_dense_mask_with_int64": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.arange",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.random.shuffle",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.sparse_to_dense_mask_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.spatial_bn_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch.spatial_bn_multi_batch_ref": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.reshape",
    "numpy.sqrt",
    "numpy.square",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch_grad": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatial_bn_multi_batch_grad.spatial_bn_multi_batch_grad_ref": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_brew_wrapper": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "caffe2.python.brew.spatial_bn",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode.reference_spatialbn_test": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_1d": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.spatial_bn_op_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_1d.reference_spatialbn_test": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_3d": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.assume",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_test_mode_3d.reference_spatialbn_test": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode_gradient_check": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.TestSpatialBN.test_spatialbn_train_mode_gradient_check_1d": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hip_test_util.run_in_hip",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.hiputl": {
  "data": {
   "shadows": "caffe2.python.hip_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.spatial_bn_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.specialized_segment_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_8BitsRowwiseOp_cpu": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.uint8",
    "print",
    "sparse_lengths_sum_8BitsRowwiseOp_cpu_reg",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_8BitsRowwiseOp_cpu.sparse_lengths_sum_8BitsRowwiseOp_cpu_reg": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.newaxis",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_8BitsRowwiseOp_cpu_invalid_index": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.uint8",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_cpu": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "print",
    "sparse_lengths_sum_ref",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_sum_cpu.sparse_lengths_sum_ref": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_8BitsRowwiseOp_cpu": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.uint8",
    "print",
    "sparse_lengths_weightedsum_8BitsRowwiseOp_cpu_ref",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_8BitsRowwiseOp_cpu.sparse_lengths_weightedsum_8BitsRowwiseOp_cpu_ref": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.newaxis",
    "numpy.newaxis.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_cpu": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float16",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "print",
    "sparse_lengths_weightedsum_ref",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.TestSpecializedSegmentOps.test_sparse_lengths_weightedsum_cpu.sparse_lengths_weightedsum_ref": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "numpy.cumsum",
    "numpy.insert",
    "numpy.newaxis.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.specialized_segment_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.square_root_divide_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.TestSquareRootDivide": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.TestSquareRootDivide.test_square_root_divide": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.operator_test.square_root_divide_op_test._data_and_scale",
    "caffe2.python.operator_test.square_root_divide_op_test.divide_by_square_root",
    "caffe2.python.operator_test.square_root_divide_op_test.grad",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "functools.partial",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test._data_and_scale": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "hypothesis.strategies.tuples",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.divide_by_square_root": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "caffe2.python.operator_test.square_root_divide_op_test.math",
    "len",
    "numpy.copy",
    "numpy.multiply",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.grad": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.operator_test.square_root_divide_op_test.divide_by_square_root"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.square_root_divide_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.stats_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.TestCounterOps": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.stats_ops_test.TestCounterOps.test_stats_ops": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "numpy.array",
    "numpy.int64",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_avg_put_ops": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "numpy.array",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_clamp": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "int",
    "numpy.array",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_clamp_with_out_of_bounds": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "float",
    "numpy.array",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_default_value": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "int",
    "numpy.array",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_increment_put_ops": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "numpy.array",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.TestPutOps.test_stddev_put_ops": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "dict",
    "numpy.array",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.stats_put_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.stats_put_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.string_ops_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_ends_with": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.text",
    "numpy.array",
    "numpy.object",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_ends_with.string_ends_with_ref": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_prefix": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.operator_test.string_ops_test._string_lists",
    "hypothesis.given",
    "numpy.array",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_prefix.string_prefix_ref": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_starts_with": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.text",
    "numpy.array",
    "numpy.object",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_starts_with.string_starts_with_ref": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bool",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_suffix": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.cpu_do",
    "caffe2.python.operator_test.string_ops_test._string_lists",
    "hypothesis.given",
    "numpy.array",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.TestStringOps.test_string_suffix.string_suffix_ref": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.array",
    "object"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test._string_lists": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "hypothesis.strategies.lists",
    "hypothesis.strategies.text"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.string_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.string_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.text_file_reader_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.text_file_reader_test.FetchRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FetchRecord"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.Scalar": {
  "data": {
   "shadows": "caffe2.python.schema.Scalar"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.TestTextFileReader": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.text_file_reader_test.TestTextFileReader.test_text_file_reader": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.operator_test.text_file_reader_test.tempfile",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.text_file_reader.TextFileReader",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "list",
    "numpy.append",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.text_file_reader_test.TextFileReader": {
  "data": {
   "shadows": "caffe2.python.text_file_reader.TextFileReader"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.text_file_reader_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.thresholded_relu_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.fix_input": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "input",
    "numpy.sign",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_1": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.sampled_from",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_1.defaultRef": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_2": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_2.ref": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu.test_thresholded_relu_3": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.thresholded_relu_op_test.TestThresholdedRelu",
    "float",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.sampled_from",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.thresholded_relu_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.tile_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile.tile_ref": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile_grad": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.tile_op_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tile_grad.tile_ref": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tilewinput": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.TestTile.test_tilewinput.tile_ref": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.int",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.tile_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.tile_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k.bind_ref": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_1": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_1.bind_ref": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_2": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_2.bind_ref": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_3": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_3.bind_ref": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_4": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_4.bind_ref": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_5": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_5.bind_ref": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_6": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_6.bind_ref": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_axis": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_axis.bind_ref": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.test_top_k_grad": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.shuffle",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.TestTopK.top_k_ref": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.float32",
    "numpy.int64",
    "numpy.ndarray",
    "range",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.top_k_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.top_k_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.transpose_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose.transpose_ref": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose_cudnn": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_gpu_only",
    "caffe2.python.hypothesis_test_util.gpu_do",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.transpose_op_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "len",
    "numpy.arange",
    "numpy.float32",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.TestTransposeOp.test_transpose_cudnn.transpose_ref": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.transpose_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.transpose_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.trigonometric_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.assertTrigonometricChecks": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "input"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_acos": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.arccos"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_asin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.arcsin"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_atan": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.arctan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.TestTrigonometricOp.test_tan": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.tan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.trigonometric_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.trigonometric_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.unique_ops_test.TestUniqueOps": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.unique_ops_test.TestUniqueOps.test_unique_op": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor1d",
    "caffe2.python.operator_test.unique_ops_test._unique_ref",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "functools.partial",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.int32",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.unique_ops_test._unique_ref": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.unique_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.unique_uniform_fill_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.TestUniqueUniformFillOp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.TestUniqueUniformFillOp.test_unique_uniform_int_fill": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.sampled_from",
    "len",
    "numpy.array",
    "numpy.int32",
    "numpy.int64",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.unique_uniform_fill_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.upsample_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample.ref": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample_grad": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "numpy.array",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.TestUpSample.test_upsample_grad.ref": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.zeros_like",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.upsample_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.upsample_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_alias_op": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.arange",
    "numpy.float32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max.max_op": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max_grad": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.maximum",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "mx_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_max_grad.max_grad_op.mx_grad": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min.min_op": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min_grad": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.minimum",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "mx_grad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_elementwise_min_grad.min_grad_op.mx_grad": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_gather": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.dims",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.tuples",
    "len",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_gather.lengths_gather_op": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "list",
    "numpy.concatenate",
    "numpy.cumsum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_to_ranges": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.lengths_tensor",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.InferShapesAndTypes",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs.shape",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_lengths_to_ranges.lengths_to_ranges_op": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.cumsum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_nan_check": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "float",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_nan_check.nan_reference": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_range": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.operator_test.utility_ops_test.six",
    "hypothesis.given",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_size_op": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_size_op.size_op": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_slice": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.operator_test.utility_ops_test.random",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_slice.slice_ref": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_transpose": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "caffe2.python.workspace.GetCuDNNVersion",
    "hypothesis.assume",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "int",
    "list",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.permutation",
    "numpy.random.rand",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.TestUtilityOps.test_transpose.transpose_ref": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.utility_ops_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.utility_ops_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "caffe2.python.operator_test.video_input_op_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.operator_test.video_input_op_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.create_a_list": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.create_video_db": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.TensorProtos",
    "caffe2.python.operator_test.video_input_op_test.lmdb",
    "caffe2.python.operator_test.video_input_op_test.sys",
    "int",
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_optical_flow_with_multi_cropping": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_optical_flow_with_rectangle_cropping_use_minimal_width_height": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_optical_flow_with_rectangle_cropping_use_width_height": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_optical_flow_with_temporal_jittering": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_temporal_jittering": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_uniform_sampling": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_uniform_sampling_and_multi_cropping": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_uniform_sampling_color_jittering_lighting": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_uniform_sampling_rectangle_cropping_use_minimal_width_height": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.VideoInputOpTest.test_rgb_with_uniform_sampling_rectangle_cropping_use_width_height": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.operator_test.video_input_op_test.os",
    "caffe2.python.operator_test.video_input_op_test.shutil",
    "caffe2.python.operator_test.video_input_op_test.tempfile",
    "caffe2.python.operator_test.video_input_op_test.unittest",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.video_input_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.lmdb": {
  "data": {
   "shadows": "lmdb"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.video_input_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.weighted_multi_sample_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.TestWeightedMultiSample": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.TestWeightedMultiSample.test_weighted_multi_sample": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "len",
    "numpy.float32",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_multi_sample_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.weighted_sample_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.weighted_sample_test.TestWeightedSample": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.weighted_sample_test.TestWeightedSample.test_weighted_sample": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sample_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sample_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.serialized_test.serialized_test_util.testWithArgs"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp.test_weighted_sum": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "range",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp.test_weighted_sum.weighted_sum_op_ref": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sum_test.TestWeightedSumOp.test_weighted_sum_grad": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.integers",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "range",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.weighted_sum_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.weighted_sum_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.operator_test.wngrad_test.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.operator_test.wngrad_test.HealthCheck": {
  "data": {
   "shadows": "hypothesis.HealthCheck"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_sparse_wngrad": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.wngrad_test.wngrad_sparse_test_helper",
    "hypothesis.HealthCheck.filter_too_much",
    "hypothesis.given",
    "hypothesis.settings",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_sparse_wngrad_empty": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.wngrad_test.hypothesis",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.data",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.empty",
    "numpy.float32",
    "numpy.int64",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_sparse_wngrad_empty.ref_sparse": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_wngrad_dense_base": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.wngrad_test.functools",
    "caffe2.python.operator_test.wngrad_test.ref_wngrad",
    "caffe2.python.serialized_test.serialized_test_util.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_wngrad_dense_output_effective_lr": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.wngrad_test.functools",
    "caffe2.python.operator_test.wngrad_test.ref_wngrad",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.TestWngrad.test_wngrad_dense_output_effective_lr_and_update": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.hypothesis_test_util.tensors",
    "caffe2.python.operator_test.wngrad_test.functools",
    "caffe2.python.operator_test.wngrad_test.ref_wngrad",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.abs",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.hypothesis": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "caffe2.python.operator_test.wngrad_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.ref_wngrad": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.serial": {
  "data": {
   "shadows": "caffe2.python.serialized_test.serialized_test_util"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.settings": {
  "data": {
   "shadows": "hypothesis.settings"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.operator_test.wngrad_test.wngrad_sparse_test_helper": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.operator_test.wngrad_test.logger",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.random.choice",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "caffe2.python.operator_test.wngrad_test.wngrad_sparse_test_helper.ref_sparse": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "enumerate",
    "numpy.copy",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.optimizer.logging",
    "collections.defaultdict",
    "collections.namedtuple",
    "int"
   ]
  },
  "type": "module"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer.__init__": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AdadeltaOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer._run": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdadeltaOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 805
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.AdagradOptimizer.__init__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AdagradOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer._run": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.optimizer.FP16_ENGINES",
    "caffe2.python.optimizer.logger",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.workspace.InferShapesAndTypes",
    "float",
    "isinstance",
    "numpy.finfo",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdagradOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdamOptimizer": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.AdamOptimizer.__init__": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AdamOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdamOptimizer._run": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.workspace.InferShapesAndTypes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AdamOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 1007
  },
  "type": "function"
 },
 "caffe2.python.optimizer.AuxOptimizerParams": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.optimizer.FP16SgdOptimizer": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "caffe2.python.optimizer.SgdOptimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.FP16SgdOptimizer.__init__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "caffe2.python.optimizer.FP16SgdOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.FP16SgdOptimizer._run": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.FLOAT16",
    "caffe2.python.core.GradientSlice",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.FP16_ENGINES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "caffe2.python.optimizer.FtrlOptimizer": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.FtrlOptimizer.__init__": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "caffe2.python.optimizer.FtrlOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.FtrlOptimizer._run": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.FtrlOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "caffe2.python.optimizer.GFtrlOptimizer": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.GFtrlOptimizer.__init__": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "caffe2.python.optimizer.GFtrlOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.GFtrlOptimizer._run": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.GFtrlOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 899
  },
  "type": "function"
 },
 "caffe2.python.optimizer.MultiPrecisionSgdOptimizer": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "caffe2.python.optimizer.SgdOptimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.MultiPrecisionSgdOptimizer.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "caffe2.python.optimizer.MultiPrecisionSgdOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.MultiPrecisionSgdOptimizer._run": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.optimizer.SgdOptimizer",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.Optimizer.__call__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.modeling.parameter_info.ParameterInfo",
    "isinstance",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AuxOptimizerParams",
    "caffe2.python.optimizer._optimizer_instance_count"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer._add_local_lr_multiplier": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer._clear_local_lr_multiplier": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer._run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.add_lr_multiplier": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.build_lr": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.utils.BuildUniqueMutexIter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.create_lars_inputs": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.dedup": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.get_auxiliary_parameters": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.get_cpu_blob_name": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.get_gpu_blob_name": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.make_unique_blob_name": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.scope.CurrentDeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.Optimizer.scale_learning_rate": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.RmsPropOptimizer": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.RmsPropOptimizer.__init__": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "caffe2.python.optimizer.RmsPropOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.RmsPropOptimizer._run": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.scope.CurrentDeviceScope",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.RmsPropOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 1213
  },
  "type": "function"
 },
 "caffe2.python.optimizer.SgdOptimizer": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.SgdOptimizer.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "caffe2.python.optimizer.SgdOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.SgdOptimizer._run": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.scope.CurrentDeviceScope",
    "isinstance",
    "numpy.finfo",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.SgdOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "caffe2.python.optimizer.WeightDecayBuilder": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.WeightDecayBuilder.__init__": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "caffe2.python.optimizer.WeightDecayBuilder._run": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.scope.CurrentDeviceScope",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.WngradOptimizer": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.WngradOptimizer.__init__": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "caffe2.python.optimizer.WngradOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.WngradOptimizer._run": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.scope.CurrentDeviceScope",
    "isinstance",
    "numpy.finfo",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.WngradOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 733
  },
  "type": "function"
 },
 "caffe2.python.optimizer.YellowFinOptimizer": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "caffe2.python.optimizer.Optimizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer.YellowFinOptimizer.__init__": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "caffe2.python.optimizer.YellowFinOptimizer",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.YellowFinOptimizer._run": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.utils.BuildUniqueMutexIter",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.YellowFinOptimizer.scale_learning_rate": {
  "data": {
   "lineno": 1126
  },
  "type": "function"
 },
 "caffe2.python.optimizer._LEARNING_RATE_INJECTION": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.optimizer._build": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceScope",
    "caffe2.python.optimizer._LEARNING_RATE_INJECTION",
    "caffe2.python.optimizer._calc_norm_ratio",
    "caffe2.python.optimizer._get_param_to_device",
    "caffe2.python.optimizer.get_param_device",
    "optimizer",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer._calc_norm_ratio": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.core.NameScope",
    "caffe2.python.optimizer.get_param_device",
    "enumerate",
    "float",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer._get_param_to_device": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "caffe2.python.core.InferBlobDevices"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer._optimizer_instance_count": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.python.optimizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.add_weight_decay": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "caffe2.python.optimizer.WeightDecayBuilder",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.build_adadelta": {
  "data": {
   "lineno": 1500,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AdadeltaOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_adagrad": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AdagradOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_adam": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "caffe2.python.optimizer.AdamOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_fp16_sgd": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "caffe2.python.optimizer.FP16SgdOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_ftrl": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator",
    "caffe2.python.optimizer.FtrlOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_gftrl": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "caffe2.python.core.IsOperator",
    "caffe2.python.optimizer.GFtrlOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_multi_precision_sgd": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "caffe2.python.optimizer.MultiPrecisionSgdOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_rms_prop": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "caffe2.python.optimizer.RmsPropOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_sgd": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "caffe2.python.optimizer.SgdOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_wngrad": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "caffe2.python.optimizer.WngradOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.build_yellowfin": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "caffe2.python.optimizer.YellowFinOptimizer",
    "caffe2.python.optimizer._build"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.get_lr_injection": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "caffe2.python.optimizer._LEARNING_RATE_INJECTION",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.get_param_device": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "caffe2.python.optimizer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.parameter_info": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.set_lr_injection": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "caffe2.python.optimizer._LEARNING_RATE_INJECTION",
    "caffe2.python.workspace.FeedBlob",
    "float",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.optimizer.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.optimizer_context.DEFAULT_OPTIM": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.python.optimizer_context.ModifierContext": {
  "data": {
   "shadows": "caffe2.python.modifier_context.ModifierContext"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context.OptimizerContext": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.context.define_context",
    "caffe2.python.modifier_context.ModifierContext"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_context.OptimizerContext.get_optimizer": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.optimizer_context.OptimizerContext.has_optimizer": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.optimizer_context.UseModifierBase": {
  "data": {
   "shadows": "caffe2.python.modifier_context.UseModifierBase"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context.UseOptimizer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.modifier_context.UseModifierBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_context.UseOptimizer._context_class": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.optimizer_context.OptimizerContext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context.context": {
  "data": {
   "shadows": "caffe2.python.context"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_context.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.optimizer_test.LRModificationTestBase": {
  "data": {
   "shadows": "caffe2.python.optimizer_test_util.LRModificationTestBase"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.OptimizerTestBase": {
  "data": {
   "shadows": "caffe2.python.optimizer_test_util.OptimizerTestBase"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.SgdOptimizer": {
  "data": {
   "shadows": "caffe2.python.optimizer.SgdOptimizer"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.TestAdadelta": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestAdadelta.build_optimizer": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_adadelta"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdadelta.check_optimizer": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdagrad": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestAdagrad.build_optimizer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_adagrad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdagrad.check_optimizer": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdam": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestAdam.build_optimizer": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_adam"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestAdam.check_optimizer": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.HasBlob",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.TestFtrl": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestFtrl.build_optimizer": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_ftrl"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestFtrl.check_optimizer": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestGFtrl": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestGFtrl.build_optimizer": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_gftrl"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestGFtrl.check_optimizer": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestGFtrl.testSparse": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestLars": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestLars.build_optimizer": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestLars.check_optimizer": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestLars.testSparse": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMomentumSgd": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestMomentumSgd.build_optimizer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMomentumSgd.check_optimizer": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiOptimizers": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestMultiOptimizers.test_multiple_optimizers": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "adagrad",
    "caffe2.python.brew.fc",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.optimizer.AdagradOptimizer",
    "caffe2.python.optimizer.SgdOptimizer",
    "caffe2.python.optimizer._get_param_to_device",
    "infer_blob_device",
    "sgd_1",
    "sgd_2"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiOptimizers.test_multiple_optimizers.infer_blob_device": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_param_device"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd.build_optimizer": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_multi_precision_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd.check_optimizer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestMultiPrecisionSgd.testGPUDense": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.FLOAT16",
    "caffe2.python.optimizer_test.TestMultiPrecisionSgd",
    "caffe2.python.optimizer_test.unittest",
    "caffe2.python.workspace.has_gpu_support",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestOptimizerContext": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestOptimizerContext.test_optimizer_context": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.optimizer.SgdOptimizer",
    "caffe2.python.optimizer._optimizer_instance_count",
    "caffe2.python.optimizer.add_weight_decay",
    "caffe2.python.optimizer.build_sgd",
    "caffe2.python.optimizer_context.UseOptimizer",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRmsProp": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestRmsProp.build_optimizer": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_rms_prop"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRmsProp.check_optimizer": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRmsProp.testSparse": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.build_optimizer": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_adagrad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.check_optimizer": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.testDense": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestRowWiseAdagrad.testGPUDense": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestSgd": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestSgd.build_optimizer": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_sgd"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestSgd.check_optimizer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestWeightDecay": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestWeightDecay.test_weight_decay": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.optimizer.add_weight_decay",
    "caffe2.python.optimizer.build_sgd",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestWngrad": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.LRModificationTestBase",
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestWngrad.build_optimizer": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_wngrad"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestWngrad.check_optimizer": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test_util.OptimizerTestBase",
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test.TestYellowFin.build_optimizer": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "caffe2.python.optimizer.build_yellowfin"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.caffe2_yellowfin": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.Net",
    "caffe2.python.optimizer.YellowFinOptimizer",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "max",
    "numpy.exp",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.check_optimizer": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_auxiliary_parameters",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.HasBlob",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.compare_yellowfin_models": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "len",
    "model0",
    "model1",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.deb": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.get_lr_mu": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.math",
    "max",
    "min",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.numpy_yellowfin": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "max",
    "numpy.exp",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.ones",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.testSparse": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.test_caffe2_cpu_vs_numpy": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.optimizer_test.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.TestYellowFin.test_caffe2_gpu_vs_numpy": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.optimizer_test.unittest",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test.UseOptimizer": {
  "data": {
   "shadows": "caffe2.python.optimizer_context.UseOptimizer"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.add_weight_decay": {
  "data": {
   "shadows": "caffe2.python.optimizer.add_weight_decay"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_adadelta": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_adadelta"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_adagrad": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_adagrad"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_adam": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_adam"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_ftrl": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_ftrl"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_gftrl": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_gftrl"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_multi_precision_sgd": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_multi_precision_sgd"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_rms_prop": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_rms_prop"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_sgd": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_sgd"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_wngrad": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_wngrad"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.build_yellowfin": {
  "data": {
   "shadows": "caffe2.python.optimizer.build_yellowfin"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.optimizer": {
  "data": {
   "shadows": "caffe2.python.optimizer"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.optimizer_test_util.Initializer": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers.Initializer"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase._gradient_ratio_reference": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.workspace.FetchBlob",
    "isinstance",
    "numpy.linalg.norm",
    "numpy.maximum",
    "numpy.power",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase.test_global_norm_based_gradient_clipping": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "isinstance",
    "numpy.random.randint",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.LRModificationTestBase.test_lr_injection": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "caffe2.python.optimizer.get_lr_injection",
    "caffe2.python.optimizer.set_lr_injection",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase._createDense": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.FLOAT16",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.modeling.initializers.Initializer",
    "caffe2.python.modeling.initializers.PseudoFP16Initializer",
    "numpy.array",
    "numpy.dot",
    "numpy.float16",
    "numpy.float32",
    "numpy.newaxis",
    "numpy.random.randint",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase.testDense": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.optimizer",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.newaxis",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase.testGPUDense": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.core.DataType.FLOAT",
    "caffe2.python.core.DataType.FLOAT16",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.optimizer_test_util.unittest",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.has_gpu_support"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.OptimizerTestBase.testSparse": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.GradientSlice",
    "caffe2.python.optimizer",
    "caffe2.python.workspace.CreateBlob",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.float32",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randint",
    "numpy.random.seed",
    "numpy.repeat",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.optimizer_test_util.PseudoFP16Initializer": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers.PseudoFP16Initializer"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.optimizer": {
  "data": {
   "shadows": "caffe2.python.optimizer"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.optimizer_test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.GlobalWorkerCoordinator",
    "caffe2.python.parallel_workers.log",
    "caffe2.python.parallel_workers.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.parallel_workers.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.__init__": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.add": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.get_new_worker_id": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.get_worker_ids": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.register_shutdown_handler": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.atexit"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.register_shutdown_handler.cleanup": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.start": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.stop": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.GlobalWorkerCoordinator.stop_coordinator": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.LOG_INT_SECS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "caffe2.python.parallel_workers.Metrics": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallel_workers.Metrics.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.collections"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics.log_metrics": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Exception",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics.put_metric": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Metrics.reset_metrics": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.collections"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.State": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "caffe2.python.parallel_workers.six"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallel_workers.State.cleanup": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.State.start": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.State.stop": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallel_workers.Worker.__init__": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.finish": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.time"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.handle_exception": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.logging",
    "caffe2.python.parallel_workers.traceback"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.run": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.Worker.start": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.time"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator._start": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator._stop": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.log"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator._wait_finish": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.threading",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.get_worker_ids": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.init": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.WorkerCoordinator.is_active": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.global_coordinator": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "caffe2.python.parallel_workers.init_workers": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.Metrics",
    "caffe2.python.parallel_workers.Worker",
    "caffe2.python.parallel_workers.WorkerCoordinator",
    "caffe2.python.parallel_workers.threading",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.log": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "caffe2.python.parallel_workers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.run_worker": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkers": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.init_workers",
    "caffe2.python.parallel_workers_test.create_queue",
    "caffe2.python.parallel_workers_test.create_worker",
    "caffe2.python.parallel_workers_test.dequeue_value",
    "caffe2.python.workspace.ResetWorkspace",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersInitFun": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.init_workers",
    "caffe2.python.parallel_workers_test.create_queue",
    "caffe2.python.parallel_workers_test.create_worker",
    "caffe2.python.parallel_workers_test.dequeue_value",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersInitFun.init_fun": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersShutdownFun": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.parallel_workers.init_workers",
    "caffe2.python.parallel_workers_test.create_queue",
    "caffe2.python.parallel_workers_test.create_worker",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.ParallelWorkersTest.testParallelWorkersShutdownFun.shutdown_fun": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.create_queue": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.create_worker": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.create_worker.dummy_worker": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "get_blob_data",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.dequeue_value": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallel_workers_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.parallel_workers": {
  "data": {
   "shadows": "caffe2.python.parallel_workers"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.parallel_workers_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.parallelize_bmuf_distributed_test.log",
    "caffe2.python.parallelize_bmuf_distributed_test.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.DistributedTest": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "caffe2.python.parallelize_bmuf_distributed_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.DistributedTest._test_bmuf_distributed": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process",
    "caffe2.python.parallelize_bmuf_distributed_test.shutil",
    "caffe2.python.parallelize_bmuf_distributed_test.tempfile",
    "len",
    "multiprocessing.Manager",
    "multiprocessing.Process",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.DistributedTest.test_bmuf_distributed": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.booleans"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.Manager": {
  "data": {
   "shadows": "multiprocessing.Manager"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_device_pid",
    "_generate_data",
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.cnn.CNNModelHelper",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.data_parallel_model.Parallelize_BMUF",
    "caffe2.python.data_parallel_model.RunInitNet",
    "caffe2.python.data_parallel_model.RunNet",
    "caffe2.python.dyndep.InitOpsLibrary",
    "caffe2.python.parallelize_bmuf_distributed_test.log",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.NumGpuDevices",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.RunOperatorOnce",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "dict",
    "numpy.array",
    "numpy.float32",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._device_pid": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._generate_data": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.workspace.FeedBlob",
    "enumerate",
    "hypothesis.strategies",
    "hypothesis.strategies.astype",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.round",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._input_builder_fun": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._model_build_fun": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.bmuf_process._param_update_fun": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.data_parallel_model": {
  "data": {
   "shadows": "caffe2.python.data_parallel_model"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.dyndep": {
  "data": {
   "shadows": "caffe2.python.dyndep"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.log": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.parallelize_bmuf_distributed_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.pipeline_test.Dataset": {
  "data": {
   "shadows": "caffe2.python.dataset.Dataset"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.FeedRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FeedRecord"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.FetchRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FetchRecord"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.InitEmptyRecord": {
  "data": {
   "shadows": "caffe2.python.schema.InitEmptyRecord"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.LocalSession": {
  "data": {
   "shadows": "caffe2.python.session.LocalSession"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.NewRecord": {
  "data": {
   "shadows": "caffe2.python.schema.NewRecord"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.Queue": {
  "data": {
   "shadows": "caffe2.python.queue_util.Queue"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.TestPipeline": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.pipeline_test.TestPipeline.test_dequeue_many": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.pipeline_test.math",
    "caffe2.python.queue_util.Queue",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.InitEmptyRecord",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Struct",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.workspace.C.Workspace",
    "float",
    "int",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.pipeline_test.TestPipeline.test_dequeue_many.proc1": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.net_builder.ops",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.schema.NewRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.pipeline_test.TestPipeline.test_dequeue_many.proc2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.net_builder.ops",
    "caffe2.python.net_builder.ops.Add",
    "caffe2.python.net_builder.ops.Sub",
    "caffe2.python.schema.NewRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.pipeline_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.ops": {
  "data": {
   "shadows": "caffe2.python.net_builder.ops"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.pipe": {
  "data": {
   "shadows": "caffe2.python.pipeline.pipe"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.pipeline_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "caffe2.python.predictor": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.mobile_exporter": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.mobile_exporter.Export": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.get_ssa",
    "caffe2.python.predictor.mobile_exporter.add_tensor",
    "caffe2.python.utils.MakeArgument",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.add_tensor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bytes",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.utils.MakeArgument",
    "isinstance",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.mobile_exporter_test.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestMobileExporter": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestMobileExporter.test_mobile_exporter": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.max_pool",
    "caffe2.python.brew.relu",
    "caffe2.python.brew.softmax",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.predictor.mobile_exporter.Export",
    "caffe2.python.workspace",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.Predictor",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "len",
    "numpy.float32",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter_test.TestMobileExporter.test_mobile_exporter_datatypes": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "bytes",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.predictor.mobile_exporter.Export",
    "caffe2.python.workspace",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.Predictor",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.dtype",
    "numpy.int32",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.mobile_exporter_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.mobile_exporter": {
  "data": {
   "shadows": "caffe2.python.predictor.mobile_exporter"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor.mobile_exporter_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_exporter.collections"
   ]
  },
  "type": "class"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.__new__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.PlanDef",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
    "isinstance",
    "len",
    "set",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.global_init_name": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.inputs_name": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.INPUTS_BLOB_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.outputs_name": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.OUTPUTS_BLOB_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.parameters_name": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.PARAMETERS_BLOB_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.predict_init_name": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.predict_net_name": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.train_init_plan_name": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.TRAIN_INIT_PLAN_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.PredictorExportMeta.train_plan_name": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.get_comp_name",
    "caffe2.python.predictor_constants.predictor_constants.TRAIN_PLAN_TYPE"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter._global_init_net": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.predictor.predictor_py_utils.AddModelIdArg",
    "caffe2.python.predictor_constants.predictor_constants.PREDICTOR_DBREADER"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.bytes": {
  "data": {
   "shadows": "builtins.bytes"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.get_meta_net_def": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "caffe2.proto.metanet_pb2.MetaNetDef",
    "caffe2.python.predictor.predictor_exporter._global_init_net",
    "caffe2.python.predictor.predictor_py_utils.AddBlobs",
    "caffe2.python.predictor.predictor_py_utils.AddNet",
    "caffe2.python.predictor.predictor_py_utils.create_predict_init_net",
    "caffe2.python.predictor.predictor_py_utils.create_predict_net",
    "caffe2.python.workspace.C.Workspace.current"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.get_predictor_exporter_helper": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.load_from_db": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "builtins.bytes",
    "caffe2.proto.metanet_pb2.MetaNetDef",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.predictor.serde.deserialize_protobuf_struct",
    "caffe2.python.predictor_constants.predictor_constants.META_NET_DEF",
    "caffe2.python.predictor_constants.predictor_constants.PREDICTOR_DBREADER",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.metanet_pb2": {
  "data": {
   "shadows": "caffe2.proto.metanet_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.predictor_constants": {
  "data": {
   "shadows": "caffe2.python.predictor_constants.predictor_constants"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.prepare_prediction_net": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.predictor.predictor_exporter.load_from_db",
    "caffe2.python.predictor.predictor_py_utils.GetNet",
    "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.save_to_db": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.predictor.predictor_exporter.get_meta_net_def",
    "caffe2.python.predictor.serde.serialize_protobuf_struct",
    "caffe2.python.predictor_constants.predictor_constants.META_NET_DEF",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.serde": {
  "data": {
   "shadows": "caffe2.python.predictor.serde"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.set_model_info": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.proto.metanet_pb2.MetaNetDef",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.utils": {
  "data": {
   "shadows": "caffe2.python.predictor.predictor_py_utils"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_exporter_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest.test_adding_net": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.metanet_pb2.MetaNetDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.MetaNetDefTest.test_minimal": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.metanet_pb2.NetsMap"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_exporter_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest._create_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.cnn.CNNModelHelper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.setUp": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.random.seed",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_db_fails_without_params": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.predictor.predictor_exporter.save_to_db",
    "caffe2.python.predictor.predictor_exporter_test.tempfile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_load_device_scope": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.core.Net",
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
    "caffe2.python.predictor.predictor_exporter.load_from_db",
    "caffe2.python.predictor.predictor_exporter.save_to_db",
    "caffe2.python.predictor.predictor_exporter_test.tempfile",
    "caffe2.python.predictor.predictor_py_utils.GetNet",
    "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_meta_constructor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_meta_net_def_net_runs": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta",
    "caffe2.python.predictor.predictor_exporter.load_from_db",
    "caffe2.python.predictor.predictor_exporter.save_to_db",
    "caffe2.python.predictor.predictor_exporter_test.tempfile",
    "caffe2.python.predictor.predictor_py_utils.GetNet",
    "caffe2.python.predictor_constants.predictor_constants.GLOBAL_INIT_NET_TYPE",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_INIT_NET_TYPE",
    "caffe2.python.predictor_constants.predictor_constants.PREDICT_NET_TYPE",
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "future.utils.viewitems",
    "numpy.float32",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.PredictorExporterTest.test_param_intersection": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.predictor.predictor_exporter.PredictorExportMeta"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_exporter_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.cnn": {
  "data": {
   "shadows": "caffe2.python.cnn"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.metanet_pb2": {
  "data": {
   "shadows": "caffe2.proto.metanet_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.pc": {
  "data": {
   "shadows": "caffe2.python.predictor_constants.predictor_constants"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.pe": {
  "data": {
   "shadows": "caffe2.python.predictor.predictor_exporter"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.pred_utils": {
  "data": {
   "shadows": "caffe2.python.predictor.predictor_py_utils"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_exporter_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_py_utils": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.predictor_py_utils.AddBlobs": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.AddModelIdArg": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils.GetArgumentByName"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.AddNet": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.AddPlan": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetApplicationSpecificInfo": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetArgumentByName": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetBlobs": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetBlobsByTypePrefix": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetNet": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetNetOriginal": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetPlan": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.GetPlanOriginal": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_py_utils._ProtoMapGet"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils._ProtoMapGet": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_py_utils.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_py_utils.create_predict_init_net": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.predictor.predictor_py_utils.AddModelIdArg",
    "zero_fill"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.create_predict_init_net.zero_fill": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.scope.EmptyDeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.create_predict_net": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_py_utils.get_comp_name": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_py_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_py_utils.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_py_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.predictor.predictor_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor._init_net": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "numpy.float32",
    "numpy.zeros",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor._predict_net": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.core.CreateOperator",
    "property"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor.test_run": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.workspace.Predictor",
    "len",
    "numpy.dot",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.TestPredictor.test_run_map": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.workspace.Predictor",
    "len",
    "numpy.dot",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.predictor_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.predictor.predictor_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.predictor.serde": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.predictor.serde.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor.serde.deserialize_protobuf_struct": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "struct_type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.predictor.serde.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor.serde.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor.serde.serialize_protobuf_struct": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "caffe2.python.predictor.serde.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.predictor_constants": {
  "data": {
   "symbols_in_volume": [
    "caffe2.proto.predictor_consts_pb2.PredictorConsts"
   ]
  },
  "type": "module"
 },
 "caffe2.python.predictor_constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.predictor_constants.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.predictor_constants.predictor_constants": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "caffe2.python.predictor_constants.predictor_consts": {
  "data": {
   "shadows": "caffe2.proto.predictor_consts_pb2"
  },
  "type": "import"
 },
 "caffe2.python.predictor_constants.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.predictor_constants.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.py_dll_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "caffe2.python.python_op_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.python_op_test.CreatePythonOperator": {
  "data": {
   "shadows": "caffe2.python.core.CreatePythonOperator"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.MainOpFunctionThatThrowsRuntimeError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.python_op_test.SubFunctionThatThrowsRuntimeError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_builder_tuple": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.python_op_test.op_builder",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNet",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_caught_exception_doesnt_terminate": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_caught_exception_doesnt_terminate.f": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_exception": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.python_op_test.MainOpFunctionThatThrowsRuntimeError",
    "caffe2.python.python_op_test.six",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed.f": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.testing.assert_almost_equal",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_gc": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_gc.f": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_helper_function": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_feed_with_helper_function.f": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.testing.assert_almost_equal",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensor",
    "hypothesis.given",
    "hypothesis.strategies.booleans"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient.f": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient.grad_f": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple.f": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple.grad_f": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple_with_indices": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.gcs",
    "caffe2.python.hypothesis_test_util.tensors",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple_with_indices.f": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_gradient_multiple_with_indices.grad_f": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_multithreaded_evaluation": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunPlan",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.testing.assert_almost_equal",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_multithreaded_evaluation.f": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_reshape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "caffe2.python.core.CreatePythonOperator",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "hypothesis.given",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_reshape.f": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_workspace_manipulation": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.PythonOpTest.test_workspace_manipulation.f": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.SubFunctionThatThrowsRuntimeError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.op_builder": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.op_builder.my_op": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "caffe2.python.python_op_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.python_op_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.queue_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.queue_util.logging"
   ]
  },
  "type": "module"
 },
 "caffe2.python.queue_util.Queue": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.queue_util.QueueWrapper"
   ]
  },
  "type": "class"
 },
 "caffe2.python.queue_util.Queue.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.queue_util.QueueWrapper"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.Queue.setup": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.dataio.Pipe"
   ]
  },
  "type": "class"
 },
 "caffe2.python.queue_util.QueueWrapper.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.dataio.Pipe.__init__",
    "caffe2.python.task.TaskGroup.LOCAL_SETUP"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper.queue": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper.reader": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "caffe2.python.queue_util._QueueReader"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.QueueWrapper.writer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "caffe2.python.queue_util._QueueWriter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.queue_util._QueueReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.queue_util._QueueReader.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader.__init__"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader.read": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader.read_ex": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.queue_util.dequeue",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util._QueueReader.setup_ex": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.queue_util._QueueWriter": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "caffe2.python.dataio.Writer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.queue_util._QueueWriter.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "caffe2.python.queue_util._QueueWriter.setup_ex": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "caffe2.python.queue_util._QueueWriter.write_ex": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.queue_util.enqueue"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.queue_util.close_queue": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.execution_step",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.queue_util.dataio": {
  "data": {
   "shadows": "caffe2.python.dataio"
  },
  "type": "import"
 },
 "caffe2.python.queue_util.dequeue": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.queue_util.enqueue": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "caffe2.python.queue_util.logger"
   ]
  },
  "type": "function"
 },
 "caffe2.python.queue_util.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "caffe2.python.queue_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.queue_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.queue_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.record_queue": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.record_queue.Field": {
  "data": {
   "shadows": "caffe2.python.schema.Field"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.Reader": {
  "data": {
   "shadows": "caffe2.python.dataio.Reader"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.RecordQueue": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.record_queue.RecordQueue.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.execution_step",
    "caffe2.python.core.workspace.RunNetOnce",
    "caffe2.python.record_queue._QueueReader",
    "caffe2.python.record_queue._QueueWriter",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_column_list",
    "isinstance",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.record_queue.RecordQueue.build": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.core.execution_step",
    "process",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.record_queue.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.Writer": {
  "data": {
   "shadows": "caffe2.python.dataio.Writer"
  },
  "type": "import"
 },
 "caffe2.python.record_queue._QueueReader": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.record_queue._QueueReader.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.record_queue._QueueReader",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.record_queue._QueueReader.read": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.record_queue._QueueWriter": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.dataio.Writer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.record_queue._QueueWriter.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "caffe2.python.record_queue._QueueWriter.write": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.schema.Field",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.record_queue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.from_column_list": {
  "data": {
   "shadows": "caffe2.python.schema.from_column_list"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.record_queue.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.recurrent": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.recurrent.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.recurrent_net": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "aliases",
    "aliases.append",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.GradientRegistry.GetBackwardPass",
    "caffe2.python.core.Net",
    "caffe2.python.core.get_ssa",
    "caffe2.python.core.get_undefined_blobs",
    "enumerate",
    "future.utils.viewitems",
    "future.utils.viewkeys",
    "len",
    "list",
    "s",
    "set",
    "str",
    "unpack_triple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.recurrent_net.map_to_dual_list": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.recurrent_net.s": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.recurrent_net.unpack_triple": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.retrieve_step_blobs": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.set_rnn_executor_config": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "add_arg"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.set_rnn_executor_config.add_arg": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.Argument",
    "s"
   ]
  },
  "type": "function"
 },
 "caffe2.python.recurrent.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.recurrent.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.regularizer": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.regularizer.BoundedGradientProjection": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.BoundedGradientProjection.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "caffe2.python.regularizer.BoundedGradientProjection",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.BoundedGradientProjection._run_after_optimizer": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "caffe2.python.regularizer.ConstantNorm": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.ConstantNorm.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "caffe2.python.regularizer.ConstantNorm",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.ConstantNorm._run_after_optimizer": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.core.GradientSlice",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.GroupL1Norm": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.GroupL1Norm.__init__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "caffe2.python.regularizer.GroupL1Norm",
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.GroupL1Norm._run_on_loss": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.L1Norm": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.L1Norm.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "caffe2.python.regularizer.L1Norm",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.L1Norm._run_on_loss": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "caffe2.python.regularizer.L2Norm": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.L2Norm.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.regularizer.L2Norm",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.L2Norm._run_on_loss": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "caffe2.python.regularizer.LogBarrier": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.LogBarrier.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "caffe2.python.regularizer.LogBarrier",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.LogBarrier._run_after_optimizer": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "caffe2.python.regularizer.LogBarrier._run_on_loss": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "caffe2.python.utils.BuildUniqueMutexIter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.MaxNorm": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "caffe2.python.regularizer.Regularizer"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.MaxNorm.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "caffe2.python.regularizer.MaxNorm",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.MaxNorm._run_after_optimizer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError",
    "caffe2.python.core.GradientSlice",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.RegularizationBy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.Regularizer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer.Regularizer.__call__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.regularizer.RegularizationBy",
    "caffe2.python.utils.EnumClassKeyVals",
    "getattr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._ensure_clipped": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.core.GradientSlice",
    "isinstance",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._run_after_optimizer": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "caffe2.python.regularizer.Regularizer._run_on_loss": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "caffe2.python.regularizer.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.regularizer.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.regularizer.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.regularizer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.regularizer.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.regularizer.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.regularizer.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.regularizer_context.ModifierContext": {
  "data": {
   "shadows": "caffe2.python.modifier_context.ModifierContext"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context.RegularizerContext": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.context.define_context",
    "caffe2.python.modifier_context.ModifierContext"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer_context.RegularizerContext.get_regularizer": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.regularizer_context.RegularizerContext.has_regularizer": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "caffe2.python.regularizer_context.UseModifierBase": {
  "data": {
   "shadows": "caffe2.python.modifier_context.UseModifierBase"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context.UseRegularizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.modifier_context.UseModifierBase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer_context.UseRegularizer._context_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.regularizer_context.RegularizerContext"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_context.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context.context": {
  "data": {
   "shadows": "caffe2.python.context"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_context.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.regularizer_test.L1Norm": {
  "data": {
   "shadows": "caffe2.python.regularizer.L1Norm"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.LayersTestCase": {
  "data": {
   "shadows": "caffe2.python.layer_test_util.LayersTestCase"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.RegularizationBy": {
  "data": {
   "shadows": "caffe2.python.regularizer.RegularizationBy"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.RegularizerContext": {
  "data": {
   "shadows": "caffe2.python.regularizer_context.RegularizerContext"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.SgdOptimizer": {
  "data": {
   "shadows": "caffe2.python.optimizer.SgdOptimizer"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.TestRegularizer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.LayersTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_bounded_grad_proj": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.hypothesis_test_util.gcs_cpu_only",
    "caffe2.python.regularizer.BoundedGradientProjection",
    "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
    "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "numpy.testing.assert_allclose",
    "ref",
    "reg"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_bounded_grad_proj.ref": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_group_l1_norm": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.regularizer.GroupL1Norm",
    "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "compare_reference",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "numpy.append",
    "numpy.diff",
    "numpy.float32",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.sort",
    "range",
    "reg"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_group_l1_norm.compare_reference": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.python.workspace.blobs",
    "numpy.array",
    "numpy.hsplit",
    "numpy.multiply",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_log_barrier": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.regularizer.LogBarrier",
    "caffe2.python.regularizer.RegularizationBy.AFTER_OPTIMIZER",
    "caffe2.python.regularizer.RegularizationBy.ON_LOSS",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlobs",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "numpy.testing.assert_allclose",
    "ref",
    "reg",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizer.test_log_barrier.ref": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.clip",
    "numpy.float32",
    "numpy.log",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.TestRegularizerContext": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.layer_test_util.LayersTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.regularizer_test.TestRegularizerContext.test_regularizer_context": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.arrays",
    "caffe2.python.layer_model_instantiator.generate_training_nets",
    "caffe2.python.optimizer.SgdOptimizer",
    "caffe2.python.regularizer.L1Norm",
    "caffe2.python.regularizer_context.RegularizerContext.current",
    "caffe2.python.regularizer_context.UseRegularizer",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "hypothesis.given",
    "len",
    "numpy.float32",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.regularizer_test.UseRegularizer": {
  "data": {
   "shadows": "caffe2.python.regularizer_context.UseRegularizer"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.layer_model_instantiator": {
  "data": {
   "shadows": "caffe2.python.layer_model_instantiator"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.regularizer": {
  "data": {
   "shadows": "caffe2.python.regularizer"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.regularizer_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.rnn": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.rnn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.rnn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.lstm_benchmark.GetArgumentParser",
    "caffe2.python.rnn.lstm_comparison.Compare",
    "caffe2.python.rnn.lstm_comparison.args",
    "caffe2.python.workspace.GlobalInit"
   ]
  },
  "type": "module"
 },
 "caffe2.python.rnn.lstm_comparison.Compare": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.lstm_benchmark.Benchmark",
    "caffe2.python.utils.debug",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.ResetWorkspace",
    "copy.copy",
    "float",
    "len",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn.lstm_comparison.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.args": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "caffe2.python.rnn.lstm_comparison.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.lstm_benchmark": {
  "data": {
   "shadows": "caffe2.python.lstm_benchmark"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.rnn.lstm_comparison.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.rnn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.rnn.rnn_cell_test_util.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.scope.NameScope",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunNetOnce",
    "create_rnn",
    "enumerate",
    "generate_input_state",
    "numpy.float32",
    "numpy.int32",
    "numpy.random.randint",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util._prepare_rnn.generate_input_state": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util.sigmoid": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util.tanh": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.rnn.rnn_cell_test_util.sigmoid"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn.rnn_cell_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.rnn.rnn_cell_test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.rnn.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.BasicRNNCell",
    "caffe2.python.rnn_cell.LSTM",
    "caffe2.python.rnn_cell.LSTMCell",
    "caffe2.python.rnn_cell.LayerNormLSTMCell",
    "caffe2.python.rnn_cell.LayerNormMILSTMCell",
    "caffe2.python.rnn_cell.MILSTMCell",
    "caffe2.python.rnn_cell._LSTM",
    "caffe2.python.rnn_cell._layered_LSTM",
    "caffe2.python.rnn_cell.functools"
   ]
  },
  "type": "module"
 },
 "caffe2.python.rnn_cell.AttentionCell": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.AttentionCell.__init__": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Dot",
    "caffe2.python.attention.AttentionType.Recurrent",
    "caffe2.python.attention.AttentionType.Regular",
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.rnn_cell.AttentionCell",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell._apply": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.attention.AttentionType.Dot",
    "caffe2.python.attention.AttentionType.Recurrent",
    "caffe2.python.attention.AttentionType.Regular",
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.attention.apply_dot_attention",
    "caffe2.python.attention.apply_recurrent_attention",
    "caffe2.python.attention.apply_regular_attention",
    "caffe2.python.attention.apply_soft_coverage_attention",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell._prepare_output": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.brew.concat",
    "caffe2.python.core.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell._prepare_output_sequence": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.brew.concat",
    "caffe2.python.core.NameScope",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.build_initial_coverage": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.brew.fc",
    "caffe2.python.core.IsGPUDeviceType",
    "caffe2.python.scope.CurrentDeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_attention_weights": {
  "data": {
   "lineno": 1261
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_output_dim": {
  "data": {
   "lineno": 1343
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_output_state_index": {
  "data": {
   "lineno": 1346
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.get_state_names": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionCell.prepare_input": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Dot",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.transpose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.AttentionType": {
  "data": {
   "shadows": "caffe2.python.attention.AttentionType"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.BasicRNN": {
  "data": {
   "lineno": 1585
  },
  "type": "constant"
 },
 "caffe2.python.rnn_cell.BasicRNNCell": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.rnn_cell.BasicRNNCell",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.apply_override": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.get_output_dim": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.get_state_names": {
  "data": {
   "lineno": 390
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.BasicRNNCell.prepare_input": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.DropoutCell.__init__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.DropoutCell",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._apply": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._apply_dropout": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "caffe2.python.brew.dropout",
    "caffe2.python.core.NameScope",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._prepare_output": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.DropoutCell._prepare_output_sequence": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.GetLSTMParamNames": {
  "data": {
   "lineno": 1663
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.InitFromLSTMParams": {
  "data": {
   "lineno": 1669,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.GetLSTMParamNames",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "future.utils.viewkeys",
    "numpy.append",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.Initializer": {
  "data": {
   "shadows": "caffe2.python.modeling.initializers.Initializer"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.LSTM": {
  "data": {
   "lineno": 1584
  },
  "type": "constant"
 },
 "caffe2.python.rnn_cell.LSTMCell": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.LSTMCell.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.LSTMCell",
    "caffe2.python.rnn_cell.LSTMInitializer",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.apply_override": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "caffe2.python.brew.concat",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "list",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_input_params": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_output_dim": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_recurrent_params": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.get_state_names_override": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMCell.prepare_input": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMInitializer": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.LSTMInitializer.__init__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMInitializer.create_states": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "caffe2.python.modeling.initializers.Initializer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMWithAttention": {
  "data": {
   "lineno": 1838,
   "symbols_in_volume": [
    "caffe2.python.attention.AttentionType.Regular",
    "caffe2.python.attention.AttentionType.SoftCoverage",
    "caffe2.python.rnn_cell.LSTMWithAttentionCell",
    "caffe2.python.scope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LSTMWithAttentionCell": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.AttentionCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.LSTMWithAttentionCell.__init__": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.LSTMCell",
    "caffe2.python.rnn_cell.LSTMWithAttentionCell",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTM": {
  "data": {
   "lineno": 1587
  },
  "type": "constant"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.__init__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.LSTMInitializer",
    "caffe2.python.rnn_cell.LayerNormLSTMCell",
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell._apply": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "caffe2.python.brew.concat",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.layer_norm",
    "caffe2.python.brew.sum",
    "list",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.get_input_params": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.get_state_names": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormLSTMCell.prepare_input": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "caffe2.python.brew.fc"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.LayerNormMILSTM": {
  "data": {
   "lineno": 1588
  },
  "type": "constant"
 },
 "caffe2.python.rnn_cell.LayerNormMILSTMCell": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.LSTMCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.LayerNormMILSTMCell._apply": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "caffe2.python.brew.concat",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.layer_norm",
    "caffe2.python.brew.sum",
    "caffe2.python.modeling.initializers.Initializer",
    "list",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MILSTM": {
  "data": {
   "lineno": 1586
  },
  "type": "constant"
 },
 "caffe2.python.rnn_cell.MILSTMCell": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.LSTMCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.MILSTMCell._apply": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "caffe2.python.brew.concat",
    "caffe2.python.brew.fc",
    "caffe2.python.brew.sum",
    "caffe2.python.modeling.initializers.Initializer",
    "list",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MILSTMWithAttentionCell": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.AttentionCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.MILSTMWithAttentionCell.__init__": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.MILSTMCell",
    "caffe2.python.rnn_cell.MILSTMWithAttentionCell",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.ModelHelper": {
  "data": {
   "shadows": "caffe2.python.model_helper.ModelHelper"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.MultiRNNCell": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.__init__": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.MultiRNNCell",
    "caffe2.python.rnn_cell.MultiRNNCellInitializer",
    "enumerate",
    "len",
    "map",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell._apply": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "caffe2.python.brew.sum",
    "caffe2.python.core.NameScope",
    "enumerate",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell._prepare_output": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "caffe2.python.brew.sum",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell._prepare_output_sequence": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "caffe2.python.brew.sum",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.get_output_state_index": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.get_state_names": {
  "data": {
   "lineno": 1052
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.layer_scoper": {
  "data": {
   "lineno": 974
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.layer_scoper.helper": {
  "data": {
   "lineno": 975
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCell.prepare_input": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.rnn_cell._RectifyName"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCellInitializer": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.MultiRNNCellInitializer.__init__": {
  "data": {
   "lineno": 895
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.MultiRNNCellInitializer.create_states": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.NameScope",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.ParameterSharing": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_sharing.ParameterSharing"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.ParameterTags": {
  "data": {
   "shadows": "caffe2.python.modeling.parameter_info.ParameterTags"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.RNNCell": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.RNNCell.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._apply": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._prepare_output": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._prepare_output_sequence": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell._rectify_apply_inputs": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell._RectifyNames",
    "caffe2.python.rnn_cell.inspect",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.apply": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.apply_over_sequence": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.recurrent.recurrent_net",
    "caffe2.python.scope.NameScope",
    "caffe2.python.utils.raiseIfNotEqual",
    "dict",
    "len",
    "list",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.apply_override": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_output_dim": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_output_state_index": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_state_names": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.get_state_names_override": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.initializer": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.prepare_input": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.RNNCell.scope": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.UnrolledCell": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.RNNCell"
   ]
  },
  "type": "class"
 },
 "caffe2.python.rnn_cell.UnrolledCell.__init__": {
  "data": {
   "lineno": 1592
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.UnrolledCell.apply_over_sequence": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.modeling.parameter_sharing.ParameterSharing",
    "caffe2.python.rnn_cell.itertools",
    "caffe2.python.rnn_cell.logging",
    "caffe2.python.rnn_cell.six",
    "caffe2.python.scope.NameScope",
    "iter",
    "len",
    "list",
    "range",
    "set",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell._LSTM": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell.MultiRNNCell",
    "caffe2.python.rnn_cell.UnrolledCell",
    "caffe2.python.scope",
    "cell_class",
    "len",
    "list",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell._RectifyName": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.ScopedBlobReference",
    "caffe2.python.rnn_cell.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell._RectifyNames": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.rnn_cell._RectifyName",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell._layered_LSTM": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "caffe2.python.scope",
    "create_lstm",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "locals"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.apply_dot_attention": {
  "data": {
   "shadows": "caffe2.python.attention.apply_dot_attention"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.apply_recurrent_attention": {
  "data": {
   "shadows": "caffe2.python.attention.apply_recurrent_attention"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.apply_regular_attention": {
  "data": {
   "shadows": "caffe2.python.attention.apply_regular_attention"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.apply_soft_coverage_attention": {
  "data": {
   "shadows": "caffe2.python.attention.apply_soft_coverage_attention"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.cudnn_LSTM": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.modeling.initializers.Initializer",
    "caffe2.python.modeling.parameter_info.ParameterTags.WEIGHT",
    "caffe2.python.rnn_cell.GetLSTMParamNames",
    "caffe2.python.rnn_cell.random",
    "caffe2.python.scope",
    "init",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.cudnn_LSTM.init": {
  "data": {
   "lineno": 1741
  },
  "type": "function"
 },
 "caffe2.python.rnn_cell.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.layered_LSTM": {
  "data": {
   "lineno": 1976
  },
  "type": "constant"
 },
 "caffe2.python.rnn_cell.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.recurrent": {
  "data": {
   "shadows": "caffe2.python.recurrent"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.viewkeys": {
  "data": {
   "shadows": "future.utils.viewkeys"
  },
  "type": "import"
 },
 "caffe2.python.rnn_cell.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.schema_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.schema_test.TestDB": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.schema_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testAddFieldByNestedName": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.core.BlobReference",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testAssignToField": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testContains": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testDtypeForCoreType": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.core.DataType.FLOAT16",
    "caffe2.python.schema.dtype_for_core_type",
    "numpy.float16"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testDupField": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testFromColumnList": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_column_list",
    "caffe2.python.schema_test.random",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testFromEmptyColumnList": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_column_list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testGetFieldByNestedName": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "KeyError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListInStructIndexing": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "KeyError",
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListSubclassClone": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Subclass",
    "caffe2.python.schema.Scalar"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testListSubclassClone.Subclass": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "caffe2.python.schema.List"
   ]
  },
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testMapInStructIndexing": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "KeyError",
    "caffe2.python.schema.Map",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testNormalizeField": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testPicklable": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema_test.pickle",
    "getattr",
    "isinstance",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testPreservesEmptyFields": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "len",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testPreservesMetadata": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "caffe2.python.schema.List",
    "caffe2.python.schema.Metadata",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.from_blob_list",
    "numpy.array",
    "numpy.float32",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testRawTuple": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.python.schema.RawTuple",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testScalarShape": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.schema.Scalar",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructAddition": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructGet": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Tuple",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructIndexing": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.schema.List",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructNestedAddition": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructNestedSubstraction": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructSubclassClone": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Subclass",
    "caffe2.python.schema.Scalar"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testStructSubclassClone.Subclass": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "class"
 },
 "caffe2.python.schema_test.TestDB.testStructSubstraction": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.TestDB.testTuple": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.Tuple",
    "enumerate",
    "numpy.float32",
    "numpy.int32",
    "numpy.str",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.schema_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.schema": {
  "data": {
   "shadows": "caffe2.python.schema"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.schema_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.scope": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.scope.threading"
   ]
  },
  "type": "module"
 },
 "caffe2.python.scope.CurrentDeviceScope": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.scope._threadlocal_scope",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope.CurrentNameScope": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.scope._threadlocal_scope",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope.DeviceScope": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope._threadlocal_scope",
    "caffe2.python.scope.contextlib",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope.EmptyDeviceScope": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope._threadlocal_scope",
    "caffe2.python.scope.contextlib"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope.NameScope": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope._NAMESCOPE_SEPARATOR",
    "caffe2.python.scope._threadlocal_scope",
    "caffe2.python.scope.contextlib",
    "isinstance",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope._NAMESCOPE_SEPARATOR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "caffe2.python.scope._threadlocal_scope": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.scope.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.scope.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "caffe2.python.scope.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.scope.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "caffe2.python.scope.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.scope.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.scope.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.scope.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.scope_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.scope_test.SUCCESS_COUNT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "caffe2.python.scope_test.TestScope": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "caffe2.python.scope_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.scope_test.TestScope.testDevicescopeAssertion": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.DeviceScope",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testDevicescopeBasic": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.DeviceScope",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testEmptyDevicescopeBasic": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.DeviceScope",
    "caffe2.python.scope.EmptyDeviceScope",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testMultiThreaded": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope.NameScope",
    "caffe2.python.scope_test.SUCCESS_COUNT",
    "caffe2.python.scope_test.thread_runner",
    "caffe2.python.scope_test.threading",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testNamescopeAssertion": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testNamescopeBasic": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope.NameScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.TestScope.testTags": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.DeviceScope"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.scope": {
  "data": {
   "shadows": "caffe2.python.scope"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.thread_runner": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.core.DeviceOption",
    "caffe2.python.scope.CurrentDeviceScope",
    "caffe2.python.scope.CurrentNameScope",
    "caffe2.python.scope.DeviceScope",
    "caffe2.python.scope.NameScope",
    "caffe2.python.scope_test.SUCCESS_COUNT",
    "caffe2.python.scope_test.time",
    "caffe2.python.workspace.GpuDeviceType"
   ]
  },
  "type": "function"
 },
 "caffe2.python.scope_test.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.scope_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.serialized_test.coverage": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.workspace.C.OpSchema"
   ]
  },
  "type": "module"
 },
 "caffe2.python.serialized_test.coverage.OpSchema": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "caffe2.python.serialized_test.coverage.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.gen_coverage_sets": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "caffe2.python.core._GetRegisteredOperators",
    "caffe2.python.serialized_test.coverage.OpSchema",
    "caffe2.python.serialized_test.coverage.gen_covered_ops",
    "set"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.gen_covered_ops": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.coverage.os",
    "caffe2.python.serialized_test.coverage.tempfile",
    "open",
    "parse_proto",
    "set",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.gen_covered_ops.parse_proto": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.gen_serialized_test_coverage": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.coverage.gen_coverage_sets",
    "caffe2.python.serialized_test.coverage.os",
    "int",
    "len",
    "open",
    "sorted"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.coverage.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.coverage.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.DATA_SUFFIX",
    "caffe2.python.serialized_test.serialized_test_util.TOP_DIR",
    "caffe2.python.serialized_test.serialized_test_util.os",
    "caffe2.python.serialized_test.serialized_test_util.threading"
   ]
  },
  "type": "module"
 },
 "caffe2.python.serialized_test.serialized_test_util.DATA_DIR": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "caffe2.python.serialized_test.serialized_test_util.DATA_SUFFIX": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertReferenceChecks": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase",
    "caffe2.python.serialized_test.serialized_test_util._getGradientOrNone",
    "caffe2.python.serialized_test.serialized_test_util._output_context",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.assertSerializedOperatorChecks": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.coverage.gen_serialized_test_coverage",
    "caffe2.python.serialized_test.serialized_test_util.TOP_DIR",
    "caffe2.python.serialized_test.serialized_test_util._output_context",
    "getattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.compare_test": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.DeviceOption",
    "caffe2.python.hypothesis_test_util.runOpOnInput",
    "caffe2.python.serialized_test.serialized_test_util._getGradientOrNone",
    "caffe2.python.serialized_test.serialized_test_util.os",
    "caffe2.python.serialized_test.serialized_test_util.shutil",
    "caffe2.python.serialized_test.serialized_test_util.tempfile",
    "int",
    "len",
    "numpy.array_equal",
    "numpy.load",
    "numpy.testing.assert_allclose",
    "open",
    "parse_proto",
    "range",
    "zip",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.compare_test.parse_proto": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.get_output_dir": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "__name__.split",
    "caffe2.python.serialized_test.serialized_test_util.DATA_DIR",
    "caffe2.python.serialized_test.serialized_test_util.DATA_SUFFIX",
    "caffe2.python.serialized_test.serialized_test_util._output_context",
    "caffe2.python.serialized_test.serialized_test_util.operator_test_type",
    "caffe2.python.serialized_test.serialized_test_util.os",
    "getattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.get_output_filename": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.inspect",
    "caffe2.python.serialized_test.serialized_test_util.os"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.SerializedTestCase.serialize_test": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util._prepare_dir",
    "caffe2.python.serialized_test.serialized_test_util._transformList",
    "caffe2.python.serialized_test.serialized_test_util.os",
    "caffe2.python.serialized_test.serialized_test_util.shutil",
    "enumerate",
    "int",
    "numpy.savez_compressed",
    "open",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.TOP_DIR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "caffe2.python.serialized_test.serialized_test_util.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util._getGradientOrNone": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.gradient_checker.getGradientForOp"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util._output_context": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "caffe2.python.serialized_test.serialized_test_util._prepare_dir": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.os",
    "caffe2.python.serialized_test.serialized_test_util.shutil"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util._transformList": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.object"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.coverage": {
  "data": {
   "shadows": "caffe2.python.serialized_test.coverage"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.given": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.given.wrapper": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.seed",
    "hypothesis.settings"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.given.wrapper.func": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fixed_seed_func",
    "hyp_func"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.gradient_checker": {
  "data": {
   "shadows": "caffe2.python.gradient_checker"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.hy": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.operator_test_type": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.serialized_test.serialized_test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.testWithArgs": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "caffe2.python.serialized_test.serialized_test_util.DATA_DIR",
    "caffe2.python.serialized_test.serialized_test_util._output_context",
    "caffe2.python.serialized_test.serialized_test_util.argparse",
    "caffe2.python.serialized_test.serialized_test_util.sys",
    "caffe2.python.serialized_test.serialized_test_util.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.serialized_test.serialized_test_util.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.serialized_test.serialized_test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.session": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.session.Cluster": {
  "data": {
   "shadows": "caffe2.python.task.Cluster"
  },
  "type": "import"
 },
 "caffe2.python.session.CompiledRunnable": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.session.CompiledRunnable.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "caffe2.python.session.LocalSession": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "caffe2.python.session.Session"
   ]
  },
  "type": "class"
 },
 "caffe2.python.session.LocalSession.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "caffe2.python.session.Session",
    "caffe2.python.workspace.C.Workspace.current"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.LocalSession._compile_task_group": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "caffe2.python.core.Plan",
    "caffe2.python.task.Cluster",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.LocalSession._fetch_output": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.LocalSession._run_compiled": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.task.WorkspaceType.PRIVATE",
    "caffe2.python.workspace.C.Workspace",
    "caffe2.python.workspace.WorkspaceGuard",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.Session": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.session.Session.__enter__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "caffe2.python.session.Session.__exit__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "caffe2.python.session.Session.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "caffe2.python.session.Session._compile_task_group": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.Session._do_close": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "caffe2.python.session.Session._run_compiled": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.Session.close": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "caffe2.python.session.Session.compile": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Plan",
    "caffe2.python.core.execution_step",
    "caffe2.python.session.CompiledRunnable",
    "caffe2.python.task.Task",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.task.WorkspaceType.GLOBAL",
    "classmethod",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.Session.fetch_output": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session.Session.is_open": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "caffe2.python.session.Session.run": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "caffe2.python.session.Task": {
  "data": {
   "shadows": "caffe2.python.task.Task"
  },
  "type": "import"
 },
 "caffe2.python.session.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.session.WorkspaceType": {
  "data": {
   "shadows": "caffe2.python.task.WorkspaceType"
  },
  "type": "import"
 },
 "caffe2.python.session.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.session.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.session.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.session.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.session.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.session.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.session_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.session_test.Dataset": {
  "data": {
   "shadows": "caffe2.python.dataset.Dataset"
  },
  "type": "import"
 },
 "caffe2.python.session_test.FeedRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FeedRecord"
  },
  "type": "import"
 },
 "caffe2.python.session_test.FetchRecord": {
  "data": {
   "shadows": "caffe2.python.schema.FetchRecord"
  },
  "type": "import"
 },
 "caffe2.python.session_test.InitEmptyRecord": {
  "data": {
   "shadows": "caffe2.python.schema.InitEmptyRecord"
  },
  "type": "import"
 },
 "caffe2.python.session_test.LocalSession": {
  "data": {
   "shadows": "caffe2.python.session.LocalSession"
  },
  "type": "import"
 },
 "caffe2.python.session_test.NewRecord": {
  "data": {
   "shadows": "caffe2.python.schema.NewRecord"
  },
  "type": "import"
 },
 "caffe2.python.session_test.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.session_test.TaskGroup": {
  "data": {
   "shadows": "caffe2.python.task.TaskGroup"
  },
  "type": "import"
 },
 "caffe2.python.session_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.session_test.TestLocalSession": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.session_test.TestLocalSession.test_local_session": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.dataset.Dataset",
    "caffe2.python.pipeline.pipe",
    "caffe2.python.schema.FeedRecord",
    "caffe2.python.schema.FetchRecord",
    "caffe2.python.schema.InitEmptyRecord",
    "caffe2.python.schema.NewRecord",
    "caffe2.python.schema.Struct",
    "caffe2.python.session.LocalSession",
    "caffe2.python.task.TaskGroup",
    "caffe2.python.workspace.C.Workspace",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session_test.TestLocalSession.test_local_session.proc1": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.schema.NewRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session_test.TestLocalSession.test_local_session.proc2": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.core.NameScope",
    "caffe2.python.core.Net",
    "caffe2.python.schema.NewRecord"
   ]
  },
  "type": "function"
 },
 "caffe2.python.session_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.session_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.session_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.session_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.session_test.pipe": {
  "data": {
   "shadows": "caffe2.python.pipeline.pipe"
  },
  "type": "import"
 },
 "caffe2.python.session_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.session_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.session_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_empty_lengths": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_float": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_invalid_inputs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_no_lengths": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_presence_mask": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.bool",
    "numpy.float",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_string": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.TestSparseToDenseMask.test_sparse_to_dense_mask_subtensor": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_mask_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_mask_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.sparse_to_dense_test.TestCase": {
  "data": {
   "shadows": "caffe2.python.test_util.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense_invalid_inputs": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test.TestSparseToDense.test_sparse_to_dense_with_data_to_infer_dim": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.sparse_to_dense_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.sparse_to_dense_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.test_util": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.test_util.TestCase": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "caffe2.python.test_util.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.test_util.TestCase.setUp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.workspace.C.Workspace",
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.TestCase.setUpClass": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.core.SetEnginePref",
    "caffe2.python.workspace.GlobalInit",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.TestCase.tearDown": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.test_util.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.test_util.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.test_util.numOps": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.test_util.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.test_util.randBlob": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "numpy.random.rand",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.randBlobFloat32": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "caffe2.python.test_util.randBlob",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.randBlobsFloat32": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "caffe2.python.test_util.randBlobFloat32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.rand_array": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.str_compare": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.test_util.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.test_util.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.text_file_reader.Reader": {
  "data": {
   "shadows": "caffe2.python.dataio.Reader"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.Scalar": {
  "data": {
   "shadows": "caffe2.python.schema.Scalar"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.Struct": {
  "data": {
   "shadows": "caffe2.python.schema.Struct"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.TextFileReader": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader"
   ]
  },
  "type": "class"
 },
 "caffe2.python.text_file_reader.TextFileReader.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "caffe2.python.dataio.Reader.__init__",
    "caffe2.python.schema.Scalar",
    "caffe2.python.schema.Struct",
    "caffe2.python.schema.data_type_for_dtype",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "caffe2.python.text_file_reader.TextFileReader.read": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.core.BlobReference",
    "caffe2.python.core.ScopedBlobReference",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.text_file_reader.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.data_type_for_dtype": {
  "data": {
   "shadows": "caffe2.python.schema.data_type_for_dtype"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.text_file_reader.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.th_dll_path": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "caffe2.python.th_root": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "caffe2.python.timeout_guard": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.timeout_guard.CompleteInTimeOrDie": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.WatcherThread",
    "caffe2.python.timeout_guard.contextlib"
   ]
  },
  "type": "function"
 },
 "caffe2.python.timeout_guard.EuthanizeIfNecessary": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.WatcherThread"
   ]
  },
  "type": "function"
 },
 "caffe2.python.timeout_guard.WatcherThread": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.threading"
   ]
  },
  "type": "class"
 },
 "caffe2.python.timeout_guard.WatcherThread.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.threading"
   ]
  },
  "type": "function"
 },
 "caffe2.python.timeout_guard.WatcherThread.run": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.logging",
    "caffe2.python.timeout_guard.os",
    "caffe2.python.timeout_guard.signal",
    "caffe2.python.timeout_guard.sys",
    "caffe2.python.timeout_guard.threading",
    "caffe2.python.timeout_guard.time",
    "caffe2.python.timeout_guard.traceback",
    "future.utils.viewitems",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.timeout_guard.WatcherThread.run.forcequit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "caffe2.python.timeout_guard.os",
    "caffe2.python.timeout_guard.sys",
    "caffe2.python.timeout_guard.time",
    "caffe2.python.timeout_guard.traceback",
    "future.utils.viewitems",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.timeout_guard.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.timeout_guard.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.toy_regression_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.toy_regression_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.toy_regression_test.TestToyRegression": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.toy_regression_test.TestToyRegression.testToyRegression": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunPlan",
    "numpy.testing.assert_array_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.toy_regression_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.toy_regression_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.toy_regression_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.toy_regression_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.toy_regression_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.transformations": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.transformations.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.transformations.Transformer": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.transformations.Transformer.__getattr__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "caffe2.python.transformations.Transformer.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "caffe2.python.transformations.Transformer.runTransform": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError",
    "caffe2.python._import_c_extension.run_transform",
    "caffe2.python._import_c_extension.run_workspace_transform",
    "caffe2.python._import_c_extension.transform_exists",
    "caffe2.python._import_c_extension.workspace_transform_exists",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.transformations.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.transformations.fuseConvBN": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.transform_fuseConvBN"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations.fuseNNPACKConvRelu": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.transform_fuseNNPACKConvRelu"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations.optimizeForIDEEP": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.transform_optimizeForIDEEP"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.transformations.sinkMaxPool": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "caffe2.python._import_c_extension.transform_sinkMaxPool"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.transformations.Transformer"
   ]
  },
  "type": "module"
 },
 "caffe2.python.transformations_test.TestTransformations": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.transformations_test.TestTransformations._add_nnpack": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "caffe2.python.test_util.str_compare",
    "caffe2.python.transformations_test.transformer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations._base_test_net": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "caffe2.python.core.Net"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations._fuse_nnpack_convrelu": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "caffe2.python.test_util.numOps",
    "caffe2.python.test_util.str_compare",
    "caffe2.python.transformations_test.transformer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_converterEnforceUnusedInputs": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.transformations_test.transformer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_converterEnforceUnusedOutputs": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.core.Net",
    "caffe2.python.transformations_test.transformer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_noFuseNNPACKConvRelu": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_AddNNPACK": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConv3DBN": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.test_util.numOps",
    "caffe2.python.test_util.randBlobFloat32",
    "caffe2.python.test_util.randBlobsFloat32",
    "caffe2.python.transformations_test.transformer",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "numpy.allclose",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConvBN": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.test_util.numOps",
    "caffe2.python.test_util.randBlobFloat32",
    "caffe2.python.test_util.randBlobsFloat32",
    "caffe2.python.transformations_test.transformer",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.allclose",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConvBNNoConvBias": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.test_util.numOps",
    "caffe2.python.test_util.randBlobFloat32",
    "caffe2.python.test_util.randBlobsFloat32",
    "caffe2.python.transformations_test.transformer",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.allclose",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseConvBNNoConvBiasDuplicatedName": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.test_util.numOps",
    "caffe2.python.test_util.randBlobFloat32",
    "caffe2.python.test_util.randBlobsFloat32",
    "caffe2.python.transformations_test.transformer",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.sampled_from",
    "numpy.allclose",
    "numpy.random.seed",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvRelu": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluFollowedByMultipleInputOp": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluInplaceFollowedByMultipleInputOp": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluInplaceRelu": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluNoInplace": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_FuseNNPACKConvReluPingPongNaming": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.TestTransformations.test_transformer_SinkMaxPool": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.test_util.str_compare",
    "caffe2.python.transformations_test.transformer"
   ]
  },
  "type": "function"
 },
 "caffe2.python.transformations_test.Transformer": {
  "data": {
   "shadows": "caffe2.python.transformations.Transformer"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.transformer": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "caffe2.python.transformations_test.tu": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.transformations_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.trt": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.trt.test_trt": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.onnx"
   ]
  },
  "type": "module"
 },
 "caffe2.python.trt.test_trt.DownloadingTestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.DownloadingTestCase"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest._test_onnx_importer": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.onnx.backend.run_model",
    "caffe2.python.onnx.workspace.Workspace",
    "caffe2.python.trt.test_trt._download_onnx_model",
    "caffe2.python.trt.test_trt.onnx",
    "caffe2.python.trt.transform.convert_onnx_model_to_trt_op",
    "int",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "onnx.backend.base.namedtupledict",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest._test_relu_graph": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.onnx.backend.run_node",
    "caffe2.python.onnx.workspace.Workspace",
    "caffe2.python.trt.test_trt.onnx",
    "caffe2.python.trt.transform.convert_onnx_model_to_trt_op",
    "numpy.testing.assert_almost_equal",
    "onnx.backend.base.namedtupledict",
    "onnx.helper.make_graph",
    "onnx.helper.make_model",
    "onnx.helper.make_node",
    "onnx.helper.make_tensor_value_info"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_bvlc_alexnet": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_densenet121": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_inception_v1": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_inception_v2": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_relu_graph_big_batch": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_relu_graph_simple": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_resnet50": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_shufflenet": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_squeezenet": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_vgg16": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTOpTest.test_vgg19": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.workspace.C.use_trt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "caffe2.python.onnx.tests.test_utils.DownloadingTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest._add_head_tail": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.proto.caffe2_pb2.OperatorDef"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest._get_c2_model": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.trt.test_trt.json",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest._model_dir": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TensorRTTransformTest.test_resnet50_core": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CUDA",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.trt.test_trt.time",
    "caffe2.python.trt.test_trt.unittest",
    "caffe2.python.trt.transform.transform_caffe2_net",
    "caffe2.python.workspace.C.use_trt",
    "caffe2.python.workspace.CreateNet",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNet",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.SwitchWorkspace",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "onnx.backend.base.namedtupledict",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.TestCase": {
  "data": {
   "shadows": "caffe2.python.onnx.tests.test_utils.TestCase"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.Workspace": {
  "data": {
   "shadows": "caffe2.python.onnx.workspace.Workspace"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt._BASE_URL": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "caffe2.python.trt.test_trt._download_onnx_model": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python.trt.test_trt._BASE_URL",
    "caffe2.python.trt.test_trt.shutil",
    "caffe2.python.trt.test_trt.tarfile",
    "caffe2.python.trt.test_trt.tempfile",
    "print",
    "six.moves.urllib.request.urlretrieve"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt._print_net": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.test_trt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.c2": {
  "data": {
   "shadows": "caffe2.python.onnx.backend"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.convert_onnx_model_to_trt_op": {
  "data": {
   "shadows": "caffe2.python.trt.transform.convert_onnx_model_to_trt_op"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.deleteDirectory": {
  "data": {
   "shadows": "caffe2.python.models.download.deleteDirectory"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.downloadFromURLToFile": {
  "data": {
   "shadows": "caffe2.python.models.download.downloadFromURLToFile"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.getURLFromName": {
  "data": {
   "shadows": "caffe2.python.models.download.getURLFromName"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.make_graph": {
  "data": {
   "shadows": "onnx.helper.make_graph"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.make_model": {
  "data": {
   "shadows": "onnx.helper.make_model"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.make_node": {
  "data": {
   "shadows": "onnx.helper.make_node"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.make_tensor": {
  "data": {
   "shadows": "onnx.helper.make_tensor"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.make_tensor_value_info": {
  "data": {
   "shadows": "onnx.helper.make_tensor_value_info"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.namedtupledict": {
  "data": {
   "shadows": "onnx.backend.base.namedtupledict"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.onnx.defs": {
  "data": {
   "shadows": "onnx.defs"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.transform_caffe2_net": {
  "data": {
   "shadows": "caffe2.python.trt.transform.transform_caffe2_net"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.urlretrieve": {
  "data": {
   "shadows": "six.moves.urllib.request.urlretrieve"
  },
  "type": "import"
 },
 "caffe2.python.trt.test_trt.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.trt.transform.C": {
  "data": {
   "shadows": "caffe2.python._import_c_extension"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform._dim_values_to_list": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "caffe2.python.trt.transform._get_output_shapes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.trt.transform._dim_values_to_list",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.transform._infer_shapes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.transform.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.c2_front": {
  "data": {
   "shadows": "caffe2.python.onnx.frontend"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.c2_native_run_net": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_net"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.c2_native_run_op": {
  "data": {
   "shadows": "caffe2.python.onnx.helper.c2_native_run_op"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.check_gpu_": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "caffe2.python._import_c_extension.get_cuda_version"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.transform.convert_onnx_model_to_trt_op": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.OperatorDef",
    "caffe2.python._import_c_extension.onnx_to_trt_op",
    "caffe2.python.trt.transform._get_output_shapes",
    "caffe2.python.trt.transform.check_gpu_"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.transform.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.transform_caffe2_net": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python._import_c_extension.transform_trt",
    "caffe2.python.trt.transform._infer_shapes",
    "caffe2.python.trt.transform.check_gpu_",
    "numpy.float32",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "caffe2.python.trt.transform.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.trt.transform.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.tt_core": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.tt_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.tt_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.tt_core.fc_net_to_tt_net": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "caffe2.python.tt_core.init_tt_cores": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.float32",
    "numpy.linalg.qr",
    "numpy.prod",
    "numpy.random.normal",
    "numpy.random.seed",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.tt_core.matrix_to_tt": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.tt_core.tt_svd",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.prod",
    "numpy.repeat",
    "numpy.reshape",
    "numpy.tile",
    "numpy.transpose",
    "numpy.zeros",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.tt_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.tt_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.tt_core.tt_svd": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "numpy.diag",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.tt_core_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.tt_core_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.tt_core_test.TestTTSVD": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.tt_core_test.TestTTSVD.test_full_tt_svd": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.tt_core.matrix_to_tt",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "len",
    "numpy.expand_dims",
    "numpy.float32",
    "numpy.linalg.norm",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.tt_core_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.hu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.tt_core": {
  "data": {
   "shadows": "caffe2.python.tt_core"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.tt_core_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.utils": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.utils.ArgsToDict": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.BuildUniqueMutexIter": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.DataType.INT64",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.core.DeviceScope",
    "caffe2.python.utils.ITERATION_MUTEX_NAME",
    "caffe2.python.utils.OPTIMIZER_ITERATION_NAME",
    "iter"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.Caffe2TensorToNumpyArray": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.proto.caffe2_pb2.TensorProto.INT16",
    "caffe2.proto.caffe2_pb2.TensorProto.INT32",
    "caffe2.proto.caffe2_pb2.TensorProto.INT8",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
    "numpy.asarray",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.int16",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint8",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.CaffeBlobToNumpyArray": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.ConvertProtoToBinary": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "caffe2.python.utils.TryReadProtoWithClass",
    "open"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.DebugMode": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.utils.DebugMode.run": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "caffe2.python.utils.pdb",
    "caffe2.python.utils.sys",
    "classmethod",
    "func",
    "print"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.DecodeError": {
  "data": {
   "shadows": "google.protobuf.message.DecodeError"
  },
  "type": "import"
 },
 "caffe2.python.utils.EnumClassKeyVals": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "cls",
    "dir",
    "getattr",
    "isinstance",
    "six.string_types",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.GetContentFromProto": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "cls",
    "func",
    "future.utils.viewitems",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.GetContentFromProtoString": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "caffe2.python.utils.TryReadProtoWithClass",
    "cls",
    "func",
    "future.utils.viewitems",
    "google.protobuf.message.DecodeError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.GetGPUMemoryUsageStats": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.GpuDeviceType",
    "caffe2.python.workspace.RunOperatorOnce",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.ITERATION_MUTEX_NAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "caffe2.python.utils.MakeArgument": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "caffe2.proto.caffe2_pb2.Argument",
    "caffe2.proto.caffe2_pb2.NetDef",
    "caffe2.python.compatibility.container_abcs.Iterable",
    "float",
    "google.protobuf.message.Message",
    "isinstance",
    "numpy.asscalar",
    "numpy.float32",
    "numpy.float_",
    "numpy.generic",
    "numpy.int_",
    "numpy.ndarray",
    "set",
    "six.binary_type",
    "six.integer_types",
    "six.text_type",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.Message": {
  "data": {
   "shadows": "google.protobuf.message.Message"
  },
  "type": "import"
 },
 "caffe2.python.utils.NumpyArrayToCaffe2Tensor": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.proto.caffe2_pb2.TensorProto",
    "caffe2.proto.caffe2_pb2.TensorProto.DOUBLE",
    "caffe2.proto.caffe2_pb2.TensorProto.FLOAT",
    "caffe2.proto.caffe2_pb2.TensorProto.INT16",
    "caffe2.proto.caffe2_pb2.TensorProto.INT32",
    "caffe2.proto.caffe2_pb2.TensorProto.INT8",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT16",
    "caffe2.proto.caffe2_pb2.TensorProto.UINT8",
    "float",
    "list",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.int16",
    "numpy.int32",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint8",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.OPTIMIZER_ITERATION_NAME": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "caffe2.python.utils.OpAlmostEqual": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "all",
    "clean_op",
    "isinstance",
    "list",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.OpAlmostEqual.clean_op": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.utils.copy"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.ResetBlobs": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.CPU",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.workspace.RunOperatorOnce",
    "list"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.TryReadProtoWithClass": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "cls",
    "google.protobuf.text_format.Parse",
    "google.protobuf.text_format.ParseError"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.utils.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "caffe2.python.utils.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.utils.container_abcs": {
  "data": {
   "shadows": "caffe2.python.compatibility.container_abcs"
  },
  "type": "import"
 },
 "caffe2.python.utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "caffe2.python.utils.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.utils.debug": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "caffe2.python.utils.debug.wrapper": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "caffe2.python.utils.DebugMode",
    "caffe2.python.utils.functools",
    "f",
    "func"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.debug.wrapper.func": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "caffe2.python.utils.integer_types": {
  "data": {
   "shadows": "six.integer_types"
  },
  "type": "import"
 },
 "caffe2.python.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.utils.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "caffe2.python.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.utils.raiseIfNotEqual": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "caffe2.python.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "caffe2.python.utils.text_format": {
  "data": {
   "shadows": "google.protobuf.text_format"
  },
  "type": "import"
 },
 "caffe2.python.utils.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "caffe2.python.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.utils.viewitems": {
  "data": {
   "shadows": "future.utils.viewitems"
  },
  "type": "import"
 },
 "caffe2.python.utils.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "caffe2.python.utils_test": {
  "data": {},
  "type": "module"
 },
 "caffe2.python.utils_test.TestUtils": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.utils_test.TestUtils.testArgsToDict": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "caffe2.python.utils.ArgsToDict",
    "caffe2.python.utils.MakeArgument",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "caffe2.python.utils_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.utils_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.utils_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.utils_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.utils_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.utils_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.utils_test.utils": {
  "data": {
   "shadows": "caffe2.python.utils"
  },
  "type": "import"
 },
 "caffe2.python.visualize": {
  "data": {
   "symbols_in_volume": [
    "caffe2.python.visualize.PatchVisualizer"
   ]
  },
  "type": "module"
 },
 "caffe2.python.visualize.ChannelFirst": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "caffe2.python.visualize.ChannelLast": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "caffe2.python.visualize.NCHW": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.visualize.NCHW.ShowChannels": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "caffe2.python.visualize.ChannelLast",
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NCHW.ShowImages": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "caffe2.python.visualize.ChannelLast",
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NCHW.ShowMultiple": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "caffe2.python.visualize.ChannelLast",
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NCHW.ShowSingle": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "caffe2.python.visualize.ChannelLast",
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NHWC": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.visualize.NHWC.ShowChannels": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NHWC.ShowImages": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NHWC.ShowMultiple": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.NHWC.ShowSingle": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "caffe2.python.visualize._default_visualizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowChannels": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "bg_func",
    "len",
    "numpy.mean",
    "numpy.swapaxes"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowImages": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.finfo",
    "numpy.float64",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowMultiple": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "bg_func",
    "float",
    "int",
    "len",
    "matplotlib.cm.gray",
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.imshow",
    "numpy.array",
    "numpy.ceil",
    "numpy.mean",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.ShowSingle": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.cm.gray",
    "matplotlib.pyplot.imshow"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "caffe2.python.visualize.PatchVisualizer.get_patch_shape": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.floor",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "caffe2.python.visualize._default_visualizer": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "caffe2.python.visualize.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "caffe2.python.visualize.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.visualize.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "caffe2.python.workspace_test.unittest"
   ]
  },
  "type": "module"
 },
 "caffe2.python.workspace_test.TestCWorkspace": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_array_serde": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.device_options",
    "caffe2.python.hypothesis_test_util.tensor",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.sampled_from",
    "hypothesis.strategies.text",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_exception": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "TypeError",
    "caffe2.python.workspace.C.Workspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_net_create": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.text",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_net_execution": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.C.Workspace",
    "len",
    "numpy.float32",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_net_run": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.text",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_operator_run": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.text",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_plan_run": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Net",
    "caffe2.python.core.Plan",
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.text",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCWorkspace.test_string_serde": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "caffe2.python.workspace.C.Workspace",
    "hypothesis.given",
    "hypothesis.strategies.text"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestCppEnforceAsException": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestCppEnforceAsException.testEnforce": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.RunOperatorOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestImmedibate": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestImmedibate.testImmediateEnterExit": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "caffe2.python.workspace.IsImmediate",
    "caffe2.python.workspace.StartImmediate",
    "caffe2.python.workspace.StopImmediate"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestImmedibate.testImmediateRootFolder": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "caffe2.python.workspace.StartImmediate",
    "caffe2.python.workspace.StopImmediate",
    "caffe2.python.workspace._immediate_root_folder",
    "caffe2.python.workspace_test.os",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestImmedibate.testImmediateRunsCorrectly": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.FeedImmediate",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.FetchImmediate",
    "caffe2.python.workspace.ImmediateBlobs",
    "caffe2.python.workspace.StartImmediate",
    "caffe2.python.workspace.StopImmediate",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestMultiWorkspaces": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "caffe2.python.workspace_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestMultiWorkspaces.setUp": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.SwitchWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestMultiWorkspaces.testCreateWorkspace": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.Net",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.SwitchWorkspace",
    "caffe2.python.workspace.Workspaces"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestPredictor": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "caffe2.python.workspace_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestPredictor._create_model": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "dict"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestPredictor.test_predictor_memory_model": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.Predictor",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.StringifyProto",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestTransform": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "caffe2.python.hypothesis_test_util.HypothesisTestCase"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestTransform.test_apply_transform_if_faster": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.core.Net",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.ApplyTransformIfFaster",
    "caffe2.python.workspace.RunNetOnce",
    "hypothesis.given",
    "hypothesis.strategies.floats"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestTransform.test_registry_invalid": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.ApplyTransform",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestTransform.test_simple_transform": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "caffe2.python.brew.conv",
    "caffe2.python.brew.fc",
    "caffe2.python.model_helper.ModelHelper",
    "caffe2.python.workspace.ApplyTransform",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "caffe2.python.workspace_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestWorkspace.setUp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testConstructPlanFromSteps": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunPlan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testCurrentWorkspaceWrapper": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "caffe2.python.workspace.C.Workspace.current.blobs",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchBlobs": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlobs"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlob": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobBool": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.bool",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobTypes": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.bool",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.iinfo",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobViaBlobReference": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedBlobZeroDim": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.empty",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedLongStringTensor": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedPlainString": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedShortStringTensor": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testFetchFeedViaBlobDict": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "caffe2.python.workspace.RunNetOnce",
    "caffe2.python.workspace.blobs",
    "len",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testGetBlobSizeBytes": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GetBlobSizeBytes",
    "len",
    "numpy.array",
    "numpy.bool",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randn",
    "numpy.uint16",
    "numpy.uint8",
    "str"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testGetOperatorCost": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "caffe2.python.core.CreateOperator",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.GetOperatorCost",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testResetWorkspace": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRootFolder": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "caffe2.python.workspace.ResetWorkspace",
    "caffe2.python.workspace.RootFolder"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunNetOnce": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunNetOnce"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunOperatorOnce": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "caffe2.python.workspace.Blobs",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunOperatorOnce",
    "len"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunPlan": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Plan",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunPlan"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testRunPlanInBackground": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "caffe2.python.core.ExecutionStep",
    "caffe2.python.core.Plan",
    "caffe2.python.workspace.HasBlob",
    "caffe2.python.workspace.RunPlanInBackground"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testTensorAccess": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "RuntimeError",
    "caffe2.python.core.DataType.INT32",
    "caffe2.python.core.DataType.STRING",
    "caffe2.python.workspace.C.Workspace",
    "numpy.array",
    "numpy.int32",
    "numpy.object",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspace.testWorkspaceHasBlobWithNonexistingName": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "caffe2.python.workspace.HasBlob"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.has_gpu_support",
    "caffe2.python.workspace.has_hip_support",
    "caffe2.python.workspace_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.setUp": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "caffe2.python.core.Net",
    "caffe2.python.workspace.ResetWorkspace"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.testFetchBlobGPU": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "caffe2.python.workspace.RunNetOnce",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceGPU.testGetGpuPeerAccessPattern": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "caffe2.python.workspace.GetGpuPeerAccessPattern",
    "caffe2.python.workspace.NumGpuDevices",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.TestWorkspaceIDEEP": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "caffe2.python.test_util.TestCase",
    "caffe2.python.workspace.C.use_mkldnn",
    "caffe2.python.workspace_test.unittest"
   ]
  },
  "type": "class"
 },
 "caffe2.python.workspace_test.TestWorkspaceIDEEP.testFeedFetchBlobIDEEP": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "caffe2.proto.caffe2_pb2.IDEEP",
    "caffe2.python.core.DeviceOption",
    "caffe2.python.workspace.FeedBlob",
    "caffe2.python.workspace.FetchBlob",
    "numpy.float32",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "caffe2.python.workspace_test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.brew": {
  "data": {
   "shadows": "caffe2.python.brew"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.caffe2_pb2": {
  "data": {
   "shadows": "caffe2.proto.caffe2_pb2"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.core": {
  "data": {
   "shadows": "caffe2.python.core"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.htu": {
  "data": {
   "shadows": "caffe2.python.hypothesis_test_util"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.model_helper": {
  "data": {
   "shadows": "caffe2.python.model_helper"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.test_util": {
  "data": {
   "shadows": "caffe2.python.test_util"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "caffe2.python.workspace_test.workspace": {
  "data": {
   "shadows": "caffe2.python.workspace"
  },
  "type": "import"
 },
 "torch": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "dir",
    "getattr",
    "globals",
    "hasattr",
    "list",
    "set",
    "torch.ByteStorage",
    "torch.CharStorage",
    "torch.DoubleStorage",
    "torch.FloatStorage",
    "torch.HalfStorage",
    "torch.IntStorage",
    "torch.LongStorage",
    "torch.ShortStorage",
    "torch.__all__",
    "torch._dl",
    "torch._dl.RTLD_GLOBAL",
    "torch._dl.RTLD_LAZY",
    "torch.dll_paths",
    "torch.get_nvToolsExt_path",
    "torch.manager_path",
    "torch.old_flags",
    "torch.os",
    "torch.platform",
    "torch.py_dll_path",
    "torch.sys",
    "torch.th_dll_path"
   ]
  },
  "type": "module"
 },
 "torch.ByteStorage": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "torch.CharStorage": {
  "data": {
   "lineno": 218
  },
  "type": "class"
 },
 "torch.DoubleStorage": {
  "data": {
   "lineno": 194
  },
  "type": "class"
 },
 "torch.FloatStorage": {
  "data": {
   "lineno": 198
  },
  "type": "class"
 },
 "torch.HalfStorage": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "torch.IntStorage": {
  "data": {
   "lineno": 210
  },
  "type": "class"
 },
 "torch.LongStorage": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "torch.ShortStorage": {
  "data": {
   "lineno": 214
  },
  "type": "class"
 },
 "torch.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "torch._dl_flags": {
  "data": {
   "shadows": "torch._dl"
  },
  "type": "import"
 },
 "torch._jit_internal": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "globals",
    "object",
    "range",
    "torch._jit_internal.BroadcastingList1",
    "torch._jit_internal.BroadcastingListCls",
    "torch._jit_internal.ListCls",
    "torch._jit_internal.TupleCls",
    "torch._jit_internal.weakref",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "torch._jit_internal.BroadcastingList1": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "torch._jit_internal.BroadcastingListCls": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._jit_internal.BroadcastingListCls.__getitem__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "torch._jit_internal.COMPILATION_PENDING": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "torch._jit_internal.COMPILED": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "torch._jit_internal.List": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "torch._jit_internal.ListCls": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._jit_internal.ListCls.__getitem__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "torch._jit_internal.TupleInstance"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.ListInstance": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._jit_internal.ListInstance.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.Tuple": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "torch._jit_internal.TupleCls": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._jit_internal.TupleCls.__getitem__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "torch._jit_internal.TupleInstance"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.TupleInstance": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._jit_internal.TupleInstance.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal._boolean_dispatched": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "torch._jit_internal._compiled_weak_fns": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "torch._jit_internal._weak_modules": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "torch._jit_internal._weak_script_methods": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "torch._jit_internal._weak_types": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "torch._jit_internal.boolean_dispatch": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "RuntimeError",
    "if_false",
    "if_false.__doc__",
    "if_true",
    "if_true.__doc__",
    "torch._jit_internal._boolean_dispatched",
    "torch._jit_internal._compiled_weak_fns"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.boolean_dispatch.fn": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "if_false",
    "if_true",
    "len"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "torch._jit_internal.createResolutionCallback": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "torch._jit_internal.inspect"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.createResolutionCallback.env": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "__builtin__",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "torch._jit_internal.is_tuple": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "torch._jit_internal.TupleInstance"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.typing": {
  "data": {
   "shadows": "typing"
  },
  "type": "import"
 },
 "torch._jit_internal.weak_module": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "torch._jit_internal._weak_types"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.weak_script": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "torch._jit_internal.COMPILATION_PENDING",
    "torch._jit_internal._compiled_weak_fns",
    "torch._jit_internal.createResolutionCallback"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.weak_script_method": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch._jit_internal._weak_script_methods",
    "torch._jit_internal.createResolutionCallback"
   ]
  },
  "type": "function"
 },
 "torch._jit_internal.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "torch._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "torch._ops": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "torch._ops._Ops",
    "torch._ops.sys"
   ]
  },
  "type": "module"
 },
 "torch._ops._OpNamespace": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "torch._ops.types"
   ]
  },
  "type": "class"
 },
 "torch._ops._OpNamespace.__getattr__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch._ops._OpNamespace.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "super",
    "torch._ops._OpNamespace"
   ]
  },
  "type": "function"
 },
 "torch._ops._Ops": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "torch._ops.types"
   ]
  },
  "type": "class"
 },
 "torch._ops._Ops.__getattr__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "setattr",
    "torch._ops._OpNamespace"
   ]
  },
  "type": "function"
 },
 "torch._ops._Ops.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "set",
    "super",
    "torch._ops._Ops"
   ]
  },
  "type": "function"
 },
 "torch._ops._Ops.load_library": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "torch._ops.ctypes",
    "torch._ops.dl_open_guard"
   ]
  },
  "type": "function"
 },
 "torch._ops._SET_GLOBAL_FLAGS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "torch._ops.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "torch._ops.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "torch._ops.dl_open_guard": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch._ops._SET_GLOBAL_FLAGS",
    "torch._ops.contextlib",
    "torch._ops.ctypes",
    "torch._ops.sys"
   ]
  },
  "type": "function"
 },
 "torch._ops.ops": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "torch._ops.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "torch._ops.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch._ops.torch._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch._ops.torch.jit": {
  "data": {
   "shadows": "torch.jit"
  },
  "type": "import"
 },
 "torch._ops.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "torch._six": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "bytes",
    "float",
    "getattr",
    "hasattr",
    "int",
    "map",
    "str",
    "torch._six.PY2",
    "torch._six.PY3",
    "torch._six.builtins",
    "torch._six.collections",
    "torch._six.exec_",
    "torch._six.itertools",
    "torch._six.math",
    "torch._six.sys"
   ]
  },
  "type": "module"
 },
 "torch._six.FileNotFoundError": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "torch._six.PY2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "torch._six.PY3": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "torch._six.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "torch._six.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "torch._six.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "torch._six.container_abcs": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "torch._six.exec_": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "exec",
    "torch._six.sys"
   ]
  },
  "type": "function"
 },
 "torch._six.get_function_from_type": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "torch._six.imap": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "torch._six.inf": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "torch._six.int_classes": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "torch._six.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "torch._six.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch._six.nan": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "torch._six.raise_from": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "torch._six.string_classes": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "torch._six.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch._six.with_metaclass": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "type.__new__"
   ]
  },
  "type": "function"
 },
 "torch._six.with_metaclass.metaclass": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "torch._six.with_metaclass.metaclass.__new__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "meta"
   ]
  },
  "type": "function"
 },
 "torch._storage_classes": {
  "data": {
   "lineno": 226
  },
  "type": "constant"
 },
 "torch._storage_docs": {
  "data": {
   "symbols_in_volume": [
    "torch._storage_docs.add_docstr_all"
   ]
  },
  "type": "module"
 },
 "torch._storage_docs.add_docstr": {
  "data": {
   "shadows": "torch._C._add_docstr"
  },
  "type": "import"
 },
 "torch._storage_docs.add_docstr_all": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "torch._C._add_docstr",
    "torch._storage_docs.storage_classes"
   ]
  },
  "type": "function"
 },
 "torch._storage_docs.storage_classes": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "torch._storage_docs.torch._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch._string_classes": {
  "data": {
   "shadows": "string_classes"
  },
  "type": "import"
 },
 "torch._tensor_classes": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "torch._tensor_docs": {
  "data": {
   "symbols_in_volume": [
    "parse_kwargs",
    "torch._tensor_docs.add_docstr_all",
    "torch._tensor_docs.new_common_args"
   ]
  },
  "type": "module"
 },
 "torch._tensor_docs.add_docstr": {
  "data": {
   "shadows": "torch._C._add_docstr"
  },
  "type": "import"
 },
 "torch._tensor_docs.add_docstr_all": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "getattr",
    "torch._C._add_docstr"
   ]
  },
  "type": "function"
 },
 "torch._tensor_docs.new_common_args": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "torch._tensor_docs.torch._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch._tensor_str": {
  "data": {
   "symbols_in_volume": [
    "torch._tensor_str.__PrinterOptions"
   ]
  },
  "type": "module"
 },
 "torch._tensor_str.PRINT_OPTS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "torch._tensor_str._Formatter": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._tensor_str._Formatter.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "max",
    "torch._tensor_str.PRINT_OPTS",
    "torch._tensor_str.torch"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str._Formatter.format": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "torch._tensor_str.PRINT_OPTS",
    "torch._tensor_str.math"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str._Formatter.width": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "torch._tensor_str.__PrinterOptions": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._tensor_str._add_suffixes": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "torch._tensor_str.PRINT_OPTS"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str._scalar_str": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "torch._tensor_str._str": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "str",
    "torch._tensor_str._add_suffixes",
    "torch._tensor_str._tensor_str",
    "torch._tensor_str.torch",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str._tensor_str": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "torch._tensor_str.PRINT_OPTS",
    "torch._tensor_str._Formatter",
    "torch._tensor_str._tensor_str_with_formatter",
    "torch._tensor_str.get_summarized_data",
    "torch._tensor_str.torch"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str._tensor_str_with_formatter": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "range",
    "torch._tensor_str.PRINT_OPTS",
    "torch._tensor_str._scalar_str",
    "torch._tensor_str._vector_str"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str._vector_str": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "range",
    "torch._tensor_str.PRINT_OPTS",
    "torch._tensor_str.math"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str.float_info": {
  "data": {
   "shadows": "sys.float_info"
  },
  "type": "import"
 },
 "torch._tensor_str.get_summarized_data": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "len",
    "range",
    "torch._tensor_str.PRINT_OPTS",
    "torch._tensor_str.torch"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch._tensor_str.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch._tensor_str.nan": {
  "data": {
   "shadows": "torch._six.nan"
  },
  "type": "import"
 },
 "torch._tensor_str.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "torch._tensor_str.set_printoptions": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch._tensor_str.PRINT_OPTS"
   ]
  },
  "type": "function"
 },
 "torch._tensor_str.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch._thnn": {
  "data": {
   "symbols_in_volume": [
    "getattr",
    "parse_header",
    "torch._thnn.Backend",
    "torch._thnn.Backends",
    "torch._thnn.THNNCudaBackendStateMixin",
    "torch._thnn._thcunn_headers",
    "torch._thnn._thnn_headers",
    "torch._thnn.backend",
    "torch._thnn.py_name",
    "torch._thnn.type2backend"
   ]
  },
  "type": "module"
 },
 "torch._thnn.Backend": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._thnn.Backend.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "torch._thnn.threading",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch._thnn.Backend.load": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "getattr",
    "load_backend"
   ]
  },
  "type": "function"
 },
 "torch._thnn.Backends": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._thnn.Backends.__getattr__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "torch._thnn.Backends.__getitem__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "torch._thnn.Backends.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "torch._thnn.THNNCudaBackendStateMixin": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._thnn.THNNCudaBackendStateMixin.library_state": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch._thnn._thcunn_headers": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "torch._thnn._thnn_headers": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "torch._thnn.backend": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "torch._thnn.py_name": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "torch._thnn.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "torch._thnn.torch.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "torch._thnn.type2backend": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "torch._thnn.utils": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "get_file_path"
   ]
  },
  "type": "module"
 },
 "torch._thnn.utils.Argument": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._thnn.utils.Argument.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "torch._thnn.utils.Argument.__repr__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "torch._thnn.utils.Function": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._thnn.utils.Function.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "torch._thnn.utils.Function.__repr__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "map"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.Function.add_argument": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.THCUNN_H_PATH": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "torch._thnn.utils.THNNBackendBase": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch._thnn.utils.THNNBackendBase.__getattr__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.THNNBackendBase.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "torch._thnn.utils.THNNBackendBase.__reduce__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch._thnn.utils._unpickle_backend",
    "type"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.THNNBackendBase.library_state": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.THNNBackendBase.register_method": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "torch._thnn.utils.THNN_H_PATH": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "torch._thnn.utils._unpickle_backend": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "torch._thnn.utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "torch._thnn.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "torch._thnn.utils.load_backend": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "getattr",
    "torch._thnn.utils.THNNBackendBase",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch._thnn.utils.parse_header": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "filter",
    "map",
    "open",
    "torch._thnn.utils.Argument",
    "torch._thnn.utils.Function"
   ]
  },
  "type": "function"
 },
 "torch._thnn.utils.torch._thnn": {
  "data": {
   "shadows": "torch._thnn"
  },
  "type": "import"
 },
 "torch._torch_docs": {
  "data": {
   "symbols_in_volume": [
    "torch._C._add_docstr",
    "torch._torch_docs.factory_common_args",
    "torch._torch_docs.factory_data_common_args",
    "torch._torch_docs.factory_like_common_args",
    "torch._torch_docs.parse_kwargs",
    "torch._torch_docs.reduceops_common_args"
   ]
  },
  "type": "module"
 },
 "torch._torch_docs.add_docstr": {
  "data": {
   "shadows": "torch._C._add_docstr"
  },
  "type": "import"
 },
 "torch._torch_docs.factory_common_args": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "torch._torch_docs.factory_data_common_args": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "torch._torch_docs.factory_like_common_args": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "torch._torch_docs.parse_kwargs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "torch._torch_docs.re"
   ]
  },
  "type": "function"
 },
 "torch._torch_docs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "torch._torch_docs.reduceops_common_args": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "torch._torch_docs.torch._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch._utils_internal": {
  "data": {
   "symbols_in_volume": [
    "torch._utils_internal.os"
   ]
  },
  "type": "module"
 },
 "torch._utils_internal.TEST_MASTER_ADDR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "torch._utils_internal.TEST_MASTER_PORT": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "torch._utils_internal.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch._utils_internal.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch._utils_internal.get_file_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "torch._utils_internal.os",
    "torch._utils_internal.torch_parent"
   ]
  },
  "type": "function"
 },
 "torch._utils_internal.get_file_path_2": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "torch._utils_internal.os"
   ]
  },
  "type": "function"
 },
 "torch._utils_internal.get_writable_path": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "torch._utils_internal.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch._utils_internal.prepare_multiprocessing_environment": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "torch._utils_internal.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch._utils_internal.torch_parent": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "torch._utils_internal.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.autograd": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "torch.autograd.torch"
   ]
  },
  "type": "module"
 },
 "torch.autograd.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "torch.autograd._functions": {
  "data": {},
  "type": "module"
 },
 "torch.autograd._functions.tensor": {
  "data": {},
  "type": "module"
 },
 "torch.autograd._functions.tensor.Resize": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "torch.autograd._functions.tensor.Resize.backward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.tensor.Resize.forward": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "RuntimeError",
    "functools.reduce",
    "map",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.tensor.Type": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "torch.autograd._functions.tensor.Type.backward": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "staticmethod",
    "torch.autograd._functions.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.tensor.Type.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.tensor.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "torch.autograd._functions.tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd._functions.tensor.torch._utils": {
  "data": {
   "shadows": "torch._utils"
  },
  "type": "import"
 },
 "torch.autograd._functions.utils": {
  "data": {},
  "type": "module"
 },
 "torch.autograd._functions.utils.check_onnx_broadcast": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "functools.reduce",
    "len"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.utils.maybe_unexpand": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.utils.maybe_view": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "torch.autograd._functions.utils.prepare_onnx_paddings": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "torch.autograd._functions.utils.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "torch.autograd._functions.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd._is_checkpoint_valid": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "torch.autograd._make_grads": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "isinstance",
    "torch.autograd.torch",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode": {
  "data": {},
  "type": "module"
 },
 "torch.autograd.anomaly_mode.detect_anomaly": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.anomaly_mode.detect_anomaly.__enter__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "torch.autograd.anomaly_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode.detect_anomaly.__exit__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "torch.autograd.anomaly_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode.detect_anomaly.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "torch.autograd.anomaly_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly.__enter__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly.__exit__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "torch.autograd.anomaly_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode.set_detect_anomaly.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "torch.autograd.anomaly_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.anomaly_mode.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.backward": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "len",
    "list",
    "torch.autograd._make_grads",
    "torch.autograd.torch",
    "torch.autograd.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function": {
  "data": {
   "symbols_in_volume": [
    "isinstance",
    "torch.autograd.function._iter_filter",
    "torch.autograd.function._jit_unwrap_structured",
    "torch.autograd.function._nested_map",
    "torch.autograd.function.torch"
   ]
  },
  "type": "module"
 },
 "torch.autograd.function.BackwardCFunction": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "torch._C._FunctionBase",
    "torch.autograd.function._ContextMethodMixin",
    "torch.autograd.function._HookMixin"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function.BackwardCFunction.apply": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "torch.autograd.function.Function": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "torch._C._FunctionBase",
    "torch._C._FunctionBase._do_forward",
    "torch._six.with_metaclass",
    "torch.autograd.function.FunctionMeta",
    "torch.autograd.function._ContextMethodMixin",
    "torch.autograd.function._HookMixin"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function.Function.backward": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.Function.forward": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.FunctionMeta": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function.FunctionMeta.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "setattr",
    "staticmethod",
    "super",
    "torch.autograd.function.BackwardCFunction",
    "torch.autograd.function.FunctionMeta",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.InplaceFunction": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function.InplaceFunction.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "super",
    "torch.autograd.function.InplaceFunction"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function.NestedIOFunction._do_backward": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "super",
    "torch.autograd.function.NestedIOFunction"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction._do_forward": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "input",
    "super",
    "torch.autograd.function.NestedIOFunction",
    "torch.autograd.function._iter_tensors",
    "torch.autograd.function._unflatten",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.backward": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "torch.autograd.function._iter_None_tensors",
    "torch.autograd.function._unflatten",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.backward_extended": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.forward": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "torch.autograd.function._iter_tensors",
    "torch.autograd.function._map_tensor_data",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.forward_extended": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.mark_dirty": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "torch.autograd.function._iter_tensors",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.mark_non_differentiable": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "torch.autograd.function._iter_tensors",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.save_for_backward": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "torch.autograd.function._iter_tensors",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.NestedIOFunction.saved_tensors": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "property",
    "super",
    "torch.autograd.function.NestedIOFunction",
    "torch.autograd.function._unflatten"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "torch.autograd.function._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch.autograd.function._ContextMethodMixin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function._ContextMethodMixin.mark_dirty": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.mark_non_differentiable": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.mark_shared_storage": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "torch.autograd.function.warnings"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._ContextMethodMixin.save_for_backward": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "torch.autograd.function._HookMixin": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.function._HookMixin._register_hook": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "staticmethod",
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._iter_None_tensors": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "torch.autograd.function._iter_filter": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "_iter"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._iter_filter._iter": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "_iter",
    "condition",
    "conversion",
    "isinstance",
    "list",
    "torch.autograd.function.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._iter_jit_values": {
  "data": {
   "lineno": 318
  },
  "type": "constant"
 },
 "torch.autograd.function._iter_tensors": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "torch.autograd.function._iter_tensors_permissive": {
  "data": {
   "lineno": 322
  },
  "type": "constant"
 },
 "torch.autograd.function._jit_unwrap_structured": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._map_tensor_data": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "torch.autograd.function._nested_map": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "_map"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._nested_map._map": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "_map",
    "condition",
    "fn",
    "isinstance",
    "list",
    "torch.autograd.function.torch",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._unflatten": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "input",
    "unflatten_helper"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function._unflatten.unflatten_helper": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "hasattr",
    "input",
    "isinstance",
    "list",
    "tuple",
    "type",
    "unflatten_helper"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "torch.autograd.function.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.autograd.function.once_differentiable": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "torch.autograd.function.once_differentiable.wrapper": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "any",
    "err_fn",
    "fake_requires_grad",
    "fn",
    "isinstance",
    "len",
    "torch.autograd.function.functools",
    "torch.autograd.function.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.function.once_differentiable.wrapper.fake_requires_grad": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "torch.autograd.function.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.function.traceable": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "torch.autograd.function.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.autograd.function.with_metaclass": {
  "data": {
   "shadows": "torch._six.with_metaclass"
  },
  "type": "import"
 },
 "torch.autograd.grad": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "torch.autograd._make_grads",
    "torch.autograd.torch",
    "torch.autograd.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode": {
  "data": {},
  "type": "module"
 },
 "torch.autograd.grad_mode.enable_grad": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.grad_mode.enable_grad.__call__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.enable_grad.__call__.decorate_enable_grad": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "func",
    "torch.autograd.grad_mode.functools"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.enable_grad.__enter__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "torch.autograd.grad_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.enable_grad.__exit__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "torch.autograd.grad_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "torch.autograd.grad_mode.no_grad": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.grad_mode.no_grad.__call__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.no_grad.__call__.decorate_no_grad": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "func",
    "torch.autograd.grad_mode.functools"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.no_grad.__enter__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.autograd.grad_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.no_grad.__exit__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "torch.autograd.grad_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.set_grad_enabled": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.grad_mode.set_grad_enabled.__enter__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.set_grad_enabled.__exit__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "torch.autograd.grad_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.set_grad_enabled.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "torch.autograd.grad_mode.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.grad_mode.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck": {
  "data": {},
  "type": "module"
 },
 "torch.autograd.gradcheck._as_tuple": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck._differentiable_outputs": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "torch.autograd.gradcheck._as_tuple",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck.get_analytical_jacobian": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "input",
    "list",
    "range",
    "torch.autograd.gradcheck.iter_tensors",
    "torch.autograd.gradcheck.make_jacobian",
    "torch.autograd.gradcheck.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.get_numerical_jacobian": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "enumerate",
    "fn",
    "input",
    "itertools.product",
    "range",
    "torch.autograd.gradcheck.iter_tensors",
    "torch.autograd.gradcheck.make_jacobian",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any",
    "enumerate",
    "fail_test",
    "fn",
    "func",
    "isinstance",
    "list",
    "torch.autograd.gradcheck._as_tuple",
    "torch.autograd.gradcheck._differentiable_outputs",
    "torch.autograd.gradcheck.get_analytical_jacobian",
    "torch.autograd.gradcheck.get_numerical_jacobian",
    "torch.autograd.gradcheck.iter_tensors",
    "torch.autograd.gradcheck.torch",
    "torch.autograd.gradcheck.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.fail_test": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.gradcheck.fn": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "func",
    "input",
    "torch.autograd.gradcheck._as_tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.gradgradcheck": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "func",
    "len",
    "randn_like",
    "torch.autograd.gradcheck._as_tuple",
    "torch.autograd.gradcheck.gradcheck",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.gradgradcheck.new_func": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "torch.autograd.gradcheck._differentiable_outputs",
    "torch.autograd.gradcheck.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.gradgradcheck.randn_like": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "torch.autograd.gradcheck.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.iter_tensors": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "torch._six.container_abcs.Iterable",
    "torch.autograd.gradcheck.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.make_jacobian": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "filter",
    "input",
    "input.dtype",
    "input.is_floating_point",
    "input.nelement",
    "input.requires_grad",
    "isinstance",
    "list",
    "str",
    "torch._six.container_abcs.Iterable",
    "torch.autograd.gradcheck.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.autograd.gradcheck.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck.torch.testing": {
  "data": {
   "shadows": "torch.testing"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.autograd.gradcheck.zero_gradients": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "isinstance",
    "torch._six.container_abcs.Iterable",
    "torch.autograd.gradcheck.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler": {
  "data": {},
  "type": "module"
 },
 "torch.autograd.profiler.EnforceUnique": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.EnforceUnique.__init__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.EnforceUnique.see": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "RuntimeError",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.EventList": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.EventList.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "super",
    "torch.autograd.profiler.EventList"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.EventList.__str__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "torch.autograd.profiler.EventList.export_chrome_trace": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "open",
    "torch.autograd.profiler.json"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.EventList.key_averages": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "collections.defaultdict",
    "torch.autograd.profiler.EventList"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.EventList.table": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "torch.autograd.profiler.build_table"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.EventList.total_average": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "torch.autograd.profiler.FunctionEventAvg"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FileNotFoundError": {
  "data": {
   "shadows": "torch._six.FileNotFoundError"
  },
  "type": "import"
 },
 "torch.autograd.profiler.FormattedTimesMixin": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "object",
    "torch.autograd.profiler.attr_formatter"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.FormattedTimesMixin.cpu_time": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FormattedTimesMixin.cuda_time": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "torch.autograd.profiler.FormattedTimesMixin"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.FunctionEvent.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "id",
    "torch.autograd.profiler.Interval"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.__repr__": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.append_kernel": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "torch.autograd.profiler.Interval",
    "torch.autograd.profiler.Kernel"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.cpu_time_total": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.cuda_time_total": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEvent.key": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "torch.autograd.profiler.FormattedTimesMixin"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.FunctionEventAvg.__iadd__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "isinstance",
    "torch.autograd.profiler.FunctionEvent"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg.__init__": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "torch.autograd.profiler.FunctionEventAvg.__repr__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "torch.autograd.profiler.Interval": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.Interval.__init__": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "torch.autograd.profiler.Interval.elapsed_us": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "torch.autograd.profiler.Kernel": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.Kernel.__init__": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "torch.autograd.profiler.StringTable": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "collections.defaultdict"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.StringTable.__missing__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.attr_formatter": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "getattr",
    "property",
    "torch.autograd.profiler.format_time"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.build_table": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "append",
    "events",
    "getattr",
    "len",
    "max",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.build_table.append": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "torch.autograd.profiler.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "torch.autograd.profiler.emit_nvtx": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.emit_nvtx.__enter__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.emit_nvtx.__exit__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.emit_nvtx.__init__": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "torch.autograd.profiler.format_time": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "torch.autograd.profiler.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "torch.autograd.profiler.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "torch.autograd.profiler.load_nvprof": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "torch.autograd.profiler.EventList",
    "torch.autograd.profiler.parse_nvprof_trace"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.autograd.profiler.parse_cpu_trace": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "adjusted_time",
    "torch.autograd.profiler.FunctionEvent",
    "torch.autograd.profiler.StringTable",
    "torch.autograd.profiler.itertools"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.parse_cpu_trace.adjusted_time": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "torch.autograd.profiler.parse_nvprof_trace": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "torch.autograd.profiler.EnforceUnique",
    "torch.autograd.profiler.FunctionEvent",
    "torch.autograd.profiler.sqlite3",
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "object",
    "torch.autograd.profiler.EventList"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.profile.__enter__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.__exit__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "torch.autograd.profiler.EventList",
    "torch.autograd.profiler.parse_cpu_trace",
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.__init__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.__repr__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.__str__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile._check_finish": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.export_chrome_trace": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.key_averages": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.table": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "torch.autograd.profiler.profile.total_average": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "torch.autograd.profiler.range": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.autograd.profiler.range.__enter__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.range.__exit__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "torch.autograd.profiler.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.profiler.range.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "torch.autograd.profiler.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "torch.autograd.profiler.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "torch.autograd.profiler.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "torch.autograd.profiler.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.autograd.profiler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.variable": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "torch.autograd.torch",
    "torch.autograd.warnings"
   ]
  },
  "type": "function"
 },
 "torch.autograd.variable.ImperativeEngine": {
  "data": {
   "shadows": "torch._C._ImperativeEngine"
  },
  "type": "import"
 },
 "torch.autograd.variable.Variable": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch._six.with_metaclass",
    "torch.autograd.variable.VariableMeta",
    "torch.autograd.variable.torch"
   ]
  },
  "type": "class"
 },
 "torch.autograd.variable.VariableMeta": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "torch.autograd.variable.VariableMeta.__instancecheck__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "isinstance",
    "torch.autograd.variable.torch"
   ]
  },
  "type": "function"
 },
 "torch.autograd.variable.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.autograd.variable.with_metaclass": {
  "data": {
   "shadows": "torch._six.with_metaclass"
  },
  "type": "import"
 },
 "torch.autograd.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.backends": {
  "data": {},
  "type": "module"
 },
 "torch.backends.cuda": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "torch.backends.cuda.CUDAModule",
    "torch.backends.cuda.sys"
   ]
  },
  "type": "module"
 },
 "torch.backends.cuda.CUDAModule": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object",
    "torch.backends.cuda.cuFFTPlanCache"
   ]
  },
  "type": "class"
 },
 "torch.backends.cuda.CUDAModule.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "torch.backends.cuda.ContextProp": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.backends.cuda.ContextProp.__get__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "torch.backends.cuda.ContextProp.__init__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "torch.backends.cuda.ContextProp.__set__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.backends.cuda.cuFFTPlanCache": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object",
    "torch.backends.cuda.ContextProp",
    "torch.backends.cuda.torch"
   ]
  },
  "type": "class"
 },
 "torch.backends.cuda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.backends.cuda.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.backends.cudnn.rnn": {
  "data": {},
  "type": "module"
 },
 "torch.backends.cudnn.rnn.Unserializable": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.backends.cudnn.rnn.Unserializable.__getstate__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "torch.backends.cudnn.rnn.Unserializable.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "torch.backends.cudnn.rnn.Unserializable.__setstate__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "torch.backends.cudnn.rnn.Unserializable.get": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "torch.backends.cudnn.rnn.cudnn": {
  "data": {
   "shadows": "torch.backends.cudnn"
  },
  "type": "import"
 },
 "torch.backends.cudnn.rnn.get_cudnn_mode": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "Exception",
    "torch.backends.cudnn.CUDNN_GRU",
    "torch.backends.cudnn.CUDNN_LSTM",
    "torch.backends.cudnn.CUDNN_RNN_RELU",
    "torch.backends.cudnn.CUDNN_RNN_TANH"
   ]
  },
  "type": "function"
 },
 "torch.backends.cudnn.rnn.init_dropout_state": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "str",
    "torch.backends.cudnn.rnn.Unserializable"
   ]
  },
  "type": "function"
 },
 "torch.backends.cudnn.rnn.torch.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "torch.backends.mkl": {
  "data": {},
  "type": "module"
 },
 "torch.backends.mkl.is_available": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "torch.backends.mkl.torch"
   ]
  },
  "type": "function"
 },
 "torch.backends.mkl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.compiled_with_cxx11_abi": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "torch.contrib": {
  "data": {},
  "type": "module"
 },
 "torch.contrib._graph_vis": {
  "data": {
   "symbols_in_volume": [
    "torch.contrib._graph_vis.string"
   ]
  },
  "type": "module"
 },
 "torch.contrib._graph_vis._vis_template": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "torch.contrib._graph_vis.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "torch.contrib._graph_vis.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "torch.contrib._graph_vis.write": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "add_edge",
    "enumerate",
    "len",
    "open",
    "set",
    "torch.contrib._graph_vis._vis_template",
    "torch.contrib._graph_vis.json"
   ]
  },
  "type": "function"
 },
 "torch.contrib._graph_vis.write.add_edge": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "torch.contrib._tensorboard_vis.FileWriter": {
  "data": {
   "shadows": "tensorflow.python.summary.writer.writer.FileWriter"
  },
  "type": "import"
 },
 "torch.contrib._tensorboard_vis.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "torch.contrib._tensorboard_vis.dump_tensorboard_summary": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "tensorflow.core.util.event_pb2.Event",
    "tensorflow.python.summary.writer.writer.FileWriter",
    "torch.contrib._tensorboard_vis.time",
    "torch.contrib._tensorboard_vis.visualize"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.event_pb2": {
  "data": {
   "shadows": "tensorflow.core.util.event_pb2"
  },
  "type": "import"
 },
 "torch.contrib._tensorboard_vis.graph_pb2": {
  "data": {
   "shadows": "tensorflow.core.framework.graph_pb2"
  },
  "type": "import"
 },
 "torch.contrib._tensorboard_vis.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "torch.contrib._tensorboard_vis.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "torch.contrib._tensorboard_vis.visualize": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "isinstance",
    "str",
    "tensorflow.core.framework.graph_pb2.GraphDef",
    "torch.contrib._tensorboard_vis.visualize_graph_executor",
    "torch.contrib._tensorboard_vis.visualize_rec"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_graph_executor": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "enumerate",
    "inline_graph",
    "isinstance",
    "iter",
    "repr",
    "torch.contrib._tensorboard_vis.visualize"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "add_node",
    "collections.defaultdict",
    "int"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.add_fusion_group": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "inline_graph",
    "name_for"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.add_graph_executor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "add_node",
    "functools.partial",
    "inline_graph",
    "name_for",
    "next",
    "torch.contrib._tensorboard_vis.visualize_graph_executor"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.add_node": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "add_fusion_group",
    "add_graph_executor",
    "enumerate",
    "name_for",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.inline_graph": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "torch.contrib._tensorboard_vis.visualize_rec",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.contrib._tensorboard_vis.visualize_rec.name_for": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "torch.cuda._utils": {
  "data": {},
  "type": "module"
 },
 "torch.cuda._utils._get_device_index": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "torch.cuda._utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda._utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.cuda.comm": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.comm._accumulate": {
  "data": {
   "shadows": "torch._utils._accumulate"
  },
  "type": "import"
 },
 "torch.cuda.comm._flatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._flatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.cuda.comm._flatten_sparse_tensors": {
  "data": {
   "shadows": "torch._utils._flatten_sparse_tensors"
  },
  "type": "import"
 },
 "torch.cuda.comm._reorder_tensors_as": {
  "data": {
   "shadows": "torch._utils._reorder_tensors_as"
  },
  "type": "import"
 },
 "torch.cuda.comm._take_tensors": {
  "data": {
   "shadows": "torch._utils._take_tensors"
  },
  "type": "import"
 },
 "torch.cuda.comm._unflatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._unflatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.cuda.comm._unflatten_sparse_tensors": {
  "data": {
   "shadows": "torch._utils._unflatten_sparse_tensors"
  },
  "type": "import"
 },
 "torch.cuda.comm.broadcast": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.cuda.comm.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.comm.broadcast_coalesced": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "torch.cuda.comm.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.comm.gather": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "torch.cuda.comm.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.comm.reduce_add": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "str",
    "torch.cuda.comm.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.comm.reduce_add_coalesced": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "all",
    "torch._utils._flatten_dense_tensors",
    "torch._utils._reorder_tensors_as",
    "torch._utils._take_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.cuda.comm.reduce_add",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.cuda.comm.scatter": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "torch.cuda.comm.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.cuda.comm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.cuda.error": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.nccl": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.nccl.SUM": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "torch.cuda.nccl.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "torch.cuda.nccl.all_gather": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "torch.cuda.nccl.all_reduce": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "torch.cuda.nccl.SUM"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nccl.broadcast": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "torch.cuda.nccl.init_rank": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "torch.cuda.nccl.is_available": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "hasattr",
    "set",
    "torch.cuda.nccl.warnings"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nccl.reduce": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "torch.cuda.nccl.SUM"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nccl.reduce_scatter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "torch.cuda.nccl.SUM"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nccl.torch.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "torch.cuda.nccl.unique_id": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "torch.cuda.nccl.version": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "torch.cuda.nccl.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.cuda.nvtx": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.nvtx.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "torch.cuda.nvtx._libnvToolsExt": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "torch.cuda.nvtx.ctypes",
    "torch.cuda.nvtx.lib",
    "torch.cuda.nvtx.platform",
    "torch.cuda.nvtx.windows_nvToolsExt_lib"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nvtx.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "torch.cuda.nvtx.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "torch.cuda.nvtx.lib": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "torch.cuda.nvtx.mark": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.cuda.nvtx._libnvToolsExt",
    "torch.cuda.nvtx.ctypes",
    "torch.cuda.nvtx.lib"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nvtx.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.cuda.nvtx.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "torch.cuda.nvtx.range_pop": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.cuda.nvtx._libnvToolsExt",
    "torch.cuda.nvtx.lib"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nvtx.range_push": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.cuda.nvtx._libnvToolsExt",
    "torch.cuda.nvtx.ctypes",
    "torch.cuda.nvtx.lib"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nvtx.windows_nvToolsExt_lib": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "torch.cuda.nvtx.ctypes",
    "torch.cuda.nvtx.lib",
    "torch.cuda.nvtx.os",
    "torch.cuda.nvtx.windows_nvToolsExt_path"
   ]
  },
  "type": "function"
 },
 "torch.cuda.nvtx.windows_nvToolsExt_path": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len",
    "torch.cuda.nvtx.glob",
    "torch.cuda.nvtx.os"
   ]
  },
  "type": "function"
 },
 "torch.cuda.profiler": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.profiler.DEFAULT_FLAGS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "torch.cuda.profiler.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "torch.cuda.profiler.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "torch.cuda.profiler.cudaOutputMode": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object",
    "torch.cuda.profiler.ctypes"
   ]
  },
  "type": "class"
 },
 "torch.cuda.profiler.cudaOutputMode.for_key": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "RuntimeError",
    "staticmethod",
    "torch.cuda.profiler.cudaOutputMode"
   ]
  },
  "type": "function"
 },
 "torch.cuda.profiler.init": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "map",
    "torch.cuda.profiler.DEFAULT_FLAGS",
    "torch.cuda.profiler.ctypes",
    "torch.cuda.profiler.cudaOutputMode",
    "torch.cuda.profiler.tempfile"
   ]
  },
  "type": "function"
 },
 "torch.cuda.profiler.profile": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "torch.cuda.profiler.contextlib",
    "torch.cuda.profiler.start",
    "torch.cuda.profiler.stop"
   ]
  },
  "type": "function"
 },
 "torch.cuda.profiler.start": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "check_error",
    "cudart"
   ]
  },
  "type": "function"
 },
 "torch.cuda.profiler.stop": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "check_error",
    "cudart"
   ]
  },
  "type": "function"
 },
 "torch.cuda.profiler.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "torch.cuda.random": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.random._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch.cuda.random.device_ctx_manager": {
  "data": {
   "shadows": "device"
  },
  "type": "import"
 },
 "torch.cuda.random.get_rng_state": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "_lazy_init",
    "torch._C._cuda_getRNGState"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.get_rng_state_all": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "device_count",
    "range",
    "torch.cuda.random.get_rng_state"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.initial_seed": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_lazy_init",
    "torch._C._cuda_initialSeed"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.manual_seed": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_lazy_call",
    "int",
    "torch._C._cuda_manualSeed"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.manual_seed_all": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "_lazy_call",
    "int",
    "torch._C._cuda_manualSeedAll"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.seed": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_lazy_call",
    "torch._C._cuda_seed"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.seed_all": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "_lazy_call",
    "torch._C._cuda_seedAll"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.set_rng_state": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "_lazy_call"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.set_rng_state.cb": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "torch._C._cuda_setRNGState"
   ]
  },
  "type": "function"
 },
 "torch.cuda.random.set_rng_state_all": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "enumerate",
    "torch.cuda.random.set_rng_state"
   ]
  },
  "type": "function"
 },
 "torch.cuda.sparse": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.streams": {
  "data": {},
  "type": "module"
 },
 "torch.cuda.streams.Event": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.cuda.streams.Event.__del__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "check_error",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "torch.cuda.streams.Event",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.__repr__": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.elapsed_time": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.ipc_handle": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "torch.cuda.streams.EventHandle",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.query": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "check_error",
    "cudart"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.record": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "torch.cuda.streams.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.synchronize": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "check_error",
    "cudart"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Event.wait": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "torch.cuda.streams.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.EventHandle": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "class"
 },
 "torch.cuda.streams.Stream": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "torch.cuda.streams.torch"
   ]
  },
  "type": "class"
 },
 "torch.cuda.streams.Stream.__eq__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "isinstance",
    "torch.cuda.streams.Stream"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.__hash__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.__new__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "super",
    "torch.cuda.streams.Stream",
    "torch.cuda.streams.torch"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.__repr__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream._as_parameter_": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.priority": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "property",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.priority_range": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "staticmethod",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.query": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "check_error",
    "cudart"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.record_event": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "torch.cuda.streams.Event"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.synchronize": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "check_error",
    "cudart"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.wait_event": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "check_error",
    "cudart",
    "torch.cuda.streams.ctypes"
   ]
  },
  "type": "function"
 },
 "torch.cuda.streams.Stream.wait_stream": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "torch.cuda.streams.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "torch.cuda.streams.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributed": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.is_available",
    "torch.distributed.torch"
   ]
  },
  "type": "module"
 },
 "torch.distributed.deprecated": {
  "data": {
   "symbols_in_volume": [
    "locals",
    "torch.distributed.deprecated.dist_backend"
   ]
  },
  "type": "module"
 },
 "torch.distributed.deprecated._DistributedRequest": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated._DistributedRequest.__init__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "torch.distributed.deprecated._DistributedRequest.is_completed": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated._DistributedRequest.wait": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated._INITIALIZED_MW": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "torch.distributed.deprecated._INITIALIZED_PG": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "torch.distributed.deprecated._backend": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "torch.distributed.deprecated._clear_group_cache": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated._extend_scope": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "torch.distributed.deprecated._scope"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated._flatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._flatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.distributed.deprecated._initialized": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "torch.distributed.deprecated._register_stream": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.deprecated._initialized",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated._scope": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "torch.distributed.deprecated._unflatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._unflatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.distributed.deprecated.all_gather": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated._backend",
    "torch.distributed.deprecated.all_gather_multigpu",
    "torch.distributed.deprecated.dist_backend",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.all_gather_multigpu": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "torch._utils._flatten_dense_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.all_reduce": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.reduce_op",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.all_reduce_multigpu": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.reduce_op",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "torch.distributed.deprecated.barrier": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.broadcast": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.broadcast_multigpu": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.collectives": {
  "data": {
   "shadows": "torch.distributed.deprecated.collectives"
  },
  "type": "import"
 },
 "torch.distributed.deprecated.destroy_process_group": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "torch.distributed.deprecated._backend",
    "torch.distributed.deprecated._initialized",
    "torch.distributed.deprecated.dist_backend",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.dist_backend": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "torch.distributed.deprecated.gather": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.get_rank",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.get_rank": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.get_world_size": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.group": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.init_master_worker": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "torch.distributed.deprecated._INITIALIZED_MW",
    "torch.distributed.deprecated._extend_scope",
    "torch.distributed.deprecated._initialized",
    "torch.distributed.deprecated.collectives",
    "torch.distributed.deprecated.is_available",
    "torch.distributed.deprecated.remote_types",
    "torch.distributed.deprecated.torch",
    "torch.distributed.deprecated.warnings"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.init_process_group": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated._backend",
    "torch.distributed.deprecated._initialized",
    "torch.distributed.deprecated.atexit",
    "torch.distributed.deprecated.destroy_process_group",
    "torch.distributed.deprecated.dist_backend",
    "torch.distributed.deprecated.is_available",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.irecv": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "torch.distributed.deprecated._DistributedRequest",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.is_available": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.is_initialized": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated._initialized"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.isend": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "torch.distributed.deprecated._DistributedRequest",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.new_group": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "list",
    "range",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.get_world_size",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.recv": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.reduce": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.reduce_op",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.reduce_multigpu": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.reduce_op",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.reduce_op": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types": {
  "data": {
   "shadows": "torch.distributed.deprecated.remote_types"
  },
  "type": "import"
 },
 "torch.distributed.deprecated.remote_types.ByteStorage": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.CharStorage": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.DoubleStorage": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.FloatStorage": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.HalfStorage": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.IntStorage": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.LongStorage": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types.ShortStorage": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "torch.distributed.deprecated.remote_types._DistributedBase",
    "torch.distributed.deprecated.remote_types.torch"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types._DistributedBase": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributed.deprecated.remote_types._locals": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "torch.distributed.deprecated.remote_types._storages": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "torch.distributed.deprecated.remote_types._tensors": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "torch.distributed.deprecated.remote_types._type_names": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "torch.distributed.deprecated.remote_types.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributed.deprecated.scatter": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.get_rank",
    "torch.distributed.deprecated.group",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.send": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "torch.distributed.deprecated._INITIALIZED_PG",
    "torch.distributed.deprecated.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.deprecated.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributed.deprecated.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.distributed.distributed_c10d": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datetime.timedelta",
    "torch.distributed.distributed_c10d.Backend"
   ]
  },
  "type": "module"
 },
 "torch.distributed.distributed_c10d.Backend": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributed.distributed_c10d.Backend.__new__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "torch._six.string_classes",
    "torch.distributed.distributed_c10d.Backend"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.GroupMember": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "object",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "class"
 },
 "torch.distributed.distributed_c10d._MPI_AVAILABLE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._NCCL_AVAILABLE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._backend": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._check_default_pg": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d._default_pg"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._check_single_tensor": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "torch.distributed.distributed_c10d.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._check_tensor_list": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "list",
    "torch.distributed.distributed_c10d.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._default_pg": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._default_pg_init_method": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._default_pg_timeout": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._get_default_group": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d.is_initialized"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_global_rank": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._pg_group_ranks",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_group_rank": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._pg_group_ranks",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._get_group_size": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._pg_group_ranks",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._group_count": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._new_process_group_helper": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "PrefixStore",
    "ProcessGroupGloo",
    "ProcessGroupMPI",
    "ProcessGroupNCCL",
    "RuntimeError",
    "datetime.timedelta",
    "isinstance",
    "str",
    "torch.distributed.distributed_c10d.Backend",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._default_pg_timeout",
    "torch.distributed.distributed_c10d._group_count",
    "torch.distributed.distributed_c10d._pg_map",
    "torch.distributed.distributed_c10d._pg_names",
    "torch.distributed.distributed_c10d.is_mpi_available",
    "torch.distributed.distributed_c10d.is_nccl_available"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d._pg_group_ranks": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._pg_map": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._pg_names": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d._rank_not_in_group": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.Backend",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._get_default_group",
    "torch.distributed.distributed_c10d._pg_map",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_gather": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._check_tensor_list",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_gather_multigpu": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_reduce": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "AllreduceOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.all_reduce_multigpu": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "AllreduceOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.barrier": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.broadcast": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "BroadcastOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.broadcast_multigpu": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "BroadcastOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.destroy_process_group": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.distributed_c10d.Backend",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._default_pg_init_method",
    "torch.distributed.distributed_c10d._get_default_group",
    "torch.distributed.distributed_c10d._pg_group_ranks",
    "torch.distributed.distributed_c10d._pg_map",
    "torch.distributed.distributed_c10d._pg_names",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.dist_backend": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d.gather": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "GatherOptions",
    "RuntimeError",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._check_tensor_list",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.get_rank",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.get_backend": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._pg_map",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.get_rank": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.get_world_size": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d._get_group_size",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.group": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributed.distributed_c10d.init_process_group": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ProcessGroupGloo",
    "ProcessGroupMPI",
    "ProcessGroupNCCL",
    "RuntimeError",
    "datetime.timedelta",
    "isinstance",
    "len",
    "next",
    "rendezvous",
    "torch.distributed.distributed_c10d.Backend",
    "torch.distributed.distributed_c10d._backend",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._default_pg_init_method",
    "torch.distributed.distributed_c10d._default_pg_timeout",
    "torch.distributed.distributed_c10d._pg_map",
    "torch.distributed.distributed_c10d._pg_names",
    "torch.distributed.distributed_c10d.is_mpi_available",
    "torch.distributed.distributed_c10d.is_nccl_available"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.irecv": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_initialized": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d._default_pg"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_mpi_available": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d._MPI_AVAILABLE"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.is_nccl_available": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d._NCCL_AVAILABLE"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.isend": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.new_group": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "list",
    "range",
    "str",
    "torch.distributed.distributed_c10d.Backend",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._default_pg_timeout",
    "torch.distributed.distributed_c10d._group_count",
    "torch.distributed.distributed_c10d._new_process_group_helper",
    "torch.distributed.distributed_c10d._pg_group_ranks",
    "torch.distributed.distributed_c10d._pg_map",
    "torch.distributed.distributed_c10d._pg_names"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.recv": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_global_rank",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "ReduceOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_multigpu": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "ReduceOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_op": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "torch.distributed.distributed_c10d.reduce_op.__getattribute__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object.__getattribute__",
    "torch.distributed.distributed_c10d.warnings"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.reduce_op.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.scatter": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "RuntimeError",
    "ScatterOptions",
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._check_tensor_list",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.get_rank",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.send": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "torch.distributed.distributed_c10d.GroupMember",
    "torch.distributed.distributed_c10d._check_default_pg",
    "torch.distributed.distributed_c10d._check_single_tensor",
    "torch.distributed.distributed_c10d._default_pg",
    "torch.distributed.distributed_c10d._get_group_rank",
    "torch.distributed.distributed_c10d._rank_not_in_group",
    "torch.distributed.distributed_c10d.group"
   ]
  },
  "type": "function"
 },
 "torch.distributed.distributed_c10d.string_classes": {
  "data": {
   "shadows": "torch._six.string_classes"
  },
  "type": "import"
 },
 "torch.distributed.distributed_c10d.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "torch.distributed.distributed_c10d.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributed.distributed_c10d.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.distributed.is_available": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "hasattr",
    "torch.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributed.launch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "torch.distributed.launch.main"
   ]
  },
  "type": "module"
 },
 "torch.distributed.launch.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "torch.distributed.launch.REMAINDER": {
  "data": {
   "shadows": "argparse.REMAINDER"
  },
  "type": "import"
 },
 "torch.distributed.launch.main": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "range",
    "str",
    "torch.distributed.launch.os",
    "torch.distributed.launch.parse_args",
    "torch.distributed.launch.subprocess",
    "torch.distributed.launch.sys"
   ]
  },
  "type": "function"
 },
 "torch.distributed.launch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.distributed.launch.parse_args": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "argparse.REMAINDER",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.distributed.launch.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "torch.distributed.launch.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "torch.distributed.launch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.distributed.launch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributed.rendezvous": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "torch.distributed.rendezvous._env_rendezvous_handler",
    "torch.distributed.rendezvous._file_rendezvous_handler",
    "torch.distributed.rendezvous._tcp_rendezvous_handler",
    "torch.distributed.rendezvous.register_rendezvous_handler"
   ]
  },
  "type": "module"
 },
 "torch.distributed.rendezvous._env_rendezvous_handler": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "RuntimeError",
    "TCPStore",
    "_env_error",
    "_error",
    "dict",
    "filter",
    "int",
    "torch.distributed.rendezvous.os",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._env_rendezvous_handler._env_error": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "_error"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._env_rendezvous_handler._error": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "torch.distributed.rendezvous._rendezvous_error"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._file_rendezvous_handler": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "FileStore",
    "RuntimeError",
    "_error",
    "dict",
    "filter",
    "int",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._file_rendezvous_handler._error": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "torch.distributed.rendezvous._rendezvous_error"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._rendezvous_error": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._rendezvous_handlers": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "torch.distributed.rendezvous._tcp_rendezvous_handler": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "TCPStore",
    "_error",
    "dict",
    "filter",
    "int",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous._tcp_rendezvous_handler._error": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "torch.distributed.rendezvous._rendezvous_error"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.distributed.rendezvous.register_rendezvous_handler": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.rendezvous._rendezvous_handlers"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous.rendezvous": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.rendezvous._rendezvous_handlers",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "torch.distributed.rendezvous.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "torch.distributed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions": {
  "data": {
   "symbols_in_volume": [
    "torch.distributions.__all__"
   ]
  },
  "type": "module"
 },
 "torch.distributions.__all__": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "torch.distributions.bernoulli": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.bernoulli.Bernoulli": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.boolean",
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.bernoulli.Bernoulli.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.bernoulli.Bernoulli",
    "torch.distributions.bernoulli.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli._log_normalizer": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "torch.distributions.bernoulli.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli._natural_params": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property",
    "torch.distributions.bernoulli.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli._new": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.entropy": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "torch.nn.functional.binary_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.enumerate_support": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "torch.distributions.bernoulli.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.expand": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super",
    "torch.distributions.bernoulli.Bernoulli",
    "torch.distributions.bernoulli.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.log_prob": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "torch.distributions.utils.broadcast_all",
    "torch.nn.functional.binary_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.logits": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.probs_to_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.mean": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.param_shape": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.probs": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.logits_to_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.sample": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "torch.distributions.bernoulli.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.Bernoulli.variance": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.bernoulli.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.binary_cross_entropy_with_logits": {
  "data": {
   "shadows": "torch.nn.functional.binary_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.logits_to_probs": {
  "data": {
   "shadows": "torch.distributions.utils.logits_to_probs"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.probs_to_logits": {
  "data": {
   "shadows": "torch.distributions.utils.probs_to_logits"
  },
  "type": "import"
 },
 "torch.distributions.bernoulli.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.beta": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.beta.Beta": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.beta.Beta.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.beta.Beta",
    "torch.distributions.beta.torch",
    "torch.distributions.dirichlet.Dirichlet",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta._log_normalizer": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "torch.distributions.beta.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta._natural_params": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.concentration0": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "property",
    "torch.distributions.beta.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.concentration1": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "property",
    "torch.distributions.beta.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.entropy": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.expand": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "torch.distributions.beta.Beta",
    "torch.distributions.beta.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.log_prob": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "torch.distributions.beta.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.mean": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.rsample": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Beta.variance": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.beta.Dirichlet": {
  "data": {
   "shadows": "torch.distributions.dirichlet.Dirichlet"
  },
  "type": "import"
 },
 "torch.distributions.beta.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.beta.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.beta.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.beta.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.beta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.binomial": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.binomial.Binomial": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.constraints.nonnegative_integer",
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.binomial.Binomial.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.binomial.Binomial",
    "torch.distributions.binomial.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial._new": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.enumerate_support": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "len",
    "torch.distributions.binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.expand": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "super",
    "torch.distributions.binomial.Binomial",
    "torch.distributions.binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.log_prob": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "torch.distributions.binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.logits": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.probs_to_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.mean": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.param_shape": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.probs": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.logits_to_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.sample": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "int",
    "max",
    "torch.distributions.binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.support": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.integer_interval"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Binomial.variance": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.binomial.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.binomial.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.binomial.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.binomial.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.binomial.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.binomial.logits_to_probs": {
  "data": {
   "shadows": "torch.distributions.utils.logits_to_probs"
  },
  "type": "import"
 },
 "torch.distributions.binomial.probs_to_logits": {
  "data": {
   "shadows": "torch.distributions.utils.probs_to_logits"
  },
  "type": "import"
 },
 "torch.distributions.binomial.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.categorical": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.categorical.Categorical": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.categorical.Categorical.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.distributions.categorical.Categorical",
    "torch.distributions.categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical._new": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.entropy": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.enumerate_support": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "torch.distributions.categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.expand": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "super",
    "torch.distributions.categorical.Categorical",
    "torch.distributions.categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.log_prob": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "torch.distributions.categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.logits": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.probs_to_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.mean": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.param_shape": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.probs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.logits_to_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.sample": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "torch.distributions.categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.support": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.integer_interval"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Categorical.variance": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.categorical.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.categorical.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.categorical.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.categorical.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.categorical.logits_to_probs": {
  "data": {
   "shadows": "torch.distributions.utils.logits_to_probs"
  },
  "type": "import"
 },
 "torch.distributions.categorical.nan": {
  "data": {
   "shadows": "torch._six.nan"
  },
  "type": "import"
 },
 "torch.distributions.categorical.probs_to_logits": {
  "data": {
   "shadows": "torch.distributions.utils.probs_to_logits"
  },
  "type": "import"
 },
 "torch.distributions.categorical.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.cauchy": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.cauchy.Cauchy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.cauchy.Cauchy.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.cauchy.Cauchy",
    "torch.distributions.cauchy.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.cdf": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "torch.distributions.cauchy.math",
    "torch.distributions.cauchy.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.entropy": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "torch.distributions.cauchy.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.expand": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "super",
    "torch.distributions.cauchy.Cauchy",
    "torch.distributions.cauchy.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.icdf": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "torch.distributions.cauchy.math",
    "torch.distributions.cauchy.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.log_prob": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "torch.distributions.cauchy.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.mean": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.rsample": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "torch.distributions.cauchy.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Cauchy.variance": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property",
    "torch._six.inf"
   ]
  },
  "type": "function"
 },
 "torch.distributions.cauchy.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.nan": {
  "data": {
   "shadows": "torch._six.nan"
  },
  "type": "import"
 },
 "torch.distributions.cauchy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.chi2": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.chi2.Chi2": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.gamma.Gamma"
   ]
  },
  "type": "class"
 },
 "torch.distributions.chi2.Chi2.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "super",
    "torch.distributions.chi2.Chi2"
   ]
  },
  "type": "function"
 },
 "torch.distributions.chi2.Chi2.df": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.chi2.Chi2.expand": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super",
    "torch.distributions.chi2.Chi2"
   ]
  },
  "type": "function"
 },
 "torch.distributions.chi2.Gamma": {
  "data": {
   "shadows": "torch.distributions.gamma.Gamma"
  },
  "type": "import"
 },
 "torch.distributions.chi2.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.chi2.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.constraint_registry": {
  "data": {
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.ConstraintRegistry"
   ]
  },
  "type": "module"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "factory",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry.ConstraintRegistry.register": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "issubclass",
    "torch.distributions.constraints.Constraint",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry.__all__": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "torch.distributions.constraint_registry._biject_to_simplex": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.biject_to",
    "torch.distributions.constraints.simplex",
    "torch.distributions.transforms.StickBreakingTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_greater_than": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.biject_to",
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.greater_than",
    "torch.distributions.constraints.greater_than_eq",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.ComposeTransform",
    "torch.distributions.transforms.ExpTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_interval": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.constraint_registry.biject_to",
    "torch.distributions.constraint_registry.numbers",
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.half_open_interval",
    "torch.distributions.constraints.interval",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.ComposeTransform",
    "torch.distributions.transforms.SigmoidTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_less_than": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.biject_to",
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.less_than",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.ComposeTransform",
    "torch.distributions.transforms.ExpTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_lower_cholesky": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.lower_cholesky",
    "torch.distributions.transforms.LowerCholeskyTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_positive": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.biject_to",
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.positive",
    "torch.distributions.transforms.ExpTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_real": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.biject_to",
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.real_vector",
    "torch.distributions.transforms.identity_transform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry._transform_to_simplex": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "torch.distributions.constraint_registry.transform_to",
    "torch.distributions.constraints.simplex",
    "torch.distributions.transforms.SoftmaxTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraint_registry.biject_to": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "torch.distributions.constraint_registry.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.constraint_registry.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "torch.distributions.constraint_registry.transform_to": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "torch.distributions.constraint_registry.transforms": {
  "data": {
   "shadows": "torch.distributions.transforms"
  },
  "type": "import"
 },
 "torch.distributions.constraints": {
  "data": {
   "symbols_in_volume": [
    "torch.distributions.constraints._Boolean",
    "torch.distributions.constraints._Dependent",
    "torch.distributions.constraints._DependentProperty",
    "torch.distributions.constraints._GreaterThan",
    "torch.distributions.constraints._GreaterThanEq",
    "torch.distributions.constraints._HalfOpenInterval",
    "torch.distributions.constraints._IntegerGreaterThan",
    "torch.distributions.constraints._IntegerInterval",
    "torch.distributions.constraints._Interval",
    "torch.distributions.constraints._LessThan",
    "torch.distributions.constraints._LowerCholesky",
    "torch.distributions.constraints._LowerTriangular",
    "torch.distributions.constraints._PositiveDefinite",
    "torch.distributions.constraints._Real",
    "torch.distributions.constraints._RealVector",
    "torch.distributions.constraints._Simplex"
   ]
  },
  "type": "module"
 },
 "torch.distributions.constraints.Constraint": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints.Constraint.__repr__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "torch.distributions.constraints.Constraint.check": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraints._Boolean": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._Boolean.check": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "torch.distributions.constraints._Dependent": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._Dependent.check": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraints._DependentProperty": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property",
    "torch.distributions.constraints._Dependent"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._GreaterThan": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._GreaterThan.__init__": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThan.__repr__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThan.check": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThanEq": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._GreaterThanEq.__init__": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThanEq.__repr__": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "torch.distributions.constraints._GreaterThanEq.check": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "torch.distributions.constraints._HalfOpenInterval": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._HalfOpenInterval.__init__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "torch.distributions.constraints._HalfOpenInterval.__repr__": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "torch.distributions.constraints._HalfOpenInterval.check": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerGreaterThan": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._IntegerGreaterThan.__init__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerGreaterThan.__repr__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerGreaterThan.check": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerInterval": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._IntegerInterval.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerInterval.__repr__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerInterval.check": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerLessThan": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._IntegerLessThan.__init__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerLessThan.__repr__": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "torch.distributions.constraints._IntegerLessThan.check": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "torch.distributions.constraints._Interval": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._Interval.__init__": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "torch.distributions.constraints._Interval.__repr__": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "torch.distributions.constraints._Interval.check": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "torch.distributions.constraints._LessThan": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._LessThan.__init__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "torch.distributions.constraints._LessThan.__repr__": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "torch.distributions.constraints._LessThan.check": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "torch.distributions.constraints._LowerCholesky": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._LowerCholesky.check": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "torch.distributions.constraints._LowerTriangular": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._LowerTriangular.check": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "torch.distributions.constraints._PositiveDefinite": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._PositiveDefinite.check": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "torch.distributions.constraints.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraints._Real": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._Real.check": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "torch.distributions.constraints._RealVector": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._RealVector.check": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "torch.distributions.constraints._Simplex": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "torch.distributions.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "torch.distributions.constraints._Simplex.check": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "torch.distributions.constraints.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "torch.distributions.constraints.boolean": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "torch.distributions.constraints.dependent": {
  "data": {
   "lineno": 298
  },
  "type": "constant"
 },
 "torch.distributions.constraints.dependent_property": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "torch.distributions.constraints.greater_than": {
  "data": {
   "lineno": 307
  },
  "type": "constant"
 },
 "torch.distributions.constraints.greater_than_eq": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "torch.distributions.constraints.half_open_interval": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "torch.distributions.constraints.integer_interval": {
  "data": {
   "lineno": 303
  },
  "type": "constant"
 },
 "torch.distributions.constraints.interval": {
  "data": {
   "lineno": 311
  },
  "type": "constant"
 },
 "torch.distributions.constraints.is_dependent": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.constraints._Dependent"
   ]
  },
  "type": "function"
 },
 "torch.distributions.constraints.less_than": {
  "data": {
   "lineno": 309
  },
  "type": "constant"
 },
 "torch.distributions.constraints.lower_cholesky": {
  "data": {
   "lineno": 315
  },
  "type": "constant"
 },
 "torch.distributions.constraints.lower_triangular": {
  "data": {
   "lineno": 314
  },
  "type": "constant"
 },
 "torch.distributions.constraints.nonnegative_integer": {
  "data": {
   "lineno": 301
  },
  "type": "constant"
 },
 "torch.distributions.constraints.positive": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "torch.distributions.constraints.positive_definite": {
  "data": {
   "lineno": 316
  },
  "type": "constant"
 },
 "torch.distributions.constraints.positive_integer": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "torch.distributions.constraints.real": {
  "data": {
   "lineno": 304
  },
  "type": "constant"
 },
 "torch.distributions.constraints.real_vector": {
  "data": {
   "lineno": 305
  },
  "type": "constant"
 },
 "torch.distributions.constraints.simplex": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "torch.distributions.constraints.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.constraints.unit_interval": {
  "data": {
   "lineno": 310
  },
  "type": "constant"
 },
 "torch.distributions.dirichlet": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.dirichlet.Dirichlet": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.simplex",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.dirichlet.Dirichlet.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.distributions.dirichlet.Dirichlet"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet._log_normalizer": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch.distributions.dirichlet.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet._natural_params": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.entropy": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "torch.distributions.dirichlet.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.expand": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super",
    "torch.distributions.dirichlet.Dirichlet",
    "torch.distributions.dirichlet.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.log_prob": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.distributions.dirichlet.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.mean": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.rsample": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.dirichlet._Dirichlet",
    "torch.distributions.dirichlet._dirichlet_sample_nograd",
    "torch.distributions.dirichlet.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.Dirichlet.variance": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet._Dirichlet": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "torch.distributions.dirichlet._Dirichlet.backward": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "staticmethod",
    "torch.autograd.function.once_differentiable",
    "torch.distributions.dirichlet._Dirichlet_backward"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet._Dirichlet.forward": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "staticmethod",
    "torch.distributions.dirichlet._dirichlet_sample_nograd"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet._Dirichlet_backward": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "torch.distributions.dirichlet.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet._dirichlet_sample_nograd": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributions.dirichlet.torch",
    "torch.distributions.utils.clamp_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.dirichlet._finfo": {
  "data": {
   "shadows": "torch.distributions.utils._finfo"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.clamp_probs": {
  "data": {
   "shadows": "torch.distributions.utils.clamp_probs"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.once_differentiable": {
  "data": {
   "shadows": "torch.autograd.function.once_differentiable"
  },
  "type": "import"
 },
 "torch.distributions.dirichlet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.distribution": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.distribution.Distribution": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributions.distribution.Distribution.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "torch.distributions.constraints.is_dependent",
    "torch.distributions.distribution.torch",
    "torch.distributions.utils.lazy_property",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.__repr__": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution._extended_shape": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.distribution.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution._get_checked_instance": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "NotImplementedError",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution._validate_sample": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "reversed",
    "torch.distributions.distribution.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.arg_constraints": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.batch_shape": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.cdf": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.entropy": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.enumerate_support": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.event_shape": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.expand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.icdf": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.log_prob": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.mean": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.perplexity": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "torch.distributions.distribution.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.rsample": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "torch.distributions.distribution.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.sample": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "torch.distributions.distribution.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.sample_n": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "UserWarning",
    "torch.distributions.distribution.torch",
    "torch.distributions.distribution.warnings"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.set_default_validate_args": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.stddev": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.support": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.Distribution.variance": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.distribution.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.distribution.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.distribution.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.distributions.exp_family": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.exp_family.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.exp_family.ExponentialFamily": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.exp_family.ExponentialFamily._log_normalizer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exp_family.ExponentialFamily._mean_carrier_measure": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exp_family.ExponentialFamily._natural_params": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exp_family.ExponentialFamily.entropy": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "torch.distributions.exp_family.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exp_family.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.exponential": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.exponential.Exponential": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.exponential.Exponential.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.exponential.Exponential",
    "torch.distributions.exponential.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential._log_normalizer": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "torch.distributions.exponential.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential._natural_params": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.cdf": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "torch.distributions.exponential.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.entropy": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "torch.distributions.exponential.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.expand": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "torch.distributions.exponential.Exponential",
    "torch.distributions.exponential.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.icdf": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "torch.distributions.exponential.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.log_prob": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.mean": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.rsample": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "torch.distributions.exponential.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.stddev": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.Exponential.variance": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.exponential.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.exponential.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.exponential.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.exponential.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.exponential.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.fishersnedecor.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.fishersnedecor.FisherSnedecor",
    "torch.distributions.fishersnedecor.torch",
    "torch.distributions.gamma.Gamma",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.expand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "super",
    "torch.distributions.fishersnedecor.FisherSnedecor",
    "torch.distributions.fishersnedecor.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.log_prob": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "torch.distributions.fishersnedecor.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.mean": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.rsample": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "torch.distributions.fishersnedecor.torch",
    "torch.distributions.utils._finfo"
   ]
  },
  "type": "function"
 },
 "torch.distributions.fishersnedecor.FisherSnedecor.variance": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.fishersnedecor.Gamma": {
  "data": {
   "shadows": "torch.distributions.gamma.Gamma"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor._finfo": {
  "data": {
   "shadows": "torch.distributions.utils._finfo"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.nan": {
  "data": {
   "shadows": "torch._six.nan"
  },
  "type": "import"
 },
 "torch.distributions.fishersnedecor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.gamma": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.gamma.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.gamma.Gamma": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.gamma.Gamma.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.gamma.Gamma",
    "torch.distributions.gamma.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma._log_normalizer": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "torch.distributions.gamma.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma._natural_params": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.entropy": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "torch.distributions.gamma.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.expand": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "super",
    "torch.distributions.gamma.Gamma",
    "torch.distributions.gamma.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.log_prob": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "torch.distributions.gamma.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.mean": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.rsample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "torch.distributions.gamma._standard_gamma",
    "torch.distributions.gamma.torch",
    "torch.distributions.utils._finfo"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Gamma.variance": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.gamma._finfo": {
  "data": {
   "shadows": "torch.distributions.utils._finfo"
  },
  "type": "import"
 },
 "torch.distributions.gamma._standard_gamma": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.distributions.gamma.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gamma.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.gamma.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.gamma.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.gamma.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.geometric": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.geometric.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.geometric.Geometric": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.nonnegative_integer",
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.geometric.Geometric.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.geometric.Geometric",
    "torch.distributions.geometric.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.entropy": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "torch.nn.functional.binary_cross_entropy_with_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.expand": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super",
    "torch.distributions.geometric.Geometric",
    "torch.distributions.geometric.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.log_prob": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.logits": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.probs_to_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.mean": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.probs": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.logits_to_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.sample": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "torch.distributions.geometric.torch",
    "torch.distributions.utils._finfo"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Geometric.variance": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.geometric.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.geometric._finfo": {
  "data": {
   "shadows": "torch.distributions.utils._finfo"
  },
  "type": "import"
 },
 "torch.distributions.geometric.binary_cross_entropy_with_logits": {
  "data": {
   "shadows": "torch.nn.functional.binary_cross_entropy_with_logits"
  },
  "type": "import"
 },
 "torch.distributions.geometric.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.geometric.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.geometric.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.geometric.logits_to_probs": {
  "data": {
   "shadows": "torch.distributions.utils.logits_to_probs"
  },
  "type": "import"
 },
 "torch.distributions.geometric.probs_to_logits": {
  "data": {
   "shadows": "torch.distributions.utils.probs_to_logits"
  },
  "type": "import"
 },
 "torch.distributions.geometric.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.gumbel": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.gumbel.AffineTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.AffineTransform"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.ExpTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.ExpTransform"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.Gumbel": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.gumbel.Gumbel.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.gumbel.Gumbel",
    "torch.distributions.gumbel.torch",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.ExpTransform",
    "torch.distributions.uniform.Uniform",
    "torch.distributions.utils._finfo",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.entropy": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "torch.distributions.gumbel.euler_constant"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.expand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "torch.distributions.gumbel.Gumbel"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.log_prob": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.mean": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property",
    "torch.distributions.gumbel.euler_constant"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.stddev": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property",
    "torch.distributions.gumbel.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Gumbel.variance": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.gumbel.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.Uniform": {
  "data": {
   "shadows": "torch.distributions.uniform.Uniform"
  },
  "type": "import"
 },
 "torch.distributions.gumbel._finfo": {
  "data": {
   "shadows": "torch.distributions.utils._finfo"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.euler_constant": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "torch.distributions.gumbel.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.gumbel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.half_cauchy.AbsTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.AbsTransform"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy.Cauchy": {
  "data": {
   "shadows": "torch.distributions.cauchy.Cauchy"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy.HalfCauchy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.half_cauchy.HalfCauchy.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super",
    "torch.distributions.cauchy.Cauchy",
    "torch.distributions.half_cauchy.HalfCauchy",
    "torch.distributions.transforms.AbsTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.cdf": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.entropy": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "torch.distributions.half_cauchy.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.expand": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "torch.distributions.half_cauchy.HalfCauchy"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.icdf": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.log_prob": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.half_cauchy.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.mean": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.scale": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.HalfCauchy.variance": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_cauchy.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.half_cauchy.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.half_normal": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.half_normal.AbsTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.AbsTransform"
  },
  "type": "import"
 },
 "torch.distributions.half_normal.HalfNormal": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.half_normal.HalfNormal.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super",
    "torch.distributions.half_normal.HalfNormal",
    "torch.distributions.normal.Normal",
    "torch.distributions.transforms.AbsTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.cdf": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.entropy": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "torch.distributions.half_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.expand": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "torch.distributions.half_normal.HalfNormal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.icdf": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.log_prob": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.half_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.mean": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property",
    "torch.distributions.half_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.scale": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.HalfNormal.variance": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property",
    "torch.distributions.half_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.half_normal.Normal": {
  "data": {
   "shadows": "torch.distributions.normal.Normal"
  },
  "type": "import"
 },
 "torch.distributions.half_normal.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.half_normal.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.half_normal.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.distributions.half_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.half_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.independent": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.independent.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.independent.Independent": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.independent.Independent.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "super",
    "torch.distributions.independent.Independent"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.entropy": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "torch.distributions.utils._sum_rightmost"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.enumerate_support": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.expand": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super",
    "torch.distributions.independent.Independent",
    "torch.distributions.independent.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.has_enumerate_support": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.has_rsample": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.log_prob": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.distributions.utils._sum_rightmost"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.mean": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.rsample": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "torch.distributions.independent.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.sample": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "torch.distributions.independent.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.support": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent.Independent.variance": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.independent._sum_rightmost": {
  "data": {
   "shadows": "torch.distributions.utils._sum_rightmost"
  },
  "type": "import"
 },
 "torch.distributions.independent.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.independent.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.kl": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.kl._KL_MEMOIZE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "torch.distributions.kl._KL_REGISTRY": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "torch.distributions.kl._Match": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "functools.total_ordering",
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributions.kl._Match.__eq__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "torch.distributions.kl._Match.__init__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "torch.distributions.kl._Match.__le__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "issubclass",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._batch_trace_XXT": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "torch.distributions.kl._dispatch_kl": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplemented",
    "RuntimeWarning",
    "issubclass",
    "min",
    "reversed",
    "torch.distributions.kl._KL_REGISTRY",
    "torch.distributions.kl._Match",
    "torch.distributions.kl.warnings"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._euler_gamma": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "torch.distributions.kl._infinite_like": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "torch._six.inf"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_bernoulli_bernoulli": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_bernoulli_poisson": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_beta": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_exponential": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_gamma": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_infinity": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_normal": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_beta_uniform": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_binomial_binomial": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "NotImplementedError",
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_categorical_categorical": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_dirichlet_dirichlet": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_expfamily_expfamily": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NotImplementedError",
    "_sum_rightmost",
    "len",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_exponential": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_gamma": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "torch.distributions.kl._euler_gamma",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_gumbel": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_infinity": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_exponential_normal": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_exponential": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_gamma": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_gumbel": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_infinity": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gamma_normal": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_geometric_geometric": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gumbel_gumbel": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "torch.distributions.kl._euler_gamma",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gumbel_infinity": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_gumbel_normal": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "torch.distributions.kl._euler_gamma",
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_halfnormal_halfnormal": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "torch.distributions.kl._kl_normal_normal",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_laplace_infinity": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_laplace_laplace": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_laplace_normal": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_lowrankmultivariatenormal_lowrankmultivariatenormal": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ValueError",
    "_batch_lowrank_logdet",
    "_batch_lowrank_mahalanobis",
    "_batch_trtrs_lower",
    "torch.distributions.kl._batch_trace_XXT",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_lowrankmultivariatenormal_multivariatenormal": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "_batch_diag",
    "_batch_lowrank_logdet",
    "_batch_mahalanobis",
    "_batch_trtrs_lower",
    "_batch_vector_diag",
    "torch.distributions.kl._batch_trace_XXT",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_multivariatenormal_lowrankmultivariatenormal": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "_batch_diag",
    "_batch_lowrank_logdet",
    "_batch_lowrank_mahalanobis",
    "_batch_trtrs_lower",
    "torch.distributions.kl._batch_trace_XXT",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_multivariatenormal_multivariatenormal": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "_batch_diag",
    "_batch_mahalanobis",
    "_batch_trtrs_lower",
    "torch.distributions.kl._batch_trace_XXT",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_normal_gumbel": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_normal_infinity": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_normal_normal": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_onehotcategorical_onehotcategorical": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "torch.distributions.kl._kl_categorical_categorical",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_exponential": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_gamma": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_infinity": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_normal": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_pareto_pareto": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_poisson_infinity": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "torch.distributions.kl._infinite_like",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_poisson_poisson": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_transformed_transformed": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "NotImplementedError",
    "_sum_rightmost",
    "len",
    "torch.distributions.kl.kl_divergence",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_beta": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl._x_log_x",
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_exponetial": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_gamma": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl._x_log_x",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_gumbel": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "torch.distributions.kl.register_kl",
    "torch.distributions.kl.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_normal": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "torch.distributions.kl.math",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_pareto": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl._x_log_x",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._kl_uniform_uniform": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.kl.register_kl"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl._x_log_x": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "torch.distributions.kl.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.distributions.kl.kl_divergence": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "KeyError",
    "NotImplemented",
    "NotImplementedError",
    "fun",
    "torch.distributions.kl._KL_MEMOIZE",
    "torch.distributions.kl._dispatch_kl",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.kl.register_kl": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "issubclass",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl.register_kl.decorator": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "torch.distributions.kl._KL_MEMOIZE",
    "torch.distributions.kl._KL_REGISTRY"
   ]
  },
  "type": "function"
 },
 "torch.distributions.kl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.kl.total_ordering": {
  "data": {
   "shadows": "functools.total_ordering"
  },
  "type": "import"
 },
 "torch.distributions.kl.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.distributions.laplace": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.laplace.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.laplace.Laplace": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.laplace.Laplace.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.laplace.Laplace",
    "torch.distributions.laplace.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.cdf": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "torch.distributions.laplace.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.entropy": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "torch.distributions.laplace.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.expand": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super",
    "torch.distributions.laplace.Laplace",
    "torch.distributions.laplace.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.icdf": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "torch.distributions.laplace.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.log_prob": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "torch.distributions.laplace.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.mean": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.rsample": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "torch.distributions.laplace.torch",
    "torch.distributions.utils._finfo"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.stddev": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Laplace.variance": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.laplace.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.laplace._finfo": {
  "data": {
   "shadows": "torch.distributions.utils._finfo"
  },
  "type": "import"
 },
 "torch.distributions.laplace.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.laplace.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.laplace.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.log_normal": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.log_normal.ExpTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.ExpTransform"
  },
  "type": "import"
 },
 "torch.distributions.log_normal.LogNormal": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.log_normal.LogNormal.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "super",
    "torch.distributions.log_normal.LogNormal",
    "torch.distributions.normal.Normal",
    "torch.distributions.transforms.ExpTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.entropy": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.expand": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super",
    "torch.distributions.log_normal.LogNormal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.loc": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.mean": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.scale": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.log_normal.LogNormal.variance": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.log_normal.Normal": {
  "data": {
   "shadows": "torch.distributions.normal.Normal"
  },
  "type": "import"
 },
 "torch.distributions.log_normal.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.log_normal.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.log_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.logistic_normal.ComposeTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.ComposeTransform"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal.ExpTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.ExpTransform"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal.LogisticNormal": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.logistic_normal.LogisticNormal.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "super",
    "torch.distributions.logistic_normal.LogisticNormal",
    "torch.distributions.logistic_normal.torch",
    "torch.distributions.normal.Normal",
    "torch.distributions.transforms.StickBreakingTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.logistic_normal.LogisticNormal.expand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "torch.distributions.logistic_normal.LogisticNormal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.logistic_normal.LogisticNormal.loc": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.logistic_normal.LogisticNormal.scale": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.logistic_normal.Normal": {
  "data": {
   "shadows": "torch.distributions.normal.Normal"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal.StickBreakingTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.StickBreakingTransform"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.logistic_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.lowrank_multivariate_normal.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "super",
    "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal",
    "torch.distributions.lowrank_multivariate_normal._batch_capacitance_tril",
    "torch.distributions.lowrank_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.covariance_matrix": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "torch.distributions.lowrank_multivariate_normal._batch_vector_diag",
    "torch.distributions.lowrank_multivariate_normal.torch",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.entropy": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "len",
    "torch.distributions.lowrank_multivariate_normal._batch_lowrank_logdet",
    "torch.distributions.lowrank_multivariate_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.expand": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "super",
    "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal",
    "torch.distributions.lowrank_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.log_prob": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "torch.distributions.lowrank_multivariate_normal._batch_lowrank_logdet",
    "torch.distributions.lowrank_multivariate_normal._batch_lowrank_mahalanobis",
    "torch.distributions.lowrank_multivariate_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.mean": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.precision_matrix": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "torch.distributions.lowrank_multivariate_normal._batch_vector_diag",
    "torch.distributions.lowrank_multivariate_normal.torch",
    "torch.distributions.multivariate_normal._batch_trtrs_lower",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.rsample": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "torch.distributions.lowrank_multivariate_normal.torch",
    "torch.distributions.multivariate_normal._batch_mv",
    "torch.distributions.utils._standard_normal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.scale_tril": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "torch.distributions.lowrank_multivariate_normal.torch",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal.variance": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_capacitance_tril": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "torch.distributions.lowrank_multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_diag": {
  "data": {
   "shadows": "torch.distributions.multivariate_normal._batch_diag"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_lowrank_logdet": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal._batch_diag"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_lowrank_mahalanobis": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal._batch_mahalanobis",
    "torch.distributions.multivariate_normal._batch_mv"
   ]
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_mahalanobis": {
  "data": {
   "shadows": "torch.distributions.multivariate_normal._batch_mahalanobis"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_mv": {
  "data": {
   "shadows": "torch.distributions.multivariate_normal._batch_mv"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_trtrs_lower": {
  "data": {
   "shadows": "torch.distributions.multivariate_normal._batch_trtrs_lower"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal._batch_vector_diag": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "torch.distributions.lowrank_multivariate_normal._standard_normal": {
  "data": {
   "shadows": "torch.distributions.utils._standard_normal"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.lowrank_multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.multinomial": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.multinomial.Categorical": {
  "data": {
   "shadows": "torch.distributions.Categorical"
  },
  "type": "import"
 },
 "torch.distributions.multinomial.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.multinomial.Multinomial": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.multinomial.Multinomial.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.Categorical",
    "torch.distributions.multinomial.Multinomial"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial._new": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.expand": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "super",
    "torch.distributions.multinomial.Multinomial",
    "torch.distributions.multinomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.log_prob": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "torch._six.inf",
    "torch.distributions.multinomial.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.logits": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.mean": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.param_shape": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.probs": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.sample": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "list",
    "range",
    "torch.distributions.multinomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.support": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.integer_interval"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Multinomial.variance": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multinomial.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.multinomial.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.multinomial.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.multinomial.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.distributions.multinomial.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.multivariate_normal": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.multivariate_normal.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "torch.distributions.constraints.lower_cholesky",
    "torch.distributions.constraints.positive_definite",
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.real_vector",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.distributions.multivariate_normal.MultivariateNormal",
    "torch.distributions.multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.covariance_matrix": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal.torch",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.entropy": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "torch.distributions.multivariate_normal._batch_diag",
    "torch.distributions.multivariate_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.expand": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "super",
    "torch.distributions.multivariate_normal.MultivariateNormal",
    "torch.distributions.multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.log_prob": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal._batch_diag",
    "torch.distributions.multivariate_normal._batch_mahalanobis",
    "torch.distributions.multivariate_normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.mean": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.precision_matrix": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal.torch",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.rsample": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal._batch_mv",
    "torch.distributions.multivariate_normal.torch",
    "torch.distributions.utils._standard_normal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.scale_tril": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal.MultivariateNormal.variance": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal._batch_diag": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal._batch_mahalanobis": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal._batch_trtrs_lower"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal._batch_mv": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal._batch_trtrs_lower": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "torch.distributions.multivariate_normal.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.distributions.multivariate_normal._standard_normal": {
  "data": {
   "shadows": "torch.distributions.utils._standard_normal"
  },
  "type": "import"
 },
 "torch.distributions.multivariate_normal.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.multivariate_normal.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.multivariate_normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.multivariate_normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.negative_binomial.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.NegativeBinomial": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.constraints.greater_than_eq",
    "torch.distributions.constraints.half_open_interval",
    "torch.distributions.constraints.nonnegative_integer",
    "torch.distributions.constraints.real",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.distributions.negative_binomial.NegativeBinomial",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial._gamma": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.distributions.negative_binomial.torch",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial._new": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.expand": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "super",
    "torch.distributions.negative_binomial.NegativeBinomial",
    "torch.distributions.negative_binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.log_prob": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "torch.distributions.negative_binomial.torch",
    "torch.nn.functional.logsigmoid"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.logits": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.probs_to_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.mean": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property",
    "torch.distributions.negative_binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.param_shape": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.probs": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.logits_to_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.sample": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "torch.distributions.negative_binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.NegativeBinomial.variance": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property",
    "torch.distributions.negative_binomial.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.negative_binomial.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.logits_to_probs": {
  "data": {
   "shadows": "torch.distributions.utils.logits_to_probs"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.probs_to_logits": {
  "data": {
   "shadows": "torch.distributions.utils.probs_to_logits"
  },
  "type": "import"
 },
 "torch.distributions.negative_binomial.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.normal": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.normal.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.normal.Normal": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.normal.Normal.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.normal.Normal",
    "torch.distributions.normal.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal._log_normalizer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "torch.distributions.normal.math",
    "torch.distributions.normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal._natural_params": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.cdf": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.distributions.normal.math",
    "torch.distributions.normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.entropy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "torch.distributions.normal.math",
    "torch.distributions.normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.expand": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "torch.distributions.normal.Normal",
    "torch.distributions.normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.icdf": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "torch.distributions.normal.math",
    "torch.distributions.normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.log_prob": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "torch.distributions.normal.math"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.mean": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.rsample": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "torch.distributions.normal.torch",
    "torch.distributions.utils._standard_normal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.sample": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "torch.distributions.normal.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.stddev": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Normal.variance": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.normal.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.normal._standard_normal": {
  "data": {
   "shadows": "torch.distributions.utils._standard_normal"
  },
  "type": "import"
 },
 "torch.distributions.normal.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.normal.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.normal.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.normal.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.one_hot_categorical": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.one_hot_categorical.Categorical": {
  "data": {
   "shadows": "torch.distributions.categorical.Categorical"
  },
  "type": "import"
 },
 "torch.distributions.one_hot_categorical.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "super",
    "torch.distributions.categorical.Categorical",
    "torch.distributions.one_hot_categorical.OneHotCategorical"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical._new": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical._param": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.entropy": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.enumerate_support": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "torch.distributions.one_hot_categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.expand": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "super",
    "torch.distributions.one_hot_categorical.OneHotCategorical",
    "torch.distributions.one_hot_categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.log_prob": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.logits": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.mean": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.param_shape": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.probs": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.sample": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "torch.distributions.one_hot_categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.OneHotCategorical.variance": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.one_hot_categorical.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.one_hot_categorical.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.pareto": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.pareto.AffineTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.AffineTransform"
  },
  "type": "import"
 },
 "torch.distributions.pareto.ExpTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.ExpTransform"
  },
  "type": "import"
 },
 "torch.distributions.pareto.Exponential": {
  "data": {
   "shadows": "torch.distributions.exponential.Exponential"
  },
  "type": "import"
 },
 "torch.distributions.pareto.Pareto": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.pareto.Pareto.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super",
    "torch.distributions.exponential.Exponential",
    "torch.distributions.pareto.Pareto",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.ExpTransform",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.entropy": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.expand": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super",
    "torch.distributions.pareto.Pareto"
   ]
  },
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.mean": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.support": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.greater_than"
   ]
  },
  "type": "function"
 },
 "torch.distributions.pareto.Pareto.variance": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.pareto.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.pareto.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.pareto.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.pareto.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.poisson": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.poisson.ExponentialFamily": {
  "data": {
   "shadows": "torch.distributions.exp_family.ExponentialFamily"
  },
  "type": "import"
 },
 "torch.distributions.poisson.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.poisson.Poisson": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.distributions.constraints.nonnegative_integer",
    "torch.distributions.constraints.positive",
    "torch.distributions.exp_family.ExponentialFamily"
   ]
  },
  "type": "class"
 },
 "torch.distributions.poisson.Poisson.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.poisson.Poisson",
    "torch.distributions.poisson.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson._log_normalizer": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "torch.distributions.poisson.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson._natural_params": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property",
    "torch.distributions.poisson.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.expand": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super",
    "torch.distributions.poisson.Poisson",
    "torch.distributions.poisson.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.log_prob": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.mean": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.sample": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "torch.distributions.poisson.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.Poisson.variance": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.poisson.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.poisson.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.poisson.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.relaxed_bernoulli.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli",
    "torch.distributions.relaxed_bernoulli.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli._new": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.expand": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super",
    "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli",
    "torch.distributions.relaxed_bernoulli.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.log_prob": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.logits": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.probs_to_logits"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.param_shape": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.probs": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property",
    "torch.distributions.utils.logits_to_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli.rsample": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.distributions.relaxed_bernoulli.torch",
    "torch.distributions.utils.clamp_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "super",
    "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli",
    "torch.distributions.relaxed_bernoulli.RelaxedBernoulli",
    "torch.distributions.transforms.SigmoidTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.expand": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "super",
    "torch.distributions.relaxed_bernoulli.RelaxedBernoulli"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.logits": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.probs": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.RelaxedBernoulli.temperature": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_bernoulli.SigmoidTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.SigmoidTransform"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.clamp_probs": {
  "data": {
   "shadows": "torch.distributions.utils.clamp_probs"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.logits_to_probs": {
  "data": {
   "shadows": "torch.distributions.utils.logits_to_probs"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.probs_to_logits": {
  "data": {
   "shadows": "torch.distributions.utils.probs_to_logits"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_bernoulli.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.relaxed_categorical.Categorical": {
  "data": {
   "shadows": "torch.distributions.categorical.Categorical"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super",
    "torch.distributions.categorical.Categorical",
    "torch.distributions.relaxed_categorical.ExpRelaxedCategorical"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical._new": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.expand": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "torch.distributions.relaxed_categorical.ExpRelaxedCategorical",
    "torch.distributions.relaxed_categorical.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.log_prob": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "float",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.logits": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.param_shape": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.probs": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpRelaxedCategorical.rsample": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "torch.distributions.relaxed_categorical.torch",
    "torch.distributions.utils.clamp_probs"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.ExpTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.ExpTransform"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "super",
    "torch.distributions.relaxed_categorical.ExpRelaxedCategorical",
    "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical",
    "torch.distributions.transforms.ExpTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.expand": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "super",
    "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.logits": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.probs": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical.temperature": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.relaxed_categorical.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.clamp_probs": {
  "data": {
   "shadows": "torch.distributions.utils.clamp_probs"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.relaxed_categorical.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.studentT": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.studentT.Chi2": {
  "data": {
   "shadows": "torch.distributions.Chi2"
  },
  "type": "import"
 },
 "torch.distributions.studentT.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.studentT.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.studentT.StudentT": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.studentT.StudentT.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "super",
    "torch.distributions.Chi2",
    "torch.distributions.studentT.StudentT",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.entropy": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.distributions.studentT.math",
    "torch.distributions.studentT.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.expand": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "torch.distributions.studentT.StudentT",
    "torch.distributions.studentT.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.log_prob": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "torch.distributions.studentT.math",
    "torch.distributions.studentT.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.mean": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.rsample": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "torch.distributions.studentT.torch",
    "torch.distributions.utils._standard_normal"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT.StudentT.variance": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property",
    "torch._six.inf",
    "torch._six.nan"
   ]
  },
  "type": "function"
 },
 "torch.distributions.studentT._standard_normal": {
  "data": {
   "shadows": "torch.distributions.utils._standard_normal"
  },
  "type": "import"
 },
 "torch.distributions.studentT.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.studentT.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.studentT.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.distributions.studentT.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.studentT.nan": {
  "data": {
   "shadows": "torch._six.nan"
  },
  "type": "import"
 },
 "torch.distributions.studentT.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.transformed_distribution": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.transformed_distribution.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.transformed_distribution.Transform": {
  "data": {
   "shadows": "torch.distributions.transforms.Transform"
  },
  "type": "import"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "max",
    "super",
    "torch.distributions.transformed_distribution.TransformedDistribution",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution._monotonize_cdf": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "transform",
    "transform.sign"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.cdf": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "transform",
    "transform.inv"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.expand": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "super",
    "torch.distributions.transformed_distribution.TransformedDistribution",
    "torch.distributions.transformed_distribution.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.has_rsample": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.icdf": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "transform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.log_prob": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "reversed",
    "torch.distributions.utils._sum_rightmost",
    "transform",
    "transform.event_dim",
    "transform.inv",
    "transform.log_abs_det_jacobian"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.rsample": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "torch.distributions.transformed_distribution.torch",
    "transform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.sample": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "torch.distributions.transformed_distribution.torch",
    "transform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution.TransformedDistribution.support": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transformed_distribution._sum_rightmost": {
  "data": {
   "shadows": "torch.distributions.utils._sum_rightmost"
  },
  "type": "import"
 },
 "torch.distributions.transformed_distribution.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.transformed_distribution.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.transforms": {
  "data": {
   "symbols_in_volume": [
    "torch.distributions.transforms.ComposeTransform"
   ]
  },
  "type": "module"
 },
 "torch.distributions.transforms.AbsTransform": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.AbsTransform.__eq__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.AbsTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.AbsTransform._call": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "torch.distributions.transforms.AbsTransform._inverse": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.AffineTransform.__eq__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.numbers"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "super",
    "torch.distributions.transforms.AffineTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform._call": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform._inverse": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "abs",
    "isinstance",
    "torch.distributions.transforms.math",
    "torch.distributions.transforms.numbers",
    "torch.distributions.transforms.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.AffineTransform.sign": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "isinstance",
    "property",
    "torch.distributions.transforms.numbers"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.ComposeTransform.__call__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "part"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.__eq__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.ComposeTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "super",
    "torch.distributions.transforms.ComposeTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.__repr__": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.bijective": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "all",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.codomain": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.real"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.domain": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.real"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.event_dim": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "max",
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.inv": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property",
    "reversed",
    "torch.distributions.transforms.ComposeTransform",
    "torch.distributions.transforms.weakref"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "part",
    "part.event_dim",
    "part.log_abs_det_jacobian",
    "torch.distributions.transforms.torch",
    "torch.distributions.utils._sum_rightmost"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ComposeTransform.sign": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "torch.distributions.utils.lazy_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.constraints.real",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.ExpTransform.__eq__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.ExpTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform._call": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform._inverse": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "torch.distributions.transforms.ExpTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "torch.distributions.constraints.lower_cholesky",
    "torch.distributions.constraints.real",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.LowerCholeskyTransform.__eq__": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.LowerCholeskyTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform._call": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "range",
    "torch.distributions.transforms.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform._call_on_event": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform._inverse": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "range",
    "torch.distributions.transforms.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.LowerCholeskyTransform._inverse_on_event": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.PowerTransform.__eq__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.PowerTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "super",
    "torch.distributions.transforms.PowerTransform",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform._call": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform._inverse": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "torch.distributions.transforms.PowerTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.unit_interval",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.SigmoidTransform.__eq__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.SigmoidTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform._call": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "torch.distributions.transforms.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform._inverse": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "torch.distributions.transforms.SigmoidTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "torch.distributions.transforms.SoftmaxTransform": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.SoftmaxTransform.__eq__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.SoftmaxTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.SoftmaxTransform._call": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "torch.distributions.transforms.SoftmaxTransform._inverse": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "torch.distributions.constraints.real",
    "torch.distributions.constraints.simplex",
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.StickBreakingTransform.__eq__": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms.StickBreakingTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform._call": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "torch.distributions.transforms.torch",
    "torch.nn.functional.pad"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform._inverse": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "torch.distributions.transforms.StickBreakingTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "torch.distributions.transforms.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms.Transform.__call__": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__eq__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__ne__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.__repr__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform._call": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform._inv_call": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform._inverse": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.inv": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property",
    "torch.distributions.transforms._InverseTransform",
    "torch.distributions.transforms.weakref"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.log_abs_det_jacobian": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.Transform.sign": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "torch.distributions.transforms.Transform"
   ]
  },
  "type": "class"
 },
 "torch.distributions.transforms._InverseTransform.__call__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.__eq__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "isinstance",
    "torch.distributions.transforms._InverseTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "super",
    "torch.distributions.transforms._InverseTransform"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.bijective": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.codomain": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.domain": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.event_dim": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.inv": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.log_abs_det_jacobian": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "torch.distributions.transforms._InverseTransform.sign": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.transforms.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "torch.distributions.transforms._sum_rightmost": {
  "data": {
   "shadows": "torch.distributions.utils._sum_rightmost"
  },
  "type": "import"
 },
 "torch.distributions.transforms.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.transforms.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.transforms.identity_transform": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "torch.distributions.transforms.lazy_property": {
  "data": {
   "shadows": "torch.distributions.utils.lazy_property"
  },
  "type": "import"
 },
 "torch.distributions.transforms.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.transforms.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "torch.distributions.transforms.pad": {
  "data": {
   "shadows": "torch.nn.functional.pad"
  },
  "type": "import"
 },
 "torch.distributions.transforms.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.transforms.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "torch.distributions.uniform": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.uniform.Distribution": {
  "data": {
   "shadows": "torch.distributions.distribution.Distribution"
  },
  "type": "import"
 },
 "torch.distributions.uniform.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.uniform.Uniform": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent",
    "torch.distributions.distribution.Distribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.uniform.Uniform.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numbers.Number",
    "super",
    "torch.distributions.uniform.Uniform",
    "torch.distributions.uniform.torch",
    "torch.distributions.utils.broadcast_all"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.cdf": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.entropy": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "torch.distributions.uniform.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.expand": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "super",
    "torch.distributions.uniform.Uniform",
    "torch.distributions.uniform.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.icdf": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.log_prob": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "torch.distributions.uniform.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.mean": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.rsample": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "torch.distributions.uniform.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.stddev": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.support": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "torch.distributions.constraints.dependent_property",
    "torch.distributions.constraints.interval"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.Uniform.variance": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.distributions.uniform.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.uniform.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.uniform.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.utils": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "torch.distributions.utils._Finfo",
    "torch.distributions.utils.torch"
   ]
  },
  "type": "module"
 },
 "torch.distributions.utils.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "torch.distributions.utils.Number": {
  "data": {
   "shadows": "numbers.Number"
  },
  "type": "import"
 },
 "torch.distributions.utils._FINFO": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "torch.distributions.utils._Finfo": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "torch.distributions.utils._default_promotion": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "torch.distributions.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils._finfo": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "torch.distributions.utils._FINFO"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils._standard_normal": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "torch.distributions.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils._sum_rightmost": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "torch.distributions.utils.broadcast_all": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "map",
    "new_tensor",
    "numbers.Number",
    "torch.distributions.utils._default_promotion",
    "torch.distributions.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils.clamp_probs": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "torch.distributions.utils._finfo"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils.lazy_property": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.distributions.utils.lazy_property.__get__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "setattr",
    "torch.distributions.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils.lazy_property.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "functools.update_wrapper"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils.logits_to_probs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "torch.distributions.utils.torch",
    "torch.nn.functional.softmax"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.distributions.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "torch.distributions.utils.probs_to_logits": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "torch.distributions.utils.clamp_probs",
    "torch.distributions.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.distributions.utils.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "torch.distributions.weibull": {
  "data": {},
  "type": "module"
 },
 "torch.distributions.weibull.AffineTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.AffineTransform"
  },
  "type": "import"
 },
 "torch.distributions.weibull.Exponential": {
  "data": {
   "shadows": "torch.distributions.exponential.Exponential"
  },
  "type": "import"
 },
 "torch.distributions.weibull.PowerTransform": {
  "data": {
   "shadows": "torch.distributions.transforms.PowerTransform"
  },
  "type": "import"
 },
 "torch.distributions.weibull.TransformedDistribution": {
  "data": {
   "shadows": "torch.distributions.transformed_distribution.TransformedDistribution"
  },
  "type": "import"
 },
 "torch.distributions.weibull.Weibull": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.distributions.constraints.positive",
    "torch.distributions.transformed_distribution.TransformedDistribution"
   ]
  },
  "type": "class"
 },
 "torch.distributions.weibull.Weibull.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "super",
    "torch.distributions.exponential.Exponential",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.PowerTransform",
    "torch.distributions.utils.broadcast_all",
    "torch.distributions.weibull.Weibull",
    "torch.distributions.weibull.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.entropy": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "torch.distributions.gumbel.euler_constant",
    "torch.distributions.weibull.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.expand": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super",
    "torch.distributions.transforms.AffineTransform",
    "torch.distributions.transforms.PowerTransform",
    "torch.distributions.weibull.Weibull"
   ]
  },
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.mean": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property",
    "torch.distributions.weibull.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.weibull.Weibull.variance": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property",
    "torch.distributions.weibull.torch"
   ]
  },
  "type": "function"
 },
 "torch.distributions.weibull.broadcast_all": {
  "data": {
   "shadows": "torch.distributions.utils.broadcast_all"
  },
  "type": "import"
 },
 "torch.distributions.weibull.constraints": {
  "data": {
   "shadows": "torch.distributions.constraints"
  },
  "type": "import"
 },
 "torch.distributions.weibull.euler_constant": {
  "data": {
   "shadows": "torch.distributions.gumbel.euler_constant"
  },
  "type": "import"
 },
 "torch.distributions.weibull.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.dll_paths": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "torch.enable_grad": {
  "data": {
   "shadows": "torch.autograd.enable_grad"
  },
  "type": "import"
 },
 "torch.for_onnx": {
  "data": {},
  "type": "module"
 },
 "torch.functional": {
  "data": {},
  "type": "module"
 },
 "torch.functional.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "torch.functional.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "torch.functional.annotate": {
  "data": {
   "shadows": "torch._utils.annotate"
  },
  "type": "import"
 },
 "torch.functional.argmax": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "input",
    "input.contiguous",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.argmin": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "input",
    "input.contiguous",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.argsort": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "input",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.broadcast_tensors": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.btrifact": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "torch.functional.btriunpack": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "enumerate",
    "itertools.product",
    "list",
    "map",
    "range",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.chain_matmul": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.einsum": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "torch.functional.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.functional.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.functional.isfinite": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "torch._six.inf",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.isinf": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "torch._six.inf",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.isnan": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.functional.meshgrid": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "list",
    "torch.functional.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.functional.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "torch.functional.norm": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "input",
    "input.dim",
    "range",
    "torch.functional.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.functional.potrf": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "torch.functional.torch",
    "torch.functional.warnings"
   ]
  },
  "type": "function"
 },
 "torch.functional.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "torch.functional.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "torch.functional.split": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "torch.functional.stft": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "input",
    "input.dim",
    "input.shape",
    "input.size",
    "input.view",
    "int",
    "list",
    "torch.functional.torch",
    "torch.nn.functional.pad"
   ]
  },
  "type": "function"
 },
 "torch.functional.tensordot": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "range",
    "torch.functional.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.functional.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.functional.unique": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "input",
    "sorted",
    "torch.functional.torch"
   ]
  },
  "type": "function"
 },
 "torch.functional.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.get_nvToolsExt_path": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "torch.os"
   ]
  },
  "type": "function"
 },
 "torch.hub": {
  "data": {
   "symbols_in_volume": [
    "torch.hub.sys"
   ]
  },
  "type": "module"
 },
 "torch.hub.DEFAULT_TORCH_HUB_DIR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "torch.hub.ENV_TORCH_HUB_DIR": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "torch.hub.MASTER_BRANCH": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "torch.hub.READ_DATA_CHUNK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "torch.hub._check_module_exists": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "torch.hub.imp",
    "torch.hub.importlib",
    "torch.hub.sys"
   ]
  },
  "type": "function"
 },
 "torch.hub._download_url_to_file": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "open",
    "torch.hub.READ_DATA_CHUNK",
    "torch.hub.sys",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "torch.hub._git_archive_link": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "torch.hub._load_attr_from_module": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dir",
    "getattr",
    "torch.hub.importlib"
   ]
  },
  "type": "function"
 },
 "torch.hub._remove_if_exists": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "torch.hub.os",
    "torch.hub.shutil"
   ]
  },
  "type": "function"
 },
 "torch.hub.hub_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "torch.hub.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "torch.hub.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "torch.hub.importlib.find_loader": {
  "data": {
   "shadows": "importlib.find_loader"
  },
  "type": "import"
 },
 "torch.hub.importlib.util": {
  "data": {
   "shadows": "importlib.util"
  },
  "type": "import"
 },
 "torch.hub.load": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "callable",
    "func",
    "isinstance",
    "len",
    "str",
    "torch.hub.DEFAULT_TORCH_HUB_DIR",
    "torch.hub.ENV_TORCH_HUB_DIR",
    "torch.hub.MASTER_BRANCH",
    "torch.hub._check_module_exists",
    "torch.hub._download_url_to_file",
    "torch.hub._git_archive_link",
    "torch.hub._load_attr_from_module",
    "torch.hub._remove_if_exists",
    "torch.hub.hub_dir",
    "torch.hub.os",
    "torch.hub.shutil",
    "torch.hub.sys",
    "torch.hub.zipfile"
   ]
  },
  "type": "function"
 },
 "torch.hub.model_zoo": {
  "data": {
   "shadows": "torch.utils.model_zoo"
  },
  "type": "import"
 },
 "torch.hub.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.hub.set_dir": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "torch.hub.hub_dir"
   ]
  },
  "type": "function"
 },
 "torch.hub.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "torch.hub.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.hub.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "torch.hub.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.hub.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "torch.hub.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "torch.hub.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "torch.is_storage": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.is_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop": {
  "data": {
   "symbols_in_volume": [
    "torch.jit.batchop.batch_add",
    "torch.jit.batchop.batch_add_scalar",
    "torch.jit.batchop.batch_any",
    "torch.jit.batchop.batch_argmax",
    "torch.jit.batchop.batch_cat2",
    "torch.jit.batchop.batch_cat3",
    "torch.jit.batchop.batch_dim",
    "torch.jit.batchop.batch_div",
    "torch.jit.batchop.batch_eq",
    "torch.jit.batchop.batch_fmod",
    "torch.jit.batchop.batch_from_scalar_tensor",
    "torch.jit.batchop.batch_gt",
    "torch.jit.batchop.batch_gt_one_scalar",
    "torch.jit.batchop.batch_gt_scalar",
    "torch.jit.batchop.batch_index_select",
    "torch.jit.batchop.batch_lt",
    "torch.jit.batchop.batch_matmul",
    "torch.jit.batchop.batch_mm",
    "torch.jit.batchop.batch_mul",
    "torch.jit.batchop.batch_mul_scalar",
    "torch.jit.batchop.batch_narrow",
    "torch.jit.batchop.batch_neg",
    "torch.jit.batchop.batch_neg_scalar",
    "torch.jit.batchop.batch_relu",
    "torch.jit.batchop.batch_select",
    "torch.jit.batchop.batch_sigmoid",
    "torch.jit.batchop.batch_size",
    "torch.jit.batchop.batch_softmax",
    "torch.jit.batchop.batch_squeeze",
    "torch.jit.batchop.batch_sub",
    "torch.jit.batchop.batch_sub_scalar",
    "torch.jit.batchop.batch_sum",
    "torch.jit.batchop.batch_tanh",
    "torch.jit.batchop.batch_topk",
    "torch.jit.batchop.batch_type_as",
    "torch.jit.batchop.batch_unsqueeze",
    "torch.jit.batchop.batch_update",
    "torch.jit.batchop.batch_view",
    "torch.jit.batchop.batch_view_as",
    "torch.jit.batchop.batch_where",
    "torch.jit.batchop.batch_where_scalar",
    "torch.jit.batchop.batch_zeros_like",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "module"
 },
 "torch.jit.batchop.BatchTensor": {
  "data": {
   "shadows": "torch.jit.BatchTensor"
  },
  "type": "import"
 },
 "torch.jit.batchop.batch_add": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_add_scalar": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "float",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_any": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_argmax": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "bool",
    "int",
    "range",
    "torch.jit.batchop.batch_size",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_cat2": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "bool",
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_cat3": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "bool",
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_dim": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_div": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_eq": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_fmod": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_from_scalar_tensor": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_gt": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_gt_one_scalar": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "float",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_gt_scalar": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_index_select": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "int",
    "range",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_lt": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_matmul": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_mm": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_mul": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_mul_scalar": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_narrow": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "bool",
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_neg": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_neg_scalar": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_relu": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_select": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bool",
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_sigmoid": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_size": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_softmax": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "bool",
    "int",
    "range",
    "torch.jit.batchop.batch_size",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_squeeze": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_sub": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "float",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_sub_scalar": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_sum": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "range",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_tanh": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_topk": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "bool",
    "int",
    "range",
    "sorted",
    "torch.jit.batchop.batch_size",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_type_as": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_unsqueeze": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "int",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_update": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_view": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "bool",
    "range",
    "torch.jit.batchop.batch_size",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_view_as": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_where": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "range",
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_where_scalar": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.batch_zeros_like": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "torch.jit.batchop.torch"
   ]
  },
  "type": "function"
 },
 "torch.jit.batchop.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.jit.supported_ops": {
  "data": {
   "symbols_in_volume": [
    "torch.jit.supported_ops._list_supported_ops"
   ]
  },
  "type": "module"
 },
 "torch.jit.supported_ops.__doc__": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "torch.jit.supported_ops._list_supported_ops": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "callable",
    "dir",
    "emit_block",
    "emit_schema",
    "getattr",
    "hidden",
    "is_tensor_method"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_arg": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "emit_type",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_args": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "emit_arg",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_block": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_ret": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "emit_type"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_rets": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "emit_ret",
    "len"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_schema": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "emit_args",
    "emit_rets",
    "len"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.emit_type": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.hidden": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "torch.jit.supported_ops._list_supported_ops.is_tensor_method": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.jit.supported_ops.torch.jit": {
  "data": {
   "shadows": "torch.jit"
  },
  "type": "import"
 },
 "torch.manager_path": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "RuntimeError",
    "get_file_path",
    "prepare_multiprocessing_environment",
    "torch.os",
    "torch.platform"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing": {
  "data": {
   "symbols_in_volume": [
    "init_reductions",
    "torch.multiprocessing.__all__",
    "torch.multiprocessing.multiprocessing",
    "torch.multiprocessing.sys",
    "torch.multiprocessing.torch"
   ]
  },
  "type": "module"
 },
 "torch.multiprocessing.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "torch.multiprocessing._all_sharing_strategies": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "torch.multiprocessing._sharing_strategy": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "torch.multiprocessing.get_all_sharing_strategies": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "torch.multiprocessing._all_sharing_strategies"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.get_sharing_strategy": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "torch.multiprocessing._sharing_strategy"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "torch.multiprocessing.pool": {
  "data": {},
  "type": "module"
 },
 "torch.multiprocessing.pool.Pool": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "torch.multiprocessing.pool.multiprocessing"
   ]
  },
  "type": "class"
 },
 "torch.multiprocessing.pool.Pool._repopulate_pool": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "multiprocessing.util.debug",
    "range",
    "torch.multiprocessing.pool.clean_worker"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.pool.Pool._setup_queues": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "SimpleQueue"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.pool.clean_worker": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.multiprocessing.pool.gc",
    "torch.multiprocessing.pool.multiprocessing"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.pool.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "torch.multiprocessing.pool.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "torch.multiprocessing.pool.multiprocessing.pool": {
  "data": {
   "shadows": "multiprocessing.pool"
  },
  "type": "import"
 },
 "torch.multiprocessing.pool.util": {
  "data": {
   "shadows": "multiprocessing.util"
  },
  "type": "import"
 },
 "torch.multiprocessing.queue": {
  "data": {},
  "type": "module"
 },
 "torch.multiprocessing.queue.ConnectionWrapper": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.__getattr__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.recv": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "torch.multiprocessing.queue.pickle"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.queue.ConnectionWrapper.send": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "multiprocessing.reduction.ForkingPickler",
    "torch.multiprocessing.queue.io",
    "torch.multiprocessing.queue.pickle"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.queue.ForkingPickler": {
  "data": {
   "shadows": "multiprocessing.reduction.ForkingPickler"
  },
  "type": "import"
 },
 "torch.multiprocessing.queue.Queue": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.multiprocessing.queue.multiprocessing"
   ]
  },
  "type": "class"
 },
 "torch.multiprocessing.queue.Queue.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "super",
    "torch.multiprocessing.queue.ConnectionWrapper",
    "torch.multiprocessing.queue.Queue"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.queue.SimpleQueue": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch.multiprocessing.queue.multiprocessing"
   ]
  },
  "type": "class"
 },
 "torch.multiprocessing.queue.SimpleQueue._make_methods": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "torch.multiprocessing.queue.ConnectionWrapper",
    "torch.multiprocessing.queue.SimpleQueue"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.queue.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "torch.multiprocessing.queue.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "torch.multiprocessing.queue.multiprocessing.queues": {
  "data": {
   "shadows": "multiprocessing.queues"
  },
  "type": "import"
 },
 "torch.multiprocessing.queue.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "torch.multiprocessing.reductions.SharedCache"
   ]
  },
  "type": "module"
 },
 "torch.multiprocessing.reductions.ForkingPickler": {
  "data": {
   "shadows": "multiprocessing.reduction.ForkingPickler"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.SharedCache": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "torch.multiprocessing.reductions.SharedCache.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.threading"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.SharedCache.__setitem__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict.__setitem__",
    "len"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.SharedCache.free_dead_references": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "list",
    "max"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.StorageWeakRef": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.multiprocessing.reductions.StorageWeakRef.__del__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.StorageWeakRef.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.torch"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.StorageWeakRef.expired": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.torch"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.fd_id": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.os"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.init_reductions": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "multiprocessing.reduction.ForkingPickler.register",
    "torch.multiprocessing.reductions.reduce_event",
    "torch.multiprocessing.reductions.reduce_storage",
    "torch.multiprocessing.reductions.reduce_tensor",
    "torch.multiprocessing.reductions.torch"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.multiprocessing.resource_sharer": {
  "data": {
   "shadows": "multiprocessing.resource_sharer"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.rebuild_cuda_tensor": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "storage_cls",
    "storage_cls._new_shared_cuda",
    "torch.multiprocessing.reductions.StorageWeakRef",
    "torch.multiprocessing.reductions.shared_cache",
    "torch.multiprocessing.reductions.storage_from_cache",
    "torch.multiprocessing.reductions.torch"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_event": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.torch"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_storage_empty": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "cls"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_storage_fd": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.StorageWeakRef",
    "torch.multiprocessing.reductions.fd_id",
    "torch.multiprocessing.reductions.multiprocessing",
    "torch.multiprocessing.reductions.os",
    "torch.multiprocessing.reductions.shared_cache",
    "torch.multiprocessing.reductions.storage_from_cache",
    "torch.multiprocessing.reductions.sys"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_storage_filename": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.StorageWeakRef",
    "torch.multiprocessing.reductions.shared_cache",
    "torch.multiprocessing.reductions.storage_from_cache"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.rebuild_tensor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.torch"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.reduce_event": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.rebuild_event"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.reduce_storage": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "RuntimeError",
    "get_sharing_strategy",
    "torch.multiprocessing.reductions.StorageWeakRef",
    "torch.multiprocessing.reductions.fd_id",
    "torch.multiprocessing.reductions.multiprocessing",
    "torch.multiprocessing.reductions.rebuild_storage_empty",
    "torch.multiprocessing.reductions.rebuild_storage_fd",
    "torch.multiprocessing.reductions.rebuild_storage_filename",
    "torch.multiprocessing.reductions.shared_cache",
    "torch.multiprocessing.reductions.sys",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.reduce_tensor": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.multiprocessing.reductions.StorageWeakRef",
    "torch.multiprocessing.reductions.rebuild_cuda_tensor",
    "torch.multiprocessing.reductions.rebuild_tensor",
    "torch.multiprocessing.reductions.shared_cache",
    "torch.multiprocessing.reductions.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.shared_cache": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "torch.multiprocessing.reductions.storage_from_cache": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "torch.multiprocessing.reductions.shared_cache"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.reductions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.torch.utils.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.multiprocessing.reductions.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "torch.multiprocessing.set_sharing_strategy": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "torch.multiprocessing._all_sharing_strategies",
    "torch.multiprocessing._sharing_strategy"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn": {
  "data": {},
  "type": "module"
 },
 "torch.multiprocessing.spawn.SpawnContext": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "torch.multiprocessing.spawn.SpawnContext.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "enumerate",
    "torch.multiprocessing.spawn._python_version_check"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn.SpawnContext.join": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception",
    "len",
    "torch.multiprocessing.spawn.multiprocessing",
    "torch.multiprocessing.spawn.signal"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn.SpawnContext.pids": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn._python_version_check": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.multiprocessing.spawn.sys"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn._wrap": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "_prctl_pr_set_pdeathsig",
    "fn",
    "torch.multiprocessing.spawn.signal",
    "torch.multiprocessing.spawn.sys",
    "torch.multiprocessing.spawn.traceback"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.multiprocessing.connection": {
  "data": {
   "shadows": "multiprocessing.connection"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.spawn": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "fn",
    "range",
    "torch.multiprocessing.spawn.SpawnContext",
    "torch.multiprocessing.spawn._python_version_check",
    "torch.multiprocessing.spawn._wrap",
    "torch.multiprocessing.spawn.multiprocessing"
   ]
  },
  "type": "function"
 },
 "torch.multiprocessing.spawn.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "torch.multiprocessing.spawn.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.multiprocessing.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.multiprocessing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn": {
  "data": {},
  "type": "module"
 },
 "torch.nn._VF": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "torch.nn._VF.VFModule",
    "torch.nn._VF.sys"
   ]
  },
  "type": "module"
 },
 "torch.nn._VF.VFModule": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "torch.nn._VF.types"
   ]
  },
  "type": "class"
 },
 "torch.nn._VF.VFModule.__getattr__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "torch.nn._VF.VFModule.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "super",
    "torch.nn._VF.VFModule",
    "torch.nn._VF.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._VF.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.nn._VF.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._VF.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "torch.nn._functions": {
  "data": {},
  "type": "module"
 },
 "torch.nn._functions.thnn": {
  "data": {},
  "type": "module"
 },
 "torch.nn._functions.thnn._all_functions": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "torch.nn._functions.thnn.auto": {
  "data": {
   "symbols_in_volume": [
    "locals",
    "torch.nn._functions.thnn.auto._generate_function_classes"
   ]
  },
  "type": "module"
 },
 "torch.nn._functions.thnn.auto.Function": {
  "data": {
   "shadows": "torch.autograd.function.Function"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.InplaceFunction": {
  "data": {
   "shadows": "torch.autograd.function.InplaceFunction"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.THNN_H_PATH": {
  "data": {
   "shadows": "torch._thnn.utils.THNN_H_PATH"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto._find_buffers": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._generate_function_classes": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "double_backwards_fn",
    "make_default_double_backwards_fn",
    "symbolic_fn",
    "torch._thnn.utils.THNN_H_PATH",
    "torch._thnn.utils.parse_header",
    "torch.nn._functions.thnn.auto._make_function_class",
    "torch.nn._functions.thnn.auto._make_function_class_criterion"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._generate_function_classes.make_default_double_backwards_fn": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._generate_function_classes.make_default_double_backwards_fn.default_double_backwards_fn": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "dict",
    "has_argument",
    "torch.autograd.function.Function",
    "torch.autograd.function.InplaceFunction",
    "torch.nn._functions.thnn.auto._find_buffers",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class._initialize_buffers": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class.backward": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "input",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class.backward_cls_backward": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "double_backwards_fn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class.backward_cls_forward": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "_initialize_buffers",
    "acc_grad_parameters_fn",
    "any",
    "getattr",
    "input",
    "input.new",
    "input.size",
    "len",
    "list",
    "staticmethod",
    "tuple",
    "update_grad_input_fn"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class.forward": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_initialize_buffers",
    "collections.defaultdict",
    "getattr",
    "input",
    "input.new",
    "input.type",
    "isinstance",
    "len",
    "range",
    "staticmethod",
    "torch._thnn.type2backend",
    "torch.nn._functions.thnn.auto.torch",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class.has_argument": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class.symbolic": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "staticmethod",
    "symbolic_fn"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class_criterion": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "torch.autograd.function.Function",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class_criterion.backward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "input",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class_criterion.backward_cls_backward": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "double_backwards_fn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class_criterion.backward_cls_forward": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "getattr",
    "input",
    "itertools.repeat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class_criterion.forward": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "input",
    "input.new",
    "input.type",
    "len",
    "list",
    "staticmethod",
    "torch._thnn.type2backend"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto._make_function_class_criterion.symbolic": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "staticmethod",
    "symbolic_fn"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.once_differentiable": {
  "data": {
   "shadows": "torch.autograd.function.once_differentiable"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.parse_header": {
  "data": {
   "shadows": "torch._thnn.utils.parse_header"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto.type2backend": {
  "data": {
   "shadows": "torch._thnn.type2backend"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto_double_backwards": {
  "data": {
   "symbols_in_volume": [
    "torch.nn._functions.thnn.auto_double_backwards.elu_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.gatedlinear_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.hardshrink_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.hardtanh_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.klddivloss_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.l1loss_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.leakyrelu_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.logsigmoid_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.mseloss_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.nllloss_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.smoothl1loss_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.softmarginloss_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.softplus_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.softshrink_double_backwards",
    "torch.nn._functions.thnn.auto_double_backwards.threshold_double_backwards"
   ]
  },
  "type": "module"
 },
 "torch.nn._functions.thnn.auto_double_backwards.double_backwards_fns": {
  "data": {
   "lineno": 239
  },
  "type": "constant"
 },
 "torch.nn._functions.thnn.auto_double_backwards.elu_double_backwards": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "input",
    "input.exp",
    "input.type_as"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.gatedlinear_double_backwards": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "input",
    "input.narrow",
    "input.size",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.hardshrink_double_backwards": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "input",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.hardtanh_double_backwards": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "input",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.klddivloss_double_backwards": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "input",
    "input.nelement"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.l1loss_double_backwards": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "input",
    "input.nelement",
    "input.type_as",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.leakyrelu_double_backwards": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "input",
    "input.type_as",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.logsigmoid_double_backwards": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "input",
    "input.exp"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.mseloss_double_backwards": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "input",
    "input.nelement",
    "input.sum"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.nllloss_double_backwards": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.smoothl1loss_double_backwards": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "input",
    "input.nelement"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.softmarginloss_double_backwards": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "input",
    "input.exp",
    "input.nelement"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.softplus_double_backwards": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "input",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.softshrink_double_backwards": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "torch.nn._functions.thnn.auto_double_backwards.hardshrink_double_backwards"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.threshold_double_backwards": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "input",
    "input.type_as",
    "torch.nn._functions.thnn.auto_double_backwards.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_double_backwards.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto_symbolic": {
  "data": {
   "symbols_in_volume": [
    "torch.nn._functions.thnn.auto_symbolic.reflectionpad_symbolic",
    "torch.nn._functions.thnn.auto_symbolic.replicationpad_symbolic"
   ]
  },
  "type": "module"
 },
 "torch.nn._functions.thnn.auto_symbolic.prepare_onnx_paddings": {
  "data": {
   "shadows": "torch.autograd._functions.utils.prepare_onnx_paddings"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.auto_symbolic.reflectionpad_symbolic": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "input",
    "input.type",
    "len",
    "torch.autograd._functions.utils.prepare_onnx_paddings"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_symbolic.replicationpad_symbolic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "input",
    "input.type",
    "len",
    "torch.autograd._functions.utils.prepare_onnx_paddings"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.auto_symbolic.symbolic_fns": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "torch.nn._functions.thnn.fold": {
  "data": {},
  "type": "module"
 },
 "torch.nn._functions.thnn.fold.Col2Im": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn._functions.thnn.fold.Col2Im.backward": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "staticmethod",
    "torch.autograd.function.once_differentiable"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.fold.Col2Im.forward": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "input",
    "input.new",
    "input.type",
    "staticmethod",
    "torch._thnn.type2backend"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.fold.Function": {
  "data": {
   "shadows": "torch.autograd.function.Function"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.fold.Im2Col": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn._functions.thnn.fold.Im2Col.backward": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "staticmethod",
    "torch.autograd.function.once_differentiable"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.fold.Im2Col.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "input",
    "input.dim",
    "input.new",
    "input.size",
    "input.type",
    "staticmethod",
    "torch._thnn.type2backend"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.fold.once_differentiable": {
  "data": {
   "shadows": "torch.autograd.function.once_differentiable"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.fold.type2backend": {
  "data": {
   "shadows": "torch._thnn.type2backend"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.normalization": {
  "data": {
   "symbols_in_volume": [
    "torch.nn._functions.thnn.normalization.CrossMapLRN2d"
   ]
  },
  "type": "module"
 },
 "torch.nn._functions.thnn.normalization.CrossMapLRN2d": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn._functions.thnn.normalization.CrossMapLRN2d.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "super",
    "torch.nn._functions.thnn.normalization.CrossMapLRN2d"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.normalization.CrossMapLRN2d.backward": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "input",
    "input.new",
    "input.size",
    "int",
    "range",
    "torch.nn._functions.thnn.normalization.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.normalization.CrossMapLRN2d.forward": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "input",
    "input.dim",
    "input.new",
    "input.size",
    "input.type",
    "int",
    "range",
    "torch._thnn.type2backend",
    "torch.nn._functions.thnn.normalization.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.normalization.Function": {
  "data": {
   "shadows": "torch.autograd.function.Function"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.normalization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.normalization.type2backend": {
  "data": {
   "shadows": "torch._thnn.type2backend"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.sparse": {
  "data": {
   "symbols_in_volume": [
    "torch.nn._functions.thnn.sparse.EmbeddingBag"
   ]
  },
  "type": "module"
 },
 "torch.nn._functions.thnn.sparse.EmbeddingBag": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn._functions.thnn.sparse.EmbeddingBag._renorm": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.sparse.EmbeddingBag.backward": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "staticmethod",
    "torch.autograd.function.once_differentiable",
    "torch.nn._functions.thnn.sparse.MODE_MEAN",
    "torch.nn._functions.thnn.sparse.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.sparse.EmbeddingBag.forward": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "torch._thnn.type2backend",
    "torch.nn._functions.thnn.sparse.MODE_MEAN",
    "torch.nn._functions.thnn.sparse.MODE_SUM",
    "torch.nn._functions.thnn.sparse.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.thnn.sparse.Function": {
  "data": {
   "shadows": "torch.autograd.function.Function"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.sparse.MODE_MEAN": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "torch.nn._functions.thnn.sparse.MODE_SUM": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "torch.nn._functions.thnn.sparse.once_differentiable": {
  "data": {
   "shadows": "torch.autograd.function.once_differentiable"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._functions.thnn.sparse.type2backend": {
  "data": {
   "shadows": "torch._thnn.type2backend"
  },
  "type": "import"
 },
 "torch.nn._functions.vision": {
  "data": {},
  "type": "module"
 },
 "torch.nn._functions.vision.affine_grid_generator": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "len",
    "torch.backends.cudnn.enabled",
    "torch.backends.cudnn.is_acceptable",
    "torch.nn._functions.vision.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn._functions.vision.cudnn": {
  "data": {
   "shadows": "torch.backends.cudnn"
  },
  "type": "import"
 },
 "torch.nn._functions.vision.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._reduction": {
  "data": {},
  "type": "module"
 },
 "torch.nn._reduction.get_enum": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "torch.nn._reduction.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn._reduction.legacy_get_enum": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "torch.nn._reduction.get_enum",
    "torch.nn._reduction.legacy_get_string"
   ]
  },
  "type": "function"
 },
 "torch.nn._reduction.legacy_get_string": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "torch.nn._reduction.torch",
    "torch.nn._reduction.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn._reduction.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn._reduction.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.backends": {
  "data": {},
  "type": "module"
 },
 "torch.nn.backends.backend": {
  "data": {},
  "type": "module"
 },
 "torch.nn.backends.backend.FunctionBackend": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.backends.backend.FunctionBackend.__getattr__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.nn.backends.backend.FunctionBackend.__init__": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "torch.nn.backends.backend.FunctionBackend.register_function": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "RuntimeError",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.backends.thnn": {
  "data": {
   "symbols_in_volume": [
    "torch.nn.backends.thnn.THNNFunctionBackend",
    "torch.nn.backends.thnn._initialize_backend"
   ]
  },
  "type": "module"
 },
 "torch.nn.backends.thnn.THNNFunctionBackend": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "torch.nn.backends.thnn.THNNFunctionBackend.__copy__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "torch.nn.backends.thnn.THNNFunctionBackend.__deepcopy__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "torch.nn.backends.thnn.THNNFunctionBackend.__reduce__": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "torch.nn.backends.thnn._get_thnn_function_backend": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "torch.nn.backends.thnn._initialize_backend": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "torch.nn.backends.thnn._thnn_functions": {
  "data": {
   "shadows": "_all_functions"
  },
  "type": "import"
 },
 "torch.nn.backends.thnn.backend": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "torch.nn.grad": {
  "data": {},
  "type": "module"
 },
 "torch.nn.grad._grad_input_padding": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "dim_size",
    "len",
    "list",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad._grad_input_padding.dim_size": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "torch.nn.grad.conv1d_input": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "_single",
    "torch.nn.grad._grad_input_padding",
    "torch.nn.grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad.conv1d_weight": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "_single",
    "input",
    "input.contiguous",
    "input.shape",
    "torch.nn.grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad.conv2d_input": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "_pair",
    "torch.nn.grad._grad_input_padding",
    "torch.nn.grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad.conv2d_weight": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "_pair",
    "input",
    "input.contiguous",
    "input.shape",
    "torch.nn.grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad.conv3d_input": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "_triple",
    "torch.nn.grad._grad_input_padding",
    "torch.nn.grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad.conv3d_weight": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "_triple",
    "input",
    "input.contiguous",
    "input.shape",
    "torch.nn.grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.init": {
  "data": {
   "symbols_in_volume": [
    "torch.nn.init._make_deprecate",
    "torch.nn.init.constant_",
    "torch.nn.init.dirac_",
    "torch.nn.init.eye_",
    "torch.nn.init.kaiming_normal_",
    "torch.nn.init.kaiming_uniform_",
    "torch.nn.init.normal_",
    "torch.nn.init.orthogonal_",
    "torch.nn.init.sparse_",
    "torch.nn.init.uniform_",
    "torch.nn.init.xavier_normal_",
    "torch.nn.init.xavier_uniform_"
   ]
  },
  "type": "module"
 },
 "torch.nn.init._calculate_correct_fan": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "torch.nn.init._calculate_fan_in_and_fan_out"
   ]
  },
  "type": "function"
 },
 "torch.nn.init._calculate_fan_in_and_fan_out": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "torch.nn.init._make_deprecate": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "torch.nn.init._make_deprecate.deprecated_init": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "meth",
    "torch.nn.init.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.calculate_gain": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "torch.nn.init.math"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.constant": {
  "data": {
   "lineno": 426
  },
  "type": "constant"
 },
 "torch.nn.init.constant_": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.dirac": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "torch.nn.init.dirac_": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "range",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.eye": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "torch.nn.init.eye_": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.kaiming_normal": {
  "data": {
   "lineno": 432
  },
  "type": "constant"
 },
 "torch.nn.init.kaiming_normal_": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "torch.nn.init._calculate_correct_fan",
    "torch.nn.init.calculate_gain",
    "torch.nn.init.math",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.kaiming_uniform": {
  "data": {
   "lineno": 431
  },
  "type": "constant"
 },
 "torch.nn.init.kaiming_uniform_": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "torch.nn.init._calculate_correct_fan",
    "torch.nn.init.calculate_gain",
    "torch.nn.init.math",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.nn.init.normal": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "torch.nn.init.normal_": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.ones_": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.orthogonal": {
  "data": {
   "lineno": 433
  },
  "type": "constant"
 },
 "torch.nn.init.orthogonal_": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "torch.nn.init.sparse": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "torch.nn.init.sparse_": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "range",
    "torch.nn.init.math",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.init.uniform": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "torch.nn.init.uniform_": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.init.xavier_normal": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "torch.nn.init.xavier_normal_": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "torch.nn.init._calculate_fan_in_and_fan_out",
    "torch.nn.init.math",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.xavier_uniform": {
  "data": {
   "lineno": 429
  },
  "type": "constant"
 },
 "torch.nn.init.xavier_uniform_": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "torch.nn.init._calculate_fan_in_and_fan_out",
    "torch.nn.init.math",
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.init.zeros_": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "torch.nn.init.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "torch.nn.modules.activation": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.activation.CELU": {
  "data": {
   "lineno": 335
  },
  "type": "class"
 },
 "torch.nn.modules.activation.CELU.__init__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.CELU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.CELU.extra_repr": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "torch.nn.modules.activation.CELU.forward": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ELU": {
  "data": {
   "lineno": 295
  },
  "type": "class"
 },
 "torch.nn.modules.activation.ELU.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.ELU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ELU.extra_repr": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ELU.forward": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.activation.GLU": {
  "data": {
   "lineno": 425
  },
  "type": "class"
 },
 "torch.nn.modules.activation.GLU.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.GLU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.GLU.extra_repr": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "torch.nn.modules.activation.GLU.forward": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Hardshrink": {
  "data": {
   "lineno": 459
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Hardshrink.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Hardshrink"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Hardshrink.extra_repr": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Hardshrink.forward": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Hardtanh": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Hardtanh.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Hardtanh",
    "torch.nn.modules.activation.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Hardtanh.extra_repr": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Hardtanh.forward": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LeakyReLU": {
  "data": {
   "lineno": 501
  },
  "type": "class"
 },
 "torch.nn.modules.activation.LeakyReLU.__init__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.LeakyReLU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LeakyReLU.extra_repr": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LeakyReLU.forward": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LogSigmoid": {
  "data": {
   "lineno": 551
  },
  "type": "class"
 },
 "torch.nn.modules.activation.LogSigmoid.forward": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax": {
  "data": {
   "lineno": 897
  },
  "type": "class"
 },
 "torch.nn.modules.activation.LogSoftmax.__init__": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.LogSoftmax"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax.__setstate__": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.LogSoftmax.forward": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.PReLU": {
  "data": {
   "lineno": 663
  },
  "type": "class"
 },
 "torch.nn.modules.activation.PReLU.__init__": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.PReLU",
    "torch.nn.modules.activation.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.PReLU.extra_repr": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "torch.nn.modules.activation.PReLU.forward": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.modules.activation.RReLU": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "torch.nn.modules.activation.RReLU.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.RReLU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.RReLU.extra_repr": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "torch.nn.modules.activation.RReLU.forward": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "torch.nn.modules.activation.Threshold"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.activation.ReLU.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.ReLU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU.extra_repr": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU6": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "torch.nn.modules.activation.Hardtanh"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.activation.ReLU6.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.ReLU6"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.ReLU6.extra_repr": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "torch.nn.modules.activation.SELU": {
  "data": {
   "lineno": 380
  },
  "type": "class"
 },
 "torch.nn.modules.activation.SELU.__init__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.SELU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.SELU.extra_repr": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "torch.nn.modules.activation.SELU.forward": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Sigmoid": {
  "data": {
   "lineno": 242
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Sigmoid.forward": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "input",
    "torch.nn.modules.activation.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax": {
  "data": {
   "lineno": 818
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Softmax.__init__": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Softmax"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax.__setstate__": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax.forward": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softmax2d": {
  "data": {
   "lineno": 868
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Softmax2d.forward": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "input",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softmin": {
  "data": {
   "lineno": 780
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Softmin.__init__": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Softmin"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softmin.forward": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softplus": {
  "data": {
   "lineno": 576
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Softplus.__init__": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Softplus"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softplus.extra_repr": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softplus.forward": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softshrink": {
  "data": {
   "lineno": 621
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Softshrink.__init__": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Softshrink"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softshrink.extra_repr": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softshrink.forward": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Softsign": {
  "data": {
   "lineno": 728
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Softsign.forward": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Tanh": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Tanh.forward": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "input",
    "torch.nn.modules.activation.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Tanhshrink": {
  "data": {
   "lineno": 754
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Tanhshrink.forward": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Threshold": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "torch.nn.modules.activation.Threshold.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.activation.Threshold"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Threshold.extra_repr": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "torch.nn.modules.activation.Threshold.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.activation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.activation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.modules.adaptive": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Linear",
    "ModuleList",
    "Sequential",
    "ValueError",
    "any",
    "int",
    "len",
    "list",
    "max",
    "min",
    "range",
    "set",
    "sorted",
    "super",
    "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss._get_full_log_prob": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "enumerate",
    "input",
    "input.new_empty",
    "log_softmax",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.forward": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "RuntimeError",
    "input",
    "input.index_select",
    "input.new_zeros",
    "input.size",
    "len",
    "log_softmax",
    "range",
    "torch.nn.modules.adaptive._ASMoutput"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.log_prob": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.predict": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "input",
    "torch.nn.modules.adaptive.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss.reset_parameters": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "torch.nn.modules.adaptive._ASMoutput": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "torch.nn.modules.adaptive.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "torch.nn.modules.adaptive.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.batchnorm": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.batchnorm.BatchNorm1d": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "torch.nn.modules.batchnorm._BatchNorm"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.batchnorm.BatchNorm1d._check_input_dim": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm.BatchNorm2d": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "torch.nn.modules.batchnorm._BatchNorm"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.batchnorm.BatchNorm2d._check_input_dim": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm.BatchNorm3d": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "torch.nn.modules.batchnorm._BatchNorm"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.batchnorm.BatchNorm3d._check_input_dim": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.batchnorm.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.modules.batchnorm._BatchNorm": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "torch.nn.modules.batchnorm._BatchNorm.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.batchnorm._BatchNorm",
    "torch.nn.modules.batchnorm.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm._check_input_dim": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm._load_from_state_dict": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.batchnorm._BatchNorm",
    "torch.nn.modules.batchnorm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm.extra_repr": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm.forward": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "float",
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm.reset_parameters": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm._BatchNorm.reset_running_stats": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "torch.nn.modules.batchnorm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.nn.modules.batchnorm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.container": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.container.Container": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "torch.nn.modules.container.Container.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.Container",
    "torch.nn.modules.container.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "torch.nn.modules.container.ModuleDict.__contains__": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__delitem__": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__getitem__": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.ModuleDict"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__iter__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__len__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.__setitem__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "module"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.clear": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.items": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.keys": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.pop": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.update": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "isinstance",
    "len",
    "module",
    "sorted",
    "str",
    "torch._six.container_abcs.Iterable",
    "torch._six.container_abcs.Mapping",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleDict.values": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "torch.nn.modules.container.ModuleList.__delitem__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "delattr",
    "isinstance",
    "len",
    "list",
    "range",
    "slice",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__dir__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.ModuleList"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__getitem__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "slice"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__iadd__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.ModuleList"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__iter__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__len__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.__setitem__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "module",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList._get_abs_string_index": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "str",
    "torch.nn.modules.container.operator"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.append": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len",
    "module",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.extend": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "len",
    "module",
    "str",
    "torch._six.container_abcs.Iterable",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ModuleList.insert": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "module",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "torch.nn.modules.container.ParameterDict": {
  "data": {
   "lineno": 415
  },
  "type": "class"
 },
 "torch.nn.modules.container.ParameterDict.__contains__": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__delitem__": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__getitem__": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__init__": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.ParameterDict"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__iter__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__len__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.__setitem__": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.clear": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.extra_repr": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "str",
    "torch.nn.modules.container.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.items": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.keys": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.pop": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.update": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "isinstance",
    "len",
    "sorted",
    "str",
    "torch._six.container_abcs.Iterable",
    "torch._six.container_abcs.Mapping",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterDict.values": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList": {
  "data": {
   "lineno": 318
  },
  "type": "class"
 },
 "torch.nn.modules.container.ParameterList.__dir__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.ParameterList"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__getitem__": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__iadd__": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.ParameterList"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__iter__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__len__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.__setitem__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList._get_abs_string_index": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "str",
    "torch.nn.modules.container.operator"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.append": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.extend": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "isinstance",
    "len",
    "str",
    "torch._six.container_abcs.Iterable",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.ParameterList.extra_repr": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "str",
    "torch.nn.modules.container.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "torch.nn.modules.container.Sequential.__delitem__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "delattr",
    "isinstance",
    "list",
    "slice"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__dir__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.container.Sequential"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__getitem__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "list",
    "slice"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "enumerate",
    "isinstance",
    "len",
    "str",
    "super",
    "torch.nn.modules.container.Sequential"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__len__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.__setitem__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential._get_item_by_idx": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "IndexError",
    "itertools.islice",
    "len",
    "next",
    "torch.nn.modules.container.operator"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.Sequential.forward": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "input",
    "module"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.container.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "torch.nn.modules.container.islice": {
  "data": {
   "shadows": "itertools.islice"
  },
  "type": "import"
 },
 "torch.nn.modules.container.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "torch.nn.modules.container.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.container.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.modules.conv": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.conv.Conv1d": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "torch.nn.modules.conv._ConvNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv.Conv1d.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "_single",
    "super",
    "torch.nn.modules.conv.Conv1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.Conv1d.forward": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.Conv2d": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "torch.nn.modules.conv._ConvNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv.Conv2d.__init__": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "_pair",
    "super",
    "torch.nn.modules.conv.Conv2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.Conv2d.forward": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.Conv3d": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "torch.nn.modules.conv._ConvNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv.Conv3d.__init__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "_triple",
    "super",
    "torch.nn.modules.conv.Conv3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.Conv3d.forward": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose1d": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "torch.nn.modules.conv._ConvNd",
    "torch.nn.modules.conv._ConvTransposeMixin"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv.ConvTranspose1d.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "_single",
    "super",
    "torch.nn.modules.conv.ConvTranspose1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose1d.forward": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose2d": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "torch.nn.modules.conv._ConvNd",
    "torch.nn.modules.conv._ConvTransposeMixin"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv.ConvTranspose2d.__init__": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "_pair",
    "super",
    "torch.nn.modules.conv.ConvTranspose2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose2d.forward": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose3d": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "torch.nn.modules.conv._ConvNd",
    "torch.nn.modules.conv._ConvTransposeMixin"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv.ConvTranspose3d.__init__": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "_triple",
    "super",
    "torch.nn.modules.conv.ConvTranspose3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.ConvTranspose3d.forward": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.conv.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.modules.conv._ConvNd": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "torch.nn.modules.conv._ConvNd.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.nn.modules.conv._ConvNd",
    "torch.nn.modules.conv.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv._ConvNd.extra_repr": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv._ConvNd.reset_parameters": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "torch.nn.modules.conv.math"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv._ConvTransposeMixin": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.conv._ConvTransposeMixin._output_padding": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "_single",
    "input.dim",
    "input.size",
    "int",
    "len",
    "range",
    "torch.nn.modules.conv.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv._ConvTransposeMixin.forward": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "func",
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.conv.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.nn.modules.conv.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.distance": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.distance.CosineSimilarity": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "torch.nn.modules.distance.CosineSimilarity.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.distance.CosineSimilarity"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.distance.CosineSimilarity.forward": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "torch.nn.modules.distance.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.distance.PairwiseDistance": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "torch.nn.modules.distance.PairwiseDistance.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.distance.PairwiseDistance"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.distance.PairwiseDistance.forward": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "torch.nn.modules.distance.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.dropout": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.dropout.AlphaDropout": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "torch.nn.modules.dropout._DropoutNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.dropout.AlphaDropout.forward": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.dropout.Dropout": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "torch.nn.modules.dropout._DropoutNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.dropout.Dropout.forward": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.dropout.Dropout2d": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "torch.nn.modules.dropout._DropoutNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.dropout.Dropout2d.forward": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.dropout.Dropout3d": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch.nn.modules.dropout._DropoutNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.dropout.Dropout3d.forward": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.dropout.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.dropout.FeatureAlphaDropout": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "torch.nn.modules.dropout._DropoutNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.dropout.FeatureAlphaDropout.forward": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.dropout._DropoutNd": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.nn.modules.dropout._DropoutNd.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.nn.modules.dropout._DropoutNd"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.dropout._DropoutNd.extra_repr": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "torch.nn.modules.fold": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.fold.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.fold.Fold": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.nn.modules.fold.Fold.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.fold.Fold"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.fold.Fold.extra_repr": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "torch.nn.modules.fold.Fold.forward": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.fold.Unfold": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "torch.nn.modules.fold.Unfold.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.fold.Unfold"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.fold.Unfold.extra_repr": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "torch.nn.modules.fold.Unfold.forward": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.instancenorm.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.instancenorm.InstanceNorm1d": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "torch.nn.modules.instancenorm._InstanceNorm"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.instancenorm.InstanceNorm1d._check_input_dim": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm.InstanceNorm2d": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "torch.nn.modules.instancenorm._InstanceNorm"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.instancenorm.InstanceNorm2d._check_input_dim": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm.InstanceNorm3d": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "torch.nn.modules.instancenorm._InstanceNorm"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.instancenorm.InstanceNorm3d._check_input_dim": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "ValueError",
    "input.dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.nn.modules.instancenorm._InstanceNorm.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.instancenorm._InstanceNorm"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm._check_input_dim": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm._load_from_state_dict": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "super",
    "torch.nn.modules.instancenorm._InstanceNorm"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.instancenorm._InstanceNorm.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.linear": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.linear.Bilinear": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "torch.nn.modules.linear.Bilinear.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.linear.Bilinear",
    "torch.nn.modules.linear.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Bilinear.extra_repr": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Bilinear.forward": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Bilinear.reset_parameters": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "torch.nn.modules.linear.math"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.linear.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.linear.Linear": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "torch.nn.modules.linear.Linear.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.linear.Linear",
    "torch.nn.modules.linear.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Linear.extra_repr": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Linear.forward": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Linear.reset_parameters": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "torch.nn.modules.linear.math"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.linear.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.modules.linear.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.nn.modules.linear.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.loss": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.loss.BCELoss": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "torch.nn.modules.loss._WeightedLoss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.BCELoss.__init__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.BCELoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.BCELoss.forward": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.BCEWithLogitsLoss": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.BCEWithLogitsLoss.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.BCEWithLogitsLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.BCEWithLogitsLoss.forward": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.CTCLoss": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.CTCLoss.__init__": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.CTCLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.CTCLoss.forward": {
  "data": {
   "lineno": 1246
  },
  "type": "function"
 },
 "torch.nn.modules.loss.CosineEmbeddingLoss": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.CosineEmbeddingLoss.__init__": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.CosineEmbeddingLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.CosineEmbeddingLoss.forward": {
  "data": {
   "lineno": 996
  },
  "type": "function"
 },
 "torch.nn.modules.loss.CrossEntropyLoss": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "torch.nn.modules.loss._WeightedLoss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.CrossEntropyLoss.__init__": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.CrossEntropyLoss.forward": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.loss.HingeEmbeddingLoss": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.HingeEmbeddingLoss.__init__": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.HingeEmbeddingLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.HingeEmbeddingLoss.forward": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.KLDivLoss": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.KLDivLoss.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.KLDivLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.KLDivLoss.forward": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.L1Loss": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.L1Loss.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.L1Loss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.L1Loss.forward": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MSELoss": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.MSELoss.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.MSELoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MSELoss.forward": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MarginRankingLoss": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.MarginRankingLoss.__init__": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.MarginRankingLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MarginRankingLoss.forward": {
  "data": {
   "lineno": 1044
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelMarginLoss": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.MultiLabelMarginLoss.__init__": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.MultiLabelMarginLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelMarginLoss.forward": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelSoftMarginLoss": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "torch.nn.modules.loss._WeightedLoss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.MultiLabelSoftMarginLoss.__init__": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.MultiLabelSoftMarginLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MultiLabelSoftMarginLoss.forward": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MultiMarginLoss": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "torch.nn.modules.loss._WeightedLoss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.MultiMarginLoss.__init__": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.nn.modules.loss.MultiMarginLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.MultiMarginLoss.forward": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.NLLLoss": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "torch.nn.modules.loss._WeightedLoss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.NLLLoss.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.NLLLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.NLLLoss.forward": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.NLLLoss2d": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "torch.nn.modules.loss.NLLLoss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.NLLLoss2d.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.NLLLoss2d",
    "torch.nn.modules.loss.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.PoissonNLLLoss": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.PoissonNLLLoss.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.PoissonNLLLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.PoissonNLLLoss.forward": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "torch.nn.modules.loss.SmoothL1Loss": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.SmoothL1Loss.__init__": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.SmoothL1Loss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.SmoothL1Loss.forward": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.SoftMarginLoss": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.SoftMarginLoss.__init__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.SoftMarginLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.SoftMarginLoss.forward": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.TripletMarginLoss": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss.TripletMarginLoss.__init__": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss.TripletMarginLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.TripletMarginLoss.forward": {
  "data": {
   "lineno": 1182
  },
  "type": "function"
 },
 "torch.nn.modules.loss._Loss": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "torch.nn.modules.loss._Loss.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss._Reduction": {
  "data": {
   "shadows": "_reduction"
  },
  "type": "import"
 },
 "torch.nn.modules.loss._WeightedLoss": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "torch.nn.modules.loss._Loss"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.loss._WeightedLoss.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.loss._WeightedLoss"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.loss.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.loss.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.modules.module": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.module.Module": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.module.Module.__call__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "hook",
    "input",
    "isinstance",
    "len",
    "next",
    "torch.nn.modules.module.functools",
    "torch.nn.modules.module.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__delattr__": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "object.__delattr__"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__dir__": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "dir",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__getattr__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "AttributeError",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__repr__": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "len",
    "repr",
    "torch.nn.modules.module._addindent"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__setattr__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "object.__setattr__",
    "remove_from",
    "torch.nn.modules.module.Module",
    "torch.nn.modules.module.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__setattr__.remove_from": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.__setstate__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._apply": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._get_name": {
  "data": {
   "lineno": 1012
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._load_from_state_dict": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "Exception",
    "hook",
    "isinstance",
    "len",
    "torch.nn.modules.module.itertools"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._named_members": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "get_members_fn",
    "set"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._register_load_state_dict_pre_hook": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "hook",
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._register_state_dict_hook": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "hook",
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._slow_forward": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "hasattr",
    "input",
    "torch.nn.modules.module.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module._tracing_name": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.add_module": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "hasattr",
    "isinstance",
    "torch.nn.modules.module.Module",
    "torch.nn.modules.module.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.apply": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.buffers": {
  "data": {
   "lineno": 834
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.children": {
  "data": {
   "lineno": 882
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.cpu": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.cuda": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.double": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.eval": {
  "data": {
   "lineno": 992
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.extra_repr": {
  "data": {
   "lineno": 1015
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.float": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.forward": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.half": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.load_state_dict": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "len",
    "load"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.load_state_dict.load": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "load"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.modules": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_buffers": {
  "data": {
   "lineno": 856
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_children": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_modules": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.named_parameters": {
  "data": {
   "lineno": 808
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.parameters": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_backward_hook": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_buffer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "hasattr",
    "isinstance",
    "torch.nn.modules.module.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_forward_hook": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_forward_pre_hook": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.register_parameter": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "ValueError",
    "hasattr",
    "isinstance",
    "torch.nn.modules.module.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.share_memory": {
  "data": {
   "lineno": 1009
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.state_dict": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "hook"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.to": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "TypeError",
    "torch.nn.modules.module.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.to.convert": {
  "data": {
   "lineno": 378
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.train": {
  "data": {
   "lineno": 976
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.type": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "torch.nn.modules.module.Module.zero_grad": {
  "data": {
   "lineno": 1002
  },
  "type": "function"
 },
 "torch.nn.modules.module.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "torch.nn.modules.module._addindent": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.module.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "torch.nn.modules.module.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.nn.modules.module.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "torch.nn.modules.module.thnn_backend": {
  "data": {
   "shadows": "backend"
  },
  "type": "import"
 },
 "torch.nn.modules.module.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.normalization": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.normalization.CrossMapLRN2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d.extra_repr": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.CrossMapLRN2d.forward": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.normalization.GroupNorm": {
  "data": {
   "lineno": 165
  },
  "type": "class"
 },
 "torch.nn.modules.normalization.GroupNorm.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.normalization.GroupNorm",
    "torch.nn.modules.normalization.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm.extra_repr": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm.forward": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.GroupNorm.reset_parameters": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "torch.nn.modules.normalization.LayerNorm.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "torch.nn.modules.normalization.LayerNorm",
    "torch.nn.modules.normalization.numbers",
    "torch.nn.modules.normalization.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm.extra_repr": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm.forward": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LayerNorm.reset_parameters": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LocalResponseNorm": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "torch.nn.modules.normalization.LocalResponseNorm.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.normalization.LocalResponseNorm"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LocalResponseNorm.extra_repr": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.LocalResponseNorm.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.normalization.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.modules.normalization.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "torch.nn.modules.normalization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.padding": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.padding.ConstantPad1d": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ConstantPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ConstantPad1d.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "_pair",
    "super",
    "torch.nn.modules.padding.ConstantPad1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ConstantPad2d": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ConstantPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ConstantPad2d.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "_quadruple",
    "super",
    "torch.nn.modules.padding.ConstantPad2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ConstantPad3d": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ConstantPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ConstantPad3d.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "_ntuple",
    "super",
    "torch.nn.modules.padding.ConstantPad3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.padding.ReflectionPad1d": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ReflectionPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ReflectionPad1d.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "_pair",
    "super",
    "torch.nn.modules.padding.ReflectionPad1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ReflectionPad2d": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ReflectionPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ReflectionPad2d.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "_quadruple",
    "super",
    "torch.nn.modules.padding.ReflectionPad2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ReplicationPad1d": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ReplicationPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ReplicationPad1d.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "_pair",
    "super",
    "torch.nn.modules.padding.ReplicationPad1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ReplicationPad2d": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ReplicationPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ReplicationPad2d.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "_quadruple",
    "super",
    "torch.nn.modules.padding.ReplicationPad2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ReplicationPad3d": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "torch.nn.modules.padding._ReplicationPadNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ReplicationPad3d.__init__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_ntuple",
    "super",
    "torch.nn.modules.padding.ReplicationPad3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding.ZeroPad2d": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "torch.nn.modules.padding.ConstantPad2d"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.padding.ZeroPad2d.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.padding.ZeroPad2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ConstantPadNd": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "torch.nn.modules.padding._ConstantPadNd.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.padding._ConstantPadNd"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ConstantPadNd.extra_repr": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ConstantPadNd.forward": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ReflectionPadNd": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "torch.nn.modules.padding._ReflectionPadNd.extra_repr": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ReflectionPadNd.forward": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ReplicationPadNd": {
  "data": {
   "lineno": 270
  },
  "type": "class"
 },
 "torch.nn.modules.padding._ReplicationPadNd.extra_repr": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "torch.nn.modules.padding._ReplicationPadNd.forward": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pixelshuffle": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.pixelshuffle.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pixelshuffle.PixelShuffle"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle.extra_repr": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "torch.nn.modules.pixelshuffle.PixelShuffle.forward": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool1d": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AdaptiveAvgPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool1d.forward": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool2d": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AdaptiveAvgPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool2d.forward": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool3d": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AdaptiveAvgPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveAvgPool3d.forward": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool1d": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AdaptiveMaxPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool1d.forward": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool2d": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AdaptiveMaxPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool2d.forward": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool3d": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AdaptiveMaxPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AdaptiveMaxPool3d.forward": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool1d": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AvgPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AvgPool1d.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "_single",
    "super",
    "torch.nn.modules.pooling.AvgPool1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool1d.forward": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool2d": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AvgPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AvgPool2d.__init__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling.AvgPool2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool2d.forward": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool3d": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._AvgPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.AvgPool3d.__init__": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling.AvgPool3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool3d.__setstate__": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling.AvgPool3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.AvgPool3d.forward": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.pooling.FractionalMaxPool2d": {
  "data": {
   "lineno": 647
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.FractionalMaxPool2d.__init__": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "ValueError",
    "_pair",
    "super",
    "torch.nn.modules.pooling.FractionalMaxPool2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.FractionalMaxPool2d.forward": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.LPPool1d": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._LPPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.LPPool1d.forward": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "float",
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.LPPool2d": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._LPPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.LPPool2d.forward": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "float",
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool1d": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._MaxPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxPool1d.extra_repr": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool1d.forward": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool2d": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._MaxPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxPool2d.forward": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxPool3d": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._MaxPoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxPool3d.forward": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool1d": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._MaxUnpoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxUnpool1d.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_single",
    "super",
    "torch.nn.modules.pooling.MaxUnpool1d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool1d.forward": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool2d": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._MaxUnpoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxUnpool2d.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "_pair",
    "super",
    "torch.nn.modules.pooling.MaxUnpool2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool2d.forward": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool3d": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "torch.nn.modules.pooling._MaxUnpoolNd"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.pooling.MaxUnpool3d.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "_triple",
    "super",
    "torch.nn.modules.pooling.MaxUnpool3d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.MaxUnpool3d.forward": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveAvgPoolNd": {
  "data": {
   "lineno": 936
  },
  "type": "class"
 },
 "torch.nn.modules.pooling._AdaptiveAvgPoolNd.__init__": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling._AdaptiveAvgPoolNd"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveAvgPoolNd.extra_repr": {
  "data": {
   "lineno": 944
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveMaxPoolNd": {
  "data": {
   "lineno": 822
  },
  "type": "class"
 },
 "torch.nn.modules.pooling._AdaptiveMaxPoolNd.__init__": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling._AdaptiveMaxPoolNd"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._AdaptiveMaxPoolNd.extra_repr": {
  "data": {
   "lineno": 831
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._AvgPoolNd": {
  "data": {
   "lineno": 434
  },
  "type": "class"
 },
 "torch.nn.modules.pooling._AvgPoolNd.extra_repr": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._LPPoolNd": {
  "data": {
   "lineno": 707
  },
  "type": "class"
 },
 "torch.nn.modules.pooling._LPPoolNd.__init__": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling._LPPoolNd"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._LPPoolNd.extra_repr": {
  "data": {
   "lineno": 718
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._MaxPoolNd": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "torch.nn.modules.pooling._MaxPoolNd.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.pooling._MaxPoolNd"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._MaxPoolNd.extra_repr": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "torch.nn.modules.pooling._MaxUnpoolNd": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "torch.nn.modules.pooling._MaxUnpoolNd.extra_repr": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "torch.nn.modules.pooling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.rnn": {
  "data": {
   "symbols_in_volume": [
    "torch.nn.modules.rnn._VF",
    "torch.nn.modules.rnn.torch"
   ]
  },
  "type": "module"
 },
 "torch.nn.modules.rnn.GRU": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.RNNBase"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.GRU.__init__": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.rnn.GRU"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.GRUCell": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.RNNCellBase"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.GRUCell.__init__": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.rnn.GRUCell"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.GRUCell.forward": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "input",
    "input.new_zeros",
    "input.size",
    "torch.nn.modules.rnn._VF"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTM": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.RNNBase"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.LSTM.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.rnn.LSTM"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTMCell": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.RNNCellBase"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.LSTMCell.__init__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.rnn.LSTMCell"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.LSTMCell.forward": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "input",
    "input.new_zeros",
    "input.size",
    "torch.nn.modules.rnn._VF"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNN": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.RNNBase"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.RNN.__init__": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.nn.modules.rnn.RNN"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.RNNBase.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Parameter",
    "ValueError",
    "bool",
    "isinstance",
    "range",
    "setattr",
    "super",
    "torch.nn.modules.rnn.RNNBase",
    "torch.nn.modules.rnn.numbers",
    "torch.nn.modules.rnn.torch",
    "torch.nn.modules.rnn.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.__setstate__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "str",
    "super",
    "torch.nn.modules.rnn.RNNBase"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase._apply": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.rnn.RNNBase"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase._flat_weights": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.all_weights": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.check_forward_args": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "RuntimeError",
    "check_hidden_size",
    "input.dim",
    "input.size",
    "int"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.check_forward_args.check_hidden_size": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "RuntimeError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.extra_repr": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.flatten_parameters": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "bool",
    "len",
    "next",
    "set",
    "torch.backends.cudnn.rnn.get_cudnn_mode",
    "torch.nn.modules.rnn.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.forward": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "PackedSequence",
    "_impl",
    "input",
    "input.new_zeros",
    "input.size",
    "int",
    "isinstance",
    "torch.nn.modules.rnn._rnn_impls"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNBase.reset_parameters": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.math"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCell": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.RNNCellBase"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.RNNCell.__init__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.rnn.RNNCell"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCell.forward": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "RuntimeError",
    "func",
    "input",
    "input.new_zeros",
    "input.size",
    "torch.nn.modules.rnn._VF"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase": {
  "data": {
   "lineno": 537
  },
  "type": "class"
 },
 "torch.nn.modules.rnn.RNNCellBase.__init__": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "Parameter",
    "super",
    "torch.nn.modules.rnn.RNNCellBase",
    "torch.nn.modules.rnn.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.check_forward_hidden": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "RuntimeError",
    "input.size"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.check_forward_input": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "RuntimeError",
    "input.size"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.extra_repr": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "torch.nn.modules.rnn.RNNCellBase.reset_parameters": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "torch.nn.modules.rnn.math"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.rnn._VF": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "torch.nn.modules.rnn._rnn_impls": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "torch.nn.modules.rnn.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "torch.nn.modules.rnn.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.nn.modules.rnn.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "torch.nn.modules.rnn.rnn": {
  "data": {
   "shadows": "torch.backends.cudnn.rnn"
  },
  "type": "import"
 },
 "torch.nn.modules.rnn.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.rnn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.modules.sparse": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.sparse.Embedding": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch._jit_internal.weak_module"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.sparse.Embedding.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "list",
    "super",
    "torch.nn.modules.sparse.Embedding",
    "torch.nn.modules.sparse.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.extra_repr": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.forward": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "input",
    "torch._jit_internal.weak_script_method"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.from_pretrained": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.Embedding.reset_parameters": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "torch.nn.modules.sparse.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "torch._jit_internal.weak_module"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.sparse.EmbeddingBag.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.sparse.EmbeddingBag",
    "torch.nn.modules.sparse.torch",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.extra_repr": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.forward": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "input",
    "torch._jit_internal.weak_script_method"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.EmbeddingBag.reset_parameters": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "torch.nn.modules.sparse.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.sparse.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.modules.sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.modules.sparse.weak_module": {
  "data": {
   "shadows": "torch._jit_internal.weak_module"
  },
  "type": "import"
 },
 "torch.nn.modules.sparse.weak_script": {
  "data": {
   "shadows": "torch._jit_internal.weak_script"
  },
  "type": "import"
 },
 "torch.nn.modules.sparse.weak_script_method": {
  "data": {
   "shadows": "torch._jit_internal.weak_script_method"
  },
  "type": "import"
 },
 "torch.nn.modules.upsampling": {
  "data": {},
  "type": "module"
 },
 "torch.nn.modules.upsampling.F": {
  "data": {
   "shadows": "functional"
  },
  "type": "import"
 },
 "torch.nn.modules.upsampling.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "torch.nn.modules.upsampling.Upsample": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "torch.nn.modules.upsampling.Upsample.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.upsampling.Upsample",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.upsampling.Upsample.extra_repr": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.upsampling.Upsample.forward": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "input",
    "torch.nn.modules.upsampling.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.upsampling.UpsamplingBilinear2d": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "torch.nn.modules.upsampling.Upsample"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.upsampling.UpsamplingBilinear2d.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.upsampling.UpsamplingBilinear2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.upsampling.UpsamplingNearest2d": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "torch.nn.modules.upsampling.Upsample"
   ]
  },
  "type": "class"
 },
 "torch.nn.modules.upsampling.UpsamplingNearest2d.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "super",
    "torch.nn.modules.upsampling.UpsamplingNearest2d"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.upsampling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.modules.utils": {
  "data": {
   "symbols_in_volume": [
    "torch.nn.modules.utils._ntuple"
   ]
  },
  "type": "module"
 },
 "torch.nn.modules.utils._list_with_default": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.utils._ntuple": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "torch.nn.modules.utils._ntuple.parse": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "isinstance",
    "itertools.repeat",
    "torch._six.container_abcs.Iterable",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.modules.utils._pair": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "torch.nn.modules.utils._quadruple": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "torch.nn.modules.utils._single": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "torch.nn.modules.utils._triple": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "torch.nn.modules.utils.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "torch.nn.modules.utils.repeat": {
  "data": {
   "shadows": "itertools.repeat"
  },
  "type": "import"
 },
 "torch.nn.parallel": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "torch.nn.parallel._functions": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel._functions.Broadcast": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn.parallel._functions.Broadcast.backward": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.Broadcast.forward": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "enumerate",
    "input",
    "input.is_cuda",
    "len",
    "list",
    "map",
    "staticmethod",
    "torch.cuda._utils._get_device_index",
    "torch.cuda.comm.broadcast_coalesced",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "torch.nn.parallel._functions.Gather": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn.parallel._functions.Gather.backward": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.Gather.forward": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "all",
    "map",
    "staticmethod",
    "torch.cuda._utils._get_device_index",
    "torch.cuda.comm.gather",
    "torch.nn.parallel._functions.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.ReduceAddCoalesced": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn.parallel._functions.ReduceAddCoalesced.backward": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "staticmethod",
    "torch.nn.parallel._functions.Broadcast"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.ReduceAddCoalesced.forward": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod",
    "torch.cuda.comm.reduce_add_coalesced"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.Scatter": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.autograd.Function"
   ]
  },
  "type": "class"
 },
 "torch.nn.parallel._functions.Scatter.backward": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "staticmethod",
    "torch.nn.parallel._functions.Gather"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions.Scatter.forward": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "enumerate",
    "input",
    "input.get_device",
    "input.is_cuda",
    "list",
    "map",
    "staticmethod",
    "torch.cuda._utils._get_device_index",
    "torch.cuda.comm.scatter",
    "torch.nn.parallel._functions._get_stream",
    "torch.nn.parallel._functions.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions._get_device_index": {
  "data": {
   "shadows": "torch.cuda._utils._get_device_index"
  },
  "type": "import"
 },
 "torch.nn.parallel._functions._get_stream": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "torch.nn.parallel._functions._streams",
    "torch.nn.parallel._functions.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel._functions._streams": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "torch.nn.parallel._functions.comm": {
  "data": {
   "shadows": "torch.cuda.comm"
  },
  "type": "import"
 },
 "torch.nn.parallel._functions.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel._functions.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.parallel.data_parallel": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.data_parallel.DataParallel": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "torch.nn.parallel.data_parallel.DataParallel.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "range",
    "super",
    "torch.cuda._utils._get_device_index",
    "torch.nn.parallel.data_parallel.DataParallel",
    "torch.nn.parallel.data_parallel._check_balance",
    "torch.nn.parallel.data_parallel.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.forward": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.gather": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "gather"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.parallel_apply": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len",
    "parallel_apply"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.replicate": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "replicate"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.DataParallel.scatter": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "scatter_kwargs"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel._check_balance": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "list",
    "map",
    "torch.cuda._utils._get_device_index",
    "torch.nn.parallel.data_parallel.torch",
    "warn_imbalance"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel._check_balance.warn_imbalance": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "enumerate",
    "get_prop",
    "max",
    "min",
    "torch.nn.parallel.data_parallel.operator",
    "torch.nn.parallel.data_parallel.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel._get_device_index": {
  "data": {
   "shadows": "torch.cuda._utils._get_device_index"
  },
  "type": "import"
 },
 "torch.nn.parallel.data_parallel.data_parallel": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "gather",
    "isinstance",
    "len",
    "list",
    "module",
    "parallel_apply",
    "range",
    "replicate",
    "scatter_kwargs",
    "torch.nn.parallel.data_parallel.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.data_parallel.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "torch.nn.parallel.data_parallel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.data_parallel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.deprecated.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "torch.nn.parallel.deprecated.distributed": {
  "data": {
   "symbols_in_volume": [
    "torch.nn.parallel.deprecated.distributed.sys"
   ]
  },
  "type": "module"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.__getstate__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "torch.distributed.deprecated._backend",
    "torch.distributed.deprecated.dist_backend.NCCL",
    "torch.nn.parallel.deprecated.distributed.copy"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "len",
    "list",
    "range",
    "replicate",
    "super",
    "torch._utils._take_tensors",
    "torch.distributed.deprecated._backend",
    "torch.distributed.deprecated.dist_backend.GLOO",
    "torch.distributed.deprecated.dist_backend.NCCL",
    "torch.nn.parallel.deprecated.distributed.DistributedDataParallel",
    "torch.nn.parallel.deprecated.distributed.threading",
    "torch.nn.parallel.deprecated.distributed.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.__setstate__": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "super",
    "torch.distributed.deprecated._backend",
    "torch.distributed.deprecated.dist_backend.NCCL",
    "torch.nn.parallel.deprecated.distributed.DistributedDataParallel",
    "torch.nn.parallel.deprecated.distributed.threading"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._dist_broadcast_coalesced": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "torch._utils._flatten_dense_tensors",
    "torch._utils._take_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.distributed.deprecated.broadcast",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._make_param_hook": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._make_param_hook.distributed_data_parallel_hook": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "torch.nn.parallel.deprecated.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._queue_reduction": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "all",
    "any",
    "len",
    "range",
    "torch.autograd.Variable._execution_engine.queue_callback",
    "torch.nn.parallel.deprecated.distributed.threading"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._queue_reduction.sync_reduction_streams": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "torch.nn.parallel.deprecated.distributed.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._reduction_thread_fn": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "_process_batch",
    "staticmethod",
    "torch.nn.parallel.deprecated.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._reduction_thread_fn._process_batch": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Queue.get",
    "torch._utils._flatten_dense_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.cuda.nccl.reduce",
    "torch.distributed.deprecated.all_reduce",
    "torch.distributed.deprecated.get_world_size",
    "torch.nn.parallel.deprecated.distributed.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._register_grad_hooks": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._register_nccl_grad_hook": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "torch.distributed.deprecated.new_group"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._register_nccl_grad_hook.allreduce_hook": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "torch.autograd.Variable._execution_engine.queue_callback",
    "torch.nn.parallel.deprecated.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._register_nccl_grad_hook.reduction_fn_nccl": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "len",
    "range",
    "torch._utils._flatten_dense_tensors",
    "torch._utils._take_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.distributed.deprecated.all_reduce_multigpu",
    "torch.distributed.deprecated.get_world_size",
    "torch.nn.parallel.deprecated.distributed.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._start_reduction_threads": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "Queue.Queue",
    "len",
    "range",
    "torch.distributed.deprecated._register_stream",
    "torch.distributed.deprecated.new_group",
    "torch.nn.parallel.deprecated.distributed.threading",
    "torch.nn.parallel.deprecated.distributed.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel._sync_params": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "torch.cuda.comm.broadcast_coalesced",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.forward": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.gather": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "gather"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.parallel_apply": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len",
    "parallel_apply"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.scatter": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "scatter_kwargs"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.DistributedDataParallel.train": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "super",
    "torch.nn.parallel.deprecated.distributed.DistributedDataParallel"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed.Variable": {
  "data": {
   "shadows": "torch.autograd.Variable"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed._flatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._flatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed._take_tensors": {
  "data": {
   "shadows": "torch._utils._take_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed._unflatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._unflatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.broadcast_coalesced": {
  "data": {
   "shadows": "torch.cuda.comm.broadcast_coalesced"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.dist": {
  "data": {
   "shadows": "torch.distributed.deprecated"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.nccl": {
  "data": {
   "shadows": "torch.cuda.nccl"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.queue": {
  "data": {
   "shadows": "Queue"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed.torch.utils.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.nn.modules.Module"
   ]
  },
  "type": "class"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "list",
    "super",
    "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU.__init__.allreduce_hook": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "torch.autograd.Variable._execution_engine.queue_callback",
    "torch.nn.parallel.deprecated.distributed_cpu.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU.__init__.allreduce_params": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "torch._utils._flatten_dense_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.distributed.deprecated.all_reduce",
    "torch.distributed.deprecated.get_world_size",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU.forward": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.DistributedDataParallelCPU.sync_parameters": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "torch.distributed.deprecated.broadcast"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.Module": {
  "data": {
   "shadows": "torch.nn.modules.Module"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.Variable": {
  "data": {
   "shadows": "torch.autograd.Variable"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu._flatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._flatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu._unflatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._unflatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.dist": {
  "data": {
   "shadows": "torch.distributed.deprecated"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.deprecated.distributed_cpu.torch.utils.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed": {
  "data": {
   "symbols_in_volume": [
    "torch.distributed.is_available"
   ]
  },
  "type": "module"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.__getstate__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "torch.nn.parallel.distributed.copy"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "range",
    "super",
    "torch.cuda._utils._get_device_index",
    "torch.distributed.distributed_c10d._get_default_group",
    "torch.nn.parallel.distributed.DistributedDataParallel",
    "torch.nn.parallel.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.__setstate__": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "super",
    "torch.distributed.distributed_c10d._get_default_group",
    "torch.nn.parallel.distributed.DistributedDataParallel"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._check_default_group": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.distributed.distributed_c10d._get_default_group"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._check_previous_reduction": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._ddp_init_helper": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "range",
    "replicate",
    "set",
    "torch.distributed._dist_bucket_tensors",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._dist_broadcast_coalesced": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "torch.distributed._dist_broadcast_coalesced"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._make_param_hook": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._make_param_hook.distributed_data_parallel_hook": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._queue_reduction": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "torch.distributed._queue_reduction"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._register_grad_hooks": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "enumerate",
    "torch.nn.parallel.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._sync_params": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "len",
    "torch.cuda.comm.broadcast_coalesced",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel._sync_reduction_works": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "set",
    "torch.distributed._sync_reduction"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.forward": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.gather": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "gather"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.parallel_apply": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "len",
    "parallel_apply"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.scatter": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "scatter_kwargs"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed.DistributedDataParallel.train": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "super",
    "torch.nn.parallel.distributed.DistributedDataParallel"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed._get_default_group": {
  "data": {
   "shadows": "torch.distributed.distributed_c10d._get_default_group"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed._get_device_index": {
  "data": {
   "shadows": "torch.cuda._utils._get_device_index"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed.broadcast_coalesced": {
  "data": {
   "shadows": "torch.cuda.comm.broadcast_coalesced"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed.nccl": {
  "data": {
   "shadows": "torch.cuda.nccl"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.nn.modules.Module"
   ]
  },
  "type": "class"
 },
 "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "list",
    "super",
    "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU.__init__.allreduce_hook": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "torch.autograd.Variable._execution_engine.queue_callback",
    "torch.nn.parallel.distributed_cpu.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU.__init__.allreduce_params": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "torch._utils._flatten_dense_tensors",
    "torch._utils._unflatten_dense_tensors",
    "torch.distributed.all_reduce",
    "torch.distributed.get_world_size",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU.forward": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed_cpu.DistributedDataParallelCPU.sync_parameters": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "torch.distributed.broadcast"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.distributed_cpu.Module": {
  "data": {
   "shadows": "torch.nn.modules.Module"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu.Variable": {
  "data": {
   "shadows": "torch.autograd.Variable"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu._flatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._flatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu._unflatten_dense_tensors": {
  "data": {
   "shadows": "torch._utils._unflatten_dense_tensors"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.distributed_cpu.torch.utils.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.nn.parallel.parallel_apply": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.parallel_apply._get_device_index": {
  "data": {
   "shadows": "torch.cuda._utils._get_device_index"
  },
  "type": "import"
 },
 "torch.nn.parallel.parallel_apply.get_a_var": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "map",
    "torch.nn.parallel.parallel_apply.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.parallel_apply.parallel_apply": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "_worker",
    "enumerate",
    "input",
    "isinstance",
    "len",
    "list",
    "map",
    "module",
    "range",
    "torch.cuda._utils._get_device_index",
    "torch.nn.parallel.parallel_apply.threading",
    "torch.nn.parallel.parallel_apply.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.parallel_apply.parallel_apply._worker": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "input",
    "isinstance",
    "list",
    "module",
    "torch.nn.parallel.parallel_apply.get_a_var",
    "torch.nn.parallel.parallel_apply.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.parallel_apply.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "torch.nn.parallel.parallel_apply.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.replicate": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.replicate._get_device_index": {
  "data": {
   "shadows": "torch.cuda._utils._get_device_index"
  },
  "type": "import"
 },
 "torch.nn.parallel.replicate.comm": {
  "data": {
   "shadows": "torch.cuda.comm"
  },
  "type": "import"
 },
 "torch.nn.parallel.replicate.replicate": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "map",
    "range",
    "torch.cuda._utils._get_device_index",
    "torch.cuda.comm.broadcast_coalesced",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parallel.scatter_gather.gather": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "gather_map"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.gather.gather_map": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "dict",
    "gather_map",
    "isinstance",
    "len",
    "map",
    "torch.nn.parallel.scatter_gather.torch",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.scatter": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "scatter_map"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.scatter.scatter_map": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "map",
    "torch.nn.parallel.scatter_gather.torch",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.scatter_kwargs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "range",
    "torch.nn.parallel.scatter_gather.scatter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.parallel.scatter_gather.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.parallel.torch.nn.parallel.deprecated": {
  "data": {
   "shadows": "torch.nn.parallel.deprecated"
  },
  "type": "import"
 },
 "torch.nn.parameter": {
  "data": {},
  "type": "module"
 },
 "torch.nn.parameter.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "torch.nn.parameter.Parameter": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "torch.nn.parameter.torch"
   ]
  },
  "type": "class"
 },
 "torch.nn.parameter.Parameter.__deepcopy__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.parameter.Parameter.__new__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "torch.nn.parameter.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parameter.Parameter.__reduce_ex__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "torch.nn.parameter.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.parameter.Parameter.__repr__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "super",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.parameter.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.utils": {
  "data": {},
  "type": "module"
 },
 "torch.nn.utils.clip_grad": {
  "data": {},
  "type": "module"
 },
 "torch.nn.utils.clip_grad.clip_grad_norm": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "torch.nn.utils.clip_grad.clip_grad_norm_",
    "torch.nn.utils.clip_grad.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.clip_grad.clip_grad_norm_": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "filter",
    "float",
    "isinstance",
    "list",
    "max",
    "torch._six.inf",
    "torch.nn.utils.clip_grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.clip_grad.clip_grad_value_": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "filter",
    "float",
    "isinstance",
    "torch.nn.utils.clip_grad.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.clip_grad.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.nn.utils.clip_grad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.utils.clip_grad.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.utils.rnn": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "torch.nn.utils.rnn.PackedSequence": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "torch.nn.utils.rnn.PackedSequence_"
   ]
  },
  "type": "class"
 },
 "torch.nn.utils.rnn.PackedSequence.__new__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "super",
    "torch.nn.utils.rnn.PackedSequence",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.byte": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.char": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.cpu": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.double": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.float": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.half": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.int": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.is_cuda": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.long": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.short": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence.to": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.PackedSequence_": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "torch.nn.utils.rnn.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "torch.nn.utils.rnn.pack_padded_sequence": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "input",
    "isinstance",
    "torch.nn.utils.rnn.PackedSequence",
    "torch.nn.utils.rnn.torch",
    "torch.nn.utils.rnn.warnings"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.pack_sequence": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "torch.nn.utils.rnn.pack_padded_sequence",
    "torch.nn.utils.rnn.pad_sequence"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.pad_packed_sequence": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "ValueError",
    "torch.nn.utils.rnn.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.pad_sequence": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.rnn.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.utils.rnn.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.nn.utils.spectral_norm": {
  "data": {},
  "type": "module"
 },
 "torch.nn.utils.spectral_norm.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.__call__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm._solve_v_and_rescale": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "torch.nn.utils.spectral_norm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.apply": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeError",
    "delattr",
    "isinstance",
    "setattr",
    "staticmethod",
    "torch.nn.functional.normalize",
    "torch.nn.utils.spectral_norm.SpectralNorm",
    "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook",
    "torch.nn.utils.spectral_norm.SpectralNormStateDictHook",
    "torch.nn.utils.spectral_norm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.compute_weight": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "getattr",
    "range",
    "torch.nn.functional.normalize",
    "torch.nn.utils.spectral_norm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.remove": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "delattr",
    "torch.nn.utils.spectral_norm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNorm.reshape_weight_to_matrix": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook.__call__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "torch.nn.utils.spectral_norm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormLoadStateDictPreHook.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormStateDictHook": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.utils.spectral_norm.SpectralNormStateDictHook.__call__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.SpectralNormStateDictHook.__init__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.normalize": {
  "data": {
   "shadows": "torch.nn.functional.normalize"
  },
  "type": "import"
 },
 "torch.nn.utils.spectral_norm.remove_spectral_norm": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "torch.nn.utils.spectral_norm.SpectralNorm"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.spectral_norm": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.utils.spectral_norm.SpectralNorm",
    "torch.nn.utils.spectral_norm.torch"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.spectral_norm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.nn.utils.weight_norm": {
  "data": {},
  "type": "module"
 },
 "torch.nn.utils.weight_norm.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "torch.nn.utils.weight_norm.WeightNorm": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.nn.utils.weight_norm.WeightNorm.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.apply": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError",
    "getattr",
    "isinstance",
    "setattr",
    "staticmethod",
    "torch.nn.parameter.Parameter",
    "torch.nn.utils.weight_norm.WeightNorm",
    "torch.norm_except_dim"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.compute_weight": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "getattr",
    "torch._weight_norm"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.weight_norm.WeightNorm.remove": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "delattr",
    "torch.nn.parameter.Parameter"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.weight_norm._weight_norm": {
  "data": {
   "shadows": "torch._weight_norm"
  },
  "type": "import"
 },
 "torch.nn.utils.weight_norm.norm_except_dim": {
  "data": {
   "shadows": "torch.norm_except_dim"
  },
  "type": "import"
 },
 "torch.nn.utils.weight_norm.remove_weight_norm": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "torch.nn.utils.weight_norm.WeightNorm"
   ]
  },
  "type": "function"
 },
 "torch.nn.utils.weight_norm.weight_norm": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "torch.nn.utils.weight_norm.WeightNorm"
   ]
  },
  "type": "function"
 },
 "torch.no_grad": {
  "data": {
   "shadows": "torch.autograd.no_grad"
  },
  "type": "import"
 },
 "torch.old_flags": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "torch.onnx": {
  "data": {
   "symbols_in_volume": [
    "torch._C._onnx.OperatorExportTypes",
    "torch._C._onnx.PYTORCH_ONNX_CAFFE2_BUNDLE",
    "torch._C._onnx.TensorProtoDataType"
   ]
  },
  "type": "module"
 },
 "torch.onnx.ExportTypes": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "torch.onnx.ONNX_ARCHIVE_MODEL_PROTO_NAME": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "torch.onnx.OperatorExportTypes": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "torch.onnx.PYTORCH_ONNX_CAFFE2_BUNDLE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "torch.onnx.TensorProtoDataType": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "torch.onnx._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch.onnx._export": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "torch.onnx.utils._export"
   ]
  },
  "type": "function"
 },
 "torch.onnx._export_to_pretty_string": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "torch.onnx.utils._export_to_pretty_string"
   ]
  },
  "type": "function"
 },
 "torch.onnx._optimize_trace": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "torch.onnx.utils._optimize_graph"
   ]
  },
  "type": "function"
 },
 "torch.onnx._run_symbolic_function": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "torch.onnx.utils._run_symbolic_function"
   ]
  },
  "type": "function"
 },
 "torch.onnx._run_symbolic_method": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "torch.onnx.utils._run_symbolic_method"
   ]
  },
  "type": "function"
 },
 "torch.onnx.export": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "torch.onnx.utils.export"
   ]
  },
  "type": "function"
 },
 "torch.onnx.export_to_pretty_string": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "torch.onnx.utils.export_to_pretty_string"
   ]
  },
  "type": "function"
 },
 "torch.onnx.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "torch.onnx.operators": {
  "data": {},
  "type": "module"
 },
 "torch.onnx.operators.reshape_from_tensor_shape": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "torch.onnx.operators.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.operators.shape_as_tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch.onnx.operators.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.operators.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.onnx.operators.torch.onnx": {
  "data": {
   "shadows": "torch.onnx"
  },
  "type": "import"
 },
 "torch.onnx.operators.torch.onnx.utils": {
  "data": {
   "shadows": "torch.onnx.utils"
  },
  "type": "import"
 },
 "torch.onnx.set_training": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "torch.onnx.utils.set_training"
   ]
  },
  "type": "function"
 },
 "torch.onnx.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "torch.onnx.utils": {
  "data": {
   "shadows": "torch.onnx.utils"
  },
  "type": "import"
 },
 "torch.onnx.utils.ExportTypes": {
  "data": {
   "shadows": "torch.onnx.ExportTypes"
  },
  "type": "import"
 },
 "torch.onnx.utils.Function": {
  "data": {
   "shadows": "torch.autograd.Function"
  },
  "type": "import"
 },
 "torch.onnx.utils.ListType": {
  "data": {
   "shadows": "torch._C.ListType"
  },
  "type": "import"
 },
 "torch.onnx.utils.ONNX_ARCHIVE_MODEL_PROTO_NAME": {
  "data": {
   "shadows": "torch.onnx.ONNX_ARCHIVE_MODEL_PROTO_NAME"
  },
  "type": "import"
 },
 "torch.onnx.utils.OperatorExportTypes": {
  "data": {
   "shadows": "torch.onnx.OperatorExportTypes"
  },
  "type": "import"
 },
 "torch.onnx.utils._add_attribute": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "float",
    "getattr",
    "isinstance",
    "torch.onnx.utils._is_onnx_list",
    "torch.onnx.utils._scalar",
    "torch.onnx.utils.attr_pattern",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._export": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "torch.onnx.ExportTypes.COMPRESSED_ZIP_ARCHIVE",
    "torch.onnx.ExportTypes.DIRECTORY",
    "torch.onnx.ExportTypes.PROTOBUF_FILE",
    "torch.onnx.ExportTypes.ZIP_ARCHIVE",
    "torch.onnx.ONNX_ARCHIVE_MODEL_PROTO_NAME",
    "torch.onnx.OperatorExportTypes.ONNX",
    "torch.onnx.symbolic._onnx_opset_version",
    "torch.onnx.utils._model_to_graph",
    "torch.onnx.utils.os",
    "torch.onnx.utils.torch",
    "torch.onnx.utils.zipfile"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._export_to_pretty_string": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "torch.onnx.ExportTypes.PROTOBUF_FILE",
    "torch.onnx.OperatorExportTypes.ONNX",
    "torch.onnx.symbolic._onnx_opset_version",
    "torch.onnx.utils._model_to_graph"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._graph_at": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "torch.onnx.utils._graph_constant": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "set",
    "torch.onnx.utils.numbers",
    "torch.onnx.utils.torch",
    "type",
    "type.lower"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._graph_op": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "const_if_tensor",
    "dict",
    "list",
    "torch.onnx.utils._newNode",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._graph_op.const_if_tensor": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "isinstance",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._is_onnx_list": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "isinstance",
    "torch._six.container_abcs.Iterable",
    "torch._six.string_classes",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._model_to_graph": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "isinstance",
    "list",
    "print",
    "torch.jit._unique_state_dict",
    "torch.onnx.OperatorExportTypes.ONNX",
    "torch.onnx.utils._optimize_graph",
    "torch.onnx.utils._set_input_and_output_names",
    "torch.onnx.utils._trace_and_get_graph_from_model",
    "torch.onnx.utils.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._newNode": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "sorted",
    "torch.onnx.utils._add_attribute"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._node_getitem": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._onnx_opset_version": {
  "data": {
   "shadows": "torch.onnx.symbolic._onnx_opset_version"
  },
  "type": "import"
 },
 "torch.onnx.utils._optimize_graph": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "torch.onnx.OperatorExportTypes.RAW",
    "torch.onnx.utils._split_tensor_list_constants",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._run_symbolic_function": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "fn",
    "getattr",
    "hasattr",
    "symbolic_fn",
    "torch.onnx.OperatorExportTypes.ONNX",
    "torch.onnx.OperatorExportTypes.ONNX_ATEN",
    "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
    "torch.onnx.utils._graph_at",
    "torch.onnx.utils.torch",
    "torch.onnx.utils.warnings"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._run_symbolic_method": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "TypeError",
    "symbolic_fn"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._scalar": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "torch.onnx.utils._set_input_and_output_names": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "list",
    "set_names"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._set_input_and_output_names.set_names": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._split_tensor_list_constants": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "torch._C.ListType.ofTensors"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._trace": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "isinstance",
    "torch.onnx.utils._optimize_graph",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._trace_and_get_graph_from_model": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "RuntimeError",
    "torch.jit._unique_state_dict",
    "torch.onnx.utils.set_training",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils._unique_state_dict": {
  "data": {
   "shadows": "torch.jit._unique_state_dict"
  },
  "type": "import"
 },
 "torch.onnx.utils.attr_pattern": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "torch.onnx.utils.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "torch.onnx.utils.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "torch.onnx.utils.export": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "torch.onnx.OperatorExportTypes.ATEN",
    "torch.onnx.OperatorExportTypes.ONNX",
    "torch.onnx.OperatorExportTypes.ONNX_ATEN_FALLBACK",
    "torch.onnx.OperatorExportTypes.RAW",
    "torch.onnx.utils._export",
    "torch.onnx.utils.torch"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils.export_to_pretty_string": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "torch.onnx.ExportTypes.PROTOBUF_FILE",
    "torch.onnx.OperatorExportTypes.ATEN",
    "torch.onnx.OperatorExportTypes.ONNX",
    "torch.onnx.OperatorExportTypes.RAW",
    "torch.onnx.utils._export_to_pretty_string"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils.function": {
  "data": {
   "shadows": "torch.autograd.function"
  },
  "type": "import"
 },
 "torch.onnx.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "torch.onnx.utils.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "torch.onnx.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.onnx.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "torch.onnx.utils.set_training": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "torch.onnx.utils.contextlib"
   ]
  },
  "type": "function"
 },
 "torch.onnx.utils.string_classes": {
  "data": {
   "shadows": "torch._six.string_classes"
  },
  "type": "import"
 },
 "torch.onnx.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.onnx.utils.torch.autograd": {
  "data": {
   "shadows": "torch.autograd"
  },
  "type": "import"
 },
 "torch.onnx.utils.torch.jit": {
  "data": {
   "shadows": "torch.jit"
  },
  "type": "import"
 },
 "torch.onnx.utils.torch.onnx.symbolic": {
  "data": {
   "shadows": "torch.onnx.symbolic"
  },
  "type": "import"
 },
 "torch.onnx.utils.torch.serialization": {
  "data": {
   "shadows": "torch.serialization"
  },
  "type": "import"
 },
 "torch.onnx.utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "torch.onnx.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.onnx.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "torch.ops": {
  "data": {
   "shadows": "torch._ops.ops"
  },
  "type": "import"
 },
 "torch.optim": {
  "data": {},
  "type": "module"
 },
 "torch.optim.adadelta": {
  "data": {},
  "type": "module"
 },
 "torch.optim.adadelta.Adadelta": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.optim.adadelta.Adadelta.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.adadelta.Adadelta"
   ]
  },
  "type": "function"
 },
 "torch.optim.adadelta.Adadelta.step": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "torch.optim.adadelta.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.adadelta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.adagrad": {
  "data": {},
  "type": "module"
 },
 "torch.optim.adagrad.Adagrad": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "torch.optim.adagrad.Adagrad.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.adagrad.Adagrad",
    "torch.optim.adagrad.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.adagrad.Adagrad.share_memory": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "torch.optim.adagrad.Adagrad.step": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "make_sparse"
   ]
  },
  "type": "function"
 },
 "torch.optim.adagrad.Adagrad.step.make_sparse": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "constructor"
   ]
  },
  "type": "function"
 },
 "torch.optim.adagrad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.adam": {
  "data": {},
  "type": "module"
 },
 "torch.optim.adam.Adam": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.optim.adam.Adam.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.adam.Adam"
   ]
  },
  "type": "function"
 },
 "torch.optim.adam.Adam.__setstate__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "torch.optim.adam.Adam"
   ]
  },
  "type": "function"
 },
 "torch.optim.adam.Adam.step": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "torch.optim.adam.math",
    "torch.optim.adam.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.adam.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.optim.adam.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.adamax": {
  "data": {},
  "type": "module"
 },
 "torch.optim.adamax.Adamax": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "torch.optim.adamax.Adamax.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.adamax.Adamax"
   ]
  },
  "type": "function"
 },
 "torch.optim.adamax.Adamax.step": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "torch.optim.adamax.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.adamax.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.asgd": {
  "data": {},
  "type": "module"
 },
 "torch.optim.asgd.ASGD": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.optim.asgd.ASGD.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.asgd.ASGD"
   ]
  },
  "type": "function"
 },
 "torch.optim.asgd.ASGD.step": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "max",
    "torch.optim.asgd.math",
    "torch.optim.asgd.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.asgd.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.optim.asgd.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.lbfgs": {
  "data": {},
  "type": "module"
 },
 "torch.optim.lbfgs.LBFGS": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.optim.lbfgs.LBFGS.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "super",
    "torch.optim.lbfgs.LBFGS"
   ]
  },
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._add_grad": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._gather_flat_grad": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "torch.optim.lbfgs.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS._numel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "functools.reduce"
   ]
  },
  "type": "function"
 },
 "torch.optim.lbfgs.LBFGS.step": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "abs",
    "closure",
    "float",
    "len",
    "min",
    "range",
    "torch.optim.lbfgs.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.lbfgs.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "torch.optim.lbfgs.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.lr_scheduler": {
  "data": {},
  "type": "module"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler._LRScheduler"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "super",
    "torch.optim.lr_scheduler.CosineAnnealingLR"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.CosineAnnealingLR.get_lr": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.math"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ExponentialLR": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler._LRScheduler"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler.ExponentialLR.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "super",
    "torch.optim.lr_scheduler.ExponentialLR"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ExponentialLR.get_lr": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler._LRScheduler"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler.LambdaLR.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "super",
    "torch.optim.lr_scheduler.LambdaLR",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR.get_lr": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "lmbda",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR.load_state_dict": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.LambdaLR.state_dict": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "torch.optim.lr_scheduler.types"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiStepLR": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler._LRScheduler"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler.MultiStepLR.__init__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "sorted",
    "super",
    "torch.optim.lr_scheduler.MultiStepLR"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.MultiStepLR.get_lr": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bisect.bisect_right"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._cmp": {
  "data": {
   "lineno": 382
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._init_is_better": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "functools.partial",
    "torch._six.inf"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._reduce_lr": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "max",
    "print"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau._reset": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.in_cooldown": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.load_state_dict": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.state_dict": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.ReduceLROnPlateau.step": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.StepLR": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler._LRScheduler"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler.StepLR.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "super",
    "torch.optim.lr_scheduler.StepLR"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.StepLR.get_lr": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.optim.lr_scheduler._LRScheduler.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "map",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.get_lr": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.load_state_dict": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.state_dict": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler._LRScheduler.step": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.optim.lr_scheduler.bisect_right": {
  "data": {
   "shadows": "bisect.bisect_right"
  },
  "type": "import"
 },
 "torch.optim.lr_scheduler.inf": {
  "data": {
   "shadows": "torch._six.inf"
  },
  "type": "import"
 },
 "torch.optim.lr_scheduler.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.optim.lr_scheduler.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "torch.optim.lr_scheduler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.lr_scheduler.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "torch.optim.optimizer": {
  "data": {
   "symbols_in_volume": [
    "torch.optim.optimizer._RequiredParameter"
   ]
  },
  "type": "module"
 },
 "torch.optim.optimizer.Optimizer": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.optim.optimizer.Optimizer.__getstate__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.defaultdict",
    "dict",
    "isinstance",
    "len",
    "list",
    "torch.optim.optimizer.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.__repr__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "enumerate",
    "sorted"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.__setstate__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.add_param_group": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "set",
    "torch.optim.optimizer.required",
    "torch.optim.optimizer.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.load_state_dict": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "cast",
    "collections.defaultdict",
    "copy.deepcopy",
    "dict",
    "itertools.chain",
    "len",
    "update_group",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.load_state_dict.cast": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "cast",
    "dict",
    "isinstance",
    "torch._six.container_abcs.Iterable",
    "torch.optim.optimizer.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.load_state_dict.update_group": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.state_dict": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "id",
    "isinstance",
    "pack_group",
    "torch.optim.optimizer.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.state_dict.pack_group": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.step": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.optim.optimizer.Optimizer.zero_grad": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "torch.optim.optimizer._RequiredParameter": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.optim.optimizer._RequiredParameter.__repr__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "torch.optim.optimizer.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "torch.optim.optimizer.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "torch.optim.optimizer.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "torch.optim.optimizer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "torch.optim.optimizer.required": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "torch.optim.optimizer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.rmsprop": {
  "data": {},
  "type": "module"
 },
 "torch.optim.rmsprop.RMSprop": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "torch.optim.rmsprop.RMSprop.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.rmsprop.RMSprop"
   ]
  },
  "type": "function"
 },
 "torch.optim.rmsprop.RMSprop.__setstate__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "super",
    "torch.optim.rmsprop.RMSprop"
   ]
  },
  "type": "function"
 },
 "torch.optim.rmsprop.RMSprop.step": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "torch.optim.rmsprop.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.rmsprop.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.rprop": {
  "data": {},
  "type": "module"
 },
 "torch.optim.rprop.Rprop": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.optim.rprop.Rprop.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.rprop.Rprop"
   ]
  },
  "type": "function"
 },
 "torch.optim.rprop.Rprop.step": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "torch.optim.rprop.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.rprop.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.optim.rprop.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.sgd": {
  "data": {},
  "type": "module"
 },
 "torch.optim.sgd.SGD": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "torch.optim.sgd.SGD.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.sgd.SGD"
   ]
  },
  "type": "function"
 },
 "torch.optim.sgd.SGD.__setstate__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "super",
    "torch.optim.sgd.SGD"
   ]
  },
  "type": "function"
 },
 "torch.optim.sgd.SGD.step": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "closure",
    "torch.optim.sgd.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.sgd.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.optim.sparse_adam": {
  "data": {},
  "type": "module"
 },
 "torch.optim.sparse_adam.SparseAdam": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "torch.optim.sparse_adam.SparseAdam.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "torch.optim.sparse_adam.SparseAdam"
   ]
  },
  "type": "function"
 },
 "torch.optim.sparse_adam.SparseAdam.step": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "make_sparse",
    "torch.optim.sparse_adam.math",
    "torch.optim.sparse_adam.torch"
   ]
  },
  "type": "function"
 },
 "torch.optim.sparse_adam.SparseAdam.step.make_sparse": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "constructor"
   ]
  },
  "type": "function"
 },
 "torch.optim.sparse_adam.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.optim.sparse_adam.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "torch.py_dll_path": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "torch.random": {
  "data": {},
  "type": "module"
 },
 "torch.random._fork_rng_warned_already": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "torch.random.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "torch.random.default_generator": {
  "data": {
   "shadows": "torch._C.default_generator"
  },
  "type": "import"
 },
 "torch.random.fork_rng": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "list",
    "range",
    "torch.random._fork_rng_warned_already",
    "torch.random.contextlib",
    "torch.random.torch",
    "torch.random.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.random.get_rng_state": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "torch._C.default_generator.get_state"
   ]
  },
  "type": "function"
 },
 "torch.random.initial_seed": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "torch._C.default_generator.initial_seed"
   ]
  },
  "type": "function"
 },
 "torch.random.manual_seed": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "torch._C.default_generator.manual_seed",
    "torch.random.torch"
   ]
  },
  "type": "function"
 },
 "torch.random.set_rng_state": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "torch._C.default_generator.set_state"
   ]
  },
  "type": "function"
 },
 "torch.random.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.random.torch.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "torch.random.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.serialization": {
  "data": {
   "symbols_in_volume": [
    "torch.serialization._cpu_deserialize",
    "torch.serialization._cpu_tag",
    "torch.serialization._cuda_deserialize",
    "torch.serialization._cuda_tag",
    "torch.serialization.register_package",
    "torch.serialization.struct",
    "torch.serialization.sys"
   ]
  },
  "type": "module"
 },
 "torch.serialization.DEFAULT_PROTOCOL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "torch.serialization.INT_SIZE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "torch.serialization.LONG_SIZE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "torch.serialization.MAGIC_NUMBER": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "torch.serialization.PROTOCOL_VERSION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "torch.serialization.SHORT_SIZE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "torch.serialization.STORAGE_KEY_SEPARATOR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "torch.serialization.SourceChangeWarning": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "torch.serialization.StringIO": {
  "data": {
   "shadows": "StringIO"
  },
  "type": "import"
 },
 "torch.serialization._check_seekable": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AttributeError",
    "raise_err_msg",
    "torch.serialization.io"
   ]
  },
  "type": "function"
 },
 "torch.serialization._check_seekable.raise_err_msg": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.serialization._cpu_deserialize": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "torch.serialization._cpu_tag": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.serialization._cuda_deserialize": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "torch.serialization.validate_cuda_device"
   ]
  },
  "type": "function"
 },
 "torch.serialization._cuda_tag": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.serialization._is_compressed_file": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "torch.serialization._load": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "isinstance",
    "legacy_load",
    "torch.serialization.MAGIC_NUMBER",
    "torch.serialization.PROTOCOL_VERSION",
    "torch.serialization._check_seekable",
    "torch.serialization._should_read_directly",
    "torch.serialization.default_restore_location",
    "torch.serialization.tarfile",
    "torch.serialization.torch",
    "torch.serialization.zipfile"
   ]
  },
  "type": "function"
 },
 "torch.serialization._load._check_container_source": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "len",
    "open",
    "torch.serialization.SourceChangeWarning",
    "torch.serialization.difflib",
    "torch.serialization.inspect",
    "torch.serialization.torch",
    "torch.serialization.warnings"
   ]
  },
  "type": "function"
 },
 "torch.serialization._load.legacy_load": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "contextlib.closing",
    "open",
    "range",
    "restore_location",
    "tensor_type",
    "torch.serialization.mkdtemp",
    "torch.serialization.os",
    "torch.serialization.storage_to_tensor_type",
    "torch.serialization.struct",
    "torch.serialization.tarfile"
   ]
  },
  "type": "function"
 },
 "torch.serialization._load.legacy_load.persistent_load": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "_check_container_source",
    "all",
    "int",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.serialization._load.persistent_load": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_container_source",
    "all",
    "data_type",
    "isinstance",
    "restore_location",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.serialization._load.restore_location": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "map_location",
    "torch.serialization.default_restore_location"
   ]
  },
  "type": "function"
 },
 "torch.serialization._package_registry": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "torch.serialization._save": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "isinstance",
    "sorted",
    "torch.serialization.INT_SIZE",
    "torch.serialization.LONG_SIZE",
    "torch.serialization.MAGIC_NUMBER",
    "torch.serialization.PROTOCOL_VERSION",
    "torch.serialization.SHORT_SIZE",
    "torch.serialization.StringIO",
    "torch.serialization._should_read_directly",
    "torch.serialization.sys"
   ]
  },
  "type": "function"
 },
 "torch.serialization._save.persistent_id": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "issubclass",
    "str",
    "torch.nn.Module",
    "torch.serialization.inspect",
    "torch.serialization.location_tag",
    "torch.serialization.normalize_storage_type",
    "torch.serialization.torch",
    "torch.serialization.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.serialization._should_read_directly": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AttributeError",
    "torch.serialization._is_compressed_file",
    "torch.serialization.io"
   ]
  },
  "type": "function"
 },
 "torch.serialization._string_classes": {
  "data": {
   "shadows": "string_classes"
  },
  "type": "import"
 },
 "torch.serialization._with_file_like": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "body",
    "isinstance",
    "open",
    "str",
    "torch.serialization.pathlib",
    "torch.serialization.sys"
   ]
  },
  "type": "function"
 },
 "torch.serialization.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "torch.serialization.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "torch.serialization.default_restore_location": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "RuntimeError",
    "fn",
    "torch.serialization._package_registry",
    "torch.serialization.torch"
   ]
  },
  "type": "function"
 },
 "torch.serialization.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "torch.serialization.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "torch.serialization.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "torch.serialization.load": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "cPickle",
    "isinstance",
    "open",
    "str",
    "torch.serialization._load",
    "torch.serialization.pathlib",
    "torch.serialization.sys"
   ]
  },
  "type": "function"
 },
 "torch.serialization.location_tag": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeError",
    "tagger",
    "torch.serialization._package_registry",
    "torch.serialization.torch"
   ]
  },
  "type": "function"
 },
 "torch.serialization.mkdtemp": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "torch.serialization.shutil",
    "torch.serialization.tempfile"
   ]
  },
  "type": "function"
 },
 "torch.serialization.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "torch.serialization.normalize_storage_type": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "getattr",
    "torch.serialization.torch"
   ]
  },
  "type": "function"
 },
 "torch.serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.serialization.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "torch.serialization.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "torch.serialization.register_package": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "torch.serialization._package_registry"
   ]
  },
  "type": "function"
 },
 "torch.serialization.save": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "cPickle",
    "torch.serialization.DEFAULT_PROTOCOL",
    "torch.serialization._save",
    "torch.serialization._with_file_like"
   ]
  },
  "type": "function"
 },
 "torch.serialization.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "torch.serialization.storage_to_tensor_type": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_import_dotted_name",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.serialization.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "torch.serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.serialization.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "torch.serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "torch.serialization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.serialization.validate_cuda_device": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "int",
    "isinstance",
    "max",
    "str",
    "torch.serialization.torch"
   ]
  },
  "type": "function"
 },
 "torch.serialization.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.serialization.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "torch.set_default_dtype": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "torch.set_default_tensor_type": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "_import_dotted_name",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "torch.set_grad_enabled": {
  "data": {
   "shadows": "torch.autograd.set_grad_enabled"
  },
  "type": "import"
 },
 "torch.sparse": {
  "data": {},
  "type": "module"
 },
 "torch.sparse.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "torch.sparse.addmm": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "torch.sparse.torch"
   ]
  },
  "type": "function"
 },
 "torch.sparse.mm": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "torch.sparse.torch"
   ]
  },
  "type": "function"
 },
 "torch.sparse.sum": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "input",
    "torch.sparse.torch"
   ]
  },
  "type": "function"
 },
 "torch.sparse.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.storage": {
  "data": {
   "symbols_in_volume": [
    "torch.storage._StorageBase"
   ]
  },
  "type": "module"
 },
 "torch.storage._StorageBase": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.storage._StorageBase.__copy__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "torch.storage._StorageBase.__deepcopy__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "torch.storage._StorageBase.__iter__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "iter",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.__reduce__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "torch.storage.io",
    "torch.storage.torch"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.__repr__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.__sizeof__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super",
    "torch.storage._StorageBase"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.__str__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "torch.storage.torch"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase._new_shared": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._new_using_fd",
    "cls._new_using_filename",
    "torch.multiprocessing.get_sharing_strategy"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.byte": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.char": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.clone": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "torch.storage.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.cpu": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "getattr",
    "torch.storage.torch"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.double": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.float": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.half": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.int": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.long": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.pin_memory": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "torch.storage.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.share_memory_": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "torch.multiprocessing.get_sharing_strategy"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.short": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "torch.storage._StorageBase.tolist": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "torch.storage._load_from_bytes": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "torch.storage.io",
    "torch.storage.torch"
   ]
  },
  "type": "function"
 },
 "torch.storage.get_sharing_strategy": {
  "data": {
   "shadows": "torch.multiprocessing.get_sharing_strategy"
  },
  "type": "import"
 },
 "torch.storage.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "torch.storage.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.storage.torch.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "torch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.tensor": {
  "data": {},
  "type": "module"
 },
 "torch.tensor.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "torch.tensor.Resize": {
  "data": {
   "shadows": "torch.autograd._functions.Resize"
  },
  "type": "import"
 },
 "torch.tensor.Tensor": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch._C._TensorBase.__idiv__",
    "torch._C._TensorBase.abs",
    "torch._C._TensorBase.detach",
    "torch._C._TensorBase.detach_",
    "torch._C._TensorBase.eq",
    "torch._C._TensorBase.ge",
    "torch._C._TensorBase.gt",
    "torch._C._TensorBase.le",
    "torch._C._TensorBase.lt",
    "torch._C._TensorBase.ne",
    "torch._C._TensorBase.neg",
    "torch._C._TensorBase.pow",
    "torch._C._add_docstr",
    "torch.tensor.torch"
   ]
  },
  "type": "class"
 },
 "torch.tensor.Tensor.__array__": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__array_wrap__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "bool",
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__cuda_array_interface__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "AttributeError",
    "RuntimeError",
    "dict",
    "property",
    "torch.tensor.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__deepcopy__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "id",
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__dir__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "dir",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__floordiv__": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__format__": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "object.__format__"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__hash__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__ipow__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__iter__": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "RuntimeWarning",
    "TypeError",
    "iter",
    "range",
    "torch._six.imap",
    "torch.tensor.torch",
    "torch.tensor.warnings"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__len__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__rdiv__": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__reduce_ex__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "torch.tensor.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__repr__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hasattr",
    "torch.tensor.sys",
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__reversed__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__rfloordiv__": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__rpow__": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__rsub__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "torch._C._VariableFunctions.rsub"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.__setstate__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.argmax": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.argmin": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.argsort": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.backward": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.btrifact": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.tensor.Tensor",
    "torch.tensor.warnings"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.index_add": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "torch.tensor.Tensor.index_copy": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "torch.tensor.Tensor.index_fill": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "torch.tensor.Tensor.is_pinned": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "torch.tensor.Tensor.is_shared": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "torch.tensor.Tensor.masked_fill": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "torch.tensor.Tensor.masked_scatter": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "torch.tensor.Tensor.norm": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.potrf": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "super",
    "torch.tensor.Tensor",
    "torch.tensor.warnings"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.register_hook": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "RuntimeError",
    "collections.OrderedDict",
    "torch.utils.hooks.RemovableHandle"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.reinforce": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "RuntimeError",
    "trim"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.reinforce.trim": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "str.split"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.resize": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "torch.autograd._functions.Resize.apply",
    "torch.tensor.warnings"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.resize_as": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "torch.autograd._functions.Resize.apply",
    "torch.tensor.warnings"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.retain_grad": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "torch.tensor.weakref"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.retain_grad.retain_grad_hook": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "weak_self"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.scatter": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "torch.tensor.Tensor.scatter_add": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "torch.tensor.Tensor.share_memory_": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "torch.tensor.Tensor.split": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "super",
    "torch.tensor.Tensor"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.stft": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor.Tensor.unique": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "sorted",
    "torch.tensor.torch"
   ]
  },
  "type": "function"
 },
 "torch.tensor._C": {
  "data": {
   "shadows": "torch._C"
  },
  "type": "import"
 },
 "torch.tensor._add_docstr": {
  "data": {
   "shadows": "torch._C._add_docstr"
  },
  "type": "import"
 },
 "torch.tensor.hooks": {
  "data": {
   "shadows": "torch.utils.hooks"
  },
  "type": "import"
 },
 "torch.tensor.imap": {
  "data": {
   "shadows": "torch._six.imap"
  },
  "type": "import"
 },
 "torch.tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.tensor.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.tensor.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.tensor.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "torch.testing": {
  "data": {
   "symbols_in_volume": [
    "torch.testing.torch"
   ]
  },
  "type": "module"
 },
 "torch.testing.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "torch.testing._default_tolerances": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "torch.testing._get_default_tolerance": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "max",
    "str",
    "torch.testing._default_tolerances"
   ]
  },
  "type": "function"
 },
 "torch.testing.assert_allclose": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "_unravel_index",
    "isinstance",
    "list",
    "torch.testing._get_default_tolerance",
    "torch.testing.torch"
   ]
  },
  "type": "function"
 },
 "torch.testing.assert_allclose._unravel_index": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.testing.get_all_dtypes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.testing.torch"
   ]
  },
  "type": "function"
 },
 "torch.testing.make_non_contiguous": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "input",
    "input.copy_",
    "input.narrow",
    "input.select",
    "input.size",
    "len",
    "list",
    "range",
    "torch.testing.random",
    "torch.testing.torch"
   ]
  },
  "type": "function"
 },
 "torch.testing.rand_like": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "torch.testing.randn_like": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "torch.testing.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "torch.testing.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.th_dll_path": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "torch.torch._nvrtc": {
  "data": {
   "shadows": "torch._nvrtc"
  },
  "type": "import"
 },
 "torch.torch.autograd": {
  "data": {
   "shadows": "torch.autograd"
  },
  "type": "import"
 },
 "torch.torch.backends.cuda": {
  "data": {
   "shadows": "torch.backends.cuda"
  },
  "type": "import"
 },
 "torch.torch.backends.mkl": {
  "data": {
   "shadows": "torch.backends.mkl"
  },
  "type": "import"
 },
 "torch.torch.cuda": {
  "data": {
   "shadows": "torch.cuda"
  },
  "type": "import"
 },
 "torch.torch.distributions": {
  "data": {
   "shadows": "torch.distributions"
  },
  "type": "import"
 },
 "torch.torch.jit": {
  "data": {
   "shadows": "torch.jit"
  },
  "type": "import"
 },
 "torch.torch.multiprocessing": {
  "data": {
   "shadows": "torch.multiprocessing"
  },
  "type": "import"
 },
 "torch.torch.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "torch.torch.onnx": {
  "data": {
   "shadows": "torch.onnx"
  },
  "type": "import"
 },
 "torch.torch.optim": {
  "data": {
   "shadows": "torch.optim"
  },
  "type": "import"
 },
 "torch.torch.random": {
  "data": {
   "shadows": "torch.random"
  },
  "type": "import"
 },
 "torch.torch.sparse": {
  "data": {
   "shadows": "torch.sparse"
  },
  "type": "import"
 },
 "torch.torch.testing": {
  "data": {
   "shadows": "torch.testing"
  },
  "type": "import"
 },
 "torch.torch.utils.backcompat": {
  "data": {
   "shadows": "torch.utils.backcompat"
  },
  "type": "import"
 },
 "torch.typename": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "torch.utils": {
  "data": {},
  "type": "module"
 },
 "torch.utils._cpp_extension_versioner": {
  "data": {
   "symbols_in_volume": [
    "torch.utils._cpp_extension_versioner.collections"
   ]
  },
  "type": "module"
 },
 "torch.utils._cpp_extension_versioner.Entry": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner.bump_version_if_changed": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "torch.utils._cpp_extension_versioner.Entry",
    "torch.utils._cpp_extension_versioner.hash_build_arguments",
    "torch.utils._cpp_extension_versioner.hash_source_files",
    "torch.utils._cpp_extension_versioner.update_hash"
   ]
  },
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.ExtensionVersioner.get_version": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils._cpp_extension_versioner.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "torch.utils._cpp_extension_versioner.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils._cpp_extension_versioner.hash_build_arguments": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "torch.utils._cpp_extension_versioner.update_hash"
   ]
  },
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.hash_source_files": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "open",
    "torch.utils._cpp_extension_versioner.update_hash"
   ]
  },
  "type": "function"
 },
 "torch.utils._cpp_extension_versioner.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils._cpp_extension_versioner.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.utils._cpp_extension_versioner.update_hash": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "torch.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils.backcompat": {
  "data": {
   "symbols_in_volume": [
    "torch._C._get_backcompat_broadcast_warn",
    "torch._C._get_backcompat_keepdim_warn",
    "torch._C._set_backcompat_broadcast_warn",
    "torch._C._set_backcompat_keepdim_warn",
    "torch.utils.backcompat.Warning"
   ]
  },
  "type": "module"
 },
 "torch.utils.backcompat.Warning": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "torch.utils.backcompat.Warning.__init__": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "torch.utils.backcompat.Warning.get_enabled": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "torch.utils.backcompat.Warning.set_enabled": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "torch.utils.backcompat._get_backcompat_broadcast_warn": {
  "data": {
   "shadows": "torch._C._get_backcompat_broadcast_warn"
  },
  "type": "import"
 },
 "torch.utils.backcompat._get_backcompat_keepdim_warn": {
  "data": {
   "shadows": "torch._C._get_backcompat_keepdim_warn"
  },
  "type": "import"
 },
 "torch.utils.backcompat._set_backcompat_broadcast_warn": {
  "data": {
   "shadows": "torch._C._set_backcompat_broadcast_warn"
  },
  "type": "import"
 },
 "torch.utils.backcompat._set_backcompat_keepdim_warn": {
  "data": {
   "shadows": "torch._C._set_backcompat_keepdim_warn"
  },
  "type": "import"
 },
 "torch.utils.backcompat.broadcast_warning": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "torch.utils.backcompat.keepdim_warning": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "torch.utils.bottleneck": {
  "data": {},
  "type": "module"
 },
 "torch.utils.bottleneck.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "torch.utils.bottleneck.__main__.main"
   ]
  },
  "type": "module"
 },
 "torch.utils.bottleneck.__main__.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.autograd_prof_summary": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "torch.utils.bottleneck.__main__.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.compiled_with_cuda": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.cprof_summary": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "torch.utils.bottleneck.__main__.cpu_time_total": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.descript": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "torch.utils.bottleneck.__main__.env_summary": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "torch.utils.bottleneck.__main__.get_env_info": {
  "data": {
   "shadows": "torch.utils.collect_env.get_env_info"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.main": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "abs",
    "compile",
    "len",
    "open",
    "print",
    "torch.utils.bottleneck.__main__.cpu_time_total",
    "torch.utils.bottleneck.__main__.descript",
    "torch.utils.bottleneck.__main__.env_summary",
    "torch.utils.bottleneck.__main__.os",
    "torch.utils.bottleneck.__main__.parse_args",
    "torch.utils.bottleneck.__main__.print_autograd_prof_summary",
    "torch.utils.bottleneck.__main__.print_cprofile_summary",
    "torch.utils.bottleneck.__main__.redirect_argv",
    "torch.utils.bottleneck.__main__.run_autograd_prof",
    "torch.utils.bottleneck.__main__.run_cprofile",
    "torch.utils.bottleneck.__main__.run_env_analysis",
    "torch.utils.bottleneck.__main__.sys",
    "torch.utils.bottleneck.__main__.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.parse_args": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "str",
    "torch.utils.bottleneck.__main__.argparse",
    "torch.utils.bottleneck.__main__.descript"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.print_autograd_prof_summary": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "getattr",
    "print",
    "sorted",
    "torch.utils.bottleneck.__main__.autograd_prof_summary",
    "torch.utils.bottleneck.__main__.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.print_cprofile_summary": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "print",
    "torch.utils.bottleneck.__main__.cprof_summary",
    "torch.utils.bottleneck.__main__.pstats"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.profiler": {
  "data": {
   "shadows": "torch.autograd.profiler"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.redirect_argv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "torch.utils.bottleneck.__main__.sys"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_autograd_prof": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "print",
    "run_prof",
    "torch.utils.bottleneck.__main__.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_autograd_prof.run_prof": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "exec",
    "torch.autograd.profiler.profile"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_cprofile": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "exec",
    "print",
    "torch.utils.bottleneck.__main__.cProfile"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.run_env_analysis": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "print",
    "torch.utils.bottleneck.__main__.compiled_with_cuda",
    "torch.utils.bottleneck.__main__.env_summary",
    "torch.utils.bottleneck.__main__.sys",
    "torch.utils.collect_env.get_env_info"
   ]
  },
  "type": "function"
 },
 "torch.utils.bottleneck.__main__.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.utils.bottleneck.__main__.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.checkpoint": {
  "data": {},
  "type": "module"
 },
 "torch.utils.checkpoint.CheckpointFunction": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "torch.utils.checkpoint.torch"
   ]
  },
  "type": "class"
 },
 "torch.utils.checkpoint.CheckpointFunction.backward": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "staticmethod",
    "torch.utils.checkpoint.detach_variable",
    "torch.utils.checkpoint.preserve_rng_state",
    "torch.utils.checkpoint.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.CheckpointFunction.forward": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "run_function",
    "staticmethod",
    "torch.utils.checkpoint.check_backward_validity",
    "torch.utils.checkpoint.preserve_rng_state",
    "torch.utils.checkpoint.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils.checkpoint.check_backward_validity": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "any",
    "torch.utils.checkpoint.warnings"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "torch.utils.checkpoint.CheckpointFunction"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint_sequential": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "run_function",
    "torch.utils.checkpoint.checkpoint",
    "torch.utils.checkpoint.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint_sequential.run_function": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "torch.utils.checkpoint.checkpoint_sequential.run_function.forward": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "isinstance",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.detach_variable": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "torch.utils.checkpoint.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils.checkpoint.preserve_rng_state": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "torch.utils.checkpoint.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils.checkpoint.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.checkpoint.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.utils.checkpoint.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.utils.data": {
  "data": {},
  "type": "module"
 },
 "torch.utils.data.dataloader": {
  "data": {
   "symbols_in_volume": [
    "torch.utils.data.dataloader.IS_WINDOWS",
    "torch.utils.data.dataloader._set_python_exit_flag",
    "torch.utils.data.dataloader.atexit",
    "torch.utils.data.dataloader.sys",
    "torch.utils.data.dataloader.torch"
   ]
  },
  "type": "module"
 },
 "torch.utils.data.dataloader.BOOL": {
  "data": {
   "shadows": "ctypes.wintypes.BOOL"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.DWORD": {
  "data": {
   "shadows": "ctypes.wintypes.DWORD"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.DataLoader": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataloader.DataLoader.__init__": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "BatchSampler",
    "RandomSampler",
    "SequentialSampler",
    "ValueError",
    "collate_fn",
    "torch.utils.data.dataloader.default_collate"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.__iter__": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "torch.utils.data.dataloader._DataLoaderIter"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.__len__": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.DataLoader.__setattr__": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.utils.data.dataloader.DataLoader"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.ExceptionWrapper": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataloader.ExceptionWrapper.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch.utils.data.dataloader.traceback"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.FileNotFoundError": {
  "data": {
   "shadows": "torch._six.FileNotFoundError"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.HANDLE": {
  "data": {
   "shadows": "ctypes.wintypes.HANDLE"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.IS_WINDOWS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "torch.utils.data.dataloader.MP_STATUS_CHECK_INTERVAL": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "torch.utils.data.dataloader.ManagerWatchdog": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataloader.ManagerWatchdog.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "torch.utils.data.dataloader.os"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.ManagerWatchdog.is_alive": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "torch.utils.data.dataloader.os"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataloader._DataLoaderIter.__del__": {
  "data": {
   "lineno": 715
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter.__getstate__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "Queue.Queue",
    "id",
    "iter",
    "range",
    "torch._C._update_worker_pids",
    "torch.multiprocessing.Event",
    "torch.multiprocessing.Process",
    "torch.multiprocessing.Queue",
    "torch.utils.data.dataloader._pin_memory_loop",
    "torch.utils.data.dataloader._set_SIGCHLD_handler",
    "torch.utils.data.dataloader._worker_loop",
    "torch.utils.data.dataloader.threading",
    "torch.utils.data.dataloader.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter.__iter__": {
  "data": {
   "lineno": 641
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter.__len__": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter.__next__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "torch.utils.data.dataloader.pin_memory_batch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter._get_batch": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "Queue.Empty",
    "RuntimeError",
    "torch.utils.data.dataloader.MP_STATUS_CHECK_INTERVAL"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter._process_next_batch": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "isinstance",
    "torch.utils.data.dataloader.ExceptionWrapper"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter._put_indices": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._DataLoaderIter._shutdown_workers": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "hasattr",
    "id",
    "torch._C._remove_worker_pids",
    "torch.utils.data.dataloader._python_exit_status"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._SIGCHLD_handler_set": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "torch.utils.data.dataloader._error_if_any_worker_fails": {
  "data": {
   "shadows": "torch._C._error_if_any_worker_fails"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader._pin_memory_loop": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Exception",
    "Queue.Empty",
    "isinstance",
    "torch.utils.data.dataloader.ExceptionWrapper",
    "torch.utils.data.dataloader.MP_STATUS_CHECK_INTERVAL",
    "torch.utils.data.dataloader.pin_memory_batch",
    "torch.utils.data.dataloader.sys",
    "torch.utils.data.dataloader.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._python_exit_status": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "torch.utils.data.dataloader._remove_worker_pids": {
  "data": {
   "shadows": "torch._C._remove_worker_pids"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader._set_SIGCHLD_handler": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "callable",
    "isinstance",
    "torch.utils.data.dataloader._SIGCHLD_handler_set",
    "torch.utils.data.dataloader.signal",
    "torch.utils.data.dataloader.sys",
    "torch.utils.data.dataloader.threading"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._set_SIGCHLD_handler.handler": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "previous_handler",
    "torch._C._error_if_any_worker_fails"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._set_python_exit_flag": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "torch.utils.data.dataloader._python_exit_status"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader._set_worker_signal_handlers": {
  "data": {
   "shadows": "torch._C._set_worker_signal_handlers"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader._update_worker_pids": {
  "data": {
   "shadows": "torch._C._update_worker_pids"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader._use_shared_memory": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "torch.utils.data.dataloader._worker_loop": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "Queue.Empty",
    "collate_fn",
    "init_fn",
    "torch._C._set_worker_signal_handlers",
    "torch.utils.data.dataloader.ExceptionWrapper",
    "torch.utils.data.dataloader.MP_STATUS_CHECK_INTERVAL",
    "torch.utils.data.dataloader.ManagerWatchdog",
    "torch.utils.data.dataloader._use_shared_memory",
    "torch.utils.data.dataloader.random",
    "torch.utils.data.dataloader.sys",
    "torch.utils.data.dataloader.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.container_abcs": {
  "data": {
   "shadows": "torch._six.container_abcs"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.default_collate": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "isinstance",
    "list",
    "map",
    "sum",
    "torch._six.container_abcs.Mapping",
    "torch._six.container_abcs.Sequence",
    "torch._six.int_classes",
    "torch._six.string_classes",
    "torch.utils.data.dataloader._use_shared_memory",
    "torch.utils.data.dataloader.numpy_type_map",
    "torch.utils.data.dataloader.re",
    "torch.utils.data.dataloader.torch",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.int_classes": {
  "data": {
   "shadows": "torch._six.int_classes"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.multiprocessing": {
  "data": {
   "shadows": "torch.multiprocessing"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.numpy_type_map": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "torch.utils.data.dataloader.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.pin_memory_batch": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "isinstance",
    "torch._six.container_abcs.Mapping",
    "torch._six.container_abcs.Sequence",
    "torch._six.string_classes",
    "torch.utils.data.dataloader.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataloader.queue": {
  "data": {
   "shadows": "queue"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.string_classes": {
  "data": {
   "shadows": "torch._six.string_classes"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.data.dataloader.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "torch.utils.data.dataset": {
  "data": {},
  "type": "module"
 },
 "torch.utils.data.dataset.ConcatDataset": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataset.ConcatDataset.__getitem__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "torch.utils.data.dataset.bisect"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "list",
    "super",
    "torch.utils.data.dataset.ConcatDataset"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.__len__": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.cummulative_sizes": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "torch.utils.data.dataset.warnings"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.ConcatDataset.cumsum": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.Dataset": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataset.Dataset.__add__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "torch.utils.data.dataset.ConcatDataset"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.Dataset.__getitem__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.Dataset.__len__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.Subset": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataset.Subset.__getitem__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "torch.utils.data.dataset.Subset.__init__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "torch.utils.data.dataset.Subset.__len__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.TensorDataset": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.dataset.TensorDataset.__getitem__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.TensorDataset.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.TensorDataset.__len__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "torch.utils.data.dataset._accumulate": {
  "data": {
   "shadows": "torch._utils._accumulate"
  },
  "type": "import"
 },
 "torch.utils.data.dataset.bisect": {
  "data": {
   "shadows": "bisect"
  },
  "type": "import"
 },
 "torch.utils.data.dataset.random_split": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "sum",
    "torch._utils._accumulate",
    "torch.randperm",
    "torch.utils.data.dataset.Subset",
    "zip"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.dataset.randperm": {
  "data": {
   "shadows": "torch.randperm"
  },
  "type": "import"
 },
 "torch.utils.data.dataset.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.utils.data.distributed": {
  "data": {},
  "type": "module"
 },
 "torch.utils.data.distributed.DistributedSampler": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "torch.utils.data.distributed.DistributedSampler.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "len",
    "torch.distributed.get_rank",
    "torch.distributed.get_world_size",
    "torch.distributed.is_available",
    "torch.utils.data.distributed.math"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.distributed.DistributedSampler.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "iter",
    "len",
    "torch.utils.data.distributed.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.distributed.DistributedSampler.__len__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "torch.utils.data.distributed.DistributedSampler.set_epoch": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "torch.utils.data.distributed.dist": {
  "data": {
   "shadows": "torch.distributed"
  },
  "type": "import"
 },
 "torch.utils.data.distributed.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "torch.utils.data.distributed.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.data.sampler": {
  "data": {},
  "type": "module"
 },
 "torch.utils.data.sampler.BatchSampler": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.sampler.BatchSampler.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "torch._six.int_classes",
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.BatchSampler.__iter__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.BatchSampler.__len__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.sampler.RandomSampler.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler.__iter__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "iter",
    "len",
    "torch.utils.data.sampler.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.RandomSampler.__len__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.Sampler": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.sampler.Sampler.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "torch.utils.data.sampler.Sampler.__iter__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.Sampler.__len__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.SequentialSampler": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.sampler.SequentialSampler.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "torch.utils.data.sampler.SequentialSampler.__iter__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "iter",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.SequentialSampler.__len__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.SubsetRandomSampler": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.sampler.SubsetRandomSampler.__init__": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "torch.utils.data.sampler.SubsetRandomSampler.__iter__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "torch.utils.data.sampler.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.SubsetRandomSampler.__len__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.WeightedRandomSampler": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "class"
 },
 "torch.utils.data.sampler.WeightedRandomSampler.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "torch._six.int_classes",
    "torch.utils.data.sampler.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.WeightedRandomSampler.__iter__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "iter",
    "torch.utils.data.sampler.torch"
   ]
  },
  "type": "function"
 },
 "torch.utils.data.sampler.WeightedRandomSampler.__len__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "torch.utils.data.sampler._int_classes": {
  "data": {
   "shadows": "torch._six.int_classes"
  },
  "type": "import"
 },
 "torch.utils.data.sampler.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils.dlpack": {
  "data": {
   "symbols_in_volume": [
    "torch._C._from_dlpack",
    "torch._C._to_dlpack",
    "torch.utils.dlpack.torch"
   ]
  },
  "type": "module"
 },
 "torch.utils.dlpack.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils.dlpack.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils.dlpack.from_dlpack": {
  "data": {
   "shadows": "torch._C._from_dlpack"
  },
  "type": "import"
 },
 "torch.utils.dlpack.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils.dlpack.to_dlpack": {
  "data": {
   "shadows": "torch._C._to_dlpack"
  },
  "type": "import"
 },
 "torch.utils.dlpack.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.dlpack.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.utils.ffi": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "torch.utils.file_baton": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "torch.utils.file_baton.sys"
   ]
  },
  "type": "module"
 },
 "torch.utils.file_baton.FileBaton": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "torch.utils.file_baton.FileBaton.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "torch.utils.file_baton.FileBaton.release": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "torch.utils.file_baton.os"
   ]
  },
  "type": "function"
 },
 "torch.utils.file_baton.FileBaton.try_acquire": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "torch.utils.file_baton.FileExistsError",
    "torch.utils.file_baton.os"
   ]
  },
  "type": "function"
 },
 "torch.utils.file_baton.FileBaton.wait": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "torch.utils.file_baton.os",
    "torch.utils.file_baton.time"
   ]
  },
  "type": "function"
 },
 "torch.utils.file_baton.FileExistsError": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "torch.utils.file_baton.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils.file_baton.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils.file_baton.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.utils.file_baton.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils.file_baton.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.utils.file_baton.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "torch.utils.file_baton.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.utils.hooks": {
  "data": {},
  "type": "module"
 },
 "torch.utils.hooks.RemovableHandle": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.hooks.RemovableHandle.__enter__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__exit__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__getstate__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "torch.utils.hooks.RemovableHandle",
    "torch.utils.hooks.weakref"
   ]
  },
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.__setstate__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "max",
    "torch.utils.hooks.RemovableHandle",
    "torch.utils.hooks.collections",
    "torch.utils.hooks.weakref"
   ]
  },
  "type": "function"
 },
 "torch.utils.hooks.RemovableHandle.remove": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "torch.utils.hooks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils.hooks.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "torch.utils.hooks.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils.hooks.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils.hooks.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.utils.hooks.unserializable_hook": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "torch.utils.hooks.warn_if_has_hooks": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "hasattr",
    "repr",
    "torch.utils.hooks.warnings"
   ]
  },
  "type": "function"
 },
 "torch.utils.hooks.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "torch.utils.hooks.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "torch.utils.model_zoo": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "torch.utils.model_zoo.re",
    "torch.utils.model_zoo.sys",
    "tqdm.tqdm"
   ]
  },
  "type": "module"
 },
 "torch.utils.model_zoo.HASH_REGEX": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "torch.utils.model_zoo._download_url_to_file": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "int",
    "len",
    "torch.utils.model_zoo.hashlib",
    "torch.utils.model_zoo.os",
    "torch.utils.model_zoo.requests_available",
    "torch.utils.model_zoo.shutil",
    "torch.utils.model_zoo.tempfile",
    "tqdm.tqdm",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "torch.utils.model_zoo.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.load_url": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "torch.utils.model_zoo.HASH_REGEX",
    "torch.utils.model_zoo._download_url_to_file",
    "torch.utils.model_zoo.os",
    "torch.utils.model_zoo.sys",
    "torch.utils.model_zoo.torch",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "torch.utils.model_zoo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.requests_available": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "torch.utils.model_zoo.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.tqdm": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "torch.utils.model_zoo.tqdm.__enter__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "torch.utils.model_zoo.tqdm.__exit__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "torch.utils.model_zoo.sys"
   ]
  },
  "type": "function"
 },
 "torch.utils.model_zoo.tqdm.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "torch.utils.model_zoo.tqdm.update": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "float",
    "torch.utils.model_zoo.sys"
   ]
  },
  "type": "function"
 },
 "torch.utils.model_zoo.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "torch.utils.model_zoo.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "torch.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "torch.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "torch.version": {
  "data": {},
  "type": "module"
 },
 "torch.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "torch.version.cuda": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "torch.version.debug": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 }
}