{
 "dagster_dask": {
  "data": {},
  "type": "module"
 },
 "dagster_dask.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "dagster_dask.config": {
  "data": {},
  "type": "module"
 },
 "dagster_dask.config.DaskConfig": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "collections.namedtuple",
    "dagster.core.execution.config.ExecutorConfig"
   ]
  },
  "type": "class"
 },
 "dagster_dask.config.DaskConfig.__new__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dagster.check.opt_bool_param",
    "dagster.check.opt_int_param",
    "dagster.check.opt_str_param",
    "dagster_dask.config.DaskConfig",
    "super"
   ]
  },
  "type": "function"
 },
 "dagster_dask.config.DaskConfig.build_dict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "dagster_dask.config.DaskConfig.get_engine": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dagster_dask.config.ExecutorConfig": {
  "data": {
   "shadows": "dagster.core.execution.config.ExecutorConfig"
  },
  "type": "import"
 },
 "dagster_dask.config.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagster_dask.config.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "dagster_dask.engine": {
  "data": {},
  "type": "module"
 },
 "dagster_dask.engine.DASK_RESOURCE_REQUIREMENTS_KEY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dagster_dask.engine.DagsterEvent": {
  "data": {
   "shadows": "dagster.core.events.DagsterEvent"
  },
  "type": "import"
 },
 "dagster_dask.engine.DaskEngine": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dagster.core.engine.engine_base.Engine"
   ]
  },
  "type": "class"
 },
 "dagster_dask.engine.DaskEngine.execute": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dagster.check.inst",
    "dagster.check.inst_param",
    "dagster.check.invariant",
    "dagster.check.param_invariant",
    "dagster.core.events.DagsterEvent",
    "dagster.core.execution.context.system.SystemPipelineExecutionContext",
    "dagster.core.execution.plan.plan.ExecutionPlan",
    "dagster.utils.net.is_local_uri",
    "dagster_dask.engine.dask",
    "dagster_dask.engine.get_dask_resource_requirements",
    "dagster_dask.engine.query_on_dask_worker",
    "dict",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "dagster_dask.engine.Engine": {
  "data": {
   "shadows": "dagster.core.engine.engine_base.Engine"
  },
  "type": "import"
 },
 "dagster_dask.engine.ExecutionPlan": {
  "data": {
   "shadows": "dagster.core.execution.plan.plan.ExecutionPlan"
  },
  "type": "import"
 },
 "dagster_dask.engine.SystemPipelineExecutionContext": {
  "data": {
   "shadows": "dagster.core.execution.context.system.SystemPipelineExecutionContext"
  },
  "type": "import"
 },
 "dagster_dask.engine.check": {
  "data": {
   "shadows": "dagster.check"
  },
  "type": "import"
 },
 "dagster_dask.engine.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dagster_dask.engine.dask.distributed": {
  "data": {
   "shadows": "dask.distributed"
  },
  "type": "import"
 },
 "dagster_dask.engine.execute_execute_plan_mutation": {
  "data": {
   "shadows": "dagster_graphql.client.mutations.execute_execute_plan_mutation"
  },
  "type": "import"
 },
 "dagster_dask.engine.frozentags": {
  "data": {
   "shadows": "dagster.utils.frozentags"
  },
  "type": "import"
 },
 "dagster_dask.engine.get_dask_resource_requirements": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dagster.check.inst_param",
    "dagster.seven.json.loads",
    "dagster.utils.frozentags",
    "dagster_dask.engine.DASK_RESOURCE_REQUIREMENTS_KEY"
   ]
  },
  "type": "function"
 },
 "dagster_dask.engine.is_local_uri": {
  "data": {
   "shadows": "dagster.utils.net.is_local_uri"
  },
  "type": "import"
 },
 "dagster_dask.engine.query_on_dask_worker": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dagster_graphql.client.mutations.execute_execute_plan_mutation"
   ]
  },
  "type": "function"
 },
 "dagster_dask.engine.seven": {
  "data": {
   "shadows": "dagster.seven"
  },
  "type": "import"
 },
 "dagster_dask.executor": {
  "data": {},
  "type": "module"
 },
 "dagster_dask.executor.Bool": {
  "data": {
   "shadows": "dagster.Bool"
  },
  "type": "import"
 },
 "dagster_dask.executor.Field": {
  "data": {
   "shadows": "dagster.Field"
  },
  "type": "import"
 },
 "dagster_dask.executor.Int": {
  "data": {
   "shadows": "dagster.Int"
  },
  "type": "import"
 },
 "dagster_dask.executor.String": {
  "data": {
   "shadows": "dagster.String"
  },
  "type": "import"
 },
 "dagster_dask.executor.check_cross_process_constraints": {
  "data": {
   "shadows": "dagster.core.definitions.executor.check_cross_process_constraints"
  },
  "type": "import"
 },
 "dagster_dask.executor.dask_executor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "DaskConfig",
    "dagster.Bool",
    "dagster.Field",
    "dagster.Int",
    "dagster.String",
    "dagster.core.definitions.executor.check_cross_process_constraints",
    "dagster.core.definitions.executor.executor"
   ]
  },
  "type": "function"
 },
 "dagster_dask.executor.executor": {
  "data": {
   "shadows": "dagster.core.definitions.executor.executor"
  },
  "type": "import"
 },
 "dagster_dask.version": {
  "data": {},
  "type": "module"
 },
 "dagster_dask.version.__nightly__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "dagster_dask.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "dagster_dask_tests": {
  "data": {},
  "type": "module"
 },
 "dagster_dask_tests.conftest": {
  "data": {},
  "type": "module"
 },
 "dagster_dask_tests.conftest.dask_address": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dagster_dask_tests.conftest.os",
    "dagster_dask_tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dagster_dask_tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dagster_dask_tests.conftest.s3_bucket": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dagster_dask_tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute": {
  "data": {},
  "type": "module"
 },
 "dagster_dask_tests.test_execute.DagsterInstance": {
  "data": {
   "shadows": "dagster.core.instance.DagsterInstance"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.ExecutionTargetHandle": {
  "data": {
   "shadows": "dagster.ExecutionTargetHandle"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.InputDefinition": {
  "data": {
   "shadows": "dagster.InputDefinition"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.ModeDefinition": {
  "data": {
   "shadows": "dagster.ModeDefinition"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.dagster_pd": {
  "data": {
   "shadows": "dagster_pandas"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.dask_composite_pipeline": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dagster.ModeDefinition",
    "dagster.core.definitions.executor.default_executors",
    "dagster.core.test_utils.nesting_composite_pipeline",
    "dagster_dask.dask_executor"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.dask_engine_pipeline": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dagster.ModeDefinition",
    "dagster.core.definitions.executor.default_executors",
    "dagster.pipeline",
    "dagster_dask.dask_executor",
    "dagster_dask_tests.test_execute.simple"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.dask_executor": {
  "data": {
   "shadows": "dagster_dask.dask_executor"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.default_executors": {
  "data": {
   "shadows": "dagster.core.definitions.executor.default_executors"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.execute_pipeline": {
  "data": {
   "shadows": "dagster.execute_pipeline"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.file_relative_path": {
  "data": {
   "shadows": "dagster.file_relative_path"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.nesting_composite_pipeline": {
  "data": {
   "shadows": "dagster.core.test_utils.nesting_composite_pipeline"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.pandas_pipeline": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dagster.ModeDefinition",
    "dagster.core.definitions.executor.default_executors",
    "dagster.pipeline",
    "dagster_dask.dask_executor",
    "dagster_dask_tests.test_execute.pandas_solid"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.pandas_solid": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dagster.InputDefinition",
    "dagster.solid",
    "dagster_pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.pipeline": {
  "data": {
   "shadows": "dagster.pipeline"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.seven": {
  "data": {
   "shadows": "dagster.seven"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.simple": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dagster.solid"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.solid": {
  "data": {
   "shadows": "dagster.solid"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_execute.test_composite_execute": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dagster.ExecutionTargetHandle.for_pipeline_python_file",
    "dagster.core.instance.DagsterInstance.local_temp",
    "dagster.execute_pipeline"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.test_execute_on_dask": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dagster.ExecutionTargetHandle.for_pipeline_python_file",
    "dagster.core.instance.DagsterInstance.local_temp",
    "dagster.execute_pipeline",
    "dagster.seven.TemporaryDirectory"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_execute.test_pandas_dask": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dagster.ExecutionTargetHandle.for_pipeline_python_file",
    "dagster.core.instance.DagsterInstance.local_temp",
    "dagster.execute_pipeline",
    "dagster.file_relative_path",
    "dagster_dask_tests.test_execute.pandas_pipeline"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_graphql": {
  "data": {},
  "type": "module"
 },
 "dagster_dask_tests.test_graphql.DagsterGraphQLContext": {
  "data": {
   "shadows": "dagster_graphql.implementation.context.DagsterGraphQLContext"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.DagsterInstance": {
  "data": {
   "shadows": "dagster.core.instance.DagsterInstance"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.ExecutionTargetHandle": {
  "data": {
   "shadows": "dagster.ExecutionTargetHandle"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.START_PIPELINE_EXECUTION_MUTATION": {
  "data": {
   "shadows": "dagster_graphql.client.query.START_PIPELINE_EXECUTION_MUTATION"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.SUBSCRIPTION_QUERY": {
  "data": {
   "shadows": "dagster_graphql.client.query.SUBSCRIPTION_QUERY"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.SubprocessExecutionManager": {
  "data": {
   "shadows": "dagster_graphql.implementation.pipeline_execution_manager.SubprocessExecutionManager"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.SyncExecutor": {
  "data": {
   "shadows": "graphql.execution.executors.sync.SyncExecutor"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.create_schema": {
  "data": {
   "shadows": "dagster_graphql.schema.create_schema"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.execute_dagster_graphql": {
  "data": {
   "shadows": "dagster_graphql.test.utils.execute_dagster_graphql"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.file_relative_path": {
  "data": {
   "shadows": "dagster.utils.file_relative_path"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.graphql": {
  "data": {
   "shadows": "graphql.graphql"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_graphql.test_execute_hammer_through_dagit": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dagster.ExecutionTargetHandle.for_pipeline_python_file",
    "dagster.core.instance.DagsterInstance.local_temp",
    "dagster.utils.file_relative_path",
    "dagster_graphql.client.query.START_PIPELINE_EXECUTION_MUTATION",
    "dagster_graphql.client.query.SUBSCRIPTION_QUERY",
    "dagster_graphql.implementation.context.DagsterGraphQLContext",
    "dagster_graphql.implementation.pipeline_execution_manager.SubprocessExecutionManager",
    "dagster_graphql.schema.create_schema",
    "dagster_graphql.test.utils.execute_dagster_graphql",
    "graphql.execution.executors.sync.SyncExecutor",
    "graphql.graphql"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_resource_tags": {
  "data": {},
  "type": "module"
 },
 "dagster_dask_tests.test_resource_tags.get_dask_resource_requirements": {
  "data": {
   "shadows": "dagster_dask.engine.get_dask_resource_requirements"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_resource_tags.solid": {
  "data": {
   "shadows": "dagster.solid"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_resource_tags.test_resource_tags": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dagster_dask.engine.get_dask_resource_requirements"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_resource_tags.test_resource_tags.boop": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dagster.solid"
   ]
  },
  "type": "function"
 },
 "dagster_dask_tests.test_version": {
  "data": {},
  "type": "module"
 },
 "dagster_dask_tests.test_version.__version__": {
  "data": {
   "shadows": "dagster_dask.version.__version__"
  },
  "type": "import"
 },
 "dagster_dask_tests.test_version.test_version": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "dagster_dask.version.__version__"
   ]
  },
  "type": "function"
 }
}