{
 "*": {
  "data": {
   "imports": [
    "pandapower.estimation.state_estimation"
   ]
  },
  "type": "star-import"
 },
 "pandapower": {
  "data": {
   "symbols_in_volume": [
    "pandapower.os",
    "pandas.options.mode.chained_assignment"
   ]
  },
  "type": "module"
 },
 "pandapower.OPFNotConverged": {
  "data": {
   "shadows": "pandapower.optimal_powerflow.OPFNotConverged"
  },
  "type": "import"
 },
 "pandapower.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandapower.build_bus": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.build_bus.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.build_bus.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.build_bus.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.build_bus.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.build_bus.CID": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.CID"
  },
  "type": "import"
 },
 "pandapower.build_bus.CZD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.CZD"
  },
  "type": "import"
 },
 "pandapower.build_bus.C_MAX": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.C_MAX"
  },
  "type": "import"
 },
 "pandapower.build_bus.C_MIN": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.C_MIN"
  },
  "type": "import"
 },
 "pandapower.build_bus.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "pandapower.build_bus.DisjointSet": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "pandapower.build_bus.DisjointSet.add": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "pandapower.build_bus.DisjointSet.find": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "pandapower.build_bus.DisjointSet.union": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pandapower.build_bus.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.build_bus.NONE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.NONE"
  },
  "type": "import"
 },
 "pandapower.build_bus.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.build_bus.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.build_bus.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.build_bus.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.build_bus.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.build_bus.VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMAX"
  },
  "type": "import"
 },
 "pandapower.build_bus.VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMIN"
  },
  "type": "import"
 },
 "pandapower.build_bus._add_c_to_ppc": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.where",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.shortcircuit.idx_bus.C_MAX",
    "pandapower.shortcircuit.idx_bus.C_MIN"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._add_ext_grid_sc_impedance": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.sqrt",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.shortcircuit.idx_bus.C_MAX",
    "pandapower.shortcircuit.idx_bus.C_MIN"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._add_gen_impedances_ppc": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pandapower.build_bus._add_ext_grid_sc_impedance",
    "pandapower.build_bus._add_gen_sc_impedance"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._add_gen_sc_impedance": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "len",
    "numpy.arccos",
    "numpy.isnan",
    "numpy.sin",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.shortcircuit.idx_bus.C_MAX"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._add_motor_impedances_ppc": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "UserWarning",
    "any",
    "numpy.sqrt",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._build_bus_ppc": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "dict",
    "float",
    "len",
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.hstack",
    "numpy.int64",
    "numpy.nan",
    "numpy.zeros",
    "pandapower.build_bus._add_c_to_ppc",
    "pandapower.build_bus._fill_auxiliary_buses",
    "pandapower.build_bus.create_bus_lookup",
    "pandapower.build_bus.create_consecutive_bus_lookup",
    "pandapower.build_bus.get_voltage_init_vector",
    "pandapower.build_bus.set_reference_buses",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.NONE",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_bus.VMAX",
    "pandapower.pypower.idx_bus.VMIN",
    "pandapower.pypower.idx_bus.bus_cols",
    "pandapower.shortcircuit.idx_bus.bus_cols_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._calc_pq_elements_and_add_on_ppc": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "ValueError",
    "collections.Counter",
    "int",
    "len",
    "numpy.array",
    "numpy.float64",
    "numpy.hstack",
    "numpy.sum",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_bus.CID",
    "pandapower.pypower.idx_bus.CZD",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._calc_shunts_and_add_on_ppc": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.sqrt",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._fill_auxiliary_buses": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_bus.VMAX",
    "pandapower.pypower.idx_bus.VMIN"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus._sum_by_group": {
  "data": {
   "shadows": "pandapower.auxiliary._sum_by_group"
  },
  "type": "import"
 },
 "pandapower.build_bus.bus_cols": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.bus_cols"
  },
  "type": "import"
 },
 "pandapower.build_bus.bus_cols_sc": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.bus_cols_sc"
  },
  "type": "import"
 },
 "pandapower.build_bus.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pandapower.build_bus.complex128": {
  "data": {
   "shadows": "numpy.complex128"
  },
  "type": "import"
 },
 "pandapower.build_bus.create_bus_lookup": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.in1d",
    "numpy.zeros",
    "pandapower.build_bus.create_bus_lookup_numba",
    "pandapower.build_bus.create_bus_lookup_numpy"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.create_bus_lookup_numba": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.arange",
    "numpy.max",
    "numpy.ones",
    "numpy.zeros",
    "pandapower.build_bus.ds_create",
    "pandapower.build_bus.fill_bus_lookup"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.create_bus_lookup_numpy": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "any",
    "collections.defaultdict",
    "itertools.chain",
    "len",
    "numpy.hstack",
    "numpy.unique",
    "pandapower.build_bus.DisjointSet",
    "pandapower.build_bus.create_consecutive_bus_lookup",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.create_consecutive_bus_lookup": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "numpy.arange",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pandapower.build_bus.ds_create": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "pandapower.build_bus.ds_union",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.ds_find": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numba.jit"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.ds_union": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numba.jit",
    "pandapower.build_bus.ds_find"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.fill_bus_lookup": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "pandapower.build_bus.ds_find",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.get_voltage_init_vector": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "isinstance",
    "list",
    "numpy.ndarray",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "pandapower.build_bus.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.build_bus.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.build_bus.set_reference_buses": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.REF"
   ]
  },
  "type": "function"
 },
 "pandapower.build_bus.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "pandapower.control": {
  "data": {},
  "type": "module"
 },
 "pandapower.control.ConstControl": {
  "data": {
   "shadows": "pandapower.control.controller.const_control.ConstControl"
  },
  "type": "import"
 },
 "pandapower.control.ContinuousTapControl": {
  "data": {
   "shadows": "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl"
  },
  "type": "import"
 },
 "pandapower.control.ControllerNotConverged": {
  "data": {
   "shadows": "pandapower.control.run_control.ControllerNotConverged"
  },
  "type": "import"
 },
 "pandapower.control.DiscreteTapControl": {
  "data": {
   "shadows": "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl"
  },
  "type": "import"
 },
 "pandapower.control.TrafoController": {
  "data": {
   "shadows": "pandapower.control.controller.trafo_control.TrafoController"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.control.basic_controller.Controller": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.io_utils.JSONSerializableClass"
   ]
  },
  "type": "class"
 },
 "pandapower.control.basic_controller.Controller.__deepcopy__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "_EmptyClass",
    "hasattr",
    "id",
    "pandapower.control.basic_controller.copy",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__deepcopy__._EmptyClass": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "pandapower.control.basic_controller.Controller.__getstate__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.auxiliary.get_free_id",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__repr__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "exec",
    "locals",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__setstate__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__str__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.add_controller_to_net": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.control.util.auxiliary.drop_same_type_existing_controllers",
    "pandapower.control.util.auxiliary.log_same_type_existing_controllers",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.control_step": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.finalize_control": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.finalize_step": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.initialize_control": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.is_converged": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.repair_control": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.restore_init_state": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.set_active": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.set_recycle": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.time_step": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pandapower.control.basic_controller.JSONSerializableClass": {
  "data": {
   "shadows": "pandapower.io_utils.JSONSerializableClass"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller._preserve_dtypes": {
  "data": {
   "shadows": "pandapower.auxiliary._preserve_dtypes"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller.drop_same_type_existing_controllers": {
  "data": {
   "shadows": "pandapower.control.util.auxiliary.drop_same_type_existing_controllers"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller.get_free_id": {
  "data": {
   "shadows": "pandapower.auxiliary.get_free_id"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller.log_same_type_existing_controllers": {
  "data": {
   "shadows": "pandapower.control.util.auxiliary.log_same_type_existing_controllers"
  },
  "type": "import"
 },
 "pandapower.control.basic_controller.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.control.basic_controller.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.control.control_diagnostic": {
  "data": {
   "shadows": "pandapower.control.util.diagnostic.control_diagnostic"
  },
  "type": "import"
 },
 "pandapower.control.controller": {
  "data": {},
  "type": "module"
 },
 "pandapower.control.controller.const_control": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.control.controller.const_control.ConstControl": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.Controller"
   ]
  },
  "type": "class"
 },
 "pandapower.control.controller.const_control.ConstControl.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "pandapower.control.controller.const_control.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl._write_to_all_index": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl._write_to_single_index": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl._write_with_loc": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.control_step": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.initialize_control": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.is_converged": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.set_recycle": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "any",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.time_step": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.write_to_net": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.const_control.Controller": {
  "data": {
   "shadows": "pandapower.control.basic_controller.Controller"
  },
  "type": "import"
 },
 "pandapower.control.controller.const_control.Index": {
  "data": {
   "shadows": "pandas.Index"
  },
  "type": "import"
 },
 "pandapower.control.controller.const_control.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.control.controller.const_control.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.control.controller.const_control.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo": {
  "data": {},
  "type": "module"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl": {
  "data": {},
  "type": "module"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandapower.control.controller.trafo_control.TrafoController"
   ]
  },
  "type": "class"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl.control_step": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.clip"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl.is_converged": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.TrafoController": {
  "data": {
   "shadows": "pandapower.control.controller.trafo_control.TrafoController"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.__author__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl": {
  "data": {},
  "type": "module"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "pandapower.control.controller.trafo_control.TrafoController"
   ]
  },
  "type": "class"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl.control_step": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl.is_converged": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.TrafoController": {
  "data": {
   "shadows": "pandapower.control.controller.trafo_control.TrafoController"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandapower.control.controller.trafo_control": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.control.controller.trafo_control.Controller": {
  "data": {
   "shadows": "pandapower.control.basic_controller.Controller"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo_control.TrafoController": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.Controller"
   ]
  },
  "type": "class"
 },
 "pandapower.control.controller.trafo_control.TrafoController.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.isnan",
    "numpy.sign",
    "pandapower.control.controller.trafo_control.logger",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.__repr__": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.__str__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.set_recycle": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.timestep": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandapower.control.controller.trafo_control.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandapower.control.controller.trafo_control.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.control.controller.trafo_control.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.control.get_controller_index": {
  "data": {
   "shadows": "pandapower.control.util.auxiliary.get_controller_index"
  },
  "type": "import"
 },
 "pandapower.control.pandapower.control.basic_controller": {
  "data": {
   "shadows": "pandapower.control.basic_controller"
  },
  "type": "import"
 },
 "pandapower.control.pandapower.control.controller": {
  "data": {
   "shadows": "pandapower.control.controller"
  },
  "type": "import"
 },
 "pandapower.control.run_control": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.control.run_control.ControllerNotConverged": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.ppException"
   ]
  },
  "type": "class"
 },
 "pandapower.control.run_control.LoadflowNotConverged": {
  "data": {
   "shadows": "pandapower.LoadflowNotConverged"
  },
  "type": "import"
 },
 "pandapower.control.run_control.OPFNotConverged": {
  "data": {
   "shadows": "pandapower.OPFNotConverged"
  },
  "type": "import"
 },
 "pandapower.control.run_control._control_repair": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "run_funct"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control._control_step": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandapower.control.run_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.asarray": {
  "data": {
   "shadows": "pandapower.control.util.auxiliary.asarray"
  },
  "type": "import"
 },
 "pandapower.control.run_control.check_final_convergence": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandapower.control.run_control.ControllerNotConverged",
    "pandapower.control.run_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.check_for_initial_run": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "pandapower.control.run_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.control_finalization": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "pandapower.control.run_control.control_implementation": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pandapower.control.run_control._control_repair",
    "pandapower.control.run_control._control_step",
    "pandapower.control.run_control.check_final_convergence",
    "run_funct"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.control_initialization": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "pandapower.control.run_control.ctrl_variables_default": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "dict",
    "pandapower.control.run_control.check_for_initial_run",
    "pandapower.control.run_control.get_controller_order",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.get_controller_order": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "pandapower.control.run_control.logger",
    "pandapower.control.util.auxiliary.asarray",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.get_recycle": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.control.run_control.net_initialization": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "run_funct"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.control.run_control.ppException": {
  "data": {
   "shadows": "pandapower.ppException"
  },
  "type": "import"
 },
 "pandapower.control.run_control.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.control.run_control.prepare_run_ctrl": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandapower.LoadflowNotConverged",
    "pandapower.OPFNotConverged",
    "pandapower.control.run_control.ctrl_variables_default"
   ]
  },
  "type": "function"
 },
 "pandapower.control.run_control.run_control": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "pandapower.control.run_control.control_finalization",
    "pandapower.control.run_control.control_implementation",
    "pandapower.control.run_control.control_initialization",
    "pandapower.control.run_control.get_recycle",
    "pandapower.control.run_control.net_initialization",
    "pandapower.control.run_control.prepare_run_ctrl",
    "run_funct"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util": {
  "data": {},
  "type": "module"
 },
 "pandapower.control.util.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandapower.control.util.auxiliary": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.control.util.auxiliary.ADict": {
  "data": {
   "shadows": "pandapower.auxiliary.ADict"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.Int64Index": {
  "data": {
   "shadows": "pandas.Int64Index"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary._controller_attributes_query": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "len",
    "pandapower.control.util.auxiliary.logger",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.asarray": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "numpy.isscalar",
    "numpy.ndim"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.drop_same_type_existing_controllers": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "pandapower.control.util.auxiliary.get_controller_index",
    "pandapower.control.util.auxiliary.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.get_controller_index": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "pandapower.control.util.auxiliary._controller_attributes_query",
    "pandapower.control.util.auxiliary.get_controller_index_by_type",
    "pandapower.control.util.auxiliary.get_controller_index_by_typename",
    "pandas.Int64Index",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.get_controller_index_by_type": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.get_controller_index_by_typename": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.log_same_type_existing_controllers": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "pandapower.control.util.auxiliary.get_controller_index",
    "pandapower.control.util.auxiliary.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.auxiliary.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.control.util.auxiliary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandapower.control.util.auxiliary.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "pandapower.control.util.diagnostic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.control.util.diagnostic.TrafoController": {
  "data": {
   "shadows": "pandapower.control.controller.trafo_control.TrafoController"
  },
  "type": "import"
 },
 "pandapower.control.util.diagnostic.control_diagnostic": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "copy.deepcopy",
    "issubclass",
    "len",
    "list",
    "pandapower.control.controller.trafo_control.TrafoController",
    "pandapower.control.util.auxiliary.get_controller_index",
    "pandapower.control.util.diagnostic.logger",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.control.util.diagnostic.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandapower.control.util.diagnostic.get_controller_index": {
  "data": {
   "shadows": "pandapower.control.util.auxiliary.get_controller_index"
  },
  "type": "import"
 },
 "pandapower.control.util.diagnostic.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.control.util.diagnostic.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.converter": {
  "data": {},
  "type": "module"
 },
 "pandapower.converter.matpower": {
  "data": {},
  "type": "module"
 },
 "pandapower.converter.matpower.from_mpc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.converter.matpower.from_mpc._adjust_ppc_indices": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc._change_ppc_TAP_value": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc._copy_data_from_mpc_to_ppc": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandapower.converter.matpower.from_mpc.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc._mpc2ppc": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "pandapower.converter.matpower.from_mpc._adjust_ppc_indices",
    "pandapower.converter.matpower.from_mpc._change_ppc_TAP_value",
    "pandapower.converter.matpower.from_mpc._copy_data_from_mpc_to_ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc.from_mpc": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandapower.converter.matpower.from_mpc._mpc2ppc",
    "pandapower.converter.pypower.from_ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc.from_ppc": {
  "data": {
   "shadows": "pandapower.converter.pypower.from_ppc"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.from_mpc.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandapower.converter.matpower.from_mpc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.from_mpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.from_mpc.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.to_mpc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.converter.matpower.to_mpc._ppc2mpc": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "numpy.where",
    "pandapower.converter.matpower.to_mpc.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.to_mpc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.to_mpc.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.converter.matpower.to_mpc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.to_mpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.to_mpc.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "pandapower.converter.matpower.to_mpc.to_mpc": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dict",
    "pandapower.converter.matpower.to_mpc._ppc2mpc",
    "pandapower.converter.pypower.to_ppc",
    "scipy.io.savemat"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.matpower.to_mpc.to_ppc": {
  "data": {
   "shadows": "pandapower.converter.pypower.to_ppc"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels": {
  "data": {},
  "type": "module"
 },
 "pandapower.converter.powermodels.from_pm": {
  "data": {},
  "type": "module"
 },
 "pandapower.converter.powermodels.from_pm.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.OPFNotConverged": {
  "data": {
   "shadows": "pandapower.optimal_powerflow.OPFNotConverged"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm._clean_up": {
  "data": {
   "shadows": "pandapower.auxiliary._clean_up"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm._copy_results_ppci_to_ppc": {
  "data": {
   "shadows": "pandapower.results._copy_results_ppci_to_ppc"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm._extract_results": {
  "data": {
   "shadows": "pandapower.results._extract_results"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.logger": {
  "data": {
   "shadows": "pandapower.converter.logger"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.from_pm.pm_results_to_ppc_results": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "numpy.isnan",
    "pandapower.converter.powermodels.from_pm.math",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.PF",
    "pandapower.pypower.idx_brch.PT",
    "pandapower.pypower.idx_brch.QF",
    "pandapower.pypower.idx_brch.QT",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.results._copy_results_ppci_to_ppc",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.from_pm.read_ots_results": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandapower.pypower.idx_brch.BR_STATUS.real"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.from_pm.read_pm_results_to_net": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.auxiliary._clean_up",
    "pandapower.converter.logger.warning",
    "pandapower.converter.powermodels.from_pm.pm_results_to_ppc_results",
    "pandapower.optimal_powerflow.OPFNotConverged",
    "pandapower.results._extract_results"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.from_pm.read_tnep_results": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.converter.powermodels.to_pm.ANGMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.ANGMAX"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.ANGMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.ANGMIN"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.CONSTRUCTION_COST": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.converter.powermodels.to_pm.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.RATE_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_B"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.RATE_C": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_C"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMAX"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMIN"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.ZONE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.ZONE"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm._add_auxiliary_elements": {
  "data": {
   "shadows": "pandapower.auxiliary._add_auxiliary_elements"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm._add_opf_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_opf_options"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm._calc_line_parameter": {
  "data": {
   "shadows": "pandapower.build_branch._calc_line_parameter"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm._pp_element_to_pm": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "numpy.array",
    "numpy.ones",
    "pandas",
    "pandas.item",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.add_pm_options": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.branch_cols": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.branch_cols"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.build_ne_branch": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "dict",
    "len",
    "numpy.array",
    "numpy.complex128",
    "numpy.zeros",
    "pandapower.build_branch._calc_line_parameter",
    "pandapower.converter.powermodels.to_pm.CONSTRUCTION_COST",
    "pandapower.pypower.idx_brch.branch_cols"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.convert_pp_to_pm": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dict",
    "os.path.isfile",
    "os.remove",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.converter.powermodels.to_pm.convert_to_pm_structure",
    "pandapower.converter.powermodels.to_pm.dump_pm_json"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.convert_to_pm_structure": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandapower.auxiliary._add_auxiliary_elements",
    "pandapower.converter.powermodels.to_pm.add_pm_options",
    "pandapower.converter.powermodels.to_pm.build_ne_branch",
    "pandapower.converter.powermodels.to_pm.ppc_to_pm",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.results.init_results"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.create_pm_lookups": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.dump_pm_json": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "next",
    "open",
    "pandapower.converter.powermodels.to_pm.json",
    "pandapower.converter.powermodels.to_pm.logger",
    "pandapower.converter.powermodels.to_pm.os",
    "pandapower.converter.powermodels.to_pm.tempfile"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.get_branch_angles": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "pandapower.converter.powermodels.to_pm.logger",
    "pandapower.converter.powermodels.to_pm.math",
    "pandapower.pypower.idx_brch.ANGMAX.real",
    "pandapower.pypower.idx_brch.ANGMIN.real"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.init_ne_line": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.init_results": {
  "data": {
   "shadows": "pandapower.results.init_results"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.logger": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pandapower.converter.powermodels.to_pm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.ppc_to_pm": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "enumerate",
    "int",
    "len",
    "numpy.allclose",
    "pandapower.converter.powermodels.to_pm.CONSTRUCTION_COST",
    "pandapower.converter.powermodels.to_pm._pp_element_to_pm",
    "pandapower.converter.powermodels.to_pm.create_pm_lookups",
    "pandapower.converter.powermodels.to_pm.get_branch_angles",
    "pandapower.converter.powermodels.to_pm.logger",
    "pandapower.converter.powermodels.to_pm.math",
    "pandapower.pypower.idx_brch.BR_B.imag",
    "pandapower.pypower.idx_brch.BR_B.real",
    "pandapower.pypower.idx_brch.BR_R.real",
    "pandapower.pypower.idx_brch.BR_STATUS.real",
    "pandapower.pypower.idx_brch.BR_X.real",
    "pandapower.pypower.idx_brch.F_BUS.real",
    "pandapower.pypower.idx_brch.RATE_A",
    "pandapower.pypower.idx_brch.RATE_A.real",
    "pandapower.pypower.idx_brch.RATE_B.real",
    "pandapower.pypower.idx_brch.RATE_C.real",
    "pandapower.pypower.idx_brch.SHIFT.real",
    "pandapower.pypower.idx_brch.TAP.real",
    "pandapower.pypower.idx_brch.T_BUS.real",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_bus.VMAX",
    "pandapower.pypower.idx_bus.VMIN",
    "pandapower.pypower.idx_bus.ZONE",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.COST.tolist",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.PMIN",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.idx_gen.VG",
    "pandas",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "pandapower.converter.powermodels.to_pm.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandapower.converter.pypower": {
  "data": {},
  "type": "module"
 },
 "pandapower.converter.pypower.from_ppc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger",
    "pypower.ppoption.ppoption"
   ]
  },
  "type": "module"
 },
 "pandapower.converter.pypower.from_ppc.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc._create_costs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "pandapower.converter.pypower.from_ppc.logger",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.NCOST",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc._gen_bus_info": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.where",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.GEN_STATUS"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc._validate_diff_res": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "abs",
    "bool",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.max",
    "pandapower.converter.pypower.from_ppc.logger",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc.append": {
  "data": {
   "shadows": "numpy.append"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.concat": {
  "data": {
   "shadows": "pandas.concat"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.from_ppc": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abs",
    "bool",
    "int",
    "len",
    "math.pi",
    "numpy.array",
    "numpy.nan",
    "numpy.sign",
    "numpy.sqrt",
    "pandapower.converter.pypower.from_ppc._create_costs",
    "pandapower.converter.pypower.from_ppc._gen_bus_info",
    "pandapower.converter.pypower.from_ppc.logger",
    "pandapower.converter.pypower.from_ppc.validate_from_ppc",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_shunt",
    "pandapower.create_transformer_from_parameters",
    "pandapower.get_element_index",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.PMIN",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandas.DataFrame",
    "pandas.Series",
    "pplog.DEBUG",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.converter.pypower.from_ppc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.max_": {
  "data": {
   "shadows": "numpy.max"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.pi": {
  "data": {
   "shadows": "math.pi"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.ppc_elms": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandapower.converter.pypower.from_ppc.ppopt": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandapower.converter.pypower.from_ppc.ppoption": {
  "data": {
   "shadows": "pypower.ppoption"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.pypower_import": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandapower.converter.pypower.from_ppc.rundcopf": {
  "data": {
   "shadows": "pypower.rundcopf"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.rundcpf": {
  "data": {
   "shadows": "pypower.rundcpf"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.runopf": {
  "data": {
   "shadows": "pypower.runopf"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.runpf": {
  "data": {
   "shadows": "pypower.runpf"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.sign": {
  "data": {
   "shadows": "numpy.sign"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.validate_from_ppc": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "abs",
    "bool",
    "dict",
    "dict.fromkeys",
    "int",
    "isinstance",
    "len",
    "numpy.append",
    "numpy.array",
    "numpy.max",
    "numpy.nan",
    "numpy.zeros",
    "pandapower.LoadflowNotConverged",
    "pandapower.OPFNotConverged",
    "pandapower.converter.pypower.from_ppc._gen_bus_info",
    "pandapower.converter.pypower.from_ppc._validate_diff_res",
    "pandapower.converter.pypower.from_ppc.logger",
    "pandapower.converter.pypower.from_ppc.ppc_elms",
    "pandapower.converter.pypower.from_ppc.ppopt",
    "pandapower.converter.pypower.from_ppc.pypower_import",
    "pandapower.get_element_index",
    "pandapower.rundcopp",
    "pandapower.rundcpp",
    "pandapower.runopp",
    "pandapower.runpp",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pypower.rundcopf.rundcopf",
    "pypower.rundcpf.rundcpf",
    "pypower.runopf.runopf",
    "pypower.runpf.runpf",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc.where": {
  "data": {
   "shadows": "numpy.where"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.from_ppc.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.to_ppc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.converter.pypower.to_ppc._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.to_ppc._check_necessary_opf_parameters": {
  "data": {
   "shadows": "pandapower.opf.validate_opf_input._check_necessary_opf_parameters"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.to_ppc._pd2ppc": {
  "data": {
   "shadows": "pandapower.powerflow._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.to_ppc.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.converter.pypower.to_ppc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.converter.pypower.to_ppc.to_ppc": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.converter.pypower.to_ppc.logger",
    "pandapower.opf.validate_opf_input._check_necessary_opf_parameters",
    "pandapower.powerflow._pd2ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.create": {
  "data": {},
  "type": "module"
 },
 "pandapower.create.__version__": {
  "data": {
   "shadows": "pandapower.__version__"
  },
  "type": "import"
 },
 "pandapower.create._create_column_and_set_value": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "float",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandapower.create._preserve_dtypes": {
  "data": {
   "shadows": "pandapower.auxiliary._preserve_dtypes"
  },
  "type": "import"
 },
 "pandapower.create.add_basic_std_types": {
  "data": {
   "shadows": "pandapower.std_types.add_basic_std_types"
  },
  "type": "import"
 },
 "pandapower.create.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.create.create_asymmetric_load": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_asymmetric_sgen": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_bus": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "len",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandapower.create._create_column_and_set_value",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_buses": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.nan",
    "numpy.zeros",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_dcline": {
  "data": {
   "lineno": 3832,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_empty_network": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.dtype",
    "numpy.zeros",
    "object",
    "pandapower.__version__",
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.results.reset_results",
    "pandapower.std_types.add_basic_std_types",
    "pandas.DataFrame",
    "pandas.Int64Index"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_ext_grid": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_gen": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandapower.create._create_column_and_set_value",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_gens": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "len",
    "numpy.any",
    "numpy.arange",
    "numpy.isin",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_impedance": {
  "data": {
   "lineno": 3653,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_line": {
  "data": {
   "lineno": 1955,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandapower.std_types.load_std_type",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_line_from_parameters": {
  "data": {
   "lineno": 2073,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_lines": {
  "data": {
   "lineno": 2379,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "hasattr",
    "len",
    "numpy.arange",
    "numpy.isnan",
    "numpy.nan",
    "packaging.version.parse",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandapower.std_types.load_std_type",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.__version__"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_lines_from_parameters": {
  "data": {
   "lineno": 2208,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "hasattr",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.isin",
    "packaging.version.parse",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "pandas.__version__",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_load": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_load_from_cosphi": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "pandapower.create.create_load",
    "pandapower.toolbox.pq_from_cosphi"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_loads": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "len",
    "numpy.any",
    "numpy.arange",
    "numpy.isin",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_measurement": {
  "data": {
   "lineno": 3905,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_poly_cost": {
  "data": {
   "lineno": 4061,
   "symbols_in_volume": [
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_pwl_cost": {
  "data": {
   "lineno": 4011,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_series_reactor_as_impedance": {
  "data": {
   "lineno": 3701,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create.create_impedance"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_sgen": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_sgen_from_cosphi": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "pandapower.create.create_sgen",
    "pandapower.toolbox.pq_from_cosphi"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_sgens": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "len",
    "numpy.any",
    "numpy.arange",
    "numpy.isin",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_shunt": {
  "data": {
   "lineno": 3569,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_shunt_as_capacitor": {
  "data": {
   "lineno": 3628,
   "symbols_in_volume": [
    "abs",
    "pandapower.create.create_shunt"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_storage": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_switch": {
  "data": {
   "lineno": 3366,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_switches": {
  "data": {
   "lineno": 3459,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.isin",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "set",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_transformer": {
  "data": {
   "lineno": 2503,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "isinstance",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandapower.std_types.load_std_type",
    "pandas.Series",
    "pandas.notnull"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_transformer3w": {
  "data": {
   "lineno": 2966,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "packaging.version.parse",
    "pandapower.auxiliary.get_free_id",
    "pandapower.std_types.load_std_type",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.__version__",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_transformer3w_from_parameters": {
  "data": {
   "lineno": 3076,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_transformer_from_parameters": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "list",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.Series",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_transformers3w_from_parameters": {
  "data": {
   "lineno": 3215,
   "symbols_in_volume": [
    "UserWarning",
    "float",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.isin",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_transformers_from_parameters": {
  "data": {
   "lineno": 2798,
   "symbols_in_volume": [
    "UserWarning",
    "bool",
    "float",
    "len",
    "list",
    "numpy.all",
    "numpy.arange",
    "numpy.isin",
    "numpy.nan",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id",
    "pandas.DataFrame",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_ward": {
  "data": {
   "lineno": 3737,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.create_xward": {
  "data": {
   "lineno": 3780,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.auxiliary._preserve_dtypes",
    "pandapower.auxiliary.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.create.dtype": {
  "data": {
   "shadows": "numpy.dtype"
  },
  "type": "import"
 },
 "pandapower.create.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "pandapower.create.get_free_id": {
  "data": {
   "shadows": "pandapower.auxiliary.get_free_id"
  },
  "type": "import"
 },
 "pandapower.create.isin": {
  "data": {
   "shadows": "numpy.isin"
  },
  "type": "import"
 },
 "pandapower.create.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "pandapower.create.load_std_type": {
  "data": {
   "shadows": "pandapower.std_types.load_std_type"
  },
  "type": "import"
 },
 "pandapower.create.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandapower.create.np_all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "pandapower.create.np_any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.create.pandapowerNet": {
  "data": {
   "shadows": "pandapower.auxiliary.pandapowerNet"
  },
  "type": "import"
 },
 "pandapower.create.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.create.pq_from_cosphi": {
  "data": {
   "shadows": "pandapower.toolbox.pq_from_cosphi"
  },
  "type": "import"
 },
 "pandapower.create.reset_results": {
  "data": {
   "shadows": "pandapower.results.reset_results"
  },
  "type": "import"
 },
 "pandapower.create.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "pandapower.create.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.diagnostic_reports": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.diagnostic_reports.DiagnosticReports": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_deviation_from_std_type": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_different_voltage_levels_connected": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "list",
    "pandapower.diagnostic_reports.logger",
    "pandapower.toolbox.get_connected_buses_at_element"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_disconnected_elements": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_impedance_values_close_to_zero": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_invalid_values": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len",
    "pandapower.diagnostic_reports.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_missing_bus_indices": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_multiple_voltage_controlling_elements_per_bus": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "len",
    "list",
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_no_ext_grid": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_nominal_voltages_dont_match": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_numba_comparison": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_overload": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_parallel_switches": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "len",
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_wrong_reference_system": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_wrong_switch_configuration": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.diagnostic_report": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.diagnostic_reports.log_message_sep",
    "pandapower.diagnostic_reports.logger",
    "pplog.INFO",
    "pplog.WARNING"
   ]
  },
  "type": "function"
 },
 "pandapower.diagnostic_reports.get_connected_buses_at_element": {
  "data": {
   "shadows": "pandapower.toolbox.get_connected_buses_at_element"
  },
  "type": "import"
 },
 "pandapower.diagnostic_reports.log_message_sep": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.diagnostic_reports.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.diagnostic_reports.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.estimation": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.algorithm": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.algorithm.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.estimation.algorithm.base.BaseAlgebra": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.BaseAlgebraZeroInjConstraints": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.std_logger"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.check_observability": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "pandapower.estimation.ppc_conversion.ExtendedPPCI"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.check_result": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.estimate": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandapower.estimation.ppc_conversion.ExtendedPPCI"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.initialize": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandapower.estimation.ppc_conversion.ExtendedPPCI"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseEstimatorIRWLS": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.ExtendedPPCI": {
  "data": {
   "shadows": "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.IRWLSAlgorithm": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.BaseAlgorithm"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.IRWLSAlgorithm.estimate": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.max",
    "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS",
    "pandapower.estimation.algorithm.estimator.get_estimator",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.linalg.spsolve"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.P": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.P"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.P_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.P_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.Q": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.Q"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.Q_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.Q_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.WLSAlgorithm": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.BaseAlgorithm"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.WLSAlgorithm.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.WLSAlgorithm",
    "pandapower.estimation.algorithm.base.std_logger",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.WLSAlgorithm.estimate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diagflat",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.max",
    "pandapower.estimation.algorithm.matrix_base.BaseAlgebra",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.linalg.spsolve"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.WLSZeroInjectionConstraintsAlgorithm": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.BaseAlgorithm"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.WLSZeroInjectionConstraintsAlgorithm.estimate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.NaN",
    "numpy.abs",
    "numpy.argwhere",
    "numpy.diagflat",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.max",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints",
    "pandapower.estimation.idx_bus.P",
    "pandapower.estimation.idx_bus.P_STD",
    "pandapower.estimation.idx_bus.Q",
    "pandapower.estimation.idx_bus.Q_STD",
    "pandapower.estimation.idx_bus.ZERO_INJ_FLAG",
    "pandapower.pypower.idx_bus.bus_cols",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.linalg.spsolve",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.ZERO_INJ_FLAG": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.ZERO_INJ_FLAG"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandapower.estimation.algorithm.base.bus_cols": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.bus_cols"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.get_estimator": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.estimator.get_estimator"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.spsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.spsolve"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.base.std_logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.estimation.algorithm.base.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.estimator": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.estimation.algorithm.estimator.BaseAlgebra": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS",
    "pandapower.estimation.ppc_conversion.ExtendedPPCI",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS.create_phi": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt.cost_function": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt.create_cost_jacobian": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.ExtendedPPCI": {
  "data": {
   "shadows": "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.estimator.LAVEstimator": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.LAVEstimator.cost_function": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.LAVEstimator.create_cost_jacobian": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "numpy.sign",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.QCEstimatorOpt",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt.cost_function": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt.create_cost_jacobian": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.QLEstimatorOpt",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt.cost_function": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt.create_cost_jacobian": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.sign",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS",
    "pandapower.estimation.ppc_conversion.ExtendedPPCI",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS._ps": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "calc_sm",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS._ps.calc_sm": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.abs",
    "pandapower.pf.no_numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS.create_phi": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.diagflat"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS.weight": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.min",
    "numpy.ones",
    "numpy.sum",
    "scipy.stats.chi2.ppf"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS",
    "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.estimator.WLSEstimator",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.cost_function": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.create_cost_jacobian": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.create_phi": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.diagflat"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.estimator.get_estimator": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.jit": {
  "data": {
   "shadows": "pandapower.pf.no_numba.jit"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.estimator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.lp": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.algorithm.lp.BaseAlgebra": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.lp.BaseAlgorithm": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.base.BaseAlgorithm"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.lp.LPAlgorithm": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.BaseAlgorithm"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.lp.LPAlgorithm.estimate": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.max",
    "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.lp.LPAlgorithm.solve_lp": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.c_",
    "numpy.eye",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.estimation.algorithm.lp.warnings",
    "scipy.optimize.linprog"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.lp.linprog": {
  "data": {
   "shadows": "scipy.optimize.linprog"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.lp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.lp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "int",
    "pandapower.estimation.ppc_conversion.ExtendedPPCI",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.T_BUS.real.astype"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dSbr_dv": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pandapower.pypower.dSbr_dV.dSbr_dV"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dSbus_dv": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pandapower.pypower.dSbus_dV.dSbus_dV"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dimiabr_dV": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "map",
    "numpy.abs",
    "numpy.angle",
    "pandapower.pypower.dIbr_dV.dIbr_dV"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dvabus_dV": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dvmbus_dV": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.create_hx": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.angle",
    "numpy.conj",
    "numpy.imag",
    "numpy.r_",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.create_hx_jacobian": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.r_",
    "scipy.sparse.hstack",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.create_rx": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.initialize_Y": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints.create_cx": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints.create_cx_jacobian": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.ExtendedPPCI": {
  "data": {
   "shadows": "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.estimation.algorithm.matrix_base.dIbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dIbr_dV.dIbr_dV"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.dSbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dSbr_dV.dSbr_dV"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.dSbus_dV": {
  "data": {
   "shadows": "pandapower.pypower.dSbus_dV.dSbus_dV"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.diags": {
  "data": {
   "shadows": "scipy.sparse.diags"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.matrix_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.optimization": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.algorithm.optimization.BaseAlgorithm": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.base.BaseAlgorithm"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.optimization.BaseEstimatorOpt": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.optimization.DEFAULT_OPT_METHOD": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.estimation.algorithm.optimization.OptAlgorithm": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.estimation.algorithm.base.BaseAlgorithm"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.algorithm.optimization.OptAlgorithm.estimate": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt",
    "pandapower.estimation.algorithm.estimator.get_estimator",
    "pandapower.estimation.algorithm.optimization.DEFAULT_OPT_METHOD",
    "scipy.optimize.minimize"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.algorithm.optimization.get_estimator": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.estimator.get_estimator"
  },
  "type": "import"
 },
 "pandapower.estimation.algorithm.optimization.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "pandapower.estimation.idx_brch": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.idx_brch.IA_FROM": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IA_FROM_IDX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IA_FROM_STD": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IA_TO": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IA_TO_IDX": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IA_TO_STD": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IM_FROM": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IM_FROM_IDX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IM_FROM_STD": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IM_TO": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IM_TO_IDX": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.IM_TO_STD": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.P_FROM": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.P_FROM_IDX": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.P_FROM_STD": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.P_TO": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.P_TO_IDX": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.P_TO_STD": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.Q_FROM": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.Q_FROM_IDX": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.Q_FROM_STD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.Q_TO": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.Q_TO_IDX": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.Q_TO_STD": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_brch.branch_cols_se": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.idx_bus.P": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.P_IDX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.P_STD": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.Q": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.Q_IDX": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.Q_STD": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.VA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.VA_IDX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.VA_STD": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.VM": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.VM_IDX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.VM_STD": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.ZERO_INJ_FLAG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandapower.estimation.idx_bus.bus_cols_se": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.estimation.ppc_conversion": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.estimation.idx_brch.IA_FROM",
    "pandapower.estimation.idx_brch.IA_FROM_IDX",
    "pandapower.estimation.idx_brch.IA_FROM_STD",
    "pandapower.estimation.idx_brch.IA_TO",
    "pandapower.estimation.idx_brch.IA_TO_IDX",
    "pandapower.estimation.idx_brch.IA_TO_STD",
    "pandapower.estimation.idx_brch.IM_FROM",
    "pandapower.estimation.idx_brch.IM_FROM_IDX",
    "pandapower.estimation.idx_brch.IM_FROM_STD",
    "pandapower.estimation.idx_brch.IM_TO",
    "pandapower.estimation.idx_brch.IM_TO_IDX",
    "pandapower.estimation.idx_brch.IM_TO_STD",
    "pandapower.estimation.idx_brch.P_FROM",
    "pandapower.estimation.idx_brch.P_FROM_IDX",
    "pandapower.estimation.idx_brch.P_FROM_STD",
    "pandapower.estimation.idx_brch.P_TO",
    "pandapower.estimation.idx_brch.P_TO_IDX",
    "pandapower.estimation.idx_brch.P_TO_STD",
    "pandapower.estimation.idx_brch.Q_FROM",
    "pandapower.estimation.idx_brch.Q_FROM_IDX",
    "pandapower.estimation.idx_brch.Q_FROM_STD",
    "pandapower.estimation.idx_brch.Q_TO",
    "pandapower.estimation.idx_brch.Q_TO_IDX",
    "pandapower.estimation.idx_brch.Q_TO_STD",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.estimation.ppc_conversion.BR_MEAS_PPCI_IX": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandapower.estimation.ppc_conversion.BR_SIDE": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "collections.UserDict"
   ]
  },
  "type": "class"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.E2V": {
  "data": {
   "lineno": 490
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.V": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "numpy.exp",
    "property"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "bool",
    "numpy.argwhere",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.r_",
    "numpy.r_.ravel",
    "numpy.radians",
    "numpy.sum",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.BUS_TYPE.ravel",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI._initialize_meas": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "pandapower.estimation.ppc_conversion._build_measurement_vectors"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.get_Y": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.reset": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.update_E": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.update_meas": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "pandapower.estimation.ppc_conversion._build_measurement_vectors"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.IA_FROM": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IA_FROM"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IA_FROM_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IA_FROM_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IA_FROM_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IA_FROM_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IA_TO": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IA_TO"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IA_TO_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IA_TO_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IA_TO_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IA_TO_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IM_FROM": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IM_FROM"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IM_FROM_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IM_FROM_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IM_FROM_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IM_FROM_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IM_TO": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IM_TO"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IM_TO_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IM_TO_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.IM_TO_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.IM_TO_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.P"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_FROM": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.P_FROM"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_FROM_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.P_FROM_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_FROM_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.P_FROM_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.P_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.P_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_TO": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.P_TO"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_TO_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.P_TO_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.P_TO_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.P_TO_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.Q"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_FROM": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.Q_FROM"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_FROM_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.Q_FROM_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_FROM_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.Q_FROM_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.Q_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.Q_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_TO": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.Q_TO"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_TO_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.Q_TO_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.Q_TO_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.Q_TO_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.UserDict": {
  "data": {
   "shadows": "collections.UserDict"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.VA": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.VA_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.VA_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.VA_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.VA_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.VM": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.VM_IDX": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.VM_IDX"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.VM_STD": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.VM_STD"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.ZERO_INJECTION_STD_DEV": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandapower.estimation.ppc_conversion.ZERO_INJ_FLAG": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.ZERO_INJ_FLAG"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion._add_measurements_to_ppci": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "numpy.arange",
    "numpy.argwhere",
    "numpy.deg2rad",
    "numpy.full",
    "numpy.hstack",
    "numpy.nan",
    "numpy.setdiff1d",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "pandapower.estimation.idx_brch.branch_cols_se",
    "pandapower.estimation.idx_bus.P",
    "pandapower.estimation.idx_bus.P_IDX",
    "pandapower.estimation.idx_bus.P_STD",
    "pandapower.estimation.idx_bus.Q",
    "pandapower.estimation.idx_bus.Q_IDX",
    "pandapower.estimation.idx_bus.Q_STD",
    "pandapower.estimation.idx_bus.VA",
    "pandapower.estimation.idx_bus.VA_IDX",
    "pandapower.estimation.idx_bus.VA_STD",
    "pandapower.estimation.idx_bus.VM",
    "pandapower.estimation.idx_bus.VM_IDX",
    "pandapower.estimation.idx_bus.VM_STD",
    "pandapower.estimation.idx_bus.bus_cols_se",
    "pandapower.estimation.ppc_conversion.BR_MEAS_PPCI_IX",
    "pandapower.estimation.ppc_conversion.BR_SIDE",
    "pandapower.estimation.ppc_conversion._add_zero_injection",
    "pandapower.estimation.ppc_conversion.std_logger",
    "pandapower.pypower.idx_brch.branch_cols",
    "pandapower.pypower.idx_bus.bus_cols",
    "pandas.Series",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._add_zero_injection": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "isinstance",
    "numpy.argwhere",
    "numpy.concatenate",
    "numpy.isnan",
    "pandapower.estimation.idx_bus.P",
    "pandapower.estimation.idx_bus.P_STD",
    "pandapower.estimation.idx_bus.Q",
    "pandapower.estimation.idx_bus.Q_STD",
    "pandapower.estimation.idx_bus.ZERO_INJ_FLAG",
    "pandapower.estimation.ppc_conversion.ZERO_INJECTION_STD_DEV",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._build_measurement_vectors": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "int",
    "numpy.any",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.isnan",
    "numpy.r_",
    "pandapower.estimation.idx_brch.IA_FROM",
    "pandapower.estimation.idx_brch.IA_FROM_IDX",
    "pandapower.estimation.idx_brch.IA_FROM_STD",
    "pandapower.estimation.idx_brch.IA_TO",
    "pandapower.estimation.idx_brch.IA_TO_IDX",
    "pandapower.estimation.idx_brch.IA_TO_STD",
    "pandapower.estimation.idx_brch.IM_FROM",
    "pandapower.estimation.idx_brch.IM_FROM_IDX",
    "pandapower.estimation.idx_brch.IM_FROM_STD",
    "pandapower.estimation.idx_brch.IM_TO",
    "pandapower.estimation.idx_brch.IM_TO_IDX",
    "pandapower.estimation.idx_brch.IM_TO_STD",
    "pandapower.estimation.idx_brch.P_FROM",
    "pandapower.estimation.idx_brch.P_FROM_IDX",
    "pandapower.estimation.idx_brch.P_FROM_STD",
    "pandapower.estimation.idx_brch.P_TO",
    "pandapower.estimation.idx_brch.P_TO_IDX",
    "pandapower.estimation.idx_brch.P_TO_STD",
    "pandapower.estimation.idx_brch.Q_FROM",
    "pandapower.estimation.idx_brch.Q_FROM_IDX",
    "pandapower.estimation.idx_brch.Q_FROM_STD",
    "pandapower.estimation.idx_brch.Q_TO",
    "pandapower.estimation.idx_brch.Q_TO_IDX",
    "pandapower.estimation.idx_brch.Q_TO_STD",
    "pandapower.estimation.idx_bus.P",
    "pandapower.estimation.idx_bus.P_IDX",
    "pandapower.estimation.idx_bus.P_STD",
    "pandapower.estimation.idx_bus.Q",
    "pandapower.estimation.idx_bus.Q_IDX",
    "pandapower.estimation.idx_bus.Q_STD",
    "pandapower.estimation.idx_bus.VA",
    "pandapower.estimation.idx_bus.VA_IDX",
    "pandapower.estimation.idx_bus.VA_STD",
    "pandapower.estimation.idx_bus.VM",
    "pandapower.estimation.idx_bus.VM_IDX",
    "pandapower.estimation.idx_bus.VM_STD",
    "pandapower.pypower.idx_brch.branch_cols",
    "pandapower.pypower.idx_bus.bus_cols"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._init_ppc": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.any",
    "pandapower.auxiliary._init_runse_options",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pf.run_newton_raphson_pf._run_dc_pf"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._init_runse_options": {
  "data": {
   "shadows": "pandapower.auxiliary._init_runse_options"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion._initialize_voltage": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.estimation.util.estimate_voltage_vector"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion._run_dc_pf": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf._run_dc_pf"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.branch_cols": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.branch_cols"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.branch_cols_se": {
  "data": {
   "shadows": "pandapower.estimation.idx_brch.branch_cols_se"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.bus_cols": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.bus_cols"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.bus_cols_se": {
  "data": {
   "shadows": "pandapower.estimation.idx_bus.bus_cols_se"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.estimate_voltage_vector": {
  "data": {
   "shadows": "pandapower.estimation.util.estimate_voltage_vector"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.idx_bus": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.estimation.ppc_conversion.pp2eppci": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "isinstance",
    "pandapower.estimation.ppc_conversion.ExtendedPPCI",
    "pandapower.estimation.ppc_conversion._add_measurements_to_ppci",
    "pandapower.estimation.ppc_conversion._init_ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.std_logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pandapower.estimation.results": {
  "data": {},
  "type": "module"
 },
 "pandapower.estimation.results.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.estimation.results.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.estimation.results._calc_power_flow": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.multiply",
    "pandapower.pf.pfsoln_numba.pfsoln",
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.results._copy_results_ppci_to_ppc": {
  "data": {
   "shadows": "pandapower.results._copy_results_ppci_to_ppc"
  },
  "type": "import"
 },
 "pandapower.estimation.results._extract_result_ppci_to_pp": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandapower.auxiliary.get_values",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.results._extract_results_se",
    "pandapower.results.init_results"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.results._extract_results_se": {
  "data": {
   "shadows": "pandapower.results._extract_results_se"
  },
  "type": "import"
 },
 "pandapower.estimation.results._get_pf_variables_from_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._get_pf_variables_from_ppci"
  },
  "type": "import"
 },
 "pandapower.estimation.results.eppci2pp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandapower.estimation.results._calc_power_flow",
    "pandapower.estimation.results._extract_result_ppci_to_pp"
   ]
  },
  "type": "function"
 },
 "pandapower.estimation.results.get_values": {
  "data": {
   "shadows": "pandapower.auxiliary.get_values"
  },
  "type": "import"
 },
 "pandapower.estimation.results.init_results": {
  "data": {
   "shadows": "pandapower.results.init_results"
  },
  "type": "import"
 },
 "pandapower.estimation.results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.estimation.results.pfsoln": {
  "data": {
   "shadows": "pandapower.pf.pfsoln_numba.pfsoln"
  },
  "type": "import"
 },
 "pandapower.file_io": {
  "data": {},
  "type": "module"
 },
 "pandapower.file_io._from_excel_old": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "pandapower.create.create_empty_network",
    "pandas.isnull",
    "pandas.notnull",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.convert_format": {
  "data": {
   "shadows": "pandapower.convert_format.convert_format"
  },
  "type": "import"
 },
 "pandapower.file_io.create_empty_network": {
  "data": {
   "shadows": "pandapower.create.create_empty_network"
  },
  "type": "import"
 },
 "pandapower.file_io.from_excel": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "UserWarning",
    "packaging.version.parse",
    "pandapower.convert_format.convert_format",
    "pandapower.file_io._from_excel_old",
    "pandapower.file_io.os",
    "pandapower.io_utils.from_dict_of_dfs",
    "pandas.ExcelFile",
    "pandas.__version__"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.from_json": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "open",
    "pandapower.file_io.from_json_string",
    "pandapower.file_io.os"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.from_json_dict": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandapower.create.create_empty_network",
    "pandapower.file_io.numpy",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.from_json_string": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "DeprecationWarning",
    "isinstance",
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.convert_format.convert_format",
    "pandapower.file_io.from_json_dict",
    "pandapower.file_io.json",
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.decrypt_string",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.from_pickle": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.convert_format.convert_format",
    "pandapower.io_utils.get_raw_data_from_pickle",
    "pandapower.io_utils.transform_net_with_df_and_geo"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.from_sql": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dict",
    "pandapower.io_utils.from_dict_of_dfs",
    "pandas.read_sql_query"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.from_sqlite": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandapower.file_io.from_sql",
    "pandapower.file_io.sqlite3"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.io_utils": {
  "data": {
   "shadows": "pandapower.io_utils"
  },
  "type": "import"
 },
 "pandapower.file_io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandapower.file_io.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.file_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.file_io.pandapowerNet": {
  "data": {
   "shadows": "pandapower.auxiliary.pandapowerNet"
  },
  "type": "import"
 },
 "pandapower.file_io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.file_io.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandapower.file_io.sqlite3": {
  "data": {
   "shadows": "sqlite3"
  },
  "type": "import"
 },
 "pandapower.file_io.to_excel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandapower.io_utils.to_dict_of_dfs",
    "pandas.ExcelWriter"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.to_json": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "hasattr",
    "open",
    "pandapower.file_io.json",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.io_utils.encrypt_string"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.to_pickle": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "hasattr",
    "open",
    "pandapower.file_io.pickle",
    "pandapower.io_utils.to_dict_with_coord_transform"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.to_sql": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandapower.io_utils.to_dict_of_dfs"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.to_sqlite": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandapower.file_io.sqlite3",
    "pandapower.file_io.to_sql"
   ]
  },
  "type": "function"
 },
 "pandapower.file_io.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "pandapower.file_io.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandapower.io_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "__name__",
    "pandapower.io_utils.GEOPANDAS_INSTALLED",
    "pandapower.io_utils.SHAPELY_INSTALLED",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.io_utils.Fernet": {
  "data": {
   "shadows": "cryptography.fernet.Fernet"
  },
  "type": "import"
 },
 "pandapower.io_utils.FromSerializable": {
  "data": {
   "lineno": 365
  },
  "type": "class"
 },
 "pandapower.io_utils.FromSerializable.__get__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializable.__init__": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializable.register": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializable.register.decorator": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "pandapower.io_utils.FromSerializable",
    "pandapower.io_utils.GEOPANDAS_INSTALLED",
    "pandapower.io_utils.SHAPELY_INSTALLED"
   ]
  },
  "type": "class"
 },
 "pandapower.io_utils.FromSerializableRegistry.DataFrame": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.numpy",
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.GeoDataFrame": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandapower.io_utils.fiona",
    "pandapower.io_utils.geopandas",
    "pandapower.io_utils.json",
    "pandapower.io_utils.numpy",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.Series": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.__init__": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.function": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "getattr",
    "pandapower.io_utils.importlib"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.method": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pandapower.io_utils.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.networkx": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "networkx.readwrite.json_graph.adjacency_graph"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.pandapowerNet": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "isinstance",
    "pandapower.from_json_string",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.rest": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "class_",
    "functools.partial",
    "getattr",
    "inspect.isclass",
    "isinstance",
    "issubclass",
    "pandapower.io_utils.FromSerializableRegistry",
    "pandapower.io_utils.importlib",
    "pandapower.io_utils.json",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.shapely": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "pandapower.io_utils.GEOPANDAS_INSTALLED": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandapower.io_utils.JSONSerializableClass": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandapower.io_utils.JSONSerializableClass.__deepcopy__": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "id",
    "pandapower.io_utils.copy",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.__eq__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "check_equality",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.__eq__.UnequalityFound": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pandapower.io_utils.JSONSerializableClass.__eq__.check_callable_equality": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "isinstance",
    "pandapower.io_utils.weakref",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.__eq__.check_dictionary_equality": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "check_equality",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.__eq__.check_equality": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "callable",
    "check_callable_equality",
    "check_dictionary_equality",
    "dict",
    "isinstance",
    "len",
    "numpy.allclose",
    "numpy.any",
    "numpy.equal",
    "numpy.generic",
    "numpy.isnan",
    "numpy.ndarray",
    "pandapower.auxiliary.pandapowerNet",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.testing.assert_frame_equal",
    "pandas.testing.assert_series_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.__init__": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.add_to_net": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "UserWarning",
    "isinstance",
    "pandapower.io_utils.JSONSerializableClass",
    "pandapower.io_utils.logger",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.from_dict": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "classmethod",
    "pandapower.io_utils.JSONSerializableClass"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.from_json": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "classmethod",
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.json"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.net": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "pandapower.io_utils.weakref"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.to_dict": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "consider_callable",
    "inspect.signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.to_dict.consider_callable": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "callable",
    "inspect._findclass",
    "pandapower.io_utils.types",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.to_json": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.io_utils.json"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.PPJSONDecoder": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "pandapower.io_utils.json"
   ]
  },
  "type": "class"
 },
 "pandapower.io_utils.PPJSONDecoder.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "functools.partial",
    "pandapower.create.create_empty_network",
    "pandapower.io_utils.FromSerializableRegistry",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pandapower.io_utils.json"
   ]
  },
  "type": "class"
 },
 "pandapower.io_utils.PPJSONEncoder.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.io_utils.isinstance_partial",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder.default": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "TypeError",
    "pandapower.io_utils.json",
    "pandapower.io_utils.to_serializable"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder.iterencode": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "_iterencode",
    "pandapower.io_utils.json"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder.iterencode.floatstr": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "_repr",
    "float.__repr__",
    "pandapower.io_utils.json",
    "repr"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.SHAPELY_INSTALLED": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandapower.io_utils._findclass": {
  "data": {
   "shadows": "inspect._findclass"
  },
  "type": "import"
 },
 "pandapower.io_utils.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "pandapower.io_utils.anynp": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.io_utils.assert_frame_equal": {
  "data": {
   "shadows": "pandas.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandapower.io_utils.assert_series_equal": {
  "data": {
   "shadows": "pandas.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandapower.io_utils.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pandapower.io_utils.controller_to_serializable": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "pandapower.io_utils.JSONSerializableClass",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.coords_to_df": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.any",
    "pandapower.io_utils.numpy",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.io_utils.create_empty_network": {
  "data": {
   "shadows": "pandapower.create.create_empty_network"
  },
  "type": "import"
 },
 "pandapower.io_utils.decrypt_string": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "cryptography.fernet.Fernet",
    "pandapower.io_utils.base64",
    "pandapower.io_utils.hashlib",
    "pandapower.io_utils.zlib"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.df_to_coords": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pandas.notnull",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.dicts_to_pandas": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "DeprecationWarning",
    "UserWarning",
    "dict",
    "isinstance",
    "pandapower.io_utils.numpy",
    "pandas.DataFrame.from_dict",
    "sorted",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.encrypt_string": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "cryptography.fernet.Fernet",
    "pandapower.io_utils.base64",
    "pandapower.io_utils.hashlib",
    "pandapower.io_utils.zlib"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.equal": {
  "data": {
   "shadows": "numpy.equal"
  },
  "type": "import"
 },
 "pandapower.io_utils.fiona": {
  "data": {
   "shadows": "fiona"
  },
  "type": "import"
 },
 "pandapower.io_utils.fiona.crs": {
  "data": {
   "shadows": "fiona.crs"
  },
  "type": "import"
 },
 "pandapower.io_utils.from_dict_of_dfs": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "pandapower.create.create_empty_network",
    "pandapower.io_utils.df_to_coords",
    "pandapower.io_utils.numpy",
    "pandapower.io_utils.restore_all_dtypes",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.from_json_string": {
  "data": {
   "shadows": "pandapower.from_json_string"
  },
  "type": "import"
 },
 "pandapower.io_utils.generic": {
  "data": {
   "shadows": "numpy.generic"
  },
  "type": "import"
 },
 "pandapower.io_utils.geopandas": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "pandapower.io_utils.get_raw_data_from_pickle": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "UserWarning",
    "hasattr",
    "open",
    "pandapower.io_utils.os",
    "read"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.get_raw_data_from_pickle.read": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "pandapower.io_utils.pickle",
    "pandapower.io_utils.sys"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "pandapower.io_utils.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandapower.io_utils.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "pandapower.io_utils.isinstance_partial": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "isinstance",
    "pandapower.auxiliary.pandapowerNet",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "pandapower.io_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandapower.io_utils.json_array": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "list",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.numpy",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_bool": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "bool",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_complex": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "complex",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_dataframe": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_frozenset": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "frozenset",
    "list",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_geodataframe": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "pandapower.io_utils.geopandas",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_graph": {
  "data": {
   "shadows": "networkx.readwrite.json_graph"
  },
  "type": "import"
 },
 "pandapower.io_utils.json_linestring": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_networkx": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "networkx.readwrite.json_graph.adjacency_data",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.networkx",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_npfloat": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "float",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.numpy",
    "pandapower.io_utils.to_serializable"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_npint": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "int",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.numpy",
    "pandapower.io_utils.to_serializable"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_num": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "pandapower.io_utils.logger",
    "pandapower.io_utils.numbers",
    "pandapower.io_utils.to_serializable",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_pandapowernet": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_pdindex": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "list",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_point": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_polygon": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_series": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_set": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "list",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.json_tuple": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "list",
    "pandapower.io_utils.logger",
    "pandapower.io_utils.to_serializable",
    "pandapower.io_utils.with_signature",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.logger": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandapower.io_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.io_utils.mkdirs_if_not_existent": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "pandapower.io_utils.os"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "pandapower.io_utils.networkx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pandapower.io_utils.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "pandapower.io_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.io_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.io_utils.pandapowerNet": {
  "data": {
   "shadows": "pandapower.auxiliary.pandapowerNet"
  },
  "type": "import"
 },
 "pandapower.io_utils.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandapower.io_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.io_utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandapower.io_utils.pp_hook": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "TypeError",
    "pandapower.io_utils.FromSerializableRegistry",
    "pandapower.io_utils.logger",
    "registry_class"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.restore_all_dtypes": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "KeyError",
    "pandapower.io_utils.numpy"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.shapely.geometry": {
  "data": {
   "shadows": "shapely.geometry"
  },
  "type": "import"
 },
 "pandapower.io_utils.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "pandapower.io_utils.singledispatch": {
  "data": {
   "shadows": "singledispatch.singledispatch"
  },
  "type": "import"
 },
 "pandapower.io_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.io_utils.to_dict_of_dfs": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "pandapower.io_utils.GEOPANDAS_INSTALLED",
    "pandapower.io_utils.coords_to_df",
    "pandapower.io_utils.geopandas",
    "pandapower.io_utils.logger",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.to_dict_with_coord_transform": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "isinstance",
    "list",
    "pandapower.io_utils.copy",
    "pandas.DataFrame",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.to_serializable": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "pandapower.io_utils.logger",
    "singledispatch.singledispatch",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.transform_net_with_df_and_geo": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "dict",
    "isinstance",
    "packaging.version.parse",
    "pandapower.io_utils.GEOPANDAS_INSTALLED",
    "pandapower.io_utils.fiona",
    "pandapower.io_utils.geopandas",
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "pandas.Int64Index",
    "pandas.__version__"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pandapower.io_utils.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "pandapower.io_utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "pandapower.io_utils.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pandapower.io_utils.with_signature": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.io_utils.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "pandapower.networks": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.cigre_networks": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.networks.cigre_networks.create_cigre_network_hv": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_shunt",
    "pandapower.create_std_type",
    "pandapower.create_transformer_from_parameters",
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.cigre_networks.create_cigre_network_lv": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_std_type",
    "pandapower.create_switch",
    "pandapower.create_transformer_from_parameters",
    "pandas.read_json"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.cigre_networks.create_cigre_network_mv": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandapower.create_bus",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load_from_cosphi",
    "pandapower.create_sgen",
    "pandapower.create_std_type",
    "pandapower.create_storage",
    "pandapower.create_switch",
    "pandapower.create_transformer_from_parameters",
    "pandas.read_json",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.cigre_networks.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandapower.networks.cigre_networks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.networks.cigre_networks.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandapower.networks.cigre_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.cigre_networks.read_json": {
  "data": {
   "shadows": "pandas.read_json"
  },
  "type": "import"
 },
 "pandapower.networks.create_examples": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.create_examples.example_multivoltage": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bool",
    "list",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_impedance",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_shunt",
    "pandapower.create_switch",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.create_transformer_from_parameters",
    "pandapower.create_xward",
    "pandapower.get_element_index",
    "pandapower.runpp",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.create_examples.example_simple": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_shunt",
    "pandapower.create_switch",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.create_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.networks.create_examples.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.dickert_lv_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.networks.dickert_lv_networks.case",
    "pandapower.networks.dickert_lv_networks.create_dickert_lv_network",
    "pandapower.networks.dickert_lv_networks.customer",
    "pandapower.networks.dickert_lv_networks.feeders_range",
    "pandapower.networks.dickert_lv_networks.linetype",
    "pandapower.networks.dickert_lv_networks.net",
    "pandapower.networks.dickert_lv_networks.trafo_type_data",
    "pandapower.networks.dickert_lv_networks.trafo_type_name",
    "pandapower.plotting.simple_plot"
   ]
  },
  "type": "module"
 },
 "pandapower.networks.dickert_lv_networks._change_to_ohl": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "list",
    "pandapower.change_std_type",
    "pandapower.get_connected_elements",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks._create_feeder": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "numpy.append",
    "numpy.ceil",
    "pandapower.create_buses",
    "pandapower.create_line",
    "pandapower.networks.dickert_lv_networks._change_to_ohl",
    "pandapower.networks.dickert_lv_networks._create_loads_with_coincidence",
    "round",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks._create_loads_with_coincidence": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "pandapower.create_load",
    "pandapower.pq_from_cosphi"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks.append": {
  "data": {
   "shadows": "numpy.append"
  },
  "type": "import"
 },
 "pandapower.networks.dickert_lv_networks.case": {
  "data": {
   "lineno": 286
  },
  "type": "constant"
 },
 "pandapower.networks.dickert_lv_networks.ceil": {
  "data": {
   "shadows": "numpy.ceil"
  },
  "type": "import"
 },
 "pandapower.networks.dickert_lv_networks.create_dickert_lv_feeders": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "pandapower.create_std_type",
    "pandapower.networks.dickert_lv_networks._create_feeder"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks.create_dickert_lv_network": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_std_type",
    "pandapower.create_transformer",
    "pandapower.networks.dickert_lv_networks.create_dickert_lv_feeders"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks.customer": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "pandapower.networks.dickert_lv_networks.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandapower.networks.dickert_lv_networks.feeders_range": {
  "data": {
   "lineno": 283
  },
  "type": "constant"
 },
 "pandapower.networks.dickert_lv_networks.linetype": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "pandapower.networks.dickert_lv_networks.net": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "pandapower.networks.dickert_lv_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.dickert_lv_networks.simple_plot": {
  "data": {
   "shadows": "pandapower.plotting.simple_plot"
  },
  "type": "import"
 },
 "pandapower.networks.dickert_lv_networks.trafo_type_data": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "pandapower.networks.dickert_lv_networks.trafo_type_name": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric.ieee_european_lv_asymmetric": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "pandapower.from_json",
    "pandapower.networks.ieee_europen_lv_asymmetric.os",
    "pandapower.pp_dir"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric.runpp_3ph": {
  "data": {
   "shadows": "pandapower.pf.runpp_3ph.runpp_3ph"
  },
  "type": "import"
 },
 "pandapower.networks.kerber_extreme_networks": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.kerber_extreme_networks._create_branch_network": {
  "data": {
   "shadows": "pandapower.networks.kerber_networks._create_branch_network"
  },
  "type": "import"
 },
 "pandapower.networks.kerber_extreme_networks._create_branched_loads_network": {
  "data": {
   "shadows": "pandapower.networks.kerber_networks._create_branched_loads_network"
  },
  "type": "import"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_dorfnetz": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_dorfnetz_trafo": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_freileitung": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branch_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_freileitung_trafo": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branch_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_kabel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_kabel_trafo": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_1": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_2": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_trafo_1": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_trafo_2": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.kerber_networks._add_lines_and_loads": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "list",
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.create_load",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks._add_lines_with_branched_loads": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.create_load",
    "random.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks._create_branch_network": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "enumerate",
    "pandapower.networks.kerber_networks._add_lines_and_loads",
    "pandapower.networks.kerber_networks._create_empty_network_with_transformer",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks._create_branched_loads_network": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "enumerate",
    "pandapower.networks.kerber_networks._add_lines_with_branched_loads",
    "pandapower.networks.kerber_networks._create_empty_network_with_transformer",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks._create_empty_network_with_transformer": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_std_type",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_dorfnetz": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_freileitung_1": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._add_lines_and_loads",
    "pandapower.networks.kerber_networks._create_empty_network_with_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_freileitung_2": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branch_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_kabel_1": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_kabel_2": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_vorstadtnetz_kabel_1": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_vorstadtnetz_kabel_2": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pandapower.networks.kerber_networks._create_branched_loads_network"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.kerber_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.kerber_networks.rd": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandapower.networks.mv_oberrhein": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.mv_oberrhein.mv_oberrhein": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arccos",
    "numpy.tan",
    "pandapower.from_json",
    "pandapower.networks.mv_oberrhein.os",
    "pandapower.pp_dir",
    "pandapower.runpp",
    "pandapower.select_subnet",
    "pandapower.topology.connected_components",
    "pandapower.topology.create_nxgraph"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.mv_oberrhein.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.networks.mv_oberrhein.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.networks.mv_oberrhein.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.mv_oberrhein.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.networks.mv_oberrhein.top": {
  "data": {
   "shadows": "pandapower.topology"
  },
  "type": "import"
 },
 "pandapower.networks.power_system_test_cases": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.power_system_test_cases.GBnetwork": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.GBreducednetwork": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases._change_ref_bus": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_sgen"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases._get_cases_path": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.networks.power_system_test_cases.os",
    "pandapower.pp_dir"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case118": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case11_iwamoto": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case1354pegase": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case14": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case145": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case1888rte": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._change_ref_bus",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case24_ieee_rts": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case2848rte": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._change_ref_bus",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case2869pegase": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case30": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case300": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case3120sp": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case33bw": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case39": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case4gs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case5": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case57": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6470rte": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._change_ref_bus",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6495rte": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._change_ref_bus",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6515rte": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._change_ref_bus",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6ww": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case89pegase": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case9": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case9241pegase": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case_ieee30": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case_illinois200": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.iceland": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.networks.power_system_test_cases._get_cases_path"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.networks.power_system_test_cases.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.power_system_test_cases.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.networks.simple_pandapower_test_networks": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.simple_pandapower_test_networks.four_loads_with_branches_out": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks.panda_four_load_branch": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.networks.simple_pandapower_test_networks.simple_four_bus_system": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks.simple_mv_open_ring_net": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks": {
  "data": {},
  "type": "module"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks.append": {
  "data": {
   "shadows": "numpy.append"
  },
  "type": "import"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks.create_synthetic_voltage_control_lv_network": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.append",
    "numpy.nan",
    "pandapower.create_bus",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_std_type",
    "pandapower.create_transformer",
    "pandas.DataFrame",
    "pandas.read_json",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.opf": {
  "data": {},
  "type": "module"
 },
 "pandapower.opf.make_objective": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.opf.make_objective.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.POLYNOMIAL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.POLYNOMIAL"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective._add_linear_costs_as_pwl_cost": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandapower.opf.make_objective._map_costs_to_gen",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.PMIN"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective._fill_gencost_poly": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandapower.opf.make_objective._map_costs_to_gen",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.NCOST"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective._fill_gencost_pwl": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "pandapower.opf.make_objective._map_costs_to_gen",
    "pandapower.opf.make_objective.costs_from_areas",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.NCOST",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective._get_gen_index": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective._init_gencost": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "max",
    "numpy.zeros",
    "pandapower.pypower.idx_cost.COST"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective._make_objective": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandapower.opf.make_objective._add_linear_costs_as_pwl_cost",
    "pandapower.opf.make_objective._fill_gencost_poly",
    "pandapower.opf.make_objective._fill_gencost_pwl",
    "pandapower.opf.make_objective._init_gencost",
    "pandapower.opf.make_objective.logger",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_cost.POLYNOMIAL",
    "pandapower.pypower.idx_cost.PW_LINEAR"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective._map_costs_to_gen": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "pandapower.opf.make_objective._get_gen_index",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.costs_from_areas": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.make_objective.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.opf.make_objective.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.opf.make_objective.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.opf.pm_storage": {
  "data": {},
  "type": "module"
 },
 "pandapower.opf.pm_storage.add_storage_opf_settings": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.pm_storage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.opf.pm_storage.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.opf.pm_storage.read_pm_storage_results": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "len",
    "numpy.arange",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.run_powermodels": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.opf.run_powermodels.Main": {
  "data": {
   "shadows": "julia.Main"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels._call_powermodels": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImportError",
    "UserWarning",
    "julia.Main.include",
    "pandapower.opf.run_powermodels.julia",
    "pandapower.opf.run_powermodels.os",
    "pandapower.pp_dir",
    "run_powermodels"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.run_powermodels._runpm": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.converter.powermodels.from_pm.read_pm_results_to_net",
    "pandapower.converter.powermodels.to_pm.convert_to_pm_structure",
    "pandapower.converter.powermodels.to_pm.dump_pm_json",
    "pandapower.opf.run_powermodels._call_powermodels",
    "pandapower.opf.run_powermodels.os"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.run_powermodels.convert_to_pm_structure": {
  "data": {
   "shadows": "pandapower.converter.powermodels.to_pm.convert_to_pm_structure"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels.dump_pm_json": {
  "data": {
   "shadows": "pandapower.converter.powermodels.to_pm.dump_pm_json"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels.julia": {
  "data": {
   "shadows": "julia"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.opf.run_powermodels.read_pm_results_to_net": {
  "data": {
   "shadows": "pandapower.converter.powermodels.from_pm.read_pm_results_to_net"
  },
  "type": "import"
 },
 "pandapower.opf.validate_opf_input": {
  "data": {},
  "type": "module"
 },
 "pandapower.opf.validate_opf_input._check_necessary_opf_parameters": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "len",
    "pandas.Series",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.opf.validate_opf_input.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow": {
  "data": {},
  "type": "module"
 },
 "pandapower.optimal_powerflow.OPFNotConverged": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.auxiliary.ppException"
   ]
  },
  "type": "class"
 },
 "pandapower.optimal_powerflow.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._add_auxiliary_elements": {
  "data": {
   "shadows": "pandapower.auxiliary._add_auxiliary_elements"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._add_dcline_constraints": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "enumerate",
    "scipy.sparse.csr_matrix",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.optimal_powerflow._clean_up": {
  "data": {
   "shadows": "pandapower.auxiliary._clean_up"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._copy_results_ppci_to_ppc": {
  "data": {
   "shadows": "pandapower.results._copy_results_ppci_to_ppc"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._extract_results": {
  "data": {
   "shadows": "pandapower.results._extract_results"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._optimal_powerflow": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "pandapower.auxiliary._add_auxiliary_elements",
    "pandapower.auxiliary._clean_up",
    "pandapower.optimal_powerflow.OPFNotConverged",
    "pandapower.optimal_powerflow._run_pf_before_opf",
    "pandapower.optimal_powerflow.warnings",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pypower.add_userfcn.add_userfcn",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.opf.opf",
    "pandapower.pypower.ppoption.ppoption",
    "pandapower.pypower.printpf.printpf",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.results._extract_results",
    "pandapower.results.init_results",
    "sys.stdout"
   ]
  },
  "type": "function"
 },
 "pandapower.optimal_powerflow._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._run_newton_raphson_pf": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow._run_pf_before_opf": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf"
   ]
  },
  "type": "function"
 },
 "pandapower.optimal_powerflow.add_userfcn": {
  "data": {
   "shadows": "pandapower.pypower.add_userfcn.add_userfcn"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.init_results": {
  "data": {
   "shadows": "pandapower.results.init_results"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.opf": {
  "data": {
   "shadows": "pandapower.pypower.opf.opf"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.ppException": {
  "data": {
   "shadows": "pandapower.auxiliary.ppException"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.ppoption": {
  "data": {
   "shadows": "pandapower.pypower.ppoption.ppoption"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.printpf": {
  "data": {
   "shadows": "pandapower.pypower.printpf.printpf"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "pandapower.optimal_powerflow.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandapower.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.pd2ppc": {
  "data": {},
  "type": "module"
 },
 "pandapower.pd2ppc.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.NONE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.NONE"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.PRICE_REF_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_area.PRICE_REF_BUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._add_ext_grid_sc_impedance_zero": {
  "data": {
   "shadows": "pandapower.pd2ppc_zero._add_ext_grid_sc_impedance_zero"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._add_gen_impedances_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._add_gen_impedances_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._add_motor_impedances_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._add_motor_impedances_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._branches_with_oos_buses": {
  "data": {
   "shadows": "pandapower.build_branch._branches_with_oos_buses"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._build_branch_ppc": {
  "data": {
   "shadows": "pandapower.build_branch._build_branch_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._build_branch_ppc_zero": {
  "data": {
   "shadows": "pandapower.pd2ppc_zero._build_branch_ppc_zero"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._build_bus_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._build_bus_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._build_gen_lookups": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "pandapower.pd2ppc._init_lookup"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc._build_gen_ppc": {
  "data": {
   "shadows": "pandapower.build_gen._build_gen_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._calc_pq_elements_and_add_on_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._calc_pq_elements_and_add_on_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._calc_shunts_and_add_on_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._calc_shunts_and_add_on_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._check_for_reference_bus": {
  "data": {
   "shadows": "pandapower.build_gen._check_for_reference_bus"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._check_voltage_angles_at_same_bus": {
  "data": {
   "shadows": "pandapower.build_gen._check_voltage_angles_at_same_bus"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._check_voltage_setpoints_at_same_bus": {
  "data": {
   "shadows": "pandapower.build_gen._check_voltage_setpoints_at_same_bus"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._init_lookup": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.ones",
    "pandapower.auxiliary._write_lookup_to_net"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc._init_ppc": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "numpy.array",
    "numpy.complex128"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc._make_objective": {
  "data": {
   "shadows": "pandapower.opf.make_objective._make_objective"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._pd2ppc": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandapower.auxiliary._check_connectivity",
    "pandapower.auxiliary._check_connectivity_opf",
    "pandapower.auxiliary._replace_nans_with_default_limits",
    "pandapower.auxiliary._select_is_elements_numba",
    "pandapower.auxiliary._set_isolated_buses_out_of_service",
    "pandapower.build_branch._branches_with_oos_buses",
    "pandapower.build_branch._build_branch_ppc",
    "pandapower.build_branch._switch_branches",
    "pandapower.build_bus._add_gen_impedances_ppc",
    "pandapower.build_bus._add_motor_impedances_ppc",
    "pandapower.build_bus._build_bus_ppc",
    "pandapower.build_bus._calc_pq_elements_and_add_on_ppc",
    "pandapower.build_bus._calc_shunts_and_add_on_ppc",
    "pandapower.build_gen._build_gen_ppc",
    "pandapower.build_gen._check_for_reference_bus",
    "pandapower.build_gen._check_voltage_angles_at_same_bus",
    "pandapower.build_gen._check_voltage_setpoints_at_same_bus",
    "pandapower.opf.make_objective._make_objective",
    "pandapower.pd2ppc._init_ppc",
    "pandapower.pd2ppc._ppc2ppci",
    "pandapower.pd2ppc_zero._add_ext_grid_sc_impedance_zero",
    "pandapower.pd2ppc_zero._build_branch_ppc_zero",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.NONE"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc._ppc2ppci": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "numpy.any",
    "numpy.append",
    "numpy.arange",
    "numpy.array",
    "numpy.real",
    "numpy.setdiff1d",
    "numpy.vstack",
    "numpy.zeros",
    "pandapower.pd2ppc._build_gen_lookups",
    "pandapower.pd2ppc._init_ppc",
    "pandapower.pd2ppc._update_lookup_entries",
    "pandapower.pypower.idx_area.PRICE_REF_BUS",
    "pandapower.pypower.idx_area.PRICE_REF_BUS.astype",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.idx_bus.BUS_I.astype",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.NONE",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.run_userfcn.run_userfcn"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc._switch_branches": {
  "data": {
   "shadows": "pandapower.build_branch._switch_branches"
  },
  "type": "import"
 },
 "pandapower.pd2ppc._update_lookup_entries": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pandapower.auxiliary._write_lookup_to_net"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc.aux": {
  "data": {
   "shadows": "pandapower.auxiliary"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pd2ppc.run_userfcn": {
  "data": {
   "shadows": "pandapower.pypower.run_userfcn.run_userfcn"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero": {
  "data": {},
  "type": "module"
 },
 "pandapower.pd2ppc_zero.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.C_MAX": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.C_MAX"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.C_MIN": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.C_MIN"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._add_ext_grid_sc_impedance_zero": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.sqrt",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.shortcircuit.idx_bus.C_MAX",
    "pandapower.shortcircuit.idx_bus.C_MIN"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc_zero._add_line_sc_impedance_zero": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "int",
    "numpy.square",
    "pandapower.build_branch._end_temperature_correction_factor",
    "pandapower.pd2ppc_zero.math",
    "pandapower.pypower.idx_brch.BR_B",
    "pandapower.pypower.idx_brch.BR_R",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.BR_X",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_bus.BASE_KV"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc_zero._add_trafo_sc_impedance_zero": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "complex",
    "float",
    "int",
    "numpy.array",
    "numpy.hstack",
    "numpy.sign",
    "numpy.sqrt",
    "numpy.square",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.build_branch._calc_nominal_ratio_from_dataframe",
    "pandapower.build_branch._calc_tap_from_dataframe",
    "pandapower.build_branch._transformer_correction_factor",
    "pandapower.pypower.idx_brch.BR_R",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.BR_X",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.SHIFT",
    "pandapower.pypower.idx_brch.TAP",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.shortcircuit.idx_bus.C_MAX",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc_zero._branches_with_oos_buses": {
  "data": {
   "shadows": "pandapower.build_branch._branches_with_oos_buses"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._build_branch_ppc_zero": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "numpy.array",
    "numpy.complex128",
    "numpy.empty",
    "numpy.hstack",
    "numpy.nan",
    "numpy.zeros",
    "pandapower.build_branch._initialize_branch_lookup",
    "pandapower.pd2ppc_zero._add_line_sc_impedance_zero",
    "pandapower.pd2ppc_zero._add_trafo_sc_impedance_zero",
    "pandapower.pypower.idx_brch.branch_cols",
    "pandapower.shortcircuit.idx_brch.branch_cols_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc_zero._build_bus_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._build_bus_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._build_gen_ppc": {
  "data": {
   "shadows": "pandapower.build_gen._build_gen_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._calc_nominal_ratio_from_dataframe": {
  "data": {
   "shadows": "pandapower.build_branch._calc_nominal_ratio_from_dataframe"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._calc_tap_from_dataframe": {
  "data": {
   "shadows": "pandapower.build_branch._calc_tap_from_dataframe"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._end_temperature_correction_factor": {
  "data": {
   "shadows": "pandapower.build_branch._end_temperature_correction_factor"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._init_ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._init_ppc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._initialize_branch_lookup": {
  "data": {
   "shadows": "pandapower.build_branch._initialize_branch_lookup"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._pd2ppc_zero": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hasattr",
    "pandapower.auxiliary._select_is_elements_numba",
    "pandapower.build_branch._branches_with_oos_buses",
    "pandapower.build_branch._switch_branches",
    "pandapower.build_bus._build_bus_ppc",
    "pandapower.build_gen._build_gen_ppc",
    "pandapower.pd2ppc._init_ppc",
    "pandapower.pd2ppc._ppc2ppci",
    "pandapower.pd2ppc_zero._add_ext_grid_sc_impedance_zero",
    "pandapower.pd2ppc_zero._build_branch_ppc_zero"
   ]
  },
  "type": "function"
 },
 "pandapower.pd2ppc_zero._ppc2ppci": {
  "data": {
   "shadows": "pandapower.pd2ppc._ppc2ppci"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._switch_branches": {
  "data": {
   "shadows": "pandapower.build_branch._switch_branches"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero._transformer_correction_factor": {
  "data": {
   "shadows": "pandapower.build_branch._transformer_correction_factor"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.aux": {
  "data": {
   "shadows": "pandapower.auxiliary"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.branch_cols": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.branch_cols"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.branch_cols_sc": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.branch_cols_sc"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandapower.pd2ppc_zero.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.create_jacobian": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.pf.create_jacobian._create_J_with_numba": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abs",
    "createJ",
    "len",
    "numpy.complex128",
    "numpy.core.multiarray.empty",
    "numpy.core.multiarray.zeros",
    "numpy.float64",
    "numpy.int32",
    "pandapower.pf.dSbus_dV_numba.dSbus_dV_numba_sparse",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.create_jacobian._create_J_without_numba": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.core.multiarray.array",
    "pandapower.pypower.dSbus_dV.dSbus_dV",
    "scipy.sparse.hstack",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.create_jacobian.array": {
  "data": {
   "shadows": "numpy.core.multiarray.array"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.complex128": {
  "data": {
   "shadows": "numpy.complex128"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.create_J": {
  "data": {
   "shadows": "pandapower.pf.create_jacobian_numba.create_J"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.create_J2": {
  "data": {
   "shadows": "pandapower.pf.create_jacobian_numba.create_J2"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.create_jacobian_matrix": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "createJ",
    "pandapower.pf.create_jacobian._create_J_with_numba",
    "pandapower.pf.create_jacobian._create_J_without_numba"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.create_jacobian.dSbus_dV": {
  "data": {
   "shadows": "pandapower.pypower.dSbus_dV.dSbus_dV"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.dSbus_dV_numba_sparse": {
  "data": {
   "shadows": "pandapower.pf.dSbus_dV_numba.dSbus_dV_numba_sparse"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.empty": {
  "data": {
   "shadows": "numpy.core.multiarray.empty"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.get_fastest_jacobian_function": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "pandapower.pf.create_jacobian_numba.create_J",
    "pandapower.pf.create_jacobian_numba.create_J2"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.create_jacobian.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.int32": {
  "data": {
   "shadows": "numpy.int32"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian.zeros": {
  "data": {
   "shadows": "numpy.core.multiarray.zeros"
  },
  "type": "import"
 },
 "pandapower.pf.create_jacobian_numba": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.create_jacobian_numba.create_J": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.create_jacobian_numba.create_J2": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.create_jacobian_numba.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.dSbus_dV_numba.complex128": {
  "data": {
   "shadows": "numpy.complex128"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba.dSbus_dV": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.complex128",
    "numpy.zeros",
    "pandapower.pf.dSbus_dV_numba.dSbus_dV_numba_sparse",
    "pandapower.pypower.dSbus_dV.dSbus_dV_dense",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.dSbus_dV_numba.dSbus_dV_dense": {
  "data": {
   "shadows": "pandapower.pypower.dSbus_dV.dSbus_dV_dense"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba.dSbus_dV_numba_sparse": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "numba.jit",
    "numpy.complex128",
    "numpy.conj",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.dSbus_dV_numba.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pf.dSbus_dV_numba.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pf.iwamoto_multiplier": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.iwamoto_multiplier._evaluate_Yx": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.iwamoto_multiplier._get_iwamoto_multiplier": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.roots",
    "pandapower.pf.iwamoto_multiplier._evaluate_Yx",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.iwamoto_multiplier._iwamoto_step": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.core.umath.exp",
    "pandapower.pf.iwamoto_multiplier._get_iwamoto_multiplier"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.iwamoto_multiplier.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pf.iwamoto_multiplier.exp": {
  "data": {
   "shadows": "numpy.core.umath.exp"
  },
  "type": "import"
 },
 "pandapower.pf.iwamoto_multiplier.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pf.iwamoto_multiplier.roots": {
  "data": {
   "shadows": "numpy.roots"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.makeYbus_numba.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.branch_vectors": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.branch_vectors"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.gen_Ybus": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numba.jit",
    "numpy.complex128",
    "numpy.empty",
    "numpy.int64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.makeYbus_numba.jit": {
  "data": {
   "shadows": "numba.jit"
  },
  "type": "import"
 },
 "pandapower.pf.makeYbus_numba.makeYbus": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.argsort",
    "numpy.hstack",
    "numpy.int64",
    "numpy.real",
    "numpy.resize",
    "pandapower.pf.makeYbus_numba.gen_Ybus",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.makeYbus.branch_vectors",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.makeYbus_numba.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pf.no_numba": {
  "data": {
   "symbols_in_volume": [
    "pandapower.pf.no_numba.marker"
   ]
  },
  "type": "module"
 },
 "pandapower.pf.no_numba.int32": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.pf.no_numba.jit": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "callable",
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.no_numba.jit.wrapper": {
  "data": {
   "lineno": 2
  },
  "type": "function"
 },
 "pandapower.pf.no_numba.marker": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "pandapower.pf.ppci_variables": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.ppci_variables.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables._get_pf_variables_from_ppci": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "int",
    "numpy.exp",
    "numpy.flatnonzero",
    "numpy.pi",
    "pandapower.pypower.bustypes.bustypes",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.VG"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.ppci_variables.bustypes": {
  "data": {
   "shadows": "pandapower.pypower.bustypes.bustypes"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pf.ppci_variables.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.run_bfswpf.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.LoadflowNotConverged": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandapower.auxiliary.ppException"
   ]
  },
  "type": "class"
 },
 "pandapower.pf.run_bfswpf.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf._bfswpf": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "abs",
    "bool",
    "complex",
    "enumerate",
    "int",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.conj",
    "numpy.in1d",
    "numpy.ones",
    "numpy.zeros",
    "pandapower.pf.run_bfswpf.LoadflowNotConverged",
    "pandapower.pf.run_bfswpf._makeYsh_bfsw",
    "pandapower.pypower.bustypes.bustypes",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.idx_gen.VG",
    "pandapower.pypower.makeSbus.makeSbus",
    "pandapower.pypower.newtonpf._check_for_convergence",
    "pandapower.pypower.newtonpf._evaluate_Fx",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._check_for_convergence": {
  "data": {
   "shadows": "pandapower.pypower.newtonpf._check_for_convergence"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf._evaluate_Fx": {
  "data": {
   "shadows": "pandapower.pypower.newtonpf._evaluate_Fx"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf._get_Y_bus": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf._get_Y_bus"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf._get_bibc_bcbv": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pandapower.pf.run_bfswpf._make_bibc_bcbv"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._get_options": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._get_pf_variables_from_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._get_pf_variables_from_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf._import_numba_extensions_if_flag_is_true": {
  "data": {
   "shadows": "pandapower.pf.runpf_pypower._import_numba_extensions_if_flag_is_true"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf._makeYsh_bfsw": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "int",
    "numpy.bincount",
    "numpy.conj",
    "pandapower.pypower.idx_brch.BR_B.imag",
    "pandapower.pypower.idx_brch.BR_B.real",
    "pandapower.pypower.idx_brch.BR_R",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.BR_X",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.TAP",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._make_bibc_bcbv": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.argwhere",
    "numpy.array",
    "numpy.in1d",
    "numpy.sort",
    "pandapower.pypower.idx_brch.BR_R.real",
    "pandapower.pypower.idx_brch.BR_X.real",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.TAP",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "range",
    "scipy.linalg.inv",
    "scipy.sparse.csgraph.breadth_first_order",
    "scipy.sparse.csgraph.breadth_first_tree",
    "scipy.sparse.csgraph.shortest_path",
    "scipy.sparse.csr_matrix",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._run_bfswpf": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "dict",
    "int",
    "len",
    "list",
    "makeYbus",
    "numpy.argwhere",
    "numpy.exp",
    "numpy.ones",
    "numpy.pi",
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pf.run_bfswpf._bfswpf",
    "pandapower.pf.run_bfswpf._get_bibc_bcbv",
    "pandapower.pf.run_bfswpf._get_options",
    "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
    "pandapower.pf.runpf_pypower._import_numba_extensions_if_flag_is_true",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.SHIFT",
    "pandapower.pypower.idx_brch.SHIFT.any",
    "pandapower.pypower.idx_brch.SHIFT.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.makeSbus.makeSbus",
    "pandapower.pypower.pfsoln.pfsoln",
    "range",
    "scipy.sparse.csgraph.breadth_first_order",
    "scipy.sparse.csgraph.breadth_first_tree",
    "scipy.sparse.csr_matrix",
    "six.iteritems",
    "time.time",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_bfswpf.bustypes": {
  "data": {
   "shadows": "pandapower.pypower.bustypes.bustypes"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.csgraph": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.pfsoln": {
  "data": {
   "shadows": "pandapower.pypower.pfsoln.pfsoln"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.ppException": {
  "data": {
   "shadows": "pandapower.auxiliary.ppException"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.sp": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "pandapower.pf.run_bfswpf.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pf.run_dc_pf.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf._get_pf_variables_from_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._get_pf_variables_from_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf._run_dc_pf": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "numpy.bincount",
    "numpy.pi",
    "numpy.real",
    "numpy.zeros",
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci",
    "pandapower.pypower.dcpf.dcpf",
    "pandapower.pypower.idx_brch.PF",
    "pandapower.pypower.idx_brch.PT",
    "pandapower.pypower.idx_brch.QF",
    "pandapower.pypower.idx_brch.QT",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.makeBdc.makeBdc",
    "pandapower.pypower.makeSbus.makeSbus",
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_dc_pf._store_results_from_pf_in_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.bincount": {
  "data": {
   "shadows": "numpy.bincount"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.dcpf": {
  "data": {
   "shadows": "pandapower.pypower.dcpf.dcpf"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.makeBdc": {
  "data": {
   "shadows": "pandapower.pypower.makeBdc.makeBdc"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.pf.run_dc_pf.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.pf.run_newton_raphson_pf.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.PQ": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PQ"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf._get_Sbus": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandapower.pypower.makeSbus.makeSbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._get_Y_bus": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandapower.pf.makeYbus_numba.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._get_numba_functions": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.any",
    "pandapower.pf.makeYbus_numba.makeYbus",
    "pandapower.pf.pfsoln_numba.pf_solution_single_slack",
    "pandapower.pf.pfsoln_numba.pfsoln",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.makeYbus.makeYbus",
    "pandapower.pypower.pfsoln.pfsoln"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._get_pf_variables_from_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf._run_ac_pf_with_qlims_enforced": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.argmax",
    "numpy.flatnonzero",
    "numpy.r_",
    "numpy.r_.astype",
    "numpy.setdiff1d",
    "numpy.zeros",
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pf.run_newton_raphson_pf._run_ac_pf_without_qlims_enforced",
    "pandapower.pf.run_newton_raphson_pf.ppci_to_pfsoln",
    "pandapower.pypower.bustypes.bustypes",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.PQ",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._run_ac_pf_without_qlims_enforced": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "lightsim2grid.newtonpf.newtonpf",
    "newton",
    "pandapower.pf.makeYbus_numba.makeYbus",
    "pandapower.pf.pfsoln_numba.pfsoln",
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pf.run_newton_raphson_pf._get_Sbus",
    "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
    "pandapower.pf.run_newton_raphson_pf._get_numba_functions",
    "pandapower.pf.run_newton_raphson_pf._store_internal",
    "pandapower.pf.run_newton_raphson_pf.lightsim2grid_available"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._run_dc_pf": {
  "data": {
   "shadows": "pandapower.pf.run_dc_pf._run_dc_pf"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci",
    "pandapower.pf.run_dc_pf._run_dc_pf",
    "pandapower.pf.run_newton_raphson_pf._run_ac_pf_with_qlims_enforced",
    "pandapower.pf.run_newton_raphson_pf._run_ac_pf_without_qlims_enforced",
    "pandapower.pf.run_newton_raphson_pf.ppci_to_pfsoln",
    "str",
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._store_internal": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._store_results_from_pf_in_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf._update_v": {
  "data": {
   "shadows": "pandapower.pypower.pfsoln._update_v"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.argmax": {
  "data": {
   "shadows": "numpy.argmax"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.bustypes": {
  "data": {
   "shadows": "pandapower.pypower.bustypes.bustypes"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.lightsim2grid_available": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandapower.pf.run_newton_raphson_pf.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.makeYbus_numba": {
  "data": {
   "shadows": "pandapower.pf.makeYbus_numba.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.makeYbus_pypower": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.newton_ls": {
  "data": {
   "shadows": "lightsim2grid.newtonpf.newtonpf"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.newtonpf": {
  "data": {
   "shadows": "pandapower.pypower.newtonpf.newtonpf"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.pf_solution_single_slack": {
  "data": {
   "shadows": "pandapower.pf.pfsoln_numba.pf_solution_single_slack"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.pfsoln_numba": {
  "data": {
   "shadows": "pandapower.pf.pfsoln_numba.pfsoln"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.pfsoln_pypower": {
  "data": {
   "shadows": "pandapower.pypower.pfsoln.pfsoln"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.ppci_to_pfsoln": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandapower.pf.pfsoln_numba.pfsoln",
    "pandapower.pf.run_newton_raphson_pf._get_numba_functions",
    "pandapower.pypower.pfsoln._update_v"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.setdiff1d": {
  "data": {
   "shadows": "numpy.setdiff1d"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.pf.run_newton_raphson_pf.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.pf.runpf_pypower.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.PQ": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PQ"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower._ac_runpf": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "pandapower.pf.runpf_pypower._import_numba_extensions_if_flag_is_true",
    "pandapower.pf.runpf_pypower._run_ac_pf_with_qlims_enforced",
    "pandapower.pf.runpf_pypower._run_ac_pf_without_qlims_enforced"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._call_power_flow_function": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "numpy.real",
    "pandapower.pypower.fdpf.fdpf",
    "pandapower.pypower.gausspf.gausspf",
    "pandapower.pypower.makeB.makeB"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._get_Y_bus": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._get_options": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandapower.pypower.ppoption.ppoption"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._get_pf_variables_from_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._get_pf_variables_from_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower._import_numba_extensions_if_flag_is_true": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ImportError",
    "numba._version.version_version",
    "packaging.version.parse",
    "pandapower.pf.runpf_pypower.logger",
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._run_ac_pf_with_qlims_enforced": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "int",
    "len",
    "numpy.argmax",
    "numpy.flatnonzero",
    "numpy.r_",
    "numpy.r_.astype",
    "numpy.setdiff1d",
    "numpy.zeros",
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pf.runpf_pypower._run_ac_pf_without_qlims_enforced",
    "pandapower.pypower.bustypes.bustypes",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.PQ",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.pypower.idx_bus.REF",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._run_ac_pf_without_qlims_enforced": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
    "pandapower.pf.runpf_pypower._call_power_flow_function",
    "pandapower.pf.runpf_pypower._get_Y_bus",
    "pandapower.pypower.makeSbus.makeSbus",
    "pandapower.pypower.makeYbus.makeYbus",
    "pandapower.pypower.pfsoln.pfsoln"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._run_dc_pf": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf._run_dc_pf"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower._runpf_pypower": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci",
    "pandapower.pf.run_newton_raphson_pf._run_dc_pf",
    "pandapower.pf.runpf_pypower._ac_runpf",
    "pandapower.pf.runpf_pypower._get_options",
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._store_results_from_pf_in_ppci": {
  "data": {
   "shadows": "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.argmax": {
  "data": {
   "shadows": "numpy.argmax"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.bustypes": {
  "data": {
   "shadows": "pandapower.pypower.bustypes.bustypes"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.fdpf": {
  "data": {
   "shadows": "pandapower.pypower.fdpf.fdpf"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.gausspf": {
  "data": {
   "shadows": "pandapower.pypower.gausspf.gausspf"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandapower.pf.runpf_pypower.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.makeB": {
  "data": {
   "shadows": "pandapower.pypower.makeB.makeB"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.nb_version": {
  "data": {
   "shadows": "numba._version.version_version"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.pfsoln": {
  "data": {
   "shadows": "pandapower.pypower.pfsoln.pfsoln"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.ppoption": {
  "data": {
   "shadows": "pandapower.pypower.ppoption.ppoption"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.setdiff1d": {
  "data": {
   "shadows": "numpy.setdiff1d"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "pandapower.pf.runpf_pypower.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.pf.runpp_3ph.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.I0_from_V012": {
  "data": {
   "shadows": "pandapower.auxiliary.I0_from_V012"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.I1_from_V012": {
  "data": {
   "shadows": "pandapower.auxiliary.I1_from_V012"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.I2_from_V012": {
  "data": {
   "shadows": "pandapower.auxiliary.I2_from_V012"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.LoadflowNotConverged": {
  "data": {
   "shadows": "pandapower.LoadflowNotConverged"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.Not_implemented": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandapower.auxiliary.ppException"
   ]
  },
  "type": "class"
 },
 "pandapower.pf.runpp_3ph.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.S_from_VI_elementwise": {
  "data": {
   "shadows": "pandapower.auxiliary.S_from_VI_elementwise"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.V1_from_ppc": {
  "data": {
   "shadows": "pandapower.auxiliary.V1_from_ppc"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.V_from_I": {
  "data": {
   "shadows": "pandapower.auxiliary.V_from_I"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.X012_to_X0": {
  "data": {
   "shadows": "pandapower.auxiliary.X012_to_X0"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.X012_to_X2": {
  "data": {
   "shadows": "pandapower.auxiliary.X012_to_X2"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._add_ext_grid_sc_impedance": {
  "data": {
   "shadows": "pandapower.build_bus._add_ext_grid_sc_impedance"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._add_pf_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_pf_options"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._check_bus_index_and_print_warning_if_high": {
  "data": {
   "shadows": "pandapower.auxiliary._check_bus_index_and_print_warning_if_high"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._check_gen_index_and_print_warning_if_high": {
  "data": {
   "shadows": "pandapower.auxiliary._check_gen_index_and_print_warning_if_high"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._check_if_numba_is_installed": {
  "data": {
   "shadows": "pandapower.auxiliary._check_if_numba_is_installed"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._clean_up": {
  "data": {
   "shadows": "pandapower.auxiliary._clean_up"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._copy_results_ppci_to_ppc": {
  "data": {
   "shadows": "pandapower.results._copy_results_ppci_to_ppc"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._current_from_voltage_results": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "pandapower.auxiliary.I0_from_V012",
    "pandapower.auxiliary.I1_from_V012",
    "pandapower.auxiliary.I2_from_V012",
    "pandapower.auxiliary.combine_X012"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._extract_results_3ph": {
  "data": {
   "shadows": "pandapower.results._extract_results_3ph"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._get_elements": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._get_pf_variables_from_ppci": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "int",
    "numpy.exp",
    "numpy.flatnonzero",
    "numpy.pi",
    "pandapower.pypower.bustypes.bustypes",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.VG"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._get_y_bus": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._load_mapping": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.array",
    "numpy.vstack",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pf.runpp_3ph._get_elements",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._passed_runpp_parameters": {
  "data": {
   "shadows": "pandapower.run._passed_runpp_parameters"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._run_newton_raphson_pf": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph._store_results_from_pf_in_ppci": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._sum_by_group": {
  "data": {
   "shadows": "pandapower.auxiliary._sum_by_group"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.bustypes": {
  "data": {
   "shadows": "pandapower.pypower.bustypes.bustypes"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.combine_X012": {
  "data": {
   "shadows": "pandapower.auxiliary.combine_X012"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.init_results": {
  "data": {
   "shadows": "pandapower.results.init_results"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandapower.pf.runpp_3ph.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.pfsoln": {
  "data": {
   "shadows": "pandapower.pypower.pfsoln.pfsoln"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.phase_to_sequence": {
  "data": {
   "shadows": "pandapower.auxiliary.phase_to_sequence"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.ppException": {
  "data": {
   "shadows": "pandapower.auxiliary.ppException"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.runpp_3ph": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "locals",
    "numpy.abs",
    "numpy.array",
    "numpy.complex128",
    "numpy.concatenate",
    "numpy.divide",
    "numpy.imag",
    "numpy.matmul",
    "numpy.multiply",
    "numpy.ones",
    "numpy.real",
    "numpy.zeros",
    "pandapower.LoadflowNotConverged",
    "pandapower.auxiliary.I1_from_V012",
    "pandapower.auxiliary.S_from_VI_elementwise",
    "pandapower.auxiliary.V1_from_ppc",
    "pandapower.auxiliary.V_from_I",
    "pandapower.auxiliary.X012_to_X0",
    "pandapower.auxiliary.X012_to_X2",
    "pandapower.auxiliary._add_pf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
    "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
    "pandapower.auxiliary._check_if_numba_is_installed",
    "pandapower.auxiliary._clean_up",
    "pandapower.auxiliary.combine_X012",
    "pandapower.auxiliary.phase_to_sequence",
    "pandapower.auxiliary.sequence_to_phase",
    "pandapower.build_bus._add_ext_grid_sc_impedance",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf",
    "pandapower.pf.runpp_3ph.Not_implemented",
    "pandapower.pf.runpp_3ph._current_from_voltage_results",
    "pandapower.pf.runpp_3ph._get_pf_variables_from_ppci",
    "pandapower.pf.runpp_3ph._get_y_bus",
    "pandapower.pf.runpp_3ph._load_mapping",
    "pandapower.pf.runpp_3ph._store_results_from_pf_in_ppci",
    "pandapower.pypower.bustypes.bustypes",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.makeYbus.makeYbus",
    "pandapower.pypower.pfsoln.pfsoln",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.results._extract_results_3ph",
    "pandapower.results.init_results",
    "pandapower.run._passed_runpp_parameters",
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.pf.runpp_3ph.sequence_to_phase": {
  "data": {
   "shadows": "pandapower.auxiliary.sequence_to_phase"
  },
  "type": "import"
 },
 "pandapower.pf.runpp_3ph.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.plotting": {
  "data": {
   "symbols_in_volume": [
    "matplotlib.backend_bases.RendererBase",
    "matplotlib.backend_bases.RendererBase.new_gc",
    "pandapower.plotting.custom_new_gc",
    "pandapower.plotting.types"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.GC": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "matplotlib.backend_bases.GraphicsContextBase"
   ]
  },
  "type": "class"
 },
 "pandapower.plotting.GC.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.GraphicsContextBase": {
  "data": {
   "shadows": "matplotlib.backend_bases.GraphicsContextBase"
  },
  "type": "import"
 },
 "pandapower.plotting.RendererBase": {
  "data": {
   "shadows": "matplotlib.backend_bases.RendererBase"
  },
  "type": "import"
 },
 "pandapower.plotting.collections": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.collections.Affine2D": {
  "data": {
   "shadows": "matplotlib.transforms.Affine2D"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.Collection": {
  "data": {
   "shadows": "matplotlib.collections.Collection"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.CustomTextPath": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "matplotlib.textpath.TextPath"
   ]
  },
  "type": "class"
 },
 "pandapower.plotting.collections.CustomTextPath.__deepcopy__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandapower.plotting.collections.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.CustomTextPath.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "matplotlib.font_manager.FontProperties",
    "matplotlib.textpath.TextPath.__init__"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.FontProperties": {
  "data": {
   "shadows": "matplotlib.font_manager.FontProperties"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.LineCollection": {
  "data": {
   "shadows": "matplotlib.collections.LineCollection"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.PatchCollection": {
  "data": {
   "shadows": "matplotlib.collections.PatchCollection"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.PathPatch": {
  "data": {
   "shadows": "matplotlib.patches.PathPatch"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.TextPath": {
  "data": {
   "shadows": "matplotlib.textpath.TextPath"
  },
  "type": "import"
 },
 "pandapower.plotting.collections._create_complex_branch_collection": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "list",
    "matplotlib.collections.LineCollection",
    "matplotlib.collections.PatchCollection",
    "numpy.repeat",
    "patch_maker",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections._create_line2d_collection": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "list",
    "matplotlib.collections.LineCollection",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections._create_node_collection": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.collections.PatchCollection",
    "numpy.array",
    "pandapower.plotting.patch_makers.node_patches"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections._create_node_element_collection": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "list",
    "matplotlib.collections.LineCollection",
    "matplotlib.collections.PatchCollection",
    "numpy.pi",
    "numpy.repeat",
    "patch_maker",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections._rotate_dim2": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox._rotate_dim2"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.add_cmap_to_collection": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.ma.masked_invalid"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.add_collections_to_axes": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "list",
    "matplotlib.collections.Collection",
    "pandapower.plotting.collections.add_single_collection",
    "pandapower.plotting.collections.inspect",
    "pandapower.plotting.collections.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.add_single_collection": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "hasattr",
    "matplotlib.pyplot.colorbar",
    "pandapower.plotting.collections.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.coords_from_node_geodata": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.coords_from_node_geodata"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.create_annotation_collection": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "enumerate",
    "hasattr",
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.PathPatch",
    "pandapower.plotting.collections.CustomTextPath",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_bus_bus_switch_collection": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "matplotlib.collections.LineCollection",
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.Rectangle",
    "matplotlib.transforms.Affine2D",
    "numpy.allclose",
    "numpy.arctan2",
    "numpy.float64",
    "pandapower.plotting.collections.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_bus_collection": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "list",
    "pandapower.plotting.collections._create_node_collection",
    "pandapower.plotting.collections.add_cmap_to_collection",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_busbar_collection": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "cmap",
    "infofunc",
    "norm",
    "pandapower.plotting.collections.create_line_collection",
    "pandapower.plotting.collections.logger",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_ext_grid_collection": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "pandapower.plotting.collections._create_node_element_collection",
    "pandapower.plotting.patch_makers.ext_grid_patches",
    "pandapower.plotting.plotting_toolbox.get_index_array"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_gen_collection": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "numpy.pi",
    "pandapower.plotting.collections._create_node_element_collection",
    "pandapower.plotting.patch_makers.gen_patches",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_impedance_collection": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "pandapower.plotting.collections._create_line2d_collection",
    "pandapower.plotting.plotting_toolbox.coords_from_node_geodata",
    "pandapower.plotting.plotting_toolbox.get_index_array"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_line_collection": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "list",
    "numpy.isin",
    "pandapower.plotting.collections._create_line2d_collection",
    "pandapower.plotting.collections.add_cmap_to_collection",
    "pandapower.plotting.collections.logger",
    "pandapower.plotting.plotting_toolbox.coords_from_node_geodata",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_line_switch_collection": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "abs",
    "len",
    "list",
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.Rectangle",
    "matplotlib.transforms.Affine2D",
    "numpy.arctan2",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.zeros",
    "pandapower.plotting.collections.logger",
    "pandapower.plotting.plotting_toolbox.position_on_busbar"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_load_collection": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "numpy.pi",
    "pandapower.plotting.collections._create_node_element_collection",
    "pandapower.plotting.patch_makers.load_patches",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_sgen_collection": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "numpy.pi",
    "pandapower.plotting.collections._create_node_element_collection",
    "pandapower.plotting.patch_makers.sgen_patches",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_storage_collection": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "infofunc",
    "len",
    "numpy.pi",
    "pandapower.plotting.collections._create_node_element_collection",
    "pandapower.plotting.patch_makers.storage_patches",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo3w_collection": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "cmap",
    "enumerate",
    "infofunc",
    "len",
    "list",
    "matplotlib.collections.LineCollection",
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.Circle",
    "norm",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.linalg.norm",
    "numpy.ma.masked_invalid",
    "numpy.pi",
    "numpy.repeat",
    "pandapower.plotting.plotting_toolbox._rotate_dim2",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo3w_connection_collection": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "infofunc",
    "itertools.combinations",
    "list",
    "matplotlib.collections.LineCollection",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo_collection": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "cmap",
    "infofunc",
    "len",
    "norm",
    "numpy.repeat",
    "pandapower.plotting.collections._create_complex_branch_collection",
    "pandapower.plotting.collections.add_cmap_to_collection",
    "pandapower.plotting.patch_makers.trafo_patches",
    "pandapower.plotting.plotting_toolbox.coords_from_node_geodata",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo_connection_collection": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "infofunc",
    "list",
    "pandapower.plotting.collections._create_line2d_collection",
    "pandapower.plotting.collections.add_cmap_to_collection",
    "pandapower.plotting.plotting_toolbox.get_index_array",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.draw_collections": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "any",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.subplots_adjust",
    "pandapower.plotting.collections.add_collections_to_axes"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.collections.ext_grid_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.ext_grid_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.gen_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.gen_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.get_index_array": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.get_index_array"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.isnull": {
  "data": {
   "shadows": "pandas.isnull"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.load_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.load_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandapower.plotting.collections.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.node_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.node_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.position_on_busbar": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.position_on_busbar"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.sgen_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.sgen_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.storage_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.storage_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.collections.trafo_patches": {
  "data": {
   "shadows": "pandapower.plotting.patch_makers.trafo_patches"
  },
  "type": "import"
 },
 "pandapower.plotting.colormaps": {
  "data": {},
  "type": "module"
 },
 "pandapower.plotting.colormaps.BoundaryNorm": {
  "data": {
   "shadows": "matplotlib.colors.BoundaryNorm"
  },
  "type": "import"
 },
 "pandapower.plotting.colormaps.LinearSegmentedColormap": {
  "data": {
   "shadows": "matplotlib.colors.LinearSegmentedColormap"
  },
  "type": "import"
 },
 "pandapower.plotting.colormaps.ListedColormap": {
  "data": {
   "shadows": "matplotlib.colors.ListedColormap"
  },
  "type": "import"
 },
 "pandapower.plotting.colormaps.LogNorm": {
  "data": {
   "shadows": "matplotlib.colors.LogNorm"
  },
  "type": "import"
 },
 "pandapower.plotting.colormaps.Normalize": {
  "data": {
   "shadows": "matplotlib.colors.Normalize"
  },
  "type": "import"
 },
 "pandapower.plotting.colormaps.cmap_continuous": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "matplotlib.colors.Normalize"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.colormaps.cmap_discrete": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.colors.BoundaryNorm",
    "matplotlib.colors.ListedColormap"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.colormaps.cmap_logarithmic": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "list",
    "matplotlib.colors.LinearSegmentedColormap.from_list",
    "matplotlib.colors.LogNorm",
    "numpy.arange",
    "numpy.log",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.custom_new_gc": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandapower.plotting.GC"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.generic_geodata": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.generic_geodata.IGRAPH_INSTALLED": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.plotting.generic_geodata.build_igraph_from_pp": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ImportError",
    "dict",
    "len",
    "list",
    "pandapower.plotting.generic_geodata.igraph",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.coords_from_igraph": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.coords_from_nxgraph": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "int",
    "list",
    "networkx.drawing.nx_agraph.graphviz_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.plotting.generic_geodata.create_generic_coordinates": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "pandapower.plotting.generic_geodata.IGRAPH_INSTALLED",
    "pandapower.plotting.generic_geodata.build_igraph_from_pp",
    "pandapower.plotting.generic_geodata.coords_from_igraph",
    "pandapower.plotting.generic_geodata.coords_from_nxgraph",
    "pandapower.plotting.generic_geodata.copy",
    "pandapower.plotting.generic_geodata.logger",
    "pandapower.topology.create_nxgraph",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.fuse_geodata": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "pandapower.topology.connected_components",
    "pandapower.topology.create_nxgraph",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.ig": {
  "data": {
   "shadows": "igraph"
  },
  "type": "import"
 },
 "pandapower.plotting.generic_geodata.igraph": {
  "data": {
   "shadows": "igraph"
  },
  "type": "import"
 },
 "pandapower.plotting.generic_geodata.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pandapower.plotting.generic_geodata.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.generic_geodata.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pandapower.plotting.generic_geodata.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.plotting.generic_geodata.top": {
  "data": {
   "shadows": "pandapower.topology"
  },
  "type": "import"
 },
 "pandapower.plotting.geo": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.geo.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "pandapower.plotting.geo.GeoSeries": {
  "data": {
   "shadows": "geopandas.GeoSeries"
  },
  "type": "import"
 },
 "pandapower.plotting.geo.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "pandapower.plotting.geo.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "pandapower.plotting.geo.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "pandapower.plotting.geo._branch_geometries_from_geodata": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "fiona.crs.from_epsg",
    "geopandas.GeoDataFrame",
    "geopandas.GeoSeries",
    "shapely.geometry.LineString"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo._convert_xy_epsg": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyproj.Proj",
    "pyproj.transform"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo._node_geometries_from_geodata": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fiona.crs.from_epsg",
    "geopandas.GeoDataFrame",
    "shapely.geometry.Point"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo._transform_branch_geometry_to_coords": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo._transform_node_geometry_to_geodata": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandapower.plotting.geo.convert_epsg_bus_geodata": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "pandapower.plotting.geo._convert_xy_epsg"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo.convert_geodata_to_gis": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandapower.plotting.geo._branch_geometries_from_geodata",
    "pandapower.plotting.geo._node_geometries_from_geodata"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo.convert_gis_to_geodata": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandapower.plotting.geo._transform_branch_geometry_to_coords",
    "pandapower.plotting.geo._transform_node_geometry_to_geodata"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.geo.from_epsg": {
  "data": {
   "shadows": "fiona.crs.from_epsg"
  },
  "type": "import"
 },
 "pandapower.plotting.geo.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.patch_makers.Arc": {
  "data": {
   "shadows": "matplotlib.patches.Arc"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.Ellipse": {
  "data": {
   "shadows": "matplotlib.patches.Ellipse"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.RegularPolygon": {
  "data": {
   "shadows": "matplotlib.patches.RegularPolygon"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers._rotate_dim2": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox._rotate_dim2"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.ellipse_patches": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.patches.Ellipse",
    "pandapower.plotting.plotting_toolbox.get_angle_list",
    "pandapower.plotting.plotting_toolbox.get_color_list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.ext_grid_patches": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "matplotlib.patches.Rectangle",
    "numpy.array",
    "numpy.pi",
    "pandapower.plotting.plotting_toolbox._rotate_dim2",
    "pandapower.plotting.plotting_toolbox.get_angle_list",
    "pandapower.plotting.plotting_toolbox.get_color_list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.gen_patches": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "matplotlib.patches.Arc",
    "matplotlib.patches.Circle",
    "numpy.array",
    "pandapower.plotting.plotting_toolbox._rotate_dim2",
    "pandapower.plotting.plotting_toolbox.get_angle_list",
    "pandapower.plotting.plotting_toolbox.get_color_list",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.get_angle_list": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.get_angle_list"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.get_color_list": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.get_color_list"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.get_linewidth_list": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.get_linewidth_list"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.load_patches": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "matplotlib.patches.RegularPolygon",
    "numpy.array",
    "pandapower.plotting.plotting_toolbox._rotate_dim2",
    "pandapower.plotting.plotting_toolbox.get_angle_list",
    "pandapower.plotting.plotting_toolbox.get_color_list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.plotting.patch_makers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.node_patches": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "pandapower.plotting.patch_makers.ellipse_patches",
    "pandapower.plotting.patch_makers.logger",
    "pandapower.plotting.patch_makers.polygon_patches",
    "pandapower.plotting.patch_makers.rectangle_patches",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.patch_makers.polygon_patches": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.patches.RegularPolygon",
    "pandapower.plotting.plotting_toolbox.get_color_list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.rectangle_patches": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.patches.Rectangle",
    "pandapower.plotting.plotting_toolbox.get_color_list",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.sgen_patches": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "matplotlib.patches.Circle",
    "matplotlib.patches.RegularPolygon",
    "numpy.array",
    "numpy.pi",
    "pandapower.plotting.plotting_toolbox._rotate_dim2",
    "pandapower.plotting.plotting_toolbox.get_color_list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.storage_patches": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.array",
    "pandapower.plotting.plotting_toolbox._rotate_dim2"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.patch_makers.trafo_patches": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "matplotlib.patches.Circle",
    "numpy.all",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "pandapower.plotting.plotting_toolbox.get_color_list",
    "pandapower.plotting.plotting_toolbox.get_linewidth_list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly": {
  "data": {},
  "type": "module"
 },
 "pandapower.plotting.plotly.get_colors": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotly.get_colors._to_plotly_color": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "matplotlib.colors.to_rgb",
    "matplotlib.colors.to_rgba"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors._to_plotly_palette": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "matplotlib.colors.to_rgba"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.cm": {
  "data": {
   "shadows": "matplotlib.cm"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.get_colors.get_plotly_cmap": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cmap",
    "matplotlib.cm.get_cmap",
    "matplotlib.colors.Normalize",
    "norm"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.get_plotly_color": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.colors.to_rgba",
    "pandapower.plotting.plotly.get_colors._to_plotly_color"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.get_plotly_color_palette": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "hsv",
    "matplotlib.pyplot.get_cmap",
    "numpy.linspace",
    "pandapower.plotting.plotly.get_colors._to_plotly_palette",
    "pandapower.plotting.plotly.get_colors.seaborn",
    "pandapower.plotting.plotly.get_colors.sys"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.get_colors.mplc": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.get_colors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.get_colors.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.get_colors.seaborn": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.get_colors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotly.mapbox_plot.GeocoderTimedOut": {
  "data": {
   "shadows": "geopy.exc.GeocoderTimedOut"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.MapboxTokenMissing": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.auxiliary.ppException"
   ]
  },
  "type": "class"
 },
 "pandapower.plotting.plotly.mapbox_plot.Nominatim": {
  "data": {
   "shadows": "geopy.geocoders.Nominatim"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.Proj": {
  "data": {
   "shadows": "pyproj.Proj"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot._get_mapbox_token": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "open",
    "pandapower.plotting.plotly.mapbox_plot.os",
    "pandapower.pp_dir"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot._on_map_test": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ImportError",
    "geopy.exc.GeocoderTimedOut",
    "geopy.geocoders.Nominatim",
    "pandapower.plotting.plotly.mapbox_plot.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot.geo_data_to_latlong": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "pandapower.plotting.plotly.mapbox_plot.logger",
    "pyproj.Proj",
    "pyproj.transform"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.mapbox_plot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.ppException": {
  "data": {
   "shadows": "pandapower.auxiliary.ppException"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.mapbox_plot.set_mapbox_token": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "open",
    "pandapower.plotting.plotly.mapbox_plot.os",
    "pandapower.pp_dir"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot.transform": {
  "data": {
   "shadows": "pyproj.transform"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotly.pf_res_plotly.create_bus_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_bus_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.create_generic_coordinates": {
  "data": {
   "shadows": "pandapower.plotting.generic_geodata.create_generic_coordinates"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.create_line_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_line_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.create_trafo_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_trafo_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.draw_traces": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.draw_traces"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.pf_res_plotly.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "geo_data_to_latlong",
    "len",
    "pandapower.plotting.generic_geodata.create_generic_coordinates",
    "pandapower.plotting.plotly.pf_res_plotly.logger",
    "pandapower.plotting.plotly.traces.create_bus_trace",
    "pandapower.plotting.plotly.traces.create_line_trace",
    "pandapower.plotting.plotly.traces.create_trafo_trace",
    "pandapower.plotting.plotly.traces.draw_traces",
    "pandapower.plotting.plotly.traces.version_check",
    "pandapower.run.runpp",
    "pandas.DataFrame",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.pf_res_plotly.runpp": {
  "data": {
   "shadows": "pandapower.run.runpp"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.pf_res_plotly.version_check": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.version_check"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotly.simple_plotly.create_bus_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_bus_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.create_generic_coordinates": {
  "data": {
   "shadows": "pandapower.plotting.generic_geodata.create_generic_coordinates"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.create_line_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_line_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.create_trafo_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_trafo_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.draw_traces": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.draw_traces"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.get_hoverinfo": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "list",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.simple_plotly.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.simple_plotly.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.simple_plotly.simple_plotly": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "geo_data_to_latlong",
    "len",
    "pandapower.plotting.generic_geodata.create_generic_coordinates",
    "pandapower.plotting.plotly.simple_plotly.get_hoverinfo",
    "pandapower.plotting.plotly.simple_plotly.logger",
    "pandapower.plotting.plotly.traces.create_bus_trace",
    "pandapower.plotting.plotly.traces.create_line_trace",
    "pandapower.plotting.plotly.traces.create_trafo_trace",
    "pandapower.plotting.plotly.traces.draw_traces",
    "pandapower.plotting.plotly.traces.version_check",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.simple_plotly.version_check": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.version_check"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.plotting.plotly.traces.logger",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotly.traces.ColorBar": {
  "data": {
   "shadows": "plotly.graph_objs.scatter.marker.ColorBar"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.Figure": {
  "data": {
   "shadows": "plotly.graph_objs.Figure"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.Layout": {
  "data": {
   "shadows": "plotly.graph_objs.Layout"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.Line": {
  "data": {
   "shadows": "plotly.graph_objs.scatter.Line"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.MapboxTokenMissing": {
  "data": {
   "shadows": "pandapower.plotting.plotly.mapbox_plot.MapboxTokenMissing"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.Marker": {
  "data": {
   "shadows": "plotly.graph_objs.scatter.Marker"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.XAxis": {
  "data": {
   "shadows": "plotly.graph_objs.layout.XAxis"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.YAxis": {
  "data": {
   "shadows": "plotly.graph_objs.layout.YAxis"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces._get_line_geodata_plotly": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces._get_mapbox_token": {
  "data": {
   "shadows": "pandapower.plotting.plotly.mapbox_plot._get_mapbox_token"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces._in_ipynb": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "IPython.get_ipython"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces._on_map_test": {
  "data": {
   "shadows": "pandapower.plotting.plotly.mapbox_plot._on_map_test"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.create_bus_trace": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "dict",
    "isinstance",
    "len",
    "list",
    "pandapower.plotting.plotly.get_colors.get_plotly_color",
    "pandapower.plotting.plotly.traces.logger",
    "pandas.Series",
    "plotly.graph_objs.scatter.marker.ColorBar",
    "plotly.graph_objs.scattermapbox.Marker",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_edge_center_trace": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandapower.plotting.plotly.traces.get_line_neutral",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_line_trace": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "KeyError",
    "UserWarning",
    "collections.abc.Iterable",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "pandapower.plotting.plotly.get_colors.get_plotly_cmap",
    "pandapower.plotting.plotly.get_colors.get_plotly_color",
    "pandapower.plotting.plotly.traces._get_line_geodata_plotly",
    "pandapower.plotting.plotly.traces.create_edge_center_trace",
    "pandapower.plotting.plotly.traces.logger",
    "pandas.Series",
    "plotly.graph_objs.scatter.marker.ColorBar",
    "plotly.graph_objs.scattermapbox.Line",
    "plotly.graph_objs.scattermapbox.Marker",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_trafo_trace": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "pandapower.plotting.plotly.get_colors.get_plotly_cmap",
    "pandapower.plotting.plotly.get_colors.get_plotly_color",
    "pandapower.plotting.plotly.traces.create_edge_center_trace",
    "pandapower.plotting.plotly.traces.logger",
    "pandas.Series",
    "plotly.graph_objs.scattermapbox.Line"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.draw_traces": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "isinstance",
    "max",
    "numpy.array",
    "pandapower.plotting.plotly.mapbox_plot.MapboxTokenMissing",
    "pandapower.plotting.plotly.mapbox_plot._get_mapbox_token",
    "pandapower.plotting.plotly.mapbox_plot._on_map_test",
    "pandapower.plotting.plotly.traces._in_ipynb",
    "pandapower.plotting.plotly.traces.logger",
    "pandas.Series",
    "plotly.graph_objs.Figure",
    "plotly.graph_objs.Layout",
    "plotly.graph_objs.layout.XAxis",
    "plotly.graph_objs.layout.YAxis",
    "plotly.graph_objs.scattermapbox.Line",
    "plotly.graph_objs.scattermapbox.Marker",
    "plotly.offline.init_notebook_mode",
    "plotly.offline.plot"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.get_line_neutral": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "pandapower.plotting.plotly.traces.sum_line_length",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.get_plotly_cmap": {
  "data": {
   "shadows": "pandapower.plotting.plotly.get_colors.get_plotly_cmap"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.get_plotly_color": {
  "data": {
   "shadows": "pandapower.plotting.plotly.get_colors.get_plotly_color"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.init_notebook_mode": {
  "data": {
   "shadows": "plotly.offline.init_notebook_mode"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.traces.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.plot": {
  "data": {
   "shadows": "plotly.offline.plot"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.plotly_version": {
  "data": {
   "shadows": "plotly.__version__"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.scmLine": {
  "data": {
   "shadows": "plotly.graph_objs.scattermapbox.Line"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.scmMarker": {
  "data": {
   "shadows": "plotly.graph_objs.scattermapbox.Marker"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.sum_line_length": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "map",
    "pandapower.plotting.plotly.traces.math",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.traces.version_check": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "UserWarning",
    "globals",
    "locals",
    "packaging.version.parse",
    "plotly.__version__"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.vlevel_plotly": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "dict",
    "len",
    "pandapower.networks.mv_oberrhein",
    "pandapower.plotting.plotly.get_colors.get_plotly_color_palette",
    "pandapower.plotting.plotly.traces.create_bus_trace",
    "pandapower.plotting.plotly.traces.create_line_trace",
    "pandapower.plotting.plotly.vlevel_plotly.bus_size",
    "pandapower.plotting.plotly.vlevel_plotly.bus_trace_vlev",
    "pandapower.plotting.plotly.vlevel_plotly.bus_traces",
    "pandapower.plotting.plotly.vlevel_plotly.colors",
    "pandapower.plotting.plotly.vlevel_plotly.colors_dict",
    "pandapower.plotting.plotly.vlevel_plotly.graph",
    "pandapower.plotting.plotly.vlevel_plotly.line_trace_vlev",
    "pandapower.plotting.plotly.vlevel_plotly.line_traces",
    "pandapower.plotting.plotly.vlevel_plotly.line_width",
    "pandapower.plotting.plotly.vlevel_plotly.logger",
    "pandapower.plotting.plotly.vlevel_plotly.net",
    "pandapower.plotting.plotly.vlevel_plotly.nvlevs",
    "pandapower.plotting.plotly.vlevel_plotly.respect_switches",
    "pandapower.plotting.plotly.vlevel_plotly.use_line_geodata",
    "pandapower.plotting.plotly.vlevel_plotly.vlev_bus_dict",
    "pandapower.plotting.plotly.vlevel_plotly.vlev_buses",
    "pandapower.plotting.plotly.vlevel_plotly.vlev_color",
    "pandapower.plotting.plotly.vlevel_plotly.vlev_lines",
    "pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly",
    "pandapower.plotting.plotly.vlevel_plotly.vn_kv",
    "pandapower.runpp",
    "pandapower.topology.connected_components",
    "pandapower.topology.create_nxgraph",
    "pplog.getLogger",
    "print",
    "str",
    "zip"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotly.vlevel_plotly.bus_size": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.bus_trace_vlev": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.bus_traces": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.colors": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.colors_dict": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.connected_components": {
  "data": {
   "shadows": "pandapower.topology.connected_components"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.create_bus_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_bus_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.create_generic_coordinates": {
  "data": {
   "shadows": "pandapower.plotting.generic_geodata.create_generic_coordinates"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.create_line_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_line_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.create_nxgraph": {
  "data": {
   "shadows": "pandapower.topology.create_nxgraph"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.create_trafo_trace": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.create_trafo_trace"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.draw_traces": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.draw_traces"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.geo_data_to_latlong": {
  "data": {
   "shadows": "pandapower.plotting.plotly.mapbox_plot.geo_data_to_latlong"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.get_plotly_color_palette": {
  "data": {
   "shadows": "pandapower.plotting.plotly.get_colors.get_plotly_color_palette"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.graph": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.line_trace_vlev": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.line_traces": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.line_width": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.mv_oberrhein": {
  "data": {
   "shadows": "pandapower.networks.mv_oberrhein"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.net": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.nvlevs": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.respect_switches": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.runpp": {
  "data": {
   "shadows": "pandapower.runpp"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.simple_plotly": {
  "data": {
   "shadows": "pandapower.plotting.plotly.simple_plotly"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.use_line_geodata": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.version_check": {
  "data": {
   "shadows": "pandapower.plotting.plotly.traces.version_check"
  },
  "type": "import"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vlev_bus_dict": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vlev_buses": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vlev_color": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vlev_lines": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandapower.plotting.generic_geodata.create_generic_coordinates",
    "pandapower.plotting.plotly.get_colors.get_plotly_color_palette",
    "pandapower.plotting.plotly.mapbox_plot.geo_data_to_latlong",
    "pandapower.plotting.plotly.traces.create_bus_trace",
    "pandapower.plotting.plotly.traces.create_line_trace",
    "pandapower.plotting.plotly.traces.create_trafo_trace",
    "pandapower.plotting.plotly.traces.draw_traces",
    "pandapower.plotting.plotly.traces.version_check",
    "pandapower.plotting.plotly.vlevel_plotly.logger",
    "pandapower.topology.connected_components",
    "pandapower.topology.create_nxgraph",
    "pandas.DataFrame",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vn_kv": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "pandapower.plotting.plotting_toolbox": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.plotting_toolbox._rotate_dim2": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.coords_from_node_geodata": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.isin",
    "pandapower.plotting.plotting_toolbox.logger",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_angle_list": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandapower.plotting.plotting_toolbox.get_list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_collection_sizes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_color_list": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "all",
    "float",
    "isinstance",
    "len",
    "pandapower.plotting.plotting_toolbox.get_list",
    "pandapower.plotting.plotting_toolbox.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_index_array": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.array",
    "numpy.copy",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_linewidth_list": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandapower.plotting.plotting_toolbox.get_list"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_list": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "pandapower.plotting.plotting_toolbox.logger",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandapower.plotting.plotting_toolbox.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.plotting_toolbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.plotting_toolbox.position_on_busbar": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "len",
    "numpy.NaN",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.powerflow_results": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "matplotlib.pyplot.subplots",
    "pandapower.networks.mv_oberrhein",
    "pandapower.plotting.powerflow_results.c",
    "pandapower.plotting.powerflow_results.feeders",
    "pandapower.plotting.powerflow_results.l",
    "pandapower.plotting.powerflow_results.lines_with_open_switches",
    "pandapower.plotting.powerflow_results.mg",
    "pandapower.plotting.powerflow_results.net",
    "pandapower.plotting.powerflow_results.plotting",
    "pandapower.plotting.powerflow_results.voltage_profile_to_bus_geodata",
    "pandapower.runpp",
    "pandapower.topology.connected_components",
    "pandapower.topology.create_nxgraph",
    "set",
    "zip"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.powerflow_results.c": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.feeders": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.h": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.l": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.lines_with_open_switches": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.mg": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.net": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "pandapower.plotting.powerflow_results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.plot_loading": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "list",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.setp",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.powerflow_results.plot_voltage_profile": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "any",
    "itertools.combinations",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "numpy.sqrt",
    "pandapower.topology.calc_distance_to_bus",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.powerflow_results.plotting": {
  "data": {
   "shadows": "plotting"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.top": {
  "data": {
   "shadows": "pandapower.topology"
  },
  "type": "import"
 },
 "pandapower.plotting.powerflow_results.voltage_profile_to_bus_geodata": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "pandapower.topology.create_nxgraph"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.simple_plot": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.networks.case145",
    "pandapower.plotting.simple_plot.net",
    "pandapower.plotting.simple_plot.simple_plot",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.plotting.simple_plot.create_bus_bus_switch_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_bus_bus_switch_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_bus_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_bus_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_generic_coordinates": {
  "data": {
   "shadows": "pandapower.plotting.generic_geodata.create_generic_coordinates"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_line_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_line_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_line_switch_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_line_switch_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_load_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_load_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_sgen_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_sgen_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_trafo3w_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_trafo3w_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.create_trafo_collection": {
  "data": {
   "shadows": "pandapower.plotting.collections.create_trafo_collection"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.draw_collections": {
  "data": {
   "shadows": "pandapower.plotting.collections.draw_collections"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.get_collection_sizes": {
  "data": {
   "shadows": "pandapower.plotting.plotting_toolbox.get_collection_sizes"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.plotting.simple_plot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.net": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "pandapower.plotting.simple_plot.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandapower.plotting.simple_plot.simple_plot": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.show",
    "pandapower.plotting.collections.create_bus_bus_switch_collection",
    "pandapower.plotting.collections.create_bus_collection",
    "pandapower.plotting.collections.create_line_collection",
    "pandapower.plotting.collections.create_line_switch_collection",
    "pandapower.plotting.collections.create_load_collection",
    "pandapower.plotting.collections.create_sgen_collection",
    "pandapower.plotting.collections.create_trafo3w_collection",
    "pandapower.plotting.collections.create_trafo_collection",
    "pandapower.plotting.collections.draw_collections",
    "pandapower.plotting.generic_geodata.create_generic_coordinates",
    "pandapower.plotting.plotting_toolbox.get_collection_sizes",
    "pandapower.plotting.simple_plot.logger",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.to_html": {
  "data": {
   "shadows": "pandapower.plotting.to_html.to_html"
  },
  "type": "import"
 },
 "pandapower.plotting.to_html.Raw": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandapower.plotting.to_html.Raw.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandapower.plotting.to_html.Tag": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandapower.plotting.to_html.Tag.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "cgi.escape",
    "isinstance",
    "pandapower.plotting.to_html.Raw",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.to_html.Tag.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pandapower.plotting.to_html._net_to_graphjs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "id",
    "int",
    "itertools.combinations",
    "list",
    "pandapower.plotting.to_html.json",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.to_html._net_to_html": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "BODY",
    "DIV",
    "H2",
    "HEAD",
    "HTML",
    "SCRIPT",
    "STYLE",
    "TABLE",
    "TR",
    "getattr",
    "map",
    "pandapower.plotting.to_html.Raw",
    "pandapower.plotting.to_html.Tag",
    "pandapower.plotting.to_html._net_to_graphjs"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.to_html.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandapower.plotting.to_html.escape": {
  "data": {
   "shadows": "cgi.escape"
  },
  "type": "import"
 },
 "pandapower.plotting.to_html.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandapower.plotting.to_html.to_html": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception",
    "open",
    "pandapower.plotting.to_html._net_to_html"
   ]
  },
  "type": "function"
 },
 "pandapower.plotting.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "pandapower.pp_dir": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pandapower.pypower": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower._compat": {
  "data": {
   "symbols_in_volume": [
    "pandapower.pypower._compat.sys"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower._compat.PY2": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandapower.pypower._compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.pypower.add_userfcn": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.add_userfcn.add_userfcn": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "range",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.add_userfcn.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.bustypes.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.PQ": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PQ"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.PV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PV"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.bustypes": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.PQ",
    "pandapower.pypower.idx_bus.PV",
    "pandapower.pypower.idx_bus.REF"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.bustypes.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.bustypes.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.d2AIbr_dV2": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.d2AIbr_dV2.d2AIbr_dV2": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "pandapower.pypower.d2Ibr_dV2.d2Ibr_dV2",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.d2AIbr_dV2.d2Ibr_dV2": {
  "data": {
   "shadows": "pandapower.pypower.d2Ibr_dV2.d2Ibr_dV2"
  },
  "type": "import"
 },
 "pandapower.pypower.d2AIbr_dV2.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.d2ASbr_dV2": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.d2ASbr_dV2.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.d2ASbr_dV2.d2ASbr_dV2": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "pandapower.pypower.d2Sbr_dV2.d2Sbr_dV2",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.d2ASbr_dV2.d2Sbr_dV2": {
  "data": {
   "shadows": "pandapower.pypower.d2Sbr_dV2.d2Sbr_dV2"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Ibr_dV2": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.d2Ibr_dV2.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Ibr_dV2.d2Ibr_dV2": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.arange",
    "numpy.ones",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.d2Ibr_dV2.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Ibr_dV2.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbr_dV2": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.d2Sbr_dV2.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbr_dV2.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbr_dV2.d2Sbr_dV2": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.conj",
    "numpy.ones",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.d2Sbr_dV2.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbus_dV2": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.d2Sbus_dV2.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbus_dV2.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbus_dV2.d2Sbus_dV2": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.arange",
    "numpy.conj",
    "numpy.ones",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.d2Sbus_dV2.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.d2Sbus_dV2.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dAbr_dV": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.dAbr_dV.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dAbr_dV.dAbr_dV": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dIbr_dV": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.dIbr_dV.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "pandapower.pypower.dIbr_dV.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dIbr_dV.dIbr_dV": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.asarray",
    "numpy.asmatrix",
    "numpy.diag",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dIbr_dV.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "pandapower.pypower.dIbr_dV.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pypower.dIbr_dV.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.dSbr_dV.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.asmatrix": {
  "data": {
   "shadows": "numpy.asmatrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.dSbr_dV": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs",
    "complex",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.asmatrix",
    "numpy.conj",
    "numpy.diag",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dSbr_dV.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbr_dV.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbus_dV": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.dSbus_dV.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbus_dV.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbus_dV.dSbus_dV": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.pypower.dSbus_dV.dSbus_dV_dense",
    "pandapower.pypower.dSbus_dV.dSbus_dV_sparse",
    "scipy.sparse.issparse"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dSbus_dV.dSbus_dV_dense": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "abs",
    "numpy.asarray",
    "numpy.conj",
    "numpy.diag"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dSbus_dV.dSbus_dV_sparse": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abs",
    "len",
    "numpy.conj",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dSbus_dV.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbus_dV.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pypower.dSbus_dV.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.dcopf_solver.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.LAM_P": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.LAM_P"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.LAM_Q": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.LAM_Q"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_SF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_SF"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_ST": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_ST"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.MU_VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.POLYNOMIAL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.POLYNOMIAL"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.c_": {
  "data": {
   "shadows": "numpy.c_"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.dcopf_solver": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "UserWarning",
    "abs",
    "copy.deepcopy",
    "int",
    "len",
    "max",
    "numpy.Inf",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.diag",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.isnan",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.MU_SF",
    "pandapower.pypower.idx_brch.MU_ST",
    "pandapower.pypower.idx_brch.PF",
    "pandapower.pypower.idx_brch.PT",
    "pandapower.pypower.idx_brch.QF",
    "pandapower.pypower.idx_brch.QT",
    "pandapower.pypower.idx_brch.RATE_A",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.LAM_P",
    "pandapower.pypower.idx_bus.LAM_Q",
    "pandapower.pypower.idx_bus.MU_VMAX",
    "pandapower.pypower.idx_bus.MU_VMIN",
    "pandapower.pypower.idx_bus.REF",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_cost.POLYNOMIAL",
    "pandapower.pypower.idx_cost.PW_LINEAR",
    "pandapower.pypower.idx_gen.MU_PMAX",
    "pandapower.pypower.idx_gen.MU_PMIN",
    "pandapower.pypower.idx_gen.MU_QMAX",
    "pandapower.pypower.idx_gen.MU_QMIN",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.qps_pypower.qps_pypower",
    "pandapower.pypower.util.have_fcn",
    "pandapower.pypower.util.sub2ind",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.vstack",
    "sum",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dcopf_solver.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.have_fcn": {
  "data": {
   "shadows": "pandapower.pypower.util.have_fcn"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.qps_pypower": {
  "data": {
   "shadows": "pandapower.pypower.qps_pypower.qps_pypower"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.sub2ind": {
  "data": {
   "shadows": "pandapower.pypower.util.sub2ind"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.pypower.dcopf_solver.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.dcpf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.dcpf.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.dcpf.copy": {
  "data": {
   "shadows": "numpy.copy"
  },
  "type": "import"
 },
 "pandapower.pypower.dcpf.dcpf": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.copy",
    "numpy.r_",
    "numpy.real",
    "numpy.transpose",
    "scipy.sparse.linalg.spsolve"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.dcpf.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.dcpf.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pypower.dcpf.spsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.spsolve"
  },
  "type": "import"
 },
 "pandapower.pypower.dcpf.transpose": {
  "data": {
   "shadows": "numpy.transpose"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.fdpf.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.angle": {
  "data": {
   "shadows": "numpy.angle"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.fdpf": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abs",
    "numpy.Inf",
    "numpy.angle",
    "numpy.array",
    "numpy.conj",
    "numpy.exp",
    "numpy.linalg.norm",
    "numpy.r_",
    "pandapower.pypower.fdpf.sys",
    "pandapower.pypower.ppoption.ppoption",
    "scipy.sparse.linalg.splu",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.fdpf.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.ppoption": {
  "data": {
   "shadows": "pandapower.pypower.ppoption.ppoption"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.splu": {
  "data": {
   "shadows": "scipy.sparse.linalg.splu"
  },
  "type": "import"
 },
 "pandapower.pypower.fdpf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.pypower.gausspf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.gausspf.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.gausspf.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.gausspf.gausspf": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abs",
    "len",
    "list",
    "numpy.Inf",
    "numpy.conj",
    "numpy.linalg.norm",
    "numpy.r_",
    "pandapower.pypower.gausspf.sys",
    "pandapower.pypower.ppoption.ppoption",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.gausspf.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "pandapower.pypower.gausspf.ppoption": {
  "data": {
   "shadows": "pandapower.pypower.ppoption.ppoption"
  },
  "type": "import"
 },
 "pandapower.pypower.gausspf.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.gausspf.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.hasPQcap.PC1": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PC1"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.PC2": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PC2"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.QC1MAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC1MAX"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.QC1MIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC1MIN"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.QC2MAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC2MAX"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.QC2MIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC2MIN"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.hasPQcap": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bool",
    "numpy.any",
    "numpy.nonzero",
    "numpy.zeros",
    "pandapower.pypower.idx_gen.PC1",
    "pandapower.pypower.idx_gen.PC2",
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.QC1MAX",
    "pandapower.pypower.idx_gen.QC1MIN",
    "pandapower.pypower.idx_gen.QC2MAX",
    "pandapower.pypower.idx_gen.QC2MIN",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.hasPQcap.nonzero": {
  "data": {
   "shadows": "numpy.nonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.hasPQcap.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.idx_area": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.idx_area.AREA_I": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_area.PRICE_REF_BUS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.idx_brch.ANGMAX": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.ANGMIN": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.BR_B": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.BR_R": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.BR_R_ASYM": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.BR_STATUS": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.BR_X": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.BR_X_ASYM": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.F_BUS": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.MU_ANGMAX": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.MU_ANGMIN": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.MU_SF": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.MU_ST": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.PF": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.PT": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.QF": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.QT": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.RATE_A": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.RATE_B": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.RATE_C": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.SHIFT": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.TAP": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.T_BUS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_brch.branch_cols": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.idx_bus.BASE_KV": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.BS": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.BUS_AREA": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.BUS_I": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.BUS_TYPE": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.CID": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.CZD": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.GS": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.LAM_P": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.LAM_Q": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.MU_VMAX": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.MU_VMIN": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.NONE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.PD": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.PQ": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.PV": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.QD": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.REF": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.VA": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.VM": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.VMAX": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.VMIN": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.ZONE": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_bus.bus_cols": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.idx_cost.COST": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost.MODEL": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost.NCOST": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost.POLYNOMIAL": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost.PW_LINEAR": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost.SHUTDOWN": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_cost.STARTUP": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.idx_gen.APF": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.GEN_BUS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.GEN_STATUS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.MBASE": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.MU_PMAX": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.MU_PMIN": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.MU_QMAX": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.MU_QMIN": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.PC1": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.PC2": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.PG": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.PMAX": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.PMIN": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QC1MAX": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QC1MIN": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QC2MAX": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QC2MIN": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QG": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QMAX": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.QMIN": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.RAMP_10": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.RAMP_30": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.RAMP_AGC": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.RAMP_Q": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "pandapower.pypower.idx_gen.VG": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pandapower.pypower.isload": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.isload.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.isload.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.isload.isload": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.PMIN"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeAang": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeAang.ANGMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.ANGMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.ANGMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.ANGMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.makeAang": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "numpy.Inf",
    "numpy.arange",
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.ANGMAX",
    "pandapower.pypower.idx_brch.ANGMIN",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.T_BUS",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeAang.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAang.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeApq.PC1": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PC1"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.PC2": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PC2"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.QC1MAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC1MAX"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.QC1MIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC1MIN"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.QC2MAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC2MAX"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.QC2MIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QC2MIN"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.c_": {
  "data": {
   "shadows": "numpy.c_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.hasPQcap": {
  "data": {
   "shadows": "pandapower.pypower.hasPQcap.hasPQcap"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.makeApq": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.flatnonzero",
    "numpy.linalg.norm",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.hasPQcap.hasPQcap",
    "pandapower.pypower.idx_gen.PC1",
    "pandapower.pypower.idx_gen.PC2",
    "pandapower.pypower.idx_gen.QC1MAX",
    "pandapower.pypower.idx_gen.QC1MIN",
    "pandapower.pypower.idx_gen.QC2MAX",
    "pandapower.pypower.idx_gen.QC2MIN",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeApq.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeApq.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeAvl.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.arctan2": {
  "data": {
   "shadows": "numpy.arctan2"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.cos": {
  "data": {
   "shadows": "numpy.cos"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.isload": {
  "data": {
   "shadows": "pandapower.pypower.isload.isload"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.makeAvl": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "abs",
    "any",
    "numpy.arange",
    "numpy.arctan2",
    "numpy.array",
    "numpy.cos",
    "numpy.flatnonzero",
    "numpy.r_",
    "numpy.sin",
    "numpy.zeros",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.PMIN",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.isload.isload",
    "scipy.sparse.csr_matrix",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeAvl.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.sin": {
  "data": {
   "shadows": "numpy.sin"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAvl.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeAy.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.makeAy": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "numpy.any",
    "numpy.array",
    "numpy.diff",
    "numpy.flatnonzero",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST.astype",
    "pandapower.pypower.idx_cost.PW_LINEAR",
    "print",
    "range",
    "scipy.sparse.lil_matrix",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeAy.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.sparse": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeAy.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeB.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.copy": {
  "data": {
   "shadows": "numpy.copy"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.makeB": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.ones",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.BR_B",
    "pandapower.pypower.idx_brch.BR_R",
    "pandapower.pypower.idx_brch.SHIFT",
    "pandapower.pypower.idx_brch.TAP",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeB.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.makeB.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.makeBdc.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.csc_matrix": {
  "data": {
   "shadows": "scipy.sparse.csc_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandapower.pypower.makeBdc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.makeBdc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "any",
    "int",
    "list",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.real",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.BR_X",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.SHIFT",
    "pandapower.pypower.idx_brch.TAP",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.makeBdc.logger",
    "range",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "sparse"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeBdc.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeBdc.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.makeLODF.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.diag": {
  "data": {
   "shadows": "numpy.diag"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.jit": {
  "data": {
   "shadows": "pandapower.pf.no_numba.jit"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.makeLODF": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.diag",
    "numpy.errstate",
    "numpy.ones",
    "numpy.r_",
    "numpy.real",
    "pandapower.pypower.makeLODF.update_LODF_diag",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeLODF.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeLODF.update_LODF_diag": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.pf.no_numba.jit",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makePTDF": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makePTDF.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.isscalar": {
  "data": {
   "shadows": "numpy.isscalar"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.ix_": {
  "data": {
   "shadows": "numpy.ix_"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.makePTDF": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "any",
    "len",
    "makeBdc",
    "numpy.arange",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.isscalar",
    "numpy.ix_",
    "numpy.linalg.solve",
    "numpy.real",
    "numpy.zeros",
    "range",
    "scipy.sparse.linalg.spsolve",
    "sum",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makePTDF.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.solve": {
  "data": {
   "shadows": "numpy.linalg.solve"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.spsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.spsolve"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.makePTDF.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeSbus.CID": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.CID"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.CZD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.CZD"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus._get_Cg": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.ones",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeSbus._get_Sbus": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.makeSbus._get_Sload"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeSbus._get_Sload": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.pypower.idx_bus.CID",
    "pandapower.pypower.idx_bus.CZD",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeSbus.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.makeSbus": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.flatnonzero",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.makeSbus._get_Cg",
    "pandapower.pypower.makeSbus._get_Sbus"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeSbus.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.makeSbus.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.makeYbus.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.BR_R_ASYM": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R_ASYM"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.BR_X_ASYM": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X_ASYM"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.branch_vectors": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.conj",
    "numpy.exp",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.pi",
    "numpy.real",
    "pandapower.pypower.idx_brch.BR_B",
    "pandapower.pypower.idx_brch.BR_R",
    "pandapower.pypower.idx_brch.BR_R_ASYM",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.BR_X",
    "pandapower.pypower.idx_brch.BR_X_ASYM",
    "pandapower.pypower.idx_brch.SHIFT",
    "pandapower.pypower.idx_brch.TAP"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeYbus.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.hstack": {
  "data": {
   "shadows": "numpy.hstack"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.makeYbus": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "int",
    "numpy.hstack",
    "numpy.ones",
    "numpy.real",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.makeYbus.branch_vectors",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.makeYbus.nonzero": {
  "data": {
   "shadows": "numpy.nonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.makeYbus.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.newtonpf.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf._check_for_convergence": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.Inf",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.newtonpf._evaluate_Fx": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.newtonpf._iwamoto_step": {
  "data": {
   "shadows": "pandapower.pf.iwamoto_multiplier._iwamoto_step"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.angle": {
  "data": {
   "shadows": "numpy.angle"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.column_stack": {
  "data": {
   "shadows": "numpy.column_stack"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.create_jacobian_matrix": {
  "data": {
   "shadows": "pandapower.pf.create_jacobian.create_jacobian_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.get_fastest_jacobian_function": {
  "data": {
   "shadows": "pandapower.pf.create_jacobian.get_fastest_jacobian_function"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.linalg": {
  "data": {
   "shadows": "numpy.linalg"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.max": {
  "data": {
   "shadows": "numpy.max"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.newtonpf": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "numpy.angle",
    "numpy.arange",
    "numpy.column_stack",
    "numpy.exp",
    "numpy.max",
    "numpy.r_",
    "numpy.zeros",
    "numpy.zeros_like",
    "pandapower.pf.create_jacobian.create_jacobian_matrix",
    "pandapower.pf.create_jacobian.get_fastest_jacobian_function",
    "pandapower.pf.iwamoto_multiplier._iwamoto_step",
    "pandapower.pypower.makeSbus.makeSbus",
    "pandapower.pypower.newtonpf._check_for_convergence",
    "pandapower.pypower.newtonpf._evaluate_Fx",
    "scipy.sparse.linalg.spsolve"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.newtonpf.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.spsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.spsolve"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.newtonpf.zeros_like": {
  "data": {
   "shadows": "numpy.zeros_like"
  },
  "type": "import"
 },
 "pandapower.pypower.opf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf.MU_ANGMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_ANGMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.MU_QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.MU_VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.c_": {
  "data": {
   "shadows": "numpy.c_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.opf": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.c_",
    "numpy.shape",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.MU_ANGMAX",
    "pandapower.pypower.idx_bus.MU_VMIN",
    "pandapower.pypower.idx_gen.MU_QMIN",
    "pandapower.pypower.opf_args.opf_args2",
    "pandapower.pypower.opf_execute.opf_execute",
    "pandapower.pypower.opf_setup.opf_setup",
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf.opf_args2": {
  "data": {
   "shadows": "pandapower.pypower.opf_args.opf_args2"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.opf_execute": {
  "data": {
   "shadows": "pandapower.pypower.opf_execute.opf_execute"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.opf_setup": {
  "data": {
   "shadows": "pandapower.pypower.opf_setup.opf_setup"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.shape": {
  "data": {
   "shadows": "numpy.shape"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.pypower.opf.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_args": {
  "data": {
   "symbols_in_volume": [
    "pandapower.pypower._compat.PY2",
    "str"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.opf_args.PY2": {
  "data": {
   "shadows": "pandapower.pypower._compat.PY2"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_args.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_args.basestring": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.pypower.opf_args.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_args.opf_args": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandapower.pypower.ppoption.ppoption",
    "scipy.sparse.issparse",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_args.opf_args2": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "pandapower.pypower.opf_args.opf_args"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_args.ppoption": {
  "data": {
   "shadows": "pandapower.pypower.ppoption.ppoption"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_args.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf_consfcn.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.dAbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dAbr_dV.dAbr_dV"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.dIbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dIbr_dV.dIbr_dV"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.dSbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dSbr_dV.dSbr_dV"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.dSbus_dV": {
  "data": {
   "shadows": "pandapower.pypower.dSbus_dV.dSbus_dV"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.opf_consfcn": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.Inf",
    "numpy.arange",
    "numpy.conj",
    "numpy.exp",
    "numpy.ones",
    "numpy.r_",
    "numpy.r_.T",
    "numpy.r_.real",
    "numpy.zeros",
    "pandapower.pypower.dAbr_dV.dAbr_dV",
    "pandapower.pypower.dIbr_dV.dIbr_dV",
    "pandapower.pypower.dSbr_dV.dSbr_dV",
    "pandapower.pypower.dSbus_dV.dSbus_dV",
    "pandapower.pypower.idx_brch.F_BUS.astype",
    "pandapower.pypower.idx_brch.RATE_A",
    "pandapower.pypower.idx_brch.T_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.makeSbus.makeSbus",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.lil_matrix",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_consfcn.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_consfcn.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf_costfcn.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.POLYNOMIAL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.POLYNOMIAL"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.opf_costfcn": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "any",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.r_",
    "numpy.r_.T",
    "numpy.zeros",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.POLYNOMIAL",
    "pandapower.pypower.polycost.polycost",
    "pandapower.pypower.totcost.totcost",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.issparse",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_costfcn.polycost": {
  "data": {
   "shadows": "pandapower.pypower.polycost.polycost"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.totcost": {
  "data": {
   "shadows": "pandapower.pypower.totcost.totcost"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_costfcn.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf_execute.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.MU_ANGMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_ANGMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.MU_ANGMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_ANGMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.dcopf_solver": {
  "data": {
   "shadows": "pandapower.pypower.dcopf_solver.dcopf_solver"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.opf_consfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_consfcn.opf_consfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.opf_costfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_costfcn.opf_costfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.opf_execute": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.dcopf_solver.dcopf_solver",
    "pandapower.pypower.idx_brch.MU_ANGMAX",
    "pandapower.pypower.idx_brch.MU_ANGMIN",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.VG",
    "pandapower.pypower.makeYbus.makeYbus",
    "pandapower.pypower.opf_consfcn.opf_consfcn",
    "pandapower.pypower.opf_costfcn.opf_costfcn",
    "pandapower.pypower.pipsopf_solver.pipsopf_solver",
    "pandapower.pypower.ppver.ppver",
    "pandapower.pypower.update_mupq.update_mupq",
    "sys.stderr.write",
    "sys.stdout.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_execute.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.pipsopf_solver": {
  "data": {
   "shadows": "pandapower.pypower.pipsopf_solver.pipsopf_solver"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.ppver": {
  "data": {
   "shadows": "pandapower.pypower.ppver.ppver"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.update_mupq": {
  "data": {
   "shadows": "pandapower.pypower.update_mupq.update_mupq"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_execute.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf_hessfcn.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.POLYNOMIAL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.POLYNOMIAL"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.d2AIbr_dV2": {
  "data": {
   "shadows": "pandapower.pypower.d2AIbr_dV2.d2AIbr_dV2"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.d2ASbr_dV2": {
  "data": {
   "shadows": "pandapower.pypower.d2ASbr_dV2.d2ASbr_dV2"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.d2Sbus_dV2": {
  "data": {
   "shadows": "pandapower.pypower.d2Sbus_dV2.d2Sbus_dV2"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.dIbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dIbr_dV.dIbr_dV"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.dSbr_dV": {
  "data": {
   "shadows": "pandapower.pypower.dSbr_dV.dSbr_dV"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.issparse": {
  "data": {
   "shadows": "scipy.sparse.issparse"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.opf_consfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_consfcn.opf_consfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.opf_costfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_costfcn.opf_costfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.opf_hessfcn": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.d2AIbr_dV2.d2AIbr_dV2",
    "pandapower.pypower.d2ASbr_dV2.d2ASbr_dV2",
    "pandapower.pypower.d2Sbus_dV2.d2Sbus_dV2",
    "pandapower.pypower.dIbr_dV.dIbr_dV",
    "pandapower.pypower.dSbr_dV.dSbr_dV",
    "pandapower.pypower.idx_brch.F_BUS.astype",
    "pandapower.pypower.idx_brch.T_BUS.astype",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.POLYNOMIAL",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.opf_consfcn.opf_consfcn",
    "pandapower.pypower.opf_costfcn.opf_costfcn",
    "pandapower.pypower.polycost.polycost",
    "print",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "scipy.sparse.issparse",
    "scipy.sparse.vstack"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_hessfcn.polycost": {
  "data": {
   "shadows": "pandapower.pypower.polycost.polycost"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_hessfcn.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf_model.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.lil_matrix": {
  "data": {
   "shadows": "scipy.sparse.lil_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.opf_model": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandapower.pypower.opf_model.opf_model.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.__repr__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.add_constraints": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "numpy.Inf",
    "numpy.ones",
    "range",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.add_vars": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len",
    "numpy.Inf",
    "numpy.ones",
    "numpy.zeros",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.build_cost_params": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.getN": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.get_cost_params": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.get_idx": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.get_ppc": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.getv": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.r_",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.linear_constraints": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "numpy.Inf",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros",
    "range",
    "scipy.sparse.lil_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.userdata": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_model.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_model.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.opf_setup.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.POLYNOMIAL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.POLYNOMIAL"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.delete": {
  "data": {
   "shadows": "numpy.delete"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.makeAang": {
  "data": {
   "shadows": "pandapower.pypower.makeAang.makeAang"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.makeApq": {
  "data": {
   "shadows": "pandapower.pypower.makeApq.makeApq"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.makeAvl": {
  "data": {
   "shadows": "pandapower.pypower.makeAvl.makeAvl"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.makeAy": {
  "data": {
   "shadows": "pandapower.pypower.makeAy.makeAy"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.makeBdc": {
  "data": {
   "shadows": "pandapower.pypower.makeBdc.makeBdc"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.nonzero": {
  "data": {
   "shadows": "numpy.nonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.opf_args": {
  "data": {
   "shadows": "pandapower.pypower.opf_args.opf_args"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.opf_model": {
  "data": {
   "shadows": "pandapower.pypower.opf_model.opf_model"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.opf_setup": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.Inf",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.delete",
    "numpy.flatnonzero",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.unique",
    "pandapower.pypower.idx_brch.RATE_A",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.REF",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM.copy",
    "pandapower.pypower.idx_bus.VMAX",
    "pandapower.pypower.idx_bus.VMIN",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_cost.POLYNOMIAL",
    "pandapower.pypower.idx_cost.PW_LINEAR",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.PMIN",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.idx_gen.VG",
    "pandapower.pypower.makeAang.makeAang",
    "pandapower.pypower.makeApq.makeApq",
    "pandapower.pypower.makeAvl.makeAvl",
    "pandapower.pypower.makeAy.makeAy",
    "pandapower.pypower.makeBdc.makeBdc",
    "pandapower.pypower.opf_args.opf_args",
    "pandapower.pypower.opf_model.opf_model",
    "pandapower.pypower.pqcost.pqcost",
    "pandapower.pypower.run_userfcn.run_userfcn",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.hstack",
    "sys.stderr.write",
    "sys.stdout.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.opf_setup.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.pqcost": {
  "data": {
   "shadows": "pandapower.pypower.pqcost.pqcost"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.run_userfcn": {
  "data": {
   "shadows": "pandapower.pypower.run_userfcn.run_userfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "pandapower.pypower.opf_setup.unique": {
  "data": {
   "shadows": "numpy.unique"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.pfsoln.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.EPS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.pypower.pfsoln.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln._update_p": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "numpy.flatnonzero",
    "numpy.intersect1d",
    "numpy.setdiff1d",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_gen.PG",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pfsoln._update_q": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.zeros",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.pfsoln.EPS",
    "range",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pfsoln._update_v": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "abs",
    "numpy.angle",
    "numpy.pi",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pfsoln.angle": {
  "data": {
   "shadows": "numpy.angle"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.c_": {
  "data": {
   "shadows": "numpy.c_"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.finfo": {
  "data": {
   "shadows": "numpy.finfo"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.intersect1d": {
  "data": {
   "shadows": "numpy.intersect1d"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.ix_": {
  "data": {
   "shadows": "numpy.ix_"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.pfsoln": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "len",
    "numpy.c_",
    "numpy.conj",
    "numpy.flatnonzero",
    "numpy.ix_",
    "numpy.real",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.PF",
    "pandapower.pypower.idx_brch.PT",
    "pandapower.pypower.idx_brch.QF",
    "pandapower.pypower.idx_brch.QT",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.pfsoln._update_p",
    "pandapower.pypower.pfsoln._update_q",
    "pandapower.pypower.pfsoln._update_v"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pfsoln.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.setdiff1d": {
  "data": {
   "shadows": "numpy.setdiff1d"
  },
  "type": "import"
 },
 "pandapower.pypower.pfsoln.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.pips": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.finfo"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.pips.EPS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.pypower.pips.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.absolute": {
  "data": {
   "shadows": "numpy.absolute"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.eye": {
  "data": {
   "shadows": "scipy.sparse.eye"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.finfo": {
  "data": {
   "shadows": "numpy.finfo"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.hstack": {
  "data": {
   "shadows": "scipy.sparse.hstack"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.log": {
  "data": {
   "shadows": "numpy.log"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.norm": {
  "data": {
   "shadows": "numpy.linalg.norm"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.pips": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict",
    "f_fcn",
    "float",
    "gh_fcn",
    "hess_fcn",
    "isinstance",
    "len",
    "max",
    "min",
    "numpy.Inf",
    "numpy.absolute",
    "numpy.any",
    "numpy.array",
    "numpy.dot",
    "numpy.flatnonzero",
    "numpy.isnan",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.ones",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.pips.EPS",
    "pandapower.pypower.pipsver.pipsver",
    "print",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.eye",
    "scipy.sparse.hstack",
    "scipy.sparse.linalg.spsolve",
    "scipy.sparse.vstack",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pips.pipsver": {
  "data": {
   "shadows": "pandapower.pypower.pipsver.pipsver"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.spsolve": {
  "data": {
   "shadows": "scipy.sparse.linalg.spsolve"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.vstack": {
  "data": {
   "shadows": "scipy.sparse.vstack"
  },
  "type": "import"
 },
 "pandapower.pypower.pips.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.pipsopf_solver.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.LAM_P": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.LAM_P"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.LAM_Q": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.LAM_Q"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_SF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_SF"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_ST": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_ST"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.MU_VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.VG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.VG"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.conj": {
  "data": {
   "shadows": "numpy.conj"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.opf_consfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_consfcn.opf_consfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.opf_costfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_costfcn.opf_costfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.opf_hessfcn": {
  "data": {
   "shadows": "pandapower.pypower.opf_hessfcn.opf_hessfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.pips": {
  "data": {
   "shadows": "pandapower.pypower.pips.pips"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.pipsopf_solver": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "max",
    "numpy.Inf",
    "numpy.conj",
    "numpy.exp",
    "numpy.flatnonzero",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.F_BUS.astype",
    "pandapower.pypower.idx_brch.MU_SF",
    "pandapower.pypower.idx_brch.MU_ST",
    "pandapower.pypower.idx_brch.PF",
    "pandapower.pypower.idx_brch.PT",
    "pandapower.pypower.idx_brch.QF",
    "pandapower.pypower.idx_brch.QT",
    "pandapower.pypower.idx_brch.RATE_A",
    "pandapower.pypower.idx_brch.T_BUS.astype",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.LAM_P",
    "pandapower.pypower.idx_bus.LAM_Q",
    "pandapower.pypower.idx_bus.MU_VMAX",
    "pandapower.pypower.idx_bus.MU_VMIN",
    "pandapower.pypower.idx_bus.REF",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_cost.PW_LINEAR",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.MU_PMAX",
    "pandapower.pypower.idx_gen.MU_PMIN",
    "pandapower.pypower.idx_gen.MU_QMAX",
    "pandapower.pypower.idx_gen.MU_QMIN",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.VG",
    "pandapower.pypower.makeYbus.makeYbus",
    "pandapower.pypower.opf_consfcn.opf_consfcn",
    "pandapower.pypower.opf_costfcn.opf_costfcn",
    "pandapower.pypower.opf_hessfcn.opf_hessfcn",
    "pandapower.pypower.pips.pips",
    "pandapower.pypower.util.sub2ind"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pipsopf_solver.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.sub2ind": {
  "data": {
   "shadows": "pandapower.pypower.util.sub2ind"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsopf_solver.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.pipsver": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.pipsver.pipsver": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pandapower.pypower.polycost": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.polycost.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.polycost": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "any",
    "int",
    "len",
    "max",
    "min",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.zeros",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_cost.NCOST.astype",
    "pandapower.pypower.idx_cost.PW_LINEAR",
    "pandapower.pypower.polycost.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.polycost.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.pypower.polycost.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.ppoption": {
  "data": {
   "symbols_in_volume": [
    "numpy.Inf"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.ppoption.GUROBI_OPTIONS": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pandapower.pypower.ppoption.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.ppoption.OPF_OPTIONS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandapower.pypower.ppoption.OUTPUT_OPTIONS": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "pandapower.pypower.ppoption.PDIPM_OPTIONS": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "pandapower.pypower.ppoption.PF_OPTIONS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.pypower.ppoption.ppoption": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandapower.pypower.ppoption.OPF_OPTIONS",
    "pandapower.pypower.ppoption.OUTPUT_OPTIONS",
    "pandapower.pypower.ppoption.PDIPM_OPTIONS",
    "pandapower.pypower.ppoption.PF_OPTIONS"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.ppver": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.ppver.ppver": {
  "data": {
   "lineno": 8
  },
  "type": "function"
 },
 "pandapower.pypower.pqcost": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.pqcost.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.pqcost.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.pypower.pqcost.pqcost": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "sys.stderr.write"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.pqcost.stderr": {
  "data": {
   "shadows": "sys.stderr"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.printpf.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BUS_AREA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_AREA"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.GEN_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_STATUS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.GS": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.GS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.LAM_P": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.LAM_P"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.LAM_Q": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.LAM_Q"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_SF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_SF"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_ST": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.MU_ST"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.MU_VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.MU_VMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.REF": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.REF"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.VMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.VMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.any": {
  "data": {
   "shadows": "numpy.any"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.argmax": {
  "data": {
   "shadows": "numpy.argmax"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.argmin": {
  "data": {
   "shadows": "numpy.argmin"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.diff": {
  "data": {
   "shadows": "numpy.diff"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.exp": {
  "data": {
   "shadows": "numpy.exp"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.imag": {
  "data": {
   "shadows": "numpy.imag"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.isload": {
  "data": {
   "shadows": "pandapower.pypower.isload.isload"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.logical_or": {
  "data": {
   "shadows": "numpy.logical_or"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.min": {
  "data": {
   "shadows": "numpy.min"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.pi": {
  "data": {
   "shadows": "numpy.pi"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.ppoption": {
  "data": {
   "shadows": "pandapower.pypower.ppoption.ppoption"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.printpf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "abs",
    "bool",
    "dict",
    "gen",
    "int",
    "isinstance",
    "len",
    "max",
    "numpy.any",
    "numpy.arange",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.diff",
    "numpy.exp",
    "numpy.flatnonzero",
    "numpy.imag",
    "numpy.logical_or",
    "numpy.min",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.real",
    "numpy.sort",
    "numpy.zeros",
    "pandapower.pypower.idx_brch.BR_B",
    "pandapower.pypower.idx_brch.BR_B.real",
    "pandapower.pypower.idx_brch.BR_R",
    "pandapower.pypower.idx_brch.BR_STATUS",
    "pandapower.pypower.idx_brch.BR_STATUS.astype",
    "pandapower.pypower.idx_brch.BR_X",
    "pandapower.pypower.idx_brch.F_BUS",
    "pandapower.pypower.idx_brch.F_BUS.astype",
    "pandapower.pypower.idx_brch.F_BUS.real",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.MU_SF",
    "pandapower.pypower.idx_brch.MU_ST",
    "pandapower.pypower.idx_brch.PF",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT",
    "pandapower.pypower.idx_brch.QT.real",
    "pandapower.pypower.idx_brch.RATE_A",
    "pandapower.pypower.idx_brch.SHIFT",
    "pandapower.pypower.idx_brch.TAP",
    "pandapower.pypower.idx_brch.TAP.real",
    "pandapower.pypower.idx_brch.T_BUS",
    "pandapower.pypower.idx_brch.T_BUS.astype",
    "pandapower.pypower.idx_brch.T_BUS.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.BS",
    "pandapower.pypower.idx_bus.BUS_AREA",
    "pandapower.pypower.idx_bus.BUS_I",
    "pandapower.pypower.idx_bus.BUS_I.astype",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.GS",
    "pandapower.pypower.idx_bus.LAM_P",
    "pandapower.pypower.idx_bus.LAM_Q",
    "pandapower.pypower.idx_bus.MU_VMAX",
    "pandapower.pypower.idx_bus.MU_VMIN",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.pypower.idx_bus.REF",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_bus.VMAX",
    "pandapower.pypower.idx_bus.VMIN",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.GEN_BUS.astype",
    "pandapower.pypower.idx_gen.GEN_STATUS",
    "pandapower.pypower.idx_gen.MU_PMAX",
    "pandapower.pypower.idx_gen.MU_PMIN",
    "pandapower.pypower.idx_gen.MU_QMAX",
    "pandapower.pypower.idx_gen.MU_QMIN",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.PMAX",
    "pandapower.pypower.idx_gen.PMIN",
    "pandapower.pypower.idx_gen.QG",
    "pandapower.pypower.idx_gen.QMAX",
    "pandapower.pypower.idx_gen.QMIN",
    "pandapower.pypower.isload.isload",
    "pandapower.pypower.ppoption.ppoption",
    "pandapower.pypower.run_userfcn.run_userfcn",
    "range",
    "sum",
    "sys.stdout",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.printpf.r_": {
  "data": {
   "shadows": "numpy.r_"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.run_userfcn": {
  "data": {
   "shadows": "pandapower.pypower.run_userfcn.run_userfcn"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.sort": {
  "data": {
   "shadows": "numpy.sort"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "pandapower.pypower.printpf.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.pypower.qps_pips.doctest"
   ]
  },
  "type": "module"
 },
 "pandapower.pypower.qps_pips.Inf": {
  "data": {
   "shadows": "numpy.Inf"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips.pips": {
  "data": {
   "shadows": "pandapower.pypower.pips.pips"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips.qps_pips": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "numpy.Inf",
    "numpy.ones",
    "numpy.zeros",
    "pandapower.pypower.pips.pips",
    "print",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.qps_pips.qps_pips.qp_f": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.qps_pips.sparse": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pips.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pypower": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.qps_pypower.have_fcn": {
  "data": {
   "shadows": "pandapower.pypower.util.have_fcn"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pypower.qps_pips": {
  "data": {
   "shadows": "pandapower.pypower.qps_pips.qps_pips"
  },
  "type": "import"
 },
 "pandapower.pypower.qps_pypower.qps_pypower": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.pypower.qps_pips.qps_pips"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.qps_pypower.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pandapower.pypower.run_userfcn": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.run_userfcn.run_userfcn": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.totcost": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.totcost.COST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.COST"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.MODEL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.MODEL"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.NCOST": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.NCOST"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.POLYNOMIAL": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.POLYNOMIAL"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.PW_LINEAR": {
  "data": {
   "shadows": "pandapower.pypower.idx_cost.PW_LINEAR"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.arange": {
  "data": {
   "shadows": "numpy.arange"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.find": {
  "data": {
   "shadows": "numpy.flatnonzero"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.polycost": {
  "data": {
   "shadows": "pandapower.pypower.polycost.polycost"
  },
  "type": "import"
 },
 "pandapower.pypower.totcost.totcost": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.zeros",
    "pandapower.pypower.idx_cost.COST",
    "pandapower.pypower.idx_cost.MODEL",
    "pandapower.pypower.idx_cost.NCOST",
    "pandapower.pypower.idx_cost.POLYNOMIAL",
    "pandapower.pypower.idx_cost.PW_LINEAR",
    "pandapower.pypower.polycost.polycost"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.totcost.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.pypower.update_mupq": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.update_mupq.MU_PMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.update_mupq.MU_PMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_PMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.update_mupq.MU_QMAX": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMAX"
  },
  "type": "import"
 },
 "pandapower.pypower.update_mupq.MU_QMIN": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.MU_QMIN"
  },
  "type": "import"
 },
 "pandapower.pypower.update_mupq.update_mupq": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandapower.pypower.idx_gen.MU_PMAX",
    "pandapower.pypower.idx_gen.MU_PMIN",
    "pandapower.pypower.idx_gen.MU_QMAX",
    "pandapower.pypower.idx_gen.MU_QMIN"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.util": {
  "data": {},
  "type": "module"
 },
 "pandapower.pypower.util.feval": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "eval"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.util.have_fcn": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ImportError",
    "__import__"
   ]
  },
  "type": "function"
 },
 "pandapower.pypower.util.sub2ind": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch": {
  "data": {},
  "type": "module"
 },
 "pandapower.results_branch.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.results_branch.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.results_branch.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.results_branch.I_from_SV_elementwise": {
  "data": {
   "shadows": "pandapower.auxiliary.I_from_SV_elementwise"
  },
  "type": "import"
 },
 "pandapower.results_branch.PF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PF"
  },
  "type": "import"
 },
 "pandapower.results_branch.PT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.PT"
  },
  "type": "import"
 },
 "pandapower.results_branch.QF": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QF"
  },
  "type": "import"
 },
 "pandapower.results_branch.QT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.QT"
  },
  "type": "import"
 },
 "pandapower.results_branch.S_from_VI_elementwise": {
  "data": {
   "shadows": "pandapower.auxiliary.S_from_VI_elementwise"
  },
  "type": "import"
 },
 "pandapower.results_branch.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.results_branch.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.results_branch.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.results_branch._get_branch_flows": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "numpy.sqrt",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_branch_flows_3ph": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.deg2rad",
    "numpy.exp",
    "numpy.sqrt",
    "pandapower.auxiliary.I_from_SV_elementwise",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.BASE_KV.flatten",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM.flatten"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_branch_results": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandapower.results_branch._get_branch_flows",
    "pandapower.results_branch._get_impedance_results",
    "pandapower.results_branch._get_line_results",
    "pandapower.results_branch._get_switch_results",
    "pandapower.results_branch._get_trafo3w_results",
    "pandapower.results_branch._get_trafo_results",
    "pandapower.results_branch._get_xward_branch_results"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_branch_results_3ph": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandapower.results_branch._get_branch_flows_3ph",
    "pandapower.results_branch._get_line_results_3ph",
    "pandapower.results_branch._get_trafo_results_3ph"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_impedance_results": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT.real"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_line_results": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "numpy.errstate",
    "numpy.max",
    "numpy.square",
    "numpy.zeros_like",
    "pandapower.pypower.idx_brch.BR_R.real",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_line_results_3ph": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.angle",
    "numpy.maximum.reduce",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros_like",
    "pandapower.auxiliary.S_from_VI_elementwise",
    "pandapower.auxiliary.sequence_to_phase"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_switch_results": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "numpy.errstate",
    "numpy.max",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_trafo3w_lookups": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_trafo3w_results": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.errstate",
    "numpy.max",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros_like",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.results_branch._get_trafo3w_lookups"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_trafo_results": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "any",
    "int",
    "numpy.errstate",
    "numpy.max",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros_like",
    "pandapower.pypower.idx_brch.F_BUS.real.astype",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.PT.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_brch.QT.real",
    "pandapower.pypower.idx_brch.T_BUS.real.astype",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_trafo_results_3ph": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "any",
    "numpy.abs",
    "numpy.asarray",
    "numpy.maximum.reduce",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.vstack",
    "numpy.zeros_like",
    "pandapower.auxiliary.S_from_VI_elementwise",
    "pandapower.auxiliary.sequence_to_phase"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._get_xward_branch_results": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.pypower.idx_brch.PF.real",
    "pandapower.pypower.idx_brch.QF.real",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.results_branch._sum_by_group": {
  "data": {
   "shadows": "pandapower.auxiliary._sum_by_group"
  },
  "type": "import"
 },
 "pandapower.results_branch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.results_branch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.results_branch.sequence_to_phase": {
  "data": {
   "shadows": "pandapower.auxiliary.sequence_to_phase"
  },
  "type": "import"
 },
 "pandapower.results_gen": {
  "data": {},
  "type": "module"
 },
 "pandapower.results_gen.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.results_gen.GEN_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.GEN_BUS"
  },
  "type": "import"
 },
 "pandapower.results_gen.I_from_SV_elementwise": {
  "data": {
   "shadows": "pandapower.auxiliary.I_from_SV_elementwise"
  },
  "type": "import"
 },
 "pandapower.results_gen.PG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.PG"
  },
  "type": "import"
 },
 "pandapower.results_gen.QG": {
  "data": {
   "shadows": "pandapower.pypower.idx_gen.QG"
  },
  "type": "import"
 },
 "pandapower.results_gen.SVabc_from_SV012": {
  "data": {
   "shadows": "pandapower.auxiliary.SVabc_from_SV012"
  },
  "type": "import"
 },
 "pandapower.results_gen.S_from_VI_elementwise": {
  "data": {
   "shadows": "pandapower.auxiliary.S_from_VI_elementwise"
  },
  "type": "import"
 },
 "pandapower.results_gen.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.results_gen.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.results_gen._get_dcline_results": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_ext_grid_results": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_ext_grid_results_3ph": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "len",
    "map",
    "numpy.array",
    "numpy.complex128",
    "numpy.deg2rad",
    "numpy.exp",
    "numpy.imag",
    "numpy.real",
    "numpy.sqrt",
    "numpy.zeros",
    "pandapower.auxiliary.SVabc_from_SV012",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_gen_results": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.hstack",
    "numpy.zeros",
    "pandapower.auxiliary._sum_by_group",
    "pandapower.results_gen._get_dcline_results",
    "pandapower.results_gen._get_ext_grid_results",
    "pandapower.results_gen._get_pp_gen_results",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_gen_results_3ph": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.copy",
    "numpy.zeros",
    "pandapower.auxiliary._sum_by_group_nvals",
    "pandapower.results_gen._get_ext_grid_results_3ph",
    "pandapower.results_gen._get_pp_gen_results_3ph"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_p_q_gen_results": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.zeros",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_p_q_gen_results_3ph": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "int",
    "len",
    "map",
    "numpy.any",
    "numpy.array",
    "numpy.deg2rad",
    "numpy.exp",
    "numpy.imag",
    "numpy.real",
    "numpy.zeros",
    "pandapower.auxiliary.I_from_SV_elementwise",
    "pandapower.auxiliary.S_from_VI_elementwise",
    "pandapower.auxiliary.sequence_to_phase",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.GEN_BUS",
    "pandapower.pypower.idx_gen.PG",
    "pandapower.pypower.idx_gen.QG"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_pp_gen_results": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.hstack",
    "pandapower.results_gen._get_p_q_gen_results",
    "pandapower.results_gen._get_v_gen_resuts"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_pp_gen_results_3ph": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.hstack",
    "pandapower.results_gen._get_p_q_gen_results_3ph",
    "pandapower.results_gen._get_v_gen_results_3ph"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_v_gen_results_3ph": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.abs",
    "numpy.angle",
    "numpy.array",
    "numpy.copy",
    "numpy.deg2rad",
    "numpy.exp",
    "numpy.rad2deg",
    "numpy.real",
    "numpy.zeros",
    "pandapower.auxiliary.sequence_to_phase",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.pypower.idx_gen.GEN_BUS"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._get_v_gen_resuts": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.results_gen._sum_by_group": {
  "data": {
   "shadows": "pandapower.auxiliary._sum_by_group"
  },
  "type": "import"
 },
 "pandapower.results_gen._sum_by_group_nvals": {
  "data": {
   "shadows": "pandapower.auxiliary._sum_by_group_nvals"
  },
  "type": "import"
 },
 "pandapower.results_gen.complex128": {
  "data": {
   "shadows": "numpy.complex128"
  },
  "type": "import"
 },
 "pandapower.results_gen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.results_gen.sequence_to_phase": {
  "data": {
   "shadows": "pandapower.auxiliary.sequence_to_phase"
  },
  "type": "import"
 },
 "pandapower.run": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.run._check_bus_index_and_print_warning_if_high": {
  "data": {
   "shadows": "pandapower.auxiliary._check_bus_index_and_print_warning_if_high"
  },
  "type": "import"
 },
 "pandapower.run._check_gen_index_and_print_warning_if_high": {
  "data": {
   "shadows": "pandapower.auxiliary._check_gen_index_and_print_warning_if_high"
  },
  "type": "import"
 },
 "pandapower.run._check_necessary_opf_parameters": {
  "data": {
   "shadows": "pandapower.opf.validate_opf_input._check_necessary_opf_parameters"
  },
  "type": "import"
 },
 "pandapower.run._init_rundcopp_options": {
  "data": {
   "shadows": "pandapower.auxiliary._init_rundcopp_options"
  },
  "type": "import"
 },
 "pandapower.run._init_rundcpp_options": {
  "data": {
   "shadows": "pandapower.auxiliary._init_rundcpp_options"
  },
  "type": "import"
 },
 "pandapower.run._init_runopp_options": {
  "data": {
   "shadows": "pandapower.auxiliary._init_runopp_options"
  },
  "type": "import"
 },
 "pandapower.run._init_runpp_options": {
  "data": {
   "shadows": "pandapower.auxiliary._init_runpp_options"
  },
  "type": "import"
 },
 "pandapower.run._internal_stored": {
  "data": {
   "shadows": "pandapower.auxiliary._internal_stored"
  },
  "type": "import"
 },
 "pandapower.run._optimal_powerflow": {
  "data": {
   "shadows": "pandapower.optimal_powerflow._optimal_powerflow"
  },
  "type": "import"
 },
 "pandapower.run._passed_runpp_parameters": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "dict",
    "len",
    "pandapower.run.inspect",
    "pandapower.run.runpp",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.run._powerflow": {
  "data": {
   "shadows": "pandapower.powerflow._powerflow"
  },
  "type": "import"
 },
 "pandapower.run._recycled_powerflow": {
  "data": {
   "shadows": "pandapower.powerflow._recycled_powerflow"
  },
  "type": "import"
 },
 "pandapower.run.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandapower.run.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.run.run_control": {
  "data": {
   "shadows": "pandapower.control.run_control"
  },
  "type": "import"
 },
 "pandapower.run.rundcopp": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
    "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
    "pandapower.auxiliary._init_rundcopp_options",
    "pandapower.optimal_powerflow._optimal_powerflow",
    "pandapower.run.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.run.rundcpp": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
    "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
    "pandapower.auxiliary._init_rundcpp_options",
    "pandapower.powerflow._powerflow"
   ]
  },
  "type": "function"
 },
 "pandapower.run.runopp": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
    "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
    "pandapower.auxiliary._init_runopp_options",
    "pandapower.opf.validate_opf_input._check_necessary_opf_parameters",
    "pandapower.optimal_powerflow._optimal_powerflow",
    "pandapower.run.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.run.runpp": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "locals",
    "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
    "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
    "pandapower.auxiliary._init_runpp_options",
    "pandapower.auxiliary._internal_stored",
    "pandapower.control.run_control",
    "pandapower.powerflow._powerflow",
    "pandapower.powerflow._recycled_powerflow",
    "pandapower.run._passed_runpp_parameters"
   ]
  },
  "type": "function"
 },
 "pandapower.run.set_user_pf_options": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "pandapower.run.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.runpm": {
  "data": {},
  "type": "module"
 },
 "pandapower.runpm._add_opf_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_opf_options"
  },
  "type": "import"
 },
 "pandapower.runpm._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.runpm._runpm": {
  "data": {
   "shadows": "pandapower.opf.run_powermodels._runpm"
  },
  "type": "import"
 },
 "pandapower.runpm.add_storage_opf_settings": {
  "data": {
   "shadows": "pandapower.opf.pm_storage.add_storage_opf_settings"
  },
  "type": "import"
 },
 "pandapower.runpm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.runpm.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.runpm.read_ots_results": {
  "data": {
   "shadows": "pandapower.converter.powermodels.from_pm.read_ots_results"
  },
  "type": "import"
 },
 "pandapower.runpm.read_pm_storage_results": {
  "data": {
   "shadows": "pandapower.opf.pm_storage.read_pm_storage_results"
  },
  "type": "import"
 },
 "pandapower.runpm.read_tnep_results": {
  "data": {
   "shadows": "pandapower.converter.powermodels.from_pm.read_tnep_results"
  },
  "type": "import"
 },
 "pandapower.runpm.runpm": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.opf.run_powermodels._runpm",
    "pandapower.pp_dir",
    "pandapower.runpm.os"
   ]
  },
  "type": "function"
 },
 "pandapower.runpm.runpm_ac_opf": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "dict",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.opf.run_powermodels._runpm",
    "pandapower.pp_dir",
    "pandapower.runpm.os"
   ]
  },
  "type": "function"
 },
 "pandapower.runpm.runpm_dc_opf": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "dict",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.opf.run_powermodels._runpm",
    "pandapower.pp_dir",
    "pandapower.runpm.os"
   ]
  },
  "type": "function"
 },
 "pandapower.runpm.runpm_ots": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "dict",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.converter.powermodels.from_pm.read_ots_results",
    "pandapower.opf.run_powermodels._runpm",
    "pandapower.pp_dir",
    "pandapower.runpm.os"
   ]
  },
  "type": "function"
 },
 "pandapower.runpm.runpm_storage_opf": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "dict",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.opf.pm_storage.add_storage_opf_settings",
    "pandapower.opf.pm_storage.read_pm_storage_results",
    "pandapower.opf.run_powermodels._runpm",
    "pandapower.pp_dir",
    "pandapower.runpm.os"
   ]
  },
  "type": "function"
 },
 "pandapower.runpm.runpm_tnep": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "pandapower.auxiliary._add_opf_options",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.converter.powermodels.from_pm.read_tnep_results",
    "pandapower.opf.run_powermodels._runpm",
    "pandapower.pp_dir",
    "pandapower.runpm.os"
   ]
  },
  "type": "function"
 },
 "pandapower.runpp_3ph": {
  "data": {
   "shadows": "pandapower.pf.runpp_3ph.runpp_3ph"
  },
  "type": "import"
 },
 "pandapower.shortcircuit": {
  "data": {},
  "type": "module"
 },
 "pandapower.shortcircuit.calc_sc": {
  "data": {
   "shadows": "pandapower.shortcircuit.calc_sc.calc_sc"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._add_auxiliary_elements": {
  "data": {
   "shadows": "pandapower.auxiliary._add_auxiliary_elements"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._add_kappa_to_ppc": {
  "data": {
   "shadows": "pandapower.shortcircuit.kappa._add_kappa_to_ppc"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._add_sc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_sc_options"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_branch_currents": {
  "data": {
   "shadows": "pandapower.shortcircuit.currents._calc_branch_currents"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_ikss": {
  "data": {
   "shadows": "pandapower.shortcircuit.currents._calc_ikss"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_ikss_1ph": {
  "data": {
   "shadows": "pandapower.shortcircuit.currents._calc_ikss_1ph"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_ip": {
  "data": {
   "shadows": "pandapower.shortcircuit.currents._calc_ip"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_ith": {
  "data": {
   "shadows": "pandapower.shortcircuit.currents._calc_ith"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_rx": {
  "data": {
   "shadows": "pandapower.shortcircuit.impedance._calc_rx"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_sc": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception",
    "pandapower.auxiliary._add_auxiliary_elements",
    "pandapower.auxiliary._clean_up",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.shortcircuit.currents._calc_branch_currents",
    "pandapower.shortcircuit.currents._calc_ikss",
    "pandapower.shortcircuit.currents._calc_ip",
    "pandapower.shortcircuit.currents._calc_ith",
    "pandapower.shortcircuit.impedance._calc_rx",
    "pandapower.shortcircuit.impedance._calc_ybus",
    "pandapower.shortcircuit.impedance._calc_zbus",
    "pandapower.shortcircuit.kappa._add_kappa_to_ppc",
    "pandapower.shortcircuit.results._extract_results"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc._calc_sc_1ph": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "Exception",
    "pandapower.auxiliary._add_auxiliary_elements",
    "pandapower.auxiliary._clean_up",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pd2ppc_zero._pd2ppc_zero",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.shortcircuit.currents._calc_ikss_1ph",
    "pandapower.shortcircuit.impedance._calc_rx",
    "pandapower.shortcircuit.impedance._calc_ybus",
    "pandapower.shortcircuit.impedance._calc_zbus",
    "pandapower.shortcircuit.kappa._add_kappa_to_ppc",
    "pandapower.shortcircuit.results._extract_results"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc._calc_sc_single": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Exception",
    "pandapower.auxiliary._add_auxiliary_elements",
    "pandapower.auxiliary._clean_up",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.shortcircuit.currents._calc_ikss",
    "pandapower.shortcircuit.currents._calc_single_bus_sc",
    "pandapower.shortcircuit.impedance._calc_rx",
    "pandapower.shortcircuit.impedance._calc_ybus",
    "pandapower.shortcircuit.impedance._calc_zbus",
    "pandapower.shortcircuit.results._extract_single_results"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc._calc_single_bus_sc": {
  "data": {
   "shadows": "pandapower.shortcircuit.currents._calc_single_bus_sc"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_ybus": {
  "data": {
   "shadows": "pandapower.shortcircuit.impedance._calc_ybus"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._calc_zbus": {
  "data": {
   "shadows": "pandapower.shortcircuit.impedance._calc_zbus"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._clean_up": {
  "data": {
   "shadows": "pandapower.auxiliary._clean_up"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._copy_results_ppci_to_ppc": {
  "data": {
   "shadows": "pandapower.results._copy_results_ppci_to_ppc"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._extract_results": {
  "data": {
   "shadows": "pandapower.shortcircuit.results._extract_results"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._extract_single_results": {
  "data": {
   "shadows": "pandapower.shortcircuit.results._extract_single_results"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc._pd2ppc_zero": {
  "data": {
   "shadows": "pandapower.pd2ppc_zero._pd2ppc_zero"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc.calc_sc": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "len",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.auxiliary._add_sc_options",
    "pandapower.results.init_results",
    "pandapower.shortcircuit.calc_sc._calc_sc",
    "pandapower.shortcircuit.calc_sc._calc_sc_1ph",
    "pandapower.shortcircuit.calc_sc.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc.calc_single_sc": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.auxiliary._add_sc_options",
    "pandapower.shortcircuit.calc_sc._calc_sc_single"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc.init_results": {
  "data": {
   "shadows": "pandapower.results.init_results"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_sc.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.calc_sc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.calc_single_sc": {
  "data": {
   "shadows": "pandapower.shortcircuit.calc_sc.calc_single_sc"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.idx_brch": {
  "data": {
   "symbols_in_volume": [
    "pandapower.pypower.idx_brch.branch_cols"
   ]
  },
  "type": "module"
 },
 "pandapower.shortcircuit.idx_brch.IB_F": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IB_T": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IKSS_F": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IKSS_T": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IK_F": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IK_T": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IP_F": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.IP_T": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.ITH_F": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.ITH_T": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.branch_cols_sc": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_brch.start": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.branch_cols"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.idx_bus": {
  "data": {
   "symbols_in_volume": [
    "pandapower.pypower.idx_bus.bus_cols"
   ]
  },
  "type": "module"
 },
 "pandapower.shortcircuit.idx_bus.C_MAX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.C_MIN": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.IB": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.IK": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.IKCV": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.IKSS1": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.IKSS2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.IP": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.ITH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.KAPPA": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.M": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.R_EQUIV": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.X_EQUIV": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.bus_cols_sc": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandapower.shortcircuit.idx_bus.start": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.bus_cols"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandapower.shortcircuit.impedance.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance.R_EQUIV": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.R_EQUIV"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance.X_EQUIV": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.X_EQUIV"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance._calc_rx": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numpy.diag",
    "numpy.fill_diagonal",
    "numpy.square",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.shortcircuit.idx_bus.R_EQUIV",
    "pandapower.shortcircuit.idx_bus.X_EQUIV"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.impedance._calc_ybus": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isnan",
    "pandapower.pypower.makeYbus.makeYbus"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.impedance._calc_zbus": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandapower.shortcircuit.impedance.warnings",
    "scipy.linalg.inv",
    "scipy.sparse.linalg.inv"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.impedance.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance.inv_sparse": {
  "data": {
   "shadows": "scipy.sparse.linalg.inv"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance.makeYbus": {
  "data": {
   "shadows": "pandapower.pypower.makeYbus.makeYbus"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.impedance.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results": {
  "data": {},
  "type": "module"
 },
 "pandapower.shortcircuit.results.C_MAX": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.C_MAX"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.C_MIN": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.C_MIN"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IKSS1": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.IKSS1"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IKSS2": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.IKSS2"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IKSS_F": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.IKSS_F"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IKSS_T": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.IKSS_T"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IP": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.IP"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IP_F": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.IP_F"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.IP_T": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.IP_T"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.ITH": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_bus.ITH"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.ITH_F": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.ITH_F"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.ITH_T": {
  "data": {
   "shadows": "pandapower.shortcircuit.idx_brch.ITH_T"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results._extract_results": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandapower.shortcircuit.results._get_bus_results",
    "pandapower.shortcircuit.results._get_line_results",
    "pandapower.shortcircuit.results._get_trafo3w_results",
    "pandapower.shortcircuit.results._get_trafo_results"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._extract_single_results": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "numpy.float",
    "numpy.nan",
    "numpy.zeros",
    "pandapower.results._get_aranged_lookup",
    "pandapower.results._get_branch_results",
    "pandapower.shortcircuit.results._get_single_bus_results",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_aranged_lookup": {
  "data": {
   "shadows": "pandapower.results._get_aranged_lookup"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results._get_branch_results": {
  "data": {
   "shadows": "pandapower.results._get_branch_results"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results._get_bus_idx": {
  "data": {
   "shadows": "pandapower.results_bus._get_bus_idx"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results._get_bus_results": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pandapower.shortcircuit.idx_bus.IKSS1",
    "pandapower.shortcircuit.idx_bus.IKSS2",
    "pandapower.shortcircuit.idx_bus.IP",
    "pandapower.shortcircuit.idx_bus.ITH"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_line_results": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "minmax",
    "numpy.max",
    "numpy.min",
    "pandapower.shortcircuit.idx_brch.IKSS_F.real",
    "pandapower.shortcircuit.idx_brch.IKSS_T.real",
    "pandapower.shortcircuit.idx_brch.IP_F.real",
    "pandapower.shortcircuit.idx_brch.IP_T.real",
    "pandapower.shortcircuit.idx_brch.ITH_F.real",
    "pandapower.shortcircuit.idx_brch.ITH_T.real"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_single_bus_results": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.nan",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.results_bus._get_bus_idx",
    "pandapower.results_bus._set_buses_out_of_service",
    "pandapower.shortcircuit.idx_bus.C_MAX",
    "pandapower.shortcircuit.idx_bus.C_MIN"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_trafo3w_results": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "int",
    "pandapower.shortcircuit.idx_brch.IKSS_F.real",
    "pandapower.shortcircuit.idx_brch.IKSS_T.real"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_trafo_results": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandapower.shortcircuit.idx_brch.IKSS_F.real",
    "pandapower.shortcircuit.idx_brch.IKSS_T.real"
   ]
  },
  "type": "function"
 },
 "pandapower.shortcircuit.results._set_buses_out_of_service": {
  "data": {
   "shadows": "pandapower.results_bus._set_buses_out_of_service"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.shortcircuit.results.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.std_types": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.std_types.add_basic_std_types": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandapower.std_types.create_std_types"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.add_temperature_coefficient": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pandapower.std_types.parameter_from_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.add_zero_impedance_parameters": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pandapower.std_types.parameter_from_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.available_std_types": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "AttributeError",
    "pandapower.std_types.warnings",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.change_std_type": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pandapower.std_types.load_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.copy_std_types": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandapower.std_types.create_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.create_std_type": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.create_std_types": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandapower.std_types.create_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.delete_std_type": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.find_std_type_by_parameter": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "abs",
    "float",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.load_std_type": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.std_types.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.std_types.parameter_from_std_type": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandapower.std_types.load_std_type",
    "pandapower.std_types.std_type_exists",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.std_types.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.std_types.std_type_exists": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "pandapower.std_types.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandapower.test": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.api": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.api.test_auxiliary": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.api.test_auxiliary.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_auxiliary.GEOPANDAS_INSTALLED": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemo": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemo.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDF": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDF.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDict": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDict.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.get_indices": {
  "data": {
   "shadows": "pandapower.auxiliary.get_indices"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.pandapower.control": {
  "data": {
   "shadows": "pandapower.control"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.pandapower.networks": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.pandapower.timeseries": {
  "data": {
   "shadows": "pandapower.timeseries"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.shapely.geometry": {
  "data": {
   "shadows": "shapely.geometry"
  },
  "type": "import"
 },
 "pandapower.test.api.test_auxiliary.test_get_indices": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array_equal",
    "pandapower.auxiliary.get_indices",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leak_df": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pandapower.test.api.test_auxiliary.MemoryLeakDemoDF",
    "pandapower.test.api.test_auxiliary.gc",
    "pandapower.toolbox.get_gc_objects_dict",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leak_dict": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "dict",
    "pandapower.test.api.test_auxiliary.MemoryLeakDemoDict",
    "pandapower.test.api.test_auxiliary.gc",
    "pandapower.toolbox.get_gc_objects_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leak_no_copy_demo": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_auxiliary.MemoryLeakDemo",
    "pandapower.test.api.test_auxiliary.gc",
    "pandapower.toolbox.get_gc_objects_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leaks": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.control.ContinuousTapControl",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_auxiliary.copy",
    "pandapower.test.api.test_auxiliary.gc",
    "pandapower.toolbox.get_gc_objects_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leaks_demo": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_auxiliary.MemoryLeakDemo",
    "pandapower.test.api.test_auxiliary.copy",
    "pandapower.test.api.test_auxiliary.gc",
    "pandapower.toolbox.get_gc_objects_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leaks_no_copy": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pandapower.auxiliary.pandapowerNet",
    "pandapower.control.ConstControl",
    "pandapower.create_empty_network",
    "pandapower.test.api.test_auxiliary.gc",
    "pandapower.toolbox.get_gc_objects_dict",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_net_deepcopy": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "isinstance",
    "pandapower.control.ConstControl",
    "pandapower.control.ContinuousTapControl",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_auxiliary.GEOPANDAS_INSTALLED",
    "pandapower.test.api.test_auxiliary.copy",
    "pandapower.timeseries.DFData",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_convert_format": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.pp_dir",
    "pandapower.test.api.test_convert_format.folder",
    "pandapower.test.api.test_convert_format.os",
    "pandapower.test.api.test_convert_format.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_convert_format.folder": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.test.api.test_convert_format.found_versions": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandapower.test.api.test_convert_format.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_convert_format.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.api.test_convert_format.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_convert_format.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.test.api.test_convert_format.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_convert_format.test_convert_format": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "len",
    "numpy.allclose",
    "pandapower.convert_format",
    "pandapower.from_json",
    "pandapower.runpp",
    "pandapower.test.api.test_convert_format.folder",
    "pandapower.test.api.test_convert_format.found_versions",
    "pandapower.test.api.test_convert_format.os",
    "pandapower.test.api.test_convert_format.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.api.test_create.pytest",
    "pandas.set_option"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_create.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_create.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandapower.test.api.test_create.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.api.test_create.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_create.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_create.test_convenience_create_functions": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.isclose",
    "numpy.sqrt",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_load_from_cosphi",
    "pandapower.create_series_reactor_as_impedance",
    "pandapower.create_sgen_from_cosphi",
    "pandapower.create_shunt_as_capacitor",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runpp",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_buses": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_gens": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "all",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gens"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_gens_raise_except": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gens",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_line_alpha_temperature": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "all",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_line_from_parameters"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_line_conductance": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_lines": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_lines",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_lines_from_parameters": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "all",
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_lines_from_parameters"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_lines_raise_except": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_lines_from_parameters",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_loads": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "all",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_loads"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_loads_raise_except": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_loads",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_sgens": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "all",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_sgens"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_sgens_raise_except": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_sgens",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_switches": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switches",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_switches_raise_except": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.create_switches",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers3w_from_parameters": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "all",
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_transformers3w_from_parameters"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers3w_raise_except": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_transformers3w_from_parameters",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers_from_parameters": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "all",
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_transformers_from_parameters",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers_raise_except": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_transformers_from_parameters",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_nonexistent_bus": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "func",
    "functools.partial",
    "pandapower.create_bus",
    "pandapower.create_dcline",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_impedance",
    "pandapower.create_line",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_shunt",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.create_transformer_from_parameters",
    "pandapower.create_ward",
    "pandapower.create_xward",
    "pandapower.test.api.test_create.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_create.test_tap_phase_shifter_default": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_std_type",
    "pandapower.create_transformer",
    "pandapower.create_transformer_from_parameters",
    "pandapower.load_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.api.test_diagnostic.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_diagnostic.DiagnosticReports": {
  "data": {
   "shadows": "pandapower.diagnostic_reports.DiagnosticReports"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues": {
  "data": {
   "lineno": 80
  },
  "type": "class"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_between_zero_and_one": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_boolean": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_greater_equal_zero": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_greater_zero": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "eval",
    "numpy.nan",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_number": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "eval",
    "numpy.nan",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_pos_int": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "eval",
    "numpy.nan",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_switch_type": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.invalid_values",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.diag_errors": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.test.api.test_diagnostic.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.diag_params": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandapower.test.api.test_diagnostic.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.numba_installed": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandapower.test.api.test_diagnostic.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_diagnostic.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandapower.test.api.test_diagnostic.report_methods": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandapower.test.api.test_diagnostic.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_deviation_from_std_type": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "eval",
    "pandapower.change_std_type",
    "pandapower.deviation_from_std_type",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_different_voltage_levels_connected": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "eval",
    "pandapower.create_switch",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.different_voltage_levels_connected",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_disconnected_elements": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.disconnected_elements",
    "pandapower.drop_trafos",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_impedance_values_close_to_zero": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.impedance_values_close_to_zero",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_missing_bus_indices": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.missing_bus_indices",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_multiple_voltage_controlling_elements_per_bus": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "eval",
    "pandapower.create_ext_grid",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.multiple_voltage_controlling_elements_per_bus",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_net": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandapower.networks.example_multivoltage",
    "pandapower.test.api.test_diagnostic.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_no_ext_grid": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "pandapower.no_ext_grid",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_no_issues": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_nominal_voltages_dont_match": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.nominal_voltages_dont_match",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_numba_comparison": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.numba_comparison",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.numba_installed",
    "pandapower.test.api.test_diagnostic.pytest",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_overload": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.overload",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_parallel_switches": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "eval",
    "pandapower.create_switch",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.parallel_switches",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_runpp_errors": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "pandapower.diagnostic",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_switch_configuration": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net",
    "pandapower.wrong_switch_configuration"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_wrong_reference_system": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "eval",
    "pandapower.diagnostic_reports.DiagnosticReports",
    "pandapower.test.api.test_diagnostic.copy",
    "pandapower.test.api.test_diagnostic.diag_errors",
    "pandapower.test.api.test_diagnostic.diag_params",
    "pandapower.test.api.test_diagnostic.report_methods",
    "pandapower.test.api.test_diagnostic.test_net",
    "pandapower.wrong_reference_system"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.api.test_file_io.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_file_io.DFData": {
  "data": {
   "shadows": "pandapower.timeseries.DFData"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.LineString": {
  "data": {
   "shadows": "shapely.geometry.LineString"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.PPJSONDecoder": {
  "data": {
   "shadows": "pandapower.io_utils.PPJSONDecoder"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.PPJSONEncoder": {
  "data": {
   "shadows": "pandapower.io_utils.PPJSONEncoder"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.Point": {
  "data": {
   "shadows": "shapely.geometry.Point"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.assert_graphs_equal": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.assert_net_equal": {
  "data": {
   "shadows": "pandapower.test.toolbox.assert_net_equal"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.control": {
  "data": {
   "shadows": "pandapower.control"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.create_test_network": {
  "data": {
   "shadows": "pandapower.test.toolbox.create_test_network"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.cryptography.fernet": {
  "data": {
   "shadows": "cryptography.fernet"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.from_epsg": {
  "data": {
   "shadows": "fiona.crs.from_epsg"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.net_in": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandapower.test.api.test_file_io.pytest",
    "pandapower.test.toolbox.create_test_network"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.networks": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_file_io.test_convert_format": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandapower.from_pickle",
    "pandapower.pp_dir",
    "pandapower.runpp",
    "pandapower.test.api.test_file_io.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_convert_format_for_pp_objects": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "hasattr",
    "pandapower.control.ContinuousTapControl",
    "pandapower.control.DiscreteTapControl",
    "pandapower.create_transformer",
    "pandapower.from_json_string",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.test.api.test_file_io.json",
    "pandapower.test.api.test_file_io.net_in"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_dataframes_with_integer_columns": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "all",
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.test.api.test_file_io.json",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_deepcopy_controller": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "pandapower.control.ContinuousTapControl",
    "pandapower.networks.mv_oberrhein",
    "pandapower.test.api.test_file_io.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_encrypted_json": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.test.api.test_file_io.json",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.api.test_file_io.pytest",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_excel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandapower.from_excel",
    "pandapower.set_user_pf_options",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.to_excel",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "fiona.crs.from_epsg",
    "geopandas.GeoDataFrame",
    "isinstance",
    "pandapower.from_json",
    "pandapower.test.api.test_file_io.copy",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.to_json",
    "shapely.geometry.LineString",
    "shapely.geometry.Point",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_basic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "open",
    "pandapower.convert_format",
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.test.api.test_file_io.json",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_controller_none": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.from_json",
    "pandapower.pp_dir",
    "pandapower.test.api.test_file_io.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_encoding_decoding": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "frozenset",
    "numpy.allclose",
    "numpy.array",
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.nets_equal",
    "pandapower.networks.mv_oberrhein",
    "pandapower.test.api.test_file_io.assert_graphs_equal",
    "pandapower.test.api.test_file_io.json",
    "pandapower.topology.create_nxgraph",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_io_same_net": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "pandapower.control.ConstControl",
    "pandapower.from_json",
    "pandapower.from_json_string",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_tuple_in_pandas": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.test.api.test_file_io.json",
    "pandapower.test.api.test_file_io.pytest",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_new_pp_object_io": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandapower.control.ConstControl",
    "pandapower.control.ContinuousTapControl",
    "pandapower.io_utils.PPJSONDecoder",
    "pandapower.io_utils.PPJSONEncoder",
    "pandapower.networks.mv_oberrhein",
    "pandapower.runpp",
    "pandapower.test.api.test_file_io.json",
    "pandapower.timeseries.DFData",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_pickle": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandapower.from_pickle",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.to_pickle",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_sqlite": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pandapower.from_sqlite",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.to_sqlite",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_to_json_dtypes": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.runpp",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.test.toolbox.create_test_network",
    "pandapower.to_json",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_type_casting_json": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandapower.from_json",
    "pandapower.test.api.test_file_io.net_in",
    "pandapower.test.api.test_file_io.os",
    "pandapower.test.toolbox.assert_net_equal",
    "pandapower.to_json",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_file_io.topology": {
  "data": {
   "shadows": "pandapower.topology"
  },
  "type": "import"
 },
 "pandapower.test.api.test_std_types": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.api.test_std_types.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_std_types.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.api.test_std_types.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_std_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_std_types.test_add_temperature_coefficient": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "all",
    "pandapower.add_temperature_coefficient",
    "pandapower.networks.simple_mv_open_ring_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_change_type_line": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "pandapower.change_std_type",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_and_load_std_type_line": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_empty_network",
    "pandapower.create_std_type",
    "pandapower.load_std_type",
    "pandapower.test.api.test_std_types.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_and_load_std_type_trafo": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_empty_network",
    "pandapower.create_std_type",
    "pandapower.load_std_type",
    "pandapower.test.api.test_std_types.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_and_load_std_type_trafo3w": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_empty_network",
    "pandapower.create_std_type",
    "pandapower.load_std_type",
    "pandapower.test.api.test_std_types.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_from_net_line": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandapower.copy_std_types",
    "pandapower.create_empty_network",
    "pandapower.create_std_type",
    "pandapower.std_type_exists"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_line": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.create_std_types"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_trafo": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.create_std_types"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_trafo3w": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.create_std_types"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_find_line_type": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "len",
    "pandapower.create_empty_network",
    "pandapower.create_std_type",
    "pandapower.find_std_type_by_parameter"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_parameter_from_std_type_line": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_line_from_parameters",
    "pandapower.create_std_type",
    "pandapower.parameter_from_std_type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.api.test_toolbox.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.api.test_toolbox.add_virtual_meas_from_loadflow": {
  "data": {
   "shadows": "pandapower.estimation.util.add_virtual_meas_from_loadflow"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.net": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_impedance",
    "pandapower.create_line",
    "pandapower.create_line_from_parameters",
    "pandapower.test.api.test_toolbox.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.tb": {
  "data": {
   "shadows": "pandapower.toolbox"
  },
  "type": "import"
 },
 "pandapower.test.api.test_toolbox.test_add_column_from_element_to_elements": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "all",
    "numpy.append",
    "numpy.array",
    "pandapower.add_column_from_element_to_elements",
    "pandapower.compare_arrays",
    "pandapower.create_measurement",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.test.api.test_toolbox.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_column_from_node_to_elements": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "check_subnet_correctness",
    "pandapower.add_column_from_node_to_elements",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.pp_elements",
    "pandapower.test.api.test_toolbox.copy",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_column_from_node_to_elements.check_subnet_correctness": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "all",
    "numpy.array",
    "pandapower.compare_arrays"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_zones_to_elements": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.toolbox.add_zones_to_elements"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_all": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.replace_zero_branches_with_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_clear_result_tables": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandapower.clear_result_tables",
    "pandapower.networks.case9",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_close_switch_at_line_with_two_open_switches": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.toolbox.close_switch_at_line_with_two_open_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_continuos_bus_numbering": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "AttributeError",
    "all",
    "len",
    "list",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_shunt",
    "pandapower.create_ward",
    "pandapower.toolbox.create_continuous_bus_index",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_continuous_element_numbering": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.example_multivoltage",
    "pandapower.runpp",
    "pandapower.toolbox.create_continuous_elements_index"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_cosphi_from_pq": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "all",
    "numpy.allclose",
    "numpy.array",
    "numpy.isclose",
    "pandapower.cosphi_from_pq",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_create_replacement_switch_for_branch": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_impedance",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.toolbox.create_replacement_switch_for_branch"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "len",
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.replace_zero_branches_with_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_elements_at_buses": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w",
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.drop_elements_at_buses"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_inactive_elements": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.toolbox.drop_inactive_elements",
    "pandas.DataFrame",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_inner_branches": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "all",
    "check_elm_number",
    "pandapower.create_bus",
    "pandapower.create_transformer3w",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_toolbox.copy",
    "pandapower.toolbox.drop_inner_branches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_inner_branches.check_elm_number": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pandapower.pp_elements",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_for_line_with_zero_length": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.replace_zero_branches_with_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_fuse_buses": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "list",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_measurement",
    "pandapower.create_switch",
    "pandapower.test.api.test_toolbox.copy",
    "pandapower.toolbox.fuse_buses"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_connected_buses": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "list",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w",
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.get_connected_buses"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_connected_elements_dict": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "pandapower.get_connected_elements_dict",
    "pandapower.networks.example_simple",
    "pandapower.test.api.test_toolbox.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_connected_lines_at_bus": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.toolbox.get_connected_elements",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_element_indices": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "pandapower.get_element_indices",
    "pandapower.networks.example_multivoltage",
    "pandapower.test.api.test_toolbox.net",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_impedance": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.replace_zero_branches_with_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_impedance_line_replacement": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_impedance",
    "pandapower.create_load",
    "pandapower.nets_equal",
    "pandapower.replace_impedance_by_line",
    "pandapower.replace_line_by_impedance",
    "pandapower.runpp",
    "pandapower.test.api.test_toolbox.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_in_service_only": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "len",
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.replace_zero_branches_with_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_line_with_zero_impediance": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.replace_zero_branches_with_switches"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_merge_and_split_nets": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "pandapower.dataframes_equal",
    "pandapower.merge_nets",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.networks.mv_oberrhein",
    "pandapower.runpp",
    "pandapower.select_subnet",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_nets_equal": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.networks.create_cigre_network_lv",
    "pandapower.test.api.test_toolbox.copy",
    "pandapower.toolbox.logger.setLevel",
    "pandapower.toolbox.nets_equal"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_next_bus": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w",
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.next_bus"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_opf_task": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "numpy.isnan",
    "numpy.nan",
    "pandapower.create_buses",
    "pandapower.create_dcline",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.create_sgen",
    "pandapower.create_storage",
    "pandapower.create_transformer",
    "pandapower.dataframes_equal",
    "pandapower.opf_task",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_overloaded_lines": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.toolbox.overloaded_lines",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_pq_from_cosphi": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.array",
    "numpy.isclose",
    "pandapower.pq_from_cosphi"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_reindex_buses": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "pandapower.networks.example_simple",
    "pandapower.reindex_buses",
    "pandas.DataFrame",
    "pandas.Series",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_reindex_elements": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.example_simple",
    "pandapower.reindex_elements",
    "pandapower.test.api.test_toolbox.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_repl_to_line": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.change_std_type",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp",
    "pandapower.test.api.test_toolbox.net",
    "pandapower.toolbox.repl_to_line"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_ext_grid_gen": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "any",
    "list",
    "numpy.allclose",
    "numpy.isclose",
    "pandapower.networks.example_simple",
    "pandapower.replace_ext_grid_by_gen",
    "pandapower.replace_gen_by_ext_grid",
    "pandapower.runpp",
    "pandapower.test.api.test_toolbox.net",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_gen_sgen": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "list",
    "numpy.allclose",
    "pandapower.nets_equal",
    "pandapower.networks.case9",
    "pandapower.replace_gen_by_sgen",
    "pandapower.replace_sgen_by_gen",
    "pandapower.runpp",
    "pandapower.test.api.test_toolbox.copy",
    "pandapower.test.api.test_toolbox.net",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_ward_by_internal_elements": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_ward",
    "pandapower.networks.example_simple",
    "pandapower.replace_ward_by_internal_elements",
    "pandapower.runpp",
    "pandapower.test.api.test_toolbox.copy",
    "pandapower.test.api.test_toolbox.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_xward_by_internal_elements": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "abs",
    "max",
    "pandapower.create_xward",
    "pandapower.networks.example_simple",
    "pandapower.replace_xward_by_internal_elements",
    "pandapower.runpp",
    "pandapower.test.api.test_toolbox.copy",
    "pandapower.test.api.test_toolbox.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_scaling_by_type": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.toolbox.set_scaling_by_type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_select_subnet": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "len",
    "pandapower.dataframes_equal",
    "pandapower.networks.create_cigre_network_lv",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.select_subnet",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_violated_buses": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "pandapower.networks.create_cigre_network_lv",
    "pandapower.runpp",
    "pandapower.toolbox.violated_buses",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.test.conftest": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.conftest.result_test_network"
   ]
  },
  "type": "module"
 },
 "pandapower.test.conftest.net": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pandapower.test.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.conftest.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.conftest.result_test_network": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandapower.runpp",
    "pandapower.test.conftest.pytest",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator"
   ]
  },
  "type": "function"
 },
 "pandapower.test.conftest.result_test_network_generator": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator"
  },
  "type": "import"
 },
 "pandapower.test.conftest.simple_network": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer",
    "pandapower.test.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.control.test_const_control": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pandapower.test.control.test_const_control.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.control.test_const_control.log": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.test.control.test_const_control.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.pandapower.control": {
  "data": {
   "shadows": "pandapower.control"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.pandapower.timeseries": {
  "data": {
   "shadows": "pandapower.timeseries"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.control.test_const_control.test_write": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.control.ConstControl",
    "pandapower.create_sgen",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.timeseries.DFData",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_continous_tap_control": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pandapower.test.control.test_continous_tap_control.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.control.test_continous_tap_control.ContinuousTapControl": {
  "data": {
   "shadows": "pandapower.control.ContinuousTapControl"
  },
  "type": "import"
 },
 "pandapower.test.control.test_continous_tap_control.log": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.control.test_continous_tap_control.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.test.control.test_continous_tap_control.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.control.test_continous_tap_control.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.control.test_continous_tap_control.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.control.test_continous_tap_control.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.control.test_continous_tap_control.test_continuous_tap_control_hv": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.control.ContinuousTapControl",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp",
    "pandapower.test.control.test_continous_tap_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_continous_tap_control.test_continuous_tap_control_lv": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.control.ContinuousTapControl",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp",
    "pandapower.set_user_pf_options",
    "pandapower.test.control.test_continous_tap_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.CRITICAL",
    "logging.getLogger",
    "pandapower.test.control.test_control.logger",
    "pandapower.test.control.test_control.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.control.test_control.ContinuousTapControl": {
  "data": {
   "shadows": "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.Controller": {
  "data": {
   "shadows": "pandapower.control.basic_controller.Controller"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.DummyController": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.Controller"
   ]
  },
  "type": "class"
 },
 "pandapower.test.control.test_control.DummyController.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.DummyController.control_step": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.DummyController.initialize_control": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.DummyController.is_converged": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.OutputWriter": {
  "data": {
   "shadows": "pandapower.timeseries.output_writer.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.TrafoController": {
  "data": {
   "shadows": "pandapower.control.controller.trafo_control.TrafoController"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.ct": {
  "data": {
   "shadows": "pandapower.control"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.ctrl_logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pandapower.test.control.test_control.get_controller_order": {
  "data": {
   "shadows": "pandapower.control.run_control.get_controller_order"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pandapower.test.control.test_control.net": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandapower.create_sgen",
    "pandapower.networks.create_kerber_vorstadtnetz_kabel_1",
    "pandapower.test.control.test_control.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.networks": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.run_timeseries": {
  "data": {
   "shadows": "pandapower.timeseries.run_time_series.run_timeseries"
  },
  "type": "import"
 },
 "pandapower.test.control.test_control.test_add_get_controller": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ControllerTester",
    "pandapower.test.control.test_control.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.Controller"
   ]
  },
  "type": "class"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandapower.test.control.test_control.net",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.control_step": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.is_converged": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.time_step": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_conflicting_controllers": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandapower.control.ControllerNotConverged",
    "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl",
    "pandapower.runpp",
    "pandapower.test.control.test_control.net",
    "pandapower.test.control.test_control.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "DivergentController",
    "enumerate",
    "pandapower.control.ControllerNotConverged",
    "pandapower.test.control.test_control.net",
    "pandapower.test.control.test_control.pytest",
    "pandapower.timeseries.output_writer.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandapower.control.basic_controller.Controller"
   ]
  },
  "type": "class"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandapower.test.control.test_control.net",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController.is_converged": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController.time_step": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_in_service_bool": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pandapower.control.controller.trafo_control.TrafoController",
    "pandapower.runpp",
    "pandapower.test.control.test_control.copy",
    "pandapower.test.control.test_control.net",
    "pandapower.test.control.test_control.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_level": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandapower.runpp",
    "pandapower.test.control.test_control.DummyController",
    "pandapower.test.control.test_control.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_level_in_service": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "pandapower.control.run_control.get_controller_order",
    "pandapower.runpp",
    "pandapower.test.control.test_control.DummyController",
    "pandapower.test.control.test_control.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_control.test_multiple_levels": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "pandapower.control.basic_controller.Controller",
    "pandapower.control.controller.trafo_control.TrafoController",
    "pandapower.control.run_control.get_controller_order",
    "pandapower.runpp",
    "pandapower.test.control.test_control.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_discrete_tap_control": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger",
    "pandapower.test.control.test_discrete_tap_control.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.control.test_discrete_tap_control.DiscreteTapControl": {
  "data": {
   "shadows": "pandapower.control.DiscreteTapControl"
  },
  "type": "import"
 },
 "pandapower.test.control.test_discrete_tap_control.log": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.control.test_discrete_tap_control.logger": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pandapower.test.control.test_discrete_tap_control.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.control.test_discrete_tap_control.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.control.test_discrete_tap_control.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.control.test_discrete_tap_control.test_discrete_tap_control_hv": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandapower.control.DiscreteTapControl",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp",
    "pandapower.set_user_pf_options",
    "pandapower.test.control.test_discrete_tap_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.control.test_discrete_tap_control.test_discrete_tap_control_lv": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandapower.control.DiscreteTapControl",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp",
    "pandapower.set_user_pf_options",
    "pandapower.test.control.test_discrete_tap_control.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.converter.test_from_mpc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.converter.test_from_mpc.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.converter.test_from_mpc.from_mpc": {
  "data": {
   "shadows": "pandapower.converter.from_mpc"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_mpc.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.test.converter.test_from_mpc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_mpc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_mpc.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_mpc.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_mpc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_mpc.test_from_mpc": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandapower.converter.from_mpc",
    "pandapower.nets_equal",
    "pandapower.networks.case24_ieee_rts",
    "pandapower.pp_dir",
    "pandapower.runpp",
    "pandapower.set_user_pf_options",
    "pandapower.test.converter.test_from_mpc.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.converter.test_from_ppc.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.converter.test_from_ppc.c24": {
  "data": {
   "shadows": "pypower.case24_ieee_rts"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.from_ppc": {
  "data": {
   "shadows": "pandapower.converter.from_ppc"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.get_testgrids": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "open",
    "pandapower.pp_dir",
    "pandapower.test.converter.test_from_ppc.os",
    "pandapower.test.converter.test_from_ppc.pickle"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandapower.test.converter.test_from_ppc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.max_diff_values1": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pandapower.test.converter.test_from_ppc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.pypower_installed": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.test.converter.test_from_ppc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.test_case24": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pandapower.converter.from_ppc",
    "pandapower.runopp",
    "pandapower.test.converter.test_from_ppc.pypower_installed",
    "pandapower.test.converter.test_from_ppc.pytest",
    "pypower.case24_ieee_rts.case24_ieee_rts"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_case9_conversion": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pandapower.converter.from_ppc",
    "pandapower.converter.to_ppc",
    "pandapower.nets_equal",
    "pandapower.networks.case9",
    "pandapower.runopp",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_from_ppc": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "len",
    "pandapower.converter.from_ppc",
    "pandapower.from_json",
    "pandapower.nets_equal",
    "pandapower.pp_dir",
    "pandapower.runpp",
    "pandapower.set_user_pf_options",
    "pandapower.test.converter.test_from_ppc.get_testgrids",
    "pandapower.test.converter.test_from_ppc.os",
    "type"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_ppc_testgrids": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandapower.converter.from_ppc",
    "pandapower.converter.validate_from_ppc",
    "pandapower.test.converter.test_from_ppc.get_testgrids",
    "pandapower.test.converter.test_from_ppc.logger",
    "pandapower.test.converter.test_from_ppc.max_diff_values1"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_pypower_cases": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pandapower.converter.from_ppc",
    "pandapower.converter.validate_from_ppc",
    "pandapower.test.converter.test_from_ppc.get_testgrids",
    "pandapower.test.converter.test_from_ppc.logger",
    "pandapower.test.converter.test_from_ppc.max_diff_values1",
    "pandapower.test.converter.test_from_ppc.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_validate_from_ppc": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandapower.converter.validate_from_ppc",
    "pandapower.from_json",
    "pandapower.pp_dir",
    "pandapower.test.converter.test_from_ppc.get_testgrids",
    "pandapower.test.converter.test_from_ppc.max_diff_values1",
    "pandapower.test.converter.test_from_ppc.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.to_ppc": {
  "data": {
   "shadows": "pandapower.converter.to_ppc"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_from_ppc.validate_from_ppc": {
  "data": {
   "shadows": "pandapower.converter.validate_from_ppc"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.converter.test_to_ppc_and_mpc.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.BUS_I": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_I"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.LoadflowNotConverged": {
  "data": {
   "shadows": "pandapower.powerflow.LoadflowNotConverged"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc._runpf_pypower": {
  "data": {
   "shadows": "pandapower.pf.runpf_pypower._runpf_pypower"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.cv": {
  "data": {
   "shadows": "pandapower.converter"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.get_testgrids": {
  "data": {
   "shadows": "pandapower.test.converter.test_from_ppc.get_testgrids"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.reset_results": {
  "data": {
   "shadows": "pandapower.results.reset_results"
  },
  "type": "import"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.test_to_ppc_and_mpc": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "__import__",
    "getattr",
    "int",
    "numpy.allclose",
    "pandapower.converter.to_mpc",
    "pandapower.converter.to_ppc",
    "pandapower.pf.runpf_pypower._runpf_pypower",
    "pandapower.powerflow.LoadflowNotConverged",
    "pandapower.pypower.idx_bus.BUS_I.astype",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM",
    "pandapower.results.reset_results",
    "pandapower.runpp",
    "pandapower.test.converter.test_from_ppc.get_testgrids",
    "pandapower_function"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.estimation.test_conditions": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.estimation.test_conditions.create_net_with_bb_switch": {
  "data": {
   "shadows": "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_conditions.estimate": {
  "data": {
   "shadows": "pandapower.estimation.estimate"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_conditions.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_conditions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_conditions.test_no_observability": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "UserWarning",
    "int",
    "len",
    "pandapower.estimation.estimate",
    "pandapower.test.estimation.test_conditions.pytest",
    "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_none_net": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.estimation.estimate",
    "pandapower.test.estimation.test_conditions.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_nonexistant_alg": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.estimation.estimate",
    "pandapower.test.estimation.test_conditions.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_wrong_fuse_setting": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.estimation.estimate",
    "pandapower.test.estimation.test_conditions.pytest",
    "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_wrong_init": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.estimation.estimate",
    "pandapower.test.estimation.test_conditions.pytest",
    "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_wrong_zero_inj": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.estimation.estimate",
    "pandapower.test.estimation.test_conditions.pytest",
    "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_irwls_estimation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.estimation.test_irwls_estimation.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.estimation.test_irwls_estimation.SHGMEstimatorIRWLS": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.add_virtual_meas_from_loadflow": {
  "data": {
   "shadows": "pandapower.estimation.util.add_virtual_meas_from_loadflow"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.estimate": {
  "data": {
   "shadows": "pandapower.estimation.estimate"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.pp2eppci": {
  "data": {
   "shadows": "pandapower.estimation.ppc_conversion.pp2eppci"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_irwls_estimation.test_irwls_comp_wls": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "copy.deepcopy",
    "numpy.allclose",
    "pandapower.estimation.estimate",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case14",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_irwls_estimation.test_irwls_shgm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.estimation.estimate",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case14",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_irwls_estimation.test_shgm_ps": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS",
    "pandapower.estimation.ppc_conversion.pp2eppci",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case14",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.estimation.test_opt_lp_estimation.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.OptAlgorithm": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.optimization.OptAlgorithm"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.WLSAlgorithm": {
  "data": {
   "shadows": "pandapower.estimation.algorithm.base.WLSAlgorithm"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.add_virtual_meas_from_loadflow": {
  "data": {
   "shadows": "pandapower.estimation.util.add_virtual_meas_from_loadflow"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.eppci2pp": {
  "data": {
   "shadows": "pandapower.estimation.results.eppci2pp"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.estimate": {
  "data": {
   "shadows": "pandapower.estimation.estimate"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.pp2eppci": {
  "data": {
   "shadows": "pandapower.estimation.ppc_conversion.pp2eppci"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_case9_compare_classical_wls_opt_wls": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AssertionError",
    "copy.deepcopy",
    "numpy.allclose",
    "pandapower.estimation.algorithm.base.WLSAlgorithm",
    "pandapower.estimation.algorithm.optimization.OptAlgorithm",
    "pandapower.estimation.estimate",
    "pandapower.estimation.ppc_conversion.pp2eppci",
    "pandapower.estimation.results.eppci2pp",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case9",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_lp_lav": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose",
    "pandapower.estimation.estimate",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case9",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_opt_lav": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose",
    "pandapower.estimation.algorithm.base.WLSAlgorithm",
    "pandapower.estimation.algorithm.optimization.OptAlgorithm",
    "pandapower.estimation.ppc_conversion.pp2eppci",
    "pandapower.estimation.results.eppci2pp",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case9",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_ql_qc": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose",
    "pandapower.estimation.algorithm.base.WLSAlgorithm",
    "pandapower.estimation.algorithm.optimization.OptAlgorithm",
    "pandapower.estimation.ppc_conversion.pp2eppci",
    "pandapower.estimation.results.eppci2pp",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case9",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_pmu": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.estimation.test_pmu.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.estimation.test_pmu.add_virtual_pmu_meas_from_loadflow": {
  "data": {
   "shadows": "pandapower.estimation.util.add_virtual_pmu_meas_from_loadflow"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_pmu.estimate": {
  "data": {
   "shadows": "pandapower.estimation.estimate"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_pmu.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_pmu.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_pmu.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_pmu.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_pmu.run_se_lp_verify": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose",
    "pandapower.estimation.estimate"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_pmu.test_pmu_case14": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandapower.estimation.util.add_virtual_pmu_meas_from_loadflow",
    "pandapower.networks.case14",
    "pandapower.runpp",
    "pandapower.test.estimation.test_pmu.run_se_lp_verify"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_pmu.test_pmu_with_trafo3w": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer3w",
    "pandapower.estimation.util.add_virtual_pmu_meas_from_loadflow",
    "pandapower.runpp",
    "pandapower.test.estimation.test_pmu.run_se_lp_verify"
   ]
  },
  "type": "function"
 },
 "pandapower.test.estimation.test_recycle": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.estimation.test_recycle.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.estimation.test_recycle.StateEstimation": {
  "data": {
   "shadows": "pandapower.estimation.StateEstimation"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.add_virtual_meas_from_loadflow": {
  "data": {
   "shadows": "pandapower.estimation.util.add_virtual_meas_from_loadflow"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.estimate": {
  "data": {
   "shadows": "pandapower.estimation.estimate"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.estimation.test_recycle.test_recycle_case30": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.estimation.StateEstimation",
    "pandapower.estimation.util.add_virtual_meas_from_loadflow",
    "pandapower.networks.case30",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.loadflow.PF_Results": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.loadflow.PF_Results.get_PF_Results": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.PF_Results.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_PTDF_LODF.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_PTDF_LODF._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.toolbox.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.assert_net_equal": {
  "data": {
   "shadows": "pandapower.test.toolbox.assert_net_equal"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.create_test_line": {
  "data": {
   "shadows": "pandapower.test.toolbox.create_test_line"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.makeLODF": {
  "data": {
   "shadows": "pandapower.pypower.makeLODF.makeLODF"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.makePTDF": {
  "data": {
   "shadows": "pandapower.pypower.makePTDF.makePTDF"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.result_test_network_generator_dcpp": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.test_LODF": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "AssertionError",
    "pandapower.networks.case9",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pypower.makeLODF.makeLODF",
    "pandapower.pypower.makePTDF.makePTDF",
    "pandapower.rundcpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.test_PTDF": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.all",
    "numpy.allclose",
    "numpy.isnan",
    "pandapower.networks.case9",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pypower.makePTDF.makePTDF",
    "pandapower.rundcpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_recycle.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_recycle.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.nets_equal": {
  "data": {
   "shadows": "pandapower.nets_equal"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.recycle_net": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.test.add_grid_connection",
    "pandapower.test.loadflow.test_recycle.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.runpp_with_consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_gen": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict",
    "numpy.allclose",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_recycle.recycle_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_pq": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "numpy.allclose",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_recycle.recycle_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_trafo": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_transformer",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_recycle.recycle_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_trafo_bus_gen": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "dict",
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_transformer",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_recycle.recycle_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_result_index_unsorted": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dict",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.nets_equal",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_recycle.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_results.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_results.add_test_enforce_qlims": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_enforce_qlims"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.add_test_gen": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_gen"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.in1d": {
  "data": {
   "shadows": "numpy.in1d"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.isnan": {
  "data": {
   "shadows": "numpy.isnan"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.runpp_with_consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_results.test_bus_bus_switch": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_enforce_q_lims": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_empty_network",
    "pandapower.runpp",
    "pandapower.test.loadflow.result_test_network_generator.add_test_enforce_qlims",
    "pandapower.test.loadflow.result_test_network_generator.add_test_gen"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_enforce_qlims": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "abs",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_ext_grid": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "abs",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_gen": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_impedance": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "abs",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_line": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_load_sgen": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_load_sgen_split": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_open": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "numpy.in1d",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_shunt": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_shunt_split": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_trafo": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "abs",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_trafo3w": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "abs",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_ward": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_ward_split": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_xward": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_xward_combination": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_rundcpp.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_rundcpp._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp._check_connectivity": {
  "data": {
   "shadows": "pandapower.auxiliary._check_connectivity"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.toolbox.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.assert_net_equal": {
  "data": {
   "shadows": "pandapower.test.toolbox.assert_net_equal"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.create_test_line": {
  "data": {
   "shadows": "pandapower.test.toolbox.create_test_line"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.get_isolated": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.auxiliary._check_connectivity",
    "pandapower.pd2ppc._pd2ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.result_test_network_generator_dcpp": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.rundcpp_with_consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.rundcpp_with_consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_rundcpp.test_missing_gen": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.case4gs",
    "pandapower.rundcpp",
    "pandapower.test.loadflow.test_rundcpp.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_result_iter": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "pandapower.LoadflowNotConverged",
    "pandapower.test.consistency_checks.rundcpp_with_consistency_checks",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_rundcpp_init": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_transformer",
    "pandapower.rundcpp",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_rundcpp_init_auxiliary_buses": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_transformer3w",
    "pandapower.create_xward",
    "pandapower.rundcpp",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_single_bus_network": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.rundcpp",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_test_sn_mva": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.rundcpp",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp",
    "pandapower.test.toolbox.assert_net_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_two_open_switches": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_switch",
    "pandapower.rundcpp",
    "pandapower.test.toolbox.add_grid_connection",
    "pandapower.test.toolbox.create_test_line"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_runpp.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.LoadflowNotConverged": {
  "data": {
   "shadows": "pandapower.powerflow.LoadflowNotConverged"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp._add_ppc_options": {
  "data": {
   "shadows": "pandapower.auxiliary._add_ppc_options"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp._check_connectivity": {
  "data": {
   "shadows": "pandapower.auxiliary._check_connectivity"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp._create_J_without_numba": {
  "data": {
   "shadows": "pandapower.pf.create_jacobian._create_J_without_numba"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp._get_pf_variables_from_ppci": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.toolbox.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.add_test_line": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_line"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.add_test_oos_bus_with_is_element": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_oos_bus_with_is_element"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.add_test_trafo": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_trafo"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.add_test_trafo3w": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_trafo3w"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.add_test_xward": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_xward"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.assert_init_results": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.assert_net_equal": {
  "data": {
   "shadows": "pandapower.test.toolbox.assert_net_equal"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.bus_bus_net": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.toolbox.add_grid_connection",
    "pandapower.test.toolbox.create_test_line",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.create_cigre_network_mv": {
  "data": {
   "shadows": "pandapower.networks.create_cigre_network_mv"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.create_test_line": {
  "data": {
   "shadows": "pandapower.test.toolbox.create_test_line"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.example_multivoltage": {
  "data": {
   "shadows": "pandapower.networks.example_multivoltage"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.example_simple": {
  "data": {
   "shadows": "pandapower.networks.example_simple"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.four_loads_with_branches_out": {
  "data": {
   "shadows": "pandapower.networks.four_loads_with_branches_out"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.get_isolated": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandapower.auxiliary._add_ppc_options",
    "pandapower.auxiliary._check_connectivity",
    "pandapower.pd2ppc._pd2ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.lightsim2grid_available": {
  "data": {
   "shadows": "pandapower.auxiliary.lightsim2grid_available"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.nets_equal": {
  "data": {
   "shadows": "pandapower.toolbox.nets_equal"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.result_test_network_generator": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.runpp_with_consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.simple_four_bus_system": {
  "data": {
   "shadows": "pandapower.networks.simple_four_bus_system"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp.test_add_element_and_init_results": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.example_simple",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_multi_net": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.example_simple",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.copy",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_with_branch_loops": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_line",
    "pandapower.networks.example_simple",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_with_enforce_q_lims": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.example_simple",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_with_trafo_shift_and_voltage_angles": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.example_simple",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bus_bus_switches": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.bus_bus_net",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bus_bus_switches_merges_two_gens": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pandapower.create_gen",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.bus_bus_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bus_bus_switches_throws_exception_for_two_gen_with_diff_vm": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_gen",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.bus_bus_net",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_connectivity_check_island_with_multiple_pv_buses": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "len",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.test.loadflow.test_runpp.get_isolated"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_connectivity_check_island_with_one_pv_bus": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "len",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp.get_isolated"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_connectivity_check_island_without_pv_bus": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "len",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp.get_isolated"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_dc_with_ext_grid_at_one_bus": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_dcline",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_equal_indices_res": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_transformer",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_ext_grid_and_gen_at_one_bus": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_get_internal": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.pi",
    "numpy.r_",
    "pandapower.networks.example_simple",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pf.create_jacobian._create_J_without_numba",
    "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci",
    "pandapower.runpp",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_init_results": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.create_switch",
    "pandapower.test.loadflow.result_test_network_generator.add_test_line",
    "pandapower.test.loadflow.result_test_network_generator.add_test_trafo",
    "pandapower.test.loadflow.result_test_network_generator.add_test_trafo3w",
    "pandapower.test.loadflow.result_test_network_generator.add_test_xward",
    "pandapower.test.loadflow.test_runpp.assert_init_results"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_init_results_without_results": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "pandapower.networks.example_multivoltage",
    "pandapower.reset_results",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_isolated_in_service_bus_at_oos_line": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_isolated_in_service_line": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_kwargs_with_user_options": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pandapower.networks.example_simple",
    "pandapower.runpp",
    "pandapower.set_user_pf_options"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "pandapower.auxiliary.lightsim2grid_available",
    "pandapower.powerflow.LoadflowNotConverged",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid_extgrid": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "pandapower.auxiliary.lightsim2grid_available",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.loadflow.test_runpp.test_ext_grid_and_gen_at_one_bus"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid_qlims": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "pandapower.auxiliary.lightsim2grid_available",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.loadflow.test_runpp.test_minimal_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid_zip": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "pandapower.auxiliary.lightsim2grid_available",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.loadflow.test_runpp.test_zip_loads_consistency"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_line_temperature": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "pandapower.networks.four_loads_with_branches_out",
    "pandapower.runpp",
    "pandapower.set_user_pf_options"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_makeYbus": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.toolbox.add_grid_connection",
    "pandapower.test.toolbox.create_test_line",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_minimal_net": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_switch",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_oos_bus": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_shunt",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.result_test_network_generator.add_test_oos_bus_with_is_element"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_overwrite_default_args_with_user_options": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandapower.networks.example_simple",
    "pandapower.runpp",
    "pandapower.set_user_pf_options",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_pp_initialization": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "numpy.array",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_pvpq_lookup": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.copy",
    "pandapower.toolbox.nets_equal"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_pypower_algorithms_iter": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "pandapower.powerflow.LoadflowNotConverged",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_result_iter": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AssertionError",
    "UserWarning",
    "pandapower.powerflow.LoadflowNotConverged",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_results_for_line_temperature": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.set_user_pf_options"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_runpp_init": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_transformer",
    "pandapower.runpp",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_runpp_init_auxiliary_buses": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_transformer3w",
    "pandapower.create_xward",
    "pandapower.runpp",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_set_user_pf_options": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "enumerate",
    "pandapower.networks.example_simple",
    "pandapower.runpp",
    "pandapower.set_user_pf_options"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_storage_pf": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_storage",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_switch_fuse_z_ohm_0": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.loadflow.test_runpp.z_switch_net_4bus",
    "pandapower.test.loadflow.test_runpp.z_switch_net_4bus_parallel"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_switch_z_ohm_different": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.all",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.loadflow.test_runpp.z_switch_net_4bus",
    "pandapower.test.loadflow.test_runpp.z_switch_net_4bus_parallel"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_test_sn_mva": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.runpp",
    "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
    "pandapower.test.toolbox.assert_net_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_two_open_switches": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_switch",
    "pandapower.runpp",
    "pandapower.test.toolbox.add_grid_connection",
    "pandapower.test.toolbox.create_test_line"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_wye_delta": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer",
    "pandapower.pypower.idx_brch.BR_B.flatten",
    "pandapower.pypower.idx_brch.BR_R.flatten",
    "pandapower.pypower.idx_brch.BR_X.flatten",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_xward_buses": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_impedance",
    "pandapower.create_load",
    "pandapower.create_xward",
    "pandapower.powerflow.LoadflowNotConverged",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_z_switch": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.copy",
    "pandapower.test.loadflow.test_runpp.pytest",
    "pandapower.test.loadflow.test_runpp.z_switch_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_consistency": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "pandapower.networks.four_loads_with_branches_out",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_gridcal": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "numpy.isclose",
    "pandapower.from_json",
    "pandapower.pp_dir",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_runpp.os",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_pf_algorithms": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.networks.four_loads_with_branches_out",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_with_voltage_angles": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.set_user_pf_options"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.two_ext_grids_at_one_bus": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.runpp",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.z_switch_net": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.test.loadflow.test_runpp.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.z_switch_net_4bus": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.test.loadflow.test_runpp.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.z_switch_net_4bus_parallel": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.test.loadflow.test_runpp.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_runpp_3ph.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_runpp_3ph.check_it": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.isnan",
    "numpy.max",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.check_results": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.concatenate",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.get_PF_Results": {
  "data": {
   "shadows": "pandapower.test.loadflow.PF_Results.get_PF_Results"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph.make_nw": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_transformer_from_parameters",
    "pandapower.get_free_id",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.net": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_std_type",
    "pandapower.test.loadflow.test_runpp_3ph.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph.runpp_3ph_with_consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.check_it",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network_isolated_net_part": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.check_it",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network_singel_oos_bus": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network_single_isolated_busses": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_bus",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.check_it",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2trafos": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_empty_network",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.make_nw",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_3ph_bus_mapping_order": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_std_type",
    "pandapower.runpp",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_3ph_isolated_nodes": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.nan",
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_std_type",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_3ph_two_bus_line_powerfactory": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.max",
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_std_type",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_4bus_network": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.isnan",
    "numpy.max",
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_line_from_parameters",
    "pandapower.create_std_type",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_out_serv_load": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_asymmetric_load",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.test_runpp_3ph.check_it",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_trafo_asym": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
    "pandapower.test.loadflow.PF_Results.get_PF_Results",
    "pandapower.test.loadflow.test_runpp_3ph.check_results",
    "pandapower.test.loadflow.test_runpp_3ph.make_nw",
    "pandapower.test.loadflow.test_runpp_3ph.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_runpp_3ph_n_line.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.net": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandapower.create_asymmetric_load",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.test.loadflow.test_runpp_3ph_n_line.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.test_check_it": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.isnan",
    "numpy.max",
    "pandapower.runpp_3ph",
    "pandapower.test.loadflow.test_runpp_3ph_n_line.net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.loadflow.test_scenarios.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.loadflow.test_scenarios.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.toolbox.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.add_test_bus_bus_switch": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_bus_bus_switch"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.add_test_trafo": {
  "data": {
   "shadows": "pandapower.test.loadflow.result_test_network_generator.add_test_trafo"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.create_test_network2": {
  "data": {
   "shadows": "pandapower.test.toolbox.create_test_network2"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.network_with_trafo3ws": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.get_free_id",
    "pandapower.test.loadflow.result_test_network_generator.add_test_trafo",
    "pandapower.test.loadflow.test_scenarios.pytest",
    "pandapower.test.toolbox.add_grid_connection",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.runpp_with_consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.loadflow.test_scenarios.test_0gen_2ext_grid": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_ext_grid",
    "pandapower.runpp",
    "pandapower.test.toolbox.create_test_network2"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_0gen_2ext_grid_decoupled": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_std_type",
    "pandapower.create_switch",
    "pandapower.runpp",
    "pandapower.test.toolbox.create_test_network2"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_2gen_1ext_grid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_gen",
    "pandapower.runpp",
    "pandapower.test.toolbox.create_test_network2"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_bb_switch": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandapower.create_empty_network",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.result_test_network_generator.add_test_bus_bus_switch"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_bus_bus_switch_at_eg": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_ext_grid_gen_order_in_ppc": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "all",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.rundcpp",
    "pandapower.runpp",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_generator_as_slack": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "UserWarning",
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.test.loadflow.test_scenarios.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_isolated_gen_lookup": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_xward",
    "pandapower.rundcpp",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_oos_buses_at_trafo3w": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_transformer3w",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_trafo3w_switches": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandapower.create_switch",
    "pandapower.test.consistency_checks.runpp_with_consistency_checks",
    "pandapower.test.loadflow.test_scenarios.network_with_trafo3ws"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer3w_phase_shift": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_load",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer_phase_shift": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer_phase_shift_complex": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_load",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer_with_two_open_switches": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_two_gens_at_one_bus": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_two_oos_buses": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_volt_dep_load_at_inactive_bus": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.isnan",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_transformer",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.networks.test_cigre_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_cigre_networks.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_cigre_networks.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_cigre_networks.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_cigre_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_cigre_networks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_cigre_networks.test_cigre_hv": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.create_cigre_network_hv",
    "pandapower.runpp",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_cigre_networks.test_cigre_lv": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.create_cigre_network_lv",
    "pandapower.runpp",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_cigre_networks.test_cigre_mv": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.runpp",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_create_example": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_create_example.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_create_example.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_create_example.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_create_example.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_create_example.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_create_example.test_create_realistic": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.example_multivoltage",
    "pandapower.runpp",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_create_example.test_create_simple": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.example_simple",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_dickert_lv_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_dickert_lv_networks.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_dickert_lv_networks.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_dickert_lv_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_dickert_lv_networks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_dickert_lv_networks.test_dickert_lv_networks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandapower.networks.create_dickert_lv_network",
    "pandapower.runpp",
    "pandapower.test.networks.test_dickert_lv_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_kerber_extreme_networks.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_dorfnetz": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_dorfnetz",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_dorfnetz_trafo": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_dorfnetz_trafo",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_freileitung": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_landnetz_freileitung",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_freileitung_trafo": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_landnetz_freileitung_trafo",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_kabel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_landnetz_kabel",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_kabel_trafo": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_landnetz_kabel_trafo",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_1": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_vorstadtnetz_1",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_2": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_vorstadtnetz_2",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_trafo_1": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_vorstadtnetz_trafo_1",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_trafo_2": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.kb_extrem_vorstadtnetz_trafo_2",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_kerber_networks._add_lines_and_loads": {
  "data": {
   "shadows": "pandapower.networks.kerber_networks._add_lines_and_loads"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks._add_lines_with_branched_loads": {
  "data": {
   "shadows": "pandapower.networks.kerber_networks._add_lines_with_branched_loads"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks._create_empty_network_with_transformer": {
  "data": {
   "shadows": "pandapower.networks.kerber_networks._create_empty_network_with_transformer"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks.rd": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_kerber_networks.test_add_lines_and_loads": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.networks.kerber_networks._add_lines_and_loads",
    "random.random"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_add_lines_with_branched_loads": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.networks.kerber_networks._add_lines_with_branched_loads",
    "random.random"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_empty_network_with_transformer": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.kerber_networks._create_empty_network_with_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_dorfnetz": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_dorfnetz",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_landnetz_kabel_1": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_landnetz_kabel_1",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_landnetz_kabel_2": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_landnetz_kabel_2",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_vorstadtnetz_kabel_1": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_vorstadtnetz_kabel_1",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_vorstadtnetz_kabel_2": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_vorstadtnetz_kabel_2",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_kerber_landnetz_freileitung_1": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_landnetz_freileitung_1",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_kerber_landnetz_freileitung_2": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_kerber_landnetz_freileitung_2",
    "pandapower.runpp",
    "pandapower.test.networks.test_kerber_networks.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_mv_oberrhein": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_mv_oberrhein.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_mv_oberrhein.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_mv_oberrhein.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_mv_oberrhein.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_mv_oberrhein.test_mv_oberrhein": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.mv_oberrhein",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_power_system_test_cases.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_power_system_test_cases._ppc_element_test": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_power_system_test_cases.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_power_system_test_cases.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_GBnetwork": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pandapower.networks.GBnetwork",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_GBreducednetwork": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pandapower.networks.GBreducednetwork",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case118": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pandapower.networks.case118",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case1354pegase": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pandapower.networks.case1354pegase",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case14": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pandapower.networks.case14",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case145": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandapower.networks.case145",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case1888rte": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pandapower.networks.case1888rte",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case1888rte_changed_slack": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "list",
    "pandapower.networks.case1888rte",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case24_ieee_rts": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandapower.networks.case24_ieee_rts",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case2848rte": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pandapower.networks.case2848rte",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case2869pegase": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pandapower.networks.case2869pegase",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case30": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandapower.networks.case30",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case300": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pandapower.networks.case300",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case3120sp": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "pandapower.networks.case3120sp",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case33bw": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandapower.networks.case33bw",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case39": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandapower.networks.case39",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case4gs": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.networks.case4gs",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case5": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandapower.networks.case5",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case57": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandapower.networks.case57",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6470rte": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandapower.networks.case6470rte",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6495rte": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandapower.networks.case6495rte",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6515rte": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pandapower.networks.case6515rte",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6ww": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandapower.networks.case6ww",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case89pegase": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pandapower.networks.case89pegase",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case9": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandapower.networks.case9",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case9241pegase": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pandapower.networks.case9241pegase",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case_ieee30": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pandapower.networks.case_ieee30",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case_illinois200": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pandapower.networks.case_illinois200",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_iceland": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "pandapower.networks.iceland",
    "pandapower.runpp",
    "pandapower.test.networks.test_power_system_test_cases._ppc_element_test"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_simple_pandapower_test_networks.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_four_loads_with_branches_out": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.four_loads_with_branches_out",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_panda_four_load_branch": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.panda_four_load_branch",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_simple_four_bus_system": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_simple_mv_open_ring_net": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "pandapower.networks.simple_mv_open_ring_net",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.pn": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_rural_1": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_synthetic_voltage_control_lv_network",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_rural_2": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_synthetic_voltage_control_lv_network",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_suburb_1": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_synthetic_voltage_control_lv_network",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_village_1": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_synthetic_voltage_control_lv_network",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_village_2": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abs",
    "len",
    "pandapower.networks.create_synthetic_voltage_control_lv_network",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.opf.test_basic": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_basic.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_basic.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.toolbox.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.convert_format": {
  "data": {
   "shadows": "pandapower.convert_format.convert_format"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.four_bus_net": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_basic.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.simple_four_bus_system": {
  "data": {
   "shadows": "pandapower.networks.simple_four_bus_system"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_basic.simple_opf_test_net": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.test.opf.test_basic.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.simplest_grid": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_convert_format": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.convert_format.convert_format",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_dcopf_poly": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_poly_cost",
    "pandapower.rundcopp",
    "pandapower.test.opf.test_basic.logger",
    "pandapower.test.opf.test_basic.simple_opf_test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_dcopf_pwl": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_pwl_cost",
    "pandapower.rundcopp",
    "pandapower.test.opf.test_basic.logger",
    "pandapower.test.opf.test_basic.simple_opf_test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_gen_p_vm_fixed": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_gen",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.four_bus_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_gen_p_vm_limits": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_gen",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.four_bus_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_gen_violated_p_vm_limits": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_gen",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.four_bus_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_in_service_controllables": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_line_temperature": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.simplest_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_no_controllables": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.OPFNotConverged",
    "pandapower.create_poly_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.simple_opf_test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_only_gen_slack_vm_setpoint": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_gen",
    "pandapower.runopp",
    "pandapower.runpp",
    "pandapower.test.opf.test_basic.four_bus_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_gen_loading": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_poly_cost",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_gen_voltage": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_poly_cost",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_no_controllables_vs_pf": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.runopp",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_poly": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_poly_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger",
    "pandapower.test.opf.test_basic.simple_opf_test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_pwl": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_pwl_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger",
    "pandapower.test.opf.test_basic.simple_opf_test_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_sgen_loading": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_sgen_voltage": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_varying_max_line_loading": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.create_transformer_from_parameters",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_simplest_dispatch": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_simplest_voltage": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger",
    "pandapower.test.opf.test_basic.simplest_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_storage_opf": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.create_storage",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_three_slacks_vm_setpoint": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_ext_grid",
    "pandapower.runopp",
    "pandapower.runpp",
    "pandapower.test.opf.test_basic.four_bus_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_trafo3w_loading": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_transformer3w",
    "pandapower.runopp",
    "pandapower.test.toolbox.add_grid_connection"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_unconstrained_line": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "max",
    "min",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_basic.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_check_opf_data.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_check_opf_data._check_necessary_opf_parameters": {
  "data": {
   "shadows": "pandapower.opf.validate_opf_input._check_necessary_opf_parameters"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_check_opf_data._opf_net": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_buses",
    "pandapower.create_dcline",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data._run_check": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "KeyError",
    "pandapower.opf.validate_opf_input._check_necessary_opf_parameters",
    "pandapower.test.opf.test_check_opf_data.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.logger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_check_opf_data.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_check_opf_data.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_check_opf_data.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_check_opf_data.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_basic": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_dcline_lim_col": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_dcline_lim_val": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.nan",
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_lim_col": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_lim_val": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.nan",
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_vm_lim_col": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_vm_lim_val": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.nan",
    "pandapower.test.opf.test_check_opf_data._opf_net",
    "pandapower.test.opf.test_check_opf_data._run_check"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.opf.test_cost_consistency.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_cost_consistency.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_cost_consistency.base_net": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.runpp",
    "pandapower.test.opf.test_cost_consistency.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency.isclose": {
  "data": {
   "shadows": "numpy.isclose"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_cost_consistency.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_cost_consistency.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_cost_consistency.test_contingency_gen": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_gen",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_cost_consistency.base_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency.test_contingency_load": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_gen",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.runopp",
    "pandapower.test.opf.test_cost_consistency.base_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency.test_contingency_sgen": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.create_sgen",
    "pandapower.runopp",
    "pandapower.test.opf.test_cost_consistency.base_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_mixed": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_costs_mixed.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_costs_mixed.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_mixed.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_mixed.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_mixed.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_mixed.test_cost_mixed": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_mixed.test_mixed_p_q_pol": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_mixed.test_mixed_p_q_pwl": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pol": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_costs_pol.logger",
    "pandapower.test.opf.test_costs_pol.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_costs_pol.logger": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_costs_pol.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pol.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pol.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pol.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pol.test_cost_pol_all_elements": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "abs",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pol.test_cost_pol_gen": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pol.test_cost_pol_q": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "abs",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_costs_pwl.logger",
    "pandapower.test.opf.test_costs_pwl.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_costs_pwl.logger": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_costs_pwl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_eg": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_gen": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_load": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "abs",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_load_uneven_slopes": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_sgen": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.create_sgen",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_sgen_uneven_slopes": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.create_sgen",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_sgen_very_unsteady_slopes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.create_sgen",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_get_costs": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl_q": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.opf.test_costs_pwl_q.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_costs_pwl_q.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl_q.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl_q.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_costs_pwl_q.test_3point_pwl": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "abs",
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.create_sgen",
    "pandapower.runopp",
    "pandapower.test.opf.test_costs_pwl_q.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_curtailment": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_curtailment.test_minimize_active_power_curtailment",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_curtailment.all": {
  "data": {
   "shadows": "numpy.all"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_curtailment.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_curtailment.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_curtailment.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_curtailment.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_curtailment.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_curtailment.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_curtailment.test_minimize_active_power_curtailment": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_transformer",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_dcline": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_dcline.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_dcline.allclose": {
  "data": {
   "shadows": "numpy.allclose"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.dcline_net": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_dcline",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.test.opf.test_dcline.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.get_delta_try_except": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandapower.OPFNotConverged",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.isclose": {
  "data": {
   "shadows": "numpy.isclose"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_dcline.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_dcline.test_dcline_dispatch2": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.create_poly_cost",
    "pandapower.runopp",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_dcline.dcline_net",
    "pandapower.test.opf.test_dcline.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.test_dcline_dispatch3": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "all",
    "numpy.isclose",
    "pandapower.create_poly_cost",
    "pandapower.runopp",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_dcline.dcline_net",
    "pandapower.test.opf.test_dcline.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.test_dispatch1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.create_pwl_cost",
    "pandapower.runopp",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_dcline.dcline_net",
    "pandapower.test.opf.test_dcline.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_oberrhein": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_oberrhein.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_oberrhein.logger": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_oberrhein.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_oberrhein.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_oberrhein.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_oberrhein.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_oberrhein.test_opf_oberrhein": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.networks.mv_oberrhein",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_opf_cigre": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.test.opf.test_opf_cigre.pytest",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_opf_cigre.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_opf_cigre.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_opf_cigre.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_opf_cigre.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_opf_cigre.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_opf_cigre.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_opf_cigre.test_opf_cigre": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_opf_cigre.test_some_sgens_not_controllable": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_poly_cost",
    "pandapower.networks.create_cigre_network_mv",
    "pandapower.runopp"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "RuntimeError",
    "__name__",
    "julia.core.UnsupportedPythonError",
    "pandapower.test.opf.test_powermodels.pytest",
    "print"
   ]
  },
  "type": "module"
 },
 "pandapower.test.opf.test_powermodels.Main": {
  "data": {
   "shadows": "julia.Main"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.UnsupportedPythonError": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_powermodels._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.add_grid_connection": {
  "data": {
   "shadows": "pandapower.test.toolbox.add_grid_connection"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.assert_pf": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.__file__",
    "pandapower.rundcpp",
    "pandapower.runpm",
    "pandapower.runpp",
    "pandapower.test.opf.test_powermodels.copy",
    "pandapower.test.opf.test_powermodels.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.consistency_checks": {
  "data": {
   "shadows": "pandapower.test.consistency_checks.consistency_checks"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.convert_pp_to_pm": {
  "data": {
   "shadows": "pandapower.converter.convert_pp_to_pm"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.create_test_line": {
  "data": {
   "shadows": "pandapower.test.toolbox.create_test_line"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.init_ne_line": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.zeros",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.julia_installed": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pandapower.test.opf.test_powermodels.net_3w_trafo_opf": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.read_pm_results_to_net": {
  "data": {
   "shadows": "pandapower.converter.powermodels.from_pm.read_pm_results_to_net"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.simple_opf_test_net": {
  "data": {
   "shadows": "pandapower.test.opf.test_basic.simple_opf_test_net"
  },
  "type": "import"
 },
 "pandapower.test.opf.test_powermodels.test_compare_pwl_and_poly": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_poly_cost",
    "pandapower.create_pwl_cost",
    "pandapower.runpm_ac_opf",
    "pandapower.runpm_dc_opf",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.net_3w_trafo_opf",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_multiple_ext_grids": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_sgen",
    "pandapower.runpm_ac_opf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest",
    "pandapower.test.toolbox.add_grid_connection",
    "pandapower.test.toolbox.create_test_line"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_ots_opt": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "AssertionError",
    "bool",
    "numpy.array",
    "numpy.array_equal",
    "pandapower.networks.case5",
    "pandapower.runpm_ots",
    "pandapower.runpp",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_ac_powerflow_shunt": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "pandapower.create_shunt",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_powermodels.assert_pf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_ac_powerflow_simple": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_powermodels.assert_pf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_ac_powerflow_tap": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_powermodels.assert_pf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_dc_powerflow_shunt": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "pandapower.create_shunt",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_powermodels.assert_pf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_dc_powerflow_simple": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_powermodels.assert_pf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_dc_powerflow_tap": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "pandapower.networks.simple_four_bus_system",
    "pandapower.test.opf.test_powermodels.assert_pf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_tnep": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "numpy.any",
    "pandapower.runpm_tnep",
    "pandapower.runpp",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest",
    "pandapower.test.opf.test_powermodels.tnep_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_to_pp_conversion": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "numpy.allclose",
    "open",
    "pandapower.converter.powermodels.from_pm.read_pm_results_to_net",
    "pandapower.create_poly_cost",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.runopp",
    "pandapower.test.__file__",
    "pandapower.test.opf.test_basic.simple_opf_test_net",
    "pandapower.test.opf.test_powermodels.copy",
    "pandapower.test.opf.test_powermodels.json",
    "pandapower.test.opf.test_powermodels.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pp_to_pm_conversion": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "pandapower.converter.convert_pp_to_pm",
    "pandapower.test.opf.test_powermodels.net_3w_trafo_opf"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pwl": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_pwl_cost",
    "pandapower.runpm_ac_opf",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_storage_opt": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_storage",
    "pandapower.networks.case5",
    "pandapower.runpm_storage_opf",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_voltage_angles": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "functools.partial",
    "numpy.allclose",
    "numpy.isnan",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_transformer3w",
    "pandapower.runpm",
    "pandapower.runpm_ac_opf",
    "pandapower.runpp",
    "pandapower.test.__file__",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.os",
    "pandapower.test.opf.test_powermodels.pytest",
    "pandapower.test.toolbox.add_grid_connection",
    "run"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_without_ext_grid": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.runpm_ac_opf",
    "pandapower.runpm_dc_opf",
    "pandapower.test.consistency_checks.consistency_checks",
    "pandapower.test.opf.test_powermodels.julia_installed",
    "pandapower.test.opf.test_powermodels.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.tnep_grid": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_poly_cost",
    "pandapower.test.opf.test_powermodels.init_ne_line"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pandapower.pp_dir",
    "pandapower.test.run_tests.get_command_line_args",
    "pandapower.test.run_tests.os",
    "pandapower.test.run_tests.settings",
    "pandapower.test.run_tests.start_tests",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.test.run_tests._get_cpus": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "multiprocessing.cpu_count",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "pandapower.test.run_tests.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "pandapower.test.run_tests.get_command_line_args": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "pandapower.test.run_tests.argparse",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.test.run_tests.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.run_tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.run_tests.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.run_tests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.run_tests.remove_logger": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.test.run_tests.logger",
    "pplog.CRITICAL"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.run_all_tests": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "pandapower.test.run_tests._get_cpus",
    "pandapower.test.run_tests.logger",
    "pandapower.test.run_tests.pytest",
    "pandapower.test.run_tests.test_dir",
    "pplog.INFO",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.run_fast_tests": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "pandapower.test.run_tests._get_cpus",
    "pandapower.test.run_tests.logger",
    "pandapower.test.run_tests.pytest",
    "pandapower.test.run_tests.test_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.run_slow_tests": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "pandapower.test.run_tests._get_cpus",
    "pandapower.test.run_tests.logger",
    "pandapower.test.run_tests.pytest",
    "pandapower.test.run_tests.test_dir",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.settings": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "pandapower.test.run_tests.start_tests": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pandapower.test.run_tests.remove_logger",
    "pandapower.test.run_tests.run_all_tests",
    "pandapower.test.run_tests.run_fast_tests",
    "pandapower.test.run_tests.run_slow_tests"
   ]
  },
  "type": "function"
 },
 "pandapower.test.run_tests.test_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandapower.test.shortcircuit": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_1ph": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_1ph.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_1ph.add_network": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_bus",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_std_type",
    "pandapower.create_transformer",
    "pandapower.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.check_results": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_1ph.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_1ph.pandapower.test": {
  "data": {
   "shadows": "pandapower.test"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_1ph.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_1ph.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_1ph.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_1ph.test_1ph_shortcircuit": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_empty_network",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_1ph.add_network",
    "pandapower.test.shortcircuit.test_1ph.check_results"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_1ph_shortcircuit_min": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.create_empty_network",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_1ph.add_network",
    "pandapower.test.shortcircuit.test_1ph.check_results"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_1ph_with_switches": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandapower.add_zero_impedance_parameters",
    "pandapower.create_empty_network",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_1ph.add_network",
    "pandapower.test.shortcircuit.test_1ph.check_results"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_iec60909_example_4": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.from_json",
    "pandapower.pp_dir",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_1ph.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_gen.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_gen.gen_three_bus_example": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.test.shortcircuit.test_gen.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_gen.one_line_one_generator": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_switch",
    "pandapower.test.shortcircuit.test_gen.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_gen.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_gen.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_gen.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_gen.test_branch_max_gen": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_gen.gen_three_bus_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_branch_min_gen": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_gen.gen_three_bus_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_close_to_gen_simple": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.shortcircuit.calc_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_close_to_gen_simple2": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.shortcircuit.calc_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_generator_book": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.cos",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_shunt",
    "pandapower.create_transformer_from_parameters",
    "pandapower.shortcircuit.calc_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_max_gen": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_gen.one_line_one_generator",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_max_gen_fault_impedance": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_gen.one_line_one_generator",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_min_gen": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_gen.one_line_one_generator",
    "pandas.isnull"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_power_station_unit": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_buses",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line",
    "pandapower.create_transformer_from_parameters",
    "pandapower.shortcircuit.calc_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_rdss_estimations": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_gen",
    "pandapower.shortcircuit.calc_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_shunt": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.shortcircuit.calc_sc"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_impedance": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_impedance.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_impedance.impedance_net": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_impedance",
    "pandapower.test.shortcircuit.test_impedance.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_impedance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_impedance.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_impedance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_impedance.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_impedance.test_impedance_max": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_impedance.impedance_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_impedance.test_impedance_min": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_impedance.impedance_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_meshing_detection.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_switch",
    "pandapower.from_json",
    "pandapower.pp_dir",
    "pandapower.test.shortcircuit.test_meshing_detection.os",
    "pandapower.test.shortcircuit.test_meshing_detection.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_max_10_meshed_grid": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_max_6_meshed_grid": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_min_10_meshed_grid": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_min_6_meshed_grid": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_min_branch_results": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_min_branch_results.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_min_branch_results.feeder_network": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_sgen",
    "pandapower.test.shortcircuit.test_min_branch_results.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_min_branch_results.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_min_branch_results.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_min_branch_results.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_motor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_motor.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_motor.motor_net": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_sgen",
    "pandapower.test.shortcircuit.test_motor.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_motor.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_motor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_motor.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_motor.test_motor": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_motor.motor_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_ring.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_ring.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_ring.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_ring.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_ring.ring_network": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_switch",
    "pandapower.create_transformer",
    "pandapower.test.shortcircuit.test_ring.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_ring.test_branch_results_closed_ring": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_ring.ring_network"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring.test_branch_results_open_ring": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_ring.ring_network"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring.test_kappa_methods": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_ring.ring_network"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_sc_single_bus.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.isclose": {
  "data": {
   "shadows": "numpy.isclose"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.meshed_grid": {
  "data": {
   "shadows": "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.radial_grid": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_transformer",
    "pandapower.test.shortcircuit.test_sc_single_bus.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.test_big_gen_network": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.shortcircuit.calc_single_sc",
    "pandapower.test.shortcircuit.test_sc_single_bus.three_bus_big_sgen_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.test_meshed_network": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.shortcircuit.calc_single_sc",
    "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.test_radial_network": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.shortcircuit.calc_single_sc",
    "pandapower.test.shortcircuit.test_sc_single_bus.radial_grid"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.three_bus_big_sgen_example": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_sgen",
    "pandapower.test.shortcircuit.test_sc_single_bus.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_sgen.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_sgen.big_sgen_three_bus_example": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_sgen",
    "pandapower.test.shortcircuit.test_sgen.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sgen.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sgen.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sgen.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_sgen.test_max_branch_results_1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_sgen.three_bus_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_max_branch_results_2": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_sgen.big_sgen_three_bus_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_min_branch_results_big_sgen": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_sgen.big_sgen_three_bus_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_min_branch_results_small_sgen": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_sgen.three_bus_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_wind_park": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.isclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_sgen.wind_park_example"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.three_bus_example": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_sgen",
    "pandapower.test.shortcircuit.test_sgen.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.wind_park_example": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line_from_parameters",
    "pandapower.create_sgen",
    "pandapower.test.shortcircuit.test_sgen.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_trafo3w": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_trafo3w.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_trafo3w.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_trafo3w.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_trafo3w.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_trafo3w.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_trafo3w.test_trafo3w_max": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_trafo3w.trafo3w_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_trafo3w.test_trafo3w_min": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_trafo3w.trafo3w_net"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_trafo3w.trafo3w_net": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_load",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.test.shortcircuit.test_trafo3w.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.shortcircuit.test_transformer.net_transformer",
    "pandapower.test.shortcircuit.test_transformer.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_transformer.net": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "pandapower.test.shortcircuit.test_transformer.net_transformer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_shunt",
    "pandapower.create_switch",
    "pandapower.create_transformer_from_parameters",
    "pandapower.test.shortcircuit.test_transformer.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_transformer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_transformer.sc": {
  "data": {
   "shadows": "pandapower.shortcircuit"
  },
  "type": "import"
 },
 "pandapower.test.shortcircuit.test_transformer.test_max_10_trafo": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_transformer.net_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_max_6_trafo": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_transformer.net_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_min_10_trafo": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_transformer.net_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_min_10_trafo_2ph": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_transformer.net_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_min_6_trafo": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abs",
    "pandapower.shortcircuit.calc_sc",
    "pandapower.test.shortcircuit.test_transformer.net_transformer"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.timeseries.test_data_source": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.timeseries.test_data_source.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.timeseries.test_data_source.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.epsilon": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.test.timeseries.test_data_source.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.pandapower.control": {
  "data": {
   "shadows": "pandapower.control"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.pandapower.timeseries": {
  "data": {
   "shadows": "pandapower.timeseries"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.pp_dir": {
  "data": {
   "shadows": "pandapower.pp_dir"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_data_source.test_data_source": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abs",
    "pandapower.pp_dir",
    "pandapower.test.timeseries.test_data_source.copy",
    "pandapower.test.timeseries.test_data_source.epsilon",
    "pandapower.test.timeseries.test_data_source.os",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.timeseries.test_output_writer.logger",
    "pandapower.test.timeseries.test_output_writer.logging",
    "pandapower.test.timeseries.test_output_writer.ow_logger",
    "pandapower.test.timeseries.test_output_writer.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.timeseries.test_output_writer.ConstControl": {
  "data": {
   "shadows": "pandapower.control.ConstControl"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.DFData": {
  "data": {
   "shadows": "pandapower.timeseries.DFData"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.OutputWriter": {
  "data": {
   "shadows": "pandapower.timeseries.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.cost_logging": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.create_data_source": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_timeseries.create_data_source"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.ct": {
  "data": {
   "shadows": "pandapower.control"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandapower.test.timeseries.test_output_writer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.nw": {
  "data": {
   "shadows": "pandapower.networks"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.ow_logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandapower.test.timeseries.test_output_writer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.run_timeseries": {
  "data": {
   "shadows": "pandapower.timeseries.run_time_series.run_timeseries"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.simple_four_bus_system": {
  "data": {
   "shadows": "pandapower.networks.simple_four_bus_system"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.simple_test_net": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_timeseries.simple_test_net"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_output_writer.test_default_output_writer": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_equal_eval_name_warning_and_costs": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.float64",
    "numpy.max",
    "pandapower.control.ConstControl",
    "pandapower.create_pwl_cost",
    "pandapower.networks.case5",
    "pandapower.timeseries.DFData",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_timeseries",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_eval_simple": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "max",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_log": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "all",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.copy",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.DFData",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_multiple_index_definition": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "len",
    "numpy.allclose",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.copy",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_short_data_source": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "KeyError",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.pytest",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_with_timesteps_set": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_without_timesteps_set": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_without_timesteps_set_repeat": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "len",
    "max",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_ow_index": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.all",
    "pandapower.control.ConstControl",
    "pandapower.networks.simple_four_bus_system",
    "pandapower.timeseries.DFData",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_ppc_log": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "len",
    "list",
    "pandapower.control.ConstControl",
    "pandapower.runpp",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_remove_variable": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "pandapower.test.timeseries.test_output_writer.logger",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_store_and_load": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len",
    "pandapower.control.ConstControl",
    "pandapower.from_json",
    "pandapower.test.timeseries.test_output_writer.os",
    "pandapower.test.timeseries.test_output_writer.tempfile",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "pandapower.to_json",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.ts": {
  "data": {
   "shadows": "pandapower.timeseries"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.timeseries.test_timeseries.logging",
    "pandapower.test.timeseries.test_timeseries.pytest"
   ]
  },
  "type": "module"
 },
 "pandapower.test.timeseries.test_timeseries.ConstControl": {
  "data": {
   "shadows": "pandapower.control.ConstControl"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.ContinuousTapControl": {
  "data": {
   "shadows": "pandapower.control.ContinuousTapControl"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.DFData": {
  "data": {
   "shadows": "pandapower.timeseries.DFData"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.OutputWriter": {
  "data": {
   "shadows": "pandapower.timeseries.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.control_diagnostic": {
  "data": {
   "shadows": "pandapower.timeseries.run_time_series.control_diagnostic"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.create_data_source": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "abs",
    "numpy.clip",
    "numpy.random.randint",
    "numpy.random.random",
    "pandapower.timeseries.DFData",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.create_rand_data_source": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "numpy.random.randint",
    "numpy.random.random",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pandapower.test.timeseries.test_timeseries.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.pandapower.control.util.diagnostic": {
  "data": {
   "shadows": "pandapower.control.util.diagnostic"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.run_timeseries": {
  "data": {
   "shadows": "pandapower.timeseries.run_time_series.run_timeseries"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.setup_output_writer": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandapower.test.timeseries.test_timeseries.tempfile",
    "pandapower.timeseries.OutputWriter"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.simple_test_net": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_line",
    "pandapower.create_load",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w_from_parameters",
    "pandapower.set_user_pf_options",
    "pandapower.test.timeseries.test_timeseries.pytest"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries.test_const_control": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "numpy.alltrue",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.setup_output_writer",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_false_alarm_trafos": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "UserWarning",
    "pandapower.control.ContinuousTapControl",
    "pandapower.control.util.diagnostic.logger.addHandler",
    "pandapower.control.util.diagnostic.logger.removeHandler",
    "pandapower.test.timeseries.test_timeseries.io",
    "pandapower.test.timeseries.test_timeseries.logging",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.run_time_series.control_diagnostic"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_output_dump_after_time": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.test.timeseries.test_timeseries.tempfile",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_time_steps": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_timeseries_results": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "dict",
    "numpy.allclose",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.test.timeseries.test_timeseries.tempfile",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_timeseries_var_func": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "pandapower.control.ConstControl",
    "pandapower.test.timeseries.test_timeseries.create_data_source",
    "pandapower.test.timeseries.test_timeseries.simple_test_net",
    "pandapower.test.timeseries.test_timeseries.tempfile",
    "pandapower.timeseries.OutputWriter",
    "pandapower.timeseries.run_time_series.run_timeseries",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps",
    "pandapower.test.timeseries.test_timeseries_recycle.pytest",
    "range"
   ]
  },
  "type": "module"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.ConstControl": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_output_writer.ConstControl"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.ContinuousTapControl": {
  "data": {
   "shadows": "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.DFData": {
  "data": {
   "shadows": "pandapower.timeseries.data_sources.frame_data.DFData"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.OutputWriter": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_output_writer.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle._run_normal": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pandapower.test.timeseries.test_output_writer.OutputWriter",
    "pandapower.test.timeseries.test_output_writer.run_timeseries",
    "pandapower.test.timeseries.test_timeseries_recycle.tempfile",
    "pandapower.test.timeseries.test_timeseries_recycle.time_steps"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle._run_recycle": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pandapower.test.timeseries.test_output_writer.OutputWriter",
    "pandapower.test.timeseries.test_output_writer.run_timeseries",
    "pandapower.test.timeseries.test_timeseries_recycle.copy",
    "pandapower.test.timeseries.test_timeseries_recycle.tempfile",
    "pandapower.test.timeseries.test_timeseries_recycle.time_steps"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.add_const": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandapower.test.timeseries.test_output_writer.ConstControl"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.create_data_source": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_output_writer.create_data_source"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.get_batch_line_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_line_results"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.get_batch_trafo3w_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.get_batch_trafo_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_trafo_results"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.polar_to_rad": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.polar_to_rad"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.run_timeseries": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_output_writer.run_timeseries"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.simple_test_net": {
  "data": {
   "shadows": "pandapower.test.timeseries.test_output_writer.simple_test_net"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_batch_output_reader": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dict",
    "list",
    "numpy.allclose",
    "pandapower.runpp",
    "pandapower.test.timeseries.test_output_writer.OutputWriter",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.run_timeseries",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps",
    "pandapower.test.timeseries.test_timeseries_recycle.tempfile",
    "pandapower.test.timeseries.test_timeseries_recycle.time_steps",
    "pandapower.timeseries.read_batch_results.get_batch_line_results",
    "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results",
    "pandapower.timeseries.read_batch_results.get_batch_trafo_results",
    "pandapower.timeseries.read_batch_results.polar_to_rad",
    "pandapower.timeseries.read_batch_results.v_to_i_s"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_ext_grid": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.ones",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle._run_normal",
    "pandapower.test.timeseries.test_timeseries_recycle._run_recycle",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps",
    "pandapower.timeseries.data_sources.frame_data.DFData"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_gen": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.random.random",
    "pandapower.create_gen",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle._run_normal",
    "pandapower.test.timeseries.test_timeseries_recycle._run_recycle",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps",
    "pandapower.timeseries.data_sources.frame_data.DFData"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_pq": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle._run_normal",
    "pandapower.test.timeseries.test_timeseries_recycle._run_recycle",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_pq_gen_trafo_tap": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.arange",
    "numpy.ones",
    "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle._run_normal",
    "pandapower.test.timeseries.test_timeseries_recycle._run_recycle",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps",
    "pandapower.timeseries.data_sources.frame_data.DFData"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_pq_out_of_service": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.create_bus",
    "pandapower.create_line",
    "pandapower.create_transformer",
    "pandapower.create_transformer3w",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle._run_normal",
    "pandapower.test.timeseries.test_timeseries_recycle._run_recycle",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps",
    "range"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_trafo_tap": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "numpy.allclose",
    "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl",
    "pandapower.test.timeseries.test_output_writer.create_data_source",
    "pandapower.test.timeseries.test_output_writer.simple_test_net",
    "pandapower.test.timeseries.test_timeseries_recycle._run_normal",
    "pandapower.test.timeseries.test_timeseries_recycle._run_recycle",
    "pandapower.test.timeseries.test_timeseries_recycle.add_const",
    "pandapower.test.timeseries.test_timeseries_recycle.n_timesteps"
   ]
  },
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.time_steps": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.v_to_i_s": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.v_to_i_s"
  },
  "type": "import"
 },
 "pandapower.test.toolbox": {
  "data": {},
  "type": "module"
 },
 "pandapower.test.toolbox.add_grid_connection": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandapower.create_bus",
    "pandapower.create_ext_grid",
    "pandapower.get_free_id",
    "pandapower.test.toolbox.create_test_line"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.assert_mpc_equal": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.allclose",
    "numpy.array_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.assert_net_equal": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AssertionError",
    "pandapower.test.toolbox.pytest",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.assert_res_equal": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AssertionError",
    "pandapower.test.toolbox.pytest",
    "pandas.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.assert_res_out_of_service": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "AssertionError",
    "math.isnan",
    "pandapower.test.toolbox.pytest",
    "print"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.create_test_line": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandapower.create_line_from_parameters",
    "pandapower.get_free_id"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.create_test_network": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array",
    "pandapower.create_bus",
    "pandapower.create_empty_network",
    "pandapower.create_ext_grid",
    "pandapower.create_gen",
    "pandapower.create_line_from_parameters",
    "pandapower.create_load",
    "pandapower.create_sgen",
    "pandapower.create_transformer_from_parameters"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.create_test_network2": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pandapower.from_pickle",
    "pandapower.pp_dir",
    "pandapower.test.toolbox.os"
   ]
  },
  "type": "function"
 },
 "pandapower.test.toolbox.isnan": {
  "data": {
   "shadows": "math.isnan"
  },
  "type": "import"
 },
 "pandapower.test.toolbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.test.toolbox.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.test.toolbox.pdt": {
  "data": {
   "shadows": "pandas.testing"
  },
  "type": "import"
 },
 "pandapower.test.toolbox.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.test.toolbox.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandapower.timeseries": {
  "data": {},
  "type": "module"
 },
 "pandapower.timeseries.DFData": {
  "data": {
   "shadows": "pandapower.timeseries.data_sources.frame_data.DFData"
  },
  "type": "import"
 },
 "pandapower.timeseries.OutputWriter": {
  "data": {
   "shadows": "pandapower.timeseries.output_writer.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.timeseries.data_source": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.timeseries.data_source.DataSource": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandapower.io_utils.JSONSerializableClass"
   ]
  },
  "type": "class"
 },
 "pandapower.timeseries.data_source.DataSource.__repr__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "pandapower.timeseries.data_source.DataSource.__str__": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pandapower.timeseries.data_source.DataSource.get_time_step_value": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.data_source.JSONSerializableClass": {
  "data": {
   "shadows": "pandapower.io_utils.JSONSerializableClass"
  },
  "type": "import"
 },
 "pandapower.timeseries.data_source.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.timeseries.data_source.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.timeseries.data_sources": {
  "data": {},
  "type": "module"
 },
 "pandapower.timeseries.data_sources.__author__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandapower.timeseries.data_sources.frame_data": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandapower.timeseries.data_source.DataSource"
   ]
  },
  "type": "class"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.__repr__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.get_time_step_value": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.get_time_steps_len": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DataSource": {
  "data": {
   "shadows": "pandapower.timeseries.data_source.DataSource"
  },
  "type": "import"
 },
 "pandapower.timeseries.data_sources.frame_data.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandapower.timeseries.data_sources.frame_data.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.timeseries.output_writer.BUS_TYPE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BUS_TYPE"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.FunctionType": {
  "data": {
   "shadows": "types.FunctionType"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.JSONSerializableClass": {
  "data": {
   "shadows": "pandapower.io_utils.JSONSerializableClass"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.MethodType": {
  "data": {
   "shadows": "types.MethodType"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.NONE": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.NONE"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.OutputWriter": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandapower.io_utils.JSONSerializableClass"
   ]
  },
  "type": "class"
 },
 "pandapower.timeseries.output_writer.OutputWriter.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dict",
    "super",
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.__repr__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.__str__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._add_log_defaults": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "pandapower.timeseries.output_writer.copy"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._append_existing_log_variable_partial_func": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._append_output_list": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "pandapower.timeseries.output_writer.functools"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._get_np_name": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._get_output_name": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._get_same_log_variable_partial_func_idx": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_log_variable": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "numpy.any",
    "numpy.ndarray",
    "pandapower.timeseries.output_writer.logger",
    "pandas.Index",
    "pandas.Series",
    "pandas.isnull",
    "str",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_np_array": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "eval_function",
    "eval_function.__code__.co_varnames",
    "eval_function.__defaults__",
    "isinstance",
    "len",
    "numpy.zeros",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_np_results": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_output": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_ppc_logging": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pypower.idx_bus.BUS_TYPE",
    "pandapower.pypower.idx_bus.NONE",
    "pandapower.run._init_runpp_options",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._log": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "Exception",
    "eval_function",
    "pandapower.timeseries.output_writer.logger",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._log_ppc": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "NotImplementedError",
    "eval_function",
    "pandapower.pypower.idx_bus.VA",
    "pandapower.pypower.idx_bus.VM"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._monkey_patch": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "setattr",
    "types.MethodType"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._np_to_pd": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame",
    "pandas.concat",
    "types.FunctionType"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._save_separate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandapower.io_utils.mkdirs_if_not_existent",
    "pandapower.timeseries.output_writer.os",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._save_single_xls_sheet": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.dump": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.dump_to_file": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "Exception",
    "UserWarning"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.get_batch_outputs": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "pandapower.timeseries.read_batch_results.get_batch_bus_results",
    "pandapower.timeseries.read_batch_results.get_batch_line_results",
    "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results",
    "pandapower.timeseries.read_batch_results.get_batch_trafo_results",
    "pandapower.timeseries.read_batch_results.v_to_i_s",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.init_all": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "dict",
    "isinstance",
    "list",
    "pandapower.timeseries.output_writer.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.init_log_variables": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.init_timesteps": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.log_variable": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "pandapower.timeseries.output_writer.logger",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.remove_log_variable": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.save_nans_to_parameters": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "numpy.NaN",
    "of",
    "of.__name__"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.save_results": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.save_to_parameters": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "of",
    "of.__name__",
    "pandapower.timeseries.output_writer.logger",
    "pandapower.timeseries.output_writer.traceback"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.output_writer.VA": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VA"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.VM": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.VM"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer._init_runpp_options": {
  "data": {
   "shadows": "pandapower.run._init_runpp_options"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.get_batch_bus_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_bus_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.get_batch_line_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_line_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.get_batch_trafo3w_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.get_batch_trafo_results": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.get_batch_trafo_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pandapower.timeseries.output_writer.mkdirs_if_not_existent": {
  "data": {
   "shadows": "pandapower.io_utils.mkdirs_if_not_existent"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pandapower.timeseries.output_writer.v_to_i_s": {
  "data": {
   "shadows": "pandapower.timeseries.read_batch_results.v_to_i_s"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results": {
  "data": {},
  "type": "module"
 },
 "pandapower.timeseries.read_batch_results.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.F_BUS": {
  "data": {
   "shadows": "pandapower.F_BUS"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.T_BUS": {
  "data": {
   "shadows": "pandapower.T_BUS"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results._get_bus_idx": {
  "data": {
   "shadows": "pandapower.results_bus._get_bus_idx"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results._get_empty_branch": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "complex",
    "numpy.empty",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results._get_trafo3w_lookups": {
  "data": {
   "shadows": "pandapower.results_branch._get_trafo3w_lookups"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.calc_branch_flows_batch": {
  "data": {
   "shadows": "pandapower.pf.pfsoln_numba.calc_branch_flows_batch"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.deg2rad": {
  "data": {
   "shadows": "numpy.deg2rad"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.empty": {
  "data": {
   "shadows": "numpy.empty"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.get_batch_bus_results": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.nan",
    "pandapower.results_bus._get_bus_idx"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_line_results": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "numpy.maximum",
    "numpy.sqrt",
    "pandapower.results_branch._get_trafo3w_lookups"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_trafo_results": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "numpy.maximum",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.maximum": {
  "data": {
   "shadows": "numpy.maximum"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.nan": {
  "data": {
   "shadows": "numpy.nan"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.polar_to_rad": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "cmath.rect",
    "nprect",
    "numpy.deg2rad",
    "numpy.vectorize"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.rect": {
  "data": {
   "shadows": "cmath.rect"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.sqrt": {
  "data": {
   "shadows": "numpy.sqrt"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.v_to_i_s": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "int",
    "numpy.real",
    "pandapower.F_BUS",
    "pandapower.T_BUS",
    "pandapower.pf.pfsoln_numba.calc_branch_flows_batch",
    "pandapower.pypower.idx_bus.BASE_KV",
    "pandapower.timeseries.read_batch_results._get_empty_branch",
    "pandapower.timeseries.read_batch_results.polar_to_rad"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.vectorize": {
  "data": {
   "shadows": "numpy.vectorize"
  },
  "type": "import"
 },
 "pandapower.timeseries.read_batch_results.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "logging.WARNING",
    "logging.getLogger",
    "pandapower.timeseries.run_time_series.logger"
   ]
  },
  "type": "module"
 },
 "pandapower.timeseries.run_time_series.ControllerNotConverged": {
  "data": {
   "shadows": "pandapower.control.run_control.ControllerNotConverged"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.LoadflowNotConverged": {
  "data": {
   "shadows": "pandapower.LoadflowNotConverged"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.OPFNotConverged": {
  "data": {
   "shadows": "pandapower.OPFNotConverged"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.OutputWriter": {
  "data": {
   "shadows": "pandapower.timeseries.output_writer.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series._check_controller_recyclability": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series._check_output_writer_recyclability": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.check_for_initial_run": {
  "data": {
   "shadows": "pandapower.control.run_control.check_for_initial_run"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.cleanup": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.control_diagnostic": {
  "data": {
   "shadows": "pandapower.control.util.diagnostic.control_diagnostic"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.control_time_step": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.controller_not_converged": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandapower.control.run_control.ControllerNotConverged",
    "pandapower.timeseries.run_time_series.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.get_controller_order": {
  "data": {
   "shadows": "pandapower.control.run_control.get_controller_order"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.get_recycle_settings": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pandapower.timeseries.run_time_series._check_controller_recyclability",
    "pandapower.timeseries.run_time_series._check_output_writer_recyclability"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_default_outputwriter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandapower.timeseries.output_writer.OutputWriter",
    "pandapower.timeseries.run_time_series.logger",
    "pandapower.timeseries.run_time_series.tempfile"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_output_writer": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_time_series": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "len",
    "pandapower.LoadflowNotConverged",
    "pandapower.OPFNotConverged",
    "pandapower.control.run_control.check_for_initial_run",
    "pandapower.control.run_control.get_controller_order",
    "pandapower.runpp",
    "pandapower.timeseries.run_time_series.get_recycle_settings",
    "pandapower.timeseries.run_time_series.init_default_outputwriter",
    "pandapower.timeseries.run_time_series.init_output_writer",
    "pandapower.timeseries.run_time_series.init_time_steps",
    "pandapower.timeseries.run_time_series.logger",
    "pandapower.timeseries.run_time_series.print_progress_bar"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_time_steps": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "isinstance",
    "pandapower.timeseries.run_time_series.logger",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pandapower.timeseries.run_time_series.output_writer_routine": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.pf_not_converged": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pandapower.timeseries.run_time_series.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.pplog": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.print_progress": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "func",
    "len",
    "logging.DEBUG",
    "pandapower.timeseries.run_time_series.logger",
    "pandapower.timeseries.run_time_series.print_progress_bar"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.print_progress_bar": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "float",
    "int",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.run_control": {
  "data": {
   "shadows": "pandapower.control.run_control.run_control"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_time_series.run_loop": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "enumerate",
    "pandapower.timeseries.run_time_series.print_progress",
    "pandapower.timeseries.run_time_series.run_time_step"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.run_time_step": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandapower.control.run_control.ControllerNotConverged",
    "pandapower.control.run_control.run_control",
    "pandapower.timeseries.run_time_series.control_time_step",
    "pandapower.timeseries.run_time_series.controller_not_converged",
    "pandapower.timeseries.run_time_series.output_writer_routine",
    "pandapower.timeseries.run_time_series.pf_not_converged"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.run_timeseries": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pandapower.control.util.diagnostic.control_diagnostic",
    "pandapower.timeseries.run_time_series.cleanup",
    "pandapower.timeseries.run_time_series.init_time_series",
    "pandapower.timeseries.run_time_series.run_loop"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pandapower.timeseries.run_timeseries": {
  "data": {
   "shadows": "pandapower.timeseries.run_time_series.run_timeseries"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.timeseries.ts_runpp.BR_B": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_B"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.BR_R": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_R"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.BR_STATUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_STATUS"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.BR_X": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.BR_X"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.ConstControl": {
  "data": {
   "shadows": "pandapower.control.controller.const_control.ConstControl"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.F_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.F_BUS"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.LoadflowNotConverged": {
  "data": {
   "shadows": "pandapower.powerflow.LoadflowNotConverged"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.OutputWriter": {
  "data": {
   "shadows": "pandapower.timeseries.output_writer.OutputWriter"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.PD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.PD"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.QD": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.QD"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.RATE_A": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.RATE_A"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.SHIFT": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.SHIFT"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.TAP": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.TAP"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.T_BUS": {
  "data": {
   "shadows": "pandapower.pypower.idx_brch.T_BUS"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp._get_bus_p_q_results_from_ppc": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "numpy.float",
    "numpy.zeros",
    "pandapower.pypower.idx_bus.PD",
    "pandapower.pypower.idx_bus.QD",
    "pandapower.results._get_aranged_lookup",
    "pandapower.results_bus._get_bus_results",
    "pandapower.results_gen._get_gen_results"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp._update_nr_variables": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandapower.build_bus._calc_pq_elements_and_add_on_ppc",
    "pandapower.timeseries.ts_runpp.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.cleanup": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "pandapower.auxiliary._clean_up"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.get_branch_results": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandapower.results_branch._get_branch_flows",
    "pandapower.results_branch._get_line_results",
    "pandapower.results_branch._get_trafo3w_results",
    "pandapower.results_branch._get_trafo_results"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.get_update_ctrl": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "TypeError",
    "pandapower.control.controller.const_control.ConstControl",
    "pandapower.control.controller.trafo_control.TrafoController",
    "pandapower.timeseries.ts_runpp.inspect"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.init_newton_variables": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.init_timeseries_newton": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "len",
    "numpy.complex128",
    "numpy.zeros",
    "pandapower.pd2ppc._pd2ppc",
    "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
    "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci",
    "pandapower.pf.run_newton_raphson_pf.makeYbus_numba",
    "pandapower.powerflow._add_auxiliary_elements",
    "pandapower.runpp"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.ts_newtonpf": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pandapower.auxiliary._clean_up",
    "pandapower.pf.pfsoln_numba.pf_solution_single_slack",
    "pandapower.pf.pfsoln_numba.pfsoln",
    "pandapower.pf.run_newton_raphson_pf.newtonpf",
    "pandapower.powerflow.LoadflowNotConverged",
    "pandapower.pypower.makeSbus.makeSbus",
    "pandapower.results._copy_results_ppci_to_ppc",
    "pandapower.results._extract_results",
    "pandapower.timeseries.ts_runpp.logger"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.ts_runpp": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.update_trafos": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pandapower.build_branch._calc_trafo3w_parameter",
    "pandapower.build_branch._calc_trafo_parameter",
    "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
    "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci",
    "pandapower.pf.run_newton_raphson_pf.makeYbus_numba"
   ]
  },
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TrafoController": {
  "data": {
   "shadows": "pandapower.control.controller.trafo_control.TrafoController"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._add_auxiliary_elements": {
  "data": {
   "shadows": "pandapower.powerflow._add_auxiliary_elements"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._calc_pq_elements_and_add_on_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._calc_pq_elements_and_add_on_ppc"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._calc_shunts_and_add_on_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._calc_shunts_and_add_on_ppc"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._calc_trafo3w_parameter": {
  "data": {
   "shadows": "pandapower.build_branch._calc_trafo3w_parameter"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._calc_trafo_parameter": {
  "data": {
   "shadows": "pandapower.build_branch._calc_trafo_parameter"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._clean_up": {
  "data": {
   "shadows": "pandapower.auxiliary._clean_up"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._copy_results_ppci_to_ppc": {
  "data": {
   "shadows": "pandapower.results._copy_results_ppci_to_ppc"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._extract_results": {
  "data": {
   "shadows": "pandapower.results._extract_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_Cg": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus._get_Cg"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_Sbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus._get_Sbus"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_aranged_lookup": {
  "data": {
   "shadows": "pandapower.results._get_aranged_lookup"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_branch_flows": {
  "data": {
   "shadows": "pandapower.results_branch._get_branch_flows"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_bus_results": {
  "data": {
   "shadows": "pandapower.results_bus._get_bus_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_bus_v_results": {
  "data": {
   "shadows": "pandapower.results_bus._get_bus_v_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_gen_results": {
  "data": {
   "shadows": "pandapower.results_gen._get_gen_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_line_results": {
  "data": {
   "shadows": "pandapower.results_branch._get_line_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_trafo3w_results": {
  "data": {
   "shadows": "pandapower.results_branch._get_trafo3w_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._get_trafo_results": {
  "data": {
   "shadows": "pandapower.results_branch._get_trafo_results"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp._pd2ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._pd2ppc"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.complex128": {
  "data": {
   "shadows": "numpy.complex128"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandapower.timeseries.ts_runpp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.makeSbus": {
  "data": {
   "shadows": "pandapower.pypower.makeSbus.makeSbus"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.nr_pf": {
  "data": {
   "shadows": "pandapower.pf.run_newton_raphson_pf"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.pf_solution_single_slack": {
  "data": {
   "shadows": "pandapower.pf.pfsoln_numba.pf_solution_single_slack"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.pfsoln_full": {
  "data": {
   "shadows": "pandapower.pf.pfsoln_numba.pfsoln"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.pp": {
  "data": {
   "shadows": "pandapower"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.write_pq_results_to_element": {
  "data": {
   "shadows": "pandapower.results_bus.write_pq_results_to_element"
  },
  "type": "import"
 },
 "pandapower.timeseries.ts_runpp.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "pandapower.topology": {
  "data": {},
  "type": "module"
 },
 "pandapower.topology.create_graph": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "pplog.getLogger"
   ]
  },
  "type": "module"
 },
 "pandapower.topology.create_graph.BASE_KV": {
  "data": {
   "shadows": "pandapower.pypower.idx_bus.BASE_KV"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph.BR_R": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.BR_X": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.BR_Z": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.F_BUS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.GraphToolInterface": {
  "data": {
   "shadows": "pandapower.topology.graph_tool_interface.GraphToolInterface"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph.INDEX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.T_BUS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.WEIGHT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph._build_bus_ppc": {
  "data": {
   "shadows": "pandapower.build_bus._build_bus_ppc"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph._calc_branch_values_from_trafo_df": {
  "data": {
   "shadows": "pandapower.build_branch._calc_branch_values_from_trafo_df"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph._calc_impedance_parameters_from_dataframe": {
  "data": {
   "shadows": "pandapower.build_branch._calc_impedance_parameters_from_dataframe"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph._init_nx_options": {
  "data": {
   "shadows": "pandapower.auxiliary._init_nx_options"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph._init_ppc": {
  "data": {
   "shadows": "pandapower.pd2ppc._init_ppc"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph._trafo_df_from_trafo3w": {
  "data": {
   "shadows": "pandapower.build_branch._trafo_df_from_trafo3w"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph.add_edges": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.sqrt",
    "pandapower.topology.create_graph.BR_R",
    "pandapower.topology.create_graph.BR_X",
    "pandapower.topology.create_graph.BR_Z",
    "pandapower.topology.create_graph.F_BUS",
    "pandapower.topology.create_graph.INDEX",
    "pandapower.topology.create_graph.T_BUS",
    "pandapower.topology.create_graph.WEIGHT",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.create_graph.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph.create_nxgraph": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "itertools.combinations",
    "len",
    "list",
    "max",
    "networkx.Graph",
    "networkx.MultiGraph",
    "numpy.in1d",
    "numpy.inf",
    "numpy.split",
    "pandapower.build_branch._calc_branch_values_from_trafo_df",
    "pandapower.build_branch._calc_impedance_parameters_from_dataframe",
    "pandapower.build_branch._trafo_df_from_trafo3w",
    "pandapower.topology.create_graph.BR_R",
    "pandapower.topology.create_graph.BR_X",
    "pandapower.topology.create_graph.F_BUS",
    "pandapower.topology.create_graph.INDEX",
    "pandapower.topology.create_graph.T_BUS",
    "pandapower.topology.create_graph.WEIGHT",
    "pandapower.topology.create_graph.add_edges",
    "pandapower.topology.create_graph.get_baseR",
    "pandapower.topology.create_graph.get_edge_table",
    "pandapower.topology.create_graph.get_nx_ppc",
    "pandapower.topology.create_graph.graph_tool_available",
    "pandapower.topology.create_graph.init_par",
    "pandapower.topology.graph_tool_interface.GraphToolInterface",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.create_graph.get_baseR": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "numpy.square",
    "pandapower.pypower.idx_bus.BASE_KV"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.create_graph.get_edge_table": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.create_graph.get_nx_ppc": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "pandapower.auxiliary._init_nx_options",
    "pandapower.build_bus._build_bus_ppc",
    "pandapower.pd2ppc._init_ppc"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.create_graph.graph_tool_available": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.init_par": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.int",
    "numpy.zeros",
    "pandapower.topology.create_graph.INDEX"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.create_graph.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pandapower.topology.create_graph.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandapower.topology.create_graph.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pandapower.topology.graph_searches": {
  "data": {},
  "type": "module"
 },
 "pandapower.topology.graph_searches.calc_distance_to_bus": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "networkx.single_source_dijkstra_path_length",
    "pandapower.topology.create_graph.create_nxgraph",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "pandapower.topology.graph_searches.connected_component": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "collections.deque",
    "iter"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.connected_components": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "pandapower.topology.graph_searches.connected_component",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.create_nxgraph": {
  "data": {
   "shadows": "pandapower.topology.create_graph.create_nxgraph"
  },
  "type": "import"
 },
 "pandapower.topology.graph_searches.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "pandapower.topology.graph_searches.determine_stubs": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "pandapower.topology.create_graph.create_nxgraph",
    "pandapower.topology.graph_searches.get_2connected_buses",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.elements_on_path": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "networkx.MultiGraph",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.find_basic_graph_characteristics": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "StopIteration",
    "iter",
    "len",
    "min",
    "next",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.find_graph_characteristics": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "StopIteration",
    "dict",
    "iter",
    "len",
    "next",
    "pandapower.topology.graph_searches.find_basic_graph_characteristics",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.get_2connected_buses": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pandapower.topology.graph_searches.find_graph_characteristics"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.get_end_points_of_continuously_connected_lines": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "UserWarning",
    "itertools.combinations",
    "len",
    "networkx.MultiGraph",
    "networkx.NetworkXNoPath",
    "networkx.shortest_path",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.lines_on_path": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "pandapower.topology.graph_searches.elements_on_path"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_searches.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "pandapower.topology.graph_searches.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandapower.topology.graph_searches.unsupplied_buses": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "networkx.connected_components",
    "pandapower.topology.create_graph.create_nxgraph",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface": {
  "data": {},
  "type": "module"
 },
 "pandapower.topology.graph_tool_interface.Graph": {
  "data": {
   "shadows": "graph_tool.Graph"
  },
  "type": "import"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "graph_tool.Graph"
   ]
  },
  "type": "class"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "graph_tool.Graph.__init__",
    "pandapower.topology.graph_tool_interface.copy",
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_edge": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandapower.topology.graph_tool_interface.GraphToolInterface",
    "super"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_edge_data": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_node": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_nodes_from": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.get_edge_data": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.is_multigraph": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.nodes": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.remove_node": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.remove_nodes": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 }
}