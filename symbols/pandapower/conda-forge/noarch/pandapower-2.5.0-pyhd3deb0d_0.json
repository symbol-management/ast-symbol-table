{
 "pandapower": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.realpath",
   "pandas.options.mode.chained_assignment"
  ],
  "type": "module"
 },
 "pandapower.auxiliary": {
  "lineno": null,
  "symbols_in_volume": [
   "lightsim2grid.newtonpf.newtonpf",
   "numba.jit",
   "numpy.array",
   "numpy.divide",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.auxiliary.ADict": {
  "lineno": 62,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "class"
 },
 "pandapower.auxiliary.ADict.__call__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__deepcopy__": {
  "lineno": 175,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__delattr__": {
  "lineno": 127,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__dir__": {
  "lineno": 81,
  "symbols_in_volume": [
   "six.iterkeys"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__getattr__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__getstate__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__setattr__": {
  "lineno": 102,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ADict.__setstate__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict._build": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict._constructor": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.ADict._delattr": {
  "lineno": 120,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ADict._setattr": {
  "lineno": 95,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ADict._valid_name": {
  "lineno": 206,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.I0_from_V012": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.matmul",
   "scipy.sparse.csc.csc_matrix",
   "scipy.sparse.csr.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.I1_from_V012": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.matmul",
   "numpy.newaxis",
   "numpy.transpose",
   "scipy.sparse.csc.csc_matrix",
   "scipy.sparse.csr.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.I2_from_V012": {
  "lineno": 799,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.matmul",
   "scipy.sparse.csc.csc_matrix",
   "scipy.sparse.csr.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.I_from_SV_elementwise": {
  "lineno": 834,
  "symbols_in_volume": [
   "numpy.conjugate",
   "numpy.divide",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.I_from_V": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.matmul",
   "scipy.sparse.csc.csc_matrix",
   "scipy.sparse.csr.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.SVabc_from_SV012": {
  "lineno": 838,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.S_from_VI_elementwise": {
  "lineno": 830,
  "symbols_in_volume": [
   "numpy.multiply"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.V1_from_ppc": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.transpose",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.V_from_I": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.transpose",
   "scipy.sparse.linalg.spsolve"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.X012_to_X0": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.X012_to_X1": {
  "lineno": 723,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.X012_to_X2": {
  "lineno": 727,
  "symbols_in_volume": [
   "numpy.transpose"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._add_auxiliary_elements": {
  "lineno": 851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._add_dcline_gens": {
  "lineno": 856,
  "symbols_in_volume": [
   "pandapower.create.create_gen"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._add_opf_options": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._add_options": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._add_pf_options": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._add_ppc_options": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._add_sc_options": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._check_bus_index_and_print_warning_if_high": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._check_connectivity": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.ones",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csgraph.breadth_first_order"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._check_connectivity_opf": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.ones",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BUS_I.astype",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.BUS_TYPE.astype",
   "pandapower.pypower.idx_bus.PV",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csgraph.breadth_first_order"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._check_gen_index_and_print_warning_if_high": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._check_if_numba_is_installed": {
  "lineno": 662,
  "symbols_in_volume": [
   "numba._version.version_version",
   "packaging.version.parse"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._check_lightsim2grid_compatibility": {
  "lineno": 687,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._clean_up": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._deactive": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._get_values": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.int",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._init_nx_options": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._init_rundcopp_options": {
  "lineno": 1054,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._init_rundcpp_options": {
  "lineno": 1000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._init_runopp_options": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._init_runpp_options": {
  "lineno": 883,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.where"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._init_runse_options": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._internal_stored": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._preserve_dtypes": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._python_set_elements_oos": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._python_set_isolated_buses_oos": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary._replace_nans_with_default_limits": {
  "lineno": 872,
  "symbols_in_volume": [
   "numpy.core.numeric.copyto",
   "numpy.isnan",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._select_is_elements_numba": {
  "lineno": 457,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._set_isolated_buses_out_of_service": {
  "lineno": 644,
  "symbols_in_volume": [
   "numpy.setdiff1d",
   "numpy.setxor1d",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.pypower.idx_bus.REF.real.astype"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._set_isolated_nodes_out_of_service": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.where",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._sum_by_group": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._sum_by_group_nvals": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.auxiliary._write_lookup_to_net": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.combine_X012": {
  "lineno": 735,
  "symbols_in_volume": [
   "numpy.vstack"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.get_free_id": {
  "lineno": 264,
  "symbols_in_volume": [
   "numpy.int64"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.get_indices": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.pandapowerNet": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.auxiliary.pandapowerNet.__init__": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.auxiliary.pandapowerNet.__repr__": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.pandapowerNet.deepcopy": {
  "lineno": 231,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.phase_shift_unit_operator": {
  "lineno": 746,
  "symbols_in_volume": [
   "numpy.deg2rad",
   "numpy.exp"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.phase_to_sequence": {
  "lineno": 771,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.matmul"
  ],
  "type": "function"
 },
 "pandapower.auxiliary.ppException": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.auxiliary.sequence_to_phase": {
  "lineno": 767,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.matmul"
  ],
  "type": "function"
 },
 "pandapower.build_branch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.build_branch._branches_with_oos_buses": {
  "lineno": 589,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.hstack",
   "numpy.in1d",
   "numpy.logical_not",
   "numpy.nonzero",
   "numpy.setdiff1d",
   "numpy.vstack",
   "numpy.zeros",
   "pandapower.auxiliary.get_values",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.build_branch._build_branch_ppc": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.empty",
   "numpy.hstack",
   "numpy.nan",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.branch_cols",
   "pandapower.shortcircuit.idx_brch.branch_cols_sc"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_branch_values_from_trafo_df": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_impedance_parameter": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_R_ASYM",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.BR_X_ASYM",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_impedance_parameters_from_dataframe": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_branch._calc_line_parameter": {
  "lineno": 106,
  "symbols_in_volume": [
   "math.pi",
   "numpy.sqrt",
   "numpy.square",
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_nominal_ratio_from_dataframe": {
  "lineno": 424,
  "symbols_in_volume": [
   "pandapower.auxiliary.get_values",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_r_x_from_dataframe": {
  "lineno": 406,
  "symbols_in_volume": [
   "numpy.sign",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_r_x_y_from_dataframe": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_switch_parameter": {
  "lineno": 673,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.square",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_tap_from_dataframe": {
  "lineno": 334,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.arcsin",
   "numpy.arctan",
   "numpy.cos",
   "numpy.deg2rad",
   "numpy.isfinite",
   "numpy.rad2deg",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_trafo3w_parameter": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.nan",
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.T_BUS"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_trafo_parameter": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.T_BUS"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_xward_parameter": {
  "lineno": 479,
  "symbols_in_volume": [
   "numpy.square",
   "pandapower.auxiliary.get_values",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calc_y_from_dataframe": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.sign",
   "numpy.sqrt",
   "numpy.square"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calculate_3w_tap_changers": {
  "lineno": 862,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.build_branch._calculate_sc_voltages_of_equivalent_transformers": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.stack"
  ],
  "type": "function"
 },
 "pandapower.build_branch._end_temperature_correction_factor": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandapower.build_branch._gather_branch_switch_info": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_branch._initialize_branch_lookup": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_branch._replace_nan": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandapower.build_branch._switch_branches": {
  "lineno": 521,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.arange",
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.unique",
   "numpy.vstack",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.SHIFT.real.astype",
   "pandapower.pypower.idx_brch.TAP.real",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN"
  ],
  "type": "function"
 },
 "pandapower.build_branch._trafo_df_from_trafo3w": {
  "lineno": 794,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.build_branch._transformer_correction_factor": {
  "lineno": 766,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandapower.build_branch._wye_delta": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandapower.build_branch.get_is_lines": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_branch.get_trafo_values": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_branch.wye_delta": {
  "lineno": 850,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.build_branch.wye_delta_vector": {
  "lineno": 856,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.build_branch.z_br_to_bus_vector": {
  "lineno": 845,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.build_bus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.build_bus.DisjointSet": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.build_bus.DisjointSet.add": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_bus.DisjointSet.find": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_bus.DisjointSet.union": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_bus._add_c_to_ppc": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.where",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN"
  ],
  "type": "function"
 },
 "pandapower.build_bus._add_ext_grid_sc_impedance": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN"
  ],
  "type": "function"
 },
 "pandapower.build_bus._add_gen_impedances_ppc": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_bus._add_gen_sc_impedance": {
  "lineno": 557,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.isnan",
   "numpy.sin",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.shortcircuit.idx_bus.C_MAX"
  ],
  "type": "function"
 },
 "pandapower.build_bus._add_motor_impedances_ppc": {
  "lineno": 594,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.build_bus._build_bus_ppc": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.hstack",
   "numpy.int64",
   "numpy.nan",
   "numpy.zeros",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_bus.bus_cols",
   "pandapower.shortcircuit.idx_bus.bus_cols_sc"
  ],
  "type": "function"
 },
 "pandapower.build_bus._calc_pq_elements_and_add_on_ppc": {
  "lineno": 367,
  "symbols_in_volume": [
   "collections.Counter",
   "numpy.array",
   "numpy.float64",
   "numpy.hstack",
   "numpy.sum",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.CID",
   "pandapower.pypower.idx_bus.CZD",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD"
  ],
  "type": "function"
 },
 "pandapower.build_bus._calc_shunts_and_add_on_ppc": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.sqrt",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS"
  ],
  "type": "function"
 },
 "pandapower.build_bus._fill_auxiliary_buses": {
  "lineno": 335,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN"
  ],
  "type": "function"
 },
 "pandapower.build_bus._get_motor_pq": {
  "lineno": 439,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandapower.build_bus.create_bus_lookup": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.in1d",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.build_bus.create_bus_lookup_numba": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.max",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.build_bus.create_bus_lookup_numpy": {
  "lineno": 119,
  "symbols_in_volume": [
   "collections.defaultdict",
   "itertools.chain",
   "numpy.hstack",
   "numpy.unique"
  ],
  "type": "function"
 },
 "pandapower.build_bus.create_consecutive_bus_lookup": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pandapower.build_bus.ds_create": {
  "lineno": 45,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "pandapower.build_bus.ds_find": {
  "lineno": 23,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "pandapower.build_bus.ds_union": {
  "lineno": 33,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "pandapower.build_bus.fill_bus_lookup": {
  "lineno": 57,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "pandapower.build_bus.get_voltage_init_vector": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.build_bus.set_reference_buses": {
  "lineno": 353,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.REF"
  ],
  "type": "function"
 },
 "pandapower.build_gen": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.build_gen._build_gen_ppc": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_gen._build_pp_ext_grid": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.idx_gen.VG"
  ],
  "type": "function"
 },
 "pandapower.build_gen._build_pp_gen": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.PV",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.MBASE",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.VG"
  ],
  "type": "function"
 },
 "pandapower.build_gen._build_pp_pq_element": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.MBASE",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.build_gen._build_pp_xward": {
  "lineno": 225,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.pypower.idx_bus.PV",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.idx_gen.VG"
  ],
  "type": "function"
 },
 "pandapower.build_gen._check_for_reference_bus": {
  "lineno": 311,
  "symbols_in_volume": [
   "pandapower.pf.ppci_variables.bustypes"
  ],
  "type": "function"
 },
 "pandapower.build_gen._check_gen_vm_limits": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN"
  ],
  "type": "function"
 },
 "pandapower.build_gen._check_voltage_angles_at_same_bus": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.GEN_BUS.astype"
  ],
  "type": "function"
 },
 "pandapower.build_gen._check_voltage_setpoints_at_same_bus": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.VG"
  ],
  "type": "function"
 },
 "pandapower.build_gen._different_values_at_one_bus": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.ones",
   "numpy.unique"
  ],
  "type": "function"
 },
 "pandapower.build_gen._enforce_controllable_vm_pu_p_mw": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN"
  ],
  "type": "function"
 },
 "pandapower.build_gen._init_ppc_gen": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN"
  ],
  "type": "function"
 },
 "pandapower.build_gen.add_element_to_gen": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.build_gen.add_gen_order": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.build_gen.add_p_constraints": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN"
  ],
  "type": "function"
 },
 "pandapower.build_gen.add_q_constraints": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN"
  ],
  "type": "function"
 },
 "pandapower.control": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.control.basic_controller": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.control.basic_controller.Controller": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandapower.io_utils.JSONSerializableClass"
  ],
  "type": "class"
 },
 "pandapower.control.basic_controller.Controller.__getstate__": {
  "lineno": 53,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandapower.auxiliary.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__repr__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__setstate__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.__str__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.add_controller_to_net": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandapower.auxiliary._preserve_dtypes",
   "pandapower.control.util.auxiliary.drop_same_type_existing_controllers",
   "pandapower.control.util.auxiliary.log_same_type_existing_controllers"
  ],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.control_step": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.finalize_control": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.finalize_step": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.initialize_control": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.is_converged": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.repair_control": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.restore_init_state": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.set_active": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.set_recycle": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.basic_controller.Controller.time_step": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.control.controller.const_control": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.control.controller.const_control.ConstControl": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandapower.control.basic_controller.Controller"
  ],
  "type": "class"
 },
 "pandapower.control.controller.const_control.ConstControl.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl._write_to_all_index": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl._write_to_single_index": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl._write_with_loc": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.control_step": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.initialize_control": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.is_converged": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.set_recycle": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.time_step": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.const_control.ConstControl.write_to_net": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandapower.control.controller.trafo_control.TrafoController"
  ],
  "type": "class"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl.control_step": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.clip"
  ],
  "type": "function"
 },
 "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl.is_converged": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl": {
  "lineno": 5,
  "symbols_in_volume": [
   "pandapower.control.controller.trafo_control.TrafoController"
  ],
  "type": "class"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl.control_step": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo.DiscreteTapControl.DiscreteTapControl.is_converged": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo_control": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.control.controller.trafo_control.TrafoController": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandapower.control.basic_controller.Controller"
  ],
  "type": "class"
 },
 "pandapower.control.controller.trafo_control.TrafoController.__init__": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.deg2rad",
   "numpy.isnan",
   "numpy.sign"
  ],
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.__repr__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.__str__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.set_recycle": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.controller.trafo_control.TrafoController.timestep": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.control.run_control.ControllerNotConverged": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandapower.ppException"
  ],
  "type": "class"
 },
 "pandapower.control.run_control.NetCalculationNotConverged": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandapower.ppException"
  ],
  "type": "class"
 },
 "pandapower.control.run_control._control_repair": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control._control_step": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control._evaluate_net": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.check_final_convergence": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.check_for_initial_run": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.control_finalization": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.control_implementation": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.control_initialization": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.ctrl_variables_default": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.control.run_control.get_controller_order": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.ndarray",
   "pandapower.control.util.auxiliary.asarray"
  ],
  "type": "function"
 },
 "pandapower.control.run_control.get_recycle": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.net_initialization": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.run_control.prepare_run_ctrl": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandapower.LoadflowNotConverged",
   "pandapower.OPFNotConverged"
  ],
  "type": "function"
 },
 "pandapower.control.run_control.run_control": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.control.util.auxiliary": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.control.util.auxiliary._controller_attributes_query": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandapower.toolbox.ensure_iterability"
  ],
  "type": "function"
 },
 "pandapower.control.util.auxiliary.asarray": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.isscalar",
   "numpy.ndim"
  ],
  "type": "function"
 },
 "pandapower.control.util.auxiliary.drop_same_type_existing_controllers": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.util.auxiliary.get_controller_index": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandapower.control.util.auxiliary.get_controller_index_by_type": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.util.auxiliary.get_controller_index_by_typename": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.util.auxiliary.log_same_type_existing_controllers": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.control.util.diagnostic": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.control.util.diagnostic.control_diagnostic": {
  "lineno": 18,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.control.controller.trafo_control.TrafoController",
   "pandapower.control.util.auxiliary.get_controller_index"
  ],
  "type": "function"
 },
 "pandapower.convert_format": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.convert_format._add_missing_columns": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.convert_format._add_missing_tables": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandapower.create.create_empty_network"
  ],
  "type": "function"
 },
 "pandapower.convert_format._add_nominal_power": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._convert_bus_pq_meas_to_load_reference": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._convert_costs": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandapower.create.create_poly_cost"
  ],
  "type": "function"
 },
 "pandapower.convert_format._convert_objects": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._convert_to_generation_system": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._convert_to_mw": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.convert_format._create_seperate_cost_tables": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create.create_poly_cost"
  ],
  "type": "function"
 },
 "pandapower.convert_format._rename_columns": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandapower.create.create_empty_network"
  ],
  "type": "function"
 },
 "pandapower.convert_format._set_data_type_of_columns": {
  "lineno": 259,
  "symbols_in_volume": [
   "packaging.version.parse",
   "pandapower.create.create_empty_network",
   "pandas.DataFrame",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.convert_format._update_column": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._update_object_attributes": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._update_trafo_parameter_names": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format._update_trafo_type_parameter_names": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.convert_format.convert_format": {
  "lineno": 15,
  "symbols_in_volume": [
   "packaging.version.parse",
   "pandapower.__version__",
   "pandapower.results.reset_results",
   "pandapower.toolbox.set_data_type_of_columns_to_default"
  ],
  "type": "function"
 },
 "pandapower.converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.converter.matpower": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.converter.matpower.from_mpc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.converter.matpower.from_mpc._adjust_ppc_indices": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc._change_ppc_TAP_value": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc._copy_data_from_mpc_to_ppc": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc._mpc2ppc": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.converter.matpower.from_mpc.from_mpc": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandapower.converter.pypower.from_ppc"
  ],
  "type": "function"
 },
 "pandapower.converter.matpower.to_mpc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.converter.matpower.to_mpc._ppc2mpc": {
  "lineno": 54,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.where"
  ],
  "type": "function"
 },
 "pandapower.converter.matpower.to_mpc.to_mpc": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandapower.converter.pypower.to_ppc",
   "scipy.io.savemat"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.converter.powermodels.from_pm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.converter.powermodels.from_pm.pm_results_to_ppc_results": {
  "lineno": 33,
  "symbols_in_volume": [
   "math.degrees",
   "numpy.isnan",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.results._copy_results_ppci_to_ppc"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.from_pm.read_ots_results": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandapower.pypower.idx_brch.BR_STATUS.real"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.from_pm.read_pm_results_to_net": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.auxiliary._clean_up",
   "pandapower.converter.logger.warning",
   "pandapower.optimal_powerflow.OPFNotConverged",
   "pandapower.results._extract_results"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.from_pm.read_tnep_results": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.converter.powermodels.to_pm._pp_element_to_pm": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones",
   "pandas",
   "pandas.item"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.add_pm_options": {
  "lineno": 349,
  "symbols_in_volume": [
   "numpy.inf"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.build_ne_branch": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.zeros",
   "pandapower.build_branch._calc_line_parameter",
   "pandapower.pypower.idx_brch.branch_cols"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.convert_pp_to_pm": {
  "lineno": 29,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.remove",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.convert_to_pm_structure": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_auxiliary_elements",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.results.init_results"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.create_pm_lookups": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.dump_pm_json": {
  "lineno": 100,
  "symbols_in_volume": [
   "json.dump",
   "os.path.join",
   "tempfile._get_candidate_names",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.get_branch_angles": {
  "lineno": 148,
  "symbols_in_volume": [
   "math.radians",
   "pandapower.pypower.idx_brch.ANGMAX.real",
   "pandapower.pypower.idx_brch.ANGMIN.real"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.init_ne_line": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.converter.powermodels.to_pm.ppc_to_pm": {
  "lineno": 188,
  "symbols_in_volume": [
   "math.radians",
   "numpy.allclose",
   "numpy.sqrt",
   "pandapower.pypower.idx_brch.BR_B.imag",
   "pandapower.pypower.idx_brch.BR_B.real",
   "pandapower.pypower.idx_brch.BR_R.real",
   "pandapower.pypower.idx_brch.BR_STATUS.real",
   "pandapower.pypower.idx_brch.BR_X.real",
   "pandapower.pypower.idx_brch.F_BUS.real",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.RATE_A.real",
   "pandapower.pypower.idx_brch.RATE_B.real",
   "pandapower.pypower.idx_brch.RATE_C.real",
   "pandapower.pypower.idx_brch.SHIFT.real",
   "pandapower.pypower.idx_brch.TAP.real",
   "pandapower.pypower.idx_brch.T_BUS.real",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_bus.ZONE",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.COST.tolist",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.idx_gen.VG",
   "pandas"
  ],
  "type": "function"
 },
 "pandapower.converter.pypower": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.converter.pypower.from_ppc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pypower.ppoption.ppoption"
  ],
  "type": "module"
 },
 "pandapower.converter.pypower.from_ppc._create_costs": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.NCOST"
  ],
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc._gen_bus_info": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.where",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.GEN_STATUS"
  ],
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc._validate_diff_res": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.max"
  ],
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc.from_ppc": {
  "lineno": 86,
  "symbols_in_volume": [
   "math.pi",
   "numpy.array",
   "numpy.nan",
   "numpy.sign",
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_shunt",
   "pandapower.create_transformer_from_parameters",
   "pandapower.get_element_index",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandas.DataFrame",
   "pandas.Series",
   "pplog.DEBUG"
  ],
  "type": "function"
 },
 "pandapower.converter.pypower.from_ppc.validate_from_ppc": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.array",
   "numpy.max",
   "numpy.nan",
   "numpy.zeros",
   "pandapower.LoadflowNotConverged",
   "pandapower.OPFNotConverged",
   "pandapower.get_element_index",
   "pandapower.rundcopp",
   "pandapower.rundcpp",
   "pandapower.runopp",
   "pandapower.runpp",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "pypower.rundcopf.rundcopf",
   "pypower.rundcpf.rundcpf",
   "pypower.runopf.runopf",
   "pypower.runpf.runpf"
  ],
  "type": "function"
 },
 "pandapower.converter.pypower.to_ppc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.converter.pypower.to_ppc.to_ppc": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.opf.validate_opf_input._check_necessary_opf_parameters",
   "pandapower.powerflow._pd2ppc"
  ],
  "type": "function"
 },
 "pandapower.create": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.create._add_multiple_branch_geodata": {
  "lineno": 3585,
  "symbols_in_volume": [
   "packaging.version.parse",
   "pandapower.auxiliary._preserve_dtypes",
   "pandas.DataFrame",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.create._add_series_to_entries": {
  "lineno": 3570,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.isnan",
   "numpy.nan",
   "packaging.version.parse",
   "pandas.Series",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.create._check_branch_element": {
  "lineno": 3530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create._check_multiple_branch_elements": {
  "lineno": 3538,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.isin"
  ],
  "type": "function"
 },
 "pandapower.create._check_multiple_node_elements": {
  "lineno": 3524,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.isin"
  ],
  "type": "function"
 },
 "pandapower.create._check_node_element": {
  "lineno": 3518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create._create_column_and_set_value": {
  "lineno": 3547,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.isnan",
   "numpy.nan",
   "packaging.version.parse",
   "pandas.Series",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.create._get_index_with_check": {
  "lineno": 3495,
  "symbols_in_volume": [
   "pandapower.auxiliary.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.create._get_multiple_index_with_check": {
  "lineno": 3505,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "numpy.isin",
   "pandapower.auxiliary.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.create._set_entries": {
  "lineno": 3606,
  "symbols_in_volume": [
   "pandapower.auxiliary._preserve_dtypes"
  ],
  "type": "function"
 },
 "pandapower.create._set_multiple_entries": {
  "lineno": 3619,
  "symbols_in_volume": [
   "packaging.version.parse",
   "pandapower.auxiliary._preserve_dtypes",
   "pandas.DataFrame",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.create._set_multiple_entries.check_entry": {
  "lineno": 3625,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isin",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.create.create_asymmetric_load": {
  "lineno": 825,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_asymmetric_sgen": {
  "lineno": 1163,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_bus": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_buses": {
  "lineno": 593,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.create.create_dcline": {
  "lineno": 3237,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_empty_network": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.zeros",
   "pandapower.__version__",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.results.reset_results",
   "pandapower.std_types.add_basic_std_types",
   "pandas.DataFrame",
   "pandas.Int64Index"
  ],
  "type": "function"
 },
 "pandapower.create.create_ext_grid": {
  "lineno": 1636,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_gen": {
  "lineno": 1349,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.isnan",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.create.create_gens": {
  "lineno": 1463,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_impedance": {
  "lineno": 3088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_line": {
  "lineno": 1730,
  "symbols_in_volume": [
   "numpy.nan",
   "pandapower.std_types.load_std_type"
  ],
  "type": "function"
 },
 "pandapower.create.create_line_from_parameters": {
  "lineno": 1899,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_lines": {
  "lineno": 1822,
  "symbols_in_volume": [
   "pandapower.std_types.load_std_type"
  ],
  "type": "function"
 },
 "pandapower.create.create_lines_from_parameters": {
  "lineno": 2008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_load": {
  "lineno": 653,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_load_from_cosphi": {
  "lineno": 943,
  "symbols_in_volume": [
   "pandapower.toolbox.pq_from_cosphi"
  ],
  "type": "function"
 },
 "pandapower.create.create_loads": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_measurement": {
  "lineno": 3298,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.create.create_motor": {
  "lineno": 1570,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_poly_cost": {
  "lineno": 3443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_pwl_cost": {
  "lineno": 3396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_series_reactor_as_impedance": {
  "lineno": 3127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_sgen": {
  "lineno": 972,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_sgen_from_cosphi": {
  "lineno": 1227,
  "symbols_in_volume": [
   "pandapower.toolbox.pq_from_cosphi"
  ],
  "type": "function"
 },
 "pandapower.create.create_sgens": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_shunt": {
  "lineno": 3014,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_shunt_as_capacitor": {
  "lineno": 3063,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_storage": {
  "lineno": 1254,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_switch": {
  "lineno": 2845,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_switches": {
  "lineno": 2928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_transformer": {
  "lineno": 2105,
  "symbols_in_volume": [
   "numpy.nan",
   "pandapower.std_types.load_std_type",
   "pandas.notnull"
  ],
  "type": "function"
 },
 "pandapower.create.create_transformer3w": {
  "lineno": 2483,
  "symbols_in_volume": [
   "numpy.nan",
   "packaging.version.parse",
   "pandapower.std_types.load_std_type",
   "pandas.DataFrame",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.create.create_transformer3w_from_parameters": {
  "lineno": 2587,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_transformer_from_parameters": {
  "lineno": 2212,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.create.create_transformers3w_from_parameters": {
  "lineno": 2712,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.bool_",
   "numpy.float64",
   "numpy.isin",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.create.create_transformers_from_parameters": {
  "lineno": 2356,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.float64",
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.create.create_ward": {
  "lineno": 3162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.create.create_xward": {
  "lineno": 3195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.diagnostic.check_boolean": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_greater_equal_zero": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_greater_zero": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_greater_zero_less_equal_one": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_less_equal_zero": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_less_zero": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_number": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.check_pos_int": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.check_switch_type": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.deviation_from_std_type": {
  "lineno": 855,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.diagnostic": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandapower.diagnostic_reports.diagnostic_report"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.different_voltage_levels_connected": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.disconnected_elements": {
  "lineno": 689,
  "symbols_in_volume": [
   "pandapower.toolbox.get_connected_elements",
   "pandapower.topology.connected_components",
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.impedance_values_close_to_zero": {
  "lineno": 505,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_switch",
   "pandapower.run.runpp"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.invalid_values": {
  "lineno": 225,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.missing_bus_indices": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.multiple_voltage_controlling_elements_per_bus": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.no_ext_grid": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.nominal_voltages_dont_match": {
  "lineno": 567,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.numba_comparison": {
  "lineno": 813,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.run.runpp"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.overload": {
  "lineno": 357,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.run.runpp"
  ],
  "type": "function"
 },
 "pandapower.diagnostic.parallel_switches": {
  "lineno": 902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.wrong_reference_system": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic.wrong_switch_configuration": {
  "lineno": 412,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.run.runpp"
  ],
  "type": "function"
 },
 "pandapower.diagnostic_reports": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.diagnostic_reports.DiagnosticReports": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_deviation_from_std_type": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_different_voltage_levels_connected": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandapower.toolbox.get_connected_buses_at_element"
  ],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_disconnected_elements": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_impedance_values_close_to_zero": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_invalid_values": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_missing_bus_indices": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_multiple_voltage_controlling_elements_per_bus": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_no_ext_grid": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_nominal_voltages_dont_match": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_numba_comparison": {
  "lineno": 577,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_overload": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_parallel_switches": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_wrong_reference_system": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.DiagnosticReports.report_wrong_switch_configuration": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.diagnostic_reports.diagnostic_report": {
  "lineno": 19,
  "symbols_in_volume": [
   "pplog.INFO",
   "pplog.WARNING"
  ],
  "type": "function"
 },
 "pandapower.estimation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.algorithm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.algorithm.base": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.check_observability": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.check_result": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.estimate": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.BaseAlgorithm.initialize": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.IRWLSAlgorithm": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.IRWLSAlgorithm.estimate": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.linalg.linalg.LinAlgError",
   "numpy.max",
   "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS",
   "pandapower.estimation.algorithm.estimator.get_estimator",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.linalg.spsolve"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.WLSAlgorithm": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.WLSAlgorithm.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.WLSAlgorithm.estimate": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diagflat",
   "numpy.linalg.linalg.LinAlgError",
   "numpy.max",
   "pandapower.estimation.algorithm.matrix_base.BaseAlgebra",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.linalg.spsolve"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.base.WLSZeroInjectionConstraintsAlgorithm": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.base.WLSZeroInjectionConstraintsAlgorithm.estimate": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.abs",
   "numpy.any",
   "numpy.argwhere",
   "numpy.diagflat",
   "numpy.ix_",
   "numpy.linalg.linalg.LinAlgError",
   "numpy.max",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints",
   "pandapower.estimation.idx_bus.P",
   "pandapower.estimation.idx_bus.P_STD",
   "pandapower.estimation.idx_bus.Q",
   "pandapower.estimation.idx_bus.Q_STD",
   "pandapower.estimation.idx_bus.ZERO_INJ_FLAG",
   "pandapower.pypower.idx_bus.bus_cols",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "scipy.sparse.linalg.spsolve",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
  ],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorIRWLS.create_phi": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
  ],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt.cost_function": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt.create_cost_jacobian": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.LAVEstimator": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.LAVEstimator.cost_function": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.LAVEstimator.create_cost_jacobian": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.sign",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt.cost_function": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QCEstimatorOpt.create_cost_jacobian": {
  "lineno": 166,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt.__init__": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt.cost_function": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.QLEstimatorOpt.create_cost_jacobian": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.sign",
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.ExtendedPPCI"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS._ps": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.dot",
   "numpy.max",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS._ps.calc_sm": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.abs",
   "pandapower.pf.no_numba.jit"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS.create_phi": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.diagflat"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS.weight": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.min",
   "numpy.ones",
   "numpy.sum",
   "scipy.stats.chi2.ppf"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.cost_function": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.create_cost_jacobian": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.sum"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.WLSEstimator.create_phi": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.diagflat"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.estimator.get_estimator": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.lp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.algorithm.lp.LPAlgorithm": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.estimation.algorithm.base.BaseAlgorithm"
  ],
  "type": "class"
 },
 "pandapower.estimation.algorithm.lp.LPAlgorithm.estimate": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.linalg.linalg.LinAlgError",
   "numpy.max",
   "pandapower.estimation.algorithm.matrix_base.BaseAlgebra"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.lp.LPAlgorithm.solve_lp": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.c_",
   "numpy.eye",
   "numpy.linalg.linalg.LinAlgError",
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros",
   "scipy.optimize.linprog",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.ExtendedPPCI",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.T_BUS.real.astype"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dSbr_dv": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandapower.pypower.dSbr_dV.dSbr_dV"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dSbus_dv": {
  "lineno": 135,
  "symbols_in_volume": [
   "pandapower.pypower.dSbus_dV.dSbus_dV"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dimiabr_dV": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.angle",
   "pandapower.pypower.dIbr_dV.dIbr_dV"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dvabus_dV": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra._dvmbus_dV": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.eye",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.create_hx": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.angle",
   "numpy.conj",
   "numpy.imag",
   "numpy.r_",
   "numpy.real"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.create_hx_jacobian": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.r_",
   "scipy.sparse.hstack",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.create_rx": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebra.initialize_Y": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints.create_cx": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.r_"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.matrix_base.BaseAlgebraZeroInjConstraints.create_cx_jacobian": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.r_"
  ],
  "type": "function"
 },
 "pandapower.estimation.algorithm.optimization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.algorithm.optimization.OptAlgorithm": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandapower.estimation.algorithm.base.BaseAlgorithm"
  ],
  "type": "class"
 },
 "pandapower.estimation.algorithm.optimization.OptAlgorithm.estimate": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandapower.estimation.algorithm.estimator.BaseEstimatorOpt",
   "pandapower.estimation.algorithm.estimator.get_estimator",
   "scipy.optimize.minimize"
  ],
  "type": "function"
 },
 "pandapower.estimation.idx_brch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.idx_bus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.ppc_conversion": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.estimation.idx_brch.IA_FROM",
   "pandapower.estimation.idx_brch.IA_FROM_IDX",
   "pandapower.estimation.idx_brch.IA_FROM_STD",
   "pandapower.estimation.idx_brch.IA_TO",
   "pandapower.estimation.idx_brch.IA_TO_IDX",
   "pandapower.estimation.idx_brch.IA_TO_STD",
   "pandapower.estimation.idx_brch.IM_FROM",
   "pandapower.estimation.idx_brch.IM_FROM_IDX",
   "pandapower.estimation.idx_brch.IM_FROM_STD",
   "pandapower.estimation.idx_brch.IM_TO",
   "pandapower.estimation.idx_brch.IM_TO_IDX",
   "pandapower.estimation.idx_brch.IM_TO_STD",
   "pandapower.estimation.idx_brch.P_FROM",
   "pandapower.estimation.idx_brch.P_FROM_IDX",
   "pandapower.estimation.idx_brch.P_FROM_STD",
   "pandapower.estimation.idx_brch.P_TO",
   "pandapower.estimation.idx_brch.P_TO_IDX",
   "pandapower.estimation.idx_brch.P_TO_STD",
   "pandapower.estimation.idx_brch.Q_FROM",
   "pandapower.estimation.idx_brch.Q_FROM_IDX",
   "pandapower.estimation.idx_brch.Q_FROM_STD",
   "pandapower.estimation.idx_brch.Q_TO",
   "pandapower.estimation.idx_brch.Q_TO_IDX",
   "pandapower.estimation.idx_brch.Q_TO_STD",
   "pandapower.estimation.idx_bus.P",
   "pandapower.estimation.idx_bus.P_IDX",
   "pandapower.estimation.idx_bus.P_STD",
   "pandapower.estimation.idx_bus.Q",
   "pandapower.estimation.idx_bus.Q_IDX",
   "pandapower.estimation.idx_bus.Q_STD",
   "pandapower.estimation.idx_bus.VA",
   "pandapower.estimation.idx_bus.VA_IDX",
   "pandapower.estimation.idx_bus.VA_STD",
   "pandapower.estimation.idx_bus.VM",
   "pandapower.estimation.idx_bus.VM_IDX",
   "pandapower.estimation.idx_bus.VM_STD",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI": {
  "lineno": 414,
  "symbols_in_volume": [
   "collections.UserDict"
  ],
  "type": "class"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.E2V": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.V": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.__init__": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.r_",
   "numpy.r_.ravel",
   "numpy.radians",
   "numpy.sum",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.BUS_TYPE.ravel",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI._initialize_meas": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.get_Y": {
  "lineno": 472,
  "symbols_in_volume": [
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.reset": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.update_E": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.ExtendedPPCI.update_meas": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._add_measurements_to_ppci": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argwhere",
   "numpy.deg2rad",
   "numpy.full",
   "numpy.hstack",
   "numpy.nan",
   "numpy.setdiff1d",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.unique",
   "pandapower.estimation.idx_brch.branch_cols_se",
   "pandapower.estimation.idx_bus.bus_cols_se",
   "pandapower.pypower.idx_brch.branch_cols",
   "pandapower.pypower.idx_bus.bus_cols",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._add_zero_injection": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.concatenate",
   "numpy.isnan",
   "pandapower.estimation.idx_bus.P",
   "pandapower.estimation.idx_bus.P_STD",
   "pandapower.estimation.idx_bus.Q",
   "pandapower.estimation.idx_bus.Q_STD",
   "pandapower.estimation.idx_bus.ZERO_INJ_FLAG"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._build_measurement_vectors": {
  "lineno": 313,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.concatenate",
   "numpy.float64",
   "numpy.isnan",
   "numpy.r_",
   "pandapower.estimation.idx_brch.IA_FROM",
   "pandapower.estimation.idx_brch.IA_FROM_IDX",
   "pandapower.estimation.idx_brch.IA_FROM_STD",
   "pandapower.estimation.idx_brch.IA_TO",
   "pandapower.estimation.idx_brch.IA_TO_IDX",
   "pandapower.estimation.idx_brch.IA_TO_STD",
   "pandapower.estimation.idx_brch.IM_FROM",
   "pandapower.estimation.idx_brch.IM_FROM_IDX",
   "pandapower.estimation.idx_brch.IM_FROM_STD",
   "pandapower.estimation.idx_brch.IM_TO",
   "pandapower.estimation.idx_brch.IM_TO_IDX",
   "pandapower.estimation.idx_brch.IM_TO_STD",
   "pandapower.estimation.idx_brch.P_FROM",
   "pandapower.estimation.idx_brch.P_FROM_IDX",
   "pandapower.estimation.idx_brch.P_FROM_STD",
   "pandapower.estimation.idx_brch.P_TO",
   "pandapower.estimation.idx_brch.P_TO_IDX",
   "pandapower.estimation.idx_brch.P_TO_STD",
   "pandapower.estimation.idx_brch.Q_FROM",
   "pandapower.estimation.idx_brch.Q_FROM_IDX",
   "pandapower.estimation.idx_brch.Q_FROM_STD",
   "pandapower.estimation.idx_brch.Q_TO",
   "pandapower.estimation.idx_brch.Q_TO_IDX",
   "pandapower.estimation.idx_brch.Q_TO_STD",
   "pandapower.estimation.idx_bus.P",
   "pandapower.estimation.idx_bus.P_IDX",
   "pandapower.estimation.idx_bus.P_STD",
   "pandapower.estimation.idx_bus.Q",
   "pandapower.estimation.idx_bus.Q_IDX",
   "pandapower.estimation.idx_bus.Q_STD",
   "pandapower.estimation.idx_bus.VA",
   "pandapower.estimation.idx_bus.VA_IDX",
   "pandapower.estimation.idx_bus.VA_STD",
   "pandapower.estimation.idx_bus.VM",
   "pandapower.estimation.idx_bus.VM_IDX",
   "pandapower.estimation.idx_bus.VM_STD",
   "pandapower.pypower.idx_brch.branch_cols",
   "pandapower.pypower.idx_bus.bus_cols"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._init_ppc": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.auxiliary._init_runse_options",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pf.run_newton_raphson_pf._run_dc_pf"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion._initialize_voltage": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandapower.estimation.util.estimate_voltage_vector"
  ],
  "type": "function"
 },
 "pandapower.estimation.ppc_conversion.pp2eppci": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.results._calc_power_flow": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.multiply",
   "pandapower.pf.pfsoln_numba.pfsoln",
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD"
  ],
  "type": "function"
 },
 "pandapower.estimation.results._extract_result_ppci_to_pp": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandapower.auxiliary.get_values",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.results._extract_results_se",
   "pandapower.results.init_results"
  ],
  "type": "function"
 },
 "pandapower.estimation.results.eppci2pp": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.state_estimation": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.estimation.algorithm.base.IRWLSAlgorithm",
   "pandapower.estimation.algorithm.base.WLSAlgorithm",
   "pandapower.estimation.algorithm.base.WLSZeroInjectionConstraintsAlgorithm",
   "pandapower.estimation.algorithm.lp.LPAlgorithm",
   "pandapower.estimation.algorithm.optimization.OptAlgorithm",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.estimation.state_estimation.StateEstimation": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.estimation.state_estimation.StateEstimation.__init__": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.state_estimation.StateEstimation.estimate": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion.pp2eppci",
   "pandapower.estimation.results.eppci2pp",
   "pandapower.estimation.util.reset_bb_switch_impedance",
   "pandapower.estimation.util.set_bb_switch_impedance"
  ],
  "type": "function"
 },
 "pandapower.estimation.state_estimation.StateEstimation.perform_chi2_test": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.dot",
   "scipy.stats.chi2.ppf"
  ],
  "type": "function"
 },
 "pandapower.estimation.state_estimation.StateEstimation.perform_rn_max_test": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.argsort",
   "numpy.diag",
   "numpy.dot",
   "numpy.linalg.inv",
   "numpy.linalg.linalg.LinAlgError",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandapower.estimation.state_estimation.chi2_analysis": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion._initialize_voltage"
  ],
  "type": "function"
 },
 "pandapower.estimation.state_estimation.estimate": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion._initialize_voltage"
  ],
  "type": "function"
 },
 "pandapower.estimation.state_estimation.remove_bad_data": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandapower.estimation.ppc_conversion._initialize_voltage"
  ],
  "type": "function"
 },
 "pandapower.estimation.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.estimation.util._get_bus_ppc_mapping": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandapower.rundcpp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.estimation.util.add_virtual_meas_error": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "pandapower.estimation.util.add_virtual_meas_from_loadflow": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.random.seed",
   "pandapower.create_measurement"
  ],
  "type": "function"
 },
 "pandapower.estimation.util.add_virtual_pmu_meas_from_loadflow": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.angle",
   "numpy.conj",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.rad2deg",
   "numpy.random.seed",
   "pandapower.create_measurement"
  ],
  "type": "function"
 },
 "pandapower.estimation.util.estimate_voltage_vector": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.topology.connected_component",
   "pandapower.topology.create_nxgraph",
   "pandas.DataFrame",
   "pandas.isnull",
   "pandas.notnull"
  ],
  "type": "function"
 },
 "pandapower.estimation.util.reset_bb_switch_impedance": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.estimation.util.set_bb_switch_impedance": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.file_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.file_io._from_excel_old": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandapower.create.create_empty_network",
   "pandas.isnull",
   "pandas.notnull"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_excel": {
  "lineno": 153,
  "symbols_in_volume": [
   "os.path.isfile",
   "packaging.version.parse",
   "pandapower.convert_format.convert_format",
   "pandapower.io_utils.from_dict_of_dfs",
   "pandas.ExcelFile",
   "pandas.__version__",
   "pandas.read_excel"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_json": {
  "lineno": 215,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_json_dict": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.int64",
   "pandapower.create.create_empty_network",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_json_string": {
  "lineno": 248,
  "symbols_in_volume": [
   "json.loads",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.convert_format.convert_format",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.decrypt_string",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_pickle": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.convert_format.convert_format",
   "pandapower.io_utils.get_raw_data_from_pickle",
   "pandapower.io_utils.transform_net_with_df_and_geo"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_sql": {
  "lineno": 325,
  "symbols_in_volume": [
   "pandapower.io_utils.from_dict_of_dfs",
   "pandas.read_sql_query"
  ],
  "type": "function"
 },
 "pandapower.file_io.from_sqlite": {
  "lineno": 337,
  "symbols_in_volume": [
   "sqlite3.connect"
  ],
  "type": "function"
 },
 "pandapower.file_io.to_excel": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandapower.io_utils.to_dict_of_dfs",
   "pandas.ExcelWriter"
  ],
  "type": "function"
 },
 "pandapower.file_io.to_json": {
  "lineno": 76,
  "symbols_in_volume": [
   "json.dumps",
   "pandapower.io_utils.PPJSONEncoder",
   "pandapower.io_utils.encrypt_string"
  ],
  "type": "function"
 },
 "pandapower.file_io.to_pickle": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandapower.io_utils.to_dict_with_coord_transform",
   "pickle.dump"
  ],
  "type": "function"
 },
 "pandapower.file_io.to_sql": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandapower.io_utils.to_dict_of_dfs"
  ],
  "type": "function"
 },
 "pandapower.file_io.to_sqlite": {
  "lineno": 118,
  "symbols_in_volume": [
   "sqlite3.connect"
  ],
  "type": "function"
 },
 "pandapower.io_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.io_utils.FromSerializable": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.io_utils.FromSerializable.__get__": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializable.__init__": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializable.register": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializable.register.decorator": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.io_utils.FromSerializableRegistry.DataFrame": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.GeoDataFrame": {
  "lineno": 483,
  "symbols_in_volume": [
   "fiona.Collection",
   "geopandas.GeoDataFrame.from_features",
   "json.loads",
   "numpy.int64",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.Series": {
  "lineno": 408,
  "symbols_in_volume": [
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.__init__": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.function": {
  "lineno": 445,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.method": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.networkx": {
  "lineno": 435,
  "symbols_in_volume": [
   "networkx.readwrite.json_graph.adjacency_graph"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.pandapowerNet": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandapower.create.create_empty_network",
   "pandapower.from_json_string"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.rest": {
  "lineno": 454,
  "symbols_in_volume": [
   "functools.partial",
   "importlib.import_module",
   "inspect.isclass",
   "json.loads",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.FromSerializableRegistry.shapely": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.io_utils.JSONSerializableClass.__init__": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.add_to_net": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.equals": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.equals.UnequalityFound": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.io_utils.JSONSerializableClass.equals.check_callable_equality": {
  "lineno": 660,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.equals.check_dictionary_equality": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.equals.check_equality": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.any",
   "numpy.equal",
   "numpy.generic",
   "numpy.isnan",
   "numpy.ndarray",
   "pandapower.auxiliary.pandapowerNet",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.from_dict": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.from_json": {
  "lineno": 681,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.to_dict": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.to_dict.consider_callable": {
  "lineno": 587,
  "symbols_in_volume": [
   "inspect._findclass",
   "types.FunctionType",
   "types.MethodType"
  ],
  "type": "function"
 },
 "pandapower.io_utils.JSONSerializableClass.to_json": {
  "lineno": 578,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "pandapower.io_utils.PPJSONDecoder": {
  "lineno": 503,
  "symbols_in_volume": [
   "json.JSONDecoder"
  ],
  "type": "class"
 },
 "pandapower.io_utils.PPJSONDecoder.__init__": {
  "lineno": 504,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder": {
  "lineno": 304,
  "symbols_in_volume": [
   "json.JSONEncoder"
  ],
  "type": "class"
 },
 "pandapower.io_utils.PPJSONEncoder.__init__": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder.default": {
  "lineno": 355,
  "symbols_in_volume": [
   "json.JSONEncoder.default"
  ],
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder.iterencode": {
  "lineno": 309,
  "symbols_in_volume": [
   "json.encoder._make_iterencode",
   "json.encoder.encode_basestring",
   "json.encoder.encode_basestring_ascii"
  ],
  "type": "function"
 },
 "pandapower.io_utils.PPJSONEncoder.iterencode.floatstr": {
  "lineno": 328,
  "symbols_in_volume": [
   "json.encoder.INFINITY"
  ],
  "type": "function"
 },
 "pandapower.io_utils.controller_to_serializable": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.coords_to_df": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.empty",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.decrypt_string": {
  "lineno": 553,
  "symbols_in_volume": [
   "base64.urlsafe_b64encode",
   "cryptography.fernet.Fernet",
   "hashlib.sha256",
   "zlib.decompress"
  ],
  "type": "function"
 },
 "pandapower.io_utils.df_to_coords": {
  "lineno": 151,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.notnull"
  ],
  "type": "function"
 },
 "pandapower.io_utils.dicts_to_pandas": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.DataFrame.from_dict",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandapower.io_utils.encrypt_string": {
  "lineno": 536,
  "symbols_in_volume": [
   "base64.urlsafe_b64encode",
   "cryptography.fernet.Fernet",
   "hashlib.sha256",
   "zlib.compress"
  ],
  "type": "function"
 },
 "pandapower.io_utils.from_dict_of_dfs": {
  "lineno": 168,
  "symbols_in_volume": [
   "numpy.int64",
   "pandapower.create.create_empty_network"
  ],
  "type": "function"
 },
 "pandapower.io_utils.get_raw_data_from_pickle": {
  "lineno": 229,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "pandapower.io_utils.get_raw_data_from_pickle.read": {
  "lineno": 230,
  "symbols_in_volume": [
   "pickle.load",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pandapower.io_utils.isinstance_partial": {
  "lineno": 298,
  "symbols_in_volume": [
   "pandapower.auxiliary.pandapowerNet"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_array": {
  "lineno": 742,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_bool": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_complex": {
  "lineno": 767,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_dataframe": {
  "lineno": 711,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_frozenset": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_geodataframe": {
  "lineno": 724,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_linestring": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_networkx": {
  "lineno": 808,
  "symbols_in_volume": [
   "networkx.Graph",
   "networkx.readwrite.json_graph.adjacency_data"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_npfloat": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.floating"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_npint": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_num": {
  "lineno": 761,
  "symbols_in_volume": [
   "numbers.Number"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_pandapowernet": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandapower.auxiliary.pandapowerNet"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_pdindex": {
  "lineno": 775,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_point": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_polygon": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_series": {
  "lineno": 733,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.io_utils.json_set": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.json_tuple": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.mkdirs_if_not_existent": {
  "lineno": 823,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isdir"
  ],
  "type": "function"
 },
 "pandapower.io_utils.pp_hook": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.io_utils.restore_all_dtypes": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "pandapower.io_utils.to_dict_of_dfs": {
  "lineno": 80,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.to_dict_with_coord_transform": {
  "lineno": 212,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.io_utils.to_serializable": {
  "lineno": 698,
  "symbols_in_volume": [
   "singledispatch.singledispatch"
  ],
  "type": "function"
 },
 "pandapower.io_utils.transform_net_with_df_and_geo": {
  "lineno": 246,
  "symbols_in_volume": [
   "fiona.crs.from_epsg",
   "geopandas.GeoDataFrame",
   "packaging.version.parse",
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "pandas.Int64Index",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.io_utils.with_signature": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.cigre_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.networks.cigre_networks.create_cigre_network_hv": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_shunt",
   "pandapower.create_std_type",
   "pandapower.create_transformer_from_parameters",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandapower.networks.cigre_networks.create_cigre_network_lv": {
  "lineno": 295,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_std_type",
   "pandapower.create_switch",
   "pandapower.create_transformer_from_parameters",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandapower.networks.cigre_networks.create_cigre_network_mv": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.nan",
   "pandapower.create_bus",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load_from_cosphi",
   "pandapower.create_sgen",
   "pandapower.create_std_type",
   "pandapower.create_storage",
   "pandapower.create_switch",
   "pandapower.create_transformer_from_parameters",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandapower.networks.create_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.create_examples.example_multivoltage": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_impedance",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_shunt",
   "pandapower.create_switch",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.create_transformer_from_parameters",
   "pandapower.create_xward",
   "pandapower.get_element_index",
   "pandapower.runpp",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.networks.create_examples.example_simple": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_shunt",
   "pandapower.create_switch",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.plotting.simple_plot"
  ],
  "type": "module"
 },
 "pandapower.networks.dickert_lv_networks._change_to_ohl": {
  "lineno": 6,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.change_std_type",
   "pandapower.get_connected_elements"
  ],
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks._create_feeder": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.ceil",
   "pandapower.create_buses",
   "pandapower.create_line"
  ],
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks._create_loads_with_coincidence": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandapower.create_load",
   "pandapower.pq_from_cosphi"
  ],
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks.create_dickert_lv_feeders": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandapower.create_std_type"
  ],
  "type": "function"
 },
 "pandapower.networks.dickert_lv_networks.create_dickert_lv_network": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_std_type",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.ieee_europen_lv_asymmetric.ieee_european_lv_asymmetric": {
  "lineno": 14,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.from_json",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_dorfnetz": {
  "lineno": 86,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_dorfnetz_trafo": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_freileitung": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branch_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_freileitung_trafo": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branch_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_kabel": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_landnetz_kabel_trafo": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_1": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_2": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_trafo_1": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_extreme_networks.kb_extrem_vorstadtnetz_trafo_2": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_branched_loads_network"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.kerber_networks._add_lines_and_loads": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.create_load"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_networks._add_lines_with_branched_loads": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.create_load",
   "random.random"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_networks._create_branch_network": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks._create_branched_loads_network": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks._create_empty_network_with_transformer": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_std_type",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_dorfnetz": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_freileitung_1": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_freileitung_2": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_kabel_1": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_landnetz_kabel_2": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_vorstadtnetz_kabel_1": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.kerber_networks.create_kerber_vorstadtnetz_kabel_2": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.networks.mv_oberrhein": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.mv_oberrhein.mv_oberrhein": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.tan",
   "os.path.join",
   "pandapower.from_json",
   "pandapower.pp_dir",
   "pandapower.runpp",
   "pandapower.select_subnet",
   "pandapower.topology.connected_components",
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.power_system_test_cases.GBnetwork": {
  "lineno": 696,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.GBreducednetwork": {
  "lineno": 676,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases._change_ref_bus": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_sgen"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases._get_cases_path": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case118": {
  "lineno": 345,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case11_iwamoto": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case1354pegase": {
  "lineno": 423,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case14": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case145": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case1888rte": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case24_ieee_rts": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case2848rte": {
  "lineno": 480,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case2869pegase": {
  "lineno": 512,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case30": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case300": {
  "lineno": 403,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case3120sp": {
  "lineno": 535,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case33bw": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case39": {
  "lineno": 258,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case4gs": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case5": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case57": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6470rte": {
  "lineno": 553,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6495rte": {
  "lineno": 586,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6515rte": {
  "lineno": 621,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case6ww": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case89pegase": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case9": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case9241pegase": {
  "lineno": 653,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case_ieee30": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.case_illinois200": {
  "lineno": 384,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.power_system_test_cases.iceland": {
  "lineno": 718,
  "symbols_in_volume": [
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.simple_pandapower_test_networks.four_loads_with_branches_out": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks.panda_four_load_branch": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks.simple_four_bus_system": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.simple_pandapower_test_networks.simple_mv_open_ring_net": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.networks.synthetic_voltage_control_lv_networks.create_synthetic_voltage_control_lv_network": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.nan",
   "pandapower.create_bus",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_std_type",
   "pandapower.create_transformer",
   "pandas.DataFrame",
   "pandas.read_json"
  ],
  "type": "function"
 },
 "pandapower.opf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.opf.make_objective": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.opf.make_objective._add_linear_costs_as_pwl_cost": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN"
  ],
  "type": "function"
 },
 "pandapower.opf.make_objective._fill_gencost_poly": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.NCOST"
  ],
  "type": "function"
 },
 "pandapower.opf.make_objective._fill_gencost_pwl": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.NCOST"
  ],
  "type": "function"
 },
 "pandapower.opf.make_objective._get_gen_index": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.opf.make_objective._init_gencost": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandapower.pypower.idx_cost.COST"
  ],
  "type": "function"
 },
 "pandapower.opf.make_objective._make_objective": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_cost.POLYNOMIAL",
   "pandapower.pypower.idx_cost.PW_LINEAR"
  ],
  "type": "function"
 },
 "pandapower.opf.make_objective._map_costs_to_gen": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.opf.make_objective.costs_from_areas": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.opf.pm_storage": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.opf.pm_storage.add_storage_opf_settings": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.opf.pm_storage.read_pm_storage_results": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.opf.run_powermodels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.opf.run_powermodels._call_powermodels": {
  "lineno": 44,
  "symbols_in_volume": [
   "julia.Julia",
   "julia.Main.include",
   "os.path.join",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.opf.run_powermodels._runpm": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.remove",
   "pandapower.converter.powermodels.from_pm.read_pm_results_to_net",
   "pandapower.converter.powermodels.to_pm.convert_to_pm_structure",
   "pandapower.converter.powermodels.to_pm.dump_pm_json"
  ],
  "type": "function"
 },
 "pandapower.opf.validate_opf_input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.opf.validate_opf_input._check_necessary_opf_parameters": {
  "lineno": 4,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.optimal_powerflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.optimal_powerflow.OPFNotConverged": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.auxiliary.ppException"
  ],
  "type": "class"
 },
 "pandapower.optimal_powerflow._add_dcline_constraints": {
  "lineno": 82,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.optimal_powerflow._optimal_powerflow": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_auxiliary_elements",
   "pandapower.auxiliary._clean_up",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pypower.add_userfcn.add_userfcn",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.opf.opf",
   "pandapower.pypower.ppoption.ppoption",
   "pandapower.pypower.printpf.printpf",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.results._extract_results",
   "pandapower.results.init_results",
   "sys.stdout",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandapower.optimal_powerflow._run_pf_before_opf": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pd2ppc._build_gen_lookups": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc._init_lookup": {
  "lineno": 301,
  "symbols_in_volume": [
   "numpy.ones",
   "pandapower.auxiliary._write_lookup_to_net"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc._init_ppc": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc._pd2ppc": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandapower.auxiliary._check_connectivity",
   "pandapower.auxiliary._check_connectivity_opf",
   "pandapower.auxiliary._replace_nans_with_default_limits",
   "pandapower.auxiliary._select_is_elements_numba",
   "pandapower.auxiliary._set_isolated_buses_out_of_service",
   "pandapower.build_branch._branches_with_oos_buses",
   "pandapower.build_branch._build_branch_ppc",
   "pandapower.build_branch._switch_branches",
   "pandapower.build_bus._add_gen_impedances_ppc",
   "pandapower.build_bus._add_motor_impedances_ppc",
   "pandapower.build_bus._build_bus_ppc",
   "pandapower.build_bus._calc_pq_elements_and_add_on_ppc",
   "pandapower.build_bus._calc_shunts_and_add_on_ppc",
   "pandapower.build_gen._build_gen_ppc",
   "pandapower.build_gen._check_for_reference_bus",
   "pandapower.build_gen._check_voltage_angles_at_same_bus",
   "pandapower.build_gen._check_voltage_setpoints_at_same_bus",
   "pandapower.opf.make_objective._make_objective",
   "pandapower.pd2ppc_zero._add_ext_grid_sc_impedance_zero",
   "pandapower.pd2ppc_zero._build_branch_ppc_zero",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.NONE"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc._ppc2ppci": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.append",
   "numpy.arange",
   "numpy.array",
   "numpy.real",
   "numpy.setdiff1d",
   "numpy.vstack",
   "numpy.zeros",
   "pandapower.pypower.idx_area.PRICE_REF_BUS",
   "pandapower.pypower.idx_area.PRICE_REF_BUS.astype",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_I.astype",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.run_userfcn.run_userfcn"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc._update_lookup_entries": {
  "lineno": 283,
  "symbols_in_volume": [
   "pandapower.auxiliary._write_lookup_to_net"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc_zero": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pd2ppc_zero._add_ext_grid_sc_impedance_zero": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc_zero._add_line_sc_impedance_zero": {
  "lineno": 349,
  "symbols_in_volume": [
   "math.pi",
   "numpy.square",
   "pandapower.build_branch._end_temperature_correction_factor",
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc_zero._add_trafo_sc_impedance_zero": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.sign",
   "numpy.sqrt",
   "numpy.square",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.build_branch._calc_nominal_ratio_from_dataframe",
   "pandapower.build_branch._calc_tap_from_dataframe",
   "pandapower.build_branch._transformer_correction_factor",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.shortcircuit.idx_bus.C_MAX"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc_zero._build_branch_ppc_zero": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.empty",
   "numpy.hstack",
   "numpy.nan",
   "numpy.zeros",
   "pandapower.build_branch._initialize_branch_lookup",
   "pandapower.pypower.idx_brch.branch_cols",
   "pandapower.shortcircuit.idx_brch.branch_cols_sc"
  ],
  "type": "function"
 },
 "pandapower.pd2ppc_zero._pd2ppc_zero": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandapower.auxiliary._select_is_elements_numba",
   "pandapower.build_branch._branches_with_oos_buses",
   "pandapower.build_branch._switch_branches",
   "pandapower.build_bus._build_bus_ppc",
   "pandapower.build_gen._build_gen_ppc",
   "pandapower.pd2ppc._init_ppc",
   "pandapower.pd2ppc._ppc2ppci"
  ],
  "type": "function"
 },
 "pandapower.pf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.create_jacobian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.create_jacobian._create_J_with_numba": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.core.multiarray.empty",
   "numpy.core.multiarray.zeros",
   "numpy.float64",
   "numpy.int32",
   "pandapower.pf.dSbus_dV_numba.dSbus_dV_numba_sparse",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pf.create_jacobian._create_J_without_numba": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.core.multiarray.array",
   "pandapower.pypower.dSbus_dV.dSbus_dV",
   "scipy.sparse.hstack",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "pandapower.pf.create_jacobian.create_jacobian_matrix": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.create_jacobian.get_fastest_jacobian_function": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandapower.pf.create_jacobian_numba.create_J",
   "pandapower.pf.create_jacobian_numba.create_J2"
  ],
  "type": "function"
 },
 "pandapower.pf.create_jacobian_numba": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.create_jacobian_numba.create_J": {
  "lineno": 17,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "pandapower.pf.create_jacobian_numba.create_J2": {
  "lineno": 106,
  "symbols_in_volume": [
   "numba.jit"
  ],
  "type": "function"
 },
 "pandapower.pf.dSbus_dV_numba": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.dSbus_dV_numba.dSbus_dV": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.zeros",
   "pandapower.pypower.dSbus_dV.dSbus_dV_dense",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "pandapower.pf.dSbus_dV_numba.dSbus_dV_numba_sparse": {
  "lineno": 14,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.complex128",
   "numpy.conj",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.pf.iwamoto_multiplier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.iwamoto_multiplier._evaluate_Yx": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.r_"
  ],
  "type": "function"
 },
 "pandapower.pf.iwamoto_multiplier._get_iwamoto_multiplier": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.roots"
  ],
  "type": "function"
 },
 "pandapower.pf.iwamoto_multiplier._iwamoto_step": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.core.umath.exp"
  ],
  "type": "function"
 },
 "pandapower.pf.makeYbus_numba": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.makeYbus_numba.gen_Ybus": {
  "lineno": 20,
  "symbols_in_volume": [
   "numba.jit",
   "numpy.complex128",
   "numpy.empty",
   "numpy.int64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.pf.makeYbus_numba.makeYbus": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.hstack",
   "numpy.int64",
   "numpy.real",
   "numpy.resize",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.makeYbus.branch_vectors",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pf.no_numba": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.no_numba.jit": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.no_numba.jit.wrapper": {
  "lineno": 2,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.no_numba.marker": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.pfsoln_numba": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo"
  ],
  "type": "module"
 },
 "pandapower.pf.pfsoln_numba._update_branch_flows": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.real",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_brch.T_BUS"
  ],
  "type": "function"
 },
 "pandapower.pf.pfsoln_numba.calc_branch_flows": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.conj",
   "numpy.zeros",
   "pandapower.pf.no_numba.jit"
  ],
  "type": "function"
 },
 "pandapower.pf.pfsoln_numba.calc_branch_flows_batch": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.complex128",
   "numpy.conj",
   "numpy.float64",
   "numpy.sqrt",
   "numpy.zeros",
   "pandapower.pf.no_numba.jit"
  ],
  "type": "function"
 },
 "pandapower.pf.pfsoln_numba.pf_solution_single_slack": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandapower.pypower.idx_brch.PF.sum",
   "pandapower.pypower.idx_brch.PT.sum",
   "pandapower.pypower.idx_brch.QF.sum",
   "pandapower.pypower.idx_brch.QT.sum",
   "pandapower.pypower.idx_bus.PD.sum",
   "pandapower.pypower.idx_bus.QD.sum",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.pfsoln._update_v"
  ],
  "type": "function"
 },
 "pandapower.pf.pfsoln_numba.pfsoln": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.flatnonzero",
   "numpy.zeros",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.pfsoln._update_p",
   "pandapower.pypower.pfsoln._update_q",
   "pandapower.pypower.pfsoln._update_v"
  ],
  "type": "function"
 },
 "pandapower.pf.ppci_variables": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.ppci_variables._get_pf_variables_from_ppci": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.flatnonzero",
   "numpy.pi",
   "pandapower.pypower.bustypes.bustypes",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.VG"
  ],
  "type": "function"
 },
 "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.run_bfswpf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.run_bfswpf.LoadflowNotConverged": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandapower.auxiliary.ppException"
  ],
  "type": "class"
 },
 "pandapower.pf.run_bfswpf._bfswpf": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.all",
   "numpy.conj",
   "numpy.in1d",
   "numpy.ones",
   "numpy.zeros",
   "pandapower.pypower.bustypes.bustypes",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.idx_gen.VG",
   "pandapower.pypower.makeSbus.makeSbus",
   "pandapower.pypower.newtonpf._check_for_convergence",
   "pandapower.pypower.newtonpf._evaluate_Fx"
  ],
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._get_bibc_bcbv": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._get_options": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._makeYsh_bfsw": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.conj",
   "pandapower.pypower.idx_brch.BR_B.imag",
   "pandapower.pypower.idx_brch.BR_B.real",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS"
  ],
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._make_bibc_bcbv": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.array",
   "numpy.in1d",
   "numpy.sort",
   "pandapower.pypower.idx_brch.BR_R.real",
   "pandapower.pypower.idx_brch.BR_X.real",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "scipy.linalg.inv",
   "scipy.sparse.csgraph.breadth_first_order",
   "scipy.sparse.csgraph.breadth_first_tree",
   "scipy.sparse.csgraph.shortest_path",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pf.run_bfswpf._run_bfswpf": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.exp",
   "numpy.ones",
   "numpy.pi",
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
   "pandapower.pf.runpf_pypower._import_numba_extensions_if_flag_is_true",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.SHIFT.any",
   "pandapower.pypower.idx_brch.SHIFT.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.makeSbus.makeSbus",
   "pandapower.pypower.pfsoln.pfsoln",
   "scipy.sparse.csgraph.breadth_first_order",
   "scipy.sparse.csgraph.breadth_first_tree",
   "scipy.sparse.csr_matrix",
   "six.iteritems",
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.pf.run_dc_pf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.run_dc_pf._run_dc_pf": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.bincount",
   "numpy.pi",
   "numpy.real",
   "numpy.zeros",
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci",
   "pandapower.pypower.dcpf.dcpf",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.makeBdc.makeBdc",
   "pandapower.pypower.makeSbus.makeSbus",
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pf.run_newton_raphson_pf._get_Sbus": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandapower.pypower.makeSbus.makeSbus"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._get_Y_bus": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandapower.pf.makeYbus_numba.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._get_numba_functions": {
  "lineno": 84,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.pf.makeYbus_numba.makeYbus",
   "pandapower.pf.pfsoln_numba.pf_solution_single_slack",
   "pandapower.pf.pfsoln_numba.pfsoln",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.makeYbus.makeYbus",
   "pandapower.pypower.pfsoln.pfsoln"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._run_ac_pf_with_qlims_enforced": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.flatnonzero",
   "numpy.r_",
   "numpy.r_.astype",
   "numpy.setdiff1d",
   "numpy.zeros",
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pypower.bustypes.bustypes",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.PQ",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._run_ac_pf_without_qlims_enforced": {
  "lineno": 118,
  "symbols_in_volume": [
   "lightsim2grid.newtonpf.newtonpf",
   "pandapower.pf.makeYbus_numba.makeYbus",
   "pandapower.pf.pfsoln_numba.pfsoln",
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci",
   "pandapower.pf.run_dc_pf._run_dc_pf",
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf._store_internal": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.run_newton_raphson_pf.ppci_to_pfsoln": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandapower.pf.pfsoln_numba.pfsoln",
   "pandapower.pypower.pfsoln._update_v"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.pf.runpf_pypower._ac_runpf": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._call_power_flow_function": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.real",
   "pandapower.pypower.fdpf.fdpf",
   "pandapower.pypower.gausspf.gausspf",
   "pandapower.pypower.makeB.makeB"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._get_Y_bus": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._get_options": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandapower.pypower.ppoption.ppoption"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._import_numba_extensions_if_flag_is_true": {
  "lineno": 98,
  "symbols_in_volume": [
   "numba._version.version_version",
   "packaging.version.parse",
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._run_ac_pf_with_qlims_enforced": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.flatnonzero",
   "numpy.r_",
   "numpy.r_.astype",
   "numpy.setdiff1d",
   "numpy.zeros",
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pypower.bustypes.bustypes",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.PQ",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._run_ac_pf_without_qlims_enforced": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pypower.makeSbus.makeSbus",
   "pandapower.pypower.makeYbus.makeYbus",
   "pandapower.pypower.pfsoln.pfsoln"
  ],
  "type": "function"
 },
 "pandapower.pf.runpf_pypower._runpf_pypower": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandapower.pf.ppci_variables._store_results_from_pf_in_ppci",
   "pandapower.pf.run_newton_raphson_pf._run_dc_pf",
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.pf.runpp_3ph.Not_implemented": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandapower.auxiliary.ppException"
  ],
  "type": "class"
 },
 "pandapower.pf.runpp_3ph._current_from_voltage_results": {
  "lineno": 612,
  "symbols_in_volume": [
   "pandapower.auxiliary.I0_from_V012",
   "pandapower.auxiliary.I1_from_V012",
   "pandapower.auxiliary.I2_from_V012",
   "pandapower.auxiliary.combine_X012"
  ],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._get_elements": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._get_pf_variables_from_ppci": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.flatnonzero",
   "numpy.pi",
   "pandapower.pypower.bustypes.bustypes",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.VG"
  ],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._get_y_bus": {
  "lineno": 618,
  "symbols_in_volume": [
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._load_mapping": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.vstack",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD"
  ],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph._store_results_from_pf_in_ppci": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pf.runpp_3ph.runpp_3ph": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.complex128",
   "numpy.concatenate",
   "numpy.divide",
   "numpy.imag",
   "numpy.matmul",
   "numpy.multiply",
   "numpy.ones",
   "numpy.real",
   "numpy.zeros",
   "pandapower.LoadflowNotConverged",
   "pandapower.auxiliary.I1_from_V012",
   "pandapower.auxiliary.S_from_VI_elementwise",
   "pandapower.auxiliary.V1_from_ppc",
   "pandapower.auxiliary.V_from_I",
   "pandapower.auxiliary.X012_to_X0",
   "pandapower.auxiliary.X012_to_X2",
   "pandapower.auxiliary._add_pf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
   "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
   "pandapower.auxiliary._check_if_numba_is_installed",
   "pandapower.auxiliary._clean_up",
   "pandapower.auxiliary.combine_X012",
   "pandapower.auxiliary.phase_to_sequence",
   "pandapower.auxiliary.sequence_to_phase",
   "pandapower.build_bus._add_ext_grid_sc_impedance",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf",
   "pandapower.pypower.bustypes.bustypes",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.makeYbus.makeYbus",
   "pandapower.pypower.pfsoln.pfsoln",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.results._extract_results_3ph",
   "pandapower.results.init_results",
   "pandapower.run._passed_runpp_parameters",
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.plotting": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.backend_bases.RendererBase",
   "matplotlib.backend_bases.RendererBase.new_gc",
   "types.MethodType"
  ],
  "type": "module"
 },
 "pandapower.plotting.GC": {
  "lineno": 14,
  "symbols_in_volume": [
   "matplotlib.backend_bases.GraphicsContextBase"
  ],
  "type": "class"
 },
 "pandapower.plotting.GC.__init__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.collections": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.collections.CustomTextPath": {
  "lineno": 31,
  "symbols_in_volume": [
   "matplotlib.textpath.TextPath"
  ],
  "type": "class"
 },
 "pandapower.plotting.collections.CustomTextPath.__deepcopy__": {
  "lineno": 57,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.CustomTextPath.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "matplotlib.font_manager.FontProperties",
   "matplotlib.textpath.TextPath.__init__"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections._create_complex_branch_collection": {
  "lineno": 272,
  "symbols_in_volume": [
   "matplotlib.collections.LineCollection",
   "matplotlib.collections.PatchCollection",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections._create_line2d_collection": {
  "lineno": 178,
  "symbols_in_volume": [
   "matplotlib.collections.LineCollection",
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections._create_node_collection": {
  "lineno": 125,
  "symbols_in_volume": [
   "matplotlib.collections.PatchCollection",
   "numpy.array",
   "pandapower.plotting.patch_makers.node_patches"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections._create_node_element_collection": {
  "lineno": 204,
  "symbols_in_volume": [
   "matplotlib.collections.LineCollection",
   "matplotlib.collections.PatchCollection",
   "numpy.pi",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.add_cmap_to_collection": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.ma.masked_invalid"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.add_collections_to_axes": {
  "lineno": 1249,
  "symbols_in_volume": [
   "inspect.getmro",
   "matplotlib.collections.Collection"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.add_single_collection": {
  "lineno": 1238,
  "symbols_in_volume": [
   "copy.deepcopy",
   "matplotlib.pyplot.colorbar"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_annotation_collection": {
  "lineno": 66,
  "symbols_in_volume": [
   "matplotlib.collections.PatchCollection",
   "matplotlib.patches.PathPatch"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_bus_bus_switch_collection": {
  "lineno": 1123,
  "symbols_in_volume": [
   "matplotlib.collections.LineCollection",
   "matplotlib.collections.PatchCollection",
   "matplotlib.patches.Rectangle",
   "matplotlib.transforms.Affine2D",
   "numpy.allclose",
   "numpy.arctan2",
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_bus_collection": {
  "lineno": 329,
  "symbols_in_volume": [
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_busbar_collection": {
  "lineno": 794,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_ext_grid_collection": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandapower.plotting.patch_makers.ext_grid_patches",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_gen_collection": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.pi",
   "pandapower.plotting.patch_makers.gen_patches",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_impedance_collection": {
  "lineno": 473,
  "symbols_in_volume": [
   "pandapower.plotting.plotting_toolbox.coords_from_node_geodata",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_line_collection": {
  "lineno": 393,
  "symbols_in_volume": [
   "numpy.isin",
   "pandapower.plotting.plotting_toolbox.coords_from_node_geodata",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_line_switch_collection": {
  "lineno": 1033,
  "symbols_in_volume": [
   "matplotlib.collections.PatchCollection",
   "matplotlib.patches.Rectangle",
   "matplotlib.transforms.Affine2D",
   "numpy.arctan2",
   "numpy.array",
   "numpy.linalg.norm",
   "numpy.zeros",
   "pandapower.plotting.plotting_toolbox.position_on_busbar"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_load_collection": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.pi",
   "pandapower.plotting.patch_makers.load_patches",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_sgen_collection": {
  "lineno": 918,
  "symbols_in_volume": [
   "numpy.pi",
   "pandapower.plotting.patch_makers.sgen_patches",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_storage_collection": {
  "lineno": 953,
  "symbols_in_volume": [
   "numpy.pi",
   "pandapower.plotting.patch_makers.storage_patches"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo3w_collection": {
  "lineno": 698,
  "symbols_in_volume": [
   "matplotlib.collections.LineCollection",
   "matplotlib.collections.PatchCollection",
   "matplotlib.patches.Circle",
   "numpy.all",
   "numpy.array",
   "numpy.empty",
   "numpy.linalg.norm",
   "numpy.ma.masked_invalid",
   "numpy.pi",
   "numpy.repeat",
   "pandapower.plotting.plotting_toolbox._rotate_dim2",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo3w_connection_collection": {
  "lineno": 581,
  "symbols_in_volume": [
   "itertools.combinations",
   "matplotlib.collections.LineCollection",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo_collection": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.repeat",
   "pandapower.plotting.patch_makers.trafo_patches",
   "pandapower.plotting.plotting_toolbox.coords_from_node_geodata",
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.create_trafo_connection_collection": {
  "lineno": 517,
  "symbols_in_volume": [
   "pandapower.plotting.plotting_toolbox.get_index_array"
  ],
  "type": "function"
 },
 "pandapower.plotting.collections.draw_collections": {
  "lineno": 1187,
  "symbols_in_volume": [
   "matplotlib.pyplot.draw",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.subplots_adjust"
  ],
  "type": "function"
 },
 "pandapower.plotting.colormaps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.plotting.colormaps.cmap_continuous": {
  "lineno": 49,
  "symbols_in_volume": [
   "matplotlib.colors.LinearSegmentedColormap.from_list",
   "matplotlib.colors.Normalize"
  ],
  "type": "function"
 },
 "pandapower.plotting.colormaps.cmap_discrete": {
  "lineno": 12,
  "symbols_in_volume": [
   "matplotlib.colors.BoundaryNorm",
   "matplotlib.colors.ListedColormap"
  ],
  "type": "function"
 },
 "pandapower.plotting.colormaps.cmap_logarithmic": {
  "lineno": 81,
  "symbols_in_volume": [
   "matplotlib.colors.LinearSegmentedColormap.from_list",
   "matplotlib.colors.LogNorm",
   "numpy.arange",
   "numpy.log"
  ],
  "type": "function"
 },
 "pandapower.plotting.custom_new_gc": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.generic_geodata._get_element_mask_from_nodes": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.isin",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata._get_switch_mask": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.in1d"
  ],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata._igraph_meshed": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata._prepare_geodata_table": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.build_igraph_from_pp": {
  "lineno": 29,
  "symbols_in_volume": [
   "igraph.Graph",
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.coords_from_igraph": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.coords_from_nxgraph": {
  "lineno": 148,
  "symbols_in_volume": [
   "networkx.drawing.nx_agraph.graphviz_layout"
  ],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.create_generic_coordinates": {
  "lineno": 166,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.plotting.generic_geodata.fuse_geodata": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandapower.topology.connected_components",
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.plotting.geo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.plotting.geo._branch_geometries_from_geodata": {
  "lineno": 25,
  "symbols_in_volume": [
   "fiona.crs.from_epsg",
   "geopandas.GeoDataFrame",
   "geopandas.GeoSeries",
   "shapely.geometry.LineString"
  ],
  "type": "function"
 },
 "pandapower.plotting.geo._convert_xy_epsg": {
  "lineno": 56,
  "symbols_in_volume": [
   "pyproj.Proj",
   "pyproj.transform"
  ],
  "type": "function"
 },
 "pandapower.plotting.geo._node_geometries_from_geodata": {
  "lineno": 10,
  "symbols_in_volume": [
   "fiona.crs.from_epsg",
   "geopandas.GeoDataFrame",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "pandapower.plotting.geo._transform_branch_geometry_to_coords": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.geo._transform_node_geometry_to_geodata": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.geo.convert_epsg_bus_geodata": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.geo.convert_geodata_to_gis": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.geo.convert_gis_to_geodata": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.patch_makers": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.patch_makers.ellipse_patches": {
  "lineno": 58,
  "symbols_in_volume": [
   "matplotlib.patches.Ellipse",
   "pandapower.plotting.plotting_toolbox.get_angle_list",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.ext_grid_patches": {
  "lineno": 304,
  "symbols_in_volume": [
   "matplotlib.patches.Rectangle",
   "numpy.array",
   "numpy.pi",
   "pandapower.plotting.plotting_toolbox._rotate_dim2",
   "pandapower.plotting.plotting_toolbox.get_angle_list",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.gen_patches": {
  "lineno": 179,
  "symbols_in_volume": [
   "matplotlib.patches.Arc",
   "matplotlib.patches.Circle",
   "numpy.array",
   "pandapower.plotting.plotting_toolbox._rotate_dim2",
   "pandapower.plotting.plotting_toolbox.get_angle_list",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.load_patches": {
  "lineno": 145,
  "symbols_in_volume": [
   "matplotlib.patches.RegularPolygon",
   "numpy.array",
   "pandapower.plotting.plotting_toolbox._rotate_dim2",
   "pandapower.plotting.plotting_toolbox.get_angle_list",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.node_patches": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.polygon_patches": {
  "lineno": 116,
  "symbols_in_volume": [
   "matplotlib.patches.RegularPolygon",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.rectangle_patches": {
  "lineno": 88,
  "symbols_in_volume": [
   "matplotlib.patches.Rectangle",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.sgen_patches": {
  "lineno": 218,
  "symbols_in_volume": [
   "matplotlib.patches.Circle",
   "matplotlib.patches.RegularPolygon",
   "numpy.array",
   "numpy.pi",
   "pandapower.plotting.plotting_toolbox._rotate_dim2",
   "pandapower.plotting.plotting_toolbox.get_color_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.storage_patches": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.plotting.plotting_toolbox._rotate_dim2"
  ],
  "type": "function"
 },
 "pandapower.plotting.patch_makers.trafo_patches": {
  "lineno": 338,
  "symbols_in_volume": [
   "matplotlib.patches.Circle",
   "numpy.all",
   "numpy.array",
   "numpy.sqrt",
   "numpy.sum",
   "pandapower.plotting.plotting_toolbox.get_color_list",
   "pandapower.plotting.plotting_toolbox.get_linewidth_list"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.plotting.plotly.get_colors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.plotting.plotly.get_colors._to_plotly_color": {
  "lineno": 56,
  "symbols_in_volume": [
   "matplotlib.colors.to_rgb",
   "matplotlib.colors.to_rgba"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors._to_plotly_palette": {
  "lineno": 38,
  "symbols_in_volume": [
   "matplotlib.colors.to_rgba"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.get_plotly_cmap": {
  "lineno": 70,
  "symbols_in_volume": [
   "matplotlib.cm.get_cmap",
   "matplotlib.colors.Normalize"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.get_plotly_color": {
  "lineno": 22,
  "symbols_in_volume": [
   "matplotlib.colors.to_rgba"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.get_colors.get_plotly_color_palette": {
  "lineno": 30,
  "symbols_in_volume": [
   "matplotlib.pyplot.get_cmap",
   "numpy.linspace",
   "seaborn.color_palette",
   "sys.modules"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.plotly.mapbox_plot.MapboxTokenMissing": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandapower.auxiliary.ppException"
  ],
  "type": "class"
 },
 "pandapower.plotting.plotly.mapbox_plot._get_mapbox_token": {
  "lineno": 104,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot._on_map_test": {
  "lineno": 24,
  "symbols_in_volume": [
   "geopy.exc.GeocoderTimedOut",
   "geopy.geocoders.Nominatim"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot.geo_data_to_latlong": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "pyproj.Proj",
   "pyproj.transform"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.mapbox_plot.set_mapbox_token": {
  "lineno": 97,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.pf_res_plotly": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.plotly.pf_res_plotly.pf_res_plotly": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandapower.plotting.generic_geodata.create_generic_coordinates",
   "pandapower.plotting.plotly.traces.create_bus_trace",
   "pandapower.plotting.plotly.traces.create_line_trace",
   "pandapower.plotting.plotly.traces.create_trafo_trace",
   "pandapower.plotting.plotly.traces.draw_traces",
   "pandapower.plotting.plotly.traces.version_check",
   "pandapower.run.runpp",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.simple_plotly": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.plotly.simple_plotly._simple_plotly_generic": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandapower.plotting.generic_geodata.create_generic_coordinates",
   "pandapower.plotting.plotly.traces._create_node_trace",
   "pandapower.plotting.plotly.traces.create_trafo_trace",
   "pandapower.plotting.plotly.traces.draw_traces",
   "pandapower.plotting.plotly.traces.version_check",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.simple_plotly.get_hoverinfo": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.simple_plotly.simple_plotly": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandapower.plotting.plotly.traces.create_bus_trace",
   "pandapower.plotting.plotly.traces.create_line_trace"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.plotly.traces._create_branch_trace": {
  "lineno": 392,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "numpy.asarray",
   "numpy.ndarray",
   "pandapower.plotting.plotly.get_colors.get_plotly_cmap",
   "pandapower.plotting.plotly.get_colors.get_plotly_color",
   "pandas.Series",
   "plotly.graph_objs.scatter.marker.ColorBar",
   "plotly.graph_objs.scattermapbox.Line",
   "plotly.graph_objs.scattermapbox.Marker"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces._create_node_trace": {
  "lineno": 183,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "pandapower.plotting.plotly.get_colors.get_plotly_color",
   "pandas.Series",
   "plotly.graph_objs.scatter.marker.ColorBar",
   "plotly.graph_objs.scattermapbox.Marker"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces._get_branch_geodata_plotly": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces._in_ipynb": {
  "lineno": 47,
  "symbols_in_volume": [
   "IPython.get_ipython"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_bus_trace": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_edge_center_trace": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_line_trace": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.create_trafo_trace": {
  "lineno": 619,
  "symbols_in_volume": [
   "collections.abc.Iterable",
   "pandapower.plotting.plotly.get_colors.get_plotly_cmap",
   "pandapower.plotting.plotly.get_colors.get_plotly_color",
   "pandas.Series",
   "plotly.graph_objs.scattermapbox.Line"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.draw_traces": {
  "lineno": 719,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.plotting.plotly.mapbox_plot.MapboxTokenMissing",
   "pandapower.plotting.plotly.mapbox_plot._get_mapbox_token",
   "pandapower.plotting.plotly.mapbox_plot._on_map_test",
   "pandas.Series",
   "plotly.graph_objs.Figure",
   "plotly.graph_objs.Layout",
   "plotly.graph_objs.layout.XAxis",
   "plotly.graph_objs.layout.YAxis",
   "plotly.graph_objs.scattermapbox.Line",
   "plotly.graph_objs.scattermapbox.Marker",
   "plotly.offline.init_notebook_mode",
   "plotly.offline.plot"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.get_line_neutral": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.sum_line_length": {
  "lineno": 55,
  "symbols_in_volume": [
   "math.hypot"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.traces.version_check": {
  "lineno": 36,
  "symbols_in_volume": [
   "packaging.version.parse",
   "plotly.__version__"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotly.vlevel_plotly": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.networks.mv_oberrhein",
   "pandapower.plotting.plotly.get_colors.get_plotly_color_palette",
   "pandapower.plotting.plotly.traces.create_bus_trace",
   "pandapower.plotting.plotly.traces.create_line_trace",
   "pandapower.runpp",
   "pandapower.topology.connected_components",
   "pandapower.topology.create_nxgraph",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.plotly.vlevel_plotly.vlevel_plotly": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandapower.plotting.generic_geodata.create_generic_coordinates",
   "pandapower.plotting.plotly.get_colors.get_plotly_color_palette",
   "pandapower.plotting.plotly.mapbox_plot.geo_data_to_latlong",
   "pandapower.plotting.plotly.traces.create_bus_trace",
   "pandapower.plotting.plotly.traces.create_line_trace",
   "pandapower.plotting.plotly.traces.create_trafo_trace",
   "pandapower.plotting.plotly.traces.draw_traces",
   "pandapower.plotting.plotly.traces.version_check",
   "pandapower.topology.connected_components",
   "pandapower.topology.create_nxgraph",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.plotting_toolbox._rotate_dim2": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.dot",
   "numpy.sin"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.coords_from_node_geodata": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.isin"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_angle_list": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_collection_sizes": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_color_list": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_index_array": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy"
  ],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_linewidth_list": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.get_list": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.plotting_toolbox.position_on_busbar": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "pandapower.plotting.powerflow_results": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.subplots",
   "pandapower.networks.mv_oberrhein",
   "pandapower.runpp",
   "pandapower.topology.connected_components",
   "pandapower.topology.create_nxgraph",
   "plotting.create_line_collection"
  ],
  "type": "module"
 },
 "pandapower.plotting.powerflow_results.plot_loading": {
  "lineno": 93,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.gca",
   "matplotlib.pyplot.setp",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandapower.plotting.powerflow_results.plot_voltage_profile": {
  "lineno": 15,
  "symbols_in_volume": [
   "itertools.combinations",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.gca",
   "numpy.sqrt",
   "pandapower.topology.calc_distance_to_bus"
  ],
  "type": "function"
 },
 "pandapower.plotting.powerflow_results.voltage_profile_to_bus_geodata": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.plotting.simple_plot": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.networks.case145",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.plotting.simple_plot.simple_plot": {
  "lineno": 24,
  "symbols_in_volume": [
   "matplotlib.pyplot.show",
   "pandapower.plotting.collections.create_bus_bus_switch_collection",
   "pandapower.plotting.collections.create_bus_collection",
   "pandapower.plotting.collections.create_line_collection",
   "pandapower.plotting.collections.create_line_switch_collection",
   "pandapower.plotting.collections.create_load_collection",
   "pandapower.plotting.collections.create_sgen_collection",
   "pandapower.plotting.collections.create_trafo3w_collection",
   "pandapower.plotting.collections.create_trafo_collection",
   "pandapower.plotting.collections.draw_collections",
   "pandapower.plotting.generic_geodata.create_generic_coordinates",
   "pandapower.plotting.plotting_toolbox.get_collection_sizes"
  ],
  "type": "function"
 },
 "pandapower.plotting.to_html": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.plotting.to_html.Raw": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.plotting.to_html.Raw.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.to_html.Tag": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.plotting.to_html.Tag.__call__": {
  "lineno": 54,
  "symbols_in_volume": [
   "cgi.escape"
  ],
  "type": "function"
 },
 "pandapower.plotting.to_html.Tag.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.to_html._net_to_graphjs": {
  "lineno": 59,
  "symbols_in_volume": [
   "itertools.combinations",
   "json.dumps"
  ],
  "type": "function"
 },
 "pandapower.plotting.to_html._net_to_html": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.plotting.to_html.to_html": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.powerflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.powerflow.AlgorithmUnknown": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandapower.auxiliary.ppException"
  ],
  "type": "class"
 },
 "pandapower.powerflow.LoadflowNotConverged": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandapower.auxiliary.ppException"
  ],
  "type": "class"
 },
 "pandapower.powerflow._bypass_pf_and_set_results": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.makeYbus.makeYbus",
   "pandapower.pypower.pfsoln.pfsoln"
  ],
  "type": "function"
 },
 "pandapower.powerflow._powerflow": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.auxiliary._add_auxiliary_elements",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.results.init_results",
   "pandapower.results.verify_results"
  ],
  "type": "function"
 },
 "pandapower.powerflow._ppci_to_net": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandapower.auxiliary._clean_up",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.results._extract_results"
  ],
  "type": "function"
 },
 "pandapower.powerflow._recycled_powerflow": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.nan_to_num",
   "pandapower.build_branch._calc_trafo3w_parameter",
   "pandapower.build_branch._calc_trafo_parameter",
   "pandapower.build_gen._build_gen_ppc",
   "pandapower.pd2ppc._calc_pq_elements_and_add_on_ppc",
   "pandapower.pd2ppc._ppc2ppci",
   "pandapower.pf.run_dc_pf._run_dc_pf",
   "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf",
   "pandapower.results._ppci_bus_to_ppc",
   "pandapower.results._ppci_other_to_ppc"
  ],
  "type": "function"
 },
 "pandapower.powerflow._run_pf_algorithm": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandapower.pf.run_bfswpf._run_bfswpf",
   "pandapower.pf.run_dc_pf._run_dc_pf",
   "pandapower.pf.run_newton_raphson_pf._run_newton_raphson_pf",
   "pandapower.pf.runpf_pypower._runpf_pypower",
   "pandapower.pypower.bustypes.bustypes"
  ],
  "type": "function"
 },
 "pandapower.pypower": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower._compat": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "module"
 },
 "pandapower.pypower.add_userfcn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.add_userfcn.add_userfcn": {
  "lineno": 10,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.bustypes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.bustypes.bustypes": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.PQ",
   "pandapower.pypower.idx_bus.PV",
   "pandapower.pypower.idx_bus.REF"
  ],
  "type": "function"
 },
 "pandapower.pypower.d2AIbr_dV2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.d2AIbr_dV2.d2AIbr_dV2": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.pypower.d2Ibr_dV2.d2Ibr_dV2",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.d2ASbr_dV2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.d2ASbr_dV2.d2ASbr_dV2": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.pypower.d2Sbr_dV2.d2Sbr_dV2",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.d2Ibr_dV2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.d2Ibr_dV2.d2Ibr_dV2": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.d2Sbr_dV2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.d2Sbr_dV2.d2Sbr_dV2": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.ones",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.d2Sbus_dV2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.d2Sbus_dV2.d2Sbus_dV2": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.conj",
   "numpy.ones",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.dAbr_dV": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.dAbr_dV.dAbr_dV": {
  "lineno": 11,
  "symbols_in_volume": [
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.dIbr_dV": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.dIbr_dV.dIbr_dV": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.asmatrix",
   "numpy.diag",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "pandapower.pypower.dSbr_dV": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.dSbr_dV.dSbr_dV": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.asmatrix",
   "numpy.conj",
   "numpy.diag",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "pandapower.pypower.dSbus_dV": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.dSbus_dV.dSbus_dV": {
  "lineno": 19,
  "symbols_in_volume": [
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "pandapower.pypower.dSbus_dV.dSbus_dV_dense": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.conj",
   "numpy.diag"
  ],
  "type": "function"
 },
 "pandapower.pypower.dSbus_dV.dSbus_dV_sparse": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.conj",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.dcopf_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.dcopf_solver.dcopf_solver": {
  "lineno": 32,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.Inf",
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.c_",
   "numpy.diag",
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.isnan",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.MU_SF",
   "pandapower.pypower.idx_brch.MU_ST",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.LAM_P",
   "pandapower.pypower.idx_bus.LAM_Q",
   "pandapower.pypower.idx_bus.MU_VMAX",
   "pandapower.pypower.idx_bus.MU_VMIN",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_cost.POLYNOMIAL",
   "pandapower.pypower.idx_cost.PW_LINEAR",
   "pandapower.pypower.idx_gen.MU_PMAX",
   "pandapower.pypower.idx_gen.MU_PMIN",
   "pandapower.pypower.idx_gen.MU_QMAX",
   "pandapower.pypower.idx_gen.MU_QMIN",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.qps_pypower.qps_pypower",
   "pandapower.pypower.util.have_fcn",
   "pandapower.pypower.util.sub2ind",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "scipy.sparse.vstack",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.dcpf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.dcpf.dcpf": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.copy",
   "numpy.r_",
   "numpy.real",
   "numpy.transpose",
   "scipy.sparse.linalg.spsolve"
  ],
  "type": "function"
 },
 "pandapower.pypower.fdpf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.fdpf.fdpf": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.angle",
   "numpy.array",
   "numpy.conj",
   "numpy.exp",
   "numpy.linalg.norm",
   "numpy.r_",
   "pandapower.pypower.ppoption.ppoption",
   "scipy.sparse.linalg.splu",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.gausspf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.gausspf.gausspf": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.conj",
   "numpy.linalg.norm",
   "numpy.r_",
   "pandapower.pypower.ppoption.ppoption",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.hasPQcap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.hasPQcap.hasPQcap": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.nonzero",
   "numpy.zeros",
   "pandapower.pypower.idx_gen.PC1",
   "pandapower.pypower.idx_gen.PC2",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.QC1MAX",
   "pandapower.pypower.idx_gen.QC1MIN",
   "pandapower.pypower.idx_gen.QC2MAX",
   "pandapower.pypower.idx_gen.QC2MIN",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.idx_area": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.idx_brch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.idx_bus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.idx_cost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.idx_gen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.isload": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.isload.isload": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeAang": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeAang.makeAang": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.arange",
   "numpy.array",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.ANGMAX",
   "pandapower.pypower.idx_brch.ANGMIN",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeApq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeApq.makeApq": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.c_",
   "numpy.flatnonzero",
   "numpy.linalg.norm",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.hasPQcap.hasPQcap",
   "pandapower.pypower.idx_gen.PC1",
   "pandapower.pypower.idx_gen.PC2",
   "pandapower.pypower.idx_gen.QC1MAX",
   "pandapower.pypower.idx_gen.QC1MIN",
   "pandapower.pypower.idx_gen.QC2MAX",
   "pandapower.pypower.idx_gen.QC2MIN",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeAvl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeAvl.makeAvl": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.arctan2",
   "numpy.array",
   "numpy.cos",
   "numpy.flatnonzero",
   "numpy.r_",
   "numpy.sin",
   "numpy.zeros",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.isload.isload",
   "scipy.sparse.csr_matrix",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeAy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeAy.makeAy": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.diff",
   "numpy.flatnonzero",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST.astype",
   "pandapower.pypower.idx_cost.PW_LINEAR",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeB": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeB.makeB": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.ones",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeBdc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.pypower.makeBdc.makeBdc": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.real",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BUS_I",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeLODF": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeLODF.makeLODF": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.diag",
   "numpy.errstate",
   "numpy.ones",
   "numpy.r_",
   "numpy.real",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeLODF.update_LODF_diag": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.pf.no_numba.jit"
  ],
  "type": "function"
 },
 "pandapower.pypower.makePTDF": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makePTDF.makePTDF": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.isscalar",
   "numpy.ix_",
   "numpy.linalg.solve",
   "numpy.real",
   "numpy.zeros",
   "scipy.sparse.linalg.spsolve",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeSbus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeSbus._get_Cg": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.ones",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeSbus._get_Sbus": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeSbus._get_Sload": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.CID",
   "pandapower.pypower.idx_bus.CZD",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeSbus.makeSbus": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "pandapower.pypower.idx_gen.GEN_STATUS"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeYbus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.makeYbus.branch_vectors": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.conj",
   "numpy.exp",
   "numpy.nonzero",
   "numpy.ones",
   "numpy.pi",
   "numpy.real",
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_R_ASYM",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.BR_X_ASYM",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP"
  ],
  "type": "function"
 },
 "pandapower.pypower.makeYbus.makeYbus": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.ones",
   "numpy.real",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.newtonpf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.newtonpf._check_for_convergence": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "pandapower.pypower.newtonpf._evaluate_Fx": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.r_"
  ],
  "type": "function"
 },
 "pandapower.pypower.newtonpf.newtonpf": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.angle",
   "numpy.arange",
   "numpy.column_stack",
   "numpy.exp",
   "numpy.max",
   "numpy.r_",
   "numpy.zeros",
   "numpy.zeros_like",
   "pandapower.pf.create_jacobian.create_jacobian_matrix",
   "pandapower.pf.create_jacobian.get_fastest_jacobian_function",
   "pandapower.pf.iwamoto_multiplier._iwamoto_step",
   "pandapower.pypower.makeSbus.makeSbus",
   "scipy.sparse.linalg.spsolve"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf.opf": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.shape",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.MU_ANGMAX",
   "pandapower.pypower.idx_bus.MU_VMIN",
   "pandapower.pypower.idx_gen.MU_QMIN",
   "pandapower.pypower.opf_args.opf_args2",
   "pandapower.pypower.opf_execute.opf_execute",
   "pandapower.pypower.opf_setup.opf_setup",
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_args": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.pypower._compat.PY2"
  ],
  "type": "module"
 },
 "pandapower.pypower.opf_args.opf_args": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.pypower.ppoption.ppoption",
   "scipy.sparse.issparse",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_args.opf_args2": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.opf_consfcn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf_consfcn.opf_consfcn": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.arange",
   "numpy.conj",
   "numpy.exp",
   "numpy.ones",
   "numpy.r_",
   "numpy.r_.T",
   "numpy.r_.real",
   "numpy.zeros",
   "pandapower.pypower.dAbr_dV.dAbr_dV",
   "pandapower.pypower.dIbr_dV.dIbr_dV",
   "pandapower.pypower.dSbr_dV.dSbr_dV",
   "pandapower.pypower.dSbus_dV.dSbus_dV",
   "pandapower.pypower.idx_brch.F_BUS.astype",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.T_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.makeSbus.makeSbus",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "scipy.sparse.lil_matrix",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_costfcn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf_costfcn.opf_costfcn": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.r_",
   "numpy.r_.T",
   "numpy.zeros",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.POLYNOMIAL",
   "pandapower.pypower.polycost.polycost",
   "pandapower.pypower.totcost.totcost",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.issparse"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_execute": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf_execute.opf_execute": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.pi",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.dcopf_solver.dcopf_solver",
   "pandapower.pypower.idx_brch.MU_ANGMAX",
   "pandapower.pypower.idx_brch.MU_ANGMIN",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.VG",
   "pandapower.pypower.makeYbus.makeYbus",
   "pandapower.pypower.opf_consfcn.opf_consfcn",
   "pandapower.pypower.opf_costfcn.opf_costfcn",
   "pandapower.pypower.pipsopf_solver.pipsopf_solver",
   "pandapower.pypower.ppver.ppver",
   "pandapower.pypower.update_mupq.update_mupq",
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_hessfcn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf_hessfcn.opf_hessfcn": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.d2AIbr_dV2.d2AIbr_dV2",
   "pandapower.pypower.d2ASbr_dV2.d2ASbr_dV2",
   "pandapower.pypower.d2Sbus_dV2.d2Sbus_dV2",
   "pandapower.pypower.dIbr_dV.dIbr_dV",
   "pandapower.pypower.dSbr_dV.dSbr_dV",
   "pandapower.pypower.idx_brch.F_BUS.astype",
   "pandapower.pypower.idx_brch.T_BUS.astype",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.POLYNOMIAL",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.opf_consfcn.opf_consfcn",
   "pandapower.pypower.opf_costfcn.opf_costfcn",
   "pandapower.pypower.polycost.polycost",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "scipy.sparse.issparse",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf_model.opf_model": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.pypower.opf_model.opf_model.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.__repr__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.add_constraints": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.ones",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.add_vars": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.ones",
   "numpy.zeros",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.build_cost_params": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.getN": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.get_cost_params": {
  "lineno": 334,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.get_idx": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.get_ppc": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.getv": {
  "lineno": 432,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.r_"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.linear_constraints": {
  "lineno": 452,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.array",
   "numpy.ones",
   "numpy.zeros",
   "scipy.sparse.lil_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_model.opf_model.userdata": {
  "lineno": 504,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.pypower.opf_setup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.opf_setup.opf_setup": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.delete",
   "numpy.flatnonzero",
   "numpy.nonzero",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.unique",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM.copy",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_cost.POLYNOMIAL",
   "pandapower.pypower.idx_cost.PW_LINEAR",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.idx_gen.VG",
   "pandapower.pypower.makeAang.makeAang",
   "pandapower.pypower.makeApq.makeApq",
   "pandapower.pypower.makeAvl.makeAvl",
   "pandapower.pypower.makeAy.makeAy",
   "pandapower.pypower.makeBdc.makeBdc",
   "pandapower.pypower.opf_args.opf_args",
   "pandapower.pypower.opf_model.opf_model",
   "pandapower.pypower.pqcost.pqcost",
   "pandapower.pypower.run_userfcn.run_userfcn",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.hstack",
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.pfsoln": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo"
  ],
  "type": "module"
 },
 "pandapower.pypower.pfsoln._update_p": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.flatnonzero",
   "numpy.intersect1d",
   "numpy.setdiff1d",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_gen.PG"
  ],
  "type": "function"
 },
 "pandapower.pypower.pfsoln._update_q": {
  "lineno": 87,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.zeros",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.pfsoln._update_v": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.angle",
   "numpy.pi",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.pypower.pfsoln.pfsoln": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.conj",
   "numpy.flatnonzero",
   "numpy.ix_",
   "numpy.real",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS"
  ],
  "type": "function"
 },
 "pandapower.pypower.pips": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.finfo"
  ],
  "type": "module"
 },
 "pandapower.pypower.pips.pips": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.absolute",
   "numpy.any",
   "numpy.array",
   "numpy.dot",
   "numpy.flatnonzero",
   "numpy.isnan",
   "numpy.linalg.norm",
   "numpy.log",
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.pipsver.pipsver",
   "scipy.sparse.csr_matrix",
   "scipy.sparse.eye",
   "scipy.sparse.hstack",
   "scipy.sparse.linalg.spsolve",
   "scipy.sparse.vstack"
  ],
  "type": "function"
 },
 "pandapower.pypower.pipsopf_solver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.pipsopf_solver.pipsopf_solver": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.conj",
   "numpy.exp",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.F_BUS.astype",
   "pandapower.pypower.idx_brch.MU_SF",
   "pandapower.pypower.idx_brch.MU_ST",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.T_BUS.astype",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.LAM_P",
   "pandapower.pypower.idx_bus.LAM_Q",
   "pandapower.pypower.idx_bus.MU_VMAX",
   "pandapower.pypower.idx_bus.MU_VMIN",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_cost.PW_LINEAR",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.MU_PMAX",
   "pandapower.pypower.idx_gen.MU_PMIN",
   "pandapower.pypower.idx_gen.MU_QMAX",
   "pandapower.pypower.idx_gen.MU_QMIN",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.VG",
   "pandapower.pypower.makeYbus.makeYbus",
   "pandapower.pypower.opf_consfcn.opf_consfcn",
   "pandapower.pypower.opf_costfcn.opf_costfcn",
   "pandapower.pypower.opf_hessfcn.opf_hessfcn",
   "pandapower.pypower.pips.pips",
   "pandapower.pypower.util.sub2ind"
  ],
  "type": "function"
 },
 "pandapower.pypower.pipsver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.pipsver.pipsver": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.polycost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.polycost.polycost": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.flatnonzero",
   "numpy.zeros",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_cost.NCOST.astype",
   "pandapower.pypower.idx_cost.PW_LINEAR",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.ppoption": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.Inf"
  ],
  "type": "module"
 },
 "pandapower.pypower.ppoption.ppoption": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.ppver": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.ppver.ppver": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.pqcost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.pqcost.pqcost": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "pandapower.pypower.printpf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.printpf.printpf": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.arange",
   "numpy.argmax",
   "numpy.argmin",
   "numpy.diff",
   "numpy.exp",
   "numpy.flatnonzero",
   "numpy.imag",
   "numpy.logical_or",
   "numpy.min",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.real",
   "numpy.sort",
   "numpy.zeros",
   "pandapower.pypower.idx_brch.BR_B",
   "pandapower.pypower.idx_brch.BR_B.real",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_STATUS",
   "pandapower.pypower.idx_brch.BR_STATUS.astype",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.F_BUS.astype",
   "pandapower.pypower.idx_brch.F_BUS.real",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.MU_SF",
   "pandapower.pypower.idx_brch.MU_ST",
   "pandapower.pypower.idx_brch.PF",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT",
   "pandapower.pypower.idx_brch.QT.real",
   "pandapower.pypower.idx_brch.RATE_A",
   "pandapower.pypower.idx_brch.SHIFT",
   "pandapower.pypower.idx_brch.TAP",
   "pandapower.pypower.idx_brch.TAP.real",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_brch.T_BUS.astype",
   "pandapower.pypower.idx_brch.T_BUS.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.BUS_AREA",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_I.astype",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.pypower.idx_bus.LAM_P",
   "pandapower.pypower.idx_bus.LAM_Q",
   "pandapower.pypower.idx_bus.MU_VMAX",
   "pandapower.pypower.idx_bus.MU_VMIN",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.GEN_STATUS",
   "pandapower.pypower.idx_gen.MU_PMAX",
   "pandapower.pypower.idx_gen.MU_PMIN",
   "pandapower.pypower.idx_gen.MU_QMAX",
   "pandapower.pypower.idx_gen.MU_QMIN",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.PMAX",
   "pandapower.pypower.idx_gen.PMIN",
   "pandapower.pypower.idx_gen.QG",
   "pandapower.pypower.idx_gen.QMAX",
   "pandapower.pypower.idx_gen.QMIN",
   "pandapower.pypower.isload.isload",
   "pandapower.pypower.ppoption.ppoption",
   "pandapower.pypower.run_userfcn.run_userfcn",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pandapower.pypower.qps_pips": {
  "lineno": null,
  "symbols_in_volume": [
   "doctest.testmod"
  ],
  "type": "module"
 },
 "pandapower.pypower.qps_pips.qps_pips": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.Inf",
   "numpy.ones",
   "numpy.zeros",
   "pandapower.pypower.pips.pips",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "pandapower.pypower.qps_pips.qps_pips.qp_f": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "pandapower.pypower.qps_pypower": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.qps_pypower.qps_pypower": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandapower.pypower.qps_pips.qps_pips"
  ],
  "type": "function"
 },
 "pandapower.pypower.run_userfcn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.run_userfcn.run_userfcn": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.totcost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.totcost.totcost": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.flatnonzero",
   "numpy.zeros",
   "pandapower.pypower.idx_cost.COST",
   "pandapower.pypower.idx_cost.MODEL",
   "pandapower.pypower.idx_cost.NCOST",
   "pandapower.pypower.idx_cost.POLYNOMIAL",
   "pandapower.pypower.idx_cost.PW_LINEAR",
   "pandapower.pypower.polycost.polycost"
  ],
  "type": "function"
 },
 "pandapower.pypower.update_mupq": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.update_mupq.update_mupq": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandapower.pypower.idx_gen.MU_PMAX",
   "pandapower.pypower.idx_gen.MU_PMIN",
   "pandapower.pypower.idx_gen.MU_QMAX",
   "pandapower.pypower.idx_gen.MU_QMIN"
  ],
  "type": "function"
 },
 "pandapower.pypower.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.pypower.util.feval": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.util.have_fcn": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.pypower.util.sub2ind": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.results._copy_results_ppci_to_ppc": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results._extract_results": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandapower.results_branch._get_branch_results",
   "pandapower.results_bus._get_bus_results",
   "pandapower.results_bus._get_bus_v_results",
   "pandapower.results_bus._get_p_q_results",
   "pandapower.results_bus._get_shunt_results",
   "pandapower.results_bus._set_buses_out_of_service",
   "pandapower.results_gen._get_gen_results"
  ],
  "type": "function"
 },
 "pandapower.results._extract_results_3ph": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandapower.results_branch._get_branch_results_3ph",
   "pandapower.results_bus._get_bus_results_3ph",
   "pandapower.results_bus._get_bus_v_results_3ph",
   "pandapower.results_bus._get_p_q_results_3ph",
   "pandapower.results_bus._set_buses_out_of_service",
   "pandapower.results_gen._get_gen_results_3ph"
  ],
  "type": "function"
 },
 "pandapower.results._extract_results_se": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.zeros",
   "pandapower.results_branch._get_branch_results",
   "pandapower.results_bus._get_bus_v_results",
   "pandapower.results_bus._set_buses_out_of_service"
  ],
  "type": "function"
 },
 "pandapower.results._get_aranged_lookup": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones"
  ],
  "type": "function"
 },
 "pandapower.results._get_costs": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results._ppci_branch_to_ppc": {
  "lineno": 165,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "pandapower.results._ppci_bus_to_ppc": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.shape"
  ],
  "type": "function"
 },
 "pandapower.results._ppci_gen_to_ppc": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.shape"
  ],
  "type": "function"
 },
 "pandapower.results._ppci_internal_to_ppc": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.empty",
   "numpy.nan",
   "numpy.shape"
  ],
  "type": "function"
 },
 "pandapower.results._ppci_other_to_ppc": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results.empty_res_element": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.results.get_relevant_elements": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results.get_result_tables": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results.init_element": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.results.init_results": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results.reset_results": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results.verify_results": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_branch": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.results_branch._get_branch_flows": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_branch_flows_3ph": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.sqrt",
   "pandapower.auxiliary.I_from_SV_elementwise",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BASE_KV.flatten",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM.flatten"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_branch_results": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_branch._get_branch_results_3ph": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_branch._get_impedance_results": {
  "lineno": 484,
  "symbols_in_volume": [
   "numpy.zeros_like",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT.real"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_line_results": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.max",
   "numpy.square",
   "numpy.zeros_like",
   "pandapower.pypower.idx_brch.BR_R.real",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_line_results_3ph": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.maximum.reduce",
   "numpy.sqrt",
   "numpy.zeros_like",
   "pandapower.auxiliary.S_from_VI_elementwise",
   "pandapower.auxiliary.sequence_to_phase"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_switch_results": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.max",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_trafo3w_lookups": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_branch._get_trafo3w_results": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.max",
   "numpy.sqrt",
   "numpy.vstack",
   "numpy.zeros_like",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_trafo_results": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.errstate",
   "numpy.max",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.vstack",
   "numpy.zeros_like",
   "pandapower.pypower.idx_brch.F_BUS.real.astype",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.PT.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_brch.QT.real",
   "pandapower.pypower.idx_brch.T_BUS.real.astype",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_trafo_results_3ph": {
  "lineno": 297,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asarray",
   "numpy.maximum.reduce",
   "numpy.newaxis",
   "numpy.sqrt",
   "numpy.vstack",
   "numpy.zeros_like",
   "pandapower.auxiliary.S_from_VI_elementwise",
   "pandapower.auxiliary.sequence_to_phase"
  ],
  "type": "function"
 },
 "pandapower.results_branch._get_xward_branch_results": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_brch.PF.real",
   "pandapower.pypower.idx_brch.QF.real",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_bus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.results_bus._V012_from_ppc012": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.zeros",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_bus._get_bus_idx": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_bus._get_bus_results": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_bus._get_bus_results_3ph": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_bus._get_bus_v_results": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_bus._get_bus_v_results_3ph": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.angle",
   "numpy.pi",
   "pandapower.auxiliary.sequence_to_phase"
  ],
  "type": "function"
 },
 "pandapower.results_bus._get_opf_marginal_prices": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.LAM_P",
   "pandapower.pypower.idx_bus.LAM_Q"
  ],
  "type": "function"
 },
 "pandapower.results_bus._get_p_q_results": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.hstack",
   "numpy.zeros",
   "pandapower.auxiliary._sum_by_group"
  ],
  "type": "function"
 },
 "pandapower.results_bus._get_p_q_results_3ph": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "numpy.hstack",
   "numpy.zeros",
   "pandapower.auxiliary._sum_by_group_nvals"
  ],
  "type": "function"
 },
 "pandapower.results_bus._get_shunt_results": {
  "lineno": 370,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.nan_to_num",
   "numpy.zeros",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_bus._set_buses_out_of_service": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.where",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.results_bus.get_p_q_b": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pandapower.results_bus.get_p_q_b_3ph": {
  "lineno": 274,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pandapower.results_bus.write_pq_results_to_element": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandapower.build_bus._get_motor_pq",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.results_bus.write_pq_results_to_element_3ph": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.results_bus.write_voltage_dependend_load_results": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "pandapower.results_gen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.results_gen._get_dcline_results": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.results_gen._get_ext_grid_results": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_ext_grid_results_3ph": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.complex128",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.imag",
   "numpy.real",
   "numpy.sqrt",
   "numpy.zeros",
   "pandapower.auxiliary.SVabc_from_SV012",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_gen_results": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.zeros",
   "pandapower.auxiliary._sum_by_group"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_gen_results_3ph": {
  "lineno": 49,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.zeros",
   "pandapower.auxiliary._sum_by_group_nvals"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_p_q_gen_results": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.zeros",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_p_q_gen_results_3ph": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.imag",
   "numpy.real",
   "numpy.zeros",
   "pandapower.auxiliary.I_from_SV_elementwise",
   "pandapower.auxiliary.S_from_VI_elementwise",
   "pandapower.auxiliary.sequence_to_phase",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS",
   "pandapower.pypower.idx_gen.PG",
   "pandapower.pypower.idx_gen.QG"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_pp_gen_results": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_pp_gen_results_3ph": {
  "lineno": 293,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_v_gen_results_3ph": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.angle",
   "numpy.array",
   "numpy.copy",
   "numpy.deg2rad",
   "numpy.exp",
   "numpy.rad2deg",
   "numpy.real",
   "numpy.zeros",
   "pandapower.auxiliary.sequence_to_phase",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.pypower.idx_gen.GEN_BUS"
  ],
  "type": "function"
 },
 "pandapower.results_gen._get_v_gen_resuts": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.run": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.run._passed_runpp_parameters": {
  "lineno": 410,
  "symbols_in_volume": [
   "inspect.getfullargspec",
   "inspect.signature"
  ],
  "type": "function"
 },
 "pandapower.run.rundcopp": {
  "lineno": 360,
  "symbols_in_volume": [
   "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
   "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
   "pandapower.auxiliary._init_rundcopp_options",
   "pandapower.optimal_powerflow._optimal_powerflow"
  ],
  "type": "function"
 },
 "pandapower.run.rundcpp": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
   "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
   "pandapower.auxiliary._init_rundcpp_options",
   "pandapower.powerflow._powerflow"
  ],
  "type": "function"
 },
 "pandapower.run.runopp": {
  "lineno": 270,
  "symbols_in_volume": [
   "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
   "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
   "pandapower.auxiliary._init_runopp_options",
   "pandapower.opf.validate_opf_input._check_necessary_opf_parameters",
   "pandapower.optimal_powerflow._optimal_powerflow"
  ],
  "type": "function"
 },
 "pandapower.run.runpp": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandapower.auxiliary._check_bus_index_and_print_warning_if_high",
   "pandapower.auxiliary._check_gen_index_and_print_warning_if_high",
   "pandapower.auxiliary._init_runpp_options",
   "pandapower.auxiliary._internal_stored",
   "pandapower.control.run_control",
   "pandapower.powerflow._powerflow",
   "pandapower.powerflow._recycled_powerflow"
  ],
  "type": "function"
 },
 "pandapower.run.set_user_pf_options": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.runpm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.runpm.runpm": {
  "lineno": 16,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.opf.run_powermodels._runpm",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.runpm.runpm_ac_opf": {
  "lineno": 172,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.opf.run_powermodels._runpm",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.runpm.runpm_dc_opf": {
  "lineno": 104,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.opf.run_powermodels._runpm",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.runpm.runpm_ots": {
  "lineno": 307,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.converter.powermodels.from_pm.read_ots_results",
   "pandapower.opf.run_powermodels._runpm",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.runpm.runpm_storage_opf": {
  "lineno": 356,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.opf.pm_storage.add_storage_opf_settings",
   "pandapower.opf.pm_storage.read_pm_storage_results",
   "pandapower.opf.run_powermodels._runpm",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.runpm.runpm_tnep": {
  "lineno": 254,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.auxiliary._add_opf_options",
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.converter.powermodels.from_pm.read_tnep_results",
   "pandapower.opf.run_powermodels._runpm",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.shortcircuit.calc_sc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.shortcircuit.calc_sc._calc_sc": {
  "lineno": 220,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_auxiliary_elements",
   "pandapower.auxiliary._clean_up",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.shortcircuit.currents._calc_branch_currents",
   "pandapower.shortcircuit.currents._calc_ikss",
   "pandapower.shortcircuit.currents._calc_ip",
   "pandapower.shortcircuit.currents._calc_ith",
   "pandapower.shortcircuit.impedance._calc_rx",
   "pandapower.shortcircuit.impedance._calc_ybus",
   "pandapower.shortcircuit.impedance._calc_zbus",
   "pandapower.shortcircuit.kappa._add_kappa_to_ppc",
   "pandapower.shortcircuit.results._extract_results"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc._calc_sc_1ph": {
  "lineno": 248,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_auxiliary_elements",
   "pandapower.auxiliary._clean_up",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pd2ppc_zero._pd2ppc_zero",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.shortcircuit.currents._calc_branch_currents",
   "pandapower.shortcircuit.currents._calc_ikss_1ph",
   "pandapower.shortcircuit.impedance._calc_rx",
   "pandapower.shortcircuit.impedance._calc_ybus",
   "pandapower.shortcircuit.impedance._calc_zbus",
   "pandapower.shortcircuit.kappa._add_kappa_to_ppc",
   "pandapower.shortcircuit.results._extract_results"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc._calc_sc_single": {
  "lineno": 203,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_auxiliary_elements",
   "pandapower.auxiliary._clean_up",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.shortcircuit.currents._calc_ikss",
   "pandapower.shortcircuit.currents._calc_single_bus_sc",
   "pandapower.shortcircuit.impedance._calc_rx",
   "pandapower.shortcircuit.impedance._calc_ybus",
   "pandapower.shortcircuit.impedance._calc_zbus",
   "pandapower.shortcircuit.results._extract_single_results"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc.calc_sc": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.auxiliary._add_sc_options",
   "pandapower.results.init_results"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.calc_sc.calc_single_sc": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.auxiliary._add_sc_options",
   "pandapower.results.init_results"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.shortcircuit.currents._calc_branch_currents": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.dot",
   "numpy.fill_diagonal",
   "numpy.nan",
   "numpy.nanmax",
   "numpy.nanmin",
   "numpy.real",
   "numpy.sqrt",
   "numpy.tile",
   "pandapower.shortcircuit.idx_brch.IKSS_F",
   "pandapower.shortcircuit.idx_brch.IKSS_T",
   "pandapower.shortcircuit.idx_brch.IP_F",
   "pandapower.shortcircuit.idx_brch.IP_T",
   "pandapower.shortcircuit.idx_brch.ITH_F",
   "pandapower.shortcircuit.idx_brch.ITH_T",
   "pandapower.shortcircuit.idx_bus.IKCV",
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.IKSS2",
   "pandapower.shortcircuit.idx_bus.KAPPA",
   "pandapower.shortcircuit.idx_bus.M"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._calc_ib_generator": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.clip",
   "numpy.exp",
   "numpy.int64",
   "numpy.sin",
   "numpy.sqrt",
   "numpy.square",
   "numpy.sum",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_gen.GEN_BUS.astype",
   "pandapower.pypower.idx_gen.MBASE",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._calc_ikss": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN",
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._calc_ikss_1ph": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN",
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._calc_ip": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.IKSS2",
   "pandapower.shortcircuit.idx_bus.IP",
   "pandapower.shortcircuit.idx_bus.KAPPA"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._calc_ith": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt",
   "numpy.where",
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.IKSS2",
   "pandapower.shortcircuit.idx_bus.ITH",
   "pandapower.shortcircuit.idx_bus.KAPPA",
   "pandapower.shortcircuit.idx_bus.M"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._calc_single_bus_sc": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.fill_diagonal",
   "numpy.tile",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN",
   "pandapower.shortcircuit.idx_bus.IKCV",
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.IKSS2"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents._current_source_current": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.dot",
   "pandapower.auxiliary._sum_by_group",
   "pandapower.shortcircuit.idx_bus.IKCV",
   "pandapower.shortcircuit.idx_bus.IKSS2",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.currents.calc_branch_results": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandapower.pf.ppci_variables._get_pf_variables_from_ppci",
   "pandapower.pypower.pfsoln.pfsoln"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.idx_brch": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.pypower.idx_brch.branch_cols"
  ],
  "type": "module"
 },
 "pandapower.shortcircuit.idx_bus": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.bus_cols"
  ],
  "type": "module"
 },
 "pandapower.shortcircuit.impedance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.shortcircuit.impedance._calc_rx": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.fill_diagonal",
   "numpy.square",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.impedance._calc_ybus": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.pypower.makeYbus.makeYbus"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.impedance._calc_zbus": {
  "lineno": 42,
  "symbols_in_volume": [
   "scipy.linalg.inv",
   "scipy.sparse.linalg.inv",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.kappa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.shortcircuit.kappa._add_kappa_to_ppc": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandapower.shortcircuit.idx_bus.KAPPA",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.kappa._kappa": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.kappa._kappa_method_b": {
  "lineno": 59,
  "symbols_in_volume": [
   "networkx.all_simple_paths",
   "numpy.clip",
   "numpy.full",
   "numpy.where",
   "pandapower.pypower.idx_bus.BASE_KV",
   "pandapower.pypower.idx_bus.BUS_I.astype",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.kappa._kappa_method_c": {
  "lineno": 32,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.where",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.GS",
   "pandapower.shortcircuit.idx_bus.R_EQUIV",
   "pandapower.shortcircuit.idx_bus.X_EQUIV",
   "pandapower.shortcircuit.impedance._calc_rx",
   "pandapower.shortcircuit.impedance._calc_ybus",
   "pandapower.shortcircuit.impedance._calc_zbus"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.kappa.nxgraph_from_ppc": {
  "lineno": 86,
  "symbols_in_volume": [
   "networkx.MultiGraph",
   "pandapower.pypower.idx_brch.BR_R",
   "pandapower.pypower.idx_brch.BR_X",
   "pandapower.pypower.idx_brch.F_BUS",
   "pandapower.pypower.idx_brch.T_BUS",
   "pandapower.pypower.idx_bus.BS",
   "pandapower.pypower.idx_bus.BUS_I.astype",
   "pandapower.pypower.idx_bus.GS"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.shortcircuit.results._extract_results": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.shortcircuit.results._extract_single_results": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.nan",
   "numpy.zeros",
   "pandapower.results._get_aranged_lookup",
   "pandapower.results._get_branch_results",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_bus_results": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandapower.shortcircuit.idx_bus.IKSS1",
   "pandapower.shortcircuit.idx_bus.IKSS2",
   "pandapower.shortcircuit.idx_bus.IP",
   "pandapower.shortcircuit.idx_bus.ITH"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_line_all_results": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.minimum",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_line_results": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "pandapower.shortcircuit.idx_brch.IKSS_F.real",
   "pandapower.shortcircuit.idx_brch.IKSS_T.real",
   "pandapower.shortcircuit.idx_brch.IP_F.real",
   "pandapower.shortcircuit.idx_brch.IP_T.real",
   "pandapower.shortcircuit.idx_brch.ITH_F.real",
   "pandapower.shortcircuit.idx_brch.ITH_T.real"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_single_bus_results": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.nan",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.results_bus._get_bus_idx",
   "pandapower.results_bus._set_buses_out_of_service",
   "pandapower.shortcircuit.idx_bus.C_MAX",
   "pandapower.shortcircuit.idx_bus.C_MIN"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_trafo3w_all_results": {
  "lineno": 138,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_trafo3w_results": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandapower.shortcircuit.idx_brch.IKSS_F.real",
   "pandapower.shortcircuit.idx_brch.IKSS_T.real"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_trafo_all_results": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "pandapower.shortcircuit.results._get_trafo_results": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandapower.shortcircuit.idx_brch.IKSS_F.real",
   "pandapower.shortcircuit.idx_brch.IKSS_T.real"
  ],
  "type": "function"
 },
 "pandapower.std_types": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.std_types.add_basic_std_types": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.add_temperature_coefficient": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.add_zero_impedance_parameters": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.available_std_types": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandapower.std_types.change_std_type": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.copy_std_types": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.create_std_type": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.create_std_types": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.delete_std_type": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.find_std_type_by_parameter": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.load_std_type": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.std_types.parameter_from_std_type": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.std_types.std_type_exists": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.api.test_auxiliary": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemo": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemo.__init__": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDF": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDF.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDict": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.test.api.test_auxiliary.MemoryLeakDemoDict.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_get_indices": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.array_equal",
   "pandapower.auxiliary.get_indices"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leak_df": {
  "lineno": 187,
  "symbols_in_volume": [
   "gc.collect",
   "pandapower.toolbox.get_gc_objects_dict",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leak_dict": {
  "lineno": 199,
  "symbols_in_volume": [
   "gc.collect",
   "pandapower.toolbox.get_gc_objects_dict"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leak_no_copy_demo": {
  "lineno": 170,
  "symbols_in_volume": [
   "gc.collect",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.networks.example_simple",
   "pandapower.toolbox.get_gc_objects_dict"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leaks": {
  "lineno": 118,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gc.collect",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.control.ContinuousTapControl",
   "pandapower.networks.example_simple",
   "pandapower.toolbox.get_gc_objects_dict"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leaks_demo": {
  "lineno": 138,
  "symbols_in_volume": [
   "copy.deepcopy",
   "gc.collect",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.networks.example_simple",
   "pandapower.toolbox.get_gc_objects_dict"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_memory_leaks_no_copy": {
  "lineno": 156,
  "symbols_in_volume": [
   "gc.collect",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.control.ConstControl",
   "pandapower.create_empty_network",
   "pandapower.toolbox.get_gc_objects_dict"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_auxiliary.test_net_deepcopy": {
  "lineno": 88,
  "symbols_in_volume": [
   "copy.deepcopy",
   "geopandas.GeoDataFrame",
   "pandapower.control.ConstControl",
   "pandapower.control.ContinuousTapControl",
   "pandapower.networks.example_simple",
   "pandapower.timeseries.DFData",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_convert_format": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.join",
   "os.walk",
   "pandapower.pp_dir",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_convert_format.test_convert_format": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.allclose",
   "os.path.isfile",
   "os.path.join",
   "pandapower.convert_format",
   "pandapower.from_json",
   "pandapower.runpp",
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_convert_format.test_convert_format_controller": {
  "lineno": 47,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.from_json"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_convert_format.test_convert_format_pq_bus_meas": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.allclose",
   "os.path.join",
   "pandapower.convert_format",
   "pandapower.from_json",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas.set_option",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_create.test_convenience_create_functions": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_load_from_cosphi",
   "pandapower.create_series_reactor_as_impedance",
   "pandapower.create_sgen_from_cosphi",
   "pandapower.create_shunt_as_capacitor",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runpp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_buses": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_gens": {
  "lineno": 776,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gens"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_gens_raise_except": {
  "lineno": 807,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gens",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_line_alpha_temperature": {
  "lineno": 352,
  "symbols_in_volume": [
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_line_from_parameters"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_line_conductance": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_std_type"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_lines": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_lines"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_lines_from_parameters": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_lines_from_parameters"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_lines_raise_except": {
  "lineno": 335,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_lines_from_parameters",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_loads": {
  "lineno": 672,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_loads"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_loads_raise_except": {
  "lineno": 700,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_loads",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_sgens": {
  "lineno": 721,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_sgens"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_sgens_raise_except": {
  "lineno": 752,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_sgens",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_switches": {
  "lineno": 599,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switches",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_switches_raise_except": {
  "lineno": 629,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.create_switches",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w_from_parameters",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers3w_from_parameters": {
  "lineno": 474,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_transformers3w_from_parameters"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers3w_raise_except": {
  "lineno": 548,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_transformers3w_from_parameters",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers_from_parameters": {
  "lineno": 369,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_transformers_from_parameters"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_create_transformers_raise_except": {
  "lineno": 442,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_transformers_from_parameters",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_nonexistent_bus": {
  "lineno": 71,
  "symbols_in_volume": [
   "functools.partial",
   "pandapower.create_bus",
   "pandapower.create_dcline",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_impedance",
   "pandapower.create_line",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_shunt",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.create_transformer_from_parameters",
   "pandapower.create_ward",
   "pandapower.create_xward",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_create.test_tap_phase_shifter_default": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_std_type",
   "pandapower.create_transformer",
   "pandapower.create_transformer_from_parameters",
   "pandapower.load_std_type"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_between_zero_and_one": {
  "lineno": 316,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_boolean": {
  "lineno": 184,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_greater_equal_zero": {
  "lineno": 129,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_greater_zero": {
  "lineno": 82,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.nan",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_number": {
  "lineno": 283,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.nan",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_pos_int": {
  "lineno": 235,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.nan",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.TestInvalidValues.test_switch_type": {
  "lineno": 342,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.invalid_values"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.diag_errors": {
  "lineno": 24,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.diag_params": {
  "lineno": 28,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.report_methods": {
  "lineno": 44,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_deviation_from_std_type": {
  "lineno": 968,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.change_std_type",
   "pandapower.deviation_from_std_type",
   "pandapower.diagnostic_reports.DiagnosticReports"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_different_voltage_levels_connected": {
  "lineno": 531,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_switch",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.different_voltage_levels_connected"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_disconnected_elements": {
  "lineno": 929,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.disconnected_elements",
   "pandapower.drop_trafos"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_impedance_values_close_to_zero": {
  "lineno": 557,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.impedance_values_close_to_zero"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_missing_bus_indices": {
  "lineno": 1063,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.missing_bus_indices"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_multiple_voltage_controlling_elements_per_bus": {
  "lineno": 389,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_ext_grid",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.multiple_voltage_controlling_elements_per_bus"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_net": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandapower.networks.example_multivoltage",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_no_ext_grid": {
  "lineno": 375,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.no_ext_grid"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_no_issues": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandapower.diagnostic",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.networks.example_simple"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_nominal_voltages_dont_match": {
  "lineno": 682,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.nominal_voltages_dont_match"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_numba_comparison": {
  "lineno": 1007,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.numba_comparison",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_overload": {
  "lineno": 418,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.overload"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_parallel_switches": {
  "lineno": 1034,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_switch",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.parallel_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_runpp_errors": {
  "lineno": 1096,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_switch_configuration": {
  "lineno": 488,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.wrong_switch_configuration"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_diagnostic.test_wrong_reference_system": {
  "lineno": 903,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.diagnostic_reports.DiagnosticReports",
   "pandapower.wrong_reference_system"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_file_io.assert_graphs_equal": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.net_in": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandapower.test.toolbox.create_test_network",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_convert_format": {
  "lineno": 138,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.from_pickle",
   "pandapower.pp_dir",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_convert_format_for_pp_objects": {
  "lineno": 238,
  "symbols_in_volume": [
   "json.dumps",
   "pandapower.control.ContinuousTapControl",
   "pandapower.control.DiscreteTapControl",
   "pandapower.create_transformer",
   "pandapower.from_json_string",
   "pandapower.io_utils.PPJSONEncoder"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_dataframes_with_integer_columns": {
  "lineno": 186,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.PPJSONEncoder",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_deepcopy_controller": {
  "lineno": 296,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.control.ContinuousTapControl",
   "pandapower.networks.mv_oberrhein"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_encrypted_json": {
  "lineno": 111,
  "symbols_in_volume": [
   "json.JSONDecodeError",
   "os.path.abspath",
   "pandapower.from_json",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.to_json",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_excel": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.abspath",
   "pandapower.from_excel",
   "pandapower.set_user_pf_options",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.to_excel"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json": {
  "lineno": 77,
  "symbols_in_volume": [
   "copy.deepcopy",
   "fiona.crs.from_epsg",
   "geopandas.GeoDataFrame",
   "os.path.abspath",
   "os.path.join",
   "pandapower.from_json",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.to_json",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_basic": {
  "lineno": 57,
  "symbols_in_volume": [
   "json.dump",
   "json.load",
   "os.path.abspath",
   "pandapower.convert_format",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.PPJSONEncoder",
   "pandapower.test.toolbox.assert_net_equal"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_controller_none": {
  "lineno": 70,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.from_json",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_different_nets": {
  "lineno": 282,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "pandapower.control.ContinuousTapControl",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.PPJSONEncoder",
   "pandapower.networks.mv_oberrhein",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_encoding_decoding": {
  "lineno": 160,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "numpy.allclose",
   "numpy.array",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.PPJSONEncoder",
   "pandapower.nets_equal",
   "pandapower.networks.mv_oberrhein",
   "pandapower.topology.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_io_same_net": {
  "lineno": 269,
  "symbols_in_volume": [
   "os.path.abspath",
   "pandapower.control.ConstControl",
   "pandapower.from_json",
   "pandapower.from_json_string",
   "pandapower.to_json"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_json_tuple_in_pandas": {
  "lineno": 206,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.PPJSONEncoder",
   "pandas.Series",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_new_pp_object_io": {
  "lineno": 215,
  "symbols_in_volume": [
   "json.dumps",
   "json.loads",
   "numpy.array",
   "pandapower.control.ConstControl",
   "pandapower.control.ContinuousTapControl",
   "pandapower.io_utils.PPJSONDecoder",
   "pandapower.io_utils.PPJSONEncoder",
   "pandapower.networks.mv_oberrhein",
   "pandapower.runpp",
   "pandapower.timeseries.DFData",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_pickle": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.path.abspath",
   "pandapower.from_pickle",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.to_pickle"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_sqlite": {
  "lineno": 131,
  "symbols_in_volume": [
   "os.path.abspath",
   "pandapower.from_sqlite",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.to_sqlite"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_to_json_dtypes": {
  "lineno": 144,
  "symbols_in_volume": [
   "os.path.abspath",
   "pandapower.from_json",
   "pandapower.runpp",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.test.toolbox.create_test_network",
   "pandapower.to_json",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_file_io.test_type_casting_json": {
  "lineno": 123,
  "symbols_in_volume": [
   "os.path.abspath",
   "pandapower.from_json",
   "pandapower.test.toolbox.assert_net_equal",
   "pandapower.to_json"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_std_types.test_add_temperature_coefficient": {
  "lineno": 317,
  "symbols_in_volume": [
   "pandapower.add_temperature_coefficient",
   "pandapower.networks.simple_mv_open_ring_net"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_change_type_line": {
  "lineno": 241,
  "symbols_in_volume": [
   "pandapower.change_std_type",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_std_type"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_and_load_std_type_line": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_type",
   "pandapower.load_std_type",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_and_load_std_type_trafo": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_type",
   "pandapower.load_std_type",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_and_load_std_type_trafo3w": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_type",
   "pandapower.load_std_type",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_from_net_line": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandapower.copy_std_types",
   "pandapower.create_empty_network",
   "pandapower.create_std_type",
   "pandapower.std_type_exists"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_line": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_types"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_trafo": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_types"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_create_std_types_trafo3w": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_types"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_find_line_type": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_std_type",
   "pandapower.find_std_type_by_parameter"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_std_types.test_parameter_from_std_type_line": {
  "lineno": 277,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_line_from_parameters",
   "pandapower.create_std_type",
   "pandapower.parameter_from_std_type"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.api.test_toolbox.net": {
  "lineno": 748,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_impedance",
   "pandapower.create_line",
   "pandapower.create_line_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_column_from_element_to_elements": {
  "lineno": 160,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.append",
   "numpy.array",
   "pandapower.add_column_from_element_to_elements",
   "pandapower.compare_arrays",
   "pandapower.create_measurement",
   "pandapower.networks.create_cigre_network_mv"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_column_from_node_to_elements": {
  "lineno": 132,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.add_column_from_node_to_elements",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.pp_elements"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_column_from_node_to_elements.check_subnet_correctness": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.compare_arrays"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_add_zones_to_elements": {
  "lineno": 534,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.toolbox.add_zones_to_elements"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_all": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandapower.toolbox.replace_zero_branches_with_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_clear_result_tables": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandapower.clear_result_tables",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_close_switch_at_line_with_two_open_switches": {
  "lineno": 621,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.toolbox.close_switch_at_line_with_two_open_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_continuos_bus_numbering": {
  "lineno": 206,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_shunt",
   "pandapower.create_ward",
   "pandapower.toolbox.create_continuous_bus_index"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_continuous_element_numbering": {
  "lineno": 281,
  "symbols_in_volume": [
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.example_multivoltage",
   "pandapower.runpp",
   "pandapower.toolbox.create_continuous_elements_index"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_cosphi_from_pq": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.isclose",
   "pandapower.cosphi_from_pq",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_create_replacement_switch_for_branch": {
  "lineno": 705,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_impedance",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.runpp",
   "pandapower.toolbox.create_replacement_switch_for_branch"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop": {
  "lineno": 781,
  "symbols_in_volume": [
   "pandapower.toolbox.replace_zero_branches_with_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_elements_at_buses": {
  "lineno": 905,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w",
   "pandapower.toolbox.drop_elements_at_buses",
   "pandapower.toolbox.get_connected_elements_dict"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_inactive_elements": {
  "lineno": 323,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.toolbox.drop_inactive_elements",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_inner_branches": {
  "lineno": 548,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_bus",
   "pandapower.create_transformer3w",
   "pandapower.networks.example_simple",
   "pandapower.toolbox.drop_inner_branches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_drop_inner_branches.check_elm_number": {
  "lineno": 549,
  "symbols_in_volume": [
   "pandapower.pp_elements"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_for_line_with_zero_length": {
  "lineno": 774,
  "symbols_in_volume": [
   "pandapower.toolbox.replace_zero_branches_with_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_fuse_buses": {
  "lineno": 573,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_switch",
   "pandapower.toolbox.fuse_buses"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_connected_buses": {
  "lineno": 869,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w",
   "pandapower.toolbox.get_connected_buses"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_connected_elements_dict": {
  "lineno": 1056,
  "symbols_in_volume": [
   "pandapower.get_connected_elements_dict",
   "pandapower.networks.example_simple"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_connected_lines_at_bus": {
  "lineno": 381,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.toolbox.get_connected_elements"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_get_element_indices": {
  "lineno": 827,
  "symbols_in_volume": [
   "pandapower.get_element_indices",
   "pandapower.networks.example_multivoltage"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_impedance": {
  "lineno": 802,
  "symbols_in_volume": [
   "pandapower.toolbox.replace_zero_branches_with_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_impedance_line_replacement": {
  "lineno": 950,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_impedance",
   "pandapower.create_load",
   "pandapower.nets_equal",
   "pandapower.replace_impedance_by_line",
   "pandapower.replace_line_by_impedance",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_in_service_only": {
  "lineno": 787,
  "symbols_in_volume": [
   "pandapower.toolbox.replace_zero_branches_with_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_line_with_zero_impediance": {
  "lineno": 795,
  "symbols_in_volume": [
   "pandapower.toolbox.replace_zero_branches_with_switches"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_merge_and_split_nets": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.dataframes_equal",
   "pandapower.merge_nets",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.networks.mv_oberrhein",
   "pandapower.runpp",
   "pandapower.select_subnet"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_merge_asymmetric": {
  "lineno": 434,
  "symbols_in_volume": [
   "pandapower.merge_nets",
   "pandapower.networks.ieee_european_lv_asymmetric"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_nets_equal": {
  "lineno": 82,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_bus",
   "pandapower.networks.create_cigre_network_lv",
   "pandapower.toolbox.logger.setLevel",
   "pandapower.toolbox.nets_equal"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_next_bus": {
  "lineno": 838,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w",
   "pandapower.toolbox.next_bus"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_opf_task": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.nan",
   "pandapower.create_buses",
   "pandapower.create_dcline",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.create_sgen",
   "pandapower.create_storage",
   "pandapower.create_transformer",
   "pandapower.dataframes_equal",
   "pandapower.opf_task"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_overloaded_lines": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.runpp",
   "pandapower.toolbox.overloaded_lines"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_pq_from_cosphi": {
  "lineno": 649,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.isclose",
   "pandapower.pq_from_cosphi"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_reindex_buses": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.networks.example_simple",
   "pandapower.reindex_buses",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_reindex_elements": {
  "lineno": 256,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.networks.example_simple",
   "pandapower.reindex_elements"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_repl_to_line": {
  "lineno": 1122,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.change_std_type",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp",
   "pandapower.toolbox.repl_to_line"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_ext_grid_gen": {
  "lineno": 980,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.isclose",
   "pandapower.networks.example_simple",
   "pandapower.replace_ext_grid_by_gen",
   "pandapower.replace_gen_by_ext_grid",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_gen_sgen": {
  "lineno": 1012,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.nets_equal",
   "pandapower.networks.case9",
   "pandapower.replace_gen_by_sgen",
   "pandapower.replace_sgen_by_gen",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_ward_by_internal_elements": {
  "lineno": 1064,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.create_ward",
   "pandapower.networks.example_simple",
   "pandapower.replace_ward_by_internal_elements",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_replace_xward_by_internal_elements": {
  "lineno": 1098,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_xward",
   "pandapower.networks.example_simple",
   "pandapower.replace_xward_by_internal_elements",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_scaling_by_type": {
  "lineno": 305,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.toolbox.set_scaling_by_type"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_select_subnet": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandapower.dataframes_equal",
   "pandapower.networks.create_cigre_network_lv",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.select_subnet"
  ],
  "type": "function"
 },
 "pandapower.test.api.test_toolbox.test_violated_buses": {
  "lineno": 519,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_lv",
   "pandapower.runpp",
   "pandapower.toolbox.violated_buses"
  ],
  "type": "function"
 },
 "pandapower.test.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.conftest.result_test_network": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandapower.runpp",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.conftest.simple_network": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.consistency_checks.branch_loss_consistent_with_bus_feed_in": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.branch_loss_consistent_with_bus_feed_in_3ph": {
  "lineno": 129,
  "symbols_in_volume": [
   "numpy.isclose"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.consistency_checks": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.consistency_checks.consistency_checks_3ph": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.consistency_checks.element_power_consistent_with_bus_power": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.element_power_consistent_with_bus_power_3ph": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.indices_consistent": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandapower.results.get_relevant_elements"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.indices_consistent_3ph": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandapower.results.get_relevant_elements"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.rundcpp_with_consistency_checks": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.rundcpp"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandapower.pf.runpp_3ph.runpp_3ph"
  ],
  "type": "function"
 },
 "pandapower.test.consistency_checks.runpp_with_consistency_checks": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.control": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.control.test_const_control": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.control.test_const_control.test_write": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "pandapower.control.ConstControl",
   "pandapower.create_sgen",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.timeseries.DFData",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_continous_tap_control": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.control.test_continous_tap_control.test_continuous_tap_control_hv": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.control.ContinuousTapControl",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_continous_tap_control.test_continuous_tap_control_lv": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.control.ContinuousTapControl",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.control.test_control.DummyController": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandapower.control.basic_controller.Controller"
  ],
  "type": "class"
 },
 "pandapower.test.control.test_control.DummyController.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.DummyController.control_step": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.DummyController.initialize_control": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.DummyController.is_converged": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.net": {
  "lineno": 48,
  "symbols_in_volume": [
   "pandapower.create_sgen",
   "pandapower.networks.create_kerber_vorstadtnetz_kabel_1",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandapower.control.basic_controller.Controller"
  ],
  "type": "class"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.control_step": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.is_converged": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_add_get_controller.ControllerTester.time_step": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_conflicting_controllers": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandapower.control.ControllerNotConverged",
   "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl",
   "pandapower.runpp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandapower.control.ControllerNotConverged",
   "pandapower.timeseries.output_writer.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandapower.control.basic_controller.Controller"
  ],
  "type": "class"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController.is_converged": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_ctrl_unconverged.DivergentController.time_step": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_in_service_bool": {
  "lineno": 122,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.control.controller.trafo_control.TrafoController",
   "pandapower.runpp",
   "pytest.mark.xfail",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_level": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_level_in_service": {
  "lineno": 169,
  "symbols_in_volume": [
   "pandapower.control.run_control.get_controller_order",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_matching_params": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.control.test_control.test_multiple_levels": {
  "lineno": 140,
  "symbols_in_volume": [
   "pandapower.control.basic_controller.Controller",
   "pandapower.control.controller.trafo_control.TrafoController",
   "pandapower.control.run_control.get_controller_order",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_discrete_tap_control": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.control.test_discrete_tap_control.test_discrete_tap_control_hv": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandapower.control.DiscreteTapControl",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.control.test_discrete_tap_control.test_discrete_tap_control_lv": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandapower.control.DiscreteTapControl",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.converter": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.converter.test_from_mpc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.converter.test_from_mpc.test_from_mpc": {
  "lineno": 23,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.converter.from_mpc",
   "pandapower.nets_equal",
   "pandapower.networks.case24_ieee_rts",
   "pandapower.pp_dir",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.converter.test_from_ppc.get_testgrids": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.pp_dir",
   "pickle.load"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_case24": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandapower.converter.from_ppc",
   "pandapower.runopp",
   "pypower.case24_ieee_rts.case24_ieee_rts",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_case9_conversion": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandapower.converter.from_ppc",
   "pandapower.converter.to_ppc",
   "pandapower.nets_equal",
   "pandapower.networks.case9",
   "pandapower.runopp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_from_ppc": {
  "lineno": 43,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.converter.from_ppc",
   "pandapower.from_json",
   "pandapower.nets_equal",
   "pandapower.pp_dir",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_ppc_testgrids": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandapower.converter.from_ppc",
   "pandapower.converter.validate_from_ppc"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_pypower_cases": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandapower.converter.from_ppc",
   "pandapower.converter.validate_from_ppc",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_from_ppc.test_validate_from_ppc": {
  "lineno": 59,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.converter.validate_from_ppc",
   "pandapower.from_json",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.converter.test_to_ppc_and_mpc.test_to_ppc_and_mpc": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.converter.to_mpc",
   "pandapower.converter.to_ppc",
   "pandapower.pf.runpf_pypower._runpf_pypower",
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.pypower.idx_bus.BUS_I.astype",
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM",
   "pandapower.results.reset_results",
   "pandapower.runpp",
   "pandapower.test.converter.test_from_ppc.get_testgrids"
  ],
  "type": "function"
 },
 "pandapower.test.estimation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.estimation.test_conditions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.estimation.test_conditions.test_no_observability": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandapower.estimation.estimate",
   "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_none_net": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandapower.estimation.estimate",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_nonexistant_alg": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandapower.estimation.estimate",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_wrong_fuse_setting": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandapower.estimation.estimate",
   "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_wrong_init": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandapower.estimation.estimate",
   "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_conditions.test_wrong_zero_inj": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.estimation.estimate",
   "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_irwls_estimation": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.estimation.test_irwls_estimation.test_irwls_comp_wls": {
  "lineno": 22,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.estimation.estimate",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case14",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_irwls_estimation.test_irwls_shgm": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case14",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_irwls_estimation.test_shgm_ps": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.estimation.algorithm.estimator.SHGMEstimatorIRWLS",
   "pandapower.estimation.ppc_conversion.pp2eppci",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case14",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_case9_compare_classical_wls_opt_wls": {
  "lineno": 21,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.estimation.algorithm.base.WLSAlgorithm",
   "pandapower.estimation.algorithm.optimization.OptAlgorithm",
   "pandapower.estimation.estimate",
   "pandapower.estimation.ppc_conversion.pp2eppci",
   "pandapower.estimation.results.eppci2pp",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_lp_lav": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_opt_lav": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.algorithm.base.WLSAlgorithm",
   "pandapower.estimation.algorithm.optimization.OptAlgorithm",
   "pandapower.estimation.ppc_conversion.pp2eppci",
   "pandapower.estimation.results.eppci2pp",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_opt_lp_estimation.test_ql_qc": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.algorithm.base.WLSAlgorithm",
   "pandapower.estimation.algorithm.optimization.OptAlgorithm",
   "pandapower.estimation.ppc_conversion.pp2eppci",
   "pandapower.estimation.results.eppci2pp",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_pmu": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.estimation.test_pmu.run_se_lp_verify": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_pmu.test_pmu_case14": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandapower.estimation.util.add_virtual_pmu_meas_from_loadflow",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_pmu.test_pmu_with_trafo3w": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer3w",
   "pandapower.estimation.util.add_virtual_pmu_meas_from_loadflow",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_recycle": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.estimation.test_recycle.test_recycle_case30": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.StateEstimation",
   "pandapower.estimation.util.add_virtual_meas_from_loadflow",
   "pandapower.networks.case30",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.estimation.test_wls_estimation._compare_pf_and_se_results": {
  "lineno": 925,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.create_net_with_bb_switch": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.load_3bus_network": {
  "lineno": 568,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.from_json",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.r": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.r2": {
  "lineno": 921,
  "symbols_in_volume": [
   "numpy.random.normal"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_2bus": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nanmax",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nanmax",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_2_slacks": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.nan",
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_bad_data": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nanmax",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_measurement",
   "pandapower.estimation.chi2_analysis",
   "pandapower.estimation.remove_bad_data"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_i_line_measurements": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.nanmax",
   "numpy.random.seed",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_out_of_service_bus": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.nanmax",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_pq_line_from_to_measurements": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.nanmax",
   "numpy.random.seed",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_side_names": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.nanmax",
   "numpy.random.seed",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_3bus_with_transformer": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.nanmax",
   "numpy.random.seed",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_std_type",
   "pandapower.create_transformer",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_check_existing_measurements": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.random.seed",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_measurement"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_cigre_network": {
  "lineno": 410,
  "symbols_in_volume": [
   "numpy.nanmax",
   "numpy.random.seed",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_cigre_network_with_slack_init": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_cigre_with_bad_data": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.nanmax",
   "numpy.random.choice",
   "numpy.random.seed",
   "numpy.tan",
   "pandapower.create_measurement",
   "pandapower.estimation.chi2_analysis",
   "pandapower.estimation.estimate",
   "pandapower.estimation.remove_bad_data",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_init_slack_with_multiple_transformers": {
  "lineno": 487,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.nanmax",
   "numpy.random.seed",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_std_type",
   "pandapower.create_transformer",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_init_slack_with_multiple_transformers_angles_off": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_oos_line": {
  "lineno": 898,
  "symbols_in_volume": [
   "pandapower.create_measurement",
   "pandapower.estimation.estimate",
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_unobserved_island": {
  "lineno": 854,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_transformer",
   "pandapower.estimation.estimate",
   "pandapower.runpp",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_with_bb_switch_fuse_one": {
  "lineno": 724,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_with_bb_switch_fuse_one_identify_pq": {
  "lineno": 735,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_with_bb_switch_fusing": {
  "lineno": 744,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_with_bb_switch_no_fusing": {
  "lineno": 712,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_net_with_zero_injection": {
  "lineno": 752,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.abs",
   "numpy.allclose",
   "numpy.pi",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_measurement",
   "pandapower.estimation.estimate"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_network_with_trafo3w_pq": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.nanmax",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_sgen",
   "pandapower.create_transformer3w",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_network_with_trafo3w_with_disabled_branch": {
  "lineno": 618,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.nanmax",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_sgen",
   "pandapower.create_transformer3w",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.estimation.test_wls_estimation.test_zero_injection_aux_bus": {
  "lineno": 796,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_measurement",
   "pandapower.create_transformer",
   "pandapower.estimation.estimate",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.loadflow.PF_Results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.loadflow.PF_Results.get_PF_Results": {
  "lineno": 3,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "pandapower.LoadflowNotConverged",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_bus_bus_switch": {
  "lineno": 362,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_switch",
   "pandapower.create_ward",
   "pandapower.create_xward",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_enforce_qlims": {
  "lineno": 294,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_ext_grid": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_ext_grid_gen_switch": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_switch",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_gen": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_impedance": {
  "lineno": 341,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_impedance",
   "pandapower.create_load",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_line": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_load_sgen": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_load_sgen_split": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_oos_bus_with_is_element": {
  "lineno": 399,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_shunt",
   "pandapower.create_ward",
   "pandapower.create_xward",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_shunt": {
  "lineno": 440,
  "symbols_in_volume": [
   "pandapower.create_shunt",
   "pandapower.create_shunt_as_capacitor",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_shunt_split": {
  "lineno": 452,
  "symbols_in_volume": [
   "pandapower.create_shunt",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_single_load_single_eg": {
  "lineno": 193,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.create_load"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_trafo": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.create_transformer_from_parameters",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_trafo3w": {
  "lineno": 313,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_load",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_two_open_switches_on_deactive_line": {
  "lineno": 463,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_switch",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_ward": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandapower.create_ward",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_ward_split": {
  "lineno": 217,
  "symbols_in_volume": [
   "pandapower.create_ward",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_xward": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandapower.create_xward",
   "pandapower.get_free_id",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.add_test_xward_combination": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandapower.create_xward",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandapower.create_empty_network"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator2": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandapower.create_empty_network"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_PTDF_LODF": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.test_LODF": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandapower.networks.case9",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pypower.makeLODF.makeLODF",
   "pandapower.pypower.makePTDF.makePTDF",
   "pandapower.rundcpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_PTDF_LODF.test_PTDF": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.isnan",
   "pandapower.networks.case9",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pypower.makePTDF.makePTDF",
   "pandapower.rundcpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_recycle.recycle_net": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.test.add_grid_connection",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_gen": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_pq": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_trafo": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_transformer",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_recycle_trafo_bus_gen": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_transformer",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_recycle.test_result_index_unsorted": {
  "lineno": 126,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.nets_equal",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_results.test_bus_bus_switch": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_enforce_q_lims": {
  "lineno": 486,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.runpp",
   "pandapower.test.loadflow.result_test_network_generator.add_test_enforce_qlims",
   "pandapower.test.loadflow.result_test_network_generator.add_test_gen"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_enforce_qlims": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_ext_grid": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_gen": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_impedance": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_line": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_load_sgen": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_load_sgen_split": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_open": {
  "lineno": 553,
  "symbols_in_volume": [
   "numpy.in1d",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_shunt": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_shunt_split": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_trafo": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_trafo3w": {
  "lineno": 350,
  "symbols_in_volume": [
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_ward": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_ward_split": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_xward": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_results.test_xward_combination": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_rundcpp.get_isolated": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.auxiliary._check_connectivity",
   "pandapower.pd2ppc._pd2ppc"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_missing_gen": {
  "lineno": 105,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.networks.case4gs",
   "pandapower.rundcpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_result_iter": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandapower.LoadflowNotConverged",
   "pandapower.test.consistency_checks.rundcpp_with_consistency_checks",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_rundcpp_init": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_transformer",
   "pandapower.rundcpp",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_rundcpp_init_auxiliary_buses": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_transformer3w",
   "pandapower.create_xward",
   "pandapower.rundcpp",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_single_bus_network": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.rundcpp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_test_sn_mva": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandapower.rundcpp",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator_dcpp",
   "pandapower.test.toolbox.assert_net_equal"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_rundcpp.test_two_open_switches": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_switch",
   "pandapower.rundcpp",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_runpp.assert_init_results": {
  "lineno": 1122,
  "symbols_in_volume": [
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.bus_bus_net": {
  "lineno": 156,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.get_isolated": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandapower.auxiliary._add_ppc_options",
   "pandapower.auxiliary._check_connectivity",
   "pandapower.pd2ppc._pd2ppc"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_add_element_and_init_results": {
  "lineno": 862,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm": {
  "lineno": 483,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.allclose",
   "pandapower.networks.example_simple",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_multi_net": {
  "lineno": 498,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.allclose",
   "pandapower.networks.example_simple",
   "pandapower.runpp",
   "pandapower.test.toolbox.add_grid_connection",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_with_branch_loops": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_line",
   "pandapower.networks.example_simple",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_with_enforce_q_lims": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.networks.example_simple",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bsfw_algorithm_with_trafo_shift_and_voltage_angles": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.networks.example_simple",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bus_bus_switches": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandapower.runpp",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bus_bus_switches_merges_two_gens": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandapower.create_gen",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_bus_bus_switches_throws_exception_for_two_gen_with_diff_vm": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandapower.create_gen",
   "pandapower.runpp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_connectivity_check_island_with_multiple_pv_buses": {
  "lineno": 397,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.networks.create_cigre_network_mv"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_connectivity_check_island_with_one_pv_bus": {
  "lineno": 362,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_connectivity_check_island_without_pv_bus": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_dc_with_ext_grid_at_one_bus": {
  "lineno": 1021,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_dcline",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_equal_indices_res": {
  "lineno": 904,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_transformer",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_ext_grid_and_gen_at_one_bus": {
  "lineno": 927,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_get_internal": {
  "lineno": 790,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.pi",
   "numpy.r_",
   "pandapower.networks.example_simple",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pf.create_jacobian._create_J_without_numba",
   "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_init_results": {
  "lineno": 1096,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_switch",
   "pandapower.test.loadflow.result_test_network_generator.add_test_line",
   "pandapower.test.loadflow.result_test_network_generator.add_test_trafo",
   "pandapower.test.loadflow.result_test_network_generator.add_test_trafo3w",
   "pandapower.test.loadflow.result_test_network_generator.add_test_xward"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_init_results_without_results": {
  "lineno": 1079,
  "symbols_in_volume": [
   "pandapower.networks.example_multivoltage",
   "pandapower.reset_results",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_isolated_in_service_bus_at_oos_line": {
  "lineno": 426,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_isolated_in_service_line": {
  "lineno": 435,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_kwargs_with_user_options": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandapower.networks.example_simple",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid": {
  "lineno": 1238,
  "symbols_in_volume": [
   "pandapower.auxiliary.lightsim2grid_available",
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid_extgrid": {
  "lineno": 1260,
  "symbols_in_volume": [
   "pandapower.auxiliary.lightsim2grid_available",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid_qlims": {
  "lineno": 1255,
  "symbols_in_volume": [
   "pandapower.auxiliary.lightsim2grid_available",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_lightsim2grid_zip": {
  "lineno": 1250,
  "symbols_in_volume": [
   "pandapower.auxiliary.lightsim2grid_available",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_line_temperature": {
  "lineno": 1156,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "pandapower.networks.four_loads_with_branches_out",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_makeYbus": {
  "lineno": 445,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_minimal_net": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_switch",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_no_branches": {
  "lineno": 1039,
  "symbols_in_volume": [
   "numpy.all",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.runpp",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_only_ref_buses": {
  "lineno": 1053,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.array",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_oos_bus": {
  "lineno": 306,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_shunt",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.loadflow.result_test_network_generator.add_test_oos_bus_with_is_element"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_overwrite_default_args_with_user_options": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandapower.networks.example_simple",
   "pandapower.runpp",
   "pandapower.set_user_pf_options",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_pp_initialization": {
  "lineno": 875,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_pvpq_lookup": {
  "lineno": 770,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.runpp",
   "pandapower.toolbox.nets_equal"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_pypower_algorithms_iter": {
  "lineno": 565,
  "symbols_in_volume": [
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_result_iter": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_results_for_line_temperature": {
  "lineno": 1208,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_runpp_init": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_transformer",
   "pandapower.runpp",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_runpp_init_auxiliary_buses": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_transformer3w",
   "pandapower.create_xward",
   "pandapower.runpp",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_set_user_pf_options": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandapower.networks.example_simple",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_storage_pf": {
  "lineno": 815,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_storage",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_switch_fuse_z_ohm_0": {
  "lineno": 266,
  "symbols_in_volume": [
   "pandapower.runpp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_switch_z_ohm_different": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.all",
   "pandapower.runpp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_test_sn_mva": {
  "lineno": 470,
  "symbols_in_volume": [
   "pandapower.runpp",
   "pandapower.test.loadflow.result_test_network_generator.result_test_network_generator",
   "pandapower.test.toolbox.assert_net_equal"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_two_open_switches": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_switch",
   "pandapower.runpp",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_wye_delta": {
  "lineno": 1129,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer",
   "pandapower.pypower.idx_brch.BR_B.flatten",
   "pandapower.pypower.idx_brch.BR_R.flatten",
   "pandapower.pypower.idx_brch.BR_X.flatten",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_xward_buses": {
  "lineno": 738,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_impedance",
   "pandapower.create_load",
   "pandapower.create_xward",
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.runpp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_z_switch": {
  "lineno": 221,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.runpp",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_consistency": {
  "lineno": 691,
  "symbols_in_volume": [
   "pandapower.networks.four_loads_with_branches_out",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_gridcal": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "numpy.isclose",
   "os.path.join",
   "pandapower.from_json",
   "pandapower.pp_dir",
   "pandapower.runpp",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_pf_algorithms": {
  "lineno": 698,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.networks.four_loads_with_branches_out",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.test_zip_loads_with_voltage_angles": {
  "lineno": 717,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.runpp",
   "pandapower.set_user_pf_options"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.two_ext_grids_at_one_bus": {
  "lineno": 982,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.runpp",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.z_switch_net": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.z_switch_net_4bus": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp.z_switch_net_4bus_parallel": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_runpp_3ph.check_it": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.isnan",
   "numpy.max"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.check_results": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.concatenate"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.make_nw": {
  "lineno": 314,
  "symbols_in_volume": [
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_transformer_from_parameters",
   "pandapower.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.net": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_std_type",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network_isolated_net_part": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network_singel_oos_bus": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2bus_network_single_isolated_busses": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_bus",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_2trafos": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_empty_network",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_3ph_bus_mapping_order": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_std_type",
   "pandapower.runpp",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_3ph_isolated_nodes": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.nan",
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_std_type",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_3ph_two_bus_line_powerfactory": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.max",
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_std_type",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_4bus_network": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.isnan",
   "numpy.max",
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_line_from_parameters",
   "pandapower.create_std_type",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_out_serv_load": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_asymmetric_load",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph.test_trafo_asym": {
  "lineno": 362,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.test.consistency_checks.runpp_3ph_with_consistency_checks",
   "pandapower.test.loadflow.PF_Results.get_PF_Results"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.net": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandapower.create_asymmetric_load",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_runpp_3ph_n_line.test_check_it": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.isnan",
   "numpy.max",
   "pandapower.runpp_3ph"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.loadflow.test_scenarios.network_with_trafo3ws": {
  "lineno": 401,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.get_free_id",
   "pandapower.test.loadflow.result_test_network_generator.add_test_trafo",
   "pandapower.test.toolbox.add_grid_connection",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_0gen_2ext_grid": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_ext_grid",
   "pandapower.runpp",
   "pandapower.test.toolbox.create_test_network2"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_0gen_2ext_grid_decoupled": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_std_type",
   "pandapower.create_switch",
   "pandapower.runpp",
   "pandapower.test.toolbox.create_test_network2"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_2gen_1ext_grid": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_gen",
   "pandapower.runpp",
   "pandapower.test.toolbox.create_test_network2"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_bb_switch": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks",
   "pandapower.test.loadflow.result_test_network_generator.add_test_bus_bus_switch"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_bus_bus_switch_at_eg": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_ext_grid_gen_order_in_ppc": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.rundcpp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_generator_as_slack": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.runpp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_isolated_gen_lookup": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_xward",
   "pandapower.rundcpp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_motor": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_motor",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_oos_buses_at_trafo3w": {
  "lineno": 379,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_transformer3w",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_trafo3w_switches": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create_switch",
   "pandapower.test.consistency_checks.runpp_with_consistency_checks"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer3w_phase_shift": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_load",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer_phase_shift": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer_phase_shift_complex": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_load",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_transformer_with_two_open_switches": {
  "lineno": 485,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_two_gens_at_one_bus": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_two_oos_buses": {
  "lineno": 355,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.loadflow.test_scenarios.test_volt_dep_load_at_inactive_bus": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.isnan",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_transformer",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.networks.test_cigre_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_cigre_networks.test_cigre_hv": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_hv",
   "pandapower.runpp",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_cigre_networks.test_cigre_lv": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_lv",
   "pandapower.runpp",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_cigre_networks.test_cigre_mv": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.runpp",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_create_example": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_create_example.test_create_realistic": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.networks.example_multivoltage",
   "pandapower.runpp",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_create_example.test_create_simple": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.networks.example_simple",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_dickert_lv_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_dickert_lv_networks.test_dickert_lv_networks": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandapower.networks.create_dickert_lv_network",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_dorfnetz": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_dorfnetz",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_dorfnetz_trafo": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_dorfnetz_trafo",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_freileitung": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_landnetz_freileitung",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_freileitung_trafo": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_landnetz_freileitung_trafo",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_kabel": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_landnetz_kabel",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_landnetz_kabel_trafo": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_landnetz_kabel_trafo",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_1": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_vorstadtnetz_1",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_2": {
  "lineno": 97,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_vorstadtnetz_2",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_trafo_1": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_vorstadtnetz_trafo_1",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_extreme_networks.test_kb_extrem_vorstadtnetz_trafo_2": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandapower.networks.kb_extrem_vorstadtnetz_trafo_2",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_kerber_networks.test_add_lines_and_loads": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.networks.kerber_networks._add_lines_and_loads",
   "random.random"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_add_lines_with_branched_loads": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.networks.kerber_networks._add_lines_with_branched_loads",
   "random.random"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_empty_network_with_transformer": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandapower.networks.kerber_networks._create_empty_network_with_transformer"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_dorfnetz": {
  "lineno": 121,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_dorfnetz",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_landnetz_kabel_1": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_landnetz_kabel_1",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_landnetz_kabel_2": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_landnetz_kabel_2",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_vorstadtnetz_kabel_1": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_vorstadtnetz_kabel_1",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_create_kerber_vorstadtnetz_kabel_2": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_vorstadtnetz_kabel_2",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_kerber_landnetz_freileitung_1": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_landnetz_freileitung_1",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_kerber_networks.test_kerber_landnetz_freileitung_2": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandapower.networks.create_kerber_landnetz_freileitung_2",
   "pandapower.runpp",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_mv_oberrhein": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_mv_oberrhein.test_mv_oberrhein": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.networks.mv_oberrhein",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_power_system_test_cases._ppc_element_test": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_GBnetwork": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandapower.networks.GBnetwork",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_GBreducednetwork": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandapower.networks.GBreducednetwork",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case118": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandapower.networks.case118",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case1354pegase": {
  "lineno": 141,
  "symbols_in_volume": [
   "pandapower.networks.case1354pegase",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case14": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandapower.networks.case14",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case145": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandapower.networks.case145",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case1888rte": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandapower.networks.case1888rte",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case1888rte_changed_slack": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandapower.networks.case1888rte",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case24_ieee_rts": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandapower.networks.case24_ieee_rts",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case2848rte": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandapower.networks.case2848rte",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case2869pegase": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandapower.networks.case2869pegase",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case30": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandapower.networks.case30",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case300": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandapower.networks.case300",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case3120sp": {
  "lineno": 184,
  "symbols_in_volume": [
   "pandapower.networks.case3120sp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case33bw": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandapower.networks.case33bw",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case39": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandapower.networks.case39",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case4gs": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.networks.case4gs",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case5": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandapower.networks.case5",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case57": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandapower.networks.case57",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6470rte": {
  "lineno": 191,
  "symbols_in_volume": [
   "pandapower.networks.case6470rte",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6495rte": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandapower.networks.case6495rte",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6515rte": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandapower.networks.case6515rte",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case6ww": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandapower.networks.case6ww",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case89pegase": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandapower.networks.case89pegase",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case9": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandapower.networks.case9",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case9241pegase": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandapower.networks.case9241pegase",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case_ieee30": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandapower.networks.case_ieee30",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_case_illinois200": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandapower.networks.case_illinois200",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_power_system_test_cases.test_iceland": {
  "lineno": 233,
  "symbols_in_volume": [
   "pandapower.networks.iceland",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_four_loads_with_branches_out": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.networks.four_loads_with_branches_out",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_panda_four_load_branch": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.networks.panda_four_load_branch",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_simple_four_bus_system": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_simple_pandapower_test_networks.test_simple_mv_open_ring_net": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandapower.networks.simple_mv_open_ring_net",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_rural_1": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.networks.create_synthetic_voltage_control_lv_network",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_rural_2": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.networks.create_synthetic_voltage_control_lv_network",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_suburb_1": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandapower.networks.create_synthetic_voltage_control_lv_network",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_village_1": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandapower.networks.create_synthetic_voltage_control_lv_network",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.networks.test_synthetic_voltage_control_lv_networks.test_village_2": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandapower.networks.create_synthetic_voltage_control_lv_network",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.opf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.opf.test_TNEP": {
  "lineno": null,
  "symbols_in_volume": [
   "julia.core.UnsupportedPythonError"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_TNEP.cigre_grid": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_mv"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_TNEP.define_ext_grid_limits": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandapower.create_poly_cost"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_TNEP.define_possible_new_lines": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.ones",
   "pandapower.converter.powermodels.to_pm.init_ne_line",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_TNEP.test_pm_tnep_cigre_ac_I": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.runpm_tnep",
   "pandapower.runpp",
   "pytest.mark.skipif",
   "pytest.mark.slow",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_TNEP.test_pm_tnep_cigre_ac_S": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.runpm_tnep",
   "pandapower.runpp",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_TNEP.test_pm_tnep_cigre_dc": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.runpm_tnep",
   "pandapower.runpp",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_TNEP.test_pm_tnep_cigre_only_conversion": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.converter.convert_pp_to_pm",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_basic.four_bus_net": {
  "lineno": 801,
  "symbols_in_volume": [
   "pandapower.networks.simple_four_bus_system",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.simple_opf_test_net": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.simplest_grid": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_convert_format": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandapower.convert_format.convert_format",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_dcopf_poly": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandapower.create_poly_cost",
   "pandapower.rundcopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_dcopf_pwl": {
  "lineno": 493,
  "symbols_in_volume": [
   "pandapower.create_pwl_cost",
   "pandapower.rundcopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_gen_p_vm_fixed": {
  "lineno": 854,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_gen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_gen_p_vm_limits": {
  "lineno": 870,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_gen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_gen_violated_p_vm_limits": {
  "lineno": 888,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_gen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_in_service_controllables": {
  "lineno": 671,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_line_temperature": {
  "lineno": 778,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_no_controllables": {
  "lineno": 713,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.OPFNotConverged",
   "pandapower.create_poly_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_only_gen_slack_vm_setpoint": {
  "lineno": 823,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_gen",
   "pandapower.runopp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_gen_loading": {
  "lineno": 288,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_poly_cost",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_gen_voltage": {
  "lineno": 196,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_poly_cost",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_no_controllables_vs_pf": {
  "lineno": 731,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.runopp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_poly": {
  "lineno": 461,
  "symbols_in_volume": [
   "pandapower.create_poly_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_pwl": {
  "lineno": 476,
  "symbols_in_volume": [
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_sgen_loading": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_sgen_voltage": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_opf_varying_max_line_loading": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.create_transformer_from_parameters",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_simplest_dispatch": {
  "lineno": 161,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_simplest_voltage": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_storage_opf": {
  "lineno": 563,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.create_storage",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_three_slacks_vm_setpoint": {
  "lineno": 809,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_ext_grid",
   "pandapower.runopp",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_trafo3w_loading": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_transformer3w",
   "pandapower.runopp",
   "pandapower.test.toolbox.add_grid_connection"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_basic.test_unconstrained_line": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_check_opf_data._opf_net": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_buses",
   "pandapower.create_dcline",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data._run_check": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandapower.opf.validate_opf_input._check_necessary_opf_parameters"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_basic": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_dcline_lim_col": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_dcline_lim_val": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_lim_col": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_lim_val": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_vm_lim_col": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.opf.test_check_opf_data.test_opf_data_check_vm_lim_val": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_cost_consistency.base_net": {
  "lineno": 5,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.runpp",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency.test_contingency_gen": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_gen",
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency.test_contingency_load": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_gen",
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_cost_consistency.test_contingency_sgen": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_mixed": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_costs_mixed.test_cost_mixed": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_mixed.test_mixed_p_q_pol": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_mixed.test_mixed_p_q_pwl": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pol": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_costs_pol.test_cost_pol_all_elements": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pol.test_cost_pol_gen": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pol.test_cost_pol_q": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_eg": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_gen": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_load": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_load_uneven_slopes": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_sgen": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_sgen_uneven_slopes": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_cost_piecewise_linear_sgen_very_unsteady_slopes": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.create_sgen",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl.test_get_costs": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_costs_pwl_q": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_costs_pwl_q.test_3point_pwl": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.create_sgen",
   "pandapower.runopp",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_curtailment": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_curtailment.test_minimize_active_power_curtailment": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_transformer",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_dcline": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_dcline.dcline_net": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_dcline",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.get_delta_try_except": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandapower.OPFNotConverged",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.test_dcline_dispatch2": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.create_poly_cost",
   "pandapower.runopp",
   "pandapower.test.consistency_checks.consistency_checks",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.test_dcline_dispatch3": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_poly_cost",
   "pandapower.runopp",
   "pandapower.test.consistency_checks.consistency_checks",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_dcline.test_dispatch1": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.create_pwl_cost",
   "pandapower.runopp",
   "pandapower.test.consistency_checks.consistency_checks",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_oberrhein": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_oberrhein.test_opf_oberrhein": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandapower.networks.mv_oberrhein",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_opf_cigre": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_opf_cigre.test_opf_cigre": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_opf_cigre.test_some_sgens_not_controllable": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_poly_cost",
   "pandapower.networks.create_cigre_network_mv",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels": {
  "lineno": null,
  "symbols_in_volume": [
   "julia.core.UnsupportedPythonError"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_powermodels.assert_pf": {
  "lineno": 453,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.allclose",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "pandapower.__file__",
   "pandapower.rundcpp",
   "pandapower.runpm",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.init_ne_line": {
  "lineno": 321,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.net_3w_trafo_opf": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer3w_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_compare_pwl_and_poly": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_poly_cost",
   "pandapower.create_pwl_cost",
   "pandapower.runpm_ac_opf",
   "pandapower.runpm_dc_opf",
   "pandapower.test.consistency_checks.consistency_checks",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_multiple_ext_grids": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_sgen",
   "pandapower.runpm_ac_opf",
   "pandapower.test.toolbox.add_grid_connection",
   "pandapower.test.toolbox.create_test_line",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_ots_opt": {
  "lineno": 436,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_equal",
   "pandapower.networks.case5",
   "pandapower.runpm_ots",
   "pandapower.runpp",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_ac_powerflow_shunt": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandapower.create_shunt",
   "pandapower.networks.simple_four_bus_system",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_ac_powerflow_simple": {
  "lineno": 477,
  "symbols_in_volume": [
   "pandapower.networks.simple_four_bus_system",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_ac_powerflow_tap": {
  "lineno": 509,
  "symbols_in_volume": [
   "pandapower.networks.simple_four_bus_system",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_dc_powerflow_shunt": {
  "lineno": 500,
  "symbols_in_volume": [
   "pandapower.create_shunt",
   "pandapower.networks.simple_four_bus_system",
   "pytest.mark.skipif",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_dc_powerflow_simple": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandapower.networks.simple_four_bus_system",
   "pytest.mark.skipif",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_dc_powerflow_tap": {
  "lineno": 517,
  "symbols_in_volume": [
   "pandapower.networks.simple_four_bus_system",
   "pytest.mark.skipif",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_tnep": {
  "lineno": 399,
  "symbols_in_volume": [
   "numpy.any",
   "pandapower.runpm_tnep",
   "pandapower.runpp",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pm_to_pp_conversion": {
  "lineno": 536,
  "symbols_in_volume": [
   "copy.deepcopy",
   "json.load",
   "numpy.allclose",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "pandapower.converter.powermodels.from_pm.read_pm_results_to_net",
   "pandapower.create_poly_cost",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.runopp",
   "pandapower.test.__file__",
   "pandapower.test.opf.test_basic.simple_opf_test_net"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pp_to_pm_conversion": {
  "lineno": 528,
  "symbols_in_volume": [
   "pandapower.converter.convert_pp_to_pm"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_pwl": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_pwl_cost",
   "pandapower.runpm_ac_opf",
   "pandapower.test.consistency_checks.consistency_checks",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_storage_opt": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_storage",
   "pandapower.networks.case5",
   "pandapower.runpm_storage_opf",
   "pytest.mark.skipif",
   "pytest.mark.slow",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_timeseries_powermodels": {
  "lineno": 561,
  "symbols_in_volume": [
   "numpy.random.random",
   "pandapower.control.ConstControl",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.runpm_dc_opf",
   "pandapower.timeseries.DFData",
   "pandapower.timeseries.run_timeseries",
   "pandas.DataFrame",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_voltage_angles": {
  "lineno": 279,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.allclose",
   "numpy.isnan",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_transformer3w",
   "pandapower.runpm",
   "pandapower.runpm_ac_opf",
   "pandapower.runpp",
   "pandapower.test.__file__",
   "pandapower.test.consistency_checks.consistency_checks",
   "pandapower.test.toolbox.add_grid_connection",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.test_without_ext_grid": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.runpm_ac_opf",
   "pandapower.runpm_dc_opf",
   "pandapower.test.consistency_checks.consistency_checks",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_powermodels.tnep_grid": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_poly_cost"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_pp_vs_pm": {
  "lineno": null,
  "symbols_in_volume": [
   "julia.core.UnsupportedPythonError",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.test.opf.test_pp_vs_pm.case5_pm_matfile_I": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.converter.pypower.from_ppc"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_pp_vs_pm.test_case5_pm_pd2ppc": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandapower.create_ext_grid",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pypower.idx_bus.BUS_I",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.REF",
   "pandapower.pypower.idx_bus.VMAX",
   "pandapower.pypower.idx_bus.VMIN",
   "pandapower.runpp",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_pp_vs_pm.test_opf_ext_grid_controllable": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_ext_grid",
   "pandapower.runopp"
  ],
  "type": "function"
 },
 "pandapower.test.opf.test_pp_vs_pm.test_opf_ext_grid_controllable_pm": {
  "lineno": 148,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.isclose",
   "pandapower.runpm_ac_opf",
   "pytest.mark.skipif",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "pandapower.pp_dir",
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.test.run_tests._get_cpus": {
  "lineno": 30,
  "symbols_in_volume": [
   "multiprocessing.cpu_count"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests.get_command_line_args": {
  "lineno": 100,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests.remove_logger": {
  "lineno": 24,
  "symbols_in_volume": [
   "pplog.CRITICAL"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests.run_all_tests": {
  "lineno": 35,
  "symbols_in_volume": [
   "pplog.INFO",
   "pytest.main"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests.run_fast_tests": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests.run_slow_tests": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "function"
 },
 "pandapower.test.run_tests.start_tests": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.test.shortcircuit": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_1ph": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_1ph.add_network": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_std_type",
   "pandapower.create_transformer",
   "pandapower.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.check_results": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_1ph_shortcircuit": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_1ph_shortcircuit_min": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandapower.create_empty_network",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_1ph_with_switches": {
  "lineno": 114,
  "symbols_in_volume": [
   "pandapower.add_zero_impedance_parameters",
   "pandapower.create_empty_network",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_1ph.test_iec60909_example_4": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.isclose",
   "os.path.join",
   "pandapower.from_json",
   "pandapower.pp_dir",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_all_currents.gen_three_bus_example": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.net_transformer": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_shunt",
   "pandapower.create_switch",
   "pandapower.create_transformer_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_against_single_sc_results_line": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc",
   "pandapower.shortcircuit.calc_single_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_against_single_sc_results_trafo": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc",
   "pandapower.shortcircuit.calc_single_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_all_currents_1ph_max": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_all_currents_1ph_min": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_all_currents_sgen": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_all_currents_with_oos_elements": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_branch_all_currents_gen": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_branch_all_currents_trafo": {
  "lineno": 219,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.test_with_permuted_index": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.three_bus_example": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_all_currents.three_bus_permuted_index": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_gen.gen_three_bus_example": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.one_line_one_generator": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_switch",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_branch_max_gen": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_branch_min_gen": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_close_to_gen_simple": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_close_to_gen_simple2": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_generator_book": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.arcsin",
   "numpy.cos",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_shunt",
   "pandapower.create_transformer_from_parameters",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_max_gen": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_max_gen_fault_impedance": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_min_gen": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_power_station_unit": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_buses",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line",
   "pandapower.create_transformer_from_parameters",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_rdss_estimations": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_gen",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_gen.test_shunt": {
  "lineno": 160,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_impedance": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_impedance.impedance_net": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_impedance",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_impedance.test_impedance_max": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_impedance.test_impedance_min": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid": {
  "lineno": 15,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.create_bus",
   "pandapower.create_switch",
   "pandapower.from_json",
   "pandapower.pp_dir",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_max_10_meshed_grid": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_max_6_meshed_grid": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_min_10_meshed_grid": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_meshing_detection.test_min_6_meshed_grid": {
  "lineno": 134,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_min_branch_results": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_min_branch_results.feeder_network": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_motor.motor_net": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_motor",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor.test_large_motor": {
  "lineno": 76,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor.test_motor_max": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor.test_motor_max_branch": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor.test_motor_min": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_motor.test_motor_min_branch": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_ring.ring_network": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_switch",
   "pandapower.create_transformer",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring.test_branch_results_closed_ring": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring.test_branch_results_open_ring": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_ring.test_kappa_methods": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.radial_grid": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_transformer",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.test_big_gen_network": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_single_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.test_meshed_network": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc",
   "pandapower.shortcircuit.calc_single_sc",
   "pandapower.test.shortcircuit.test_meshing_detection.meshed_grid"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.test_radial_network": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc",
   "pandapower.shortcircuit.calc_single_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sc_single_bus.three_bus_big_sgen_example": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_sgen.big_sgen_three_bus_example": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_max_1ph_branch_big_sgen": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_max_1ph_branch_small_sgen": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_max_3ph_branch_big_sgen": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_max_3ph_branch_small_sgen": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_min_1ph_branch_big_sgen": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_min_1ph_branch_small_sgen": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_min_3ph_branch_results_big_sgen": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_min_3ph_branch_results_small_sgen": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.test_wind_park": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.isclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.three_bus_example": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_sgen.wind_park_example": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.sqrt",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line_from_parameters",
   "pandapower.create_sgen",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_trafo3w": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_trafo3w.test_trafo3w_max": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_trafo3w.test_trafo3w_min": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_trafo3w.trafo3w_net": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_load",
   "pandapower.create_transformer3w_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.shortcircuit.test_transformer.net_transformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_shunt",
   "pandapower.create_switch",
   "pandapower.create_transformer_from_parameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_max_10_trafo": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_max_6_trafo": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_min_10_trafo": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_min_10_trafo_2ph": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.shortcircuit.test_transformer.test_min_6_trafo": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandapower.shortcircuit.calc_sc"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.timeseries.test_data_source": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.timeseries.test_data_source.test_data_source": {
  "lineno": 15,
  "symbols_in_volume": [
   "copy.deepcopy",
   "os.path.join",
   "pandapower.pp_dir",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.ERROR",
   "logging.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.timeseries.test_output_writer.cost_logging": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_default_output_writer": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.run_time_series.run_timeseries"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_equal_eval_name_warning_and_costs": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.float64",
   "numpy.max",
   "pandapower.control.ConstControl",
   "pandapower.create_pwl_cost",
   "pandapower.networks.case5",
   "pandapower.timeseries.DFData",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_timeseries",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_eval_simple": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_log": {
  "lineno": 32,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.DFData",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "pandas.DataFrame",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_multiple_index_definition": {
  "lineno": 181,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.allclose",
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_short_data_source": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "pytest.raises",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_with_timesteps_set": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_without_timesteps_set": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_output_writer_without_timesteps_set_repeat": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_ow_index": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.all",
   "pandapower.control.ConstControl",
   "pandapower.networks.simple_four_bus_system",
   "pandapower.timeseries.DFData",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_ppc_log": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.runpp",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_remove_variable": {
  "lineno": 212,
  "symbols_in_volume": [
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_output_writer.test_store_and_load": {
  "lineno": 227,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "os.remove",
   "pandapower.control.ConstControl",
   "pandapower.from_json",
   "pandapower.test.timeseries.test_timeseries.create_data_source",
   "pandapower.test.timeseries.test_timeseries.simple_test_net",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "pandapower.to_json",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.timeseries.test_timeseries.create_data_source": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.random.randint",
   "numpy.random.random",
   "pandapower.timeseries.DFData",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.create_rand_data_source": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.random",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.setup_output_writer": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandapower.timeseries.OutputWriter",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.simple_test_net": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_line",
   "pandapower.create_load",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w_from_parameters",
   "pandapower.set_user_pf_options",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_const_control": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.alltrue",
   "pandapower.control.ConstControl",
   "pandapower.timeseries.run_time_series.run_timeseries"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_false_alarm_trafos": {
  "lineno": 114,
  "symbols_in_volume": [
   "io.StringIO",
   "logging.StreamHandler",
   "pandapower.control.ContinuousTapControl",
   "pandapower.control.util.diagnostic.logger.addHandler",
   "pandapower.control.util.diagnostic.logger.removeHandler",
   "pandapower.timeseries.run_time_series.control_diagnostic"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_output_dump_after_time": {
  "lineno": 234,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_time_steps": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandapower.control.ConstControl",
   "pandapower.timeseries.run_time_series.run_timeseries"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_timeseries_results": {
  "lineno": 139,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.control.ConstControl",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries.test_timeseries_var_func": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min",
   "numpy.sum",
   "pandapower.control.ConstControl",
   "pandapower.timeseries.OutputWriter",
   "pandapower.timeseries.run_time_series.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "module"
 },
 "pandapower.test.timeseries.test_timeseries_recycle._run_normal": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandapower.test.timeseries.test_output_writer.OutputWriter",
   "pandapower.test.timeseries.test_output_writer.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle._run_recycle": {
  "lineno": 100,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.test.timeseries.test_output_writer.OutputWriter",
   "pandapower.test.timeseries.test_output_writer.run_timeseries",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.add_const": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandapower.test.timeseries.test_output_writer.ConstControl"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_batch_output_reader": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.runpp",
   "pandapower.test.timeseries.test_output_writer.OutputWriter",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.run_timeseries",
   "pandapower.test.timeseries.test_output_writer.simple_test_net",
   "pandapower.timeseries.read_batch_results.get_batch_line_results",
   "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results",
   "pandapower.timeseries.read_batch_results.get_batch_trafo_results",
   "pandapower.timeseries.read_batch_results.polar_to_rad",
   "pandapower.timeseries.read_batch_results.v_to_i_s",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_ext_grid": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.ones",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.simple_test_net",
   "pandapower.timeseries.data_sources.frame_data.DFData"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_gen": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.random.random",
   "pandapower.create_gen",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.simple_test_net",
   "pandapower.timeseries.data_sources.frame_data.DFData"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_pq": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.simple_test_net"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_pq_gen_trafo_tap": {
  "lineno": 204,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.ones",
   "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.simple_test_net",
   "pandapower.timeseries.data_sources.frame_data.DFData"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_const_pq_out_of_service": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.create_bus",
   "pandapower.create_line",
   "pandapower.create_transformer",
   "pandapower.create_transformer3w",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.simple_test_net"
  ],
  "type": "function"
 },
 "pandapower.test.timeseries.test_timeseries_recycle.test_trafo_tap": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.allclose",
   "pandapower.control.controller.trafo.ContinuousTapControl.ContinuousTapControl",
   "pandapower.test.timeseries.test_output_writer.create_data_source",
   "pandapower.test.timeseries.test_output_writer.simple_test_net"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.test.toolbox.add_grid_connection": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandapower.create_bus",
   "pandapower.create_ext_grid",
   "pandapower.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.assert_mpc_equal": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.assert_net_equal": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.fail"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.assert_res_equal": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.fail"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.assert_res_out_of_service": {
  "lineno": 71,
  "symbols_in_volume": [
   "math.isnan",
   "pytest.fail"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.create_test_line": {
  "lineno": 192,
  "symbols_in_volume": [
   "pandapower.create_line_from_parameters",
   "pandapower.get_free_id"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.create_test_network": {
  "lineno": 136,
  "symbols_in_volume": [
   "numpy.array",
   "pandapower.create_bus",
   "pandapower.create_empty_network",
   "pandapower.create_ext_grid",
   "pandapower.create_gen",
   "pandapower.create_line_from_parameters",
   "pandapower.create_load",
   "pandapower.create_sgen",
   "pandapower.create_transformer_from_parameters"
  ],
  "type": "function"
 },
 "pandapower.test.toolbox.create_test_network2": {
  "lineno": 172,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.from_pickle",
   "pandapower.pp_dir"
  ],
  "type": "function"
 },
 "pandapower.timeseries": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.timeseries.data_source": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.timeseries.data_source.DataSource": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandapower.io_utils.JSONSerializableClass"
  ],
  "type": "class"
 },
 "pandapower.timeseries.data_source.DataSource.__repr__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.data_source.DataSource.__str__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.data_source.DataSource.get_time_step_value": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.data_sources": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.timeseries.data_sources.frame_data": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandapower.timeseries.data_source.DataSource"
  ],
  "type": "class"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.__repr__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.get_time_step_value": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.data_sources.frame_data.DFData.get_time_steps_len": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.timeseries.output_writer.OutputWriter": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandapower.io_utils.JSONSerializableClass"
  ],
  "type": "class"
 },
 "pandapower.timeseries.output_writer.OutputWriter.__init__": {
  "lineno": 89,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.__repr__": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.__str__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._add_log_defaults": {
  "lineno": 136,
  "symbols_in_volume": [
   "copy.copy"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._append_existing_log_variable_partial_func": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._append_output_list": {
  "lineno": 453,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._get_np_name": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._get_output_name": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._get_same_log_variable_partial_func_idx": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_log_variable": {
  "lineno": 401,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.ndarray",
   "pandas.Index",
   "pandas.Series",
   "pandas.isnull",
   "types.FunctionType"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_np_array": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.zeros",
   "types.FunctionType"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_np_results": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_output": {
  "lineno": 171,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._init_ppc_logging": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pypower.idx_bus.BUS_TYPE",
   "pandapower.pypower.idx_bus.NONE",
   "pandapower.run._init_runpp_options"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._log": {
  "lineno": 462,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._log_ppc": {
  "lineno": 483,
  "symbols_in_volume": [
   "pandapower.pypower.idx_bus.VA",
   "pandapower.pypower.idx_bus.VM"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._monkey_patch": {
  "lineno": 132,
  "symbols_in_volume": [
   "types.MethodType"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._np_to_pd": {
  "lineno": 501,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "types.FunctionType"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._save_separate": {
  "lineno": 185,
  "symbols_in_volume": [
   "os.path.join",
   "pandapower.io_utils.mkdirs_if_not_existent"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter._save_single_xls_sheet": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.dump": {
  "lineno": 248,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.dump_to_file": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.get_batch_outputs": {
  "lineno": 562,
  "symbols_in_volume": [
   "pandapower.timeseries.read_batch_results.get_batch_bus_results",
   "pandapower.timeseries.read_batch_results.get_batch_line_results",
   "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results",
   "pandapower.timeseries.read_batch_results.get_batch_trafo_results",
   "pandapower.timeseries.read_batch_results.v_to_i_s",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.init_all": {
  "lineno": 158,
  "symbols_in_volume": [
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.init_log_variables": {
  "lineno": 143,
  "symbols_in_volume": [
   "functools.partial"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.init_timesteps": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.log_variable": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.remove_log_variable": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.save_nans_to_parameters": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.save_results": {
  "lineno": 253,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pandapower.timeseries.output_writer.OutputWriter.save_to_parameters": {
  "lineno": 276,
  "symbols_in_volume": [
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.timeseries.read_batch_results._get_empty_branch": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_bus_results": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.nan",
   "pandapower.results_bus._get_bus_idx"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_line_results": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_trafo3w_results": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.sqrt",
   "pandapower.results_branch._get_trafo3w_lookups"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.get_batch_trafo_results": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.maximum",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.polar_to_rad": {
  "lineno": 141,
  "symbols_in_volume": [
   "cmath.rect",
   "numpy.deg2rad",
   "numpy.vectorize"
  ],
  "type": "function"
 },
 "pandapower.timeseries.read_batch_results.v_to_i_s": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.real",
   "pandapower.F_BUS",
   "pandapower.T_BUS",
   "pandapower.pf.pfsoln_numba.calc_branch_flows_batch",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.WARNING",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pandapower.timeseries.run_time_series._call_output_writer": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series._check_controller_recyclability": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series._check_output_writer_recyclability": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.cleanup": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.control_time_step": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.controller_not_converged": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandapower.control.run_control.ControllerNotConverged"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.get_recycle_settings": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_default_outputwriter": {
  "lineno": 24,
  "symbols_in_volume": [
   "pandapower.timeseries.output_writer.OutputWriter",
   "tempfile.gettempdir"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_output_writer": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_time_series": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandapower.LoadflowNotConverged",
   "pandapower.OPFNotConverged",
   "pandapower.control.run_control.NetCalculationNotConverged",
   "pandapower.control.run_control.prepare_run_ctrl",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.init_time_steps": {
  "lineno": 210,
  "symbols_in_volume": [
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.output_writer_routine": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.pf_not_converged": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.print_progress": {
  "lineno": 290,
  "symbols_in_volume": [
   "logging.DEBUG"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.print_progress_bar": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.run_loop": {
  "lineno": 306,
  "symbols_in_volume": [
   "pandapower.control.run_control.run_control"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.run_time_step": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandapower.control.run_control.ControllerNotConverged",
   "pandapower.control.run_control.run_control"
  ],
  "type": "function"
 },
 "pandapower.timeseries.run_time_series.run_timeseries": {
  "lineno": 321,
  "symbols_in_volume": [
   "pandapower.control.util.diagnostic.control_diagnostic"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp._get_bus_p_q_results_from_ppc": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.zeros",
   "pandapower.pypower.idx_bus.PD",
   "pandapower.pypower.idx_bus.QD",
   "pandapower.results._get_aranged_lookup",
   "pandapower.results_bus._get_bus_results",
   "pandapower.results_gen._get_gen_results"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp._update_nr_variables": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandapower.build_bus._calc_pq_elements_and_add_on_ppc"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.cleanup": {
  "lineno": 196,
  "symbols_in_volume": [
   "pandapower.auxiliary._clean_up"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.get_branch_results": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandapower.results_branch._get_branch_flows",
   "pandapower.results_branch._get_line_results",
   "pandapower.results_branch._get_trafo3w_results",
   "pandapower.results_branch._get_trafo_results"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.get_update_ctrl": {
  "lineno": 240,
  "symbols_in_volume": [
   "inspect.getmro",
   "pandapower.control.controller.const_control.ConstControl",
   "pandapower.control.controller.trafo_control.TrafoController"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.init_newton_variables": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.init_timeseries_newton": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.zeros",
   "pandapower.pd2ppc._pd2ppc",
   "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
   "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci",
   "pandapower.pf.run_newton_raphson_pf.makeYbus_numba",
   "pandapower.powerflow._add_auxiliary_elements",
   "pandapower.runpp"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.ts_newtonpf": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandapower.auxiliary._clean_up",
   "pandapower.pf.pfsoln_numba.pf_solution_single_slack",
   "pandapower.pf.pfsoln_numba.pfsoln",
   "pandapower.pf.run_newton_raphson_pf.newtonpf",
   "pandapower.powerflow.LoadflowNotConverged",
   "pandapower.pypower.makeSbus.makeSbus",
   "pandapower.results._copy_results_ppci_to_ppc",
   "pandapower.results._extract_results"
  ],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.ts_runpp": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.timeseries.ts_runpp.TimeSeriesRunpp.update_trafos": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandapower.build_branch._calc_trafo3w_parameter",
   "pandapower.build_branch._calc_trafo_parameter",
   "pandapower.pf.run_newton_raphson_pf._get_Y_bus",
   "pandapower.pf.run_newton_raphson_pf._get_pf_variables_from_ppci",
   "pandapower.pf.run_newton_raphson_pf.makeYbus_numba"
  ],
  "type": "function"
 },
 "pandapower.toolbox": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.toolbox._check_overlapping_constraints": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox._cluster_same_floats": {
  "lineno": 505,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.isclose",
   "numpy.number",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox._cosphi_from_pq": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.arctan",
   "numpy.cos",
   "numpy.nan",
   "numpy.sign"
  ],
  "type": "function"
 },
 "pandapower.toolbox._determine_costs_dict": {
  "lineno": 459,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pandapower.toolbox._determine_flexibilities_dict": {
  "lineno": 328,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.toolbox._determine_network_constraints_dict": {
  "lineno": 427,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "pandapower.toolbox._find_idx_without_numerical_difference": {
  "lineno": 390,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox._get_keys_and_elements_from_opf_task_dict": {
  "lineno": 614,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.toolbox._inner_branches": {
  "lineno": 1241,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.toolbox._log_opf_task_overview": {
  "lineno": 567,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "pandapower.toolbox._pq_from_cosphi": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandapower.toolbox._select_cost_df": {
  "lineno": 1411,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.toolbox.add_column_from_element_to_elements": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.add_column_from_node_to_elements": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.add_zones_to_elements": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.branch_element_bus_dict": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.clear_result_tables": {
  "lineno": 712,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox.close_switch_at_line_with_two_open_switches": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.compare_arrays": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.equal"
  ],
  "type": "function"
 },
 "pandapower.toolbox.cosphi_from_pq": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.toolbox.create_continuous_bus_index": {
  "lineno": 882,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "pandapower.toolbox.create_continuous_elements_index": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox.create_replacement_switch_for_branch": {
  "lineno": 1574,
  "symbols_in_volume": [
   "pandapower.create.create_switch"
  ],
  "type": "function"
 },
 "pandapower.toolbox.dataframes_equal": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.number"
  ],
  "type": "function"
 },
 "pandapower.toolbox.drop_buses": {
  "lineno": 1119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_duplicated_measurements": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_elements_at_buses": {
  "lineno": 1140,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox.drop_elements_simple": {
  "lineno": 1340,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox.drop_inactive_elements": {
  "lineno": 1402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_inner_branches": {
  "lineno": 1282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_lines": {
  "lineno": 1193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_measurements_at_elements": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_out_of_service_elements": {
  "lineno": 1358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_switches_at_buses": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.drop_trafos": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.element_bus_tuples": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.ensure_iterability": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.fuse_buses": {
  "lineno": 1086,
  "symbols_in_volume": [
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "pandapower.toolbox.get_connected_buses": {
  "lineno": 2381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.get_connected_buses_at_element": {
  "lineno": 2483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.get_connected_elements": {
  "lineno": 2304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.get_connected_elements_dict": {
  "lineno": 2583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.get_connected_switches": {
  "lineno": 2534,
  "symbols_in_volume": [
   "numpy.full"
  ],
  "type": "function"
 },
 "pandapower.toolbox.get_element_index": {
  "lineno": 2211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.get_element_indices": {
  "lineno": 2241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.get_gc_objects_dict": {
  "lineno": 2608,
  "symbols_in_volume": [
   "gc.get_objects"
  ],
  "type": "function"
 },
 "pandapower.toolbox.get_inner_branches": {
  "lineno": 1274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.lf_info": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.merge_nets": {
  "lineno": 1508,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.array",
   "pandapower.auxiliary._preserve_dtypes",
   "pandapower.run.runpp",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.merge_nets.adapt_element_idx_references": {
  "lineno": 1523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.nets_equal": {
  "lineno": 667,
  "symbols_in_volume": [
   "pandapower.auxiliary.pandapowerNet",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox.next_bus": {
  "lineno": 2284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.opf_task": {
  "lineno": 306,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.opf.validate_opf_input._check_necessary_opf_parameters"
  ],
  "type": "function"
 },
 "pandapower.toolbox.overloaded_lines": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.pp_elements": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.pq_from_cosphi": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pandapower.toolbox.reindex_buses": {
  "lineno": 846,
  "symbols_in_volume": [
   "pandapower.auxiliary.get_indices",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "pandapower.toolbox.reindex_elements": {
  "lineno": 907,
  "symbols_in_volume": [
   "pandapower.auxiliary.get_indices"
  ],
  "type": "function"
 },
 "pandapower.toolbox.repl_to_line": {
  "lineno": 2624,
  "symbols_in_volume": [
   "pandapower.create.create_line_from_parameters",
   "pandapower.std_types.change_std_type"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_ext_grid_by_gen": {
  "lineno": 1755,
  "symbols_in_volume": [
   "numpy.nan",
   "packaging.version.parse",
   "pandapower.create.create_gen",
   "pandas.__version__",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_gen_by_ext_grid": {
  "lineno": 1844,
  "symbols_in_volume": [
   "numpy.nan",
   "packaging.version.parse",
   "pandapower.create.create_ext_grid",
   "pandas.__version__",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_gen_by_sgen": {
  "lineno": 1926,
  "symbols_in_volume": [
   "numpy.nan",
   "packaging.version.parse",
   "pandapower.create.create_sgen",
   "pandas.__version__",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_impedance_by_line": {
  "lineno": 1675,
  "symbols_in_volume": [
   "numpy.isclose",
   "numpy.nan",
   "numpy.sqrt",
   "pandapower.create.create_line_from_parameters"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_line_by_impedance": {
  "lineno": 1713,
  "symbols_in_volume": [
   "pandapower.create.create_impedance"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_sgen_by_gen": {
  "lineno": 2010,
  "symbols_in_volume": [
   "numpy.nan",
   "packaging.version.parse",
   "pandapower.create.create_gen",
   "pandas.__version__",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_ward_by_internal_elements": {
  "lineno": 2110,
  "symbols_in_volume": [
   "numpy.multiply",
   "pandapower.create.create_load",
   "pandapower.create.create_shunt",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_xward_by_internal_elements": {
  "lineno": 2165,
  "symbols_in_volume": [
   "pandapower.create.create_bus",
   "pandapower.create.create_gen",
   "pandapower.create.create_impedance",
   "pandapower.create.create_load",
   "pandapower.create.create_shunt"
  ],
  "type": "function"
 },
 "pandapower.toolbox.replace_zero_branches_with_switches": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.select_subnet": {
  "lineno": 1420,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pandapower.auxiliary.pandapowerNet",
   "pandapower.create.create_empty_network",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandapower.toolbox.set_data_type_of_columns_to_default": {
  "lineno": 1034,
  "symbols_in_volume": [
   "packaging.version.parse",
   "pandapower.create.create_empty_network",
   "pandas.DataFrame",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pandapower.toolbox.set_element_status": {
  "lineno": 1290,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandapower.toolbox.set_isolated_areas_out_of_service": {
  "lineno": 1306,
  "symbols_in_volume": [
   "pandapower.topology.unsupplied_buses"
  ],
  "type": "function"
 },
 "pandapower.toolbox.set_scaling_by_type": {
  "lineno": 1006,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pandapower.toolbox.set_scaling_by_type.scaleit": {
  "lineno": 1022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.switch_info": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.toolbox.violated_buses": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.topology.create_graph": {
  "lineno": null,
  "symbols_in_volume": [
   "pplog.getLogger"
  ],
  "type": "module"
 },
 "pandapower.topology.create_graph.add_edges": {
  "lineno": 304,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "pandapower.topology.create_graph.create_nxgraph": {
  "lineno": 42,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.Graph",
   "networkx.MultiGraph",
   "numpy.in1d",
   "numpy.inf",
   "numpy.split",
   "pandapower.build_branch._calc_branch_values_from_trafo_df",
   "pandapower.build_branch._calc_impedance_parameters_from_dataframe",
   "pandapower.build_branch._trafo_df_from_trafo3w",
   "pandapower.topology.graph_tool_interface.GraphToolInterface"
  ],
  "type": "function"
 },
 "pandapower.topology.create_graph.get_baseR": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.square",
   "pandapower.pypower.idx_bus.BASE_KV"
  ],
  "type": "function"
 },
 "pandapower.topology.create_graph.get_edge_table": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.create_graph.get_nx_ppc": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandapower.auxiliary._init_nx_options",
   "pandapower.build_bus._build_bus_ppc",
   "pandapower.pd2ppc._init_ppc"
  ],
  "type": "function"
 },
 "pandapower.topology.create_graph.init_par": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_searches": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.topology.graph_searches.calc_distance_to_bus": {
  "lineno": 89,
  "symbols_in_volume": [
   "networkx.single_source_dijkstra_path_length",
   "pandapower.topology.create_graph.create_nxgraph",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_searches.connected_component": {
  "lineno": 15,
  "symbols_in_volume": [
   "collections.deque"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_searches.connected_components": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_searches.determine_stubs": {
  "lineno": 353,
  "symbols_in_volume": [
   "pandapower.topology.create_graph.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_searches.elements_on_path": {
  "lineno": 416,
  "symbols_in_volume": [
   "networkx.MultiGraph"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_searches.find_basic_graph_characteristics": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_searches.find_graph_characteristics": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_searches.get_2connected_buses": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_searches.get_end_points_of_continuously_connected_lines": {
  "lineno": 450,
  "symbols_in_volume": [
   "itertools.combinations",
   "networkx.MultiGraph",
   "networkx.NetworkXNoPath",
   "networkx.shortest_path"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_searches.lines_on_path": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_searches.unsupplied_buses": {
  "lineno": 126,
  "symbols_in_volume": [
   "networkx.connected_components",
   "pandapower.topology.create_graph.create_nxgraph"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface": {
  "lineno": 5,
  "symbols_in_volume": [
   "graph_tool.Graph"
  ],
  "type": "class"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "copy.copy",
   "graph_tool.Graph.__init__"
  ],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_edge": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_edge_data": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_node": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.add_nodes_from": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.get_edge_data": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.is_multigraph": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.nodes": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.remove_node": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandapower.topology.graph_tool_interface.GraphToolInterface.remove_nodes": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 }
}