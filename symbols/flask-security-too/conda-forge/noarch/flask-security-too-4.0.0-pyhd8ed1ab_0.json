{
 "flask_security": {
  "data": {},
  "type": "module"
 },
 "flask_security.__version__": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "flask_security.babel": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "flask_babel.Domain",
    "flask_babelex.Domain",
    "flask_security.babel._domain_cls",
    "wtforms.i18n.messages_path"
   ]
  },
  "type": "module"
 },
 "flask_security.babel.Domain": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "flask_security.babel.Domain.Translations": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "flask_security.babel.Domain.Translations.gettext": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "flask_security.babel.Domain.Translations.ngettext": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "flask_security.babel.Domain.gettext": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.Domain.lazy_gettext": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_babelex.Domain.gettext",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.Domain.ngettext": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.LazyProxy": {
  "data": {
   "shadows": "babel.support.LazyProxy"
  },
  "type": "import"
 },
 "flask_security.babel.Translations": {
  "data": {
   "lineno": 93
  },
  "type": "class"
 },
 "flask_security.babel.Translations.gettext": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "flask_security.babel.wtforms_domain"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.Translations.ngettext": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "flask_security.babel.wtforms_domain"
   ]
  },
  "type": "function"
 },
 "flask_security.babel._dir_keyword": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "flask_security.babel._domain_cls": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "flask_security.babel.cv": {
  "data": {
   "shadows": "config_value"
  },
  "type": "import"
 },
 "flask_security.babel.get_i18n_domain": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "flask_security.babel._dir_keyword",
    "flask_security.babel._domain_cls"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.have_babel": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "flask_security.babel.is_lazy_string": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "babel.support.LazyProxy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.make_lazy_string": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "babel.support.LazyProxy"
   ]
  },
  "type": "function"
 },
 "flask_security.babel.messages_path": {
  "data": {
   "shadows": "wtforms.i18n.messages_path"
  },
  "type": "import"
 },
 "flask_security.babel.wtforms_domain": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "flask_security.changeable": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.changeable._security",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.changeable.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.changeable.REMEMBER_COOKIE_NAME": {
  "data": {
   "shadows": "flask_login.COOKIE_NAME"
  },
  "type": "import"
 },
 "flask_security.changeable._datastore": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "flask_security.changeable._security": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "flask_security.changeable.change_user_password": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask.current_app.config.get",
    "flask.request.cookies",
    "flask.session.get",
    "flask_login.COOKIE_NAME",
    "flask_security.changeable._datastore",
    "flask_security.changeable.send_password_changed_notice",
    "hash_password",
    "login_user"
   ]
  },
  "type": "function"
 },
 "flask_security.changeable.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.changeable.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_security.changeable.send_password_changed_notice": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "config_value",
    "send_mail"
   ]
  },
  "type": "function"
 },
 "flask_security.changeable.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "flask_security.cli": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask.current_app.extensions.datastore",
    "get_quart_status",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.cli.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.cli.MultiDict": {
  "data": {
   "shadows": "werkzeug.datastructures.MultiDict"
  },
  "type": "import"
 },
 "flask_security.cli._datastore": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "flask_security.cli._security": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "flask_security.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "flask_security.cli.commit": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "flask_security.cli.commit.wrapper": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "flask_security.cli._datastore",
    "fn",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.cli.flask.cli": {
  "data": {
   "shadows": "flask.cli"
  },
  "type": "import"
 },
 "flask_security.cli.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "flask_security.cli.quart.cli": {
  "data": {
   "shadows": "quart.cli"
  },
  "type": "import"
 },
 "flask_security.cli.roles": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "flask_security.cli.click"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.roles_add": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "find_user",
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.roles",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.roles_add_permissions": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.roles",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.roles_create": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.roles",
    "flask_security.cli.with_appcontext",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.roles_remove": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "find_user",
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.roles",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.roles_remove_permissions": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.roles",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.users": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask_security.cli.click"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.users_activate": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "find_user",
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.users",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.users_create": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "flask_security.cli._datastore",
    "flask_security.cli._security",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.users",
    "flask_security.cli.with_appcontext",
    "get_identity_attribute",
    "get_identity_attributes",
    "hash_password",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.users_deactivate": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "find_user",
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.users",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.users_reset_access": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "find_user",
    "flask_security.cli._datastore",
    "flask_security.cli.click",
    "flask_security.cli.commit",
    "flask_security.cli.users",
    "flask_security.cli.with_appcontext"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.with_appcontext": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "flask_security.cli.with_appcontext.decorator": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_security.cli.click"
   ]
  },
  "type": "function"
 },
 "flask_security.cli.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "flask_security.confirmable": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.confirmable._security",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.confirmable.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.confirmable._datastore": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "flask_security.confirmable._security": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "flask_security.confirmable.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.confirmable.confirm_email_token_status": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "get_token_status",
    "verify_hash"
   ]
  },
  "type": "function"
 },
 "flask_security.confirmable.confirm_user": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask_security.confirmable._datastore",
    "flask_security.confirmable._security"
   ]
  },
  "type": "function"
 },
 "flask_security.confirmable.generate_confirmation_link": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_security.confirmable.generate_confirmation_token",
    "url_for_security"
   ]
  },
  "type": "function"
 },
 "flask_security.confirmable.generate_confirmation_token": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask_security.confirmable._security",
    "hash_data",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.confirmable.requires_confirmation": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "flask_security.confirmable._security"
   ]
  },
  "type": "function"
 },
 "flask_security.confirmable.send_confirmation_instructions": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "config_value",
    "flask.current_app._get_current_object",
    "flask_security.confirmable.generate_confirmation_link",
    "send_mail"
   ]
  },
  "type": "function"
 },
 "flask_security.core": {
  "data": {
   "symbols_in_volume": [
    "_",
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "flask.current_app.config.get",
    "flask.current_app.extensions",
    "flask_security.core.AUTHN_MECHANISMS",
    "flask_security.core._security",
    "flask_security.core.pkg_resources",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.core.AUTHN_MECHANISMS": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "flask_security.core.AnonymousUser": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "flask_login.AnonymousUserMixin"
   ]
  },
  "type": "class"
 },
 "flask_security.core.AnonymousUser.__init__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "werkzeug.datastructures.ImmutableList"
   ]
  },
  "type": "function"
 },
 "flask_security.core.AnonymousUser.has_role": {
  "data": {
   "lineno": 860
  },
  "type": "function"
 },
 "flask_security.core.AnonymousUserMixin": {
  "data": {
   "shadows": "flask_login.AnonymousUserMixin"
  },
  "type": "import"
 },
 "flask_security.core.BaseUserMixin": {
  "data": {
   "shadows": "flask_login.UserMixin"
  },
  "type": "import"
 },
 "flask_security.core.CryptContext": {
  "data": {
   "shadows": "passlib.context.CryptContext"
  },
  "type": "import"
 },
 "flask_security.core.Identity": {
  "data": {
   "shadows": "flask_principal.Identity"
  },
  "type": "import"
 },
 "flask_security.core.ImmutableList": {
  "data": {
   "shadows": "werkzeug.datastructures.ImmutableList"
  },
  "type": "import"
 },
 "flask_security.core.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.core.LoginManager": {
  "data": {
   "shadows": "flask_login.LoginManager"
  },
  "type": "import"
 },
 "flask_security.core.Principal": {
  "data": {
   "shadows": "flask_principal.Principal"
  },
  "type": "import"
 },
 "flask_security.core.RoleMixin": {
  "data": {
   "lineno": 599
  },
  "type": "class"
 },
 "flask_security.core.RoleMixin.__eq__": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_security.core.RoleMixin.__hash__": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "flask_security.core.RoleMixin.__ne__": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "flask_security.core.RoleMixin.add_permissions": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_security.core.RoleMixin.get_permissions": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_security.core.RoleMixin.remove_permissions": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_security.core.RoleNeed": {
  "data": {
   "shadows": "flask_principal.RoleNeed"
  },
  "type": "import"
 },
 "flask_security.core.Security": {
  "data": {
   "lineno": 953
  },
  "type": "class"
 },
 "flask_security.core.Security.__getattr__": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.__init__": {
  "data": {
   "lineno": 1015
  },
  "type": "function"
 },
 "flask_security.core.Security._check_modules": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "ValueError",
    "importlib.util.find_spec"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.init_app": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "ValueError",
    "__name__",
    "create_blueprint",
    "dict",
    "flask_principal.identity_loaded.connect_via",
    "flask_security.core._context_processor",
    "flask_security.core._default_config",
    "flask_security.core._default_messages",
    "flask_security.core._get_state",
    "flask_security.core._on_identity_loaded",
    "flask_security.core.warnings",
    "get_identity_attribute",
    "hasattr",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.init_app._csrf_init": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "ValueError",
    "flask.current_app.after_request",
    "flask.current_app.config.append",
    "flask.current_app.config.get",
    "flask.current_app.extensions.get",
    "flask_security.core.AUTHN_MECHANISMS"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.init_app._register_i18n": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "flask.current_app.jinja_env.globals"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.init_app.check_babel": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "ValueError",
    "have_babel"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.reauthn_handler": {
  "data": {
   "lineno": 1348
  },
  "type": "function"
 },
 "flask_security.core.Security.render_json": {
  "data": {
   "lineno": 1255
  },
  "type": "function"
 },
 "flask_security.core.Security.render_template": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "flask.render_template"
   ]
  },
  "type": "function"
 },
 "flask_security.core.Security.unauthn_handler": {
  "data": {
   "lineno": 1326
  },
  "type": "function"
 },
 "flask_security.core.Security.unauthz_handler": {
  "data": {
   "lineno": 1303
  },
  "type": "function"
 },
 "flask_security.core.Security.want_json": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core.URLSafeTimedSerializer": {
  "data": {
   "shadows": "itsdangerous.URLSafeTimedSerializer"
  },
  "type": "import"
 },
 "flask_security.core.UserMixin": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "flask_login.UserMixin"
   ]
  },
  "type": "class"
 },
 "flask_security.core.UserMixin.calc_username": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "get_identity_attributes",
    "getattr",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.get_auth_token": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "ValueError",
    "flask_security.core._security",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.get_id": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.get_redirect_qparams": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.get_security_payload": {
  "data": {
   "lineno": 759
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.has_permission": {
  "data": {
   "lineno": 745
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.has_role": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.is_active": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.tf_send_security_token": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "Exception",
    "get_message",
    "tf_send_security_token"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.us_send_security_token": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "Exception",
    "get_message",
    "us_send_security_token"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.verify_and_update_password": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "verify_and_update_password"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserMixin.verify_auth_token": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.core.UserNeed": {
  "data": {
   "shadows": "flask_principal.UserNeed"
  },
  "type": "import"
 },
 "flask_security.core._SecurityState": {
  "data": {
   "lineno": 865
  },
  "type": "class"
 },
 "flask_security.core._SecurityState.__init__": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState._add_ctx_processor": {
  "data": {
   "lineno": 870
  },
  "type": "function"
 },
 "flask_security.core._SecurityState._run_ctx_processor": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.change_password_context_processor": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.context_processor": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.forgot_password_context_processor": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.login_context_processor": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.mail_context_processor": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.reauthn_handler": {
  "data": {
   "lineno": 949
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.register_context_processor": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.render_json": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.reset_password_context_processor": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.send_confirmation_context_processor": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.send_login_context_processor": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.tf_setup_context_processor": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.tf_token_validation_context_processor": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.totp_factory": {
  "data": {
   "lineno": 934
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.unauthn_handler": {
  "data": {
   "lineno": 946
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.unauthorized_handler": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "DeprecationWarning",
    "flask_security.core.warnings",
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.unauthz_handler": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.us_setup_context_processor": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.us_signin_context_processor": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.us_verify_context_processor": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.verify_context_processor": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._SecurityState.want_json": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "flask_security.core._context_processor": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "dict",
    "flask_security.core._security"
   ]
  },
  "type": "function"
 },
 "flask_security.core._datastore": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "flask_security.core._default_config": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "flask_security.core._default_forms": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "flask_security.core._default_messages": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "flask_security.core._get_hashing_context": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "passlib.context.CryptContext"
   ]
  },
  "type": "function"
 },
 "flask_security.core._get_login_manager": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "flask_login.LoginManager",
    "flask_security.core._request_loader",
    "flask_security.core._user_loader"
   ]
  },
  "type": "function"
 },
 "flask_security.core._get_principal": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "flask_principal.Principal",
    "flask_security.core._identity_loader"
   ]
  },
  "type": "function"
 },
 "flask_security.core._get_pwd_context": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "ValueError",
    "passlib.context.CryptContext"
   ]
  },
  "type": "function"
 },
 "flask_security.core._get_serializer": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "itsdangerous.URLSafeTimedSerializer"
   ]
  },
  "type": "function"
 },
 "flask_security.core._get_state": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "dict",
    "flask_security.core._SecurityState",
    "flask_security.core._default_forms",
    "flask_security.core._get_hashing_context",
    "flask_security.core._get_login_manager",
    "flask_security.core._get_principal",
    "flask_security.core._get_pwd_context",
    "flask_security.core._get_serializer",
    "get_config",
    "get_i18n_domain"
   ]
  },
  "type": "function"
 },
 "flask_security.core._identity_loader": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "flask_login.AnonymousUserMixin",
    "flask_login.current_user._get_current_object",
    "flask_login.current_user.fs_uniquifier",
    "flask_principal.Identity",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "flask_security.core._on_identity_loaded": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "FsPermNeed",
    "flask_login.current_user",
    "flask_login.current_user.fs_uniquifier",
    "flask_principal.RoleNeed",
    "flask_principal.UserNeed",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.core._request_ctx_stack": {
  "data": {
   "shadows": "flask._request_ctx_stack"
  },
  "type": "import"
 },
 "flask_security.core._request_loader": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "Exception",
    "all",
    "dict",
    "flask._request_ctx_stack.top",
    "flask._request_ctx_stack.top.fs_authn_via",
    "flask._request_ctx_stack.top.user",
    "flask_security.core._security",
    "hasattr",
    "isinstance",
    "set_request_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.core._security": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "flask_security.core._user_loader": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "flask_security.core._security",
    "set_request_attr",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.core.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.core.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_security.core.cv": {
  "data": {
   "shadows": "config_value"
  },
  "type": "import"
 },
 "flask_security.core.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "flask_security.core.find_spec": {
  "data": {
   "shadows": "importlib.util.find_spec"
  },
  "type": "import"
 },
 "flask_security.core.identity_loaded": {
  "data": {
   "shadows": "flask_principal.identity_loaded"
  },
  "type": "import"
 },
 "flask_security.core.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "flask_security.core.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "flask_security.core.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "flask_security.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "flask_security.datastore": {
  "data": {},
  "type": "module"
 },
 "flask_security.datastore.Datastore": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "flask_security.datastore.Datastore.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "flask_security.datastore.Datastore.commit": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "flask_security.datastore.Datastore.delete": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.Datastore.put": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.MongoEngineDatastore": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_security.datastore.Datastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.MongoEngineDatastore.delete": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "flask_security.datastore.MongoEngineDatastore.put": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "flask_security.datastore.MongoEngineUserDatastore": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "flask_security.datastore.MongoEngineDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.MongoEngineUserDatastore.__init__": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "flask_security.datastore.MongoEngineDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.MongoEngineUserDatastore.find_role": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "flask_security.datastore.MongoEngineUserDatastore.find_user": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "map",
    "mongoengine.errors.ValidationError",
    "mongoengine.queryset.visitor.Q",
    "mongoengine.queryset.visitor.QCombination",
    "mongoengine.queryset.visitor.QCombination.AND"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeDatastore": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_security.datastore.Datastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.PeeweeDatastore.delete": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeDatastore.put": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeUserDatastore": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "flask_security.datastore.PeeweeDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.PeeweeUserDatastore.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "flask_security.datastore.PeeweeDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeUserDatastore.add_role_to_user": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeUserDatastore.create_user": {
  "data": {
   "lineno": 632
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeUserDatastore.find_role": {
  "data": {
   "lineno": 626
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeUserDatastore.find_user": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "peewee.fn.lower"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PeeweeUserDatastore.remove_role_from_user": {
  "data": {
   "lineno": 658
  },
  "type": "function"
 },
 "flask_security.datastore.PonyDatastore": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "flask_security.datastore.Datastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.PonyDatastore.commit": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "flask_security.datastore.PonyDatastore.delete": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "flask_security.datastore.with_pony_session"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyDatastore.put": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "flask_security.datastore.with_pony_session"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyUserDatastore": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "flask_security.datastore.PonyDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.PonyUserDatastore.__init__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "flask_security.datastore.PonyDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyUserDatastore.add_role_to_user": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "flask_security.datastore.with_pony_session",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyUserDatastore.create_role": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "flask_security.datastore.with_pony_session",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyUserDatastore.create_user": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "flask_security.datastore.with_pony_session",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyUserDatastore.find_role": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "flask_security.datastore.with_pony_session"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.PonyUserDatastore.find_user": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "ValueError",
    "flask_security.datastore.with_pony_session",
    "len"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.Q": {
  "data": {
   "shadows": "mongoengine.queryset.visitor.Q"
  },
  "type": "import"
 },
 "flask_security.datastore.QCombination": {
  "data": {
   "shadows": "mongoengine.queryset.visitor.QCombination"
  },
  "type": "import"
 },
 "flask_security.datastore.SQLAlchemyDatastore": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_security.datastore.Datastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.SQLAlchemyDatastore.commit": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemyDatastore.delete": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemyDatastore.put": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemySessionUserDatastore": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "flask_security.datastore.SQLAlchemyDatastore",
    "flask_security.datastore.SQLAlchemyUserDatastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.SQLAlchemySessionUserDatastore.__init__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "PretendFlaskSQLAlchemyDb",
    "flask_security.datastore.SQLAlchemyUserDatastore"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemySessionUserDatastore.__init__.PretendFlaskSQLAlchemyDb": {
  "data": {
   "lineno": 544
  },
  "type": "class"
 },
 "flask_security.datastore.SQLAlchemySessionUserDatastore.__init__.PretendFlaskSQLAlchemyDb.__init__": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemySessionUserDatastore.commit": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemyUserDatastore": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "flask_security.datastore.SQLAlchemyDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "class"
 },
 "flask_security.datastore.SQLAlchemyUserDatastore.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "flask_security.datastore.SQLAlchemyDatastore",
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemyUserDatastore.find_role": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "flask_security.datastore.SQLAlchemyUserDatastore.find_user": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "ValueError",
    "config_value",
    "getattr",
    "hasattr",
    "len",
    "sqlalchemy.func.lower",
    "sqlalchemy.orm.joinedload"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore": {
  "data": {
   "lineno": 117
  },
  "type": "class"
 },
 "flask_security.datastore.UserDatastore.__init__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore._prepare_create_user_args": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "enumerate",
    "flask_security.datastore.uuid",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore._prepare_role_modify_args": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.activate_user": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.add_permissions_to_role": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.add_role_to_user": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.create_role": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.create_user": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.deactivate_user": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.delete_user": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.find_or_create_role": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.find_role": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.find_user": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.remove_permissions_from_role": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.remove_role_from_user": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.reset_user_access": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.set_token_uniquifier": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "flask_security.datastore.uuid",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.set_uniquifier": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "flask_security.datastore.uuid"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.tf_reset": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.tf_set": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.toggle_active": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.us_get_totp_secrets": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "flask_security.datastore.json"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.us_put_totp_secrets": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "flask_security.datastore.json"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.us_reset": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "flask_security.datastore.UserDatastore.us_set": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "flask_security.datastore.ValidationError": {
  "data": {
   "shadows": "mongoengine.errors.ValidationError"
  },
  "type": "import"
 },
 "flask_security.datastore.after_this_request": {
  "data": {
   "shadows": "flask.after_this_request"
  },
  "type": "import"
 },
 "flask_security.datastore.alchemyFn": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "flask_security.datastore.appcontext_popped": {
  "data": {
   "shadows": "flask.signals.appcontext_popped"
  },
  "type": "import"
 },
 "flask_security.datastore.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.datastore.db_session": {
  "data": {
   "shadows": "pony.orm.db_session"
  },
  "type": "import"
 },
 "flask_security.datastore.has_app_context": {
  "data": {
   "shadows": "flask.has_app_context"
  },
  "type": "import"
 },
 "flask_security.datastore.has_request_context": {
  "data": {
   "shadows": "flask.has_request_context"
  },
  "type": "import"
 },
 "flask_security.datastore.joinedload": {
  "data": {
   "shadows": "sqlalchemy.orm.joinedload"
  },
  "type": "import"
 },
 "flask_security.datastore.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "flask_security.datastore.local": {
  "data": {
   "shadows": "pony.orm.core.local"
  },
  "type": "import"
 },
 "flask_security.datastore.peeweeFn": {
  "data": {
   "shadows": "peewee.fn"
  },
  "type": "import"
 },
 "flask_security.datastore.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "flask_security.datastore.with_pony_session": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "flask_security.datastore.with_pony_session.decorator": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RuntimeError",
    "f",
    "flask.has_app_context",
    "flask.has_request_context",
    "functools.wraps",
    "pony.orm.core.local.db_context_counter",
    "pony.orm.db_session.__enter__"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.with_pony_session.decorator.pop": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask.signals.appcontext_popped.connect_via",
    "pony.orm.core.local.db_context_counter",
    "pony.orm.db_session.__exit__"
   ]
  },
  "type": "function"
 },
 "flask_security.datastore.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "flask_security.decorators": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "flask.current_app.extensions",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.decorators.BasicAuth": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "flask_security.decorators.BuildError": {
  "data": {
   "shadows": "werkzeug.routing.BuildError"
  },
  "type": "import"
 },
 "flask_security.decorators.CSRFError": {
  "data": {
   "shadows": "flask_wtf.csrf.CSRFError"
  },
  "type": "import"
 },
 "flask_security.decorators.Identity": {
  "data": {
   "shadows": "flask_principal.Identity"
  },
  "type": "import"
 },
 "flask_security.decorators.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.decorators.Permission": {
  "data": {
   "shadows": "flask_principal.Permission"
  },
  "type": "import"
 },
 "flask_security.decorators.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "flask_security.decorators.RoleNeed": {
  "data": {
   "shadows": "flask_principal.RoleNeed"
  },
  "type": "import"
 },
 "flask_security.decorators._check_http_auth": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "find_user",
    "flask._request_ctx_stack.top.user",
    "flask.current_app._get_current_object",
    "flask.request.authorization",
    "flask_principal.Identity",
    "flask_principal.identity_changed.send",
    "flask_security.decorators.BasicAuth",
    "flask_security.decorators._security"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators._check_token": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "flask._request_ctx_stack.top.user",
    "flask.current_app._get_current_object",
    "flask.request",
    "flask_principal.Identity",
    "flask_principal.identity_changed.send",
    "flask_security.decorators._security",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators._csrf": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "flask_security.decorators._default_unauthenticated_html": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "flask_security.decorators._get_unauthenticated_response": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.decorators._default_unauthenticated_html"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators._get_unauthorized_response": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flask_security.decorators._get_unauthenticated_response"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators._request_ctx_stack": {
  "data": {
   "shadows": "flask._request_ctx_stack"
  },
  "type": "import"
 },
 "flask_security.decorators._security": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "flask_security.decorators.abort": {
  "data": {
   "shadows": "flask.abort"
  },
  "type": "import"
 },
 "flask_security.decorators.anonymous_user_required": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "flask_security.decorators.anonymous_user_required.wrapper": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "f",
    "flask.redirect",
    "flask.request",
    "flask_login.current_user.is_authenticated",
    "flask_security.decorators._security",
    "functools.wraps",
    "get_message",
    "get_url",
    "json_error_response"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.auth_required": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "flask_login.current_user.is_authenticated",
    "flask_security.decorators._check_http_auth",
    "flask_security.decorators._check_token"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.auth_required.wrapper": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "flask_security.decorators.auth_required.wrapper.decorated_view": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "am",
    "callable",
    "check_and_update_authn_fresh",
    "config_value",
    "flask_security.decorators._security",
    "flask_security.decorators.datetime",
    "flask_security.decorators.handle_csrf",
    "fn",
    "functools.wraps",
    "grace",
    "mechanism",
    "set_request_attr",
    "within"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.auth_token_required": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "flask_security.decorators.auth_token_required.decorated": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "flask_security.decorators._check_token",
    "flask_security.decorators._security",
    "flask_security.decorators.handle_csrf",
    "fn",
    "functools.wraps",
    "set_request_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.decorators.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_security.decorators.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "flask_security.decorators.default_reauthn_handler": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "config_value",
    "do_flash",
    "flask.abort",
    "flask.redirect",
    "flask.request",
    "flask.request.url",
    "flask_security.decorators._security",
    "get_message",
    "get_url",
    "json_error_response"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.default_unauthn_handler": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "config_value",
    "flask.Response",
    "flask.request",
    "flask_security.decorators._get_unauthenticated_response",
    "flask_security.decorators._security",
    "get_message",
    "json_error_response"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.default_unauthz_handler": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "callable",
    "config_value",
    "do_flash",
    "flask.abort",
    "flask.redirect",
    "flask.request",
    "flask.request.path",
    "flask.request.referrer",
    "flask.request.referrer.split",
    "flask_security.decorators._security",
    "get_message",
    "get_url",
    "json_error_response",
    "view",
    "werkzeug.routing.BuildError"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "flask_security.decorators.handle_csrf": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "config_value",
    "flask._request_ctx_stack.top.fs_ignore_csrf",
    "flask.current_app.config.get",
    "flask.current_app.extensions.get",
    "flask.g.get",
    "flask_security.decorators._csrf"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.http_auth_required": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "callable",
    "decorator"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.http_auth_required.decorator": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "flask_security.decorators.http_auth_required.decorator.wrapper": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "callable",
    "flask_security.decorators._check_http_auth",
    "flask_security.decorators._security",
    "flask_security.decorators.handle_csrf",
    "fn",
    "functools.wraps",
    "set_request_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.identity_changed": {
  "data": {
   "shadows": "flask_principal.identity_changed"
  },
  "type": "import"
 },
 "flask_security.decorators.login_required": {
  "data": {
   "shadows": "flask_login.login_required"
  },
  "type": "import"
 },
 "flask_security.decorators.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "flask_security.decorators.permissions_accepted": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "flask_security.decorators.permissions_accepted.wrapper": {
  "data": {
   "lineno": 578
  },
  "type": "function"
 },
 "flask_security.decorators.permissions_accepted.wrapper.decorated_view": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "FsPermNeed",
    "flask_principal.Permission",
    "flask_security.decorators._security",
    "flask_security.decorators.permissions_accepted",
    "fn",
    "functools.wraps",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.permissions_required": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "flask_security.decorators.permissions_required.wrapper": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "flask_security.decorators.permissions_required.wrapper.decorated_view": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "FsPermNeed",
    "flask_principal.Permission",
    "flask_security.decorators._security",
    "flask_security.decorators.permissions_required",
    "fn",
    "functools.wraps",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "flask_security.decorators.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_security.decorators.roles_accepted": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "flask_security.decorators.roles_accepted.wrapper": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "flask_security.decorators.roles_accepted.wrapper.decorated_view": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "flask_principal.Permission",
    "flask_principal.RoleNeed",
    "flask_security.decorators._security",
    "flask_security.decorators.roles_accepted",
    "fn",
    "functools.wraps",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.roles_required": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "flask_security.decorators.roles_required.wrapper": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "flask_security.decorators.roles_required.wrapper.decorated_view": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "flask_principal.Permission",
    "flask_principal.RoleNeed",
    "flask_security.decorators._security",
    "flask_security.decorators.roles_required",
    "fn",
    "functools.wraps",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.unauth_csrf": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "flask_security.decorators.unauth_csrf.wrapper": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "flask_security.decorators.unauth_csrf.wrapper.decorated": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "config_value",
    "flask._request_ctx_stack.top.fs_ignore_csrf",
    "flask.current_app.config.get",
    "flask.current_app.extensions.get",
    "flask_login.current_user.is_authenticated",
    "flask_security.decorators._csrf",
    "flask_wtf.csrf.CSRFError",
    "fn",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "flask_security.decorators.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "flask_security.forms": {
  "data": {
   "symbols_in_volume": [
    "_",
    "flask.current_app.extensions",
    "flask_security.forms.EmailValidation",
    "flask_security.forms.Required",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.forms.BaseForm": {
  "data": {
   "shadows": "flask_wtf.FlaskForm"
  },
  "type": "import"
 },
 "flask_security.forms.BooleanField": {
  "data": {
   "shadows": "wtforms.BooleanField"
  },
  "type": "import"
 },
 "flask_security.forms.ChangePasswordForm": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "flask_security.forms.EqualTo",
    "flask_security.forms.Form",
    "flask_security.forms.PasswordFormMixin",
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.password_required",
    "wtforms.PasswordField",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.ChangePasswordForm.validate": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "flask_login.current_user",
    "flask_login.current_user.verify_and_update_password",
    "flask_security.forms._security",
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.ConfirmRegisterForm": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.RegisterFormMixin",
    "flask_security.forms.UniqueEmailFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.PasswordField",
    "wtforms.validators.Optional"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.ConfirmRegisterForm.validate": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "config_value",
    "flask_security.forms._security",
    "get_message",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.EmailField": {
  "data": {
   "shadows": "wtforms.fields.html5.EmailField"
  },
  "type": "import"
 },
 "flask_security.forms.EmailFormMixin": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "flask_security.forms.email_required",
    "flask_security.forms.email_validator",
    "flask_security.forms.get_form_field_label",
    "wtforms.fields.html5.EmailField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.EmailValidation": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "flask_security.forms.EmailValidation.__call__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "flask_security.forms._security",
    "get_message",
    "wtforms.ValidationError",
    "wtforms.validators.StopValidation"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.EqualTo": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "flask_security.forms.ValidatorMixin",
    "wtforms.validators.EqualTo"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.Field": {
  "data": {
   "shadows": "wtforms.Field"
  },
  "type": "import"
 },
 "flask_security.forms.ForgotPasswordForm": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.UserEmailFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.ForgotPasswordForm.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.ForgotPasswordForm.validate": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "get_message",
    "requires_confirmation",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.Form": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "flask_wtf.FlaskForm"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.Form.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "flask.current_app.testing",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.HiddenField": {
  "data": {
   "shadows": "wtforms.HiddenField"
  },
  "type": "import"
 },
 "flask_security.forms.Length": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flask_security.forms.ValidatorMixin",
    "wtforms.validators.Length"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.forms.LoginForm": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.NextFormMixin",
    "flask_security.forms.email_required",
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.password_required",
    "wtforms.BooleanField",
    "wtforms.PasswordField",
    "wtforms.SubmitField",
    "wtforms.fields.html5.EmailField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.LoginForm.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "config_value",
    "flask.Markup",
    "flask.current_app.extensions.recoverable",
    "flask.request.args.get",
    "get_message",
    "super",
    "url_for_security"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.LoginForm.validate": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "find_user",
    "flask_security.forms._security",
    "get_message",
    "hash_password",
    "requires_confirmation",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "flask_security.forms.NewPasswordFormMixin": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.password_required",
    "wtforms.PasswordField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.NextFormMixin": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "next",
    "wtforms.HiddenField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.NextFormMixin.validate_next": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "do_flash",
    "get_message",
    "validate_redirect_url",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.PasswordConfirmFormMixin": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "flask_security.forms.EqualTo",
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.password_required",
    "wtforms.PasswordField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.PasswordField": {
  "data": {
   "shadows": "wtforms.PasswordField"
  },
  "type": "import"
 },
 "flask_security.forms.PasswordFormMixin": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.password_required",
    "wtforms.PasswordField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.PasswordlessLoginForm": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.UserEmailFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.PasswordlessLoginForm.__init__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.PasswordlessLoginForm.validate": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.RadioField": {
  "data": {
   "shadows": "wtforms.RadioField"
  },
  "type": "import"
 },
 "flask_security.forms.RegisterForm": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "flask_security.forms.ConfirmRegisterForm",
    "flask_security.forms.EqualTo",
    "flask_security.forms.NextFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.PasswordField",
    "wtforms.validators.Optional"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.RegisterForm.__init__": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "flask.request.args.get",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.RegisterForm.validate": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "config_value",
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.RegisterFormMixin": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "flask_security.forms.get_form_field_label",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.RegisterFormMixin.to_dict": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "flask_security.forms.inspect"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.RegisterFormMixin.to_dict.is_field_and_user_attr": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "wtforms.Field"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.Required": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "flask_security.forms.ValidatorMixin",
    "wtforms.validators.DataRequired"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.ResetPasswordForm": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.NewPasswordFormMixin",
    "flask_security.forms.PasswordConfirmFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.ResetPasswordForm.validate": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "flask_login.current_user",
    "flask_security.forms._security",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.SendConfirmationForm": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.UserEmailFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.SendConfirmationForm.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "flask.request.args.get",
    "flask.request.method",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.SendConfirmationForm.validate": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.StopValidation": {
  "data": {
   "shadows": "wtforms.validators.StopValidation"
  },
  "type": "import"
 },
 "flask_security.forms.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "flask_security.forms.SubmitField": {
  "data": {
   "shadows": "wtforms.SubmitField"
  },
  "type": "import"
 },
 "flask_security.forms.TwoFactorRescueForm": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.get_form_field_label",
    "wtforms.RadioField",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.TwoFactorRescueForm.__init__": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.TwoFactorRescueForm.validate": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.TwoFactorSetupForm": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.UserEmailFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.RadioField",
    "wtforms.StringField",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.TwoFactorSetupForm.__init__": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.TwoFactorSetupForm.validate": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "config_value",
    "flask_security.forms._security",
    "get_message",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.TwoFactorVerifyCodeForm": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.UserEmailFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.StringField",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.TwoFactorVerifyCodeForm.__init__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.TwoFactorVerifyCodeForm.validate": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "config_value",
    "flask_security.forms._security",
    "get_message",
    "list"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.UniqueEmailFormMixin": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "flask_security.forms.email_required",
    "flask_security.forms.email_validator",
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.unique_user_email",
    "wtforms.fields.html5.EmailField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.UserEmailFormMixin": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "flask_security.forms.email_required",
    "flask_security.forms.email_validator",
    "flask_security.forms.get_form_field_label",
    "flask_security.forms.valid_user_email",
    "wtforms.fields.html5.EmailField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.ValidationError": {
  "data": {
   "shadows": "wtforms.ValidationError"
  },
  "type": "import"
 },
 "flask_security.forms.ValidatorMixin": {
  "data": {
   "lineno": 79
  },
  "type": "class"
 },
 "flask_security.forms.ValidatorMixin.__call__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "config_value",
    "is_lazy_string",
    "make_lazy_string",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.ValidatorMixin.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.VerifyForm": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "flask_security.forms.Form",
    "flask_security.forms.PasswordFormMixin",
    "flask_security.forms.get_form_field_label",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.forms.VerifyForm.validate": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "flask_login.current_user",
    "flask_security.forms._security",
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.forms._default_field_labels": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "flask_security.forms._local_xlate": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "localize_callback"
   ]
  },
  "type": "function"
 },
 "flask_security.forms._security": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "flask_security.forms.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.forms.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_security.forms.email_required": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "flask_security.forms.email_validator": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "flask_security.forms.get_form_field_label": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "flask_security.forms._default_field_labels",
    "flask_security.forms._local_xlate",
    "make_lazy_string"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "flask_security.forms.password_required": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "flask_security.forms.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_security.forms.unique_identity_attribute": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "config_value",
    "get_message",
    "list",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.unique_user_email": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "flask_security.forms._security",
    "get_identity_attribute",
    "get_message",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.valid_user_email": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "flask_security.forms._security",
    "get_identity_attribute",
    "get_message",
    "wtforms.ValidationError"
   ]
  },
  "type": "function"
 },
 "flask_security.forms.validators": {
  "data": {
   "shadows": "wtforms.validators"
  },
  "type": "import"
 },
 "flask_security.mail_util": {
  "data": {},
  "type": "module"
 },
 "flask_security.mail_util.MailUtil": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "flask_security.mail_util.MailUtil.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "flask_security.mail_util.MailUtil.normalize": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "config_value",
    "flask_security.mail_util.email_validator"
   ]
  },
  "type": "function"
 },
 "flask_security.mail_util.MailUtil.send_mail": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask.current_app.extensions.get",
    "flask_mail.Message"
   ]
  },
  "type": "function"
 },
 "flask_security.mail_util.MailUtil.validate": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "config_value",
    "flask_security.mail_util.email_validator"
   ]
  },
  "type": "function"
 },
 "flask_security.mail_util.Message": {
  "data": {
   "shadows": "flask_mail.Message"
  },
  "type": "import"
 },
 "flask_security.mail_util.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.mail_util.email_validator": {
  "data": {
   "shadows": "email_validator"
  },
  "type": "import"
 },
 "flask_security.models": {
  "data": {},
  "type": "module"
 },
 "flask_security.models.fsqla": {
  "data": {},
  "type": "module"
 },
 "flask_security.models.fsqla.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.FsModels": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "flask_security.models.fsqla.FsModels.set_db_info": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla.FsOauth2ClientMixin": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.UnicodeText"
   ]
  },
  "type": "class"
 },
 "flask_security.models.fsqla.FsOauth2ClientMixin.user": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declared_attr",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla.FsOauth2ClientMixin.user_id": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla.FsRoleMixin": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "flask_security.RoleMixin",
    "flask_security.models.fsqla.datetime",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.UnicodeText",
    "sqlalchemy.sql.func.now"
   ]
  },
  "type": "class"
 },
 "flask_security.models.fsqla.FsTokenMixin": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.UnicodeText",
    "sqlalchemy.sql.func.now"
   ]
  },
  "type": "class"
 },
 "flask_security.models.fsqla.FsTokenMixin.client_id": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla.FsTokenMixin.user_id": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla.FsUserMixin": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "flask_security.UserMixin",
    "flask_security.models.fsqla.datetime",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.sql.func.now"
   ]
  },
  "type": "class"
 },
 "flask_security.models.fsqla.FsUserMixin.roles": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "flask_security.models.fsqla.FsModels",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.RoleMixin": {
  "data": {
   "shadows": "flask_security.RoleMixin"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.UnicodeText": {
  "data": {
   "shadows": "sqlalchemy.UnicodeText"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.UserMixin": {
  "data": {
   "shadows": "flask_security.UserMixin"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.func": {
  "data": {
   "shadows": "sqlalchemy.sql.func"
  },
  "type": "import"
 },
 "flask_security.models.fsqla.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2": {
  "data": {},
  "type": "module"
 },
 "flask_security.models.fsqla_v2.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2.FsModels": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "flask_security.models.fsqla_v2.FsModelsV1": {
  "data": {
   "shadows": "FsModels"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2.FsRoleMixin": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "flask_security.models.fsqla_v2.FsRoleMixinV1": {
  "data": {
   "shadows": "FsRoleMixin"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2.FsUserMixin": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "flask_security.models.fsqla_v2.FsUserMixin.roles": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsModels",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "flask_security.models.fsqla_v2.FsUserMixinV1": {
  "data": {
   "shadows": "FsUserMixin"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "flask_security.models.fsqla_v2.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "flask_security.password_util": {
  "data": {},
  "type": "module"
 },
 "flask_security.password_util.PasswordUtil": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "flask_security.password_util.PasswordUtil.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "flask_security.password_util.PasswordUtil.normalize": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "config_value",
    "flask_security.password_util.unicodedata"
   ]
  },
  "type": "function"
 },
 "flask_security.password_util.PasswordUtil.validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "config_value",
    "flask_security.password_util.unicodedata",
    "password_breached_validator",
    "password_complexity_validator",
    "password_length_validator"
   ]
  },
  "type": "function"
 },
 "flask_security.password_util.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "flask_security.passwordless": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.passwordless._security",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.passwordless.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.passwordless._datastore": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "flask_security.passwordless._security": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "flask_security.passwordless.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.passwordless.generate_login_token": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "flask_security.passwordless._security",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.passwordless.login_token_status": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "get_token_status"
   ]
  },
  "type": "function"
 },
 "flask_security.passwordless.send_login_instructions": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "config_value",
    "flask.current_app._get_current_object",
    "flask_security.passwordless.generate_login_token",
    "send_mail",
    "url_for_security"
   ]
  },
  "type": "function"
 },
 "flask_security.phone_util": {
  "data": {},
  "type": "module"
 },
 "flask_security.phone_util.PhoneUtil": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "flask_security.phone_util.PhoneUtil.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "flask_security.phone_util.PhoneUtil.get_canonical_form": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "config_value",
    "flask_security.phone_util.phonenumbers"
   ]
  },
  "type": "function"
 },
 "flask_security.phone_util.PhoneUtil.validate_phone_number": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "config_value",
    "flask_security.phone_util.phonenumbers",
    "get_message"
   ]
  },
  "type": "function"
 },
 "flask_security.phone_util.phonenumbers": {
  "data": {
   "shadows": "phonenumbers"
  },
  "type": "import"
 },
 "flask_security.quart_compat": {
  "data": {
   "symbols_in_volume": [
    "flask_security.quart_compat.flask",
    "hasattr"
   ]
  },
  "type": "module"
 },
 "flask_security.quart_compat.best": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "flask_security.quart_compat.flask": {
  "data": {
   "shadows": "flask"
  },
  "type": "import"
 },
 "flask_security.quart_compat.get_quart_status": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_security.quart_compat.is_quart"
   ]
  },
  "type": "function"
 },
 "flask_security.quart_compat.is_quart": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "flask_security.recoverable": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.recoverable._security",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.recoverable.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.recoverable._datastore": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "flask_security.recoverable._security": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "flask_security.recoverable.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.recoverable.generate_reset_password_token": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "flask_security.recoverable._security",
    "hash_data",
    "str"
   ]
  },
  "type": "function"
 },
 "flask_security.recoverable.reset_password_token_status": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "get_token_status",
    "verify_hash"
   ]
  },
  "type": "function"
 },
 "flask_security.recoverable.send_password_reset_notice": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "config_value",
    "send_mail"
   ]
  },
  "type": "function"
 },
 "flask_security.recoverable.send_reset_password_instructions": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "config_value",
    "flask.current_app._get_current_object",
    "flask_security.recoverable.generate_reset_password_token",
    "send_mail",
    "url_for_security"
   ]
  },
  "type": "function"
 },
 "flask_security.recoverable.update_password": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask_security.recoverable._datastore",
    "flask_security.recoverable.send_password_reset_notice",
    "hash_password"
   ]
  },
  "type": "function"
 },
 "flask_security.registerable": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.registerable._security",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.registerable.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.registerable._datastore": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "flask_security.registerable._security": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "flask_security.registerable.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.registerable.register_user": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "config_value",
    "do_flash",
    "flask.current_app._get_current_object",
    "flask_security.registerable._datastore",
    "flask_security.registerable._security",
    "flask_security.registerable.uuid",
    "generate_confirmation_link",
    "get_message",
    "hash_password",
    "send_mail"
   ]
  },
  "type": "function"
 },
 "flask_security.registerable.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "flask_security.signals": {
  "data": {
   "symbols_in_volume": [
    "flask_security.signals.blinker",
    "flask_security.signals.signals"
   ]
  },
  "type": "module"
 },
 "flask_security.signals.blinker": {
  "data": {
   "shadows": "blinker"
  },
  "type": "import"
 },
 "flask_security.signals.confirm_instructions_sent": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "flask_security.signals.login_instructions_sent": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "flask_security.signals.password_changed": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "flask_security.signals.password_reset": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "flask_security.signals.reset_password_instructions_sent": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "flask_security.signals.signals": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "flask_security.signals.tf_code_confirmed": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "flask_security.signals.tf_disabled": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "flask_security.signals.tf_profile_changed": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "flask_security.signals.tf_security_token_sent": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "flask_security.signals.us_profile_changed": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "flask_security.signals.us_security_token_sent": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "flask_security.signals.user_authenticated": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "flask_security.signals.user_confirmed": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "flask_security.signals.user_registered": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "flask_security.totp": {
  "data": {},
  "type": "module"
 },
 "flask_security.totp.TOTP": {
  "data": {
   "shadows": "passlib.totp.TOTP"
  },
  "type": "import"
 },
 "flask_security.totp.TokenError": {
  "data": {
   "shadows": "passlib.totp.TokenError"
  },
  "type": "import"
 },
 "flask_security.totp.Totp": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "flask_security.totp.Totp.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "passlib.totp.TOTP.using"
   ]
  },
  "type": "function"
 },
 "flask_security.totp.Totp.fetch_setup_values": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "flask_security.totp.Totp.generate_qrcode": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ImportError",
    "flask_security.totp.base64",
    "flask_security.totp.io",
    "flask_security.totp.pyqrcode"
   ]
  },
  "type": "function"
 },
 "flask_security.totp.Totp.generate_totp_password": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "flask_security.totp.Totp.generate_totp_secret": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "flask_security.totp.Totp.get_last_counter": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "flask_security.totp.Totp.get_totp_pretty_key": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "flask_security.totp.Totp.get_totp_uri": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "flask_security.totp.Totp.set_last_counter": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "flask_security.totp.Totp.verify_totp": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "passlib.totp.TokenError"
   ]
  },
  "type": "function"
 },
 "flask_security.totp.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "flask_security.totp.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "flask_security.totp.pyqrcode": {
  "data": {
   "shadows": "pyqrcode"
  },
  "type": "import"
 },
 "flask_security.twofactor": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.twofactor._security",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.twofactor.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.twofactor.MultiDict": {
  "data": {
   "shadows": "werkzeug.datastructures.MultiDict"
  },
  "type": "import"
 },
 "flask_security.twofactor._datastore": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "flask_security.twofactor._security": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "flask_security.twofactor.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.twofactor.complete_two_factor_process": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask_security.twofactor._datastore",
    "flask_security.twofactor.tf_clean_session",
    "login_user"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.generate_tf_validity_token": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "flask_security.twofactor._security"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.is_tf_setup": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "flask_security.twofactor.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "flask_security.twofactor.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_security.twofactor.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "flask_security.twofactor.tf_clean_session": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "config_value",
    "flask.session.pop"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.tf_disable": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "flask.current_app._get_current_object",
    "flask_security.twofactor._datastore",
    "flask_security.twofactor.tf_clean_session"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.tf_login": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "base_render_json",
    "do_flash",
    "flask.redirect",
    "flask.request",
    "flask.session",
    "flask_security.twofactor._security",
    "flask_security.twofactor.tf_clean_session",
    "getattr",
    "json_error_response",
    "url_for_security",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.tf_send_security_token": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "config_value",
    "flask.current_app._get_current_object",
    "flask_security.twofactor._security",
    "send_mail"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.tf_set_validity_token_cookie": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "config_value",
    "flask_security.twofactor.generate_tf_validity_token",
    "get_within_delta",
    "int"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.tf_validity_token_status": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "check_and_get_token_status",
    "get_within_delta"
   ]
  },
  "type": "function"
 },
 "flask_security.twofactor.tf_verify_validility_token": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "flask_security.twofactor.tf_validity_token_status"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin": {
  "data": {
   "symbols_in_volume": [
    "flask.current_app.extensions",
    "flask_security.unified_signin._security",
    "get_quart_status",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "flask_security.unified_signin.BooleanField": {
  "data": {
   "shadows": "wtforms.BooleanField"
  },
  "type": "import"
 },
 "flask_security.unified_signin.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "flask_security.unified_signin.MultiDict": {
  "data": {
   "shadows": "werkzeug.datastructures.MultiDict"
  },
  "type": "import"
 },
 "flask_security.unified_signin.RadioField": {
  "data": {
   "shadows": "wtforms.RadioField"
  },
  "type": "import"
 },
 "flask_security.unified_signin.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "flask_security.unified_signin.SubmitField": {
  "data": {
   "shadows": "wtforms.SubmitField"
  },
  "type": "import"
 },
 "flask_security.unified_signin.UnifiedSigninForm": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Required",
    "flask_security.unified_signin._UnifiedPassCodeForm",
    "get_form_field_label",
    "wtforms.BooleanField",
    "wtforms.StringField"
   ]
  },
  "type": "class"
 },
 "flask_security.unified_signin.UnifiedSigninForm.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "config_value",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.UnifiedSigninForm.validate": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "get_message",
    "requires_confirmation",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.UnifiedSigninSetupForm": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_",
    "get_form_field_label",
    "wtforms.RadioField",
    "wtforms.StringField",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.unified_signin.UnifiedSigninSetupForm.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.UnifiedSigninSetupForm.validate": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "config_value",
    "flask_security.unified_signin._security",
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.UnifiedSigninSetupValidateForm": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "Required",
    "get_form_field_label",
    "wtforms.StringField",
    "wtforms.SubmitField"
   ]
  },
  "type": "class"
 },
 "flask_security.unified_signin.UnifiedSigninSetupValidateForm.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.UnifiedSigninSetupValidateForm.validate": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "config_value",
    "flask_security.unified_signin._security",
    "get_message",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.UnifiedVerifyForm": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "flask_security.unified_signin._UnifiedPassCodeForm"
   ]
  },
  "type": "class"
 },
 "flask_security.unified_signin.UnifiedVerifyForm.validate": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "flask_login.current_user",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._UnifiedPassCodeForm": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "_",
    "get_form_field_label",
    "wtforms.RadioField",
    "wtforms.StringField",
    "wtforms.SubmitField",
    "wtforms.validators.Optional"
   ]
  },
  "type": "class"
 },
 "flask_security.unified_signin._UnifiedPassCodeForm.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._UnifiedPassCodeForm.validate": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "config_value",
    "flask_security.unified_signin._datastore",
    "flask_security.unified_signin._security",
    "flask_security.unified_signin._us_common_validate",
    "get_message",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._compute_active_methods": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "config_value",
    "flask_security.unified_signin._datastore",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._compute_code_methods": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "config_value",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._compute_setup_methods": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "config_value",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._datastore": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "flask_security.unified_signin._security": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "flask_security.unified_signin._send_code_helper": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "flask.after_this_request",
    "flask_security.unified_signin._datastore",
    "flask_security.unified_signin._security",
    "getattr"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin._us_common_validate": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "find_user",
    "get_message"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.after_this_request": {
  "data": {
   "shadows": "flask.after_this_request"
  },
  "type": "import"
 },
 "flask_security.unified_signin.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "flask_security.unified_signin.current_user": {
  "data": {
   "shadows": "flask_login.current_user"
  },
  "type": "import"
 },
 "flask_security.unified_signin.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "flask_security.unified_signin.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "flask_security.unified_signin.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "flask_security.unified_signin.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "flask_security.unified_signin.us_send_security_token": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "config_value",
    "flask.current_app._get_current_object",
    "flask_security.unified_signin._security",
    "get_message",
    "send_mail",
    "url_for_security"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_setup": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "auth_required",
    "base_render_json",
    "config_value",
    "dict",
    "flask.request",
    "flask.request.content_length",
    "flask.request.get_json",
    "flask.request.is_json",
    "flask_login.current_user",
    "flask_login.current_user.us_phone_number",
    "flask_login.current_user.us_send_security_token",
    "flask_security.unified_signin._compute_active_methods",
    "flask_security.unified_signin._compute_code_methods",
    "flask_security.unified_signin._compute_setup_methods",
    "flask_security.unified_signin._security",
    "form_class",
    "get_identity_attributes",
    "suppress_form_csrf",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_setup_validate": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "auth_required",
    "base_render_json",
    "check_and_get_token_status",
    "config_value",
    "dict",
    "do_flash",
    "flask.after_this_request",
    "flask.current_app._get_current_object",
    "flask.redirect",
    "flask.request",
    "flask.request.get_json",
    "flask.request.is_json",
    "flask_login.current_user",
    "flask_login.current_user.us_phone_number",
    "flask_security.unified_signin._datastore",
    "flask_security.unified_signin._security",
    "form_class",
    "get_message",
    "get_url",
    "get_within_delta",
    "json_error_response",
    "suppress_form_csrf",
    "url_for_security",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_signin": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "base_render_json",
    "config_value",
    "do_flash",
    "flask.after_this_request",
    "flask.redirect",
    "flask.request",
    "flask.request.content_length",
    "flask.request.cookies.get",
    "flask.request.get_json",
    "flask.request.is_json",
    "flask.request.method",
    "flask_login.current_user.is_authenticated",
    "flask_security.unified_signin._compute_code_methods",
    "flask_security.unified_signin._security",
    "form_class",
    "get_identity_attributes",
    "get_message",
    "get_post_login_redirect",
    "get_url",
    "is_tf_setup",
    "json_error_response",
    "login_user",
    "suppress_form_csrf",
    "tf_login",
    "tf_verify_validility_token",
    "unauth_csrf",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_signin_send_code": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "base_render_json",
    "config_value",
    "flask.request",
    "flask.request.content_length",
    "flask.request.get_json",
    "flask.request.is_json",
    "flask_security.unified_signin._compute_code_methods",
    "flask_security.unified_signin._security",
    "flask_security.unified_signin._send_code_helper",
    "form_class",
    "get_identity_attributes",
    "suppress_form_csrf",
    "unauth_csrf",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_verify": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "auth_required",
    "base_render_json",
    "config_value",
    "do_flash",
    "flask.redirect",
    "flask.request",
    "flask.request.content_length",
    "flask.request.get_json",
    "flask.request.is_json",
    "flask.request.url",
    "flask.session",
    "flask_security.unified_signin._compute_code_methods",
    "flask_security.unified_signin._security",
    "flask_security.unified_signin.time",
    "form_class",
    "get_message",
    "get_post_verify_redirect",
    "get_url",
    "propagate_next",
    "suppress_form_csrf",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_verify_link": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "all",
    "config_value",
    "do_flash",
    "flask.after_this_request",
    "flask.redirect",
    "flask.request.args",
    "flask.request.args.get",
    "flask_security.unified_signin._datastore",
    "flask_security.unified_signin._security",
    "get_message",
    "get_post_login_redirect",
    "get_url",
    "is_tf_setup",
    "login_user",
    "tf_login",
    "url_for_security"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.us_verify_send_code": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "auth_required",
    "base_render_json",
    "config_value",
    "flask.request",
    "flask.request.content_length",
    "flask.request.get_json",
    "flask.request.is_json",
    "flask.request.url",
    "flask_security.unified_signin._compute_code_methods",
    "flask_security.unified_signin._security",
    "flask_security.unified_signin._send_code_helper",
    "form_class",
    "get_url",
    "propagate_next",
    "suppress_form_csrf",
    "werkzeug.datastructures.MultiDict"
   ]
  },
  "type": "function"
 },
 "flask_security.unified_signin.validators": {
  "data": {
   "shadows": "wtforms.validators"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_changeable": {
  "data": {
   "symbols_in_volume": [
    "tests.test_changeable.pytest"
   ]
  },
  "type": "module"
 },
 "tests.test_changeable.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_changeable.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_changeable.PasswordUtil": {
  "data": {
   "shadows": "flask_security.password_util.PasswordUtil"
  },
  "type": "import"
 },
 "tests.test_changeable.SQLAlchemy": {
  "data": {
   "shadows": "flask_sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.test_changeable.SQLAlchemyUserDatastore": {
  "data": {
   "shadows": "flask_security.SQLAlchemyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_changeable.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_changeable.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "tests.test_changeable.UserMixin": {
  "data": {
   "shadows": "flask_security.core.UserMixin"
  },
  "type": "import"
 },
 "tests.test_changeable._default_field_labels": {
  "data": {
   "shadows": "flask_security.forms._default_field_labels"
  },
  "type": "import"
 },
 "tests.test_changeable.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_changeable.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "tests.test_changeable.check_xlation": {
  "data": {
   "shadows": "tests.test_utils.check_xlation"
  },
  "type": "import"
 },
 "tests.test_changeable.fsqla": {
  "data": {
   "shadows": "flask_security.models.fsqla_v2"
  },
  "type": "import"
 },
 "tests.test_changeable.get_session": {
  "data": {
   "shadows": "tests.test_utils.get_session"
  },
  "type": "import"
 },
 "tests.test_changeable.hash_password": {
  "data": {
   "shadows": "tests.test_utils.hash_password"
  },
  "type": "import"
 },
 "tests.test_changeable.init_app_with_options": {
  "data": {
   "shadows": "tests.test_utils.init_app_with_options"
  },
  "type": "import"
 },
 "tests.test_changeable.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "tests.test_changeable.json_authenticate": {
  "data": {
   "shadows": "tests.test_utils.json_authenticate"
  },
  "type": "import"
 },
 "tests.test_changeable.localize_callback": {
  "data": {
   "shadows": "flask_security.utils.localize_callback"
  },
  "type": "import"
 },
 "tests.test_changeable.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_changeable.password_changed": {
  "data": {
   "shadows": "flask_security.signals.password_changed"
  },
  "type": "import"
 },
 "tests.test_changeable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_changeable.pytestmark": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tests.test_changeable.test_auth_uniquifier": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_security.models.fsqla_v2.FsModels.set_db_info",
    "flask_sqlalchemy.SQLAlchemy",
    "tests.test_utils.hash_password",
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_auth_uniquifier.Role": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsRoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_changeable.test_auth_uniquifier.User": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsUserMixin",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "tests.test_changeable.test_basic_change": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "dict",
    "tests.test_changeable.base64",
    "tests.test_changeable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_change_invalidates_auth_token": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_change_invalidates_session": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.get_session"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_change_invalidates_session.authned": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "flask_security.signals.user_authenticated.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_change_updates_remember": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_changeable_flag": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "get_message",
    "len",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_changeable_flag.on_password_changed": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.password_changed.connect_via",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_custom_change_template": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tests.test_changeable.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_custom_change_url": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "tests.test_changeable.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_custom_post_change_view": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tests.test_changeable.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_disable_change_emails": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "len",
    "tests.test_changeable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_easy_password": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "tests.test_changeable.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_my_validator": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "tests.test_utils.authenticate",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_my_validator.MyPwUtil": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "flask_security.password_util.PasswordUtil"
   ]
  },
  "type": "class"
 },
 "tests.test_changeable.test_my_validator.MyPwUtil.validate": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "tests.test_changeable.test_override_length": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "get_message",
    "tests.test_changeable.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_pwd_no_normalize": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "dict",
    "tests.test_changeable.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_pwd_normalize": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_token_change": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_unicode_invalid_length": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_unicode_length": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.test_xlation": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "flask_security.forms._default_field_labels",
    "flask_security.utils.localize_callback",
    "get_message_local",
    "len",
    "str",
    "tests.test_changeable.jinja2",
    "tests.test_utils.authenticate",
    "tests.test_utils.check_xlation"
   ]
  },
  "type": "function"
 },
 "tests.test_changeable.user_authenticated": {
  "data": {
   "shadows": "flask_security.signals.user_authenticated"
  },
  "type": "import"
 },
 "tests.test_cli": {
  "data": {},
  "type": "module"
 },
 "tests.test_cli.CliRunner": {
  "data": {
   "shadows": "click.testing.CliRunner"
  },
  "type": "import"
 },
 "tests.test_cli.roles_add": {
  "data": {
   "shadows": "flask_security.cli.roles_add"
  },
  "type": "import"
 },
 "tests.test_cli.roles_add_permissions": {
  "data": {
   "shadows": "flask_security.cli.roles_add_permissions"
  },
  "type": "import"
 },
 "tests.test_cli.roles_create": {
  "data": {
   "shadows": "flask_security.cli.roles_create"
  },
  "type": "import"
 },
 "tests.test_cli.roles_remove": {
  "data": {
   "shadows": "flask_security.cli.roles_remove"
  },
  "type": "import"
 },
 "tests.test_cli.roles_remove_permissions": {
  "data": {
   "shadows": "flask_security.cli.roles_remove_permissions"
  },
  "type": "import"
 },
 "tests.test_cli.test_cli_activate_deactivate": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.users_activate",
    "flask_security.cli.users_create",
    "flask_security.cli.users_deactivate"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_addremove_permissions": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "all",
    "click.testing.CliRunner",
    "flask_security.cli.roles_add_permissions",
    "flask_security.cli.roles_create",
    "flask_security.cli.roles_remove_permissions"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_addremove_role": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.roles_add",
    "flask_security.cli.roles_create",
    "flask_security.cli.roles_remove",
    "flask_security.cli.users_create"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_createrole": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.roles_create"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_createrole_with_perms": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.roles_create"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_createuser": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.users_activate",
    "flask_security.cli.users_create"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_createuser_extraargs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.users_activate",
    "flask_security.cli.users_create"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_createuser_normalize": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.users_create",
    "flask_security.verify_password"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.test_cli_reset_user": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "click.testing.CliRunner",
    "flask_security.cli.users_create",
    "flask_security.cli.users_reset_access"
   ]
  },
  "type": "function"
 },
 "tests.test_cli.users_activate": {
  "data": {
   "shadows": "flask_security.cli.users_activate"
  },
  "type": "import"
 },
 "tests.test_cli.users_create": {
  "data": {
   "shadows": "flask_security.cli.users_create"
  },
  "type": "import"
 },
 "tests.test_cli.users_deactivate": {
  "data": {
   "shadows": "flask_security.cli.users_deactivate"
  },
  "type": "import"
 },
 "tests.test_cli.users_reset_access": {
  "data": {
   "shadows": "flask_security.cli.users_reset_access"
  },
  "type": "import"
 },
 "tests.test_cli.verify_password": {
  "data": {
   "shadows": "flask_security.verify_password"
  },
  "type": "import"
 },
 "tests.test_common": {
  "data": {},
  "type": "module"
 },
 "tests.test_common.Blueprint": {
  "data": {
   "shadows": "flask.Blueprint"
  },
  "type": "import"
 },
 "tests.test_common.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_common.Cookie": {
  "data": {
   "shadows": "http.cookiejar.Cookie"
  },
  "type": "import"
 },
 "tests.test_common.SQLAlchemy": {
  "data": {
   "shadows": "flask_sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.test_common.SQLAlchemyUserDatastore": {
  "data": {
   "shadows": "flask_security.SQLAlchemyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_common.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_common.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "tests.test_common.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_common.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "tests.test_common.fsqla": {
  "data": {
   "shadows": "flask_security.models.fsqla_v2"
  },
  "type": "import"
 },
 "tests.test_common.get_num_queries": {
  "data": {
   "shadows": "tests.test_utils.get_num_queries"
  },
  "type": "import"
 },
 "tests.test_common.hash_password": {
  "data": {
   "shadows": "tests.test_utils.hash_password"
  },
  "type": "import"
 },
 "tests.test_common.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tests.test_common.json_authenticate": {
  "data": {
   "shadows": "tests.test_utils.json_authenticate"
  },
  "type": "import"
 },
 "tests.test_common.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_common.populate_data": {
  "data": {
   "shadows": "tests.test_utils.populate_data"
  },
  "type": "import"
 },
 "tests.test_common.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_common.test_anon_required": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_anon_required_json": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "get_message",
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_case_insensitive_email": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_invalid_input": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_invalid_malformed_next": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict",
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_invalid_next": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_invalid_subdomain_next": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dict",
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_next": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_next_bp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "__name__",
    "dict",
    "flask.Blueprint"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_next_bp.info": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_root_domain_next": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_subdomain_next": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticate_with_subdomain_next_default_config": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authenticated_loop": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_authorized_access": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_bad_password": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_change_token_uniquifier": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_security.models.fsqla_v2.FsModels.set_db_info",
    "flask_sqlalchemy.SQLAlchemy",
    "tests.test_utils.hash_password",
    "tests.test_utils.json_authenticate",
    "tests.test_utils.verify_token"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_change_token_uniquifier.Role": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsRoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_common.test_change_token_uniquifier.User": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsUserMixin",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "tests.test_common.test_change_uniquifier": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate",
    "tests.test_utils.verify_token"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_custom_http_auth_realm": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "tests.test_common.base64",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_get_already_authenticated": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_get_already_authenticated_next": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_has_session_access": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_http_auth": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "tests.test_common.base64"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_http_auth_no_authentication": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_http_auth_no_authentication_json": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "get_message",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_http_auth_no_authorization": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "tests.test_common.base64"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_http_auth_no_authorization_json": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "tests.test_common.base64"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_http_auth_username": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "flask_security.uia_email_mapper",
    "tests.test_common.base64",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_inactive_forbids": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_inactive_forbids_basic": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tests.test_common.base64"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_inactive_forbids_token": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_inactive_user": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_invalid_http_auth_bad_password": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "tests.test_common.base64",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_invalid_http_auth_invalid_username": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "tests.test_common.base64",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_invalid_http_auth_invalid_username_json": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "get_message",
    "tests.test_common.base64",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_invalid_json_auth": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_invalid_user": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_json_not_dict": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "tests.test_common.json"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_login_form": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tests.test_common.re"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_login_info": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_login_view": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "tests.test_common.test_logout": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_logout_post": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_logout_with_next": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_logout_with_next_invalid": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_missing_session_access": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_multi_auth_basic": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "tests.test_common.base64"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_multi_auth_basic_invalid": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "tests.test_common.base64",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_multi_auth_session": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_multi_auth_token": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_multiple_role_required": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_no_get_auth_token": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "dict",
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_null_token_uniquifier": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_security.models.fsqla_v2.FsModels.set_db_info",
    "flask_sqlalchemy.SQLAlchemy",
    "tests.test_utils.hash_password",
    "tests.test_utils.json_authenticate",
    "tests.test_utils.verify_token"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_null_token_uniquifier.Role": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsRoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_common.test_null_token_uniquifier.User": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsUserMixin",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "tests.test_common.test_ok_json_auth": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_permissions_accepted": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_permissions_required": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_post_already_authenticated": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_remember_token": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_request_loader_does_not_fail_with_invalid_token": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "http.cookiejar.Cookie"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_roles_accepted": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tests.test_common.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_sending_auth_token_with_json": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_session_query": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "tests.test_utils.get_num_queries",
    "tests.test_utils.json_authenticate",
    "tests.test_utils.populate_data"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_token_auth_via_header_invalid_token": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "tests.test_common.test_token_auth_via_header_valid_token": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_token_auth_via_querystring_invalid_token": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "tests.test_common.test_token_auth_via_querystring_valid_token": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_token_query": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "tests.test_utils.get_num_queries",
    "tests.test_utils.json_authenticate",
    "tests.test_utils.populate_data"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_unauthenticated_role_required": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "get_message",
    "tests.test_common.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_unauthorized_access": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_unauthorized_access_with_referrer": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "get_message",
    "tests.test_common.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_unprovided_password": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_unprovided_username": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_unset_password": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.test_user_deleted_during_session_reverts_to_anonymous_user": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_common.uia_email_mapper": {
  "data": {
   "shadows": "flask_security.uia_email_mapper"
  },
  "type": "import"
 },
 "tests.test_common.verify_token": {
  "data": {
   "shadows": "tests.test_utils.verify_token"
  },
  "type": "import"
 },
 "tests.test_configuration": {
  "data": {},
  "type": "module"
 },
 "tests.test_configuration.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_configuration.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "tests.test_configuration.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_configuration.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_configuration.test_template_configuration": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tests.test_configuration.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_configuration.test_view_configuration": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "tests.test_configuration.base64",
    "tests.test_configuration.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable": {
  "data": {
   "symbols_in_volume": [
    "tests.test_confirmable.pytest"
   ]
  },
  "type": "module"
 },
 "tests.test_confirmable.ConfirmRegisterForm": {
  "data": {
   "shadows": "flask_security.ConfirmRegisterForm"
  },
  "type": "import"
 },
 "tests.test_confirmable.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_confirmable.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_confirmable.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "tests.test_confirmable.UserMixin": {
  "data": {
   "shadows": "flask_security.core.UserMixin"
  },
  "type": "import"
 },
 "tests.test_confirmable.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_confirmable.capture_flashes": {
  "data": {
   "shadows": "tests.test_utils.capture_flashes"
  },
  "type": "import"
 },
 "tests.test_confirmable.capture_registrations": {
  "data": {
   "shadows": "tests.test_utils.capture_registrations"
  },
  "type": "import"
 },
 "tests.test_confirmable.confirm_instructions_sent": {
  "data": {
   "shadows": "flask_security.signals.confirm_instructions_sent"
  },
  "type": "import"
 },
 "tests.test_confirmable.generate_confirmation_token": {
  "data": {
   "shadows": "flask_security.confirmable.generate_confirmation_token"
  },
  "type": "import"
 },
 "tests.test_confirmable.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_confirmable.parse_qsl": {
  "data": {
   "shadows": "urllib.parse.parse_qsl"
  },
  "type": "import"
 },
 "tests.test_confirmable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_confirmable.pytestmark": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.test_confirmable.test_auth_token_unconfirmed": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "all",
    "dict",
    "len",
    "tests.test_confirmable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_cannot_reset_password_when_email_is_not_confirmed": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_confirmable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirm_redirect": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_registrations"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirm_redirect_to_post_confirm": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "dict",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_registrations"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirmable_flag": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict",
    "flask_security.confirmable.generate_confirmation_token",
    "get_message",
    "hasattr",
    "len",
    "tests.test_confirmable.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_registrations",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirmable_flag.on_confirmed": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.user_confirmed.connect_via",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirmable_flag.on_instructions_sent": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.confirm_instructions_sent.connect_via",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirmation_different_user_when_logged_in": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_confirmable.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_registrations",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_confirmation_different_user_when_logged_in_no_auto": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_confirmable.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_registrations",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_email_conflict_for_confirmation_token": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_registrations"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_email_not_identity": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "dict",
    "flask_security.Security",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_registrations",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_email_not_identity.MyRegisterForm": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "flask_security.ConfirmRegisterForm",
    "flask_security.unique_identity_attribute",
    "wtforms.StringField",
    "wtforms.validators.data_required"
   ]
  },
  "type": "class"
 },
 "tests.test_confirmable.test_expired_confirmation_token": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_confirmable.pytest",
    "tests.test_confirmable.time",
    "tests.test_utils.capture_registrations"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_login_when_unconfirmed": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dict",
    "tests.test_confirmable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_no_auth_token": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "all",
    "dict",
    "len",
    "tests.test_confirmable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_requires_confirmation_error_redirect": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dict",
    "tests.test_confirmable.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_spa_get": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "dict",
    "len",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_registrations",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_spa_get_bad_token": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "all",
    "dict",
    "get_message",
    "len",
    "tests.test_confirmable.pytest",
    "tests.test_confirmable.time",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_registrations",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_two_factor": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "dict",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_registrations"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.test_two_factor_json": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "all",
    "dict",
    "get_message",
    "len",
    "tests.test_confirmable.pytest",
    "tests.test_utils.capture_registrations"
   ]
  },
  "type": "function"
 },
 "tests.test_confirmable.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_confirmable.unique_identity_attribute": {
  "data": {
   "shadows": "flask_security.unique_identity_attribute"
  },
  "type": "import"
 },
 "tests.test_confirmable.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "tests.test_confirmable.user_confirmed": {
  "data": {
   "shadows": "flask_security.signals.user_confirmed"
  },
  "type": "import"
 },
 "tests.test_confirmable.validators": {
  "data": {
   "shadows": "wtforms.validators"
  },
  "type": "import"
 },
 "tests.test_context_processors": {
  "data": {},
  "type": "module"
 },
 "tests.test_context_processors.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_context_processors.capture_reset_password_requests": {
  "data": {
   "shadows": "tests.test_utils.capture_reset_password_requests"
  },
  "type": "import"
 },
 "tests.test_context_processors.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_context_processors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_context_processors.test_context_processors": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dict",
    "tests.test_context_processors.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_reset_password_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.change_password": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.default_ctx_processor": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.forgot_password": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.login": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.mail": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.register": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.reset_password": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.send_confirmation": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "tests.test_context_processors.test_context_processors.verify": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "tests.test_context_processors.test_passwordless_login_context_processor": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tests.test_context_processors.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_context_processors.test_passwordless_login_context_processor.send_login": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "tests.test_context_processors.test_two_factor_context_processors": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "tests.test_context_processors.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_context_processors.test_two_factor_context_processors.default_ctx_processor": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "tests.test_context_processors.test_two_factor_context_processors.send_two_factor_setup": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "tests.test_context_processors.test_two_factor_context_processors.send_two_factor_token_validation": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "tests.test_context_processors.test_unified_signin_context_processors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dict",
    "tests.test_context_processors.pytest",
    "tests.test_unified_signin.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_context_processors.test_unified_signin_context_processors.default_ctx_processor": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "tests.test_context_processors.test_unified_signin_context_processors.setup_ctx": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "tests.test_context_processors.test_unified_signin_context_processors.signin_ctx": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "tests.test_context_processors.test_unified_signin_context_processors.verify_ctx": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "tests.test_context_processors.tf_authenticate": {
  "data": {
   "shadows": "tests.test_two_factor.tf_authenticate"
  },
  "type": "import"
 },
 "tests.test_context_processors.us_authenticate": {
  "data": {
   "shadows": "tests.test_unified_signin.authenticate"
  },
  "type": "import"
 },
 "tests.test_csrf": {
  "data": {},
  "type": "module"
 },
 "tests.test_csrf.CSRFProtect": {
  "data": {
   "shadows": "flask_wtf.CSRFProtect"
  },
  "type": "import"
 },
 "tests.test_csrf.MpValidateCsrf": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "tests.test_csrf.MpValidateCsrf.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tests.test_csrf.MpValidateCsrf",
    "tests.test_csrf.REAL_VALIDATE_CSRF"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.MpValidateCsrf.mp_validate_csrf": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "staticmethod",
    "tests.test_csrf.MpValidateCsrf",
    "tests.test_csrf.REAL_VALIDATE_CSRF"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.REAL_VALIDATE_CSRF": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.test_csrf._get_csrf_token": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "tests.test_csrf.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "tests.test_csrf.flask_wtf.csrf": {
  "data": {
   "shadows": "flask_wtf.csrf"
  },
  "type": "import"
 },
 "tests.test_csrf.get_session": {
  "data": {
   "shadows": "tests.test_utils.get_session"
  },
  "type": "import"
 },
 "tests.test_csrf.json_login": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "tests.test_csrf._get_csrf_token"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.json_logout": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "tests.test_csrf.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_csrf.mp_validate_csrf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "tests.test_csrf.MpValidateCsrf"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_csrf.test_cp_config": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "flask_wtf.CSRFProtect",
    "str",
    "tests.test_csrf.pytest",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_config2": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "tests.test_csrf.pytest",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_login_json_no_session": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf._get_csrf_token",
    "tests.test_csrf.mp_validate_csrf"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_reset": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf._get_csrf_token",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_with_token": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_with_token_cookie": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_with_token_cookie_expire": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest",
    "tests.test_csrf.time"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_cp_with_token_cookie_refresh": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_csrf_cookie": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_different_mechanisms": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_different_mechanisms_nc": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "dict",
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_login_csrf": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dict",
    "tests.test_csrf._get_csrf_token",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_login_csrf_double": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dict",
    "tests.test_csrf._get_csrf_token"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_login_csrf_json": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_utils.get_session"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_login_csrf_json_header": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.mp_validate_csrf"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_login_csrf_unauth_double": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_login_csrf_unauth_ok": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "dict",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_remember_login_csrf_cookie": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "flask_wtf.CSRFProtect",
    "tests.test_csrf.json_login",
    "tests.test_csrf.json_logout",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.test_reset": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "dict",
    "tests.test_csrf._get_csrf_token",
    "tests.test_csrf.mp_validate_csrf",
    "tests.test_csrf.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_csrf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_datastore": {
  "data": {},
  "type": "module"
 },
 "tests.test_datastore.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "tests.test_datastore.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_datastore.Datastore": {
  "data": {
   "shadows": "flask_security.datastore.Datastore"
  },
  "type": "import"
 },
 "tests.test_datastore.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.test_datastore.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.test_datastore.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_datastore.MockDatastore": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "flask_security.datastore.UserDatastore"
   ]
  },
  "type": "class"
 },
 "tests.test_datastore.MockDatastore.delete": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "tests.test_datastore.MockDatastore.put": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "tests.test_datastore.PonyUserDatastore": {
  "data": {
   "shadows": "tests.conftest.PonyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_datastore.Role": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "flask_security.RoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_datastore.RoleMixin": {
  "data": {
   "shadows": "flask_security.RoleMixin"
  },
  "type": "import"
 },
 "tests.test_datastore.SQLAlchemy": {
  "data": {
   "shadows": "flask_sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.test_datastore.SQLAlchemyUserDatastore": {
  "data": {
   "shadows": "flask_security.SQLAlchemyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_datastore.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_datastore.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "tests.test_datastore.UUID": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql.UUID"
  },
  "type": "import"
 },
 "tests.test_datastore.User": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "flask_security.UserMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_datastore.UserDatastore": {
  "data": {
   "shadows": "flask_security.datastore.UserDatastore"
  },
  "type": "import"
 },
 "tests.test_datastore.UserMixin": {
  "data": {
   "shadows": "flask_security.UserMixin"
  },
  "type": "import"
 },
 "tests.test_datastore._setup_realdb": {
  "data": {
   "shadows": "tests.conftest._setup_realdb"
  },
  "type": "import"
 },
 "tests.test_datastore._teardown_realdb": {
  "data": {
   "shadows": "tests.conftest._teardown_realdb"
  },
  "type": "import"
 },
 "tests.test_datastore.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_datastore.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "tests.test_datastore.get_num_queries": {
  "data": {
   "shadows": "tests.test_utils.get_num_queries"
  },
  "type": "import"
 },
 "tests.test_datastore.init_app_with_options": {
  "data": {
   "shadows": "tests.test_utils.init_app_with_options"
  },
  "type": "import"
 },
 "tests.test_datastore.is_sqlalchemy": {
  "data": {
   "shadows": "tests.test_utils.is_sqlalchemy"
  },
  "type": "import"
 },
 "tests.test_datastore.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "tests.test_datastore.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_datastore.skip": {
  "data": {
   "shadows": "pytest.skip"
  },
  "type": "import"
 },
 "tests.test_datastore.test_access_datastore_from_app_factory_pattern": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_access_datastore_from_factory": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_activate_returns_false_if_already_true": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "flask_security.datastore.UserDatastore",
    "tests.test_datastore.User"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_activate_user": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tests.test_datastore.MockDatastore",
    "tests.test_datastore.User"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_add_role_to_user": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_create_user_with_roles": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "tests.test_utils.get_num_queries",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_create_user_with_roles_and_permissions": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "hasattr",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_deactivate_returns_false_if_already_false": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "flask_security.datastore.UserDatastore",
    "tests.test_datastore.User"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_deactivate_user": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tests.test_datastore.MockDatastore",
    "tests.test_datastore.User"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_delete_user": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_find_role": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_find_user": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "tests.test_utils.get_num_queries",
    "tests.test_utils.init_app_with_options",
    "tests.test_utils.is_sqlalchemy"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_find_user_multikey": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "pytest.raises",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_get_permissions": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "hasattr",
    "set",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_init_app_kwargs_override_constructor_kwargs": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_modify_permissions": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "hasattr",
    "tests.test_datastore.datetime",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_modify_permissions_multi": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "hasattr",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_modify_permissions_unsupported": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "isinstance",
    "pytest.raises",
    "tests.conftest.PonyUserDatastore",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_permissions_iter": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "hasattr",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_permissions_strings": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "hasattr",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_toggle_active": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tests.test_datastore.MockDatastore",
    "tests.test_datastore.User"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_unimplemented_datastore_methods": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "flask_security.datastore.Datastore",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_unimplemented_user_datastore_methods": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "flask_security.datastore.UserDatastore",
    "pytest.raises"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_uuid": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_sqlalchemy.SQLAlchemy",
    "pytest.skip",
    "tests.conftest._setup_realdb",
    "tests.test_datastore.Role",
    "tests.test_datastore.User"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_uuid.Role": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "flask_security.RoleMixin",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.dialects.postgresql.UUID",
    "tests.test_datastore.uuid"
   ]
  },
  "type": "class"
 },
 "tests.test_datastore.test_uuid.Role.__hash__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.test_uuid.RolesUsers": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.dialects.postgresql.UUID"
   ]
  },
  "type": "class"
 },
 "tests.test_datastore.test_uuid.User": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "flask_security.UserMixin",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.String",
    "sqlalchemy.dialects.postgresql.UUID",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "tests.test_datastore.datetime",
    "tests.test_datastore.uuid"
   ]
  },
  "type": "class"
 },
 "tests.test_datastore.test_uuid.tear_down": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "tests.conftest._teardown_realdb"
   ]
  },
  "type": "function"
 },
 "tests.test_datastore.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "tests.test_entities": {
  "data": {},
  "type": "module"
 },
 "tests.test_entities.AnonymousUser": {
  "data": {
   "shadows": "flask_security.AnonymousUser"
  },
  "type": "import"
 },
 "tests.test_entities.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_entities.Role": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "flask_security.RoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_entities.Role.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "tests.test_entities.RoleMixin": {
  "data": {
   "shadows": "flask_security.RoleMixin"
  },
  "type": "import"
 },
 "tests.test_entities.User": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "flask_security.UserMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_entities.User.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "tests.test_entities.UserMixin": {
  "data": {
   "shadows": "flask_security.UserMixin"
  },
  "type": "import"
 },
 "tests.test_entities.fsqla": {
  "data": {
   "shadows": "flask_security.models.fsqla"
  },
  "type": "import"
 },
 "tests.test_entities.fsqla_v2": {
  "data": {
   "shadows": "flask_security.models.fsqla_v2"
  },
  "type": "import"
 },
 "tests.test_entities.get_user_attributes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dir",
    "object",
    "tests.test_entities.inspect",
    "type"
   ]
  },
  "type": "function"
 },
 "tests.test_entities.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tests.test_entities.test_anonymous_user_has_no_roles": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask_security.AnonymousUser"
   ]
  },
  "type": "function"
 },
 "tests.test_entities.test_fsqla_fields": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask_security.models.fsqla.FsRoleMixin",
    "flask_security.models.fsqla.FsUserMixin",
    "flask_security.models.fsqla_v2.FsRoleMixin",
    "flask_security.models.fsqla_v2.FsUserMixin",
    "isinstance",
    "sqlalchemy.Column",
    "tests.test_entities.get_user_attributes"
   ]
  },
  "type": "function"
 },
 "tests.test_entities.test_role_mixin_equal": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tests.test_entities.Role"
   ]
  },
  "type": "function"
 },
 "tests.test_entities.test_role_mixin_not_equal": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "tests.test_entities.Role"
   ]
  },
  "type": "function"
 },
 "tests.test_entities.test_user_mixin_has_role_with_string": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "tests.test_entities.Role",
    "tests.test_entities.User"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing": {
  "data": {},
  "type": "module"
 },
 "tests.test_hashing.argon2": {
  "data": {
   "shadows": "passlib.hash.argon2"
  },
  "type": "import"
 },
 "tests.test_hashing.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_hashing.django_pbkdf2_sha256": {
  "data": {
   "shadows": "passlib.hash.django_pbkdf2_sha256"
  },
  "type": "import"
 },
 "tests.test_hashing.get_hmac": {
  "data": {
   "shadows": "flask_security.utils.get_hmac"
  },
  "type": "import"
 },
 "tests.test_hashing.hash_password": {
  "data": {
   "shadows": "flask_security.utils.hash_password"
  },
  "type": "import"
 },
 "tests.test_hashing.init_app_with_options": {
  "data": {
   "shadows": "tests.test_utils.init_app_with_options"
  },
  "type": "import"
 },
 "tests.test_hashing.pbkdf2_sha256": {
  "data": {
   "shadows": "passlib.hash.pbkdf2_sha256"
  },
  "type": "import"
 },
 "tests.test_hashing.plaintext": {
  "data": {
   "shadows": "passlib.hash.plaintext"
  },
  "type": "import"
 },
 "tests.test_hashing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_hashing.raises": {
  "data": {
   "shadows": "pytest.raises"
  },
  "type": "import"
 },
 "tests.test_hashing.test_argon2_speed": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "print",
    "tests.test_hashing.pytest",
    "tests.test_hashing.timeit",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_bcrypt_speed": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "print",
    "tests.test_hashing.pytest",
    "tests.test_hashing.timeit",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_login_with_bcrypt_enabled": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tests.test_utils.authenticate",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_missing_hash_salt_option": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RuntimeError",
    "pytest.raises",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_argon2": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "flask_security.utils.get_hmac",
    "flask_security.utils.hash_password",
    "flask_security.utils.verify_password",
    "passlib.hash.argon2.hash",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_argon2_opts": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "flask_security.utils.verify_password",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_backward_compatibility": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "flask_security.utils.verify_password",
    "passlib.hash.plaintext.hash",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_bcrypt_double_hash": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "flask_security.utils.verify_password",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_bcrypt_rounds_too_low": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "pytest.raises",
    "str",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_bcrypt_single_hash": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "flask_security.utils.verify_password",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.test_verify_password_single_hash_list": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask_security.utils.get_hmac",
    "flask_security.utils.hash_password",
    "flask_security.utils.verify_password",
    "passlib.hash.django_pbkdf2_sha256.hash",
    "passlib.hash.pbkdf2_sha256.hash",
    "passlib.hash.plaintext.hash",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_hashing.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "tests.test_hashing.verify_password": {
  "data": {
   "shadows": "flask_security.utils.verify_password"
  },
  "type": "import"
 },
 "tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "tests.test_misc.ChangePasswordForm": {
  "data": {
   "shadows": "flask_security.forms.ChangePasswordForm"
  },
  "type": "import"
 },
 "tests.test_misc.ConfirmRegisterForm": {
  "data": {
   "shadows": "flask_security.forms.ConfirmRegisterForm"
  },
  "type": "import"
 },
 "tests.test_misc.EmailField": {
  "data": {
   "shadows": "flask_security.forms.EmailField"
  },
  "type": "import"
 },
 "tests.test_misc.ForgotPasswordForm": {
  "data": {
   "shadows": "flask_security.forms.ForgotPasswordForm"
  },
  "type": "import"
 },
 "tests.test_misc.LoginForm": {
  "data": {
   "shadows": "flask_security.forms.LoginForm"
  },
  "type": "import"
 },
 "tests.test_misc.MailUtil": {
  "data": {
   "shadows": "flask_security.MailUtil"
  },
  "type": "import"
 },
 "tests.test_misc.MethodView": {
  "data": {
   "shadows": "flask.views.MethodView"
  },
  "type": "import"
 },
 "tests.test_misc.PasswordField": {
  "data": {
   "shadows": "flask_security.forms.PasswordField"
  },
  "type": "import"
 },
 "tests.test_misc.PasswordlessLoginForm": {
  "data": {
   "shadows": "flask_security.forms.PasswordlessLoginForm"
  },
  "type": "import"
 },
 "tests.test_misc.RegisterForm": {
  "data": {
   "shadows": "flask_security.forms.RegisterForm"
  },
  "type": "import"
 },
 "tests.test_misc.Required": {
  "data": {
   "shadows": "flask_security.forms.Required"
  },
  "type": "import"
 },
 "tests.test_misc.ResetPasswordForm": {
  "data": {
   "shadows": "flask_security.forms.ResetPasswordForm"
  },
  "type": "import"
 },
 "tests.test_misc.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "tests.test_misc.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_misc.SendConfirmationForm": {
  "data": {
   "shadows": "flask_security.forms.SendConfirmationForm"
  },
  "type": "import"
 },
 "tests.test_misc.StringField": {
  "data": {
   "shadows": "flask_security.forms.StringField"
  },
  "type": "import"
 },
 "tests.test_misc.abort": {
  "data": {
   "shadows": "flask.abort"
  },
  "type": "import"
 },
 "tests.test_misc.auth_required": {
  "data": {
   "shadows": "flask_security.auth_required"
  },
  "type": "import"
 },
 "tests.test_misc.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_misc.capture_flashes": {
  "data": {
   "shadows": "tests.test_utils.capture_flashes"
  },
  "type": "import"
 },
 "tests.test_misc.capture_reset_password_requests": {
  "data": {
   "shadows": "tests.test_utils.capture_reset_password_requests"
  },
  "type": "import"
 },
 "tests.test_misc.check_xlation": {
  "data": {
   "shadows": "tests.test_utils.check_xlation"
  },
  "type": "import"
 },
 "tests.test_misc.email_required": {
  "data": {
   "shadows": "flask_security.forms.email_required"
  },
  "type": "import"
 },
 "tests.test_misc.email_validator": {
  "data": {
   "shadows": "flask_security.forms.email_validator"
  },
  "type": "import"
 },
 "tests.test_misc.encode_string": {
  "data": {
   "shadows": "flask_security.utils.encode_string"
  },
  "type": "import"
 },
 "tests.test_misc.get_request_attr": {
  "data": {
   "shadows": "flask_security.utils.get_request_attr"
  },
  "type": "import"
 },
 "tests.test_misc.hash_data": {
  "data": {
   "shadows": "flask_security.utils.hash_data"
  },
  "type": "import"
 },
 "tests.test_misc.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "tests.test_misc.init_app_with_options": {
  "data": {
   "shadows": "tests.test_utils.init_app_with_options"
  },
  "type": "import"
 },
 "tests.test_misc.json_authenticate": {
  "data": {
   "shadows": "tests.test_utils.json_authenticate"
  },
  "type": "import"
 },
 "tests.test_misc.json_error_response": {
  "data": {
   "shadows": "flask_security.utils.json_error_response"
  },
  "type": "import"
 },
 "tests.test_misc.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_misc.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "tests.test_misc.populate_data": {
  "data": {
   "shadows": "tests.test_utils.populate_data"
  },
  "type": "import"
 },
 "tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_misc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_misc.render_template_string": {
  "data": {
   "shadows": "flask.render_template_string"
  },
  "type": "import"
 },
 "tests.test_misc.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "tests.test_misc.roles_required": {
  "data": {
   "shadows": "flask_security.roles_required"
  },
  "type": "import"
 },
 "tests.test_misc.send_mail": {
  "data": {
   "shadows": "flask_security.utils.send_mail"
  },
  "type": "import"
 },
 "tests.test_misc.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "tests.test_misc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.test_misc.test_authn_freshness": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "get_message",
    "tests.test_misc.time",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_flashes"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness.myspecialview": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness.myview": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_callable": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_callable.myview": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "datetime.timedelta",
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_grace": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "tests.test_misc.time",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_grace.myspecialview": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "datetime.timedelta",
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_grace.myview": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "datetime.timedelta",
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_handler": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "tests.test_misc.time",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_handler.my_reauthn": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "datetime.timedelta",
    "flask.abort",
    "flask.request",
    "flask_security.utils.json_error_response"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_handler.myspecialview": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_handler.myview": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_nc": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "tests.test_utils.json_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_freshness_nc.myview": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_via": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_authn_via.myview": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "flask.Response",
    "flask_security.auth_required",
    "flask_security.utils.get_request_attr"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_basic_custom_forms": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dict",
    "flask_security.Security",
    "tests.test_misc.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_reset_password_requests",
    "tests.test_utils.populate_data"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_basic_custom_forms.MyChangePasswordForm": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "flask_security.forms.ChangePasswordForm",
    "flask_security.forms.PasswordField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_basic_custom_forms.MyForgotPasswordForm": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "flask_security.forms.EmailField",
    "flask_security.forms.ForgotPasswordForm",
    "flask_security.forms.email_required",
    "flask_security.forms.email_validator",
    "flask_security.forms.valid_user_email"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_basic_custom_forms.MyLoginForm": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "flask_security.forms.EmailField",
    "flask_security.forms.LoginForm"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_basic_custom_forms.MyRegisterForm": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "flask_security.forms.EmailField",
    "flask_security.forms.RegisterForm"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_basic_custom_forms.MyResetPasswordForm": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "flask_security.forms.ResetPasswordForm",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_breached": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "flask_security.Security",
    "len",
    "tests.test_misc.pytest",
    "tests.test_misc.sys",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_breached_cnt": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "flask_security.Security",
    "len",
    "tests.test_misc.pytest",
    "tests.test_misc.sys",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_breached_real": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "flask_security.Security",
    "len",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_change_hash_type": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "dict",
    "flask_security.Security",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_confirmable_custom_form": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "flask_security.Security",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_confirmable_custom_form.MyRegisterForm": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "flask_security.forms.ConfirmRegisterForm",
    "flask_security.forms.EmailField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_confirmable_custom_form.MySendConfirmationForm": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "flask_security.forms.EmailField",
    "flask_security.forms.SendConfirmationForm"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_custom_forms_via_config": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "flask_security.Security",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_custom_forms_via_config.MyLoginForm": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "flask_security.forms.LoginForm",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_custom_forms_via_config.MyRegisterForm": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "flask_security.forms.RegisterForm",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_direct_decorator": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_direct_decorator.domyview": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "flask.Response"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_direct_decorator.myview": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "flask_security.roles_required"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_flash_messages_off": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "get_message",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_form_labels": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "flask_security.Security",
    "flask_security.forms.ChangePasswordForm",
    "flask_security.forms.LoginForm",
    "flask_security.forms.RegisterForm",
    "str",
    "tests.test_utils.check_xlation"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_form_required": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_form_required.MyLoginForm": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "flask_security.forms.LoginForm",
    "flask_security.forms.Required",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_form_required_local_message": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_form_required_local_message.MyLoginForm": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "flask_security.forms.LoginForm",
    "flask_security.forms.Required",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_hash_data": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "flask_security.utils.hash_data",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_invalid_hash_scheme": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "tests.test_misc.pytest",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_json_error_response_dict": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "flask_security.utils.json_error_response"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_json_error_response_string": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "flask_security.utils.json_error_response"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_json_error_response_typeerror": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "TypeError",
    "flask_security.utils.json_error_response",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_legacy_hash": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "flask_security.utils.encode_string",
    "flask_security.utils.hash_data",
    "tests.test_misc.hashlib",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_logout_methods": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tests.test_misc.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_logout_methods_none": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "tests.test_utils.authenticate",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_method_view": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_method_view.MyView": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "flask.views.MethodView",
    "flask_security.auth_required"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_method_view.MyView.get": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "flask.render_template_string"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_my_mail_util": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dict",
    "tests.test_misc.pytest",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_my_mail_util.MyMailUtil": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask_security.MailUtil"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_my_mail_util.MyMailUtil.send_mail": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_no_email_sender": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "TestUser",
    "flask_security.Security",
    "flask_security.utils.send_mail",
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_no_email_sender.TestUser": {
  "data": {
   "lineno": 422
  },
  "type": "class"
 },
 "tests.test_misc.test_no_email_sender.TestUser.__init__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "tests.test_misc.test_password_unicode_password_salt": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "tests.test_misc.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_passwordless_and_two_factor_configuration_mismatch": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "tests.test_misc.pytest",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_passwordless_custom_form": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_passwordless_custom_form.MyPasswordlessLoginForm": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "flask_security.forms.EmailField",
    "flask_security.forms.PasswordlessLoginForm"
   ]
  },
  "type": "class"
 },
 "tests.test_misc.test_per_request_xlate": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "dict",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_per_request_xlate.get_locale": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "flask.request.accept_languages.best",
    "flask.request.args.get",
    "flask.session",
    "flask.session.get"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_phone_util_override": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "flask_security.Security",
    "flask_security.utils.uia_phone_mapper"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_phone_util_override.MyPhoneUtil": {
  "data": {
   "lineno": 673
  },
  "type": "class"
 },
 "tests.test_misc.test_phone_util_override.MyPhoneUtil.__init__": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "tests.test_misc.test_phone_util_override.MyPhoneUtil.get_canonical_form": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "tests.test_misc.test_phone_util_override.MyPhoneUtil.validate_phone_number": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "tests.test_misc.test_post_security_with_application_root": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_post_security_with_application_root_and_views": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.init_app_with_options"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_register_blueprint_flag": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "flask_security.Security"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_set_unauthorized_handler": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_set_unauthorized_handler.unauthorized": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "tests.test_misc.test_verify_fresh": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_misc.re",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_flashes"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_verify_fresh_json": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_verify_hash": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "flask_security.utils.encode_string",
    "flask_security.utils.hash_data",
    "flask_security.utils.verify_hash",
    "tests.test_misc.hashlib"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_verify_next": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "dict",
    "tests.test_misc.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_verify_pwd_json": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "dict",
    "tests.test_misc.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_without_babel": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ValueError",
    "tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.test_xlation": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "tests.test_utils.authenticate",
    "tests.test_utils.check_xlation"
   ]
  },
  "type": "function"
 },
 "tests.test_misc.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_misc.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.test_misc.uia_phone_mapper": {
  "data": {
   "shadows": "flask_security.utils.uia_phone_mapper"
  },
  "type": "import"
 },
 "tests.test_misc.valid_user_email": {
  "data": {
   "shadows": "flask_security.forms.valid_user_email"
  },
  "type": "import"
 },
 "tests.test_misc.verify_hash": {
  "data": {
   "shadows": "flask_security.utils.verify_hash"
  },
  "type": "import"
 },
 "tests.test_passwordless": {
  "data": {
   "symbols_in_volume": [
    "tests.test_passwordless.pytest"
   ]
  },
  "type": "module"
 },
 "tests.test_passwordless.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_passwordless.UserMixin": {
  "data": {
   "shadows": "flask_security.core.UserMixin"
  },
  "type": "import"
 },
 "tests.test_passwordless.capture_flashes": {
  "data": {
   "shadows": "tests.test_utils.capture_flashes"
  },
  "type": "import"
 },
 "tests.test_passwordless.capture_passwordless_login_requests": {
  "data": {
   "shadows": "tests.test_utils.capture_passwordless_login_requests"
  },
  "type": "import"
 },
 "tests.test_passwordless.login_instructions_sent": {
  "data": {
   "shadows": "flask_security.signals.login_instructions_sent"
  },
  "type": "import"
 },
 "tests.test_passwordless.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_passwordless.parse_qsl": {
  "data": {
   "shadows": "urllib.parse.parse_qsl"
  },
  "type": "import"
 },
 "tests.test_passwordless.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_passwordless.pytestmark": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tests.test_passwordless.test_expired_login_token": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_passwordless.pytest",
    "tests.test_passwordless.time",
    "tests.test_utils.capture_passwordless_login_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_passwordless.test_spa_get": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dict",
    "len",
    "tests.test_passwordless.pytest",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_passwordless_login_requests",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_passwordless.test_spa_get_bad_token": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "all",
    "dict",
    "get_message",
    "len",
    "tests.test_passwordless.pytest",
    "tests.test_passwordless.time",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_passwordless_login_requests",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_passwordless.test_trackable_flag": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "len",
    "tests.test_utils.capture_passwordless_login_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_passwordless.test_trackable_flag.on_instructions_sent": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.login_instructions_sent.connect_via",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_passwordless.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_passwordless.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "tests.test_recoverable": {
  "data": {
   "symbols_in_volume": [
    "tests.test_recoverable.pytest"
   ]
  },
  "type": "module"
 },
 "tests.test_recoverable.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_recoverable.LoginForm": {
  "data": {
   "shadows": "flask_security.forms.LoginForm"
  },
  "type": "import"
 },
 "tests.test_recoverable.UserMixin": {
  "data": {
   "shadows": "flask_security.core.UserMixin"
  },
  "type": "import"
 },
 "tests.test_recoverable.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_recoverable.capture_flashes": {
  "data": {
   "shadows": "tests.test_utils.capture_flashes"
  },
  "type": "import"
 },
 "tests.test_recoverable.capture_reset_password_requests": {
  "data": {
   "shadows": "tests.test_utils.capture_reset_password_requests"
  },
  "type": "import"
 },
 "tests.test_recoverable.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_recoverable.parse_qsl": {
  "data": {
   "shadows": "urllib.parse.parse_qsl"
  },
  "type": "import"
 },
 "tests.test_recoverable.password_reset": {
  "data": {
   "shadows": "flask_security.signals.password_reset"
  },
  "type": "import"
 },
 "tests.test_recoverable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_recoverable.pytestmark": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.test_recoverable.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_recoverable.reset_password_instructions_sent": {
  "data": {
   "shadows": "flask_security.signals.reset_password_instructions_sent"
  },
  "type": "import"
 },
 "tests.test_recoverable.test_bad_reset_token": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_custom_reset_templates": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "dict",
    "tests.test_recoverable.pytest",
    "tests.test_utils.capture_reset_password_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_custom_reset_url": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "tests.test_recoverable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_easy_password": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "dict",
    "tests.test_recoverable.pytest",
    "tests.test_utils.capture_reset_password_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_email_normalization": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "dict",
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_expired_reset_token": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "len",
    "tests.test_recoverable.pytest",
    "tests.test_recoverable.time",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_reset_password_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_login_form_description": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "flask_security.forms.LoginForm",
    "sqlalchemy_app"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recover_invalidates_session": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "all",
    "dict",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_reset_password_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recoverable_flag": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "len",
    "tests.test_recoverable.re",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_reset_password_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recoverable_flag.on_instructions_sent": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.reset_password_instructions_sent.connect_via",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recoverable_flag.on_password_reset": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flask_security.signals.password_reset.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recoverable_json": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "all",
    "dict",
    "get_message",
    "len",
    "tests.test_recoverable.pytest",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_reset_password_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recoverable_json.on_instructions_sent": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "flask_security.signals.reset_password_instructions_sent.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_recoverable_json.on_password_reset": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "flask_security.signals.password_reset.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_requires_confirmation_error_redirect": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dict",
    "tests.test_recoverable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_reset_inactive": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "dict",
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_reset_passwordless_user": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_utils.capture_reset_password_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_reset_token_deleted_user": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_utils.capture_reset_password_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_spa_get": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "dict",
    "tests.test_recoverable.pytest",
    "tests.test_utils.capture_reset_password_requests",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_spa_get_bad_token": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "all",
    "dict",
    "get_message",
    "len",
    "tests.test_recoverable.pytest",
    "tests.test_recoverable.time",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.capture_reset_password_requests",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.test_used_reset_token": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_utils.capture_reset_password_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_recoverable.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_recoverable.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "tests.test_registerable": {
  "data": {
   "symbols_in_volume": [
    "tests.test_registerable.pytest"
   ]
  },
  "type": "module"
 },
 "tests.test_registerable.ConfirmRegisterForm": {
  "data": {
   "shadows": "flask_security.forms.ConfirmRegisterForm"
  },
  "type": "import"
 },
 "tests.test_registerable.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_registerable.RegisterForm": {
  "data": {
   "shadows": "flask_security.forms.RegisterForm"
  },
  "type": "import"
 },
 "tests.test_registerable.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_registerable.StringField": {
  "data": {
   "shadows": "flask_security.forms.StringField"
  },
  "type": "import"
 },
 "tests.test_registerable.UserMixin": {
  "data": {
   "shadows": "flask_security.core.UserMixin"
  },
  "type": "import"
 },
 "tests.test_registerable._default_field_labels": {
  "data": {
   "shadows": "flask_security.forms._default_field_labels"
  },
  "type": "import"
 },
 "tests.test_registerable.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_registerable.check_xlation": {
  "data": {
   "shadows": "tests.test_utils.check_xlation"
  },
  "type": "import"
 },
 "tests.test_registerable.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "tests.test_registerable.localize_callback": {
  "data": {
   "shadows": "flask_security.utils.localize_callback"
  },
  "type": "import"
 },
 "tests.test_registerable.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_registerable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_registerable.pytestmark": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.test_registerable.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_registerable.test_allow_null_password": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_allow_null_password_nologin": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_registerable.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_custom_register_template": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_custom_register_url": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "dict",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_disable_register_emails": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "dict",
    "len",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_easy_password": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "dict",
    "flask_security.Security",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_easy_password.MyRegisterForm": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "flask_security.forms.ConfirmRegisterForm",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_registerable.test_email_normalization": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_email_normalization_options": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_form_data_is_passed_to_user_registered_signal": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dict",
    "flask_security.Security",
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_form_data_is_passed_to_user_registered_signal.MyRegisterForm": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "flask_security.forms.RegisterForm",
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_registerable.test_form_data_is_passed_to_user_registered_signal.on_user_registered": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.user_registered.connect_via",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_nullable_username": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "dict",
    "flask_security.Security",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_nullable_username.MyRegisterForm": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "NullableStringField",
    "flask_security.forms.ConfirmRegisterForm"
   ]
  },
  "type": "class"
 },
 "tests.test_registerable.test_nullable_username.NullableStringField": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "flask_security.forms.StringField"
   ]
  },
  "type": "class"
 },
 "tests.test_registerable.test_nullable_username.NullableStringField.process_formdata": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "tests.test_registerable.test_registerable_flag": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "all",
    "dict",
    "get_message",
    "len",
    "tests.test_registerable.pytest",
    "tests.test_registerable.re",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_registerable_flag.on_user_registered": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask.Flask",
    "flask_security.core.UserMixin",
    "flask_security.signals.user_registered.connect_via",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_required_password": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_required_password_confirm": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "get_message"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_two_factor": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "dict",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_two_factor_json": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_registerable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.test_xlation": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flask_security.forms._default_field_labels",
    "flask_security.utils.localize_callback",
    "get_message_local",
    "len",
    "str",
    "tests.test_registerable.jinja2",
    "tests.test_registerable.pytest",
    "tests.test_utils.check_xlation"
   ]
  },
  "type": "function"
 },
 "tests.test_registerable.user_registered": {
  "data": {
   "shadows": "flask_security.signals.user_registered"
  },
  "type": "import"
 },
 "tests.test_response": {
  "data": {},
  "type": "module"
 },
 "tests.test_response._my_json": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "tests.test_response.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_response.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "tests.test_response.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_response.test_default_unauthn": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "tests.test_response.test_default_unauthn_bp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tests.test_response.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_default_unauthn_myjson": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "tests.test_response.test_default_unauthn_myjson.my_json": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dict",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_default_unauthz": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_default_unauthz_myjson": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_default_unauthz_myjson.my_json": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "dict",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthn_handler": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthn_handler.my_unauthn": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthz_handler": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthz_handler.my_unauthz": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "dict",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthz_handler_exc": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthz_handler_exc.error_handler": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_my_unauthz_handler_exc.my_unauthz": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_render_json": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "tests.test_response.test_render_json.my_json": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "flask.jsonify"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_render_json2": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "tests.test_response._my_json"
   ]
  },
  "type": "function"
 },
 "tests.test_response.test_render_json_logout": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tests.test_response._my_json"
   ]
  },
  "type": "function"
 },
 "tests.test_trackable": {
  "data": {
   "symbols_in_volume": [
    "tests.test_trackable.pytest"
   ]
  },
  "type": "module"
 },
 "tests.test_trackable.ProxyFix": {
  "data": {
   "shadows": "werkzeug.middleware.proxy_fix.ProxyFix"
  },
  "type": "import"
 },
 "tests.test_trackable._client_ip": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "tests.test_trackable.after_this_request": {
  "data": {
   "shadows": "flask.after_this_request"
  },
  "type": "import"
 },
 "tests.test_trackable.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_trackable.login_user": {
  "data": {
   "shadows": "flask_security.login_user"
  },
  "type": "import"
 },
 "tests.test_trackable.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_trackable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_trackable.pytestmark": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.test_trackable.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "tests.test_trackable.test_trackable_flag": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tests.test_trackable._client_ip",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout",
    "werkzeug.middleware.proxy_fix.ProxyFix"
   ]
  },
  "type": "function"
 },
 "tests.test_trackable.test_trackable_using_login_user": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict",
    "tests.test_trackable._client_ip",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout",
    "werkzeug.middleware.proxy_fix.ProxyFix"
   ]
  },
  "type": "function"
 },
 "tests.test_trackable.test_trackable_using_login_user.login_custom": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask.redirect",
    "flask_security.login_user"
   ]
  },
  "type": "function"
 },
 "tests.test_trackable.test_trackable_using_login_user.login_custom.save_user": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "flask.after_this_request"
   ]
  },
  "type": "function"
 },
 "tests.test_trackable.test_trackable_with_multiple_ips_in_headers": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "tests.test_trackable._client_ip",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout",
    "werkzeug.middleware.proxy_fix.ProxyFix"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor": {
  "data": {
   "symbols_in_volume": [
    "flask_security.SmsSenderFactory.senders",
    "tests.test_two_factor.pytest",
    "tests.test_utils.SmsBadSender",
    "tests.test_utils.SmsTestSender"
   ]
  },
  "type": "module"
 },
 "tests.test_two_factor.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "tests.test_two_factor.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.test_two_factor.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.test_two_factor.SQLAlchemy": {
  "data": {
   "shadows": "flask_sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.test_two_factor.SQLAlchemyUserDatastore": {
  "data": {
   "shadows": "flask_security.SQLAlchemyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_two_factor.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_two_factor.SmsBadSender": {
  "data": {
   "shadows": "tests.test_utils.SmsBadSender"
  },
  "type": "import"
 },
 "tests.test_two_factor.SmsSenderFactory": {
  "data": {
   "shadows": "flask_security.SmsSenderFactory"
  },
  "type": "import"
 },
 "tests.test_two_factor.SmsTestSender": {
  "data": {
   "shadows": "tests.test_utils.SmsTestSender"
  },
  "type": "import"
 },
 "tests.test_two_factor.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "tests.test_two_factor.TOTP": {
  "data": {
   "shadows": "passlib.totp.TOTP"
  },
  "type": "import"
 },
 "tests.test_two_factor.UserMixin": {
  "data": {
   "shadows": "flask_security.UserMixin"
  },
  "type": "import"
 },
 "tests.test_two_factor.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_two_factor.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.test_two_factor.capture_flashes": {
  "data": {
   "shadows": "tests.test_utils.capture_flashes"
  },
  "type": "import"
 },
 "tests.test_two_factor.fsqla": {
  "data": {
   "shadows": "flask_security.models.fsqla_v2"
  },
  "type": "import"
 },
 "tests.test_two_factor.get_session": {
  "data": {
   "shadows": "tests.test_utils.get_session"
  },
  "type": "import"
 },
 "tests.test_two_factor.hash_password": {
  "data": {
   "shadows": "flask_security.hash_password"
  },
  "type": "import"
 },
 "tests.test_two_factor.identity_changed": {
  "data": {
   "shadows": "flask_principal.identity_changed"
  },
  "type": "import"
 },
 "tests.test_two_factor.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_two_factor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_two_factor.pytestmark": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tests.test_two_factor.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_two_factor.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.test_two_factor.reset_password_instructions_sent": {
  "data": {
   "shadows": "flask_security.reset_password_instructions_sent"
  },
  "type": "import"
 },
 "tests.test_two_factor.test_admin_setup_reset": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.get_session",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_always_validate": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "dict",
    "next",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_authr_identity": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "dict",
    "flask_security.uia_email_mapper",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_authr_identity_num": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "dict",
    "flask_security.uia_email_mapper",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_bad_sender": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.capture_flashes"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_change_uniquifier_invalidates_cookie": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_custom_urls": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "tests.test_two_factor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_datastore": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_in_session",
    "tests.test_utils.get_session"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_do_not_remember_tf_validity": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_email_salutation": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "dict",
    "flask_security.uia_email_mapper",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_evil_validate": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "dict",
    "tests.test_utils.authenticate",
    "tests.test_utils.get_session"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_evil_validate.on_identity_changed": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "flask_principal.identity_changed.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_json": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_in_session",
    "tests.test_utils.get_session",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_just_authenticator": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_no_opt_out": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_two_factor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_no_sms": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "dict",
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_security.hash_password",
    "flask_security.models.fsqla_v2.FsModels.set_db_info",
    "flask_sqlalchemy.SQLAlchemy",
    "tests.test_two_factor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_no_sms.Role": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsRoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_two_factor.test_no_sms.User": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "flask_security.UserMixin",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "tests.test_two_factor.test_opt_in": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "len",
    "tests.test_two_factor.tf_in_session",
    "tests.test_utils.authenticate",
    "tests.test_utils.get_session",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_opt_in.on_identity_changed": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "flask_principal.identity_changed.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_opt_out_json": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.authenticate",
    "tests.test_utils.get_session",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_recoverable": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_two_factor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_recoverable.on_instructions_sent": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "flask_security.reset_password_instructions_sent.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_replace_send_code": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "dict",
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_security.hash_password",
    "flask_security.models.fsqla_v2.FsModels.set_db_info",
    "flask_sqlalchemy.SQLAlchemy",
    "tests.test_two_factor.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_replace_send_code.Role": {
  "data": {
   "lineno": 1144,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsRoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_two_factor.test_replace_send_code.User": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsUserMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_two_factor.test_replace_send_code.User.tf_send_security_token": {
  "data": {
   "lineno": 1150
  },
  "type": "function"
 },
 "tests.test_two_factor.test_rescue_json": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.re",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_setup_bad_phone": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_in_session",
    "tests.test_utils.get_session"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_setup_nofresh": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "datetime.timedelta",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_tf_expired_cookie": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_tf_reset_invalidates_cookie": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "dict",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.tf_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_totp_secret_generation": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_utils.authenticate",
    "tests.test_utils.get_session",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_totp_secret_generation.on_identity_changed": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "flask_principal.identity_changed.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_two_factor_flag": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "passlib.totp.TOTP",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.re",
    "tests.test_two_factor.tf_in_session",
    "tests.test_utils.get_session",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_two_factor_two_factor_setup_anonymous": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_two_factor.pytest",
    "tests.test_utils.capture_flashes"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_username_salutation": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "dict",
    "flask_security.uia_email_mapper",
    "tests.test_two_factor.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_verify": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "get_message",
    "tests.test_two_factor.pytest",
    "tests.test_two_factor.re",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.test_verify_json": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "get_message",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.tf_authenticate": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.tf_in_session": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "tests.test_two_factor.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.test_two_factor.uia_email_mapper": {
  "data": {
   "shadows": "flask_security.uia_email_mapper"
  },
  "type": "import"
 },
 "tests.test_unified_signin": {
  "data": {
   "symbols_in_volume": [
    "flask_security.SmsSenderFactory.senders",
    "flask_security.uia_email_mapper",
    "flask_security.uia_phone_mapper",
    "tests.test_unified_signin.pytest",
    "tests.test_utils.SmsBadSender",
    "tests.test_utils.SmsTestSender"
   ]
  },
  "type": "module"
 },
 "tests.test_unified_signin.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.test_unified_signin.SQLAlchemy": {
  "data": {
   "shadows": "flask_sqlalchemy.SQLAlchemy"
  },
  "type": "import"
 },
 "tests.test_unified_signin.SQLAlchemyUserDatastore": {
  "data": {
   "shadows": "flask_security.SQLAlchemyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_unified_signin.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_unified_signin.SmsBadSender": {
  "data": {
   "shadows": "tests.test_utils.SmsBadSender"
  },
  "type": "import"
 },
 "tests.test_unified_signin.SmsSenderFactory": {
  "data": {
   "shadows": "flask_security.SmsSenderFactory"
  },
  "type": "import"
 },
 "tests.test_unified_signin.SmsTestSender": {
  "data": {
   "shadows": "tests.test_utils.SmsTestSender"
  },
  "type": "import"
 },
 "tests.test_unified_signin.TOTP": {
  "data": {
   "shadows": "passlib.totp.TOTP"
  },
  "type": "import"
 },
 "tests.test_unified_signin.UIA_EMAIL_PHONE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "tests.test_unified_signin.UserMixin": {
  "data": {
   "shadows": "flask_security.UserMixin"
  },
  "type": "import"
 },
 "tests.test_unified_signin.authenticate": {
  "data": {
   "shadows": "tests.test_utils.authenticate"
  },
  "type": "import"
 },
 "tests.test_unified_signin.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "tests.test_unified_signin.capture_flashes": {
  "data": {
   "shadows": "tests.test_utils.capture_flashes"
  },
  "type": "import"
 },
 "tests.test_unified_signin.capture_reset_password_requests": {
  "data": {
   "shadows": "tests.test_utils.capture_reset_password_requests"
  },
  "type": "import"
 },
 "tests.test_unified_signin.capture_send_code_requests": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "flask_security.us_security_token_sent.connect",
    "flask_security.us_security_token_sent.disconnect"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.capture_send_code_requests._on": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "all",
    "flask.Flask",
    "flask_security.UserMixin",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "tests.test_unified_signin.fsqla": {
  "data": {
   "shadows": "flask_security.models.fsqla_v2"
  },
  "type": "import"
 },
 "tests.test_unified_signin.get_identity_attributes": {
  "data": {
   "shadows": "flask_security.utils.get_identity_attributes"
  },
  "type": "import"
 },
 "tests.test_unified_signin.logout": {
  "data": {
   "shadows": "tests.test_utils.logout"
  },
  "type": "import"
 },
 "tests.test_unified_signin.parse_qsl": {
  "data": {
   "shadows": "urllib.parse.parse_qsl"
  },
  "type": "import"
 },
 "tests.test_unified_signin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_unified_signin.pytestmark": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tests.test_unified_signin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_unified_signin.set_phone": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_admin_setup_reset": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "len",
    "tests.test_unified_signin.set_phone"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_admin_setup_user_reset": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "len",
    "tests.test_unified_signin.set_phone",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_bad_sender": {
  "data": {
   "lineno": 1361,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.set_phone",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_can_add_password": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.capture_reset_password_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_confirmable": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.capture_send_code_requests",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_get_already_authenticated": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_get_already_authenticated_next": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_invalid_method": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_invalid_method_setup": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_next": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "dict",
    "tests.test_unified_signin.capture_send_code_requests",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_only_passwd": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_passwd_and_authenticator": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "dict",
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_post_already_authenticated": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_qrcode": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "passlib.totp.TOTP",
    "tests.test_unified_signin.re",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_regular_login": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "dict",
    "flask_security.uia_email_mapper",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_regular_login.authned": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "flask_security.user_authenticated.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_regular_login_disallowed": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.UIA_EMAIL_PHONE",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_replace_send_code": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "dict",
    "flask_security.SQLAlchemyUserDatastore",
    "flask_security.Security",
    "flask_security.models.fsqla_v2.FsModels.set_db_info",
    "flask_sqlalchemy.SQLAlchemy",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.set_phone",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_replace_send_code.Role": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsRoleMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_unified_signin.test_replace_send_code.User": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "flask_security.models.fsqla_v2.FsUserMixin"
   ]
  },
  "type": "class"
 },
 "tests.test_unified_signin.test_replace_send_code.User.us_send_security_token": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "flask_security.us_send_security_token"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_requires_confirmation_error_redirect": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "dict",
    "tests.test_unified_signin.capture_send_code_requests",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "all",
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "tests.test_unified_signin.re",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_bad_token": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_basic": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "tests.test_unified_signin.base64",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_email": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.re",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_json": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "set",
    "tests.test_unified_signin.UIA_EMAIL_PHONE",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_json.pc": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "flask_security.us_profile_changed.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_json_no_session": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "tests.test_unified_signin.UIA_EMAIL_PHONE",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_new_totp": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_nofresh": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "datetime.timedelta",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_setup_timeout": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.time",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_signin_pwd_json": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "dict",
    "tests.test_unified_signin.pytest",
    "tests.test_utils.authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_simple_signin": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "len",
    "tests.test_unified_signin.capture_send_code_requests",
    "tests.test_unified_signin.set_phone",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_simple_signin.authned": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "flask_security.user_authenticated.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_simple_signin_json": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "flask_security.utils.get_identity_attributes",
    "get_message",
    "len",
    "set",
    "tests.test_unified_signin.capture_send_code_requests",
    "tests.test_unified_signin.set_phone",
    "tests.test_utils.capture_flashes",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_simple_signin_json.authned": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "flask_security.user_authenticated.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_tf": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_unified_signin.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_tf_link": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.re"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_tf_link_spa": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "dict",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.re",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_tf_not": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "tests.test_unified_signin.UIA_EMAIL_PHONE",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.re",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_totp_generation": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "passlib.totp.TOTP",
    "tests.test_utils.authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_us_tf_validity": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "dict",
    "next",
    "tests.test_unified_signin.UIA_EMAIL_PHONE",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.us_tf_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_verify": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.re",
    "tests.test_unified_signin.set_phone",
    "tests.test_unified_signin.us_authenticate",
    "tests.test_utils.logout"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_verify_json": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "datetime.timedelta",
    "dict",
    "flask_security.SmsSenderFactory.createSender",
    "get_message",
    "set",
    "tests.test_unified_signin.set_phone",
    "tests.test_unified_signin.us_authenticate"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_verify_link": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.re"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_verify_link.authned": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "flask_security.user_authenticated.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.test_verify_link_spa": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "dict",
    "get_message",
    "tests.test_unified_signin.pytest",
    "tests.test_unified_signin.re",
    "urllib.parse.parse_qsl",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_unified_signin.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "tests.test_unified_signin.uia_email_mapper": {
  "data": {
   "shadows": "flask_security.uia_email_mapper"
  },
  "type": "import"
 },
 "tests.test_unified_signin.uia_phone_mapper": {
  "data": {
   "shadows": "flask_security.uia_phone_mapper"
  },
  "type": "import"
 },
 "tests.test_unified_signin.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "tests.test_unified_signin.us_authenticate": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "tests.test_unified_signin.capture_send_code_requests"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.us_profile_changed": {
  "data": {
   "shadows": "flask_security.us_profile_changed"
  },
  "type": "import"
 },
 "tests.test_unified_signin.us_security_token_sent": {
  "data": {
   "shadows": "flask_security.us_security_token_sent"
  },
  "type": "import"
 },
 "tests.test_unified_signin.us_send_security_token": {
  "data": {
   "shadows": "flask_security.us_send_security_token"
  },
  "type": "import"
 },
 "tests.test_unified_signin.us_tf_authenticate": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "flask_security.SmsSenderFactory.createSender"
   ]
  },
  "type": "function"
 },
 "tests.test_unified_signin.user_authenticated": {
  "data": {
   "shadows": "flask_security.user_authenticated"
  },
  "type": "import"
 },
 "tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "module"
 },
 "tests.test_utils.SQLAlchemySessionUserDatastore": {
  "data": {
   "shadows": "flask_security.datastore.SQLAlchemySessionUserDatastore"
  },
  "type": "import"
 },
 "tests.test_utils.SQLAlchemyUserDatastore": {
  "data": {
   "shadows": "flask_security.datastore.SQLAlchemyUserDatastore"
  },
  "type": "import"
 },
 "tests.test_utils.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.test_utils.SmsBadSender": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "flask_security.SmsSenderBaseClass"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.SmsBadSender.send_sms": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.SmsSenderBaseClass": {
  "data": {
   "shadows": "flask_security.SmsSenderBaseClass"
  },
  "type": "import"
 },
 "tests.test_utils.SmsTestSender": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "flask_security.SmsSenderBaseClass",
    "flask_security.SmsSenderBaseClass.count",
    "flask_security.SmsSenderBaseClass.messages"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.SmsTestSender.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "flask_security.SmsSenderBaseClass.count",
    "flask_security.SmsSenderBaseClass.messages",
    "super"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.SmsTestSender.get_count": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flask_security.SmsSenderBaseClass.count"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.SmsTestSender.send_sms": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "flask_security.SmsSenderBaseClass.count",
    "flask_security.SmsSenderBaseClass.messages.append"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.TaggedJSONSerializer": {
  "data": {
   "shadows": "flask.json.tag.TaggedJSONSerializer"
  },
  "type": "import"
 },
 "tests.test_utils.URLSafeTimedSerializer": {
  "data": {
   "shadows": "itsdangerous.URLSafeTimedSerializer"
  },
  "type": "import"
 },
 "tests.test_utils._missing": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tests.test_utils.authenticate": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.capture_flashes": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "flask.signals.message_flashed.connect",
    "flask.signals.message_flashed.disconnect"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.capture_flashes._on": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "tests.test_utils.capture_passwordless_login_requests": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "flask_security.signals.login_instructions_sent.connect",
    "flask_security.signals.login_instructions_sent.disconnect"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.capture_passwordless_login_requests._on": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "tests.test_utils.capture_registrations": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "flask_security.signals.user_registered.connect",
    "flask_security.signals.user_registered.disconnect"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.capture_registrations._on": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "tests.test_utils.capture_reset_password_requests": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "flask_security.signals.reset_password_instructions_sent.connect",
    "flask_security.signals.reset_password_instructions_sent.disconnect"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.capture_reset_password_requests._on": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "tests.test_utils.check_xlation": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tests.test_utils.re"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "tests.test_utils.create_roles": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.create_users": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "len"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.get_debug_queries": {
  "data": {
   "shadows": "flask_sqlalchemy.get_debug_queries"
  },
  "type": "import"
 },
 "tests.test_utils.get_num_queries": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "flask_sqlalchemy.get_debug_queries",
    "len",
    "tests.test_utils.is_sqlalchemy"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.get_session": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "enumerate",
    "flask.json.tag.TaggedJSONSerializer",
    "itsdangerous.URLSafeTimedSerializer",
    "werkzeug.http.parse_cookie"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.hash_password": {
  "data": {
   "shadows": "flask_security.utils.hash_password"
  },
  "type": "import"
 },
 "tests.test_utils.init_app_with_options": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "flask_security.Security",
    "tests.test_utils.populate_data"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.is_sqlalchemy": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "flask_security.datastore.SQLAlchemySessionUserDatastore",
    "flask_security.datastore.SQLAlchemyUserDatastore",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.json_authenticate": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "tests.test_utils.json_logout": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "tests.test_utils.login_instructions_sent": {
  "data": {
   "shadows": "flask_security.signals.login_instructions_sent"
  },
  "type": "import"
 },
 "tests.test_utils.logout": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "tests.test_utils.message_flashed": {
  "data": {
   "shadows": "flask.signals.message_flashed"
  },
  "type": "import"
 },
 "tests.test_utils.parse_cookie": {
  "data": {
   "shadows": "werkzeug.http.parse_cookie"
  },
  "type": "import"
 },
 "tests.test_utils.populate_data": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "tests.test_utils.create_roles",
    "tests.test_utils.create_users"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.test_utils.reset_password_instructions_sent": {
  "data": {
   "shadows": "flask_security.signals.reset_password_instructions_sent"
  },
  "type": "import"
 },
 "tests.test_utils.user_registered": {
  "data": {
   "shadows": "flask_security.signals.user_registered"
  },
  "type": "import"
 },
 "tests.test_utils.verify_token": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "tests.view_scaffold": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "sqlalchemy.create_engine",
    "sqlalchemy.ext.declarative.declarative_base",
    "sqlalchemy.orm.scoped_session",
    "sqlalchemy.orm.sessionmaker",
    "tests.view_scaffold.Base",
    "tests.view_scaffold.create_app",
    "tests.view_scaffold.db_session",
    "tests.view_scaffold.engine"
   ]
  },
  "type": "module"
 },
 "tests.view_scaffold.Base": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "tests.view_scaffold.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "tests.view_scaffold.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "tests.view_scaffold.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "tests.view_scaffold.FlashMail": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "tests.view_scaffold.FlashMail.__init__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "tests.view_scaffold.FlashMail.send": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "flask.flash"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "tests.view_scaffold.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "tests.view_scaffold.HAVE_BABEL": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tests.view_scaffold.HAVE_BABELEX": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tests.view_scaffold.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "tests.view_scaffold.JSONEncoder": {
  "data": {
   "shadows": "flask.json.JSONEncoder"
  },
  "type": "import"
 },
 "tests.view_scaffold.Role": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "flask_security.RoleMixin",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "tests.view_scaffold.Base"
   ]
  },
  "type": "class"
 },
 "tests.view_scaffold.RoleMixin": {
  "data": {
   "shadows": "flask_security.RoleMixin"
  },
  "type": "import"
 },
 "tests.view_scaffold.RolesUsers": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "tests.view_scaffold.Base"
   ]
  },
  "type": "class"
 },
 "tests.view_scaffold.SQLAlchemySessionUserDatastore": {
  "data": {
   "shadows": "flask_security.SQLAlchemySessionUserDatastore"
  },
  "type": "import"
 },
 "tests.view_scaffold.Security": {
  "data": {
   "shadows": "flask_security.Security"
  },
  "type": "import"
 },
 "tests.view_scaffold.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "tests.view_scaffold.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "tests.view_scaffold.User": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "flask_security.UserMixin",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "tests.view_scaffold.Base"
   ]
  },
  "type": "class"
 },
 "tests.view_scaffold.UserMixin": {
  "data": {
   "shadows": "flask_security.UserMixin"
  },
  "type": "import"
 },
 "tests.view_scaffold._find_bool": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.add_user": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "flask_security.utils.hash_password",
    "tests.view_scaffold.datetime"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.auth_required": {
  "data": {
   "shadows": "flask_security.auth_required"
  },
  "type": "import"
 },
 "tests.view_scaffold.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "tests.view_scaffold.create_app": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "flask.json.JSONEncoder",
    "flask_security.SQLAlchemySessionUserDatastore",
    "flask_security.Security",
    "flask_security.utils.uia_email_mapper",
    "flask_security.utils.uia_phone_mapper",
    "tests.view_scaffold.FlashMail",
    "tests.view_scaffold.HAVE_BABEL",
    "tests.view_scaffold.HAVE_BABELEX",
    "tests.view_scaffold._find_bool",
    "tests.view_scaffold.datetime",
    "tests.view_scaffold.flask_babel",
    "tests.view_scaffold.flask_babelex",
    "tests.view_scaffold.os"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.basic": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "flask.render_template_string",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.create_user": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "print",
    "tests.view_scaffold.add_user",
    "tests.view_scaffold.init_db"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.get_locale": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "flask.request.accept_languages.best",
    "flask.request.args.get",
    "flask.session",
    "flask.session.get"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.home": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "flask.render_template_string",
    "flask_security.current_user.email",
    "flask_security.login_required"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.on_reset": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "flask.flash",
    "flask_security.signals.reset_password_instructions_sent.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.on_token_sent": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "flask.flash",
    "flask_security.signals.tf_security_token_sent.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.on_us_token_sent": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "flask.flash",
    "flask_security.signals.us_security_token_sent.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.on_user_registered": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "flask.flash",
    "flask_security.signals.user_registered.connect_via"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_app.protected": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "flask.render_template_string",
    "flask_security.auth_required"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "tests.view_scaffold.current_user": {
  "data": {
   "shadows": "flask_security.current_user"
  },
  "type": "import"
 },
 "tests.view_scaffold.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "tests.view_scaffold.db_session": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "tests.view_scaffold.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "tests.view_scaffold.engine": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "tests.view_scaffold.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "tests.view_scaffold.flask_babel": {
  "data": {
   "shadows": "flask_babel"
  },
  "type": "import"
 },
 "tests.view_scaffold.flask_babelex": {
  "data": {
   "shadows": "flask_babelex"
  },
  "type": "import"
 },
 "tests.view_scaffold.hash_password": {
  "data": {
   "shadows": "flask_security.utils.hash_password"
  },
  "type": "import"
 },
 "tests.view_scaffold.init_db": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tests.view_scaffold.Base",
    "tests.view_scaffold.engine"
   ]
  },
  "type": "function"
 },
 "tests.view_scaffold.login_required": {
  "data": {
   "shadows": "flask_security.login_required"
  },
  "type": "import"
 },
 "tests.view_scaffold.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.view_scaffold.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "tests.view_scaffold.render_template_string": {
  "data": {
   "shadows": "flask.render_template_string"
  },
  "type": "import"
 },
 "tests.view_scaffold.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "tests.view_scaffold.reset_password_instructions_sent": {
  "data": {
   "shadows": "flask_security.signals.reset_password_instructions_sent"
  },
  "type": "import"
 },
 "tests.view_scaffold.scoped_session": {
  "data": {
   "shadows": "sqlalchemy.orm.scoped_session"
  },
  "type": "import"
 },
 "tests.view_scaffold.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "tests.view_scaffold.sessionmaker": {
  "data": {
   "shadows": "sqlalchemy.orm.sessionmaker"
  },
  "type": "import"
 },
 "tests.view_scaffold.tf_security_token_sent": {
  "data": {
   "shadows": "flask_security.signals.tf_security_token_sent"
  },
  "type": "import"
 },
 "tests.view_scaffold.uia_email_mapper": {
  "data": {
   "shadows": "flask_security.utils.uia_email_mapper"
  },
  "type": "import"
 },
 "tests.view_scaffold.uia_phone_mapper": {
  "data": {
   "shadows": "flask_security.utils.uia_phone_mapper"
  },
  "type": "import"
 },
 "tests.view_scaffold.us_security_token_sent": {
  "data": {
   "shadows": "flask_security.signals.us_security_token_sent"
  },
  "type": "import"
 },
 "tests.view_scaffold.user_registered": {
  "data": {
   "shadows": "flask_security.signals.user_registered"
  },
  "type": "import"
 }
}