{
 "woodwork": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.__main__.cli": {
  "lineno": 6,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "woodwork.__main__.list_ltypes": {
  "lineno": 11,
  "symbols_in_volume": [
   "click.command",
   "woodwork.utils.list_logical_types"
  ],
  "type": "function"
 },
 "woodwork.__main__.list_stags": {
  "lineno": 16,
  "symbols_in_volume": [
   "click.command",
   "woodwork.utils.list_semantic_tags"
  ],
  "type": "function"
 },
 "woodwork.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.config.Config": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.config.Config.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.__repr__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.get_option": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.reset_option": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.set_option": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.datacolumn.DataColumn": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.datacolumn.DataColumn.__eq__": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.__len__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.__repr__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._is_categorical": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._is_numeric": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._parse_logical_type": {
  "lineno": 191,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.str_to_logical_type",
   "woodwork.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._set_as_index": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._set_as_time_index": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._set_series": {
  "lineno": 174,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.api.extensions.ExtensionArray",
   "warnings.warn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._update_dtype": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Ordinal",
   "woodwork.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.add_semantic_tags": {
  "lineno": 233,
  "symbols_in_volume": [
   "warnings.warn",
   "woodwork.exceptions.DuplicateTagsWarning",
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.dtype": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.iloc": {
  "lineno": 133,
  "symbols_in_volume": [
   "woodwork.indexers._iLocIndexer"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.logical_type": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.name": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.remove_semantic_tags": {
  "lineno": 278,
  "symbols_in_volume": [
   "warnings.warn",
   "woodwork.exceptions.StandardTagsRemovalWarning",
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.reset_semantic_tags": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.semantic_tags": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.set_logical_type": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.set_semantic_tags": {
  "lineno": 205,
  "symbols_in_volume": [
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.shape": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.to_series": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn._is_numeric_categorical": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn._validate_tags": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.infer_logical_type": {
  "lineno": 362,
  "symbols_in_volume": [
   "pandas.api.types.is_bool_dtype",
   "pandas.api.types.is_categorical_dtype",
   "pandas.api.types.is_float_dtype",
   "pandas.api.types.is_integer_dtype",
   "pandas.api.types.is_string_dtype",
   "pandas.api.types.is_timedelta64_dtype",
   "woodwork.config.config.get_option",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.Timedelta",
   "woodwork.utils.col_is_datetime"
  ],
  "type": "function"
 },
 "woodwork.datatable": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.datatable.DataTable": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.datatable.DataTable.__eq__": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__getitem__": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__len__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__setitem__": {
  "lineno": 142,
  "symbols_in_volume": [
   "warnings.warn",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__sizeof__": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._create_columns": {
  "lineno": 191,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._filter_cols": {
  "lineno": 564,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.str_to_logical_type",
   "woodwork.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._handle_nans_for_mutual_info": {
  "lineno": 793,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Double",
   "woodwork.utils._get_ltype_class",
   "woodwork.utils._get_mode"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._make_categorical_for_mutual_info": {
  "lineno": 824,
  "symbols_in_volume": [
   "pandas.qcut",
   "woodwork.logical_types.Datetime",
   "woodwork.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._new_dt_from_cols": {
  "lineno": 615,
  "symbols_in_volume": [
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._sort_columns": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._update_cols_and_get_new_dt": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._update_columns": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.add_semantic_tags": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.describe": {
  "lineno": 714,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.describe_dict": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.nan",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.utils._get_ltype_class",
   "woodwork.utils._get_mode"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.iloc": {
  "lineno": 622,
  "symbols_in_volume": [
   "woodwork.indexers._iLocIndexer"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.index": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.logical_types": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.ltypes": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.mutual_information": {
  "lineno": 913,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.mutual_information_dict": {
  "lineno": 853,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.physical_types": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.pop": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.remove_semantic_tags": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.rename": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.reset_semantic_tags": {
  "lineno": 440,
  "symbols_in_volume": [
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.select": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.semantic_tags": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.set_index": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.set_time_index": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.set_types": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.shape": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.time_index": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_csv": {
  "lineno": 945,
  "symbols_in_volume": [
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_dataframe": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_dictionary": {
  "lineno": 936,
  "symbols_in_volume": [
   "woodwork.serialize.datatable_to_description"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_parquet": {
  "lineno": 975,
  "symbols_in_volume": [
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_pickle": {
  "lineno": 962,
  "symbols_in_volume": [
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.types": {
  "lineno": 170,
  "symbols_in_volume": [
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.update_dataframe": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.value_counts": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "woodwork.datatable._check_column_descriptions": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_index": {
  "lineno": 1042,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable._check_logical_types": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_metadata": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_semantic_tags": {
  "lineno": 1079,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_time_index": {
  "lineno": 1060,
  "symbols_in_volume": [
   "woodwork.utils._is_numeric_series",
   "woodwork.utils.col_is_datetime"
  ],
  "type": "function"
 },
 "woodwork.datatable._check_unique_column_names": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._make_index": {
  "lineno": 1123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._update_index": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._update_time_index": {
  "lineno": 1112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._validate_dataframe": {
  "lineno": 994,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable._validate_params": {
  "lineno": 1008,
  "symbols_in_volume": [
   "woodwork.logical_types.Datetime",
   "woodwork.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.demo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.demo.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.demo.retail": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.demo.retail.load_retail": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.read_csv",
   "woodwork.DataTable",
   "woodwork.__version__",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.deserialize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.deserialize._check_schema_version": {
  "lineno": 154,
  "symbols_in_volume": [
   "itertools.zip_longest",
   "warnings.warn",
   "woodwork.exceptions.OutdatedSchemaWarning",
   "woodwork.exceptions.UpgradeSchemaWarning",
   "woodwork.serialize.SCHEMA_VERSION",
   "woodwork.serialize.SCHEMA_VERSION.split"
  ],
  "type": "function"
 },
 "woodwork.deserialize.description_to_datatable": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.join",
   "pandas",
   "pandas.read_pickle",
   "woodwork.DataTable",
   "woodwork.logical_types.str_to_logical_type",
   "woodwork.serialize.FORMATS",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.deserialize.read_datatable": {
  "lineno": 125,
  "symbols_in_volume": [
   "os.path.join",
   "pathlib.Path",
   "tarfile.open",
   "tempfile.TemporaryDirectory",
   "woodwork.s3_utils.get_transport_params",
   "woodwork.s3_utils.use_smartopen",
   "woodwork.utils._is_s3",
   "woodwork.utils._is_url"
  ],
  "type": "function"
 },
 "woodwork.deserialize.read_table_description": {
  "lineno": 19,
  "symbols_in_volume": [
   "json.load",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "woodwork.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.exceptions.ColumnNameMismatchWarning": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.ColumnNameMismatchWarning.get_warning_message": {
  "lineno": 2,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.DuplicateTagsWarning": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.DuplicateTagsWarning.get_warning_message": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.OutdatedSchemaWarning": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.OutdatedSchemaWarning.get_warning_message": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.StandardTagsRemovalWarning": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.StandardTagsRemovalWarning.get_warning_message": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.UpgradeSchemaWarning": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.UpgradeSchemaWarning.get_warning_message": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.indexers": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.indexers._iLocIndexer": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.indexers._iLocIndexer.__getitem__": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.indexers._iLocIndexer.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "woodwork.DataColumn",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.logical_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.logical_types.Boolean": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Categorical": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Categorical.__init__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.ClassNameDescriptor": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.ClassNameDescriptor.__get__": {
  "lineno": 9,
  "symbols_in_volume": [
   "woodwork.utils.camel_to_snake"
  ],
  "type": "function"
 },
 "woodwork.logical_types.CountryCode": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Datetime": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Datetime.__init__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.Double": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.EmailAddress": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Filepath": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.FullName": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.IPAddress": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Integer": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LatLong": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LogicalType": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LogicalType.__eq__": {
  "lineno": 26,
  "symbols_in_volume": [
   "woodwork.utils._get_specified_ltype_params"
  ],
  "type": "function"
 },
 "woodwork.logical_types.LogicalType.__str__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.LogicalTypeMetaClass": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LogicalTypeMetaClass.__repr__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.NaturalLanguage": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Ordinal": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Ordinal.__init__": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.Ordinal._validate_data": {
  "lineno": 247,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "woodwork.logical_types.PhoneNumber": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.SubRegionCode": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Timedelta": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.URL": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.ZIPCode": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.get_logical_types": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.str_to_logical_type": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.s3_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.s3_utils.get_transport_params": {
  "lineno": 18,
  "symbols_in_volume": [
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.s3_utils.use_smartopen": {
  "lineno": 6,
  "symbols_in_volume": [
   "shutil.copyfileobj",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.serialize": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.serialize.create_archive": {
  "lineno": 159,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.path.join",
   "tarfile.open"
  ],
  "type": "function"
 },
 "woodwork.serialize.datatable_to_description": {
  "lineno": 23,
  "symbols_in_volume": [
   "woodwork.utils._get_ltype_class",
   "woodwork.utils._get_specified_ltype_params"
  ],
  "type": "function"
 },
 "woodwork.serialize.dump_table": {
  "lineno": 92,
  "symbols_in_volume": [
   "json.dump",
   "os.path.join"
  ],
  "type": "function"
 },
 "woodwork.serialize.write_datatable": {
  "lineno": 66,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.abspath",
   "os.path.join",
   "tempfile.TemporaryDirectory",
   "woodwork.s3_utils.get_transport_params",
   "woodwork.s3_utils.use_smartopen",
   "woodwork.utils._is_s3",
   "woodwork.utils._is_url"
  ],
  "type": "function"
 },
 "woodwork.serialize.write_table_data": {
  "lineno": 107,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "woodwork.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.conftest.categorical_df": {
  "lineno": 333,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.categorical_df_dask": {
  "lineno": 321,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.categorical_df_koalas": {
  "lineno": 327,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.categorical_df_pandas": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df": {
  "lineno": 248,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df_dask": {
  "lineno": 236,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df_koalas": {
  "lineno": 242,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df_pandas": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi": {
  "lineno": 305,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi_dask": {
  "lineno": 293,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi_koalas": {
  "lineno": 299,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi_pandas": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi": {
  "lineno": 277,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi_dask": {
  "lineno": 263,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi_koalas": {
  "lineno": 269,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi_pandas": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df": {
  "lineno": 185,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df_dask": {
  "lineno": 171,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df_koalas": {
  "lineno": 177,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df_pandas": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_combos": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series": {
  "lineno": 111,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series_dask": {
  "lineno": 121,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series_koalas": {
  "lineno": 127,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series_pandas": {
  "lineno": 116,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df": {
  "lineno": 29,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df_dask": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df_koalas": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df_pandas": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series": {
  "lineno": 89,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series_dask": {
  "lineno": 99,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series_koalas": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series_pandas": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df": {
  "lineno": 59,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df_dask": {
  "lineno": 77,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df_koalas": {
  "lineno": 83,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df_pandas": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.spark_session": {
  "lineno": 8,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.utils.import_or_none"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df": {
  "lineno": 157,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df_dask": {
  "lineno": 145,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df_koalas": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df_pandas": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.datacolumn.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.datacolumn.conftest.bools": {
  "lineno": 84,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.categories": {
  "lineno": 139,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_bools": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_categories": {
  "lineno": 129,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_datetimes": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_doubles": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_integers": {
  "lineno": 26,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_long_strings": {
  "lineno": 202,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_pdnas": {
  "lineno": 227,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_strings": {
  "lineno": 171,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.dask_timedeltas": {
  "lineno": 153,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.datetime_series": {
  "lineno": 113,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.datetimes": {
  "lineno": 108,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.doubles": {
  "lineno": 60,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.integers": {
  "lineno": 36,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_bools": {
  "lineno": 79,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_categories": {
  "lineno": 134,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_datetimes": {
  "lineno": 103,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_doubles": {
  "lineno": 55,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_integers": {
  "lineno": 31,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_long_strings": {
  "lineno": 207,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.koalas_strings": {
  "lineno": 176,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.long_strings": {
  "lineno": 212,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_bools": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_categories": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_datetimes": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_doubles": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_integers": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_long_strings": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_pdnas": {
  "lineno": 218,
  "symbols_in_volume": [
   "pandas.NA",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_strings": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pandas_timedeltas": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_timedelta",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pd_to_dask": {
  "lineno": 7,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pd_to_koalas": {
  "lineno": 12,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.pdnas": {
  "lineno": 232,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.strings": {
  "lineno": 181,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.conftest.timedeltas": {
  "lineno": 158,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datacolumn.test_data_column.test_add_custom_tags": {
  "lineno": 240,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_adds_category_standard_tag": {
  "lineno": 220,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_adds_numeric_standard_tag": {
  "lineno": 210,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_description": {
  "lineno": 148,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_description_error": {
  "lineno": 158,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_equality": {
  "lineno": 547,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_extension_array": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.arrays.IntegerArray",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_logical_type": {
  "lineno": 38,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_name": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_semantic_tags": {
  "lineno": 52,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_wrong_series": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.array",
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_repr": {
  "lineno": 164,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_with_alternate_semantic_tags_input": {
  "lineno": 114,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_does_not_add_standard_tags": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_dtype_update_on_init": {
  "lineno": 481,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_dtype_update_on_ltype_change": {
  "lineno": 487,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_invalid_logical_type": {
  "lineno": 124,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_len": {
  "lineno": 476,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_requires_instance_on_init": {
  "lineno": 495,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_requires_instance_on_update": {
  "lineno": 503,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_with_incomplete_ranking": {
  "lineno": 528,
  "symbols_in_volume": [
   "pytest.raises",
   "pytest.xfail",
   "re.escape",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_with_nan_values": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_with_order": {
  "lineno": 513,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_raises_error_setting_index_tag_directly": {
  "lineno": 419,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_raises_error_setting_time_index_tag_directly": {
  "lineno": 432,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_remove_semantic_tags": {
  "lineno": 369,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_remove_semantic_tags_raises_error_with_invalid_tag": {
  "lineno": 411,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_remove_standard_semantic_tag": {
  "lineno": 386,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_with_index": {
  "lineno": 343,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_with_standard_tags": {
  "lineno": 320,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Categorical.standard_tags"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_with_time_index": {
  "lineno": 356,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_without_standard_tags": {
  "lineno": 332,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_semantic_tag_errors": {
  "lineno": 134,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_as_index": {
  "lineno": 445,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_as_time_index": {
  "lineno": 451,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_retains_index_tag": {
  "lineno": 292,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_retains_time_index_tag": {
  "lineno": 306,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_with_standard_tags": {
  "lineno": 266,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_without_standard_tags": {
  "lineno": 279,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_semantic_tags": {
  "lineno": 175,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_semantic_tags_with_index": {
  "lineno": 186,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_semantic_tags_with_time_index": {
  "lineno": 198,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_shape": {
  "lineno": 465,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_to_series": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "woodwork.datacolumn.DataColumn",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_warns_on_setting_duplicate_tag": {
  "lineno": 255,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.DuplicateTagsWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.get_koalas_dtypes": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_boolean_inference": {
  "lineno": 62,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Boolean"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_categorical_double_inference": {
  "lineno": 105,
  "symbols_in_volume": [
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_categorical_inference": {
  "lineno": 83,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_categorical_integers_inference": {
  "lineno": 93,
  "symbols_in_volume": [
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_datetime_inference": {
  "lineno": 72,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_double_inference": {
  "lineno": 51,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_integer_inference": {
  "lineno": 40,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_natural_language_inference": {
  "lineno": 125,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_natural_language_inference_with_threshhold": {
  "lineno": 136,
  "symbols_in_volume": [
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_pdna_inference": {
  "lineno": 150,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_ltype_inference.test_timedelta_inference": {
  "lineno": 117,
  "symbols_in_volume": [
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Timedelta"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.datatable.test_datatable": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datatable.test_datatable.test_add_semantic_tags": {
  "lineno": 587,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_bool_dtype_inference_on_init": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_index_errors": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "woodwork.datatable._check_index"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_logical_types_errors": {
  "lineno": 293,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datatable._check_logical_types"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_metadata_errors": {
  "lineno": 309,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datatable._check_metadata"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_semantic_tags_errors": {
  "lineno": 405,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datatable._check_semantic_tags"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_time_index_errors": {
  "lineno": 270,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datatable._check_time_index"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_unique_column_names": {
  "lineno": 281,
  "symbols_in_volume": [
   "pytest.raises",
   "pytest.skip",
   "woodwork.datatable._check_unique_column_names"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_adds_standard_semantic_tags": {
  "lineno": 216,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_already_sorted": {
  "lineno": 2663,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_clear_index": {
  "lineno": 1632,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_clear_time_index": {
  "lineno": 1648,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_col_descriptions_warnings": {
  "lineno": 2722,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_column_order_after_rename": {
  "lineno": 2644,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_method": {
  "lineno": 1933,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.testing.assert_series_equal",
   "pandas.to_datetime",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.Timedelta",
   "woodwork.logical_types.URL",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_improper_tags": {
  "lineno": 2130,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_include": {
  "lineno": 2174,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_no_match": {
  "lineno": 2361,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_no_semantic_tags": {
  "lineno": 2153,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_equality": {
  "lineno": 2427,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_getitem_list_input": {
  "lineno": 1320,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_getitem_list_warnings": {
  "lineno": 1379,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_handle_nans_for_mutual_info": {
  "lineno": 2246,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_col_descriptions": {
  "lineno": 2712,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_invalid_string_time_index": {
  "lineno": 133,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_logical_types": {
  "lineno": 139,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_name_and_index_vals": {
  "lineno": 67,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_numpy": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.array",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_semantic_tags": {
  "lineno": 176,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_string_logical_types": {
  "lineno": 151,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_valid_string_time_index": {
  "lineno": 79,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_len": {
  "lineno": 2539,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_logical_types": {
  "lineno": 378,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.LogicalType.__subclasses__"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_ltypes": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LogicalType",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_make_categorical_for_mutual_info": {
  "lineno": 2270,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_metadata": {
  "lineno": 2617,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_mutual_information": {
  "lineno": 2302,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.tests.testing_utils.mi_between_cols",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_physical_types": {
  "lineno": 369,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_rename": {
  "lineno": 2492,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_rename_errors": {
  "lineno": 2464,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_same_mutual_information": {
  "lineno": 2290,
  "symbols_in_volume": [
   "numpy.unique",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.mi_between_cols"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_semantic_tags": {
  "lineno": 389,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_sizeof": {
  "lineno": 2530,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_types": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LogicalType",
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe": {
  "lineno": 2544,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_already_sorted": {
  "lineno": 2690,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_different_num_cols": {
  "lineno": 2601,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_missing_col": {
  "lineno": 2609,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_with_make_index": {
  "lineno": 2574,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_with_numeric_datetime_time_index": {
  "lineno": 91,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_with_numeric_time_index": {
  "lineno": 102,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datetime_dtype_inference_on_init": {
  "lineno": 1051,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_datetime",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datetime_inference_with_format_param": {
  "lineno": 1858,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_describe_dict": {
  "lineno": 1903,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_describe_does_not_include_index": {
  "lineno": 1927,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_filter_cols": {
  "lineno": 1827,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_filter_cols_errors": {
  "lineno": 1851,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_float_dtype_inference_on_init": {
  "lineno": 1037,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_getitem": {
  "lineno": 1295,
  "symbols_in_volume": [
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_getitem_invalid_input": {
  "lineno": 1308,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_int_dtype_inference_on_init": {
  "lineno": 990,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_invalid_dtype_casting": {
  "lineno": 955,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_make_index": {
  "lineno": 2367,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_dict": {
  "lineno": 2353,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_does_not_include_index": {
  "lineno": 2333,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_returns_empty_df_properly": {
  "lineno": 2339,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_sort": {
  "lineno": 2345,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_natural_language_inference_with_config_options": {
  "lineno": 1891,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataTable",
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_new_dt_from_columns": {
  "lineno": 1184,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.tests.testing_utils.validate_subset_dt"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_numeric_index_strings": {
  "lineno": 2400,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_numeric_time_index_dtypes": {
  "lineno": 2376,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_pop": {
  "lineno": 1257,
  "symbols_in_volume": [
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_pop_error": {
  "lineno": 1284,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_pop_index": {
  "lineno": 1276,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_remove_semantic_tags": {
  "lineno": 678,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_all_semantic_tags": {
  "lineno": 610,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_selected_column_semantic_tags": {
  "lineno": 627,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_semantic_tags_invalid_column": {
  "lineno": 671,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_semantic_tags_with_index": {
  "lineno": 641,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_semantic_tags_with_time_index": {
  "lineno": 656,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_instantiated": {
  "lineno": 1801,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_invalid_inputs": {
  "lineno": 1686,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_list_inputs": {
  "lineno": 1740,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_mixed": {
  "lineno": 1137,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_no_match_and_all": {
  "lineno": 1082,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_objects": {
  "lineno": 1118,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_strings": {
  "lineno": 1099,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_table": {
  "lineno": 1152,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_maintain_order": {
  "lineno": 1820,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_semantic_tags": {
  "lineno": 1216,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_semantic_tags_no_match": {
  "lineno": 1777,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_single_inputs": {
  "lineno": 1708,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_semantic_tags_during_init": {
  "lineno": 477,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_index": {
  "lineno": 1552,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_logical_types": {
  "lineno": 421,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_logical_types_invalid_data": {
  "lineno": 466,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_semantic_tags": {
  "lineno": 500,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_semantic_tags_with_index": {
  "lineno": 527,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_semantic_tags_with_time_index": {
  "lineno": 540,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_time_index": {
  "lineno": 1591,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_types_combined": {
  "lineno": 553,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_different_name": {
  "lineno": 1414,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.warns",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_invalid_input": {
  "lineno": 1393,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises",
   "woodwork.DataColumn",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_new_column": {
  "lineno": 1455,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_overwrite_column": {
  "lineno": 1506,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_boolean_dtype_on_init": {
  "lineno": 811,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_boolean_dtype_on_update": {
  "lineno": 832,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Boolean.pandas_dtype",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_category_dtype_on_init": {
  "lineno": 702,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_category_dtype_on_update": {
  "lineno": 732,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_datetime64_dtype_on_init": {
  "lineno": 919,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_datetime_dtype_on_update": {
  "lineno": 941,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Datetime.pandas_dtype",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_float64_dtype_on_init": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_float64_dtype_on_update": {
  "lineno": 905,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Double.pandas_dtype",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_int64_dtype_on_init": {
  "lineno": 846,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_int64_dtype_on_update": {
  "lineno": 868,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_string_dtype_on_init": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.URL"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_string_dtype_on_update": {
  "lineno": 786,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.URL"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_shape": {
  "lineno": 1664,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_str_dtype_inference_on_init": {
  "lineno": 1018,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_timedelta_dtype_inference_on_init": {
  "lineno": 1067,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_datetime",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_validate_params_errors": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises",
   "woodwork.datatable._validate_dataframe",
   "woodwork.datatable._validate_params"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_value_counts": {
  "lineno": 2202,
  "symbols_in_volume": [
   "numpy.nan",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datatable.test_serialization.create_test_config": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.create_test_credentials": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.make_public": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.s3_bucket": {
  "lineno": 188,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.s3_client": {
  "lineno": 176,
  "symbols_in_volume": [
   "boto3.resource",
   "moto.mock_s3",
   "os.environ.clear",
   "os.environ.copy",
   "os.environ.update",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.setup_test_profile": {
  "lineno": 293,
  "symbols_in_volume": [
   "os.path.join",
   "os.remove",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_check_later_schema_version": {
  "lineno": 375,
  "symbols_in_volume": [
   "woodwork.serialize.SCHEMA_VERSION.split"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_check_later_schema_version.test_version": {
  "lineno": 376,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.deserialize._check_schema_version",
   "woodwork.exceptions.UpgradeSchemaWarning",
   "woodwork.serialize.SCHEMA_VERSION"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_deserialize_s3_csv": {
  "lineno": 367,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_deserialize_url_csv": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_deserialize_url_csv_anon": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_earlier_schema_version": {
  "lineno": 398,
  "symbols_in_volume": [
   "woodwork.serialize.SCHEMA_VERSION.split"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_earlier_schema_version.test_version": {
  "lineno": 399,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.deserialize._check_schema_version",
   "woodwork.exceptions.OutdatedSchemaWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_s3_test_profile": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_parquet": {
  "lineno": 227,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_parquet_anon": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_pickle": {
  "lineno": 217,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_pickle_anon": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_subdirs_not_removed": {
  "lineno": 338,
  "symbols_in_volume": [
   "json.dump",
   "json.load",
   "os.path.exists",
   "woodwork.DataTable",
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_url_csv": {
  "lineno": 331,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_wrong_format": {
  "lineno": 125,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.logical_types.Ordinal",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv_S3": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.logical_types.Ordinal",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv_S3_anon": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.logical_types.Ordinal",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_dictionary": {
  "lineno": 34,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_parquet": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_pickle": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_pickle_errors_dask": {
  "lineno": 160,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_unserializable_table": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.xfail_tmp_disappears": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "woodwork.tests.demo_tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.demo_tests.test_retail": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.demo_tests.test_retail.set_testing_headers": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.demo_tests.test_retail.test_load_retail_datatable": {
  "lineno": 36,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.demo.load_retail",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.demo_tests.test_retail.test_load_retail_diff": {
  "lineno": 24,
  "symbols_in_volume": [
   "woodwork.demo.load_retail"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.logical_types.test_logical_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.logical_types.test_logical_types.test_get_logical_types": {
  "lineno": 36,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.get_logical_types"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_instantiated_type_str": {
  "lineno": 31,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_logical_eq": {
  "lineno": 15,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_logical_repr": {
  "lineno": 24,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_ordinal_init_with_order": {
  "lineno": 86,
  "symbols_in_volume": [
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_ordinal_order_errors": {
  "lineno": 78,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_str_to_logical_type": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.test_cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_cli.test_list_logical_types": {
  "lineno": 4,
  "symbols_in_volume": [
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "woodwork.tests.test_cli.test_list_semantic_tags": {
  "lineno": 8,
  "symbols_in_volume": [
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_config.config": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.config.Config"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.defaults": {
  "lineno": 6,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.test_get_option": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_config.test_init_conifg": {
  "lineno": 19,
  "symbols_in_volume": [
   "woodwork.config.Config"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.test_invalid_option_warnings": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.test_repr": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_config.test_reset_option": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_config.test_set_option": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_indexers": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.test_indexers.test_iLocIndexer_class": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.indexers._iLocIndexer",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iLocIndexer_class_error": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.indexers._iLocIndexer"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_datacolumn": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "pytest.xfail",
   "woodwork.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_dimensionality": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_indices": {
  "lineno": 132,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_indices_column": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_with_properties": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_utils.test_camel_to_snake": {
  "lineno": 31,
  "symbols_in_volume": [
   "woodwork.utils.camel_to_snake"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_convert_input_to_set": {
  "lineno": 43,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_get_ltype_params": {
  "lineno": 187,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.utils._get_specified_ltype_params"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_get_mode": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NA",
   "pandas.Series",
   "woodwork.utils._get_mode"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_import_or_none": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas",
   "woodwork.utils.import_or_none"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_import_or_raise": {
  "lineno": 213,
  "symbols_in_volume": [
   "pandas",
   "pytest.raises",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_numeric_datetime_series": {
  "lineno": 164,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.utils._is_numeric_series"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_s3": {
  "lineno": 231,
  "symbols_in_volume": [
   "woodwork.utils._is_s3"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_url": {
  "lineno": 226,
  "symbols_in_volume": [
   "woodwork.utils._is_url"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_list_logical_types": {
  "lineno": 66,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.str_to_logical_type",
   "woodwork.utils.list_logical_types"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_list_semantic_tags": {
  "lineno": 78,
  "symbols_in_volume": [
   "woodwork.utils.list_semantic_tags"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_new_dt_including": {
  "lineno": 204,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_read_csv_no_params": {
  "lineno": 110,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.read_csv"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_read_csv_with_pandas_params": {
  "lineno": 150,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.read_csv"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_read_csv_with_woodwork_params": {
  "lineno": 122,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.read_csv"
  ],
  "type": "function"
 },
 "woodwork.tests.test_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_version.test_version": {
  "lineno": 4,
  "symbols_in_volume": [
   "woodwork.__version__"
  ],
  "type": "function"
 },
 "woodwork.tests.testing_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.testing_utils.datatable_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.testing_utils.datatable_utils.check_column_order": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.testing_utils.datatable_utils.mi_between_cols": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.testing_utils.datatable_utils.to_pandas": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "woodwork.tests.testing_utils.datatable_utils.validate_subset_dt": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.utils._convert_input_to_set": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._get_ltype_class": {
  "lineno": 213,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__"
  ],
  "type": "function"
 },
 "woodwork.utils._get_mode": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._get_specified_ltype_params": {
  "lineno": 219,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__"
  ],
  "type": "function"
 },
 "woodwork.utils._is_numeric_series": {
  "lineno": 81,
  "symbols_in_volume": [
   "pandas.api.types.is_numeric_dtype",
   "pandas.to_numeric",
   "woodwork.datacolumn.infer_logical_type",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.utils._is_s3": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._is_url": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._new_dt_including": {
  "lineno": 239,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.utils.camel_to_snake": {
  "lineno": 27,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "woodwork.utils.col_is_datetime": {
  "lineno": 54,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "woodwork.utils.import_or_none": {
  "lineno": 10,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "woodwork.utils.import_or_raise": {
  "lineno": 270,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "woodwork.utils.list_logical_types": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.logical_types.LogicalType.__subclasses__"
  ],
  "type": "function"
 },
 "woodwork.utils.list_semantic_tags": {
  "lineno": 129,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.utils.read_csv": {
  "lineno": 168,
  "symbols_in_volume": [
   "pandas.read_csv",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}