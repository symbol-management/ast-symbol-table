{
 "woodwork": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.__main__.cli": {
  "lineno": 6,
  "symbols_in_volume": [
   "click.group"
  ],
  "type": "function"
 },
 "woodwork.__main__.list_ltypes": {
  "lineno": 11,
  "symbols_in_volume": [
   "click.command",
   "woodwork.list_logical_types"
  ],
  "type": "function"
 },
 "woodwork.__main__.list_stags": {
  "lineno": 16,
  "symbols_in_volume": [
   "click.command",
   "woodwork.list_semantic_tags"
  ],
  "type": "function"
 },
 "woodwork.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.config.Config": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.config.Config.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.__repr__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.get_option": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.reset_option": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.config.Config.set_option": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.datacolumn.DataColumn": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.datacolumn.DataColumn.__eq__": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.__len__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.__repr__": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._is_categorical": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._is_numeric": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._parse_logical_type": {
  "lineno": 201,
  "symbols_in_volume": [
   "woodwork.logical_types.Ordinal",
   "woodwork.type_sys.utils._get_ltype_class",
   "woodwork.type_system.infer_logical_type",
   "woodwork.type_system.registered_types",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._set_as_index": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._set_as_time_index": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._set_series": {
  "lineno": 184,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Series",
   "pandas.api.extensions.ExtensionArray",
   "warnings.warn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn._update_dtype": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.Ordinal",
   "woodwork.type_sys.utils._get_ltype_class",
   "woodwork.utils._reformat_to_latlong"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.add_semantic_tags": {
  "lineno": 243,
  "symbols_in_volume": [
   "warnings.warn",
   "woodwork.exceptions.DuplicateTagsWarning",
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.dtype": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.iloc": {
  "lineno": 143,
  "symbols_in_volume": [
   "woodwork.indexers._iLocIndexer"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.logical_type": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.name": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.remove_semantic_tags": {
  "lineno": 288,
  "symbols_in_volume": [
   "warnings.warn",
   "woodwork.exceptions.StandardTagsRemovalWarning",
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.reset_semantic_tags": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.semantic_tags": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.set_logical_type": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.set_semantic_tags": {
  "lineno": 215,
  "symbols_in_volume": [
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.shape": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn.DataColumn.to_series": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datacolumn._validate_tags": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.datatable.DataTable": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.datatable.DataTable.__eq__": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__getitem__": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__init__": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__len__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__repr__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__setitem__": {
  "lineno": 148,
  "symbols_in_volume": [
   "warnings.warn",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.__sizeof__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._create_columns": {
  "lineno": 257,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._filter_cols": {
  "lineno": 693,
  "symbols_in_volume": [
   "woodwork.type_sys.utils._get_ltype_class",
   "woodwork.type_system.registered_types",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._get_typing_info": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._handle_nans_for_mutual_info": {
  "lineno": 932,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Double",
   "woodwork.type_sys.utils._get_ltype_class",
   "woodwork.utils._get_mode"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._make_categorical_for_mutual_info": {
  "lineno": 963,
  "symbols_in_volume": [
   "pandas.qcut",
   "woodwork.logical_types.Datetime",
   "woodwork.type_sys.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._new_dt_from_cols": {
  "lineno": 744,
  "symbols_in_volume": [
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._repr_html_": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._set_underlying_index": {
  "lineno": 372,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.RangeIndex"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable._sort_columns": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._update_cols_and_get_new_dt": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._update_columns": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable._update_columns_from_dataframe": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.add_semantic_tags": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.describe": {
  "lineno": 853,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.describe_dict": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.nan",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.LatLong",
   "woodwork.type_sys.utils._get_ltype_class",
   "woodwork.utils._get_mode"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.df": {
  "lineno": 627,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.drop": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.head": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_frame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.iloc": {
  "lineno": 751,
  "symbols_in_volume": [
   "woodwork.indexers._iLocIndexer"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.index": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.logical_types": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.ltypes": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.mutual_information": {
  "lineno": 1052,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.mutual_information_dict": {
  "lineno": 992,
  "symbols_in_volume": [
   "sklearn.metrics.cluster.normalized_mutual_info_score",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.type_sys.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.physical_types": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.pop": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.remove_semantic_tags": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.rename": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.reset_semantic_tags": {
  "lineno": 564,
  "symbols_in_volume": [
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.select": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.semantic_tags": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.set_index": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.set_time_index": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.set_types": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.shape": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.time_index": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_csv": {
  "lineno": 1084,
  "symbols_in_volume": [
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_dataframe": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_dictionary": {
  "lineno": 1075,
  "symbols_in_volume": [
   "woodwork.serialize.datatable_to_description"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_parquet": {
  "lineno": 1114,
  "symbols_in_volume": [
   "woodwork.serialize.write_datatable",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.to_pickle": {
  "lineno": 1101,
  "symbols_in_volume": [
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.datatable.DataTable.types": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.update_dataframe": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable.DataTable.value_counts": {
  "lineno": 889,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "woodwork.datatable._check_column_descriptions": {
  "lineno": 1233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_column_metadata": {
  "lineno": 1247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_index": {
  "lineno": 1191,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable._check_logical_types": {
  "lineno": 1215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_semantic_tags": {
  "lineno": 1224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_table_metadata": {
  "lineno": 1242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._check_time_index": {
  "lineno": 1207,
  "symbols_in_volume": [
   "woodwork.type_sys.utils._is_numeric_series",
   "woodwork.type_sys.utils.col_is_datetime"
  ],
  "type": "function"
 },
 "woodwork.datatable._check_unique_column_names": {
  "lineno": 1186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._make_index": {
  "lineno": 1277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._update_index": {
  "lineno": 1256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._update_time_index": {
  "lineno": 1266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.datatable._validate_dataframe": {
  "lineno": 1141,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "woodwork.datatable._validate_params": {
  "lineno": 1154,
  "symbols_in_volume": [
   "woodwork.logical_types.Datetime",
   "woodwork.type_sys.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.demo": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.demo.api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.demo.retail": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.demo.retail.load_retail": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.read_csv",
   "woodwork.DataTable",
   "woodwork.__version__",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.deserialize": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.deserialize._check_schema_version": {
  "lineno": 157,
  "symbols_in_volume": [
   "itertools.zip_longest",
   "warnings.warn",
   "woodwork.exceptions.OutdatedSchemaWarning",
   "woodwork.exceptions.UpgradeSchemaWarning",
   "woodwork.serialize.SCHEMA_VERSION",
   "woodwork.serialize.SCHEMA_VERSION.split"
  ],
  "type": "function"
 },
 "woodwork.deserialize.description_to_datatable": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.join",
   "pandas",
   "pandas.read_pickle",
   "woodwork.DataTable",
   "woodwork.serialize.FORMATS",
   "woodwork.type_system.str_to_logical_type",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.deserialize.read_datatable": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.path.join",
   "pathlib.Path",
   "tarfile.open",
   "tempfile.TemporaryDirectory",
   "woodwork.s3_utils.get_transport_params",
   "woodwork.s3_utils.use_smartopen",
   "woodwork.utils._is_s3",
   "woodwork.utils._is_url"
  ],
  "type": "function"
 },
 "woodwork.deserialize.read_table_description": {
  "lineno": 19,
  "symbols_in_volume": [
   "json.load",
   "os.path.abspath",
   "os.path.exists",
   "os.path.join"
  ],
  "type": "function"
 },
 "woodwork.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.exceptions.ColumnNameMismatchWarning": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.ColumnNameMismatchWarning.get_warning_message": {
  "lineno": 2,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.DuplicateTagsWarning": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.DuplicateTagsWarning.get_warning_message": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.OutdatedSchemaWarning": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.OutdatedSchemaWarning.get_warning_message": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.StandardTagsRemovalWarning": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.StandardTagsRemovalWarning.get_warning_message": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.exceptions.UpgradeSchemaWarning": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.exceptions.UpgradeSchemaWarning.get_warning_message": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.indexers": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.indexers._iLocIndexer": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.indexers._iLocIndexer.__getitem__": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.indexers._iLocIndexer.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "woodwork.DataColumn",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.logical_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.logical_types.Boolean": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Categorical": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Categorical.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.ClassNameDescriptor": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.ClassNameDescriptor.__get__": {
  "lineno": 10,
  "symbols_in_volume": [
   "woodwork.utils.camel_to_snake"
  ],
  "type": "function"
 },
 "woodwork.logical_types.CountryCode": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Datetime": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Datetime.__init__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.Double": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.EmailAddress": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Filepath": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.FullName": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.IPAddress": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Integer": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LatLong": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LogicalType": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LogicalType.__eq__": {
  "lineno": 27,
  "symbols_in_volume": [
   "woodwork.type_sys.utils._get_specified_ltype_params"
  ],
  "type": "function"
 },
 "woodwork.logical_types.LogicalType.__str__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.LogicalTypeMetaClass": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.LogicalTypeMetaClass.__repr__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.NaturalLanguage": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Ordinal": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Ordinal.__init__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.logical_types.Ordinal._validate_data": {
  "lineno": 256,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "woodwork.logical_types.PhoneNumber": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.SubRegionCode": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.Timedelta": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.URL": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.logical_types.ZIPCode": {
  "lineno": 325,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.s3_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.s3_utils.get_transport_params": {
  "lineno": 18,
  "symbols_in_volume": [
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.s3_utils.use_smartopen": {
  "lineno": 6,
  "symbols_in_volume": [
   "shutil.copyfileobj",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.serialize": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.serialize.create_archive": {
  "lineno": 167,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.path.join",
   "tarfile.open"
  ],
  "type": "function"
 },
 "woodwork.serialize.datatable_to_description": {
  "lineno": 24,
  "symbols_in_volume": [
   "woodwork.type_sys.utils._get_ltype_class",
   "woodwork.type_sys.utils._get_specified_ltype_params"
  ],
  "type": "function"
 },
 "woodwork.serialize.dump_table": {
  "lineno": 94,
  "symbols_in_volume": [
   "json.dump",
   "os.path.join"
  ],
  "type": "function"
 },
 "woodwork.serialize.write_datatable": {
  "lineno": 68,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.abspath",
   "os.path.join",
   "tempfile.TemporaryDirectory",
   "woodwork.s3_utils.get_transport_params",
   "woodwork.s3_utils.use_smartopen",
   "woodwork.utils._is_s3",
   "woodwork.utils._is_url"
  ],
  "type": "function"
 },
 "woodwork.serialize.write_table_data": {
  "lineno": 109,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.DataFrame",
   "woodwork.logical_types.LatLong",
   "woodwork.type_sys.utils._get_ltype_class"
  ],
  "type": "function"
 },
 "woodwork.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.conftest.categorical_df": {
  "lineno": 354,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.categorical_df_dask": {
  "lineno": 342,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.categorical_df_koalas": {
  "lineno": 348,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.categorical_df_pandas": {
  "lineno": 331,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.dask_latlongs": {
  "lineno": 444,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df": {
  "lineno": 269,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df_dask": {
  "lineno": 255,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df_koalas": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas.isnull",
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.describe_df_pandas": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi": {
  "lineno": 326,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi_dask": {
  "lineno": 314,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi_koalas": {
  "lineno": 320,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_mi_pandas": {
  "lineno": 303,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi": {
  "lineno": 298,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi_dask": {
  "lineno": 284,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi_koalas": {
  "lineno": 290,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.df_same_mi_pandas": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.empty_df": {
  "lineno": 371,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.empty_df_dask": {
  "lineno": 364,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.empty_df_pandas": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.falsy_names_df": {
  "lineno": 479,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.falsy_names_df_dask": {
  "lineno": 467,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.falsy_names_df_koalas": {
  "lineno": 473,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.falsy_names_df_pandas": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.koalas_latlongs": {
  "lineno": 449,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.latlong_df": {
  "lineno": 425,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.latlong_df_dask": {
  "lineno": 413,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.latlong_df_koalas": {
  "lineno": 419,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.latlong_df_pandas": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.latlongs": {
  "lineno": 454,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df": {
  "lineno": 195,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df_dask": {
  "lineno": 181,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df_koalas": {
  "lineno": 187,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.numeric_time_index_df_pandas": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.pandas_latlongs": {
  "lineno": 431,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.pd_to_dask": {
  "lineno": 8,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.pd_to_koalas": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_combos": {
  "lineno": 32,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series": {
  "lineno": 121,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series_dask": {
  "lineno": 131,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series_koalas": {
  "lineno": 137,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_datetime_series_pandas": {
  "lineno": 126,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df": {
  "lineno": 39,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df_dask": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df_koalas": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_df_pandas": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series": {
  "lineno": 99,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series_dask": {
  "lineno": 109,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series_koalas": {
  "lineno": 115,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_series_pandas": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df": {
  "lineno": 69,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df_dask": {
  "lineno": 87,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df_koalas": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.sample_unsorted_df_pandas": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.small_df": {
  "lineno": 393,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.small_df_dask": {
  "lineno": 381,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.small_df_koalas": {
  "lineno": 387,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.small_df_pandas": {
  "lineno": 376,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_datetime",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.spark_session": {
  "lineno": 18,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.utils.import_or_none"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df": {
  "lineno": 167,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df_dask": {
  "lineno": 155,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df_koalas": {
  "lineno": 161,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.conftest.time_index_df_pandas": {
  "lineno": 143,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.datacolumn.test_data_column": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datacolumn.test_data_column.test_add_custom_tags": {
  "lineno": 275,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_adds_category_standard_tag": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_adds_numeric_standard_tag": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_description": {
  "lineno": 183,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_description_error": {
  "lineno": 193,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_equality": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_extension_array": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.arrays.IntegerArray",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_logical_type": {
  "lineno": 38,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_name": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_numpy_array": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_with_semantic_tags": {
  "lineno": 52,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_init_wrong_series": {
  "lineno": 58,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_inity_with_falsy_name": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_metadata": {
  "lineno": 647,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_metadata_error": {
  "lineno": 668,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_repr": {
  "lineno": 199,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_datacolumn_with_alternate_semantic_tags_input": {
  "lineno": 149,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_does_not_add_standard_tags": {
  "lineno": 265,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_dtype_update_on_init": {
  "lineno": 516,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_dtype_update_on_ltype_change": {
  "lineno": 522,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_invalid_logical_type": {
  "lineno": 159,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_latlong_formatting": {
  "lineno": 582,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "woodwork.datacolumn.DataColumn",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_len": {
  "lineno": 511,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_requires_instance_on_init": {
  "lineno": 530,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_requires_instance_on_update": {
  "lineno": 538,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_with_incomplete_ranking": {
  "lineno": 563,
  "symbols_in_volume": [
   "pytest.raises",
   "pytest.xfail",
   "re.escape",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_with_nan_values": {
  "lineno": 574,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_ordinal_with_order": {
  "lineno": 548,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_raises_error_setting_index_tag_directly": {
  "lineno": 454,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_raises_error_setting_time_index_tag_directly": {
  "lineno": 467,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_remove_semantic_tags": {
  "lineno": 404,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_remove_semantic_tags_raises_error_with_invalid_tag": {
  "lineno": 446,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_remove_standard_semantic_tag": {
  "lineno": 421,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_with_index": {
  "lineno": 378,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_with_standard_tags": {
  "lineno": 355,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Categorical.standard_tags"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_with_time_index": {
  "lineno": 391,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_reset_semantic_tags_without_standard_tags": {
  "lineno": 367,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_semantic_tag_errors": {
  "lineno": 169,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_as_index": {
  "lineno": 480,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_as_time_index": {
  "lineno": 486,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_retains_index_tag": {
  "lineno": 327,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_retains_time_index_tag": {
  "lineno": 341,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_with_standard_tags": {
  "lineno": 301,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_logical_type_without_standard_tags": {
  "lineno": 314,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_semantic_tags": {
  "lineno": 210,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_semantic_tags_with_index": {
  "lineno": 221,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_set_semantic_tags_with_time_index": {
  "lineno": 233,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_shape": {
  "lineno": 500,
  "symbols_in_volume": [
   "woodwork.datacolumn.DataColumn"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_to_series": {
  "lineno": 492,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "woodwork.datacolumn.DataColumn",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datacolumn.test_data_column.test_warns_on_setting_duplicate_tag": {
  "lineno": 290,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.datacolumn.DataColumn",
   "woodwork.exceptions.DuplicateTagsWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.datatable.test_datatable": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datatable.test_datatable.test_add_semantic_tags": {
  "lineno": 685,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_bool_dtype_inference_on_init": {
  "lineno": 1123,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_column_metadata_errors": {
  "lineno": 317,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable",
   "woodwork.datatable._check_column_metadata"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_index_errors": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "woodwork.datatable._check_index"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_logical_types_errors": {
  "lineno": 295,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datatable._check_logical_types"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_semantic_tags_errors": {
  "lineno": 503,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.datatable._check_semantic_tags"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_table_metadata_errors": {
  "lineno": 311,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datatable._check_table_metadata"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_time_index_errors": {
  "lineno": 277,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.datatable._check_time_index"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_check_unique_column_names": {
  "lineno": 283,
  "symbols_in_volume": [
   "pytest.raises",
   "pytest.skip",
   "woodwork.datatable._check_unique_column_names"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_adds_standard_semantic_tags": {
  "lineno": 226,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_already_sorted": {
  "lineno": 2937,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_clear_index": {
  "lineno": 1875,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_clear_time_index": {
  "lineno": 1891,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_col_descriptions_warnings": {
  "lineno": 3015,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_column_order_after_rename": {
  "lineno": 2918,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_method": {
  "lineno": 2176,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NaT",
   "pandas.Series",
   "pandas.Timedelta",
   "pandas.Timestamp",
   "pandas.testing.assert_series_equal",
   "pandas.to_datetime",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.Timedelta",
   "woodwork.logical_types.URL",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_improper_tags": {
  "lineno": 2395,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_include": {
  "lineno": 2439,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_no_match": {
  "lineno": 2626,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_describe_with_no_semantic_tags": {
  "lineno": 2418,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_df_property": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_drop": {
  "lineno": 3029,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_drop_errors": {
  "lineno": 3078,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_drop_indices": {
  "lineno": 3062,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_equality": {
  "lineno": 2692,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_falsy_column_names": {
  "lineno": 3093,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_getitem_list_input": {
  "lineno": 1439,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_getitem_list_warnings": {
  "lineno": 1498,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_handle_nans_for_mutual_info": {
  "lineno": 2511,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_head": {
  "lineno": 397,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_col_descriptions": {
  "lineno": 3005,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_column_metadata": {
  "lineno": 3119,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_invalid_string_time_index": {
  "lineno": 140,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_logical_types": {
  "lineno": 146,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_name_and_index_vals": {
  "lineno": 74,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_numpy": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.array",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_semantic_tags": {
  "lineno": 183,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_string_logical_types": {
  "lineno": 158,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_init_with_valid_string_time_index": {
  "lineno": 86,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_len": {
  "lineno": 2810,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_logical_types": {
  "lineno": 476,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_ltypes": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LogicalType",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_make_categorical_for_mutual_info": {
  "lineno": 2535,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_metadata": {
  "lineno": 2891,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_mutual_information": {
  "lineno": 2567,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.tests.testing_utils.mi_between_cols",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_physical_types": {
  "lineno": 467,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_rename": {
  "lineno": 2754,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_rename_errors": {
  "lineno": 2734,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_repr": {
  "lineno": 425,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_repr_empty": {
  "lineno": 437,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_same_mutual_information": {
  "lineno": 2555,
  "symbols_in_volume": [
   "numpy.unique",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.mi_between_cols"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_semantic_tags": {
  "lineno": 487,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_sizeof": {
  "lineno": 2801,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_types": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LogicalType",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_typing_info_with_col_names": {
  "lineno": 363,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LogicalType",
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe": {
  "lineno": 2815,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_already_sorted": {
  "lineno": 2974,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_different_num_cols": {
  "lineno": 2875,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_missing_col": {
  "lineno": 2883,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_update_dataframe_with_make_index": {
  "lineno": 2848,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_with_numeric_datetime_time_index": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datatable_with_numeric_time_index": {
  "lineno": 109,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datetime_dtype_inference_on_init": {
  "lineno": 1170,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_datetime",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_datetime_inference_with_format_param": {
  "lineno": 2101,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_describe_dict": {
  "lineno": 2146,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_describe_does_not_include_index": {
  "lineno": 2170,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_filter_cols": {
  "lineno": 2070,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_filter_cols_errors": {
  "lineno": 2094,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_float_dtype_inference_on_init": {
  "lineno": 1156,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_getitem": {
  "lineno": 1414,
  "symbols_in_volume": [
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_getitem_invalid_input": {
  "lineno": 1427,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_int_dtype_inference_on_init": {
  "lineno": 1109,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_invalid_dtype_casting": {
  "lineno": 1074,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_make_index": {
  "lineno": 2632,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_dict": {
  "lineno": 2618,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_does_not_include_index": {
  "lineno": 2598,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_returns_empty_df_properly": {
  "lineno": 2604,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_mutual_info_sort": {
  "lineno": 2610,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_natural_language_inference_with_config_options": {
  "lineno": 2134,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataTable",
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_new_dt_from_columns": {
  "lineno": 1303,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.tests.testing_utils.validate_subset_dt"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_numeric_index_strings": {
  "lineno": 2665,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_numeric_time_index_dtypes": {
  "lineno": 2641,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_pop": {
  "lineno": 1376,
  "symbols_in_volume": [
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_pop_error": {
  "lineno": 1403,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_pop_index": {
  "lineno": 1395,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_remove_semantic_tags": {
  "lineno": 776,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_all_semantic_tags": {
  "lineno": 708,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_selected_column_semantic_tags": {
  "lineno": 725,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_semantic_tags_invalid_column": {
  "lineno": 769,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_semantic_tags_with_index": {
  "lineno": 739,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_reset_semantic_tags_with_time_index": {
  "lineno": 754,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_instantiated": {
  "lineno": 2044,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_invalid_inputs": {
  "lineno": 1929,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_list_inputs": {
  "lineno": 1983,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_mixed": {
  "lineno": 1256,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_no_match_and_all": {
  "lineno": 1201,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.ZIPCode",
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_objects": {
  "lineno": 1237,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_strings": {
  "lineno": 1218,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_ltypes_table": {
  "lineno": 1271,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_maintain_order": {
  "lineno": 2063,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.check_column_order"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_semantic_tags": {
  "lineno": 1335,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_semantic_tags_no_match": {
  "lineno": 2020,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_select_single_inputs": {
  "lineno": 1951,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_semantic_tags_during_init": {
  "lineno": 575,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_index": {
  "lineno": 1686,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_index_twice": {
  "lineno": 1727,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_logical_types": {
  "lineno": 519,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_logical_types_invalid_data": {
  "lineno": 564,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.DataTable",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_semantic_tags": {
  "lineno": 598,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_semantic_tags_with_index": {
  "lineno": 625,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_semantic_tags_with_time_index": {
  "lineno": 638,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_time_index": {
  "lineno": 1834,
  "symbols_in_volume": [
   "pandas.to_datetime",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_set_types_combined": {
  "lineno": 651,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_different_name": {
  "lineno": 1523,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.warns",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.exceptions.ColumnNameMismatchWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_invalid_input": {
  "lineno": 1507,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises",
   "woodwork.DataColumn",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_new_column": {
  "lineno": 1564,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_overwrite_column": {
  "lineno": 1623,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_setitem_with_differnt_types": {
  "lineno": 1669,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_boolean_dtype_on_init": {
  "lineno": 930,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_boolean_dtype_on_update": {
  "lineno": 951,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Boolean.pandas_dtype",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_category_dtype_on_init": {
  "lineno": 800,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_category_dtype_on_update": {
  "lineno": 830,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.ZIPCode"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_datetime64_dtype_on_init": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_datetime_dtype_on_update": {
  "lineno": 1060,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Datetime.pandas_dtype",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_float64_dtype_on_init": {
  "lineno": 1004,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Double"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_float64_dtype_on_update": {
  "lineno": 1024,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Double.pandas_dtype",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_int64_dtype_on_init": {
  "lineno": 965,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_int64_dtype_on_update": {
  "lineno": 987,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_object_dtype_on_init": {
  "lineno": 853,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.LatLong.pandas_dtype"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_object_dtype_on_update": {
  "lineno": 864,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.LatLong.pandas_dtype",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_string_dtype_on_init": {
  "lineno": 876,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.URL"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_sets_string_dtype_on_update": {
  "lineno": 906,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.URL"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_shape": {
  "lineno": 1907,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_str_dtype_inference_on_init": {
  "lineno": 1137,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.Series",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_timedelta_dtype_inference_on_init": {
  "lineno": 1186,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pandas.NA",
   "pandas.NaT",
   "pandas.Series",
   "pandas.to_datetime",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_underlying_index": {
  "lineno": 1773,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.RangeIndex",
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_underlying_index_no_index": {
  "lineno": 1754,
  "symbols_in_volume": [
   "pandas.Int64Index",
   "pandas.RangeIndex",
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_underlying_index_on_update": {
  "lineno": 1819,
  "symbols_in_volume": [
   "pandas.Int64Index",
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_validate_params_errors": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.raises",
   "woodwork.datatable._validate_dataframe",
   "woodwork.datatable._validate_params"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_datatable.test_value_counts": {
  "lineno": 2467,
  "symbols_in_volume": [
   "numpy.nan",
   "woodwork.DataTable",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.datatable.test_serialization.create_test_config": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.create_test_credentials": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.make_public": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.s3_bucket": {
  "lineno": 233,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.s3_client": {
  "lineno": 221,
  "symbols_in_volume": [
   "boto3.resource",
   "moto.mock_s3",
   "os.environ.clear",
   "os.environ.copy",
   "os.environ.update",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.setup_test_profile": {
  "lineno": 338,
  "symbols_in_volume": [
   "os.path.join",
   "os.remove",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_check_later_schema_version": {
  "lineno": 420,
  "symbols_in_volume": [
   "woodwork.serialize.SCHEMA_VERSION.split"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_check_later_schema_version.test_version": {
  "lineno": 421,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.deserialize._check_schema_version",
   "woodwork.exceptions.UpgradeSchemaWarning",
   "woodwork.serialize.SCHEMA_VERSION"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_deserialize_s3_csv": {
  "lineno": 412,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_deserialize_url_csv": {
  "lineno": 396,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_deserialize_url_csv_anon": {
  "lineno": 404,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_earlier_schema_version": {
  "lineno": 443,
  "symbols_in_volume": [
   "woodwork.serialize.SCHEMA_VERSION.split"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_earlier_schema_version.test_version": {
  "lineno": 444,
  "symbols_in_volume": [
   "pytest.warns",
   "woodwork.deserialize._check_schema_version",
   "woodwork.exceptions.OutdatedSchemaWarning"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_s3_test_profile": {
  "lineno": 365,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_parquet": {
  "lineno": 272,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_parquet_anon": {
  "lineno": 312,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_pickle": {
  "lineno": 262,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_s3_pickle_anon": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_subdirs_not_removed": {
  "lineno": 383,
  "symbols_in_volume": [
   "json.dump",
   "json.load",
   "os.path.exists",
   "woodwork.DataTable",
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_url_csv": {
  "lineno": 376,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_serialize_wrong_format": {
  "lineno": 135,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.serialize.write_datatable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv": {
  "lineno": 143,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.logical_types.Ordinal",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv_S3": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.logical_types.Ordinal",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv_S3_anon": {
  "lineno": 284,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.logical_types.Ordinal",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_csv_with_latlong": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_dictionary": {
  "lineno": 34,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_parquet": {
  "lineno": 202,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_parquet_with_latlong": {
  "lineno": 211,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_pickle": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_to_pickle_with_latlong": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pytest.raises",
   "woodwork.DataTable",
   "woodwork.deserialize.read_datatable",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.test_unserializable_table": {
  "lineno": 127,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.datatable.test_serialization.xfail_tmp_disappears": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "woodwork.tests.demo_tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.demo_tests.test_retail": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.demo_tests.test_retail.set_testing_headers": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.demo_tests.test_retail.test_load_retail_datatable": {
  "lineno": 36,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.demo.load_retail",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.demo_tests.test_retail.test_load_retail_diff": {
  "lineno": 24,
  "symbols_in_volume": [
   "woodwork.demo.load_retail"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.logical_types.test_logical_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.logical_types.test_logical_types.test_instantiated_type_str": {
  "lineno": 22,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_logical_eq": {
  "lineno": 6,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_logical_repr": {
  "lineno": 15,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_ordinal_init_with_order": {
  "lineno": 35,
  "symbols_in_volume": [
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.logical_types.test_logical_types.test_ordinal_order_errors": {
  "lineno": 27,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.test_cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_cli.test_list_logical_types": {
  "lineno": 4,
  "symbols_in_volume": [
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "woodwork.tests.test_cli.test_list_semantic_tags": {
  "lineno": 8,
  "symbols_in_volume": [
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_config.config": {
  "lineno": 14,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.config.Config"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.defaults": {
  "lineno": 6,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.test_get_option": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_config.test_init_conifg": {
  "lineno": 19,
  "symbols_in_volume": [
   "woodwork.config.Config"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.test_invalid_option_warnings": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "woodwork.tests.test_config.test_repr": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_config.test_reset_option": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_config.test_set_option": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.test_indexers": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.test_indexers.test_iLocIndexer_class": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.indexers._iLocIndexer",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iLocIndexer_class_error": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.DataColumn",
   "woodwork.DataTable",
   "woodwork.indexers._iLocIndexer"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_datacolumn": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas.testing.assert_series_equal",
   "pytest.xfail",
   "woodwork.DataColumn",
   "woodwork.logical_types.Categorical",
   "woodwork.tests.testing_utils.to_pandas"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_dimensionality": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_indices": {
  "lineno": 132,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_indices_column": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.tests.test_indexers.test_iloc_with_properties": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.xfail",
   "woodwork.DataTable",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.PhoneNumber"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.test_utils.test_camel_to_snake": {
  "lineno": 37,
  "symbols_in_volume": [
   "woodwork.utils.camel_to_snake"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_convert_input_to_set": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.utils._convert_input_to_set"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_get_ltype_params": {
  "lineno": 225,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.type_sys.utils._get_specified_ltype_params"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_get_mode": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NA",
   "pandas.Series",
   "woodwork.utils._get_mode"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_import_or_none": {
  "lineno": 287,
  "symbols_in_volume": [
   "pandas",
   "woodwork.utils.import_or_none"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_import_or_raise": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandas",
   "pytest.raises",
   "woodwork.utils.import_or_raise"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_null_latlong": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NA",
   "woodwork.utils._is_null_latlong"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_numeric_datetime_series": {
  "lineno": 202,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.type_sys.utils._is_numeric_series"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_s3": {
  "lineno": 297,
  "symbols_in_volume": [
   "woodwork.utils._is_s3"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_is_url": {
  "lineno": 292,
  "symbols_in_volume": [
   "woodwork.utils._is_url"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_list_logical_types_customized_type_system": {
  "lineno": 87,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.type_sys.utils.list_logical_types",
   "woodwork.type_system.add_type",
   "woodwork.type_system.remove_type",
   "woodwork.type_system.reset_defaults"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_list_logical_types_customized_type_system.CustomNotRegistered": {
  "lineno": 93,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType"
  ],
  "type": "class"
 },
 "woodwork.tests.test_utils.test_list_logical_types_customized_type_system.CustomRegistered": {
  "lineno": 90,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType"
  ],
  "type": "class"
 },
 "woodwork.tests.test_utils.test_list_logical_types_default": {
  "lineno": 72,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.type_sys.utils.list_logical_types",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_list_semantic_tags": {
  "lineno": 116,
  "symbols_in_volume": [
   "woodwork.type_sys.utils.list_semantic_tags"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_new_dt_including": {
  "lineno": 242,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_new_dt_including_all_params": {
  "lineno": 251,
  "symbols_in_volume": [
   "inspect.getfullargspec",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.DataTable.__init__",
   "woodwork.tests.testing_utils.to_pandas",
   "woodwork.utils._new_dt_including"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_read_csv_no_params": {
  "lineno": 148,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.read_csv"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_read_csv_with_pandas_params": {
  "lineno": 188,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.read_csv"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_read_csv_with_woodwork_params": {
  "lineno": 160,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.testing.assert_frame_equal",
   "woodwork.DataTable",
   "woodwork.read_csv"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_reformat_to_latlong": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.nan",
   "woodwork.utils._reformat_to_latlong"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_reformat_to_latlong_errors": {
  "lineno": 302,
  "symbols_in_volume": [
   "pytest.raises",
   "re.escape",
   "woodwork.utils._reformat_to_latlong"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_reformat_to_latlong_list": {
  "lineno": 344,
  "symbols_in_volume": [
   "numpy.nan",
   "woodwork.utils._reformat_to_latlong"
  ],
  "type": "function"
 },
 "woodwork.tests.test_utils.test_to_latlong_float": {
  "lineno": 364,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.NA",
   "pytest.raises",
   "re.escape",
   "woodwork.utils._to_latlong_float"
  ],
  "type": "function"
 },
 "woodwork.tests.test_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.test_version.test_version": {
  "lineno": 4,
  "symbols_in_volume": [
   "woodwork.__version__"
  ],
  "type": "function"
 },
 "woodwork.tests.testing_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.testing_utils.datatable_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.testing_utils.datatable_utils.check_column_order": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.testing_utils.datatable_utils.mi_between_cols": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.testing_utils.datatable_utils.to_pandas": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "woodwork.tests.testing_utils.datatable_utils.validate_subset_dt": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.type_system": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.type_system.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.type_system.conftest.bools": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.categories": {
  "lineno": 148,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_bools": {
  "lineno": 88,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_categories": {
  "lineno": 138,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_datetimes": {
  "lineno": 112,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_doubles": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_integers": {
  "lineno": 40,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_long_strings": {
  "lineno": 211,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_pdnas": {
  "lineno": 236,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_strings": {
  "lineno": 180,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.dask_timedeltas": {
  "lineno": 162,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.datetimes": {
  "lineno": 122,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.default_inference_functions": {
  "lineno": 246,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_sys.inference_functions.categorical_func",
   "woodwork.type_sys.inference_functions.double_func",
   "woodwork.type_sys.inference_functions.integer_func"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.default_relationships": {
  "lineno": 257,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.doubles": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.integers": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_bools": {
  "lineno": 93,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_categories": {
  "lineno": 143,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_datetimes": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_doubles": {
  "lineno": 69,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_integers": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_long_strings": {
  "lineno": 216,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.koalas_strings": {
  "lineno": 185,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.long_strings": {
  "lineno": 221,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_bools": {
  "lineno": 80,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_categories": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_datetimes": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_doubles": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_integers": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_long_strings": {
  "lineno": 196,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_pdnas": {
  "lineno": 227,
  "symbols_in_volume": [
   "pandas.NA",
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_strings": {
  "lineno": 173,
  "symbols_in_volume": [
   "pandas.Series",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pandas_timedeltas": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Series",
   "pandas.to_timedelta",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pd_to_dask": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pd_to_koalas": {
  "lineno": 26,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.pdnas": {
  "lineno": 241,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.strings": {
  "lineno": 190,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.timedeltas": {
  "lineno": 167,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.conftest.type_sys": {
  "lineno": 262,
  "symbols_in_volume": [
   "pytest.fixture",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_custom_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.type_system.test_custom_types.test_custom_type_with_datatable": {
  "lineno": 24,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.type_system.add_type",
   "woodwork.type_system.reset_defaults"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_custom_types.test_custom_type_with_datatable.AgesAbove20": {
  "lineno": 25,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType"
  ],
  "type": "class"
 },
 "woodwork.tests.type_system.test_custom_types.test_custom_type_with_datatable.ages_func": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.type_system.test_custom_types.test_override_default_function": {
  "lineno": 43,
  "symbols_in_volume": [
   "woodwork.DataTable",
   "woodwork.logical_types.Double",
   "woodwork.type_system.reset_defaults",
   "woodwork.type_system.update_inference_function"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_custom_types.test_override_default_function.new_double_func": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.api.types.is_integer_dtype"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_custom_types.test_register_custom_logical_type": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.logical_types.Categorical"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_custom_types.test_register_custom_logical_type.CustomLogicalType": {
  "lineno": 9,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType"
  ],
  "type": "class"
 },
 "woodwork.tests.type_system.test_custom_types.test_register_custom_logical_type.custom_func": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.tests.type_system.test_ltype_inference.get_koalas_dtypes": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_boolean_inference": {
  "lineno": 62,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_categorical_double_inference": {
  "lineno": 105,
  "symbols_in_volume": [
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.logical_types.Categorical",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_categorical_inference": {
  "lineno": 83,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_categorical_integers_inference": {
  "lineno": 93,
  "symbols_in_volume": [
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.logical_types.Categorical",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_datetime_inference": {
  "lineno": 72,
  "symbols_in_volume": [
   "woodwork.logical_types.Datetime",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_double_inference": {
  "lineno": 51,
  "symbols_in_volume": [
   "woodwork.logical_types.Double",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_integer_inference": {
  "lineno": 40,
  "symbols_in_volume": [
   "woodwork.logical_types.Integer",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_natural_language_inference": {
  "lineno": 125,
  "symbols_in_volume": [
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_natural_language_inference_with_threshhold": {
  "lineno": 136,
  "symbols_in_volume": [
   "woodwork.config.reset_option",
   "woodwork.config.set_option",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_pdna_inference": {
  "lineno": 150,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_timedelta_inference": {
  "lineno": 117,
  "symbols_in_volume": [
   "woodwork.logical_types.Timedelta",
   "woodwork.type_system.infer_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_updated_ltype_inference": {
  "lineno": 162,
  "symbols_in_volume": [
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_ltype_inference.test_updated_ltype_inference.Integer": {
  "lineno": 166,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType"
  ],
  "type": "class"
 },
 "woodwork.tests.type_system.test_type_system": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.tests.type_system.test_type_system.test_add_duplicate_ltype": {
  "lineno": 139,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Integer",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_add_duplicate_ltype.Integer": {
  "lineno": 144,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType"
  ],
  "type": "class"
 },
 "woodwork.tests.type_system.test_type_system.test_add_type_validation_errors": {
  "lineno": 38,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_add_type_with_parent": {
  "lineno": 129,
  "symbols_in_volume": [
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.type_sys.inference_functions.double_func",
   "woodwork.type_sys.inference_functions.integer_func",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_add_type_without_parent": {
  "lineno": 118,
  "symbols_in_volume": [
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.type_sys.inference_functions.double_func",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_get_children": {
  "lineno": 184,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_get_depth": {
  "lineno": 197,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_get_logical_types": {
  "lineno": 286,
  "symbols_in_volume": [
   "woodwork.type_system._get_logical_types",
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_get_parent": {
  "lineno": 192,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_inference_multiple_matches_different_depths": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_inference_multiple_matches_different_depths.always_true": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_inference_multiple_matches_same_depth": {
  "lineno": 235,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_inference_multiple_matches_same_depth.always_true": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_remove_type_no_children": {
  "lineno": 164,
  "symbols_in_volume": [
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_remove_type_validation_errors": {
  "lineno": 58,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_remove_type_with_children": {
  "lineno": 175,
  "symbols_in_volume": [
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_reset_defaults": {
  "lineno": 275,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_str_to_logical_type": {
  "lineno": 297,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.FullName",
   "woodwork.type_sys.type_system.TypeSystem",
   "woodwork.type_system.registered_types",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_type_system_default_type": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.Series",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_type_system_default_type_remove_error": {
  "lineno": 95,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_type_system_init": {
  "lineno": 26,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.type_sys.inference_functions.categorical_func",
   "woodwork.type_sys.inference_functions.double_func",
   "woodwork.type_sys.inference_functions.integer_func",
   "woodwork.type_sys.type_system.TypeSystem"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_type_system_registered_types": {
  "lineno": 108,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_type_system_root_types": {
  "lineno": 113,
  "symbols_in_volume": [
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_update_inference_function": {
  "lineno": 204,
  "symbols_in_volume": [
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Double",
   "woodwork.type_sys.inference_functions.double_func",
   "woodwork.type_sys.inference_functions.integer_func"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_update_inference_function_validation_errors": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_update_relationship_no_children": {
  "lineno": 212,
  "symbols_in_volume": [
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_update_relationship_string_input": {
  "lineno": 219,
  "symbols_in_volume": [
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Integer"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_update_relationship_validation_errors": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.raises",
   "woodwork.logical_types.Ordinal"
  ],
  "type": "function"
 },
 "woodwork.tests.type_system.test_type_system.test_update_relationship_with_children": {
  "lineno": 226,
  "symbols_in_volume": [
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.SubRegionCode"
  ],
  "type": "function"
 },
 "woodwork.type_sys": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.type_sys.inference_functions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.type_sys.inference_functions._is_numeric_categorical": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.inference_functions.boolean_func": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.api.types.is_bool_dtype"
  ],
  "type": "function"
 },
 "woodwork.type_sys.inference_functions.categorical_func": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas.api.types.is_categorical_dtype",
   "pandas.api.types.is_float_dtype",
   "pandas.api.types.is_integer_dtype",
   "pandas.api.types.is_string_dtype",
   "woodwork.config.get_option",
   "woodwork.type_sys.utils.col_is_datetime"
  ],
  "type": "function"
 },
 "woodwork.type_sys.inference_functions.datetime_func": {
  "lineno": 53,
  "symbols_in_volume": [
   "woodwork.type_sys.utils.col_is_datetime"
  ],
  "type": "function"
 },
 "woodwork.type_sys.inference_functions.double_func": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.api.types.is_float_dtype",
   "woodwork.config.get_option"
  ],
  "type": "function"
 },
 "woodwork.type_sys.inference_functions.integer_func": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas.api.types.is_integer_dtype",
   "woodwork.config.get_option"
  ],
  "type": "function"
 },
 "woodwork.type_sys.inference_functions.timedelta_func": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.api.types.is_timedelta64_dtype"
  ],
  "type": "function"
 },
 "woodwork.type_sys.type_system": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.logical_types.Boolean",
   "woodwork.logical_types.Categorical",
   "woodwork.logical_types.CountryCode",
   "woodwork.logical_types.Datetime",
   "woodwork.logical_types.Double",
   "woodwork.logical_types.EmailAddress",
   "woodwork.logical_types.Filepath",
   "woodwork.logical_types.FullName",
   "woodwork.logical_types.IPAddress",
   "woodwork.logical_types.Integer",
   "woodwork.logical_types.LatLong",
   "woodwork.logical_types.NaturalLanguage",
   "woodwork.logical_types.Ordinal",
   "woodwork.logical_types.PhoneNumber",
   "woodwork.logical_types.SubRegionCode",
   "woodwork.logical_types.Timedelta",
   "woodwork.logical_types.URL",
   "woodwork.logical_types.ZIPCode",
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.type_sys.type_system.TypeSystem": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "woodwork.type_sys.type_system.TypeSystem.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem._get_children": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem._get_depth": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem._get_logical_types": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem._get_parent": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem._validate_type_input": {
  "lineno": 229,
  "symbols_in_volume": [
   "woodwork.logical_types.LogicalType.__subclasses__"
  ],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.add_type": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.infer_logical_type": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.infer_logical_type.get_inference_matches": {
  "lineno": 252,
  "symbols_in_volume": [
   "woodwork.logical_types.NaturalLanguage"
  ],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.registered_types": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.remove_type": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.reset_defaults": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.root_types": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.str_to_logical_type": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.update_inference_function": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.type_system.TypeSystem.update_relationship": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.type_sys.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "woodwork.utils.import_or_none"
  ],
  "type": "module"
 },
 "woodwork.type_sys.utils._get_ltype_class": {
  "lineno": 121,
  "symbols_in_volume": [
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.type_sys.utils._get_specified_ltype_params": {
  "lineno": 127,
  "symbols_in_volume": [
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.type_sys.utils._is_numeric_series": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.api.types.is_numeric_dtype",
   "pandas.to_numeric",
   "woodwork.logical_types.Datetime",
   "woodwork.type_system.infer_logical_type",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.type_sys.utils.col_is_datetime": {
  "lineno": 11,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.to_datetime",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "woodwork.type_sys.utils.list_logical_types": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.logical_types.LogicalType.__subclasses__",
   "woodwork.type_system._default_inference_functions",
   "woodwork.type_system._get_parent",
   "woodwork.type_system.registered_types"
  ],
  "type": "function"
 },
 "woodwork.type_sys.utils.list_semantic_tags": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "woodwork.type_system.registered_types",
   "woodwork.type_system.str_to_logical_type"
  ],
  "type": "function"
 },
 "woodwork.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "woodwork.utils._convert_input_to_set": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._get_mode": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._is_null_latlong": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas.isnull"
  ],
  "type": "function"
 },
 "woodwork.utils._is_s3": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._is_url": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "woodwork.utils._new_dt_including": {
  "lineno": 106,
  "symbols_in_volume": [
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.utils._reformat_to_latlong": {
  "lineno": 181,
  "symbols_in_volume": [
   "ast.literal_eval",
   "numpy.nan",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "woodwork.utils._to_latlong_float": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "woodwork.utils.camel_to_snake": {
  "lineno": 26,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "woodwork.utils.import_or_none": {
  "lineno": 12,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "woodwork.utils.import_or_raise": {
  "lineno": 150,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "woodwork.utils.read_csv": {
  "lineno": 61,
  "symbols_in_volume": [
   "pandas.read_csv",
   "woodwork.DataTable"
  ],
  "type": "function"
 },
 "woodwork.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}