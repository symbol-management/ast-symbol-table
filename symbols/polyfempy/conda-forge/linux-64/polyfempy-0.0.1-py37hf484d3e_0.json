{
 "polyfempy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "polyfempy.Problems": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "polyfempy.Problems.DrivenCavity": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.DrivenCavity.name": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.DrivenCavity.params": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Flow": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.Flow.__init__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Flow.name": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Flow.params": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Franke": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.Franke.name": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Franke.params": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericScalar": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.GenericScalar.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericScalar.add_dirichlet_value": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericScalar.add_neumann_value": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericScalar.name": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericScalar.params": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericTensor": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.GenericTensor.__init__": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericTensor.add_dirichlet_value": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericTensor.add_neumann_value": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericTensor.name": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.GenericTensor.params": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Gravity": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.Gravity.name": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Gravity.params": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Torsion": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Problems.Torsion.__init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Torsion.name": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Problems.Torsion.params": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "polyfempy.Settings.Settings": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "polyfempy.Settings.Settings.__init__": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.serialize": {
  "lineno": 66,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_advanced_option": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_isolines_export_path": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_material_params": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_problem": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_solution_export_path": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_vtu_export_path": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "polyfempy.Settings.Settings.set_wireframe_export_path": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.bending": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.bending.BendingTest": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.bending.BendingTest.test_run": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "polyfempy.GenericTensor",
   "polyfempy.Settings",
   "polyfempy.Solver",
   "polyfempy.TensorFormulations.LinearElasticity"
  ],
  "type": "function"
 },
 "tests.inflation": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.inflation.InflationTest": {
  "lineno": 9,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.inflation.InflationTest.test_run": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.unique",
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "polyfempy.GenericScalar",
   "polyfempy.ScalarFormulations.Laplacian",
   "polyfempy.Settings",
   "polyfempy.Solver"
  ],
  "type": "function"
 },
 "tests.torsion": {
  "lineno": null,
  "symbols_in_volume": [
   "unittest.main"
  ],
  "type": "module"
 },
 "tests.torsion.TorsionTest": {
  "lineno": 8,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.torsion.TorsionTest.test_run": {
  "lineno": 9,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "polyfempy.Settings",
   "polyfempy.Solver",
   "polyfempy.TensorFormulations.NeoHookean",
   "polyfempy.Torsion"
  ],
  "type": "function"
 }
}