{
 "healpy": {
  "data": {},
  "type": "module"
 },
 "healpy.alm2map_spin": {
  "data": {
   "shadows": "alm2map_spin_healpy"
  },
  "type": "import"
 },
 "healpy.cookbook": {
  "data": {},
  "type": "module"
 },
 "healpy.cookbook.is_like2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "healpy.cookbook.is_seq",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.cookbook.is_seq": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "healpy.cookbook.is_seq_of_seq": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "healpy.cookbook.is_seq"
   ]
  },
  "type": "function"
 },
 "healpy.cookbook.len_array_or_arrays": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "healpy.cookbook.is_seq_of_seq",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc": {
  "data": {},
  "type": "module"
 },
 "healpy.fitsfunc.HealpixFitsWarning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "healpy.fitsfunc._get_hdu": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.BinTableHDU",
    "astropy.io.fits.GroupsHDU",
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "astropy.io.fits.PrimaryHDU",
    "astropy.io.fits.TableHDU",
    "astropy.io.fits.open",
    "healpy.fitsfunc.six",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.cb": {
  "data": {
   "shadows": "cookbook"
  },
  "type": "import"
 },
 "healpy.fitsfunc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "healpy.fitsfunc.getformat": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.bool",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.uint8",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.mrdfits": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "healpy.fitsfunc._get_hdu",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.mwrfits": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.BinTableHDU.from_columns",
    "astropy.io.fits.Column",
    "dict",
    "getformat",
    "healpy.fitsfunc.six",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.fitsfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.fitsfunc.read_alm": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mrdfits",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.floor",
    "numpy.long",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.read_cl": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_get_hdu",
    "len",
    "numpy.array",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.read_map": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "OverflowError",
    "TypeError",
    "ValueError",
    "_get_hdu",
    "all",
    "astropy.io.fits.VerifyError",
    "hasattr",
    "healpy.fitsfunc.HealpixFitsWarning",
    "healpy.fitsfunc.warnings",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "print",
    "range",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.fitsfunc.standard_column_names": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "healpy.fitsfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.fitsfunc.write_alm": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.BinTableHDU.from_columns",
    "astropy.io.fits.Column",
    "astropy.io.fits.HDUList",
    "getformat",
    "len",
    "numpy.empty",
    "numpy.int32",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.write_cl": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.io.fits.BinTableHDU.from_columns",
    "astropy.io.fits.Column",
    "getformat",
    "len",
    "numpy.float64",
    "numpy.shape",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.fitsfunc.write_map": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.BinTableHDU.from_columns",
    "astropy.io.fits.Column",
    "getformat",
    "hasattr",
    "healpy.fitsfunc.six",
    "healpy.fitsfunc.standard_column_names",
    "isinstance",
    "len",
    "map",
    "numpy.asarray",
    "numpy.float32",
    "numpy.min_scalar_type",
    "numpy.where",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.map2alm_spin": {
  "data": {
   "shadows": "map2alm_spin_healpy"
  },
  "type": "import"
 },
 "healpy.newvisufunc": {
  "data": {},
  "type": "module"
 },
 "healpy.newvisufunc.GeoAxes": {
  "data": {
   "shadows": "matplotlib.projections.geo.GeoAxes"
  },
  "type": "import"
 },
 "healpy.newvisufunc.ThetaFormatterShiftPi": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "matplotlib.projections.geo.GeoAxes.ThetaFormatter"
   ]
  },
  "type": "class"
 },
 "healpy.newvisufunc.ThetaFormatterShiftPi.__call__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "healpy.newvisufunc.ThetaFormatterShiftPi",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.newvisufunc.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "healpy.newvisufunc.lonlat": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "healpy.newvisufunc.mollview": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "Rotator",
    "ang2pix",
    "healpy.newvisufunc.ThetaFormatterShiftPi",
    "len",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.pcolormesh",
    "matplotlib.pyplot.subplots_adjust",
    "max",
    "min",
    "npix2nside",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.radians",
    "r"
   ]
  },
  "type": "function"
 },
 "healpy.newvisufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.newvisufunc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "healpy.newvisufunc.projplot": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "healpy.newvisufunc.lonlat",
    "matplotlib.pyplot.plot"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc": {
  "data": {
   "symbols_in_volume": [
    "healpy.pixelfunc.warnings"
   ]
  },
  "type": "module"
 },
 "healpy.pixelfunc.NameError": {
  "data": {
   "shadows": "exceptions.NameError"
  },
  "type": "import"
 },
 "healpy.pixelfunc.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.pixelfunc.UNSEEN": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "healpy.pixelfunc.__all__": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "healpy.pixelfunc._ud_grade_core": {
  "data": {
   "lineno": 1855,
   "symbols_in_volume": [
    "OverflowError",
    "float",
    "healpy.pixelfunc.UNSEEN",
    "healpy.pixelfunc.check_nside",
    "healpy.pixelfunc.get_nside",
    "healpy.pixelfunc.mask_bad",
    "healpy.pixelfunc.nside2npix",
    "numpy.isfinite",
    "numpy.ones",
    "numpy.outer",
    "numpy.sum",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.accept_ma": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "healpy.pixelfunc.accept_ma.wrapper": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "f",
    "functools.wraps",
    "healpy.pixelfunc.is_ma",
    "healpy.pixelfunc.ma_to_array",
    "ma"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.ang2pix": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "check_nside",
    "healpy.pixelfunc.check_theta_valid",
    "healpy.pixelfunc.lonlat2thetaphi"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.ang2vec": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "healpy.pixelfunc.check_theta_valid",
    "healpy.pixelfunc.lonlat2thetaphi",
    "numpy.array",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.check_nside": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "ValueError",
    "healpy.pixelfunc.isnsideok",
    "numpy.all",
    "str"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.check_theta_valid": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.pi.all"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.fit_dipole": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "healpy.pixelfunc.ma_to_array",
    "healpy.pixelfunc.npix2nside",
    "healpy.pixelfunc.pix2vec",
    "numpy.abs",
    "numpy.arange",
    "numpy.asarray",
    "numpy.dot",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.linalg.inv",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.fit_monopole": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "healpy.pixelfunc.ma_to_array",
    "healpy.pixelfunc.npix2nside",
    "healpy.pixelfunc.pix2vec",
    "numpy.abs",
    "numpy.arange",
    "numpy.asarray",
    "numpy.isfinite",
    "numpy.pi",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.get_all_neighbours": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "healpy.pixelfunc.ang2pix",
    "healpy.pixelfunc.check_nside",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.get_interp_val": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "healpy.pixelfunc.lonlat2thetaphi",
    "healpy.pixelfunc.npix2nside",
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.get_interp_weights": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "healpy.pixelfunc.check_nside",
    "healpy.pixelfunc.lonlat2thetaphi",
    "healpy.pixelfunc.pix2ang",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.get_map_size": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "get_min_valid_nside",
    "hasattr",
    "healpy.pixelfunc.isnpixok",
    "healpy.pixelfunc.ma",
    "healpy.pixelfunc.nside2npix",
    "isinstance",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.get_min_valid_nside": {
  "data": {
   "lineno": 1733,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.get_nside": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "healpy.pixelfunc.maptype",
    "healpy.pixelfunc.npix2nside",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.is_ma": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.isnpixok": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.floor",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.isnsideok": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "hasattr",
    "healpy.pixelfunc.max_nside",
    "int",
    "isinstance",
    "numpy.asarray",
    "numpy.int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.lonlat2thetaphi": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.radians"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.ma": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "numpy.array",
    "numpy.ma.masked_values"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.ma_to_array": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.maptype": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "isnpixok",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.mask_bad": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "numpy.absolute",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.mask_good": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "numpy.absolute",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.max_nside": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "healpy.pixelfunc.max_pixrad": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "healpy.pixelfunc.check_nside",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.nest2ring": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "check_nside"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.pixelfunc.npix2nside": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isnpixok",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.nside2npix": {
  "data": {
   "lineno": 928
  },
  "type": "function"
 },
 "healpy.pixelfunc.nside2order": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "check_nside",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.nside2pixarea": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "healpy.pixelfunc.nside2npix",
    "numpy.pi",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.nside2resol": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "nside2pixarea",
    "numpy.rad2deg",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.order2nside": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "check_nside"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.pix2ang": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "check_nside",
    "healpy.pixelfunc.thetaphi2lonlat"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.pix2vec": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "check_nside"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.pix2xyf": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "check_nside"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.pixlib": {
  "data": {
   "shadows": "_healpy_pixel_lib"
  },
  "type": "import"
 },
 "healpy.pixelfunc.remove_dipole": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "healpy.pixelfunc.fit_dipole",
    "healpy.pixelfunc.is_ma",
    "healpy.pixelfunc.ma",
    "healpy.pixelfunc.ma_to_array",
    "healpy.pixelfunc.npix2nside",
    "healpy.pixelfunc.pix2vec",
    "numpy.arange",
    "numpy.array",
    "numpy.isfinite",
    "numpy.sqrt",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.remove_monopole": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "healpy.pixelfunc.UNSEEN",
    "healpy.pixelfunc.fit_monopole",
    "healpy.pixelfunc.is_ma",
    "healpy.pixelfunc.ma",
    "healpy.pixelfunc.ma_to_array",
    "healpy.pixelfunc.npix2nside",
    "healpy.pixelfunc.pix2vec",
    "numpy.arange",
    "numpy.array",
    "numpy.isfinite",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.reorder": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ValueError",
    "healpy.pixelfunc.accept_ma",
    "healpy.pixelfunc.maptype",
    "healpy.pixelfunc.nest2ring",
    "healpy.pixelfunc.ring2nest",
    "len",
    "npix2nside",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.zeros",
    "range",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.ring2nest": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "check_nside"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.thetaphi2lonlat": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.degrees"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.ud_grade": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "TypeError",
    "_ud_grade_core",
    "healpy.pixelfunc.accept_ma",
    "healpy.pixelfunc.check_nside",
    "healpy.pixelfunc.maptype",
    "healpy.pixelfunc.reorder",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.vec2ang": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "healpy.pixelfunc.thetaphi2lonlat",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.square",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "healpy.pixelfunc.vec2pix": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "healpy.pixelfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.pixelfunc.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "healpy.pixelfunc.xyf2pix": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "check_nside"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes": {
  "data": {
   "symbols_in_volume": [
    "healpy.projaxes.pi",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.projaxes.AzimuthalAxes": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.AzimuthalAxes.__init__": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "healpy.projaxes.AzimuthalAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.AzimuthalAxes.projmap": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "healpy.projaxes.AzimuthalAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.BoundaryLocator.__call__": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib",
    "numpy.arange",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator.__init__": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator.autoscale": {
  "data": {
   "lineno": 930
  },
  "type": "function"
 },
 "healpy.projaxes.CartesianAxes": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.CartesianAxes.__init__": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "healpy.projaxes.CartesianAxes",
    "healpy.projaxes.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.CartesianAxes.projmap": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "healpy.projaxes.CartesianAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.GnomonicAxes": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.GnomonicAxes.__init__": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "healpy.projaxes.GnomonicAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.GnomonicAxes.projmap": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "healpy.projaxes.GnomonicAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HistEqNorm.__call__": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "healpy.projaxes.matplotlib",
    "numpy.clip",
    "numpy.float",
    "numpy.inf",
    "numpy.interp",
    "numpy.isinf",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ma.getmask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.__init__": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm._lininterp": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.asarray",
    "numpy.float",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm._set_xyvals": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "TypeError",
    "min",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float",
    "numpy.histogram",
    "numpy.isinf",
    "numpy.ma.asarray",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.autoscale": {
  "data": {
   "lineno": 1014
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.autoscale_None": {
  "data": {
   "lineno": 1003
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.inverse": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "ValueError",
    "healpy.projaxes.matplotlib",
    "numpy.inf",
    "numpy.isinf",
    "numpy.ma.array",
    "numpy.ma.getmask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxAzimuthalAxes": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "healpy.projaxes.AzimuthalAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxAzimuthalAxes.projmap": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "healpy.projaxes.HpxAzimuthalAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxCartesianAxes": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "healpy.projaxes.CartesianAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxCartesianAxes.projmap": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "healpy.projaxes.HpxCartesianAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxGnomonicAxes": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "healpy.projaxes.GnomonicAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxGnomonicAxes.projmap": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "healpy.projaxes.HpxGnomonicAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxMollweideAxes": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "healpy.projaxes.MollweideAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxMollweideAxes.projmap": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "healpy.projaxes.HpxMollweideAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxOrthographicAxes": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "healpy.projaxes.OrthographicAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxOrthographicAxes.projmap": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "healpy.projaxes.HpxOrthographicAxes",
    "len",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.LinNorm2.__call__": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "healpy.projaxes.matplotlib",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float",
    "numpy.inf",
    "numpy.isinf",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ma.getmask",
    "numpy.ma.masked_where",
    "numpy.ma.nomask",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2.autoscale_None": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib",
    "numpy.isinf",
    "numpy.ma.masked_where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2.inverse": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "healpy.projaxes.matplotlib",
    "numpy.ma.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.LogNorm2.__call__": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "healpy.projaxes.matplotlib",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float",
    "numpy.inf",
    "numpy.isinf",
    "numpy.log",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ma.getmask",
    "numpy.ma.log",
    "numpy.ma.masked_where",
    "numpy.ma.nomask",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2.autoscale_None": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib",
    "numpy.isinf",
    "numpy.ma.masked_where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2.inverse": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "healpy.projaxes.matplotlib",
    "numpy.ma.asarray",
    "numpy.ma.power",
    "numpy.pow"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.MollweideAxes": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.MollweideAxes.__init__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "healpy.projaxes.MollweideAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.MollweideAxes.projmap": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "healpy.projaxes.MollweideAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.OrthographicAxes": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.OrthographicAxes.__init__": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "healpy.projaxes.OrthographicAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.OrthographicAxes.projmap": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "healpy.projaxes.OrthographicAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.P": {
  "data": {
   "shadows": "projector"
  },
  "type": "import"
 },
 "healpy.projaxes.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.projaxes.SphericalProjAxes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.SphericalProjAxes.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ProjClass",
    "TypeError",
    "healpy.projaxes.SphericalProjAxes",
    "healpy.projaxes.dtor",
    "healpy.projaxes.pi",
    "issubclass",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._get_interv_graticule": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "healpy.projaxes.dtor",
    "int",
    "max",
    "numpy.around",
    "numpy.floor",
    "print",
    "set_prec"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._get_interv_graticule.set_prec": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.around",
    "numpy.floor",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._make_segment": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "healpy.projaxes.six",
    "len",
    "numpy.atleast_1d",
    "numpy.roll",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.delgraticules": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "hasattr",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.format_coord": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "format",
    "numpy.around",
    "numpy.isnan",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_lonlat": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_meridian_interval": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "healpy.projaxes.pi",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_parallel_interval": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "healpy.projaxes.pi",
    "max",
    "min",
    "numpy.arccos"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_value": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.graticule": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "abs",
    "hasattr",
    "healpy.projaxes.dtor",
    "healpy.projaxes.pi",
    "min",
    "numpy.arange",
    "numpy.around",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projmap": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "get_color_table",
    "map",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.ma.masked_values"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projplot": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "healpy.projaxes.matplotlib",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projscatter": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projtext": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.set_coordprec": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.set_format": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "healpy.projaxes.create_colormap": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "hasattr",
    "healpy.projaxes.matplotlib",
    "newcm",
    "newcm.set_bad",
    "newcm.set_under",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.dtor": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "healpy.projaxes.get_color_table": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "HistEqNorm",
    "LinNorm2",
    "LogNorm2",
    "create_colormap",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.projaxes.matplotlib.axes": {
  "data": {
   "shadows": "matplotlib.axes"
  },
  "type": "import"
 },
 "healpy.projaxes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.projaxes.pi": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "healpy.projaxes.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.projector": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.projector.AzimuthalProj": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.AzimuthalProj.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "healpy.projector.AzimuthalProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.ang2xy": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.get_extent": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "int"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.get_fov": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "healpy.projector.pi",
    "numpy.arccos",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.ij2xy": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.set_proj_plane_info": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "healpy.projector.AzimuthalProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.vec2xy": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.arccos",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2ang": {
  "data": {
   "lineno": 1179
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2ij": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "int",
    "numpy.around",
    "numpy.long",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2vec": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.CartesianProj.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "healpy.projector.CartesianProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.ang2xy": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_center": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_extent": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_fov": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "int",
    "numpy.arccos",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.ij2xy": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.set_proj_plane_info": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "healpy.projector.CartesianProj",
    "len",
    "numpy.float64",
    "numpy.long",
    "numpy.mod",
    "round",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.vec2xy": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "healpy.projector.pi"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2ang": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2ij": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "numpy.around",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ma.array",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2vec": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.GnomonicProj.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "healpy.projector.GnomonicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.ang2xy": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.get_extent": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.get_fov": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.arccos"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.ij2xy": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "TypeError",
    "healpy.projector.dtor",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.set_proj_plane_info": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "healpy.projector.GnomonicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.vec2xy": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.asarray",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2ang": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2ij": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "healpy.projector.dtor",
    "int",
    "numpy.around",
    "numpy.long"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2vec": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.MollweideProj.__dfmoll": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.cos",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__findRoot": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "abs",
    "df",
    "f",
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__fmoll": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "healpy.projector.pi",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__initialise_data": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__lininterp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.ang2xy": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.get_extent": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.ij2xy": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.set_proj_plane_info": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.vec2xy": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "healpy.projector.pi",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2ang": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2ij": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "int",
    "numpy.around",
    "numpy.long",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2vec": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "hasattr",
    "healpy.projector.pi",
    "numpy.arcsin",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ma.nomask",
    "numpy.maximum",
    "numpy.nan",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.OrthographicProj.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "healpy.projector.OrthographicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.ang2xy": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.get_extent": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.ij2xy": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.mod",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.set_proj_plane_info": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "healpy.projector.OrthographicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.vec2xy": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.any",
    "numpy.asarray",
    "numpy.cos",
    "numpy.mod",
    "numpy.nan",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2ang": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2ij": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "int",
    "numpy.around",
    "numpy.asarray",
    "numpy.long",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.mod",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2vec": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.abs",
    "numpy.any",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cos",
    "numpy.nan",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.projector.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.projector.SphericalProj": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "healpy.projector.SphericalProj.__eq__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.ang2xy": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_center": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_extent": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_fov": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "healpy.projector.pi"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_proj_plane_info": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.ij2xy": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.mkcoord": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.projmap": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "map",
    "map.keys",
    "map.mask",
    "numpy.__version__",
    "numpy.asarray",
    "numpy.float64",
    "numpy.fromiter",
    "numpy.in1d",
    "numpy.inf",
    "numpy.ma.array",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.nomask",
    "numpy.zeros",
    "numpy.zeros_like",
    "slice",
    "type",
    "vec2pix_func"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.set_flip": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.set_proj_plane_info": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.vec2xy": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2ang": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2ij": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2vec": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "healpy.projector.dtor": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "healpy.projector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.projector.pi": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "healpy.rotator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.rotator.ConsistencyWarning",
    "healpy.rotator.warnings"
   ]
  },
  "type": "module"
 },
 "healpy.rotator.ConsistencyWarning": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "healpy.rotator.Rotator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "healpy.rotator.Rotator.I": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__call__": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len",
    "rotateDirection",
    "rotateVector"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__eq__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.array",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "hasattr",
    "healpy.rotator.ConsistencyWarning",
    "healpy.rotator.Rotator",
    "healpy.rotator.warnings",
    "len",
    "normalise_coord",
    "normalise_rot",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__mul__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "TypeError",
    "healpy.rotator.Rotator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__nonzero__": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__repr__": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.__rmul__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "healpy.rotator.Rotator",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator._is_coords_consistent": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator._update_matrix": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "get_coordconv_matrix",
    "get_rotation_matrix",
    "numpy.dot",
    "numpy.identity",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.angle_ref": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "R",
    "TypeError",
    "dir2vec",
    "hasattr",
    "len",
    "numpy.arctan2",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.coordin": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.coordinstr": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "healpy.rotator.coordname",
    "property"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.coordout": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.coordoutstr": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "healpy.rotator.coordname",
    "property"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.coords": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.do_rot": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.get_inverse": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "healpy.rotator.Rotator"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.mat": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.matrix",
    "property"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.rotate_alm": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "rotate_alm"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.rotate_map_alms": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.rotate_map_pixel": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.exp",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.Rotator.rots": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.angdist": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "hasattr",
    "healpy.rotator.dir2vec",
    "len",
    "normalize_vec",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cross",
    "numpy.reshape",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.check_coord": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "healpy.rotator.six",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.coordname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "healpy.rotator.coordsys2euler_zyz": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "healpy.rotator.Rotator",
    "healpy.rotator.normalise_coord",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.dot",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.zeros",
    "rot"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.dir2vec": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.empty",
    "numpy.float64",
    "numpy.pi",
    "numpy.radians",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.euler": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.fmod",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.euler_matrix_new": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.get_coordconv_matrix": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "ValueError",
    "healpy.rotator.normalise_coord",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.identity",
    "numpy.linalg.inv",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.get_rotation_matrix": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "euler_matrix_new",
    "healpy.rotator.normalise_rot",
    "numpy.allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.normalise_coord": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "TypeError",
    "healpy.rotator.check_coord",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.normalise_rot": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.normalize_vec": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.rotator.rotateDirection": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "dir2vec",
    "healpy.rotator.rotateVector",
    "vec2dir"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.rotateVector": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.tensordot"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.rotator.vec2dir": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "TypeError",
    "numpy.any",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.degrees",
    "numpy.empty",
    "numpy.isnan",
    "numpy.nan",
    "numpy.negative",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.rotator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.sphtfunc": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.data.conf.dataurl",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.sphtfunc.Alm": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "healpy.sphtfunc.Alm.__init__": {
  "data": {
   "lineno": 555
  },
  "type": "function"
 },
 "healpy.sphtfunc.Alm.getidx": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.Alm.getlm": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "healpy.sphtfunc.Alm",
    "int",
    "numpy.arange",
    "numpy.ceil",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.Alm.getlmax": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "int",
    "numpy.floor",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.Alm.getsize": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.DATAPATH": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "healpy.sphtfunc.FutureChangeWarning": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "UserWarning"
   ]
  },
  "type": "class"
 },
 "healpy.sphtfunc.MAX_NSIDE": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "healpy.sphtfunc._sphtools": {
  "data": {
   "shadows": "_sphtools"
  },
  "type": "import"
 },
 "healpy.sphtfunc.alm2cl": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "healpy.sphtfunc._sphtools",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.alm2map": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "TypeError",
    "almxfl",
    "check_max_nside",
    "enumerate",
    "globals",
    "numpy.array",
    "smoothalm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.alm2map_der1": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "check_max_nside",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.almxfl": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "healpy.sphtfunc._sphtools"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.anafast": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "alm2cl",
    "iter",
    "ma_to_array",
    "map2alm"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.beam2bl": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "healpy.sphtfunc.pi",
    "len",
    "numpy.arange",
    "numpy.copy",
    "numpy.cos",
    "numpy.ones",
    "numpy.sin",
    "numpy.zeros",
    "print",
    "scipy.integrate.simps"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.bl2beam": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "healpy.sphtfunc.pi",
    "len",
    "numpy.arange",
    "numpy.cos",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.cb": {
  "data": {
   "shadows": "cookbook"
  },
  "type": "import"
 },
 "healpy.sphtfunc.check_max_nside": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "ValueError",
    "healpy.sphtfunc.MAX_NSIDE"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.data": {
  "data": {
   "shadows": "astropy.utils.data"
  },
  "type": "import"
 },
 "healpy.sphtfunc.gauss_beam": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.exp",
    "numpy.log",
    "numpy.newaxis",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.load_sample_spectra": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "healpy.sphtfunc.DATAPATH",
    "numpy.loadtxt",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.map2alm": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "RuntimeError",
    "astropy.utils.data.get_pkg_data_filename",
    "check_max_nside",
    "healpy.sphtfunc._sphtools",
    "iter",
    "ma_to_array",
    "maptype",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.new_to_old_spectra_order": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "ValueError",
    "healpy.sphtfunc.six",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.sphtfunc.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "healpy.sphtfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.sphtfunc.pi": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "healpy.sphtfunc.pixwin": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.getdata",
    "healpy.sphtfunc.DATAPATH"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.simps": {
  "data": {
   "shadows": "scipy.integrate.simps"
  },
  "type": "import"
 },
 "healpy.sphtfunc.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.sphtfunc.smoothalm": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "healpy.sphtfunc.Alm",
    "healpy.sphtfunc.almxfl",
    "healpy.sphtfunc.pi",
    "healpy.sphtfunc.six",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.copy",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.smoothing": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "TypeError",
    "check_max_nside",
    "healpy.sphtfunc.alm2map",
    "healpy.sphtfunc.map2alm",
    "healpy.sphtfunc.smoothalm",
    "iter",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.sphtlib": {
  "data": {
   "shadows": "_healpy_sph_transform_lib"
  },
  "type": "import"
 },
 "healpy.sphtfunc.synalm": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "TypeError",
    "healpy.sphtfunc.FutureChangeWarning",
    "healpy.sphtfunc.six",
    "healpy.sphtfunc.warnings",
    "len",
    "list",
    "max",
    "new_to_old_spectra_order",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.random.standard_normal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.synfast": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "ValueError",
    "check_max_nside",
    "healpy.sphtfunc.alm2map",
    "healpy.sphtfunc.synalm",
    "min",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.sphtfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test": {
  "data": {},
  "type": "module"
 },
 "healpy.test.conftest": {
  "data": {},
  "type": "module"
 },
 "healpy.test.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "healpy.test.conftest.pytest_configure": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "TypeError",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.healpy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.tearDown": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_all": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_all_with_header": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename_with_header": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_hdu": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_hdulist": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_multiple_dtype": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "read_map",
    "write_map",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_single_dtype": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_dtype": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_dtype_multiarr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_iterable_dtype": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.testing.assert_almost_equal",
    "read_map",
    "write_map",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_partial": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "float",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_partial_3comp": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "float",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_C": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_C_3comp": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "range",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_IDL": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_units_list": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_units_string": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.setUp": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.healpy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.tearDown": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.test_write_map": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.test.test_fitsfunc.gzip",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.setUp": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.complex128"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.tearDown": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_filename": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_filename_array": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_hdu": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_hdulist": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_write_alm": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_write_alm_256_128": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.tearDown": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_filename": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_hdu": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.arange",
    "numpy.double",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_hdulist": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.arange",
    "numpy.double",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_4comp": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "read_cl",
    "write_cl",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_6comp": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "read_cl",
    "write_cl",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_II": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "numpy.testing.assert_array_almost_equal",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.healpy": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_pixelfunc.unittest"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "healpy.test.test_pixelfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.setUp": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.degrees"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_accept_ma_allows_only_keywords": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "IndexError",
    "numpy.zeros",
    "ud_grade"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_lonlat": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ang2pix",
    "id",
    "numpy.testing.assert_array_almost_equal",
    "pix2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_negative_theta": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "ang2pix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_nest": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ang2pix",
    "id",
    "numpy.allclose",
    "numpy.testing.assert_array_almost_equal",
    "pix2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_nest_outofrange_doesntcrash": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "ang2pix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_ring": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ang2pix",
    "id",
    "numpy.testing.assert_array_almost_equal",
    "pix2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_ring_outofrange": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "ang2pix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_boundaries": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "boundaries",
    "nside2npix",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_fit_dipole": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "fit_dipole",
    "nside2npix",
    "numpy.arange",
    "numpy.dot",
    "numpy.transpose",
    "pix2vec"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_all_neighbours": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "get_all_neighbours",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_interp_val_lonlat": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "get_interp_val",
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_interp_weights": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "get_interp_weights",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_max_pixrad": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "max_pixrad",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2npix": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nside2npix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2pixarea": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nside2pixarea"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2resol": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nside2resol"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ring": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "nside2npix",
    "numpy.arange",
    "numpy.logical_or",
    "pix2ring",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_vec2pix_lonlat": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ang2vec",
    "numpy.testing.assert_array_almost_equal",
    "vec2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_pixelweights.unittest",
    "healpy.test.test_pixelweights.warnings"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_pixelweights.TestMap2Alm": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "healpy.test.test_pixelweights.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_pixelweights.TestMap2Alm.setUp": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "healpy.alm2map",
    "numpy.complex",
    "numpy.ones",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelweights.TestMap2Alm.test_astropy_download_file": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.utils.data.conf.dataurl",
    "astropy.utils.data.get_pkg_data_filename",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelweights.data": {
  "data": {
   "shadows": "astropy.utils.data"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc": {
  "data": {},
  "type": "module"
 },
 "healpy.test.test_query_disc.TestQueryDisc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "healpy.test.test_query_disc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_query_disc.TestQueryDisc.setUp": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.radians"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "boundaries",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_floatpix_array": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "boundaries",
    "exceptions.ValueError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_floatpix_scalar": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "boundaries",
    "exceptions.ValueError"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_list": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "boundaries",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_phi_theta": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "boundaries",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_buffer_mode": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "exceptions.ValueError",
    "nside2npix",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_inclusive": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_not_inclusive": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.ValueError": {
  "data": {
   "shadows": "exceptions.ValueError"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_rotator": {
  "data": {},
  "type": "module"
 },
 "healpy.test.test_rotator.Rotator": {
  "data": {
   "shadows": "healpy.Rotator"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.path": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "healpy.test.test_rotator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.set_random_seed": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "healpy.test.test_rotator.pytest",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_dipole_and_back": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "healpy.Rotator",
    "healpy.nside2npix",
    "healpy.pix2vec",
    "healpy.query_strip",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "enumerate",
    "healpy.Rotator",
    "healpy.ma",
    "healpy.nside2npix",
    "healpy.read_map",
    "healpy.test.test_rotator.path",
    "numpy.abs",
    "numpy.double",
    "numpy.logical_not",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization_alms": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "healpy.Rotator",
    "healpy.alm2map",
    "healpy.get_nside",
    "healpy.map2alm",
    "healpy.read_map",
    "healpy.rotate_alm",
    "healpy.rotator.coordsys2euler_zyz",
    "healpy.test.test_rotator.path",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization_with_spectrum": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "healpy.Rotator",
    "healpy.anafast",
    "healpy.synfast",
    "numpy.abs",
    "numpy.double",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_sphtfunc.unittest",
    "healpy.test.test_sphtfunc.warnings"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "healpy.test.test_sphtfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.ma",
    "healpy.read_cl",
    "healpy.read_map",
    "healpy.synfast",
    "healpy.test.test_sphtfunc.os",
    "itertools.chain",
    "numpy.array",
    "numpy.bool",
    "numpy.logical_not",
    "numpy.radians",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_accept_ma_allows_only_keywords": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "IndexError",
    "healpy.smoothing",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_alm2cl": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "healpy.alm2cl",
    "healpy.synalm",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.remove_monopole",
    "len",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_iqu": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.remove_monopole",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_nomask": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.remove_monopole",
    "len",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_xspectra": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.read_cl",
    "healpy.remove_monopole",
    "healpy.test.test_sphtfunc.os",
    "len",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_beam2bl": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "healpy.beam2bl",
    "numpy.arange",
    "numpy.exp",
    "numpy.linspace",
    "numpy.log",
    "numpy.pi",
    "numpy.radians",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_bl2beam": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "healpy.bl2beam",
    "numpy.arange",
    "numpy.exp",
    "numpy.linspace",
    "numpy.log",
    "numpy.pi",
    "numpy.radians",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_gauss_beam": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.gauss_beam",
    "healpy.test.test_sphtfunc.os",
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.map2alm",
    "healpy.synfast",
    "input",
    "numpy.empty",
    "numpy.float32",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm_pol": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.map2alm",
    "input",
    "numpy.empty",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm_pol_gal_cut": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.get_nside",
    "healpy.map2alm",
    "healpy.nside2npix",
    "healpy.pix2ang",
    "input",
    "numpy.abs",
    "numpy.arange",
    "numpy.empty",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_max_nside_check": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "healpy.check_max_nside"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "copy.deepcopy",
    "healpy.map2alm",
    "healpy.rotate_alm",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm2": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "healpy.Alm.getidx",
    "healpy.Alm.getsize",
    "healpy.rotate_alm",
    "numpy.array",
    "numpy.complex",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm_rotmatrix": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "healpy.Alm.getsize",
    "healpy.Rotator",
    "healpy.rotate_alm",
    "healpy.rotator.coordsys2euler_zyz",
    "numpy.complex",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_smoothing_masked": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "healpy.ma",
    "healpy.read_map",
    "healpy.smoothing",
    "healpy.test.test_sphtfunc.os",
    "numpy.radians",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_smoothing_notmasked": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "healpy.read_map",
    "healpy.smoothing",
    "healpy.test.test_sphtfunc.os",
    "numpy.radians",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_synfast": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "healpy.read_map",
    "healpy.synfast",
    "healpy.test.test_sphtfunc.os",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_spinfunc.unittest",
    "healpy.test.test_spinfunc.warnings",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_spinfunc.TestSpinFunc": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "healpy.test.test_spinfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.setUp": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "healpy.synalm",
    "healpy.synfast",
    "numpy.ones",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_alm2map_spin_precomputed": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "healpy.alm2map_spin",
    "healpy.test.test_spinfunc.calm",
    "healpy.test.test_spinfunc.galm",
    "healpy.test.test_spinfunc.lmax_precomputed",
    "healpy.test.test_spinfunc.maps",
    "healpy.test.test_spinfunc.nside_precomputed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_der1": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "healpy.alm2map_der1",
    "healpy.alm2map_spin",
    "healpy.almxfl",
    "healpy.test.test_spinfunc.six",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_forward_backward_spin": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "healpy.alm2map_spin",
    "healpy.almxfl",
    "healpy.map2alm_spin",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_map2alm_spin_spin_precomputed": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "healpy.map2alm_spin",
    "healpy.test.test_spinfunc.clms",
    "healpy.test.test_spinfunc.glms",
    "healpy.test.test_spinfunc.lmax_precomputed",
    "healpy.test.test_spinfunc.maps",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_spin0": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.alm2map_spin",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.calm": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.clms": {
  "data": {
   "lineno": 861
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.galm": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.glms": {
  "data": {
   "lineno": 711
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.lmax_precomputed": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.maps": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.nside_precomputed": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc": {
  "data": {
   "symbols_in_volume": [
    "healpy.test.test_visufunc.matplotlib"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_visufunc.TestNoCrash": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "healpy.test.test_visufunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_visufunc.TestNoCrash.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "healpy.UNSEEN",
    "healpy.ma",
    "healpy.nside2npix",
    "numpy.arange",
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_crash": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "azeqview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_ma_nocrash": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "azeqview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_nocrash": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "azeqview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_crash": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "cartview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_ma_nocrash": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cartview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_nocrash": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cartview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_crash": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "gnomview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_ma_nocrash": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gnomview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_nocrash": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gnomview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_crash": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "mollview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_ma_nocrash": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mollview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_nocrash": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mollview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_crash": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_histnocrash": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_ma_hist_nocrash": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_ma_nocrash": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_nocrash": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_crash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "orthview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_ma_nocrash": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "orthview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_nocrash": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "orthview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.version": {
  "data": {},
  "type": "module"
 },
 "healpy.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "healpy.visufunc": {
  "data": {
   "symbols_in_volume": [
    "healpy.visufunc.pi",
    "healpy.visufunc.projplot",
    "healpy.visufunc.projscatter",
    "healpy.visufunc.projtext",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.visufunc.PA": {
  "data": {
   "shadows": "projaxes"
  },
  "type": "import"
 },
 "healpy.visufunc.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "healpy.visufunc.azeqview": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.cartview": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.delgraticules": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.dtor": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "healpy.visufunc.gnomview": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.around",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.graticule": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.visufunc.mollview": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.visufunc.orthview": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.pi": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "healpy.visufunc.projplot": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.projscatter": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.projtext": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "healpy.zoomtool": {
  "data": {
   "symbols_in_volume": [
    "healpy.zoomtool.pi",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.zoomtool.PA": {
  "data": {
   "shadows": "projaxes"
  },
  "type": "import"
 },
 "healpy.zoomtool.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.zoomtool.ZoomTool": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "healpy.zoomtool.ZoomTool.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "healpy.zoomtool.pylab",
    "isinstance",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._decrease_reso": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._increase_reso": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._move_zoom_center": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._reso_on_key": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "hasattr",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._update_grat_info": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "healpy.zoomtool.dtor",
    "numpy.around",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._zoom_on_click": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "healpy.zoomtool.pylab",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.connect_callbacks": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.disconnect_callbacks": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.draw_gnom": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "healpy.zoomtool.matplotlib",
    "healpy.zoomtool.pylab",
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.get_reso": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "healpy.zoomtool.dtor": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "healpy.zoomtool.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.zoomtool.mollzoom": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ZoomTool",
    "format",
    "healpy.zoomtool.matplotlib",
    "healpy.zoomtool.pylab",
    "map",
    "max",
    "min",
    "numpy.around",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.zoomtool.pi": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "healpy.zoomtool.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "healpy.zoomtool.set_g_clim": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.zoomtool.pylab"
   ]
  },
  "type": "function"
 }
}