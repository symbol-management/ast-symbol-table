{
 "healpy": {
  "data": {},
  "type": "module"
 },
 "healpy.alm2map_spin": {
  "data": {
   "shadows": "alm2map_spin_healpy"
  },
  "type": "import"
 },
 "healpy.cookbook": {
  "data": {},
  "type": "module"
 },
 "healpy.cookbook.is_like2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "healpy.cookbook.is_seq": {
     "line number": [
      56,
      60
     ]
    },
    "len": {
     "line number": [
      63,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.cookbook.is_seq": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.cookbook.is_seq_of_seq": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "healpy.cookbook.is_seq": {
     "line number": [
      35,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.cookbook.len_array_or_arrays": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "healpy.cookbook.is_seq_of_seq": {
     "line number": [
      80
     ]
    },
    "len": {
     "line number": [
      81,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.dist2holes": {
  "data": {
   "shadows": "dist2holes_healpy"
  },
  "type": "import"
 },
 "healpy.map2alm_spin": {
  "data": {
   "shadows": "map2alm_spin_healpy"
  },
  "type": "import"
 },
 "healpy.newvisufunc": {
  "data": {},
  "type": "module"
 },
 "healpy.newvisufunc.GeoAxes": {
  "data": {
   "shadows": "matplotlib.projections.geo.GeoAxes"
  },
  "type": "import"
 },
 "healpy.newvisufunc.ThetaFormatterShiftPi": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "matplotlib.projections.geo.GeoAxes.ThetaFormatter": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.newvisufunc.ThetaFormatterShiftPi.__call__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "healpy.newvisufunc.ThetaFormatterShiftPi": {
     "line number": [
      24
     ]
    },
    "numpy.pi": {
     "line number": [
      23
     ]
    },
    "super": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.newvisufunc.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "healpy.newvisufunc.lonlat": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      32,
      33
     ]
    },
    "numpy.pi": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.newvisufunc.mollview": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      101
     ]
    },
    "Rotator": {
     "line number": [
      143
     ]
    },
    "ang2pix": {
     "line number": [
      149
     ]
    },
    "healpy.newvisufunc.ThetaFormatterShiftPi": {
     "line number": [
      173
     ]
    },
    "len": {
     "line number": [
      147
     ]
    },
    "matplotlib.pyplot.draw": {
     "line number": [
      189
     ]
    },
    "matplotlib.pyplot.figure": {
     "line number": [
      107
     ]
    },
    "matplotlib.pyplot.grid": {
     "line number": [
      164
     ]
    },
    "matplotlib.pyplot.pcolormesh": {
     "line number": [
      153
     ]
    },
    "matplotlib.pyplot.subplots_adjust": {
     "line number": [
      113,
      115
     ]
    },
    "max": {
     "line number": [
      121,
      122,
      158,
      182
     ]
    },
    "min": {
     "line number": [
      119,
      120,
      157,
      182
     ]
    },
    "npix2nside": {
     "line number": [
      147
     ]
    },
    "numpy.linspace": {
     "line number": [
      132,
      133,
      135,
      138
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      140
     ]
    },
    "numpy.pi": {
     "line number": [
      132,
      133,
      133
     ]
    },
    "numpy.radians": {
     "line number": [
      135,
      138
     ]
    },
    "r": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.newvisufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.newvisufunc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "healpy.newvisufunc.projplot": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "healpy.newvisufunc.lonlat": {
     "line number": [
      222
     ]
    },
    "matplotlib.pyplot.plot": {
     "line number": [
      224,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes": {
  "data": {
   "symbols_in_volume": {
    "healpy.projaxes.pi": {
     "line number": [
      31
     ]
    },
    "numpy.pi": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.projaxes.AzimuthalAxes": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": {
    "healpy.projaxes.SphericalProjAxes": {
     "line number": [
      800
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.AzimuthalAxes.__init__": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": {
    "healpy.projaxes.AzimuthalAxes": {
     "line number": [
      814
     ]
    },
    "super": {
     "line number": [
      814
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.AzimuthalAxes.projmap": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": {
    "healpy.projaxes.AzimuthalAxes": {
     "line number": [
      831
     ]
    },
    "map": {
     "line number": [
      831
     ]
    },
    "super": {
     "line number": [
      831
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      917
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.BoundaryLocator.__call__": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      925
     ]
    },
    "numpy.arange": {
     "line number": [
      930,
      935
     ]
    },
    "numpy.log10": {
     "line number": [
      930,
      931,
      931
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator.__init__": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      920
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator.autoscale": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "healpy.projaxes.CartesianAxes": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": {
    "healpy.projaxes.SphericalProjAxes": {
     "line number": [
      737
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.CartesianAxes.__init__": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": {
    "healpy.projaxes.CartesianAxes": {
     "line number": [
      743
     ]
    },
    "healpy.projaxes.pi": {
     "line number": [
      745
     ]
    },
    "super": {
     "line number": [
      743
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.CartesianAxes.projmap": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": {
    "healpy.projaxes.CartesianAxes": {
     "line number": [
      754
     ]
    },
    "map": {
     "line number": [
      754
     ]
    },
    "super": {
     "line number": [
      754
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.GnomonicAxes": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": {
    "healpy.projaxes.SphericalProjAxes": {
     "line number": [
      670
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.GnomonicAxes.__init__": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": {
    "healpy.projaxes.GnomonicAxes": {
     "line number": [
      683
     ]
    },
    "super": {
     "line number": [
      683
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.GnomonicAxes.projmap": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": {
    "healpy.projaxes.GnomonicAxes": {
     "line number": [
      690
     ]
    },
    "map": {
     "line number": [
      690
     ]
    },
    "super": {
     "line number": [
      690
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      956
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.HistEqNorm.__call__": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      977
     ]
    },
    "float": {
     "line number": [
      975,
      975
     ]
    },
    "numpy.clip": {
     "line number": [
      983
     ]
    },
    "numpy.float": {
     "line number": [
      968,
      971
     ]
    },
    "numpy.inf": {
     "line number": [
      987
     ]
    },
    "numpy.interp": {
     "line number": [
      985
     ]
    },
    "numpy.isinf": {
     "line number": [
      987
     ]
    },
    "numpy.iterable": {
     "line number": [
      966
     ]
    },
    "numpy.ma.array": {
     "line number": [
      971,
      983,
      984
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      968
     ]
    },
    "numpy.ma.getmask": {
     "line number": [
      982,
      985
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.__init__": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      958
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm._lininterp": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1057
     ]
    },
    "len": {
     "line number": [
      1065,
      1067
     ]
    },
    "numpy.asarray": {
     "line number": [
      1059,
      1062
     ]
    },
    "numpy.float": {
     "line number": [
      1059,
      1062
     ]
    },
    "numpy.where": {
     "line number": [
      1067,
      1072,
      1074,
      1076
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm._set_xyvals": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1044
     ]
    },
    "min": {
     "line number": [
      1036
     ]
    },
    "numpy.array": {
     "line number": [
      1033,
      1034
     ]
    },
    "numpy.concatenate": {
     "line number": [
      1051,
      1052
     ]
    },
    "numpy.float": {
     "line number": [
      1033,
      1034,
      1050,
      1050
     ]
    },
    "numpy.histogram": {
     "line number": [
      1041,
      1046
     ]
    },
    "numpy.isinf": {
     "line number": [
      1028
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      1027
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1029
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.autoscale": {
  "data": {
   "lineno": 1021
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.autoscale_None": {
  "data": {
   "lineno": 1010
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.inverse": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      994
     ]
    },
    "numpy.inf": {
     "line number": [
      1005
     ]
    },
    "numpy.isinf": {
     "line number": [
      1005
     ]
    },
    "numpy.iterable": {
     "line number": [
      996
     ]
    },
    "numpy.ma.array": {
     "line number": [
      998,
      1001,
      1002
     ]
    },
    "numpy.ma.getmask": {
     "line number": [
      1003
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HpxAzimuthalAxes": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": {
    "healpy.projaxes.AzimuthalAxes": {
     "line number": [
      834
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.HpxAzimuthalAxes.projmap": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": {
    "healpy.projaxes.HpxAzimuthalAxes": {
     "line number": [
      842
     ]
    },
    "map": {
     "line number": [
      836,
      843
     ]
    },
    "super": {
     "line number": [
      842
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HpxCartesianAxes": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "healpy.projaxes.CartesianAxes": {
     "line number": [
      757
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.HpxCartesianAxes.projmap": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": {
    "healpy.projaxes.HpxCartesianAxes": {
     "line number": [
      761
     ]
    },
    "map": {
     "line number": [
      759,
      761
     ]
    },
    "super": {
     "line number": [
      761
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HpxGnomonicAxes": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": {
    "healpy.projaxes.GnomonicAxes": {
     "line number": [
      693
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.HpxGnomonicAxes.projmap": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": {
    "healpy.projaxes.HpxGnomonicAxes": {
     "line number": [
      700
     ]
    },
    "map": {
     "line number": [
      695,
      701
     ]
    },
    "super": {
     "line number": [
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HpxMollweideAxes": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "healpy.projaxes.MollweideAxes": {
     "line number": [
      730
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.HpxMollweideAxes.projmap": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": {
    "healpy.projaxes.HpxMollweideAxes": {
     "line number": [
      734
     ]
    },
    "map": {
     "line number": [
      732,
      734
     ]
    },
    "super": {
     "line number": [
      734
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.HpxOrthographicAxes": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": {
    "healpy.projaxes.OrthographicAxes": {
     "line number": [
      793
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.HpxOrthographicAxes.projmap": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": {
    "healpy.projaxes.HpxOrthographicAxes": {
     "line number": [
      797
     ]
    },
    "len": {
     "line number": [
      795
     ]
    },
    "map": {
     "line number": [
      795,
      797
     ]
    },
    "super": {
     "line number": [
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      1154
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.LinNorm2.__call__": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1176
     ]
    },
    "float": {
     "line number": [
      1174,
      1174
     ]
    },
    "numpy.asarray": {
     "line number": [
      1178
     ]
    },
    "numpy.clip": {
     "line number": [
      1182
     ]
    },
    "numpy.float": {
     "line number": [
      1165,
      1168
     ]
    },
    "numpy.inf": {
     "line number": [
      1186
     ]
    },
    "numpy.isinf": {
     "line number": [
      1170
     ]
    },
    "numpy.iterable": {
     "line number": [
      1163
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1168,
      1182
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      1165
     ]
    },
    "numpy.ma.getmask": {
     "line number": [
      1181
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      1171
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1187
     ]
    },
    "type": {
     "line number": [
      1178
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2.autoscale_None": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      1197
     ]
    },
    "numpy.isinf": {
     "line number": [
      1196
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      1196
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2.inverse": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1201
     ]
    },
    "float": {
     "line number": [
      1202,
      1202
     ]
    },
    "numpy.iterable": {
     "line number": [
      1204
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      1205
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      1090
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.LogNorm2.__call__": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1111,
      1113
     ]
    },
    "float": {
     "line number": [
      1109,
      1109
     ]
    },
    "numpy.asarray": {
     "line number": [
      1115
     ]
    },
    "numpy.clip": {
     "line number": [
      1119
     ]
    },
    "numpy.float": {
     "line number": [
      1101,
      1104
     ]
    },
    "numpy.inf": {
     "line number": [
      1123
     ]
    },
    "numpy.isinf": {
     "line number": [
      1106,
      1123,
      1125
     ]
    },
    "numpy.iterable": {
     "line number": [
      1099
     ]
    },
    "numpy.log": {
     "line number": [
      1120,
      1120,
      1120
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1104,
      1119
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      1101
     ]
    },
    "numpy.ma.getmask": {
     "line number": [
      1118
     ]
    },
    "numpy.ma.log": {
     "line number": [
      1120
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      1106
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1124
     ]
    },
    "type": {
     "line number": [
      1115
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2.autoscale_None": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      1134
     ]
    },
    "numpy.isinf": {
     "line number": [
      1133
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      1133
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2.inverse": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1138
     ]
    },
    "float": {
     "line number": [
      1139,
      1139
     ]
    },
    "numpy.iterable": {
     "line number": [
      1141
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      1142
     ]
    },
    "numpy.ma.power": {
     "line number": [
      1143
     ]
    },
    "numpy.pow": {
     "line number": [
      1145
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.MollweideAxes": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": {
    "healpy.projaxes.SphericalProjAxes": {
     "line number": [
      705
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.MollweideAxes.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": {
    "healpy.projaxes.MollweideAxes": {
     "line number": [
      718
     ]
    },
    "super": {
     "line number": [
      718
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.MollweideAxes.projmap": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": {
    "healpy.projaxes.MollweideAxes": {
     "line number": [
      724
     ]
    },
    "map": {
     "line number": [
      724
     ]
    },
    "super": {
     "line number": [
      724
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.OrthographicAxes": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "healpy.projaxes.SphericalProjAxes": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.OrthographicAxes.__init__": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "healpy.projaxes.OrthographicAxes": {
     "line number": [
      777
     ]
    },
    "super": {
     "line number": [
      777
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.OrthographicAxes.projmap": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": {
    "healpy.projaxes.OrthographicAxes": {
     "line number": [
      783
     ]
    },
    "map": {
     "line number": [
      783
     ]
    },
    "super": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.P": {
  "data": {
   "shadows": "projector"
  },
  "type": "import"
 },
 "healpy.projaxes.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.projaxes.SphericalProjAxes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "healpy.projaxes.matplotlib": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projaxes.SphericalProjAxes.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "ProjClass": {
     "line number": [
      58
     ]
    },
    "TypeError": {
     "line number": [
      55
     ]
    },
    "healpy.projaxes.SphericalProjAxes": {
     "line number": [
      67
     ]
    },
    "healpy.projaxes.dtor": {
     "line number": [
      73
     ]
    },
    "healpy.projaxes.pi": {
     "line number": [
      73,
      75
     ]
    },
    "issubclass": {
     "line number": [
      54
     ]
    },
    "numpy.sqrt": {
     "line number": [
      74
     ]
    },
    "super": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._get_interv_graticule": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "healpy.projaxes.dtor": {
     "line number": [
      646,
      646,
      648,
      648,
      651,
      652,
      659,
      660
     ]
    },
    "int": {
     "line number": [
      651,
      659
     ]
    },
    "max": {
     "line number": [
      650
     ]
    },
    "numpy.around": {
     "line number": [
      651,
      659
     ]
    },
    "numpy.floor": {
     "line number": [
      651,
      659
     ]
    },
    "print": {
     "line number": [
      654,
      662
     ]
    },
    "set_prec": {
     "line number": [
      646,
      648
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._get_interv_graticule.set_prec": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "numpy.around": {
     "line number": [
      636,
      638
     ]
    },
    "numpy.floor": {
     "line number": [
      635
     ]
    },
    "numpy.log10": {
     "line number": [
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._make_segment": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "healpy.projaxes.six": {
     "line number": [
      435
     ]
    },
    "len": {
     "line number": [
      427,
      432,
      435
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      421,
      421
     ]
    },
    "numpy.roll": {
     "line number": [
      422,
      422,
      428,
      429
     ]
    },
    "numpy.sqrt": {
     "line number": [
      422
     ]
    },
    "numpy.where": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.delgraticules": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      616
     ]
    },
    "print": {
     "line number": [
      623
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.format_coord": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "format": {
     "line number": [
      96,
      103,
      106,
      109,
      111
     ]
    },
    "numpy.around": {
     "line number": [
      100
     ]
    },
    "numpy.isnan": {
     "line number": [
      98
     ]
    },
    "str": {
     "line number": [
      105
     ]
    },
    "type": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_lonlat": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_meridian_interval": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      480
     ]
    },
    "abs": {
     "line number": [
      485
     ]
    },
    "healpy.projaxes.pi": {
     "line number": [
      485
     ]
    },
    "numpy.arccos": {
     "line number": [
      482
     ]
    },
    "numpy.arctan2": {
     "line number": [
      488
     ]
    },
    "numpy.pi": {
     "line number": [
      484,
      484,
      486,
      486
     ]
    },
    "numpy.sin": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_parallel_interval": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      459
     ]
    },
    "healpy.projaxes.pi": {
     "line number": [
      463
     ]
    },
    "max": {
     "line number": [
      462
     ]
    },
    "min": {
     "line number": [
      463
     ]
    },
    "numpy.arccos": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_value": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "len": {
     "line number": [
      123
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.graticule": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      510,
      511,
      559,
      562,
      565,
      582
     ]
    },
    "hasattr": {
     "line number": [
      592,
      607
     ]
    },
    "healpy.projaxes.dtor": {
     "line number": [
      510,
      511,
      521,
      523,
      525,
      527,
      541,
      541,
      541,
      541,
      593,
      600
     ]
    },
    "healpy.projaxes.pi": {
     "line number": [
      521,
      521,
      523,
      523,
      559,
      565,
      566,
      575,
      575,
      578,
      595,
      598,
      605
     ]
    },
    "min": {
     "line number": [
      551,
      553
     ]
    },
    "numpy.arange": {
     "line number": [
      548,
      549,
      550,
      553,
      593,
      600
     ]
    },
    "numpy.around": {
     "line number": [
      548,
      549
     ]
    },
    "print": {
     "line number": [
      539
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projmap": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      184,
      189
     ]
    },
    "healpy.projaxes.get_color_table": {
     "line number": [
      196
     ]
    },
    "map": {
     "line number": [
      179
     ]
    },
    "numpy.isinf": {
     "line number": [
      180
     ]
    },
    "numpy.isnan": {
     "line number": [
      180
     ]
    },
    "numpy.ma.masked_values": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projplot": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      270,
      275
     ]
    },
    "ValueError": {
     "line number": [
      259
     ]
    },
    "healpy.projaxes.matplotlib": {
     "line number": [
      293,
      295,
      302
     ]
    },
    "len": {
     "line number": [
      258,
      260,
      262,
      268
     ]
    },
    "numpy.array": {
     "line number": [
      278
     ]
    },
    "numpy.asarray": {
     "line number": [
      261,
      265,
      267,
      267,
      272,
      272
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      278
     ]
    },
    "str": {
     "line number": [
      263,
      269
     ]
    },
    "type": {
     "line number": [
      263,
      269
     ]
    },
    "zip": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projscatter": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      344,
      363
     ]
    },
    "numpy.array": {
     "line number": [
      353
     ]
    },
    "numpy.asarray": {
     "line number": [
      348,
      350,
      350
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      353
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projtext": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      408
     ]
    },
    "numpy.asarray": {
     "line number": [
      403,
      405,
      405
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.set_coordprec": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.set_format": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "healpy.projaxes.create_colormap": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      901
     ]
    },
    "healpy.projaxes.matplotlib": {
     "line number": [
      893,
      895,
      896,
      900,
      900,
      902
     ]
    },
    "newcm": {
     "line number": [
      907,
      910
     ]
    },
    "newcm.set_bad": {
     "line number": [
      909
     ]
    },
    "newcm.set_under": {
     "line number": [
      908
     ]
    },
    "str": {
     "line number": [
      892
     ]
    },
    "type": {
     "line number": [
      892,
      894
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.dtor": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "healpy.projaxes.get_color_table": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": {
    "healpy.projaxes.HistEqNorm": {
     "line number": [
      878
     ]
    },
    "healpy.projaxes.LinNorm2": {
     "line number": [
      882
     ]
    },
    "healpy.projaxes.LogNorm2": {
     "line number": [
      876
     ]
    },
    "healpy.projaxes.create_colormap": {
     "line number": [
      873
     ]
    },
    "str": {
     "line number": [
      874
     ]
    },
    "type": {
     "line number": [
      874
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projaxes.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.projaxes.matplotlib.axes": {
  "data": {
   "shadows": "matplotlib.axes"
  },
  "type": "import"
 },
 "healpy.projaxes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.projaxes.pi": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "healpy.projaxes.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.projector": {
  "data": {
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      36,
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.projector.AzimuthalProj": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": {
    "healpy.projector.SphericalProj": {
     "line number": [
      1019,
      1106,
      1172,
      1177,
      1182,
      1221,
      1269,
      1283
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projector.AzimuthalProj.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": {
    "healpy.projector.AzimuthalProj": {
     "line number": [
      1037
     ]
    },
    "super": {
     "line number": [
      1037
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.ang2xy": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.get_extent": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": {
    "healpy.projector.dtor": {
     "line number": [
      1275
     ]
    },
    "int": {
     "line number": [
      1272,
      1273
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.get_fov": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": {
    "healpy.projector.pi": {
     "line number": [
      1293,
      1295
     ]
    },
    "numpy.arccos": {
     "line number": [
      1288
     ]
    },
    "numpy.isfinite": {
     "line number": [
      1289
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.ij2xy": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1225,
      1257
     ]
    },
    "hasattr": {
     "line number": [
      1258
     ]
    },
    "healpy.projector.dtor": {
     "line number": [
      1233
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      1238
     ]
    },
    "int": {
     "line number": [
      1228,
      1229
     ]
    },
    "numpy.arange": {
     "line number": [
      1245,
      1247
     ]
    },
    "numpy.asarray": {
     "line number": [
      1250,
      1251,
      1254,
      1255
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1262,
      1263
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1261
     ]
    },
    "numpy.nan": {
     "line number": [
      1266,
      1266
     ]
    },
    "numpy.ones": {
     "line number": [
      1245,
      1247
     ]
    },
    "numpy.outer": {
     "line number": [
      1245,
      1247
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.set_proj_plane_info": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "healpy.projector.AzimuthalProj": {
     "line number": [
      1061
     ]
    },
    "super": {
     "line number": [
      1061
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.vec2xy": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1071
     ]
    },
    "hasattr": {
     "line number": [
      1097
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      1078,
      1078,
      1078,
      1079,
      1090
     ]
    },
    "numpy.arccos": {
     "line number": [
      1083
     ]
    },
    "numpy.asarray": {
     "line number": [
      1096,
      1096
     ]
    },
    "numpy.cos": {
     "line number": [
      1081,
      1081,
      1083,
      1083,
      1085
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1098
     ]
    },
    "numpy.nan": {
     "line number": [
      1099,
      1099,
      1102,
      1103
     ]
    },
    "numpy.sin": {
     "line number": [
      1084,
      1085,
      1086
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1081
     ]
    },
    "numpy.where": {
     "line number": [
      1101
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2ang": {
  "data": {
   "lineno": 1179
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2ij": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1186
     ]
    },
    "hasattr": {
     "line number": [
      1207
     ]
    },
    "healpy.projector.dtor": {
     "line number": [
      1205
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      1197
     ]
    },
    "int": {
     "line number": [
      1189,
      1190
     ]
    },
    "numpy.around": {
     "line number": [
      1211,
      1212,
      1217,
      1218
     ]
    },
    "numpy.long": {
     "line number": [
      1211,
      1212,
      1217,
      1218
     ]
    },
    "numpy.ma.array": {
     "line number": [
      1211,
      1212
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1210
     ]
    },
    "numpy.nan": {
     "line number": [
      1215,
      1215
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2vec": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1114
     ]
    },
    "hasattr": {
     "line number": [
      1111,
      1133
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      1123,
      1145
     ]
    },
    "numpy.arcsin": {
     "line number": [
      1139,
      1142,
      1158,
      1161
     ]
    },
    "numpy.arctan2": {
     "line number": [
      1143,
      1162
     ]
    },
    "numpy.asarray": {
     "line number": [
      1112,
      1112,
      1129,
      1129
     ]
    },
    "numpy.cos": {
     "line number": [
      1143,
      1162,
      1164,
      1164,
      1165
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      1132,
      1134
     ]
    },
    "numpy.nan": {
     "line number": [
      1135,
      1135,
      1135,
      1152,
      1153,
      1154
     ]
    },
    "numpy.sin": {
     "line number": [
      1142,
      1143,
      1161,
      1162,
      1165,
      1166
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1137,
      1156
     ]
    },
    "numpy.where": {
     "line number": [
      1130
     ]
    },
    "numpy.zeros": {
     "line number": [
      1152,
      1153,
      1154
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "healpy.projector.SphericalProj": {
     "line number": [
      587,
      661,
      680,
      685,
      691,
      723,
      765,
      772,
      794
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projector.CartesianProj.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": {
    "healpy.projector.CartesianProj": {
     "line number": [
      603
     ]
    },
    "super": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.ang2xy": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_center": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_extent": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_fov": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": {
    "int": {
     "line number": [
      775,
      776
     ]
    },
    "numpy.arccos": {
     "line number": [
      779
     ]
    },
    "numpy.asarray": {
     "line number": [
      777,
      778
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.ij2xy": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      727,
      762
     ]
    },
    "float": {
     "line number": [
      740,
      743,
      748,
      750
     ]
    },
    "int": {
     "line number": [
      730,
      731
     ]
    },
    "len": {
     "line number": [
      752
     ]
    },
    "numpy.arange": {
     "line number": [
      739,
      742
     ]
    },
    "numpy.asarray": {
     "line number": [
      735,
      737,
      737
     ]
    },
    "numpy.ma.array": {
     "line number": [
      745,
      746,
      756,
      757
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      755
     ]
    },
    "numpy.nan": {
     "line number": [
      760
     ]
    },
    "numpy.ones": {
     "line number": [
      739,
      742
     ]
    },
    "numpy.outer": {
     "line number": [
      739,
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.set_proj_plane_info": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      631
     ]
    },
    "float": {
     "line number": [
      643,
      643
     ]
    },
    "healpy.projector.CartesianProj": {
     "line number": [
      644
     ]
    },
    "len": {
     "line number": [
      625,
      626
     ]
    },
    "numpy.float64": {
     "line number": [
      635,
      636
     ]
    },
    "numpy.long": {
     "line number": [
      637,
      640,
      642
     ]
    },
    "numpy.mod": {
     "line number": [
      618
     ]
    },
    "round": {
     "line number": [
      640
     ]
    },
    "super": {
     "line number": [
      644
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.vec2xy": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": {
    "healpy.projector.dtor": {
     "line number": [
      656,
      658
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      655,
      655,
      655,
      657
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2ang": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2ij": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      695
     ]
    },
    "int": {
     "line number": [
      698,
      699
     ]
    },
    "len": {
     "line number": [
      712
     ]
    },
    "numpy.around": {
     "line number": [
      706,
      709
     ]
    },
    "numpy.asarray": {
     "line number": [
      703,
      705,
      705
     ]
    },
    "numpy.int64": {
     "line number": [
      707,
      710
     ]
    },
    "numpy.ma.array": {
     "line number": [
      716,
      717
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      715
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2vec": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "healpy.projector.dtor": {
     "line number": [
      669,
      670
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      669
     ]
    },
    "numpy.asarray": {
     "line number": [
      665,
      667,
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": {
    "healpy.projector.SphericalProj": {
     "line number": [
      261,
      311,
      325,
      331,
      336,
      354,
      382
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projector.GnomonicProj.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "healpy.projector.GnomonicProj": {
     "line number": [
      268
     ]
    },
    "super": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.ang2xy": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.get_extent": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.get_fov": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "numpy.arccos": {
     "line number": [
      392
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.ij2xy": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      358,
      379
     ]
    },
    "healpy.projector.dtor": {
     "line number": [
      364
     ]
    },
    "int": {
     "line number": [
      361,
      362
     ]
    },
    "numpy.arange": {
     "line number": [
      367,
      369
     ]
    },
    "numpy.asarray": {
     "line number": [
      372,
      373,
      376,
      377
     ]
    },
    "numpy.ones": {
     "line number": [
      367,
      369
     ]
    },
    "numpy.outer": {
     "line number": [
      367,
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.set_proj_plane_info": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": {
    "healpy.projector.GnomonicProj": {
     "line number": [
      279
     ]
    },
    "super": {
     "line number": [
      279
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.vec2xy": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      291
     ]
    },
    "hasattr": {
     "line number": [
      297
     ]
    },
    "numpy.asarray": {
     "line number": [
      293
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      296,
      298
     ]
    },
    "numpy.nan": {
     "line number": [
      299,
      300,
      305,
      306
     ]
    },
    "numpy.where": {
     "line number": [
      294
     ]
    },
    "numpy.zeros": {
     "line number": [
      305,
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2ang": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2ij": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      340
     ]
    },
    "healpy.projector.dtor": {
     "line number": [
      348
     ]
    },
    "int": {
     "line number": [
      343,
      344
     ]
    },
    "numpy.around": {
     "line number": [
      350,
      351
     ]
    },
    "numpy.long": {
     "line number": [
      350,
      351
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2vec": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      317,
      317
     ]
    },
    "numpy.sqrt": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "healpy.projector.SphericalProj": {
     "line number": [
      396,
      425,
      467,
      472,
      478,
      506,
      541
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projector.MollweideProj.__dfmoll": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      576
     ]
    },
    "staticmethod": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__findRoot": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      562
     ]
    },
    "df": {
     "line number": [
      565
     ]
    },
    "f": {
     "line number": [
      565
     ]
    },
    "min": {
     "line number": [
      562
     ]
    },
    "staticmethod": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__fmoll": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "healpy.projector.pi": {
     "line number": [
      572
     ]
    },
    "numpy.sin": {
     "line number": [
      572,
      572
     ]
    },
    "staticmethod": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "healpy.projector.MollweideProj": {
     "line number": [
      405
     ]
    },
    "super": {
     "line number": [
      405
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__initialise_data": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": {
    "healpy.projector.MollweideProj": {
     "line number": [
      548,
      550,
      551,
      551,
      555,
      556
     ]
    },
    "healpy.projector.dtor": {
     "line number": [
      549
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      553,
      553,
      554,
      554
     ]
    },
    "len": {
     "line number": [
      548
     ]
    },
    "numpy.arange": {
     "line number": [
      549
     ]
    },
    "numpy.concatenate": {
     "line number": [
      553,
      554
     ]
    },
    "staticmethod": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__lininterp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": {
    "staticmethod": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.ang2xy": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.get_extent": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.ij2xy": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      510,
      538
     ]
    },
    "int": {
     "line number": [
      513
     ]
    },
    "numpy.arange": {
     "line number": [
      517,
      519
     ]
    },
    "numpy.asarray": {
     "line number": [
      527,
      528,
      533,
      534
     ]
    },
    "numpy.ma.array": {
     "line number": [
      524,
      525
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      523
     ]
    },
    "numpy.nan": {
     "line number": [
      530,
      530,
      536,
      536
     ]
    },
    "numpy.ones": {
     "line number": [
      517,
      519
     ]
    },
    "numpy.outer": {
     "line number": [
      517,
      519
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.set_proj_plane_info": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "healpy.projector.MollweideProj": {
     "line number": [
      408
     ]
    },
    "super": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.vec2xy": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "healpy.projector.MollweideProj": {
     "line number": [
      416,
      420
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      418,
      418,
      418,
      419,
      421
     ]
    },
    "numpy.cos": {
     "line number": [
      421
     ]
    },
    "numpy.sin": {
     "line number": [
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2ang": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2ij": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      482
     ]
    },
    "hasattr": {
     "line number": [
      490
     ]
    },
    "int": {
     "line number": [
      485
     ]
    },
    "numpy.around": {
     "line number": [
      491,
      492,
      502,
      503
     ]
    },
    "numpy.long": {
     "line number": [
      491,
      492,
      502,
      503
     ]
    },
    "numpy.ma.array": {
     "line number": [
      496,
      497
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      495
     ]
    },
    "numpy.nan": {
     "line number": [
      500,
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2vec": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      435
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      441,
      442,
      457,
      458
     ]
    },
    "numpy.arcsin": {
     "line number": [
      440,
      456
     ]
    },
    "numpy.asarray": {
     "line number": [
      431,
      431
     ]
    },
    "numpy.cos": {
     "line number": [
      444,
      460
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      434,
      436
     ]
    },
    "numpy.maximum": {
     "line number": [
      442,
      458
     ]
    },
    "numpy.nan": {
     "line number": [
      437,
      437,
      437,
      451,
      452,
      453
     ]
    },
    "numpy.sin": {
     "line number": [
      444,
      461
     ]
    },
    "numpy.sqrt": {
     "line number": [
      439,
      443,
      455,
      459
     ]
    },
    "numpy.where": {
     "line number": [
      432
     ]
    },
    "numpy.zeros": {
     "line number": [
      451,
      452,
      453
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": {
    "healpy.projector.SphericalProj": {
     "line number": [
      797,
      860,
      909,
      914,
      919,
      957,
      1002,
      1016
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projector.OrthographicProj.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "healpy.projector.OrthographicProj": {
     "line number": [
      804
     ]
    },
    "super": {
     "line number": [
      804
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.ang2xy": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.get_extent": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1006
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.ij2xy": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      961,
      987
     ]
    },
    "int": {
     "line number": [
      964
     ]
    },
    "len": {
     "line number": [
      996,
      998
     ]
    },
    "numpy.arange": {
     "line number": [
      973,
      975
     ]
    },
    "numpy.asarray": {
     "line number": [
      978,
      979,
      983,
      984
     ]
    },
    "numpy.ma.array": {
     "line number": [
      994,
      995
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      993
     ]
    },
    "numpy.mod": {
     "line number": [
      991
     ]
    },
    "numpy.ones": {
     "line number": [
      973,
      975
     ]
    },
    "numpy.outer": {
     "line number": [
      973,
      975
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.set_proj_plane_info": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": {
    "healpy.projector.OrthographicProj": {
     "line number": [
      809
     ]
    },
    "super": {
     "line number": [
      809
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.vec2xy": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      819
     ]
    },
    "hasattr": {
     "line number": [
      835,
      852
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      825,
      825,
      825,
      826
     ]
    },
    "numpy.any": {
     "line number": [
      833
     ]
    },
    "numpy.asarray": {
     "line number": [
      846,
      846,
      848,
      848
     ]
    },
    "numpy.cos": {
     "line number": [
      827,
      832,
      832
     ]
    },
    "numpy.mod": {
     "line number": [
      848
     ]
    },
    "numpy.nan": {
     "line number": [
      837,
      842,
      853,
      854,
      856,
      857
     ]
    },
    "numpy.sin": {
     "line number": [
      827,
      830
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2ang": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2ij": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      923
     ]
    },
    "hasattr": {
     "line number": [
      938
     ]
    },
    "int": {
     "line number": [
      926
     ]
    },
    "numpy.around": {
     "line number": [
      945,
      946,
      953,
      954
     ]
    },
    "numpy.asarray": {
     "line number": [
      934,
      936,
      936
     ]
    },
    "numpy.long": {
     "line number": [
      945,
      946,
      953,
      954
     ]
    },
    "numpy.ma.array": {
     "line number": [
      945,
      946
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      944
     ]
    },
    "numpy.mod": {
     "line number": [
      942,
      949
     ]
    },
    "numpy.nan": {
     "line number": [
      951,
      951
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2vec": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      868
     ]
    },
    "hasattr": {
     "line number": [
      865,
      876,
      885,
      890,
      898
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      899,
      901,
      902
     ]
    },
    "numpy.abs": {
     "line number": [
      891,
      892
     ]
    },
    "numpy.any": {
     "line number": [
      877
     ]
    },
    "numpy.arcsin": {
     "line number": [
      889,
      894
     ]
    },
    "numpy.arctan2": {
     "line number": [
      895
     ]
    },
    "numpy.asarray": {
     "line number": [
      866,
      866
     ]
    },
    "numpy.cos": {
     "line number": [
      895
     ]
    },
    "numpy.nan": {
     "line number": [
      886,
      888,
      891,
      893
     ]
    },
    "numpy.sqrt": {
     "line number": [
      884
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.projector.SphericalProj": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "object": {
     "line number": [
      40
     ]
    },
    "property": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.projector.SphericalProj.__eq__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "type": {
     "line number": [
      76,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.ang2xy": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_center": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "healpy.projector.dtor": {
     "line number": [
      248,
      248
     ]
    },
    "healpy.projector.pi": {
     "line number": [
      244,
      248
     ]
    },
    "numpy.asarray": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_extent": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_fov": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "healpy.projector.pi": {
     "line number": [
      233
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_proj_plane_info": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.ij2xy": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.mkcoord": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "str": {
     "line number": [
      255
     ]
    },
    "tuple": {
     "line number": [
      258
     ]
    },
    "type": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.projmap": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      191
     ]
    },
    "isinstance": {
     "line number": [
      188,
      191
     ]
    },
    "map": {
     "line number": [
      188,
      189,
      191,
      197,
      200
     ]
    },
    "map.keys": {
     "line number": [
      192
     ]
    },
    "map.mask": {
     "line number": [
      188,
      190
     ]
    },
    "numpy.__version__": {
     "line number": [
      175
     ]
    },
    "numpy.asarray": {
     "line number": [
      184,
      184
     ]
    },
    "numpy.float64": {
     "line number": [
      183
     ]
    },
    "numpy.fromiter": {
     "line number": [
      198
     ]
    },
    "numpy.in1d": {
     "line number": [
      192
     ]
    },
    "numpy.inf": {
     "line number": [
      183
     ]
    },
    "numpy.ma.array": {
     "line number": [
      178
     ]
    },
    "numpy.ma.core.MaskedArray": {
     "line number": [
      176
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      179,
      188
     ]
    },
    "numpy.zeros": {
     "line number": [
      183
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      194
     ]
    },
    "slice": {
     "line number": [
      182
     ]
    },
    "type": {
     "line number": [
      179
     ]
    },
    "vec2pix_func": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.set_flip": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.set_proj_plane_info": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.vec2xy": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2ang": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2ij": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2vec": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "healpy.projector.dtor": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "healpy.projector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.projector.pi": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "healpy.test": {
  "data": {},
  "type": "module"
 },
 "healpy.test.conftest": {
  "data": {},
  "type": "module"
 },
 "healpy.test.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "healpy.test.conftest.pytest_configure": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      10
     ]
    },
    "numpy.set_printoptions": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      309
     ]
    },
    "healpy.test.test_fitsfunc.sys": {
     "line number": [
      4
     ]
    },
    "healpy.test.test_fitsfunc.unittest": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.test.test_fitsfunc.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.unittest": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.healpy": {
     "line number": [
      19
     ]
    },
    "numpy.arange": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.tearDown": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.os": {
     "line number": [
      156,
      157
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_all": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      87
     ]
    },
    "read_map": {
     "line number": [
      85
     ]
    },
    "write_map": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_all_with_header": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      112
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      115
     ]
    },
    "read_map": {
     "line number": [
      111
     ]
    },
    "write_map": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "read_map": {
     "line number": [
      58
     ]
    },
    "write_map": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename_pathlib": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.sys": {
     "line number": [
      61
     ]
    },
    "pathlib.Path": {
     "line number": [
      63
     ]
    },
    "read_map": {
     "line number": [
      65
     ]
    },
    "write_map": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename_with_header": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      70
     ]
    },
    "read_map": {
     "line number": [
      69
     ]
    },
    "write_map": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_hdu": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      80
     ]
    },
    "read_map": {
     "line number": [
      81
     ]
    },
    "write_map": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_hdulist": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      75
     ]
    },
    "read_map": {
     "line number": [
      76
     ]
    },
    "write_map": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_multiple_dtype": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      90
     ]
    },
    "numpy.float64": {
     "line number": [
      90
     ]
    },
    "numpy.int32": {
     "line number": [
      90
     ]
    },
    "read_map": {
     "line number": [
      95
     ]
    },
    "write_map": {
     "line number": [
      94
     ]
    },
    "zip": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_single_dtype": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      100,
      105
     ]
    },
    "numpy.float64": {
     "line number": [
      100
     ]
    },
    "numpy.int32": {
     "line number": [
      100
     ]
    },
    "read_map": {
     "line number": [
      106
     ]
    },
    "write_map": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_dtype": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      134,
      135
     ]
    },
    "numpy.float64": {
     "line number": [
      133
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      135
     ]
    },
    "read_map": {
     "line number": [
      134
     ]
    },
    "write_map": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_dtype_multiarr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.float32": {
     "line number": [
      139,
      141
     ]
    },
    "numpy.float64": {
     "line number": [
      138
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      141
     ]
    },
    "read_map": {
     "line number": [
      139
     ]
    },
    "write_map": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_iterable_dtype": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "dtype": {
     "line number": [
      153
     ]
    },
    "numpy.float32": {
     "line number": [
      147,
      150,
      152
     ]
    },
    "numpy.float64": {
     "line number": [
      147,
      150,
      152
     ]
    },
    "numpy.int32": {
     "line number": [
      147,
      150,
      152
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      153
     ]
    },
    "read_map": {
     "line number": [
      149
     ]
    },
    "write_map": {
     "line number": [
      144
     ]
    },
    "zip": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_partial": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "float": {
     "line number": [
      118
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      122
     ]
    },
    "read_map": {
     "line number": [
      121
     ]
    },
    "write_map": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_partial_3comp": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "float": {
     "line number": [
      125
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      130
     ]
    },
    "read_map": {
     "line number": [
      128
     ]
    },
    "write_map": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_C": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      46
     ]
    },
    "numpy.all": {
     "line number": [
      48
     ]
    },
    "write_map": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_C_3comp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      52
     ]
    },
    "numpy.all": {
     "line number": [
      54
     ]
    },
    "range": {
     "line number": [
      53
     ]
    },
    "write_map": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_IDL": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      24
     ]
    },
    "numpy.all": {
     "line number": [
      27
     ]
    },
    "write_map": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_pathlib": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      38
     ]
    },
    "healpy.test.test_fitsfunc.sys": {
     "line number": [
      34
     ]
    },
    "pathlib.Path": {
     "line number": [
      36
     ]
    },
    "write_map": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_units_list": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      42
     ]
    },
    "write_map": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_units_string": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      31
     ]
    },
    "write_map": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.unittest": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.setUp": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.healpy": {
     "line number": [
      163
     ]
    },
    "numpy.arange": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.tearDown": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.os": {
     "line number": [
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.test_write_map": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      172
     ]
    },
    "healpy.test.test_fitsfunc.gzip": {
     "line number": [
      169
     ]
    },
    "write_map": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.unittest": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.setUp": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      184,
      185,
      186
     ]
    },
    "numpy.complex128": {
     "line number": [
      184,
      185,
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.tearDown": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.os": {
     "line number": [
      190,
      191,
      192,
      193,
      194,
      195
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_filename": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "read_alm": {
     "line number": [
      229
     ]
    },
    "write_alm": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_filename_array": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      240
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      242
     ]
    },
    "read_alm": {
     "line number": [
      241
     ]
    },
    "write_alm": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_hdu": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      251
     ]
    },
    "read_alm": {
     "line number": [
      252
     ]
    },
    "write_alm": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_hdulist": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      246
     ]
    },
    "read_alm": {
     "line number": [
      247
     ]
    },
    "write_alm": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_pathlib": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.sys": {
     "line number": [
      232
     ]
    },
    "pathlib.Path": {
     "line number": [
      234
     ]
    },
    "read_alm": {
     "line number": [
      236
     ]
    },
    "write_alm": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_write_alm": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": {
    "len": {
     "line number": [
      202
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      209
     ]
    },
    "read_alm": {
     "line number": [
      200,
      205
     ]
    },
    "write_alm": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_write_alm_256_128": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "len": {
     "line number": [
      215
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      225
     ]
    },
    "numpy.where": {
     "line number": [
      223
     ]
    },
    "read_alm": {
     "line number": [
      213,
      218
     ]
    },
    "write_alm": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.unittest": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.setUp": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.tearDown": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "healpy.test.test_fitsfunc.os": {
     "line number": [
      260,
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_filename": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      284
     ]
    },
    "numpy.double": {
     "line number": [
      284
     ]
    },
    "read_cl": {
     "line number": [
      286
     ]
    },
    "write_cl": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_hdu": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      297
     ]
    },
    "numpy.arange": {
     "line number": [
      295
     ]
    },
    "numpy.double": {
     "line number": [
      295
     ]
    },
    "read_cl": {
     "line number": [
      298
     ]
    },
    "write_cl": {
     "line number": [
      296
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_hdulist": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      291
     ]
    },
    "numpy.arange": {
     "line number": [
      289
     ]
    },
    "numpy.double": {
     "line number": [
      289
     ]
    },
    "read_cl": {
     "line number": [
      292
     ]
    },
    "write_cl": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_4comp": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      270
     ]
    },
    "numpy.double": {
     "line number": [
      270
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      274
     ]
    },
    "range": {
     "line number": [
      270
     ]
    },
    "read_cl": {
     "line number": [
      272
     ]
    },
    "write_cl": {
     "line number": [
      271
     ]
    },
    "zip": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_6comp": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      277
     ]
    },
    "numpy.double": {
     "line number": [
      277
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      281
     ]
    },
    "range": {
     "line number": [
      277
     ]
    },
    "read_cl": {
     "line number": [
      279
     ]
    },
    "write_cl": {
     "line number": [
      278
     ]
    },
    "zip": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_II": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      264
     ]
    },
    "numpy.double": {
     "line number": [
      264
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      267
     ]
    },
    "read_cl": {
     "line number": [
      266
     ]
    },
    "write_cl": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.healpy": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.test_getformat": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "getformat": {
     "line number": [
      302,
      303,
      304,
      305,
      306
     ]
    },
    "str": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelfunc": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      194
     ]
    },
    "healpy.test.test_pixelfunc.unittest": {
     "line number": [
      195
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "healpy.test.test_pixelfunc.unittest": {
     "line number": [
      8
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.degrees": {
     "line number": [
      13,
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_accept_ma_allows_only_keywords": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      181
     ]
    },
    "numpy.zeros": {
     "line number": [
      178
     ]
    },
    "ud_grade": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_lonlat": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "ang2pix": {
     "line number": [
      75,
      81
     ]
    },
    "id": {
     "line number": [
      75,
      76,
      81,
      82
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      77,
      78,
      83,
      84
     ]
    },
    "pix2ang": {
     "line number": [
      76,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_negative_theta": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "ang2pix": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_nest": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "ang2pix": {
     "line number": [
      55
     ]
    },
    "id": {
     "line number": [
      55,
      56
     ]
    },
    "numpy.allclose": {
     "line number": [
      60,
      61
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      57,
      58
     ]
    },
    "pix2ang": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_nest_outofrange_doesntcrash": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    },
    "ang2pix": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_ring": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ang2pix": {
     "line number": [
      37
     ]
    },
    "id": {
     "line number": [
      37,
      38
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      39,
      40
     ]
    },
    "pix2ang": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_ring_outofrange": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      46
     ]
    },
    "ang2pix": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_boundaries": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "boundaries": {
     "line number": [
      149
     ]
    },
    "nside2npix": {
     "line number": [
      145
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      151
     ]
    },
    "numpy.max": {
     "line number": [
      156
     ]
    },
    "numpy.min": {
     "line number": [
      155
     ]
    },
    "range": {
     "line number": [
      143,
      145,
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_fit_dipole": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "fit_dipole": {
     "line number": [
      135
     ]
    },
    "nside2npix": {
     "line number": [
      131
     ]
    },
    "numpy.arange": {
     "line number": [
      133
     ]
    },
    "numpy.dot": {
     "line number": [
      134
     ]
    },
    "numpy.transpose": {
     "line number": [
      133
     ]
    },
    "pix2vec": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_all_neighbours": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "get_all_neighbours": {
     "line number": [
      124,
      125
     ]
    },
    "numpy.array": {
     "line number": [
      123
     ]
    },
    "numpy.pi": {
     "line number": [
      124,
      124
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      126,
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_interp_val_lonlat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "get_interp_val": {
     "line number": [
      95,
      96
     ]
    },
    "numpy.arange": {
     "line number": [
      94
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_interp_weights": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "get_interp_weights": {
     "line number": [
      103,
      108,
      114,
      118
     ]
    },
    "numpy.array": {
     "line number": [
      100,
      100,
      112,
      112
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      104,
      105,
      109,
      110,
      115,
      116,
      119,
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_isnsideok": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "isnsideok": {
     "line number": [
      186,
      187,
      189,
      190,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_max_pixrad": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "max_pixrad": {
     "line number": [
      25,
      27
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2npix": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "nside2npix": {
     "line number": [
      17,
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2pixarea": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "nside2pixarea": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2resol": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "nside2resol": {
     "line number": [
      21,
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ring": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "len": {
     "line number": [
      168
     ]
    },
    "nside2npix": {
     "line number": [
      162
     ]
    },
    "numpy.arange": {
     "line number": [
      165
     ]
    },
    "numpy.int64": {
     "line number": [
      165
     ]
    },
    "numpy.logical_or": {
     "line number": [
      173
     ]
    },
    "pix2ring": {
     "line number": [
      166
     ]
    },
    "range": {
     "line number": [
      160
     ]
    },
    "set": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_vec2pix_lonlat": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "ang2vec": {
     "line number": [
      88
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      90,
      91
     ]
    },
    "vec2ang": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      32
     ]
    },
    "healpy.test.test_pixelweights.unittest": {
     "line number": [
      33
     ]
    },
    "healpy.test.test_pixelweights.warnings": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.test.test_pixelweights.TestMap2Alm": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "healpy.test.test_pixelweights.unittest": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_pixelweights.TestMap2Alm.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "healpy.alm2map": {
     "line number": [
      21
     ]
    },
    "numpy.complex": {
     "line number": [
      20
     ]
    },
    "numpy.ones": {
     "line number": [
      20
     ]
    },
    "numpy.random.seed": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelweights.TestMap2Alm.test_astropy_download_file": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "astropy.utils.data.conf.dataurl": {
     "line number": [
      24
     ]
    },
    "astropy.utils.data.get_pkg_data_filename": {
     "line number": [
      26
     ]
    },
    "print": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_pixelweights.data": {
  "data": {
   "shadows": "astropy.utils.data"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc": {
  "data": {},
  "type": "module"
 },
 "healpy.test.test_query_disc.TestQueryDisc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "healpy.test.test_query_disc.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_query_disc.TestQueryDisc.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      15,
      17
     ]
    },
    "numpy.radians": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "boundaries": {
     "line number": [
      52
     ]
    },
    "numpy.array": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_floatpix_array": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "boundaries": {
     "line number": [
      99
     ]
    },
    "exceptions.ValueError": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_floatpix_scalar": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "boundaries": {
     "line number": [
      102
     ]
    },
    "exceptions.ValueError": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_list": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "boundaries": {
     "line number": [
      64
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_phi_theta": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "boundaries": {
     "line number": [
      71
     ]
    },
    "numpy.array": {
     "line number": [
      71
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_buffer_mode": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "exceptions.ValueError": {
     "line number": [
      109,
      121
     ]
    },
    "nside2npix": {
     "line number": [
      119,
      131
     ]
    },
    "numpy.array": {
     "line number": [
      138
     ]
    },
    "numpy.empty": {
     "line number": [
      107,
      119,
      131
     ]
    },
    "numpy.float64": {
     "line number": [
      119
     ]
    },
    "numpy.int64": {
     "line number": [
      107,
      131
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      138
     ]
    },
    "query_disc": {
     "line number": [
      110,
      122,
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_inclusive": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      45
     ]
    },
    "query_disc": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_not_inclusive": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      38
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      36
     ]
    },
    "query_disc": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_nside_non_power_of_two": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "ang2vec": {
     "line number": [
      93
     ]
    },
    "nside2resol": {
     "line number": [
      86
     ]
    },
    "numpy.radians": {
     "line number": [
      83
     ]
    },
    "print": {
     "line number": [
      87
     ]
    },
    "query_disc": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.ValueError": {
  "data": {
   "shadows": "exceptions.ValueError"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_rotator": {
  "data": {},
  "type": "module"
 },
 "healpy.test.test_rotator.Rotator": {
  "data": {
   "shadows": "healpy.Rotator"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.euler": {
  "data": {
   "shadows": "healpy.rotator.euler"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.euler_matrix_new": {
  "data": {
   "shadows": "healpy.rotator.euler_matrix_new"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "healpy.test.test_rotator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.set_random_seed": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "healpy.test.test_rotator.pytest": {
     "line number": [
      16
     ]
    },
    "numpy.random.seed": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_euler": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "healpy.rotator.euler": {
     "line number": [
      143
     ]
    },
    "healpy.test.test_rotator.pytest": {
     "line number": [
      140,
      141
     ]
    },
    "list": {
     "line number": [
      140
     ]
    },
    "numpy.isnan": {
     "line number": [
      144
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      144
     ]
    },
    "range": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_euler_matrix_new": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "healpy.rotator.euler_matrix_new": {
     "line number": [
      149
     ]
    },
    "healpy.test.test_rotator.pytest": {
     "line number": [
      147
     ]
    },
    "numpy.isnan": {
     "line number": [
      150
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_dipole_and_back": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "healpy.Rotator": {
     "line number": [
      97,
      98
     ]
    },
    "healpy.nside2npix": {
     "line number": [
      91
     ]
    },
    "healpy.pix2vec": {
     "line number": [
      93
     ]
    },
    "healpy.query_strip": {
     "line number": [
      103
     ]
    },
    "numpy.arange": {
     "line number": [
      92
     ]
    },
    "numpy.array": {
     "line number": [
      93,
      95
     ]
    },
    "numpy.dot": {
     "line number": [
      96
     ]
    },
    "numpy.radians": {
     "line number": [
      104,
      104
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      41
     ]
    },
    "healpy.Rotator": {
     "line number": [
      32
     ]
    },
    "healpy.ma": {
     "line number": [
      35
     ]
    },
    "healpy.nside2npix": {
     "line number": [
      29
     ]
    },
    "healpy.read_map": {
     "line number": [
      36
     ]
    },
    "healpy.test.test_rotator.path": {
     "line number": [
      36
     ]
    },
    "numpy.abs": {
     "line number": [
      43
     ]
    },
    "numpy.double": {
     "line number": [
      30
     ]
    },
    "numpy.logical_not": {
     "line number": [
      44
     ]
    },
    "numpy.zeros": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization_alms": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "healpy.Rotator": {
     "line number": [
      63
     ]
    },
    "healpy.alm2map": {
     "line number": [
      60
     ]
    },
    "healpy.get_nside": {
     "line number": [
      60
     ]
    },
    "healpy.map2alm": {
     "line number": [
      58
     ]
    },
    "healpy.read_map": {
     "line number": [
      51
     ]
    },
    "healpy.rotate_alm": {
     "line number": [
      59
     ]
    },
    "healpy.rotator.coordsys2euler_zyz": {
     "line number": [
      57
     ]
    },
    "healpy.test.test_rotator.path": {
     "line number": [
      50,
      52
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization_with_spectrum": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "healpy.Rotator": {
     "line number": [
      79
     ]
    },
    "healpy.anafast": {
     "line number": [
      81,
      83
     ]
    },
    "healpy.synfast": {
     "line number": [
      80
     ]
    },
    "numpy.abs": {
     "line number": [
      85
     ]
    },
    "numpy.double": {
     "line number": [
      76
     ]
    },
    "numpy.zeros": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_vector": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "gal2ecl": {
     "line number": [
      136
     ]
    },
    "gal2ecl.I": {
     "line number": [
      137
     ]
    },
    "healpy.Rotator": {
     "line number": [
      134
     ]
    },
    "numpy.array": {
     "line number": [
      135
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_eq": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "healpy.Rotator": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_input_lengths": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      112
     ]
    },
    "healpy.Rotator": {
     "line number": [
      113
     ]
    },
    "healpy.test.test_rotator.pytest": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_input_lengths_inv": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      122
     ]
    },
    "healpy.Rotator": {
     "line number": [
      123
     ]
    },
    "healpy.test.test_rotator.pytest": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_input_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      117
     ]
    },
    "healpy.Rotator": {
     "line number": [
      118
     ]
    },
    "healpy.test.test_rotator.pytest": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      433
     ]
    },
    "healpy.test.test_sphtfunc.unittest": {
     "line number": [
      434
     ]
    },
    "healpy.test.test_sphtfunc.warnings": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "healpy.test.test_sphtfunc.unittest": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      62
     ]
    },
    "healpy.ma": {
     "line number": [
      22,
      31
     ]
    },
    "healpy.read_cl": {
     "line number": [
      48,
      55
     ]
    },
    "healpy.read_map": {
     "line number": [
      23,
      32,
      39
     ]
    },
    "healpy.synfast": {
     "line number": [
      80
     ]
    },
    "healpy.test.test_sphtfunc.os": {
     "line number": [
      20,
      20,
      24,
      33,
      40,
      49,
      56,
      63
     ]
    },
    "itertools.chain": {
     "line number": [
      46
     ]
    },
    "numpy.array": {
     "line number": [
      74
     ]
    },
    "numpy.bool": {
     "line number": [
      45
     ]
    },
    "numpy.logical_not": {
     "line number": [
      47
     ]
    },
    "numpy.radians": {
     "line number": [
      85
     ]
    },
    "numpy.random.seed": {
     "line number": [
      79
     ]
    },
    "range": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_accept_ma_allows_only_keywords": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      369
     ]
    },
    "healpy.smoothing": {
     "line number": [
      368
     ]
    },
    "numpy.ones": {
     "line number": [
      366
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_alm2cl": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "healpy.alm2cl": {
     "line number": [
      196
     ]
    },
    "healpy.synalm": {
     "line number": [
      194
     ]
    },
    "numpy.random.seed": {
     "line number": [
      191
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "healpy.anafast": {
     "line number": [
      90
     ]
    },
    "healpy.remove_monopole": {
     "line number": [
      90
     ]
    },
    "len": {
     "line number": [
      91
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_iqu": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "healpy.anafast": {
     "line number": [
      101
     ]
    },
    "healpy.remove_monopole": {
     "line number": [
      100
     ]
    },
    "len": {
     "line number": [
      102,
      103
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      105
     ]
    },
    "range": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_nomask": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "healpy.anafast": {
     "line number": [
      95
     ]
    },
    "healpy.remove_monopole": {
     "line number": [
      95
     ]
    },
    "len": {
     "line number": [
      96
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_xspectra": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "healpy.anafast": {
     "line number": [
      108
     ]
    },
    "healpy.read_cl": {
     "line number": [
      114
     ]
    },
    "healpy.remove_monopole": {
     "line number": [
      109,
      110
     ]
    },
    "healpy.test.test_sphtfunc.os": {
     "line number": [
      115
     ]
    },
    "len": {
     "line number": [
      113
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_beam2bl": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "healpy.beam2bl": {
     "line number": [
      382
     ]
    },
    "numpy.arange": {
     "line number": [
      379
     ]
    },
    "numpy.exp": {
     "line number": [
      377,
      380
     ]
    },
    "numpy.linspace": {
     "line number": [
      375
     ]
    },
    "numpy.log": {
     "line number": [
      376
     ]
    },
    "numpy.pi": {
     "line number": [
      377
     ]
    },
    "numpy.radians": {
     "line number": [
      375,
      376
     ]
    },
    "numpy.sqrt": {
     "line number": [
      376
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      383
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_bl2beam": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "healpy.bl2beam": {
     "line number": [
      395
     ]
    },
    "numpy.arange": {
     "line number": [
      392
     ]
    },
    "numpy.exp": {
     "line number": [
      390,
      393
     ]
    },
    "numpy.linspace": {
     "line number": [
      388
     ]
    },
    "numpy.log": {
     "line number": [
      389
     ]
    },
    "numpy.pi": {
     "line number": [
      390
     ]
    },
    "numpy.radians": {
     "line number": [
      388,
      389
     ]
    },
    "numpy.sqrt": {
     "line number": [
      389
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_gauss_beam": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      179
     ]
    },
    "healpy.gauss_beam": {
     "line number": [
      183
     ]
    },
    "healpy.test.test_sphtfunc.os": {
     "line number": [
      180
     ]
    },
    "numpy.array": {
     "line number": [
      178
     ]
    },
    "numpy.radians": {
     "line number": [
      183
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": {
    "healpy.alm2map": {
     "line number": [
      220
     ]
    },
    "healpy.map2alm": {
     "line number": [
      219
     ]
    },
    "healpy.synfast": {
     "line number": [
      206
     ]
    },
    "input": {
     "line number": [
      218,
      219,
      221
     ]
    },
    "numpy.empty": {
     "line number": [
      214
     ]
    },
    "numpy.float32": {
     "line number": [
      216
     ]
    },
    "numpy.radians": {
     "line number": [
      211
     ]
    },
    "numpy.random.seed": {
     "line number": [
      205
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm_pol": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "healpy.alm2map": {
     "line number": [
      235
     ]
    },
    "healpy.map2alm": {
     "line number": [
      234
     ]
    },
    "input": {
     "line number": [
      233,
      234,
      236
     ]
    },
    "numpy.empty": {
     "line number": [
      224
     ]
    },
    "numpy.float32": {
     "line number": [
      229
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      237
     ]
    },
    "zip": {
     "line number": [
      225,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm_pol_gal_cut": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "healpy.alm2map": {
     "line number": [
      259
     ]
    },
    "healpy.get_nside": {
     "line number": [
      251
     ]
    },
    "healpy.map2alm": {
     "line number": [
      256
     ]
    },
    "healpy.nside2npix": {
     "line number": [
      252
     ]
    },
    "healpy.pix2ang": {
     "line number": [
      254
     ]
    },
    "input": {
     "line number": [
      249,
      251,
      257,
      260
     ]
    },
    "numpy.abs": {
     "line number": [
      254
     ]
    },
    "numpy.arange": {
     "line number": [
      254
     ]
    },
    "numpy.empty": {
     "line number": [
      240
     ]
    },
    "numpy.float32": {
     "line number": [
      245
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      264
     ]
    },
    "zip": {
     "line number": [
      241,
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_max_nside_check": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      403
     ]
    },
    "healpy.check_max_nside": {
     "line number": [
      404,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_pixwin_base": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      416
     ]
    },
    "healpy.pixwin": {
     "line number": [
      413,
      417
     ]
    },
    "numpy.arange": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_pixwin_lmax": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "healpy.pixwin": {
     "line number": [
      425,
      429
     ]
    },
    "len": {
     "line number": [
      426,
      430
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_pixwin_pol": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "healpy.pixwin": {
     "line number": [
      420
     ]
    },
    "len": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      270
     ]
    },
    "healpy.map2alm": {
     "line number": [
      267
     ]
    },
    "healpy.rotate_alm": {
     "line number": [
      271,
      272
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      274
     ]
    },
    "numpy.vstack": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm2": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "healpy.Alm.getidx": {
     "line number": [
      298,
      355
     ]
    },
    "healpy.Alm.getsize": {
     "line number": [
      293
     ]
    },
    "healpy.rotate_alm": {
     "line number": [
      303
     ]
    },
    "numpy.array": {
     "line number": [
      326,
      358
     ]
    },
    "numpy.complex": {
     "line number": [
      294
     ]
    },
    "numpy.pi": {
     "line number": [
      300
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      360
     ]
    },
    "numpy.zeros": {
     "line number": [
      294
     ]
    },
    "range": {
     "line number": [
      295,
      296,
      297,
      353,
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm_rotmatrix": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "healpy.Alm.getsize": {
     "line number": [
      279
     ]
    },
    "healpy.Rotator": {
     "line number": [
      286
     ]
    },
    "healpy.rotate_alm": {
     "line number": [
      285,
      287
     ]
    },
    "healpy.rotator.coordsys2euler_zyz": {
     "line number": [
      284
     ]
    },
    "numpy.complex": {
     "line number": [
      280
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      288
     ]
    },
    "numpy.zeros": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_smoothing_masked": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "healpy.ma": {
     "line number": [
      160
     ]
    },
    "healpy.read_map": {
     "line number": [
      161
     ]
    },
    "healpy.smoothing": {
     "line number": [
      159
     ]
    },
    "healpy.test.test_sphtfunc.os": {
     "line number": [
      162
     ]
    },
    "numpy.float64": {
     "line number": [
      168
     ]
    },
    "numpy.radians": {
     "line number": [
      159
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_smoothing_notmasked": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "healpy.read_map": {
     "line number": [
      147
     ]
    },
    "healpy.smoothing": {
     "line number": [
      144
     ]
    },
    "healpy.test.test_sphtfunc.os": {
     "line number": [
      148
     ]
    },
    "numpy.float64": {
     "line number": [
      154
     ]
    },
    "numpy.radians": {
     "line number": [
      145
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_synfast": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "healpy.read_map": {
     "line number": [
      129
     ]
    },
    "healpy.synfast": {
     "line number": [
      132
     ]
    },
    "healpy.test.test_sphtfunc.os": {
     "line number": [
      130
     ]
    },
    "numpy.radians": {
     "line number": [
      137
     ]
    },
    "numpy.random.seed": {
     "line number": [
      128
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      1091
     ]
    },
    "healpy.test.test_spinfunc.unittest": {
     "line number": [
      1092
     ]
    },
    "healpy.test.test_spinfunc.warnings": {
     "line number": [
      15
     ]
    },
    "numpy.array": {
     "line number": [
      20,
      70,
      121,
      317,
      513,
      712,
      761,
      810,
      862,
      911,
      960
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.test.test_spinfunc.TestSpinFunc": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": {
    "healpy.test.test_spinfunc.unittest": {
     "line number": [
      1012
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.setUp": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": {
    "healpy.synalm": {
     "line number": [
      1026,
      1027
     ]
    },
    "healpy.synfast": {
     "line number": [
      1019,
      1022
     ]
    },
    "numpy.ones": {
     "line number": [
      1020,
      1023,
      1026,
      1027
     ]
    },
    "numpy.random.seed": {
     "line number": [
      1018
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_alm2map_spin_precomputed": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": {
    "healpy.alm2map_spin": {
     "line number": [
      1061
     ]
    },
    "healpy.test.test_spinfunc.calm": {
     "line number": [
      1062
     ]
    },
    "healpy.test.test_spinfunc.galm": {
     "line number": [
      1062
     ]
    },
    "healpy.test.test_spinfunc.lmax_precomputed": {
     "line number": [
      1062
     ]
    },
    "healpy.test.test_spinfunc.maps": {
     "line number": [
      1064,
      1065
     ]
    },
    "healpy.test.test_spinfunc.nside_precomputed": {
     "line number": [
      1062
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1064,
      1065
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_der1": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": {
    "healpy.alm2map_der1": {
     "line number": [
      1032
     ]
    },
    "healpy.alm2map_spin": {
     "line number": [
      1041
     ]
    },
    "healpy.almxfl": {
     "line number": [
      1034
     ]
    },
    "healpy.test.test_spinfunc.six": {
     "line number": [
      1037
     ]
    },
    "numpy.array": {
     "line number": [
      1036
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1037
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1045,
      1046
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_forward_backward_spin": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": {
    "healpy.alm2map_spin": {
     "line number": [
      1085
     ]
    },
    "healpy.almxfl": {
     "line number": [
      1082,
      1083
     ]
    },
    "healpy.map2alm_spin": {
     "line number": [
      1086
     ]
    },
    "numpy.ones": {
     "line number": [
      1080
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      1087,
      1088
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_map2alm_spin_spin_precomputed": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "healpy.map2alm_spin": {
     "line number": [
      1071
     ]
    },
    "healpy.test.test_spinfunc.clms": {
     "line number": [
      1075
     ]
    },
    "healpy.test.test_spinfunc.glms": {
     "line number": [
      1074
     ]
    },
    "healpy.test.test_spinfunc.lmax_precomputed": {
     "line number": [
      1072
     ]
    },
    "healpy.test.test_spinfunc.maps": {
     "line number": [
      1072,
      1072
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1074,
      1075
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_spin0": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": {
    "healpy.alm2map": {
     "line number": [
      1049
     ]
    },
    "healpy.alm2map_spin": {
     "line number": [
      1050
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      1054,
      1055
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.calm": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.clms": {
  "data": {
   "lineno": 861
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.galm": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.glms": {
  "data": {
   "lineno": 711
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.lmax_precomputed": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.maps": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.nside_precomputed": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc": {
  "data": {
   "symbols_in_volume": {
    "healpy.test.test_visufunc.matplotlib": {
     "line number": [
      3
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.test.test_visufunc.TestNoCrash": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "healpy.test.test_visufunc.unittest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.test.test_visufunc.TestNoCrash.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "healpy.UNSEEN": {
     "line number": [
      19,
      22
     ]
    },
    "healpy.ma": {
     "line number": [
      20,
      23
     ]
    },
    "healpy.nside2npix": {
     "line number": [
      15
     ]
    },
    "numpy.arange": {
     "line number": [
      16,
      17
     ]
    },
    "numpy.double": {
     "line number": [
      16,
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_crash": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      57
     ]
    },
    "azeqview": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_ma_nocrash": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "azeqview": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_nocrash": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "azeqview": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_crash": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      29
     ]
    },
    "cartview": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_ma_nocrash": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "cartview": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_nocrash": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "cartview": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_crash": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      43
     ]
    },
    "gnomview": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_ma_nocrash": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "gnomview": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_nocrash": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "gnomview": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_crash": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      36
     ]
    },
    "mollview": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_ma_nocrash": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "mollview": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_nocrash": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "mollview": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_crash": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      67
     ]
    },
    "mollzoom": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_histnocrash": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "mollzoom": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_ma_hist_nocrash": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "mollzoom": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_ma_nocrash": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "mollzoom": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_nocrash": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "mollzoom": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_crash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      50
     ]
    },
    "orthview": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_ma_nocrash": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "orthview": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_nocrash": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "orthview": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.version": {
  "data": {},
  "type": "module"
 },
 "healpy.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "healpy.visufunc": {
  "data": {
   "symbols_in_volume": {
    "healpy.visufunc.pi": {
     "line number": [
      70
     ]
    },
    "healpy.visufunc.projplot": {
     "line number": [
      1436
     ]
    },
    "healpy.visufunc.projscatter": {
     "line number": [
      1458
     ]
    },
    "healpy.visufunc.projtext": {
     "line number": [
      1480
     ]
    },
    "numpy.pi": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.visufunc.PA": {
  "data": {
   "shadows": "projaxes"
  },
  "type": "import"
 },
 "healpy.visufunc.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "healpy.visufunc.azeqview": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1224
     ]
    },
    "format": {
     "line number": [
      1251,
      1294,
      1308
     ]
    },
    "hasattr": {
     "line number": [
      1219
     ]
    },
    "healpy.visufunc.matplotlib": {
     "line number": [
      1282
     ]
    },
    "healpy.visufunc.pylab": {
     "line number": [
      1210,
      1213,
      1218,
      1244,
      1245,
      1338,
      1340
     ]
    },
    "map": {
     "line number": [
      1206,
      1247,
      1248,
      1255,
      1256,
      1259,
      1260,
      1263
     ]
    },
    "max": {
     "line number": [
      1272
     ]
    },
    "min": {
     "line number": [
      1271
     ]
    },
    "numpy.array": {
     "line number": [
      1214
     ]
    },
    "numpy.inf": {
     "line number": [
      1248
     ]
    },
    "numpy.linspace": {
     "line number": [
      1280,
      1281
     ]
    },
    "numpy.zeros": {
     "line number": [
      1248
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.cartview": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      720,
      747
     ]
    },
    "format": {
     "line number": [
      753,
      792,
      805
     ]
    },
    "hasattr": {
     "line number": [
      715
     ]
    },
    "healpy.visufunc.matplotlib": {
     "line number": [
      780
     ]
    },
    "healpy.visufunc.pylab": {
     "line number": [
      702,
      707,
      708,
      712,
      714,
      739,
      740,
      833,
      834
     ]
    },
    "map": {
     "line number": [
      698,
      742,
      743,
      745,
      745,
      757,
      757,
      759,
      759,
      761
     ]
    },
    "max": {
     "line number": [
      765
     ]
    },
    "min": {
     "line number": [
      764
     ]
    },
    "numpy.array": {
     "line number": [
      708,
      749
     ]
    },
    "numpy.float64": {
     "line number": [
      749
     ]
    },
    "numpy.inf": {
     "line number": [
      743
     ]
    },
    "numpy.linspace": {
     "line number": [
      778,
      779
     ]
    },
    "numpy.zeros": {
     "line number": [
      743
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.delgraticules": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": {
    "healpy.visufunc.pylab": {
     "line number": [
      1403,
      1404,
      1405,
      1411,
      1413
     ]
    },
    "isinstance": {
     "line number": [
      1408
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.dtor": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "healpy.visufunc.gnomview": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      445
     ]
    },
    "format": {
     "line number": [
      472,
      509,
      522
     ]
    },
    "hasattr": {
     "line number": [
      440
     ]
    },
    "healpy.visufunc.matplotlib": {
     "line number": [
      497
     ]
    },
    "healpy.visufunc.pylab": {
     "line number": [
      427,
      432,
      433,
      437,
      439,
      464,
      465,
      572,
      574,
      577
     ]
    },
    "map": {
     "line number": [
      423,
      467,
      468,
      470,
      470,
      476,
      476,
      478,
      478,
      480
     ]
    },
    "max": {
     "line number": [
      484
     ]
    },
    "min": {
     "line number": [
      483
     ]
    },
    "numpy.around": {
     "line number": [
      550
     ]
    },
    "numpy.array": {
     "line number": [
      433
     ]
    },
    "numpy.inf": {
     "line number": [
      468
     ]
    },
    "numpy.linspace": {
     "line number": [
      495,
      496
     ]
    },
    "numpy.zeros": {
     "line number": [
      468
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.graticule": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": {
    "healpy.visufunc.pylab": {
     "line number": [
      1370,
      1371,
      1372,
      1389,
      1391
     ]
    },
    "isinstance": {
     "line number": [
      1386
     ]
    },
    "len": {
     "line number": [
      1374
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.visufunc.mollview": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      200
     ]
    },
    "format": {
     "line number": [
      267,
      281
     ]
    },
    "hasattr": {
     "line number": [
      195
     ]
    },
    "healpy.visufunc.matplotlib": {
     "line number": [
      255
     ]
    },
    "healpy.visufunc.pylab": {
     "line number": [
      186,
      189,
      194,
      220,
      221,
      306,
      308
     ]
    },
    "map": {
     "line number": [
      182,
      223,
      224,
      226,
      226,
      232,
      233,
      236,
      237,
      240
     ]
    },
    "max": {
     "line number": [
      245
     ]
    },
    "min": {
     "line number": [
      244
     ]
    },
    "numpy.array": {
     "line number": [
      190
     ]
    },
    "numpy.inf": {
     "line number": [
      224
     ]
    },
    "numpy.linspace": {
     "line number": [
      253,
      254
     ]
    },
    "numpy.zeros": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.visufunc.orthview": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      969
     ]
    },
    "format": {
     "line number": [
      1036,
      1050
     ]
    },
    "hasattr": {
     "line number": [
      964
     ]
    },
    "healpy.visufunc.matplotlib": {
     "line number": [
      1024
     ]
    },
    "healpy.visufunc.pylab": {
     "line number": [
      955,
      958,
      963,
      989,
      990,
      1075,
      1077
     ]
    },
    "map": {
     "line number": [
      951,
      992,
      993,
      1000,
      1001,
      1004,
      1005,
      1008
     ]
    },
    "max": {
     "line number": [
      1014
     ]
    },
    "min": {
     "line number": [
      1013
     ]
    },
    "numpy.array": {
     "line number": [
      959
     ]
    },
    "numpy.inf": {
     "line number": [
      993
     ]
    },
    "numpy.linspace": {
     "line number": [
      1022,
      1023
     ]
    },
    "numpy.zeros": {
     "line number": [
      993
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.pi": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "healpy.visufunc.projplot": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": {
    "healpy.visufunc.pylab": {
     "line number": [
      1420,
      1421,
      1422,
      1429,
      1431
     ]
    },
    "isinstance": {
     "line number": [
      1426
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.projscatter": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": {
    "healpy.visufunc.pylab": {
     "line number": [
      1442,
      1443,
      1444,
      1451,
      1453
     ]
    },
    "isinstance": {
     "line number": [
      1448
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.projtext": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": {
    "healpy.visufunc.pylab": {
     "line number": [
      1464,
      1465,
      1466,
      1473,
      1475
     ]
    },
    "isinstance": {
     "line number": [
      1470
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.visufunc.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "healpy.zoomtool": {
  "data": {
   "symbols_in_volume": {
    "healpy.zoomtool.pi": {
     "line number": [
      29
     ]
    },
    "numpy.pi": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "module"
 },
 "healpy.zoomtool.PA": {
  "data": {
   "shadows": "projaxes"
  },
  "type": "import"
 },
 "healpy.zoomtool.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.zoomtool.ZoomTool": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "object": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "class"
 },
 "healpy.zoomtool.ZoomTool.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      388,
      389
     ]
    },
    "dict": {
     "line number": [
      358
     ]
    },
    "healpy.zoomtool.pylab": {
     "line number": [
      371,
      373
     ]
    },
    "isinstance": {
     "line number": [
      358
     ]
    },
    "len": {
     "line number": [
      359
     ]
    },
    "max": {
     "line number": [
      362
     ]
    },
    "min": {
     "line number": [
      362
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._decrease_reso": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "len": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._increase_reso": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._move_zoom_center": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._reso_on_key": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      442
     ]
    },
    "print": {
     "line number": [
      428,
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._update_grat_info": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "healpy.zoomtool.dtor": {
     "line number": [
      461,
      462,
      464,
      465,
      468,
      469,
      471,
      472
     ]
    },
    "numpy.around": {
     "line number": [
      461,
      464,
      468,
      471
     ]
    },
    "numpy.floor": {
     "line number": [
      461,
      464,
      468,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._zoom_on_click": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      416
     ]
    },
    "ValueError": {
     "line number": [
      411
     ]
    },
    "healpy.zoomtool.pylab": {
     "line number": [
      418
     ]
    },
    "numpy.isnan": {
     "line number": [
      410,
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.connect_callbacks": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.disconnect_callbacks": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.draw_gnom": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      599
     ]
    },
    "hasattr": {
     "line number": [
      554
     ]
    },
    "healpy.zoomtool.matplotlib": {
     "line number": [
      572
     ]
    },
    "healpy.zoomtool.pylab": {
     "line number": [
      518,
      519,
      603,
      604,
      605
     ]
    },
    "numpy.around": {
     "line number": [
      587
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.get_reso": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "healpy.zoomtool.dtor": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "healpy.zoomtool.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.zoomtool.mollzoom": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "format": {
     "line number": [
      116,
      193
     ]
    },
    "healpy.zoomtool.ZoomTool": {
     "line number": [
      300
     ]
    },
    "healpy.zoomtool.matplotlib": {
     "line number": [
      140,
      215
     ]
    },
    "healpy.zoomtool.pylab": {
     "line number": [
      106,
      109,
      110,
      284,
      287,
      302,
      304
     ]
    },
    "map": {
     "line number": [
      102,
      112,
      113,
      114,
      114,
      120,
      121,
      124,
      125,
      128,
      197,
      197,
      199,
      199,
      201,
      300
     ]
    },
    "max": {
     "line number": [
      133,
      205
     ]
    },
    "min": {
     "line number": [
      132,
      204
     ]
    },
    "numpy.around": {
     "line number": [
      264
     ]
    },
    "numpy.inf": {
     "line number": [
      113
     ]
    },
    "numpy.linspace": {
     "line number": [
      138,
      139,
      213,
      214
     ]
    },
    "numpy.zeros": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "healpy.zoomtool.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.zoomtool.pi": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "healpy.zoomtool.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "healpy.zoomtool.set_g_clim": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      314
     ]
    },
    "hasattr": {
     "line number": [
      313
     ]
    },
    "healpy.zoomtool.pylab": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 }
}