{
 "healpy": {
  "data": {},
  "type": "module"
 },
 "healpy.alm2map_spin": {
  "data": {
   "shadows": "alm2map_spin_healpy"
  },
  "type": "import"
 },
 "healpy.cookbook": {
  "data": {},
  "type": "module"
 },
 "healpy.cookbook.is_like2d": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "healpy.cookbook.is_seq",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.cookbook.is_seq": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "healpy.cookbook.is_seq_of_seq": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "healpy.cookbook.is_seq"
   ]
  },
  "type": "function"
 },
 "healpy.cookbook.len_array_or_arrays": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "healpy.cookbook.is_seq_of_seq",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.dist2holes": {
  "data": {
   "shadows": "dist2holes_healpy"
  },
  "type": "import"
 },
 "healpy.map2alm_spin": {
  "data": {
   "shadows": "map2alm_spin_healpy"
  },
  "type": "import"
 },
 "healpy.newvisufunc": {
  "data": {},
  "type": "module"
 },
 "healpy.newvisufunc.GeoAxes": {
  "data": {
   "shadows": "matplotlib.projections.geo.GeoAxes"
  },
  "type": "import"
 },
 "healpy.newvisufunc.ThetaFormatterShiftPi": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "matplotlib.projections.geo.GeoAxes.ThetaFormatter"
   ]
  },
  "type": "class"
 },
 "healpy.newvisufunc.ThetaFormatterShiftPi.__call__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "healpy.newvisufunc.ThetaFormatterShiftPi",
    "numpy.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.newvisufunc.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "healpy.newvisufunc.lonlat": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "healpy.newvisufunc.mollview": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "Rotator",
    "ang2pix",
    "healpy.newvisufunc.ThetaFormatterShiftPi",
    "len",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.pcolormesh",
    "matplotlib.pyplot.subplots_adjust",
    "max",
    "min",
    "npix2nside",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.radians",
    "r"
   ]
  },
  "type": "function"
 },
 "healpy.newvisufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.newvisufunc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "healpy.newvisufunc.projplot": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "healpy.newvisufunc.lonlat",
    "matplotlib.pyplot.plot"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes": {
  "data": {
   "symbols_in_volume": [
    "healpy.projaxes.pi",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.projaxes.AzimuthalAxes": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.AzimuthalAxes.__init__": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "healpy.projaxes.AzimuthalAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.AzimuthalAxes.projmap": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "healpy.projaxes.AzimuthalAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.BoundaryLocator.__call__": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib",
    "numpy.arange",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator.__init__": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.BoundaryLocator.autoscale": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "healpy.projaxes.CartesianAxes": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.CartesianAxes.__init__": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "healpy.projaxes.CartesianAxes",
    "healpy.projaxes.pi",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.CartesianAxes.projmap": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "healpy.projaxes.CartesianAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.GnomonicAxes": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.GnomonicAxes.__init__": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "healpy.projaxes.GnomonicAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.GnomonicAxes.projmap": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "healpy.projaxes.GnomonicAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HistEqNorm.__call__": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.clip",
    "numpy.float",
    "numpy.inf",
    "numpy.interp",
    "numpy.isinf",
    "numpy.iterable",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ma.getmask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.__init__": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm._lininterp": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.asarray",
    "numpy.float",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm._set_xyvals": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "TypeError",
    "min",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float",
    "numpy.histogram",
    "numpy.isinf",
    "numpy.ma.asarray",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.autoscale": {
  "data": {
   "lineno": 1021
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.autoscale_None": {
  "data": {
   "lineno": 1010
  },
  "type": "function"
 },
 "healpy.projaxes.HistEqNorm.inverse": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "ValueError",
    "numpy.inf",
    "numpy.isinf",
    "numpy.iterable",
    "numpy.ma.array",
    "numpy.ma.getmask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxAzimuthalAxes": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "healpy.projaxes.AzimuthalAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxAzimuthalAxes.projmap": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "healpy.projaxes.HpxAzimuthalAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxCartesianAxes": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "healpy.projaxes.CartesianAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxCartesianAxes.projmap": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "healpy.projaxes.HpxCartesianAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxGnomonicAxes": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "healpy.projaxes.GnomonicAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxGnomonicAxes.projmap": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "healpy.projaxes.HpxGnomonicAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxMollweideAxes": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "healpy.projaxes.MollweideAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxMollweideAxes.projmap": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "healpy.projaxes.HpxMollweideAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.HpxOrthographicAxes": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "healpy.projaxes.OrthographicAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.HpxOrthographicAxes.projmap": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "healpy.projaxes.HpxOrthographicAxes",
    "len",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.LinNorm2.__call__": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float",
    "numpy.inf",
    "numpy.isinf",
    "numpy.iterable",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ma.getmask",
    "numpy.ma.masked_where",
    "numpy.ma.nomask",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2.autoscale_None": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib",
    "numpy.isinf",
    "numpy.ma.masked_where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LinNorm2.inverse": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.iterable",
    "numpy.ma.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.LogNorm2.__call__": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.asarray",
    "numpy.clip",
    "numpy.float",
    "numpy.inf",
    "numpy.isinf",
    "numpy.iterable",
    "numpy.log",
    "numpy.ma.array",
    "numpy.ma.asarray",
    "numpy.ma.getmask",
    "numpy.ma.log",
    "numpy.ma.masked_where",
    "numpy.ma.nomask",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2.autoscale_None": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib",
    "numpy.isinf",
    "numpy.ma.masked_where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.LogNorm2.inverse": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "numpy.iterable",
    "numpy.ma.asarray",
    "numpy.ma.power",
    "numpy.pow"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.MollweideAxes": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.MollweideAxes.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "healpy.projaxes.MollweideAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.MollweideAxes.projmap": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "healpy.projaxes.MollweideAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.OrthographicAxes": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "healpy.projaxes.SphericalProjAxes"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.OrthographicAxes.__init__": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "healpy.projaxes.OrthographicAxes",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.OrthographicAxes.projmap": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "healpy.projaxes.OrthographicAxes",
    "map",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.P": {
  "data": {
   "shadows": "projector"
  },
  "type": "import"
 },
 "healpy.projaxes.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.projaxes.SphericalProjAxes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "healpy.projaxes.matplotlib"
   ]
  },
  "type": "class"
 },
 "healpy.projaxes.SphericalProjAxes.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ProjClass",
    "TypeError",
    "healpy.projaxes.SphericalProjAxes",
    "healpy.projaxes.dtor",
    "healpy.projaxes.pi",
    "issubclass",
    "numpy.sqrt",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._get_interv_graticule": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "healpy.projaxes.dtor",
    "int",
    "max",
    "numpy.around",
    "numpy.floor",
    "print",
    "set_prec"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._get_interv_graticule.set_prec": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "numpy.around",
    "numpy.floor",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes._make_segment": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "healpy.projaxes.six",
    "len",
    "numpy.atleast_1d",
    "numpy.roll",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.delgraticules": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "hasattr",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.format_coord": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "format",
    "numpy.around",
    "numpy.isnan",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_lonlat": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_meridian_interval": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "healpy.projaxes.pi",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_parallel_interval": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "ValueError",
    "healpy.projaxes.pi",
    "max",
    "min",
    "numpy.arccos"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.get_value": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.graticule": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "abs",
    "hasattr",
    "healpy.projaxes.dtor",
    "healpy.projaxes.pi",
    "min",
    "numpy.arange",
    "numpy.around",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projmap": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "healpy.projaxes.get_color_table",
    "map",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.ma.masked_values"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projplot": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "healpy.projaxes.matplotlib",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projscatter": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.projtext": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.set_coordprec": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "healpy.projaxes.SphericalProjAxes.set_format": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "healpy.projaxes.create_colormap": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "hasattr",
    "healpy.projaxes.matplotlib",
    "newcm",
    "newcm.set_bad",
    "newcm.set_under",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.dtor": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "healpy.projaxes.get_color_table": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "healpy.projaxes.HistEqNorm",
    "healpy.projaxes.LinNorm2",
    "healpy.projaxes.LogNorm2",
    "healpy.projaxes.create_colormap",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projaxes.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.projaxes.matplotlib.axes": {
  "data": {
   "shadows": "matplotlib.axes"
  },
  "type": "import"
 },
 "healpy.projaxes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.projaxes.pi": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "healpy.projaxes.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.projector": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.projector.AzimuthalProj": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.AzimuthalProj.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "healpy.projector.AzimuthalProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.ang2xy": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.get_extent": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "int"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.get_fov": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "healpy.projector.pi",
    "numpy.arccos",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.ij2xy": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.set_proj_plane_info": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "healpy.projector.AzimuthalProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.vec2xy": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.arccos",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2ang": {
  "data": {
   "lineno": 1179
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2ij": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "int",
    "numpy.around",
    "numpy.long",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "healpy.projector.AzimuthalProj.xy2vec": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.CartesianProj.__init__": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "healpy.projector.CartesianProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.ang2xy": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_center": {
  "data": {
   "lineno": 787
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_extent": {
  "data": {
   "lineno": 767
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.get_fov": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "int",
    "numpy.arccos",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.ij2xy": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.set_proj_plane_info": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "TypeError",
    "float",
    "healpy.projector.CartesianProj",
    "len",
    "numpy.float64",
    "numpy.long",
    "numpy.mod",
    "round",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.vec2xy": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "healpy.projector.pi"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2ang": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2ij": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "numpy.around",
    "numpy.asarray",
    "numpy.int64",
    "numpy.ma.array",
    "numpy.ma.nomask"
   ]
  },
  "type": "function"
 },
 "healpy.projector.CartesianProj.xy2vec": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.GnomonicProj.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "healpy.projector.GnomonicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.ang2xy": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.get_extent": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.get_fov": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "numpy.arccos"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.ij2xy": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "TypeError",
    "healpy.projector.dtor",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.set_proj_plane_info": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "healpy.projector.GnomonicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.vec2xy": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "numpy.asarray",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2ang": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2ij": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "healpy.projector.dtor",
    "int",
    "numpy.around",
    "numpy.long"
   ]
  },
  "type": "function"
 },
 "healpy.projector.GnomonicProj.xy2vec": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.MollweideProj.__dfmoll": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "numpy.cos",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__findRoot": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "abs",
    "df",
    "f",
    "min",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__fmoll": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "healpy.projector.pi",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__initialise_data": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "len",
    "numpy.arange",
    "numpy.concatenate",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.__lininterp": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.ang2xy": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.get_extent": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.ij2xy": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.set_proj_plane_info": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.vec2xy": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "healpy.projector.MollweideProj",
    "healpy.projector.pi",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2ang": {
  "data": {
   "lineno": 474
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2ij": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "int",
    "numpy.around",
    "numpy.long",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "healpy.projector.MollweideProj.xy2vec": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "hasattr",
    "healpy.projector.pi",
    "numpy.arcsin",
    "numpy.asarray",
    "numpy.cos",
    "numpy.ma.nomask",
    "numpy.maximum",
    "numpy.nan",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "healpy.projector.SphericalProj"
   ]
  },
  "type": "class"
 },
 "healpy.projector.OrthographicProj.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "healpy.projector.OrthographicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.ang2xy": {
  "data": {
   "lineno": 911
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.get_extent": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.ij2xy": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.mod",
    "numpy.ones",
    "numpy.outer"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.set_proj_plane_info": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "healpy.projector.OrthographicProj",
    "super"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.vec2xy": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.any",
    "numpy.asarray",
    "numpy.cos",
    "numpy.mod",
    "numpy.nan",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2ang": {
  "data": {
   "lineno": 916
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2ij": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "int",
    "numpy.around",
    "numpy.asarray",
    "numpy.long",
    "numpy.ma.array",
    "numpy.ma.nomask",
    "numpy.mod",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "healpy.projector.OrthographicProj.xy2vec": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.projector.pi",
    "numpy.abs",
    "numpy.any",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.cos",
    "numpy.nan",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "healpy.projector.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.projector.SphericalProj": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "healpy.projector.SphericalProj.__eq__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.ang2xy": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_center": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "healpy.projector.dtor",
    "healpy.projector.pi",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_extent": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_fov": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "healpy.projector.pi"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.get_proj_plane_info": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.ij2xy": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.mkcoord": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.projmap": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "map",
    "map.keys",
    "map.mask",
    "numpy.__version__",
    "numpy.asarray",
    "numpy.float64",
    "numpy.fromiter",
    "numpy.in1d",
    "numpy.inf",
    "numpy.ma.array",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.nomask",
    "numpy.zeros",
    "numpy.zeros_like",
    "slice",
    "type",
    "vec2pix_func"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.set_flip": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.set_proj_plane_info": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.vec2xy": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2ang": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2ij": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "healpy.projector.SphericalProj.xy2vec": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "healpy.projector.dtor": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "healpy.projector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.projector.pi": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "healpy.test": {
  "data": {},
  "type": "module"
 },
 "healpy.test.conftest": {
  "data": {},
  "type": "module"
 },
 "healpy.test.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "healpy.test.conftest.pytest_configure": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "TypeError",
    "numpy.set_printoptions"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_fitsfunc.sys",
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_fitsfunc.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.healpy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.tearDown": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_all": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_all_with_header": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dict",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename_pathlib": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.sys",
    "pathlib.Path",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_filename_with_header": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dict",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_hdu": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_hdulist": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_multiple_dtype": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "read_map",
    "write_map",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_map_single_dtype": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_dtype": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_dtype_multiarr": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_iterable_dtype": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "dtype",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.testing.assert_almost_equal",
    "read_map",
    "write_map",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_partial": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "float",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_read_write_partial_3comp": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "float",
    "numpy.testing.assert_array_almost_equal",
    "read_map",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_C": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_C_3comp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "range",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_IDL": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.all",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_pathlib": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.test.test_fitsfunc.sys",
    "pathlib.Path",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_units_list": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFunc.test_write_map_units_string": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.setUp": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.healpy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.tearDown": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestFitsFuncGzip.test_write_map": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.test.test_fitsfunc.gzip",
    "write_map"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.setUp": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.complex128"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.tearDown": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_filename": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_filename_array": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_hdu": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_hdulist": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_read_alm_pathlib": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.sys",
    "pathlib.Path",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_write_alm": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteAlm.test_write_alm_256_128": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "read_alm",
    "write_alm"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.setUp": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.tearDown": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "healpy.test.test_fitsfunc.os"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_filename": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_hdu": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.arange",
    "numpy.double",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_read_cl_hdulist": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "numpy.arange",
    "numpy.double",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_4comp": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "read_cl",
    "write_cl",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_6comp": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "read_cl",
    "write_cl",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.TestReadWriteCl.test_write_read_cl_II": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.double",
    "numpy.testing.assert_array_almost_equal",
    "read_cl",
    "write_cl"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.healpy": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "healpy.test.test_fitsfunc.test_getformat": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "getformat",
    "str"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_fitsfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_pixelfunc.unittest"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "healpy.test.test_pixelfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.setUp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.degrees"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_accept_ma_allows_only_keywords": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "IndexError",
    "numpy.zeros",
    "ud_grade"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_lonlat": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ang2pix",
    "id",
    "numpy.testing.assert_array_almost_equal",
    "pix2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_negative_theta": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "ang2pix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_nest": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ang2pix",
    "id",
    "numpy.allclose",
    "numpy.testing.assert_array_almost_equal",
    "pix2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_nest_outofrange_doesntcrash": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "ang2pix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_ring": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ang2pix",
    "id",
    "numpy.testing.assert_array_almost_equal",
    "pix2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ang2pix_ring_outofrange": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "ang2pix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_boundaries": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "boundaries",
    "nside2npix",
    "numpy.linalg.norm",
    "numpy.max",
    "numpy.min",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_fit_dipole": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "fit_dipole",
    "nside2npix",
    "numpy.arange",
    "numpy.dot",
    "numpy.transpose",
    "pix2vec"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_all_neighbours": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "get_all_neighbours",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_interp_val_lonlat": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "get_interp_val",
    "numpy.arange",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_get_interp_weights": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "get_interp_weights",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_isnsideok": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "isnsideok"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_max_pixrad": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "max_pixrad",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2npix": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "nside2npix"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2pixarea": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "nside2pixarea"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_nside2resol": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nside2resol"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_ring": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "nside2npix",
    "numpy.arange",
    "numpy.int64",
    "numpy.logical_or",
    "pix2ring",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.TestPixelFunc.test_vec2pix_lonlat": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ang2vec",
    "numpy.testing.assert_array_almost_equal",
    "vec2ang"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_pixelweights.unittest",
    "healpy.test.test_pixelweights.warnings"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_pixelweights.TestMap2Alm": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "healpy.test.test_pixelweights.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_pixelweights.TestMap2Alm.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "healpy.alm2map",
    "numpy.complex",
    "numpy.ones",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelweights.TestMap2Alm.test_astropy_download_file": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.utils.data.conf.dataurl",
    "astropy.utils.data.get_pkg_data_filename",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_pixelweights.data": {
  "data": {
   "shadows": "astropy.utils.data"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_pixelweights.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc": {
  "data": {},
  "type": "module"
 },
 "healpy.test.test_query_disc.TestQueryDisc": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "healpy.test.test_query_disc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_query_disc.TestQueryDisc.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.radians"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "boundaries",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_floatpix_array": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "boundaries",
    "exceptions.ValueError",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_floatpix_scalar": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "boundaries",
    "exceptions.ValueError"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_list": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "boundaries",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_boundaries_phi_theta": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "boundaries",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_buffer_mode": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "exceptions.ValueError",
    "nside2npix",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.int64",
    "numpy.testing.assert_array_equal",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_inclusive": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_not_inclusive": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.TestQueryDisc.test_nside_non_power_of_two": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ang2vec",
    "nside2resol",
    "numpy.radians",
    "print",
    "query_disc"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_query_disc.ValueError": {
  "data": {
   "shadows": "exceptions.ValueError"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_query_disc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_rotator": {
  "data": {},
  "type": "module"
 },
 "healpy.test.test_rotator.Rotator": {
  "data": {
   "shadows": "healpy.Rotator"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.euler": {
  "data": {
   "shadows": "healpy.rotator.euler"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.euler_matrix_new": {
  "data": {
   "shadows": "healpy.rotator.euler_matrix_new"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "healpy.test.test_rotator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "healpy.test.test_rotator.set_random_seed": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "healpy.test.test_rotator.pytest",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_euler": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "healpy.rotator.euler",
    "healpy.test.test_rotator.pytest",
    "list",
    "numpy.isnan",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_euler_matrix_new": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "healpy.rotator.euler_matrix_new",
    "healpy.test.test_rotator.pytest",
    "numpy.isnan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_dipole_and_back": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "healpy.Rotator",
    "healpy.nside2npix",
    "healpy.pix2vec",
    "healpy.query_strip",
    "numpy.arange",
    "numpy.array",
    "numpy.dot",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "enumerate",
    "healpy.Rotator",
    "healpy.ma",
    "healpy.nside2npix",
    "healpy.read_map",
    "healpy.test.test_rotator.path",
    "numpy.abs",
    "numpy.double",
    "numpy.logical_not",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization_alms": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "healpy.Rotator",
    "healpy.alm2map",
    "healpy.get_nside",
    "healpy.map2alm",
    "healpy.read_map",
    "healpy.rotate_alm",
    "healpy.rotator.coordsys2euler_zyz",
    "healpy.test.test_rotator.path",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_map_polarization_with_spectrum": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "healpy.Rotator",
    "healpy.anafast",
    "healpy.synfast",
    "numpy.abs",
    "numpy.double",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotate_vector": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "gal2ecl",
    "gal2ecl.I",
    "healpy.Rotator",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_eq": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "healpy.Rotator"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_input_lengths": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "healpy.Rotator",
    "healpy.test.test_rotator.pytest"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_input_lengths_inv": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "healpy.Rotator",
    "healpy.test.test_rotator.pytest"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_rotator.test_rotator_input_type": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "healpy.Rotator",
    "healpy.test.test_rotator.pytest"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_sphtfunc.unittest",
    "healpy.test.test_sphtfunc.warnings"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "healpy.test.test_sphtfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.setUp": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.ma",
    "healpy.read_cl",
    "healpy.read_map",
    "healpy.synfast",
    "healpy.test.test_sphtfunc.os",
    "itertools.chain",
    "numpy.array",
    "numpy.bool",
    "numpy.logical_not",
    "numpy.radians",
    "numpy.random.seed",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_accept_ma_allows_only_keywords": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "IndexError",
    "healpy.smoothing",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_alm2cl": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "healpy.alm2cl",
    "healpy.synalm",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.remove_monopole",
    "len",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_iqu": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.remove_monopole",
    "len",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_nomask": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.remove_monopole",
    "len",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_anafast_xspectra": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "healpy.anafast",
    "healpy.read_cl",
    "healpy.remove_monopole",
    "healpy.test.test_sphtfunc.os",
    "len",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_beam2bl": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "healpy.beam2bl",
    "numpy.arange",
    "numpy.exp",
    "numpy.linspace",
    "numpy.log",
    "numpy.pi",
    "numpy.radians",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_bl2beam": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "healpy.bl2beam",
    "numpy.arange",
    "numpy.exp",
    "numpy.linspace",
    "numpy.log",
    "numpy.pi",
    "numpy.radians",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_gauss_beam": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "healpy.gauss_beam",
    "healpy.test.test_sphtfunc.os",
    "numpy.array",
    "numpy.radians",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.map2alm",
    "healpy.synfast",
    "input",
    "numpy.empty",
    "numpy.float32",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm_pol": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.map2alm",
    "input",
    "numpy.empty",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_map2alm_pol_gal_cut": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.get_nside",
    "healpy.map2alm",
    "healpy.nside2npix",
    "healpy.pix2ang",
    "input",
    "numpy.abs",
    "numpy.arange",
    "numpy.empty",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_max_nside_check": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "ValueError",
    "healpy.check_max_nside"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_pixwin_base": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "healpy.pixwin",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_pixwin_lmax": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "healpy.pixwin",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_pixwin_pol": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "healpy.pixwin",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "copy.deepcopy",
    "healpy.map2alm",
    "healpy.rotate_alm",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm2": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "healpy.Alm.getidx",
    "healpy.Alm.getsize",
    "healpy.rotate_alm",
    "numpy.array",
    "numpy.complex",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_rotate_alm_rotmatrix": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "healpy.Alm.getsize",
    "healpy.Rotator",
    "healpy.rotate_alm",
    "healpy.rotator.coordsys2euler_zyz",
    "numpy.complex",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_smoothing_masked": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "healpy.ma",
    "healpy.read_map",
    "healpy.smoothing",
    "healpy.test.test_sphtfunc.os",
    "numpy.float64",
    "numpy.radians",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_smoothing_notmasked": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "healpy.read_map",
    "healpy.smoothing",
    "healpy.test.test_sphtfunc.os",
    "numpy.float64",
    "numpy.radians",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.TestSphtFunc.test_synfast": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "healpy.read_map",
    "healpy.synfast",
    "healpy.test.test_sphtfunc.os",
    "numpy.radians",
    "numpy.random.seed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_sphtfunc.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.pf": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_sphtfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "healpy.test.test_spinfunc.unittest",
    "healpy.test.test_spinfunc.warnings",
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_spinfunc.TestSpinFunc": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "healpy.test.test_spinfunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.setUp": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "healpy.synalm",
    "healpy.synfast",
    "numpy.ones",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_alm2map_spin_precomputed": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "healpy.alm2map_spin",
    "healpy.test.test_spinfunc.calm",
    "healpy.test.test_spinfunc.galm",
    "healpy.test.test_spinfunc.lmax_precomputed",
    "healpy.test.test_spinfunc.maps",
    "healpy.test.test_spinfunc.nside_precomputed",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_der1": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "healpy.alm2map_der1",
    "healpy.alm2map_spin",
    "healpy.almxfl",
    "healpy.test.test_spinfunc.six",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_forward_backward_spin": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "healpy.alm2map_spin",
    "healpy.almxfl",
    "healpy.map2alm_spin",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_map2alm_spin_spin_precomputed": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "healpy.map2alm_spin",
    "healpy.test.test_spinfunc.clms",
    "healpy.test.test_spinfunc.glms",
    "healpy.test.test_spinfunc.lmax_precomputed",
    "healpy.test.test_spinfunc.maps",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.TestSpinFunc.test_spin0": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "healpy.alm2map",
    "healpy.alm2map_spin",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_spinfunc.calm": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.clms": {
  "data": {
   "lineno": 861
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.galm": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.glms": {
  "data": {
   "lineno": 711
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.lmax_precomputed": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.maps": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.nside_precomputed": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "healpy.test.test_spinfunc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.test.test_spinfunc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc": {
  "data": {
   "symbols_in_volume": [
    "healpy.test.test_visufunc.matplotlib"
   ]
  },
  "type": "module"
 },
 "healpy.test.test_visufunc.TestNoCrash": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "healpy.test.test_visufunc.unittest"
   ]
  },
  "type": "class"
 },
 "healpy.test.test_visufunc.TestNoCrash.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "healpy.UNSEEN",
    "healpy.ma",
    "healpy.nside2npix",
    "numpy.arange",
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_crash": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "azeqview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_ma_nocrash": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "azeqview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_azeqview_nocrash": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "azeqview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_crash": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "cartview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_ma_nocrash": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "cartview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_cartview_nocrash": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "cartview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_crash": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "gnomview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_ma_nocrash": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "gnomview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_gnomview_nocrash": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "gnomview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_crash": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "mollview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_ma_nocrash": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "mollview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollview_nocrash": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mollview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_crash": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "TypeError",
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_histnocrash": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_ma_hist_nocrash": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_ma_nocrash": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_mollzoom_nocrash": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mollzoom"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_crash": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "orthview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_ma_nocrash": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "orthview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.TestNoCrash.test_orthview_nocrash": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "orthview"
   ]
  },
  "type": "function"
 },
 "healpy.test.test_visufunc.hp": {
  "data": {
   "shadows": "healpy"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.test.test_visufunc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "healpy.version": {
  "data": {},
  "type": "module"
 },
 "healpy.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "healpy.visufunc": {
  "data": {
   "symbols_in_volume": [
    "healpy.visufunc.pi",
    "healpy.visufunc.projplot",
    "healpy.visufunc.projscatter",
    "healpy.visufunc.projtext",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.visufunc.PA": {
  "data": {
   "shadows": "projaxes"
  },
  "type": "import"
 },
 "healpy.visufunc.__all__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "healpy.visufunc.azeqview": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.cartview": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.float64",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.delgraticules": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.dtor": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "healpy.visufunc.gnomview": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.around",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.graticule": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.visufunc.mollview": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.visufunc.orthview": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "hasattr",
    "healpy.visufunc.matplotlib",
    "healpy.visufunc.pylab",
    "map",
    "max",
    "min",
    "numpy.array",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.pi": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "healpy.visufunc.projplot": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.projscatter": {
  "data": {
   "lineno": 1439,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.projtext": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "healpy.visufunc.pylab",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "healpy.visufunc.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "healpy.zoomtool": {
  "data": {
   "symbols_in_volume": [
    "healpy.zoomtool.pi",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "healpy.zoomtool.PA": {
  "data": {
   "shadows": "projaxes"
  },
  "type": "import"
 },
 "healpy.zoomtool.R": {
  "data": {
   "shadows": "rotator"
  },
  "type": "import"
 },
 "healpy.zoomtool.ZoomTool": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "healpy.zoomtool.ZoomTool.__init__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "healpy.zoomtool.pylab",
    "isinstance",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._decrease_reso": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._increase_reso": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._move_zoom_center": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._reso_on_key": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "hasattr",
    "print"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._update_grat_info": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "healpy.zoomtool.dtor",
    "numpy.around",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool._zoom_on_click": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "healpy.zoomtool.pylab",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.connect_callbacks": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.disconnect_callbacks": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.draw_gnom": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "healpy.zoomtool.matplotlib",
    "healpy.zoomtool.pylab",
    "numpy.around"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.ZoomTool.get_reso": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "healpy.zoomtool.dtor": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "healpy.zoomtool.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "healpy.zoomtool.mollzoom": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "format",
    "healpy.zoomtool.ZoomTool",
    "healpy.zoomtool.matplotlib",
    "healpy.zoomtool.pylab",
    "map",
    "max",
    "min",
    "numpy.around",
    "numpy.inf",
    "numpy.linspace",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "healpy.zoomtool.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "healpy.zoomtool.pi": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "healpy.zoomtool.pylab": {
  "data": {
   "shadows": "pylab"
  },
  "type": "import"
 },
 "healpy.zoomtool.set_g_clim": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "healpy.zoomtool.pylab"
   ]
  },
  "type": "function"
 }
}