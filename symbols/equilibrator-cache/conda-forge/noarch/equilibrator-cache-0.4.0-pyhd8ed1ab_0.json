{
 "equilibrator_cache": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "equilibrator_cache.api": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "equilibrator_cache.api.create_compound_cache_from_sqlite_file": {
  "lineno": 38,
  "symbols_in_volume": [
   "sqlalchemy.create_engine"
  ],
  "type": "function"
 },
 "equilibrator_cache.api.create_compound_cache_from_zenodo": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.compatibility": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "equilibrator_cache.compatibility.group_metabolites_by_annotation": {
  "lineno": 43,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "equilibrator_cache.compatibility.map_cobra_metabolites": {
  "lineno": 138,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "equilibrator_cache.compatibility.map_metabolites_to_compounds": {
  "lineno": 76,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "sqlalchemy.orm.sessionmaker"
  ],
  "type": "module"
 },
 "equilibrator_cache.compound_cache.CompoundCache": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "class"
 },
 "equilibrator_cache.compound_cache.CompoundCache.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.read_sql",
   "sqlalchemy.engine.base.Engine"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.accession_exists": {
  "lineno": 126,
  "symbols_in_volume": [
   "sqlalchemy.exists"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.all_compound_accessions": {
  "lineno": 113,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_compound": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_compound_by_inchi": {
  "lineno": 140,
  "symbols_in_volume": [
   "sqlalchemy.orm.joinedload",
   "sqlalchemy.orm.session.make_transient",
   "typing.Optional"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_compound_by_internal_id": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_compound_from_registry": {
  "lineno": 192,
  "symbols_in_volume": [
   "logging.debug"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_compound_names": {
  "lineno": 254,
  "symbols_in_volume": [
   "typing.Set"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_compounds": {
  "lineno": 309,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.get_element_data_frame": {
  "lineno": 227,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.is_proton": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.is_water": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.proton": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.search": {
  "lineno": 269,
  "symbols_in_volume": [
   "Levenshtein.ratio",
   "functools.partial",
   "pandas.Series",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.search_compound_by_inchi_key": {
  "lineno": 162,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "equilibrator_cache.compound_cache.CompoundCache.water": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache.exceptions.MissingDissociationConstantsException": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "class"
 },
 "equilibrator_cache.exceptions.ParseException": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "equilibrator_cache.models": {
  "lineno": null,
  "symbols_in_volume": [
   "periodictable.elements",
   "sqlalchemy.ext.declarative.declarative_base"
  ],
  "type": "module"
 },
 "equilibrator_cache.models.compound": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache.models.compound.Compound": {
  "lineno": 41,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.Float",
   "sqlalchemy.Integer",
   "sqlalchemy.PickleType",
   "sqlalchemy.String",
   "sqlalchemy.orm.relationship",
   "typing.Optional"
  ],
  "type": "class"
 },
 "equilibrator_cache.models.compound.Compound.__eq__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.__hash__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.__lt__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.__repr__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound._identifier_sorting_key": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.inf",
   "re.findall"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.can_be_transformed": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.formula": {
  "lineno": 118,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.get_accession": {
  "lineno": 247,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.get_common_name": {
  "lineno": 205,
  "symbols_in_volume": [
   "numpy.inf",
   "typing.Union"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.net_charge": {
  "lineno": 132,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.compound.Compound.transform": {
  "lineno": 155,
  "symbols_in_volume": [
   "functools.reduce",
   "numpy.logaddexp"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.compound_identifier": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "equilibrator_cache.models.compound_identifier.CompoundIdentifier": {
  "lineno": 41,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "sqlalchemy.String",
   "sqlalchemy.orm.relationship"
  ],
  "type": "class"
 },
 "equilibrator_cache.models.compound_identifier.CompoundIdentifier.__repr__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound_identifier.CompoundIdentifier.is_valid": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound_microspecies": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache.models.compound_microspecies.CompoundMicrospecies": {
  "lineno": 37,
  "symbols_in_volume": [
   "sqlalchemy.Boolean",
   "sqlalchemy.Column",
   "sqlalchemy.Float",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer",
   "typing.Optional"
  ],
  "type": "class"
 },
 "equilibrator_cache.models.compound_microspecies.CompoundMicrospecies.__repr__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.compound_microspecies.CompoundMicrospecies.transform": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.magnesium_dissociation_constant": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache.models.magnesium_dissociation_constant.MagnesiumDissociationConstant": {
  "lineno": 34,
  "symbols_in_volume": [
   "sqlalchemy.Column",
   "sqlalchemy.Float",
   "sqlalchemy.ForeignKey",
   "sqlalchemy.Integer"
  ],
  "type": "class"
 },
 "equilibrator_cache.models.magnesium_dissociation_constant.MagnesiumDissociationConstant.__repr__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.mixins": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache.models.mixins.TimeStampMixin": {
  "lineno": 37,
  "symbols_in_volume": [
   "datetime.datetime",
   "sqlalchemy.Column",
   "sqlalchemy.DateTime"
  ],
  "type": "class"
 },
 "equilibrator_cache.models.mixins.timezone_aware_now": {
  "lineno": 32,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "datetime.timezone.utc"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.registry": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "equilibrator_cache.models.registry.Registry": {
  "lineno": 41,
  "symbols_in_volume": [
   "re.compile",
   "sqlalchemy.Boolean",
   "sqlalchemy.Column",
   "sqlalchemy.Integer",
   "sqlalchemy.String",
   "typing.ClassVar",
   "typing.Optional",
   "typing.Pattern"
  ],
  "type": "class"
 },
 "equilibrator_cache.models.registry.Registry.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.registry.Registry.__repr__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.registry.Registry.init_on_load": {
  "lineno": 95,
  "symbols_in_volume": [
   "re.compile",
   "sqlalchemy.orm.reconstructor"
  ],
  "type": "function"
 },
 "equilibrator_cache.models.registry.Registry.is_valid_accession": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.models.registry.Registry.validate_identifier": {
  "lineno": 104,
  "symbols_in_volume": [
   "sqlalchemy.orm.validates"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "equilibrator_cache.reaction.Reaction": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "equilibrator_cache.reaction.Reaction.__eq__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.__hash__": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.__len__": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.__str__": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction._get_reaction_atom_bag": {
  "lineno": 349,
  "symbols_in_volume": [
   "logging.debug",
   "numpy.any",
   "numpy.array",
   "typing.Dict",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction._hashable_reactants": {
  "lineno": 670,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Tuple",
   "warnings.warn"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction._sum_absolute_coefficients": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction._sum_coefficients": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.add_stoichiometry": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.balance_with_compound": {
  "lineno": 453,
  "symbols_in_volume": [
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.balance_with_compound.get_pivot_atom": {
  "lineno": 475,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.can_be_transformed": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.check_half_reaction_balancing": {
  "lineno": 645,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.clone": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.dense": {
  "lineno": 539,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.zeros",
   "typing.List"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.get_coeff": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.get_element_data_frame": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.from_dict"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.is_balanced": {
  "lineno": 426,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.is_empty": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.items": {
  "lineno": 110,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.keys": {
  "lineno": 87,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.parse_formula": {
  "lineno": 229,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.parse_formula_side": {
  "lineno": 178,
  "symbols_in_volume": [
   "re.split",
   "typing.Callable",
   "typing.Dict"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.reverse": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.transform": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.reaction.Reaction.write_compound_and_coeff": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.abs",
   "sys.float_info.epsilon"
  ],
  "type": "function"
 },
 "equilibrator_cache.reaction.create_stoichiometric_matrix_from_reactions": {
  "lineno": 735,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "typing.Callable",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "equilibrator_cache.thermodynamic_constants": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.log",
   "os.environ",
   "pint.UnitRegistry",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "equilibrator_cache.thermodynamic_constants._legendre_transform": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.thermodynamic_constants.debye_hueckel": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "equilibrator_cache.zenodo": {
  "lineno": null,
  "symbols_in_volume": [
   "asyncio.gather",
   "hashlib.md5",
   "httpx.AsyncClient",
   "io.BytesIO",
   "logging.getLogger",
   "pyzenodo3.Zenodo",
   "tqdm.asyncio.tqdm",
   "typing.Dict"
  ],
  "type": "module"
 },
 "equilibrator_cache.zenodo.get_cached_filepath": {
  "lineno": 157,
  "symbols_in_volume": [
   "appdirs.user_cache_dir",
   "hashlib.md5",
   "logging.info",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "equilibrator_cache.zenodo.get_zenodo_checksum": {
  "lineno": 125,
  "symbols_in_volume": [
   "pyzenodo3.base.requests.exceptions.ConnectionError",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "equilibrator_cache.zenodo.get_zenodo_files": {
  "lineno": 104,
  "symbols_in_volume": [
   "asyncio.new_event_loop",
   "asyncio.set_event_loop",
   "io.BytesIO",
   "tenacity.retry",
   "tenacity.stop_after_attempt",
   "typing.Dict"
  ],
  "type": "function"
 }
}