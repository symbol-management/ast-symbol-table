{
 "pandas_ml": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.__version__",
   "sklearn.__version__"
  ],
  "type": "module"
 },
 "pandas_ml.confusion_matrix": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.abstract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.int64",
   "pandas.Series",
   "pandas.crosstab",
   "pandas_ml.compat._PANDAS_ge_021"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.__repr__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.__str__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._avg_stat": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._classes": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._label": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._name_from_dict": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._str_dict": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._str_stats": {
  "lineno": 416,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.binarize": {
  "lineno": 269,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.array",
   "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.classes": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.classification_report": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.enlarge": {
  "lineno": 283,
  "symbols_in_volume": [
   "collections.Iterable",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.get": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.is_binary": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.len": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.max": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.min": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.plot": {
  "lineno": 204,
  "symbols_in_volume": [
   "matplotlib.pyplot.cm.gray_r",
   "matplotlib.pyplot.colorbar",
   "matplotlib.pyplot.imshow",
   "matplotlib.pyplot.subplots",
   "numpy.arange",
   "seaborn.heatmap"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.population": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.pred": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.print_stats": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.stats": {
  "lineno": 383,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.stats_class": {
  "lineno": 331,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.stats_overall": {
  "lineno": 301,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.diag",
   "numpy.nan",
   "numpy.sum",
   "pandas_ml.confusion_matrix.stats.binom_interval",
   "pandas_ml.confusion_matrix.stats.class_agreement",
   "pandas_ml.confusion_matrix.stats.prop_test"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.sum": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.title": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.to_array": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.to_dataframe": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.newaxis",
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.toarray": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.true": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.y_pred": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.y_true": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
  ],
  "type": "class"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.ACC": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.DOR": {
  "lineno": 339,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.F1_score": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FDR": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FN": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FNR": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FOR": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FP": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FPR": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.LRN": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.LRP": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.MCC": {
  "lineno": 295,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.N": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.NPV": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.NegativeTest": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.P": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.PPV": {
  "lineno": 229,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.PositiveTest": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.SPC": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TN": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TNR": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TP": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TPR": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.__init__": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix._class": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix._str_stats": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.dict_class": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.help": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.hit": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.informedness": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.inverse": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.is_binary": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.markedness": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.neg_class": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.pos_class": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.precision": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.prevalence": {
  "lineno": 318,
  "symbols_in_volume": [
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.recall": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.sensitivity": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.specificity": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.stats": {
  "lineno": 346,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.support": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.y_pred": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.y_true": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.cm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.cm.ConfusionMatrix": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
  ],
  "type": "class"
 },
 "pandas_ml.confusion_matrix.cm.ConfusionMatrix.__new__": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.unique",
   "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
  ],
  "type": "class"
 },
 "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix.__getattr__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.stats.binom_interval": {
  "lineno": 8,
  "symbols_in_volume": [
   "scipy.stats.beta.ppf"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.choose": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.int64",
   "numpy.isnan",
   "numpy.nan",
   "pandas.compat.range"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.class_agreement": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.float64"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.prop_test": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.diag",
   "scipy.stats.binom.sf"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_binary_cm": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_binary_cm_inverse": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_binarize": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_empty_column": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_empty_row": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_int": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_stats_animals": {
  "lineno": 181,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_stats_integers": {
  "lineno": 170,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_strings": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_get": {
  "lineno": 201,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_matrix_auto_binary": {
  "lineno": 315,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_matrix_auto_labeled": {
  "lineno": 308,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_max_min": {
  "lineno": 216,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_normalized": {
  "lineno": 277,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_normalized_issue1": {
  "lineno": 287,
  "symbols_in_volume": [
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_plot": {
  "lineno": 347,
  "symbols_in_volume": [
   "nose.SkipTest",
   "pandas_ml.ConfusionMatrix",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_value_counts": {
  "lineno": 156,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_ml.ConfusionMatrix",
   "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts": {
  "lineno": 19,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas_ml.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.core.accessor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.core.accessor._AccessorMethods": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.accessor._AccessorMethods.__init__": {
  "lineno": 16,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._constructor": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._constructor_sliced": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._data": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._decision": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._predicted": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._target": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._update_method_mapper": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.compat.iteritems"
  ],
  "type": "function"
 },
 "pandas_ml.core.accessor._attach_methods": {
  "lineno": 88,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_func": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_func.f": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_target_func": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_target_func.f": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_func": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_func.f": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_noargs": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_noargs.f": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.base": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin",
   "sklearn.base.ClusterMixin",
   "sklearn.base.RegressorMixin",
   "sklearn.base.TransformerMixin"
  ],
  "type": "module"
 },
 "pandas_ml.core.base._BaseEstimator": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.base._ClassifierMixin": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.base._ClusterMixin": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.base._RegressorMixin": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.base._TransformerMixin": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.frame": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.core.frame.ModelFrame": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.generic.NDFrame._internal_names",
   "pandas_ml.core.generic.ModelPredictor",
   "pandas_ml.core.series.ModelSeries",
   "pandas_ml.skaccessors.CrossDecompositionMethods",
   "pandas_ml.skaccessors.GaussianProcessMethods"
  ],
  "type": "class"
 },
 "pandas_ml.core.frame.ModelFrame.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DataFrame.__init__",
   "pandas.Series",
   "pandas_ml.compat.is_list_like",
   "pandas_ml.skaccessors._maybe_sklearn_data",
   "pandas_ml.smaccessors._maybe_statsmodels_data"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._calibration": {
  "lineno": 554,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._call": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._cluster": {
  "lineno": 565,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.ClusterMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._concat_target": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._concat_target._add_meta_columns": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_product",
   "pandas_ml.compat.is_list_like"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._constructor": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._covariance": {
  "lineno": 574,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.CovarianceMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._cross_decomposition": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._da": {
  "lineno": 610,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._data_columns": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._decomposition": {
  "lineno": 594,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.DecompositionMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._dummy": {
  "lineno": 620,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._ensemble": {
  "lineno": 630,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.EnsembleMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._feature_extraction": {
  "lineno": 639,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.FeatureExtractionMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._feature_selection": {
  "lineno": 648,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.FeatureSelectionMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._gaussian_process": {
  "lineno": 662,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.GaussianProcessMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._get_method_mapper": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._imbalance": {
  "lineno": 671,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.imbaccessors.ImbalanceMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._isotonic": {
  "lineno": 680,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.IsotonicMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._kernel_approximation": {
  "lineno": 689,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._kernel_ridge": {
  "lineno": 700,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._linear_model": {
  "lineno": 723,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.LinearModelMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._manifold": {
  "lineno": 732,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.ManifoldMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._maybe_convert_data": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas_ml.compat.is_list_like"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._maybe_convert_data._maybe_convert_target": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._metrics": {
  "lineno": 741,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.MetricsMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._mixture": {
  "lineno": 750,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._model_selection": {
  "lineno": 764,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.ModelSelectionMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._multiclass": {
  "lineno": 773,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._multioutput": {
  "lineno": 782,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._naive_bayes": {
  "lineno": 791,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._neighbors": {
  "lineno": 800,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.NeighborsMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._neural_network": {
  "lineno": 809,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._pipeline": {
  "lineno": 818,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.PipelineMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._preprocessing": {
  "lineno": 832,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.PreprocessingMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._random_projection": {
  "lineno": 848,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._seaborn": {
  "lineno": 889,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.snsaccessors.SeabornMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._semi_supervised": {
  "lineno": 857,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._svm": {
  "lineno": 866,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.SVMMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._tree": {
  "lineno": 875,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_predicted": {
  "lineno": 398,
  "symbols_in_volume": [
   "pandas_ml.util._is_1d_varray"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_probability": {
  "lineno": 524,
  "symbols_in_volume": [
   "pandas_ml.util._is_1d_varray",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_sampled": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_sampled._wrap": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_transform": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._xgboost": {
  "lineno": 903,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.xgboost.XGBoostMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.calibration": {
  "lineno": 548,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.cluster": {
  "lineno": 560,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.covariance": {
  "lineno": 569,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.cross_decomposition": {
  "lineno": 578,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.da": {
  "lineno": 604,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.data": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.decision_function": {
  "lineno": 517,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.decomposition": {
  "lineno": 589,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.discriminant_analysis": {
  "lineno": 598,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.dummy": {
  "lineno": 615,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.ensemble": {
  "lineno": 625,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.feature_extraction": {
  "lineno": 634,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.feature_selection": {
  "lineno": 643,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_predict": {
  "lineno": 392,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_resample": {
  "lineno": 419,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_sample": {
  "lineno": 411,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_transform": {
  "lineno": 471,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.gaussian_process": {
  "lineno": 652,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.gp": {
  "lineno": 657,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.groupby": {
  "lineno": 907,
  "symbols_in_volume": [
   "pandas.core.generic.NDFrame.groupby.__doc__",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.has_data": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.has_multi_targets": {
  "lineno": 275,
  "symbols_in_volume": [
   "pandas.Index"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.has_target": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.imbalance": {
  "lineno": 666,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.inverse_transform": {
  "lineno": 481,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.isotonic": {
  "lineno": 675,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.kernel_approximation": {
  "lineno": 684,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.kernel_ridge": {
  "lineno": 695,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.lda": {
  "lineno": 706,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.linear_model": {
  "lineno": 713,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.lm": {
  "lineno": 718,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.manifold": {
  "lineno": 727,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.metrics": {
  "lineno": 736,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.mixture": {
  "lineno": 745,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.model_selection": {
  "lineno": 754,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.ms": {
  "lineno": 759,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.multiclass": {
  "lineno": 768,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.multioutput": {
  "lineno": 777,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.naive_bayes": {
  "lineno": 786,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.neighbors": {
  "lineno": 795,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.neural_network": {
  "lineno": 804,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.pipeline": {
  "lineno": 813,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.pp": {
  "lineno": 827,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.predict_log_proba": {
  "lineno": 510,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.predict_proba": {
  "lineno": 503,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.preprocessing": {
  "lineno": 822,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.qda": {
  "lineno": 836,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.random_projection": {
  "lineno": 843,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.sample": {
  "lineno": 426,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.score": {
  "lineno": 540,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.seaborn": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.semi_supervised": {
  "lineno": 852,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.sns": {
  "lineno": 879,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.svm": {
  "lineno": 861,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.target": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.target_name": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.transform": {
  "lineno": 455,
  "symbols_in_volume": [
   "pandas.DataFrame.transform",
   "pandas.compat.string_types",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.tree": {
  "lineno": 870,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.xgb": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.xgboost": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.core.generic.ModelPredictor": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.generic.ModelPredictor._wrap_predicted": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.decision": {
  "lineno": 171,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.estimator": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.log_proba": {
  "lineno": 156,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.predict": {
  "lineno": 186,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.predicted": {
  "lineno": 126,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.proba": {
  "lineno": 141,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.core.generic.ModelTransformer._call": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer._check_attr": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer._get_method_mapper": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer._wrap_transform": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.fit": {
  "lineno": 53,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.fit_transform": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.inverse_transform": {
  "lineno": 88,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender"
  ],
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.transform": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.compat.string_types",
   "pandas_ml.compat.Appender",
   "pandas_ml.misc.transform_with_patsy"
  ],
  "type": "function"
 },
 "pandas_ml.core.groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.core.groupby.GroupedEstimator": {
  "lineno": 92,
  "symbols_in_volume": [
   "pandas_ml.core.base._BaseEstimator"
  ],
  "type": "class"
 },
 "pandas_ml.core.groupby.GroupedEstimator.__init__": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas.core.groupby.DataFrameGroupBy",
   "sklearn.base.clone"
  ],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas.core.groupby.DataFrameGroupBy",
   "pandas.core.groupby.DataFrameGroupBy._internal_names",
   "pandas_ml.core.generic.ModelPredictor"
  ],
  "type": "class"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._call": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._get_mapper": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._wrap_predicted": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._wrap_results": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.compat.iteritems",
   "pandas.concat",
   "pandas_ml.core.frame.ModelFrame",
   "pandas_ml.core.series.ModelSeries"
  ],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._wrap_transform": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy.transform": {
  "lineno": 35,
  "symbols_in_volume": [
   "pandas.core.groupby.DataFrameGroupBy.transform",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic.ModelPredictor.transform",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelSeriesGroupBy": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas.core.groupby.SeriesGroupBy"
  ],
  "type": "class"
 },
 "pandas_ml.core.groupby.groupby": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.core.groupby.GroupBy.__doc__",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.frame.ModelFrame",
   "pandas_ml.core.series.ModelSeries"
  ],
  "type": "function"
 },
 "pandas_ml.core.series": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.core.series.ModelSeries": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas_ml.core.generic.ModelTransformer"
  ],
  "type": "class"
 },
 "pandas_ml.core.series.ModelSeries._call": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries._constructor": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries._preprocessing": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.skaccessors.PreprocessingMethods"
  ],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries._wrap_transform": {
  "lineno": 29,
  "symbols_in_volume": [
   "pandas_ml.core.frame.ModelFrame",
   "pandas_ml.util._is_1d_harray",
   "pandas_ml.util._is_1d_varray"
  ],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.groupby": {
  "lineno": 80,
  "symbols_in_volume": [
   "pandas.core.generic.NDFrame.groupby.__doc__",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.groupby.groupby"
  ],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.pp": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.preprocessing": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.to_frame": {
  "lineno": 68,
  "symbols_in_volume": [
   "pandas.Series.to_frame.__doc__",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.frame.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.transform": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas.Series.transform",
   "pandas_ml.compat.Appender",
   "pandas_ml.core.generic._shared_docs"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.imbaccessors.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._combine": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._ensemble": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._over_sampling": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._under_sampling": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.combine": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.ensemble": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.over_sampling": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.under_sampling": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.imbaccessors.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.imbaccessors.test.test_imbalance": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.importorskip"
  ],
  "type": "module"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_combine": {
  "lineno": 48,
  "symbols_in_volume": [
   "imblearn.combine.SMOTEENN",
   "imblearn.combine.SMOTETomek",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_ensemble": {
  "lineno": 56,
  "symbols_in_volume": [
   "imblearn.ensemble.BalanceCascade",
   "imblearn.ensemble.EasyEnsemble",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_oversampling": {
  "lineno": 38,
  "symbols_in_volume": [
   "imblearn.over_sampling.ADASYN",
   "imblearn.over_sampling.RandomOverSampler",
   "imblearn.over_sampling.SMOTE",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_undersampling": {
  "lineno": 14,
  "symbols_in_volume": [
   "imblearn.under_sampling.ClusterCentroids",
   "imblearn.under_sampling.CondensedNearestNeighbour",
   "imblearn.under_sampling.EditedNearestNeighbours",
   "imblearn.under_sampling.InstanceHardnessThreshold",
   "imblearn.under_sampling.NearMiss",
   "imblearn.under_sampling.NeighbourhoodCleaningRule",
   "imblearn.under_sampling.OneSidedSelection",
   "imblearn.under_sampling.RandomUnderSampler",
   "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
   "imblearn.under_sampling.TomekLinks",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_sample": {
  "lineno": 64,
  "symbols_in_volume": [
   "imblearn.combine.SMOTEENN",
   "imblearn.combine.SMOTETomek",
   "imblearn.over_sampling.ADASYN",
   "imblearn.over_sampling.SMOTE",
   "imblearn.under_sampling.ClusterCentroids",
   "imblearn.under_sampling.OneSidedSelection",
   "numpy.array",
   "numpy.random.randn",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_sample_ensemble": {
  "lineno": 103,
  "symbols_in_volume": [
   "imblearn.ensemble.BalanceCascade",
   "imblearn.ensemble.EasyEnsemble",
   "numpy.array",
   "numpy.random.randn",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas_ml.misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.misc.patsy_wraps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.misc.patsy_wraps.transform_with_patsy": {
  "lineno": 4,
  "symbols_in_volume": [
   "patsy.dmatrices",
   "patsy.dmatrix"
  ],
  "type": "function"
 },
 "pandas_ml.misc.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.misc.test.test_patsy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame.test_patsy_deviation_coding": {
  "lineno": 62,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame.test_patsy_matrices": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame.test_patsy_matrix": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.base.Bunch": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.skaccessors.base._maybe_sklearn_data": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "sklearn.datasets.base.Bunch"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods",
   "pandas_ml.core.accessor._wrap_data_func"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods._bicluster": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.affinity_propagation": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.bicluster": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.dbscan": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.k_means": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.mean_shift": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.spectral_clustering": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods.empirical_covariance": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods.ledoit_wolf": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods.oas": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cross_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods._fit": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods._predict": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods._transform": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.dict_learning": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.dict_learning_online": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.fastica": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.sparse_encode": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.ensemble": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.ensemble.EnsembleMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.ensemble.EnsembleMethods.partial_dependence": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.ensemble.PartialDependenceMethods": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.ensemble.PartialDependenceMethods.partial_dependence": {
  "lineno": 24,
  "symbols_in_volume": [
   "sklearn.ensemble.partial_dependence",
   "sklearn.ensemble.partial_dependence.partial_dependence"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.ensemble.PartialDependenceMethods.plot_partial_dependence": {
  "lineno": 35,
  "symbols_in_volume": [
   "sklearn.ensemble.partial_dependence.plot_partial_dependence"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods._image": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods._text": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas_ml.compat.cache_readonly",
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods.image": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods.text": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_selection": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods",
   "pandas_ml.core.accessor._wrap_data_target_func"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.feature_selection.FeatureSelectionMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.gaussian_process": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods",
   "pandas_ml.core.accessor._wrap_data_func"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods._predict": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods.correlation_models": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods.regression_models": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.gaussian_process.RegressionModelsMethods": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.isotonic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods.IsotonicRegression": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods.check_increasing": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods.isotonic_regression": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods",
   "pandas_ml.core.accessor._wrap_data_target_func"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods._enet_path_wraps": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.enet_path": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.lars_path": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.lasso_path": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.lasso_stability_path": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.orthogonal_mp_gram": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.manifold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.manifold.ManifoldMethods": {
  "lineno": 7,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.manifold.ManifoldMethods.locally_linear_embedding": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.manifold.ManifoldMethods.spectral_embedding": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods",
   "pandas_ml.core.accessor._wrap_target_pred_func",
   "pandas_ml.core.accessor._wrap_target_pred_noargs"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods._curve_wraps": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas_ml.util._is_1d_varray"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods._score_wraps": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.auc": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.average_precision_score": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.confusion_matrix": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.consensus_score": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.f1_score": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.fbeta_score": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.hinge_loss": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.log_loss": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.pairwise": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.precision_recall_curve": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.precision_recall_fscore_support": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.precision_score": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.recall_score": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.roc_auc_score": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.roc_curve": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.silhouette_samples": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.silhouette_score": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.StratifiedShuffleSplit": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.check_cv": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.cross_val_score": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.describe": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.iterate": {
  "lineno": 58,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.learning_curve": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.permutation_test_score": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.split": {
  "lineno": 27,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.train_test_split": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.train_test_split._init": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.validation_curve": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.neighbors": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods",
   "pandas_ml.core.accessor._wrap_data_func"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.neighbors.NeighborsMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.pipeline.PipelineMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.pipeline.PipelineMethods.make_pipeline": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.pipeline.PipelineMethods.make_union": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.compat._SKLEARN_INSTALLED",
   "pandas_ml.core.accessor._attach_methods",
   "sklearn.preprocessing.Binarizer",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.preprocessing.Imputer",
   "sklearn.preprocessing.KernelCenterer",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.preprocessing.MaxAbsScaler",
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.preprocessing.Normalizer",
   "sklearn.preprocessing.RobustScaler",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "module"
 },
 "pandas_ml.skaccessors.preprocessing.PreprocessingMethods": {
  "lineno": 25,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.preprocessing.PreprocessingMethods._keep_existing_columns": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing.PreprocessingMethods.add_dummy_feature": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas_ml.core.frame.ModelFrame",
   "pandas_ml.core.series.ModelSeries"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing._wrap_func": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing._wrap_func.f": {
  "lineno": 67,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.float",
   "pandas_ml.compat.is_integer_dtype",
   "pandas_ml.core.frame.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.svm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.svm.SVMMethods": {
  "lineno": 6,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.l1_min_c": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.liblinear": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.libsvm": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.libsvm_sparse": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_base.TestSklearnBase": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_base.TestSklearnBase.test_load_dataset": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_calibration": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_calibration.TestCalibration": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_calibration.TestCalibration.test_objectmapper": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.calibration.CalibratedClassifierCV"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_Bicluster": {
  "lineno": 239,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.cluster.bicluster",
   "sklearn.datasets.make_checkerboard"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_Classifications": {
  "lineno": 203,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.cluster",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_KMeans": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.cluster",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_KMeans_scores": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.load_digits",
   "sklearn.metrics.adjusted_rand_score",
   "sklearn.metrics.completeness_score",
   "sklearn.metrics.homogeneity_score",
   "sklearn.metrics.silhouette_score",
   "sklearn.metrics.v_measure_score",
   "sklearn.preprocessing.scale"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_affinity_propagation": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.cov",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.cluster.affinity_propagation",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_affinity_propagation_class": {
  "lineno": 94,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.datasets.samples_generator.make_blobs"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_dbscan": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.cluster.dbscan",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_estimate_bandwidth": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.cluster.estimate_bandwidth",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_fit_predict": {
  "lineno": 221,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.cluster",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_k_means": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.cluster.k_means",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_mean_shift": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.cluster.mean_shift",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_objectmapper": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.cluster.AffinityPropagation",
   "sklearn.cluster.AgglomerativeClustering",
   "sklearn.cluster.Birch",
   "sklearn.cluster.DBSCAN",
   "sklearn.cluster.FeatureAgglomeration",
   "sklearn.cluster.KMeans",
   "sklearn.cluster.MeanShift",
   "sklearn.cluster.MiniBatchKMeans",
   "sklearn.cluster.SpectralClustering",
   "sklearn.cluster.bicluster.SpectralBiclustering",
   "sklearn.cluster.bicluster.SpectralCoclustering"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_spectral_clustering": {
  "lineno": 137,
  "symbols_in_volume": [
   "numpy.random.random_integers",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.cluster.spectral_clustering",
   "sklearn.metrics",
   "sklearn.metrics.T"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_ward_tree": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.ones",
   "pandas_ml.ModelFrame",
   "sklearn.cluster.ward_tree",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_Covariance": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.covariance",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_empirical_covariance": {
  "lineno": 27,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.covariance.empirical_covariance",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_ledoit_wolf": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.covariance.ledoit_wolf",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_oas": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.covariance.oas",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.covariance.EllipticEnvelope",
   "sklearn.covariance.EmpiricalCovariance",
   "sklearn.covariance.GraphLasso",
   "sklearn.covariance.GraphLassoCV",
   "sklearn.covariance.LedoitWolf",
   "sklearn.covariance.MinCovDet",
   "sklearn.covariance.OAS",
   "sklearn.covariance.ShrunkCovariance",
   "sklearn.covariance.graph_lasso",
   "sklearn.covariance.shrunk_covariance"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_CCA": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.cross_decomposition.CCA"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_CCA_PLSCannonical": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.normal",
   "pandas.MultiIndex.from_tuples",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.RNGContext",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "pytest.mark.parametrize",
   "sklearn.cross_decomposition"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_PLSRegression": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dot",
   "numpy.random.normal",
   "pandas_ml.ModelFrame",
   "sklearn.cross_decomposition.PLSRegression"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_objectmapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.cross_decomposition.CCA",
   "sklearn.cross_decomposition.PLSCanonical",
   "sklearn.cross_decomposition.PLSRegression",
   "sklearn.cross_decomposition.PLSSVD"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_boston": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_boston"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_diabetes": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_diabetes"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_digits": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_iris": {
  "lineno": 26,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_linnerud": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_Decompositions_KernelPCA": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_series_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.KernelPCA"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_Decompositions_PCA": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_series_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_dict_learning": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.dict_learning"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_dict_learning_online": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.dict_learning_online"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_fastica": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.fastica"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_fit_transform_KernelPCA": {
  "lineno": 183,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_series_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.KernelPCA"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_fit_transform_PCA": {
  "lineno": 150,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_series_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_inverse_transform": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.decomposition.DictionaryLearning",
   "sklearn.decomposition.FactorAnalysis",
   "sklearn.decomposition.FastICA",
   "sklearn.decomposition.IncrementalPCA",
   "sklearn.decomposition.KernelPCA",
   "sklearn.decomposition.LatentDirichletAllocation",
   "sklearn.decomposition.MiniBatchDictionaryLearning",
   "sklearn.decomposition.MiniBatchSparsePCA",
   "sklearn.decomposition.NMF",
   "sklearn.decomposition.PCA",
   "sklearn.decomposition.SparseCoder",
   "sklearn.decomposition.SparsePCA",
   "sklearn.decomposition.TruncatedSVD"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_sparse_encode": {
  "lineno": 119,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.dict_learning",
   "sklearn.decomposition.sparse_encode"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis.test_LDA": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_diabetes",
   "sklearn.discriminant_analysis"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis.test_objectmapper": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis.test_objectmapper_deprecated": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_produces_warning",
   "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
   "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_dummy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_dummy.TestDummy": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_dummy.TestDummy.test_Classifications": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.dummy"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_dummy.TestDummy.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.dummy.DummyClassifier",
   "sklearn.dummy.DummyRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_Classifications": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_GradientBoostingRegression": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.datasets.load_boston",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_Regressions": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.ensemble"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_objectmapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.ensemble.AdaBoostClassifier",
   "sklearn.ensemble.AdaBoostRegressor",
   "sklearn.ensemble.BaggingClassifier",
   "sklearn.ensemble.BaggingRegressor",
   "sklearn.ensemble.ExtraTreesClassifier",
   "sklearn.ensemble.ExtraTreesRegressor",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.GradientBoostingRegressor",
   "sklearn.ensemble.IsolationForest",
   "sklearn.ensemble.RandomForestClassifier",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.ensemble.RandomTreesEmbedding",
   "sklearn.ensemble.VotingClassifier"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_partial_dependence": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.ensemble.GradientBoostingClassifier",
   "sklearn.ensemble.partial_dependence.partial_dependence"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_plot_partial_dependence": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.TestFeatureExtraction": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.TestFeatureExtraction.test_objectmapper": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.feature_extraction.DictVectorizer",
   "sklearn.feature_extraction.FeatureHasher",
   "sklearn.feature_extraction.image.PatchExtractor",
   "sklearn.feature_extraction.image.extract_patches_2d",
   "sklearn.feature_extraction.image.grid_to_graph",
   "sklearn.feature_extraction.image.img_to_graph",
   "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
   "sklearn.feature_extraction.text.CountVectorizer",
   "sklearn.feature_extraction.text.HashingVectorizer",
   "sklearn.feature_extraction.text.TfidfTransformer",
   "sklearn.feature_extraction.text.TfidfVectorizer"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_Selection": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_diabetes",
   "sklearn.feature_selection"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_chi2": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.feature_selection.chi2"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_f_classif": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.feature_selection.f_classif"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_f_regression": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_diabetes",
   "sklearn.feature_selection.f_regression"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.feature_selection.GenericUnivariateSelect",
   "sklearn.feature_selection.RFE",
   "sklearn.feature_selection.RFECV",
   "sklearn.feature_selection.SelectFdr",
   "sklearn.feature_selection.SelectFpr",
   "sklearn.feature_selection.SelectFromModel",
   "sklearn.feature_selection.SelectFwe",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.SelectPercentile",
   "sklearn.feature_selection.VarianceThreshold"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D.g": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D_std": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D_std.g": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_GaussianProcess_ge_018": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.linspace",
   "numpy.sin",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_GaussianProcess_std": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.linspace",
   "numpy.sin",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.RBF"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_constant": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.regression_models.constant"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_linear": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.regression_models.linear"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_objectmapper": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.gaussian_process.GaussianProcessRegressor",
   "sklearn.gaussian_process.correlation_models.absolute_exponential",
   "sklearn.gaussian_process.correlation_models.cubic",
   "sklearn.gaussian_process.correlation_models.generalized_exponential",
   "sklearn.gaussian_process.correlation_models.linear",
   "sklearn.gaussian_process.correlation_models.pure_nugget",
   "sklearn.gaussian_process.correlation_models.squared_exponential"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_objectmapper_abbr": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.GaussianProcessClassifier",
   "sklearn.gaussian_process.GaussianProcessRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_objectmapper_kernels": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.kernels.CompoundKernel",
   "sklearn.gaussian_process.kernels.ConstantKernel",
   "sklearn.gaussian_process.kernels.DotProduct",
   "sklearn.gaussian_process.kernels.ExpSineSquared",
   "sklearn.gaussian_process.kernels.Exponentiation",
   "sklearn.gaussian_process.kernels.Hyperparameter",
   "sklearn.gaussian_process.kernels.Kernel",
   "sklearn.gaussian_process.kernels.Matern",
   "sklearn.gaussian_process.kernels.PairwiseKernel",
   "sklearn.gaussian_process.kernels.Product",
   "sklearn.gaussian_process.kernels.RBF",
   "sklearn.gaussian_process.kernels.RationalQuadratic",
   "sklearn.gaussian_process.kernels.Sum",
   "sklearn.gaussian_process.kernels.WhiteKernel"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_quadratic": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas_ml.ModelFrame",
   "sklearn.gaussian_process.regression_models.quadratic"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic": {
  "lineno": 10,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_IsotonicRegression": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_check_increasing": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.random.randn",
   "pandas_ml.ModelFrame",
   "sklearn.isotonic.check_increasing"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_isotonic_regression": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arange",
   "numpy.random.randn",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.isotonic.isotonic_regression"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_objectmapper": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.isotonic.IsotonicRegression"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation.test_Classifications": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.kernel_approximation"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation.test_Classifications_Random": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.kernel_approximation"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.kernel_approximation.AdditiveChi2Sampler",
   "sklearn.kernel_approximation.Nystroem",
   "sklearn.kernel_approximation.RBFSampler",
   "sklearn.kernel_approximation.SkewedChi2Sampler"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.TestKernelRidge": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.TestKernelRidge.test_objectmapper": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.kernel_ridge.KernelRidge"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_LassoCV": {
  "lineno": 185,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.LassoLarsIC",
   "sklearn.preprocessing.normalize"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_Lasso_Path": {
  "lineno": 149,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.enet_path",
   "sklearn.linear_model.lars_path",
   "sklearn.linear_model.lasso_path"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_Perceptron": {
  "lineno": 222,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.datasets.load_iris",
   "sklearn.linear_model.Perceptron"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_Regresions": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_SGD": {
  "lineno": 208,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.datasets.load_iris",
   "sklearn.linear_model.SGDClassifier"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_lars_path": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.lars_path"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_lasso_path": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.lasso_path"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_lasso_stability_path": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.lasso_stability_path"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_objectmapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.linear_model.ARDRegression",
   "sklearn.linear_model.BayesianRidge",
   "sklearn.linear_model.ElasticNet",
   "sklearn.linear_model.ElasticNetCV",
   "sklearn.linear_model.HuberRegressor",
   "sklearn.linear_model.Lars",
   "sklearn.linear_model.LarsCV",
   "sklearn.linear_model.Lasso",
   "sklearn.linear_model.LassoCV",
   "sklearn.linear_model.LassoLars",
   "sklearn.linear_model.LassoLarsCV",
   "sklearn.linear_model.LassoLarsIC",
   "sklearn.linear_model.LinearRegression",
   "sklearn.linear_model.LogisticRegression",
   "sklearn.linear_model.LogisticRegressionCV",
   "sklearn.linear_model.MultiTaskElasticNet",
   "sklearn.linear_model.MultiTaskElasticNetCV",
   "sklearn.linear_model.MultiTaskLasso",
   "sklearn.linear_model.MultiTaskLassoCV",
   "sklearn.linear_model.OrthogonalMatchingPursuit",
   "sklearn.linear_model.OrthogonalMatchingPursuitCV",
   "sklearn.linear_model.PassiveAggressiveClassifier",
   "sklearn.linear_model.PassiveAggressiveRegressor",
   "sklearn.linear_model.Perceptron",
   "sklearn.linear_model.RANSACRegressor",
   "sklearn.linear_model.RandomizedLasso",
   "sklearn.linear_model.RandomizedLogisticRegression",
   "sklearn.linear_model.Ridge",
   "sklearn.linear_model.RidgeCV",
   "sklearn.linear_model.RidgeClassifier",
   "sklearn.linear_model.RidgeClassifierCV",
   "sklearn.linear_model.SGDClassifier",
   "sklearn.linear_model.SGDRegressor",
   "sklearn.linear_model.TheilSenRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_orthogonal_mp": {
  "lineno": 108,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.orthogonal_mp"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_orthogonal_mp_gram": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_diabetes",
   "sklearn.linear_model.orthogonal_mp_gram"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_Isomap": {
  "lineno": 54,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.manifold"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_MDS": {
  "lineno": 72,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.manifold"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_TSNE": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_digits",
   "sklearn.manifold"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_locally_linear_embedding": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_iris",
   "sklearn.manifold.locally_linear_embedding"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_objectmapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.manifold.Isomap",
   "sklearn.manifold.LocallyLinearEmbedding",
   "sklearn.manifold.MDS",
   "sklearn.manifold.SpectralEmbedding",
   "sklearn.manifold.TSNE"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_spectral_embedding": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.random.random_integers",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.manifold.spectral_embedding"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics": {
  "lineno": 32,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.setup_method": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_accuracy_score": {
  "lineno": 66,
  "symbols_in_volume": [
   "sklearn.metrics.accuracy_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_auc": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_average_precision_score": {
  "lineno": 83,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_classification_report": {
  "lineno": 87,
  "symbols_in_volume": [
   "sklearn.metrics.classification_report"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_confusion_matrix": {
  "lineno": 96,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.metrics.confusion_matrix"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_f1_score": {
  "lineno": 107,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.f1_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_fbeta_score": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.fbeta_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_fbeta_score_averaging": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.metrics.fbeta_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_hamming_loss": {
  "lineno": 129,
  "symbols_in_volume": [
   "sklearn.metrics.hamming_loss"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_hinge_loss": {
  "lineno": 134,
  "symbols_in_volume": [
   "sklearn.metrics.hinge_loss"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_jaccard_similarity_score": {
  "lineno": 139,
  "symbols_in_volume": [
   "sklearn.metrics.jaccard_similarity_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_log_loss": {
  "lineno": 148,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_make_scorer": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.make_scorer"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_matthews_corrcoef": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas_ml.compat._SKLEARN_ge_019",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_objectmapper": {
  "lineno": 52,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.metrics.make_scorer"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_precision_recall_curve": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_precision_recall_fscore_support": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.metrics.precision_recall_fscore_support"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_precision_score": {
  "lineno": 178,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.precision_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_recall_score": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.recall_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_roc_auc_score": {
  "lineno": 198,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_roc_curve": {
  "lineno": 202,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_zero_one_loss": {
  "lineno": 211,
  "symbols_in_volume": [
   "sklearn.metrics.zero_one_loss"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.setup_method": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_average_precision_score": {
  "lineno": 240,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.average_precision_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_log_loss": {
  "lineno": 254,
  "symbols_in_volume": [
   "sklearn.metrics.log_loss"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_matthews_corrcoef": {
  "lineno": 259,
  "symbols_in_volume": [
   "sklearn.metrics.matthews_corrcoef"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_precision_recall_curve": {
  "lineno": 264,
  "symbols_in_volume": [
   "sklearn.metrics.auc",
   "sklearn.metrics.average_precision_score",
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_roc_auc_score": {
  "lineno": 279,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_roc_curve": {
  "lineno": 289,
  "symbols_in_volume": [
   "sklearn.metrics.auc",
   "sklearn.metrics.roc_auc_score",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes.setup_method": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes.test_average_precision_score": {
  "lineno": 333,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes.test_log_loss": {
  "lineno": 328,
  "symbols_in_volume": [
   "sklearn.metrics.log_loss"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.setup_method": {
  "lineno": 340,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.preprocessing.LabelBinarizer",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_average_precision_score": {
  "lineno": 368,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.average_precision_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_confusion_matrix": {
  "lineno": 382,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_hinge_loss": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_log_loss": {
  "lineno": 389,
  "symbols_in_volume": [
   "sklearn.metrics.log_loss"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_matthews_corrcoef": {
  "lineno": 394,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_precision_recall_curve": {
  "lineno": 399,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "sklearn.metrics.precision_recall_curve"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_roc_auc_score": {
  "lineno": 409,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "sklearn.metrics.roc_auc_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_roc_curve": {
  "lineno": 421,
  "symbols_in_volume": [
   "pandas.compat.iteritems",
   "sklearn.metrics.roc_curve"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetricsExamples": {
  "lineno": 431,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetricsExamples.test_hinge_loss": {
  "lineno": 433,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics": {
  "lineno": 486,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.setup_method": {
  "lineno": 488,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_adjusted_mutual_info_score": {
  "lineno": 504,
  "symbols_in_volume": [
   "sklearn.metrics.adjusted_mutual_info_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_adjusted_rand_score": {
  "lineno": 509,
  "symbols_in_volume": [
   "sklearn.metrics.adjusted_rand_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_completeness_score": {
  "lineno": 514,
  "symbols_in_volume": [
   "sklearn.metrics.completeness_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_homogeneity_completeness_v_measure": {
  "lineno": 519,
  "symbols_in_volume": [
   "sklearn.metrics.homogeneity_completeness_v_measure"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_homogeneity_score": {
  "lineno": 524,
  "symbols_in_volume": [
   "sklearn.metrics.homogeneity_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_mutual_info_score": {
  "lineno": 529,
  "symbols_in_volume": [
   "sklearn.metrics.mutual_info_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_normalized_mutual_info_score": {
  "lineno": 534,
  "symbols_in_volume": [
   "sklearn.metrics.normalized_mutual_info_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_silhouette_samples": {
  "lineno": 544,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.metrics.silhouette_samples"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_silhouette_score": {
  "lineno": 539,
  "symbols_in_volume": [
   "sklearn.metrics.silhouette_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_v_measure_score": {
  "lineno": 552,
  "symbols_in_volume": [
   "sklearn.metrics.v_measure_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon.test_make_scorer": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.metrics.fbeta_score",
   "sklearn.metrics.make_scorer"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon.test_objectmapper": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.metrics.make_scorer"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics": {
  "lineno": 447,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.setup_method": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.linear_model.LinearRegression"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_explained_variance_score": {
  "lineno": 465,
  "symbols_in_volume": [
   "sklearn.metrics.explained_variance_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_mean_absolute_error": {
  "lineno": 470,
  "symbols_in_volume": [
   "sklearn.metrics.mean_absolute_error"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_mean_squared_error": {
  "lineno": 475,
  "symbols_in_volume": [
   "sklearn.metrics.mean_squared_error"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_r2_score": {
  "lineno": 480,
  "symbols_in_volume": [
   "sklearn.metrics.r2_score"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_mixture": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_mixture.TestMixture": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_mixture.TestMixture.test_Classifications": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.mixture"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_mixture.TestMixture.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.mixture.BayesianGaussianMixture",
   "sklearn.mixture.GaussianMixture"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestHyperParameterOptimizer": {
  "lineno": 327,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestHyperParameterOptimizer.test_grid_search": {
  "lineno": 329,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.RNGContext",
   "pandas_ml.util.testing.assert_frame_equal",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection.test_objectmapper": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.model_selection.LeavePOut",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.ParameterSampler",
   "sklearn.model_selection.PredefinedSplit",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.TimeSeriesSplit"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection.test_objectmapper_abbr": {
  "lineno": 50,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.GroupKFold",
   "sklearn.model_selection.GroupShuffleSplit",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.LeaveOneGroupOut",
   "sklearn.model_selection.LeaveOneOut",
   "sklearn.model_selection.LeavePGroupsOut",
   "sklearn.model_selection.LeavePOut",
   "sklearn.model_selection.ParameterGrid",
   "sklearn.model_selection.ParameterSampler",
   "sklearn.model_selection.PredefinedSplit",
   "sklearn.model_selection.RandomizedSearchCV",
   "sklearn.model_selection.ShuffleSplit",
   "sklearn.model_selection.StratifiedKFold",
   "sklearn.model_selection.TimeSeriesSplit"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation.test_learning_curve": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits",
   "sklearn.model_selection.learning_curve",
   "sklearn.naive_bayes.GaussianNB"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation.test_validation_curve": {
  "lineno": 360,
  "symbols_in_volume": [
   "numpy.logspace",
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits",
   "sklearn.model_selection.validation_curve",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_StratifiedShuffleSplit": {
  "lineno": 251,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "pandas_ml.util.testing.assert_produces_warning",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.StratifiedShuffleSplit"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_check_cv": {
  "lineno": 244,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_cross_val_score": {
  "lineno": 220,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_iterate": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_produces_warning",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_nested_cross_validation": {
  "lineno": 282,
  "symbols_in_volume": [
   "numpy.zeros",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.model_selection.KFold",
   "sklearn.model_selection.cross_val_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_permutation_test_score": {
  "lineno": 230,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.model_selection.permutation_test_score",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_split": {
  "lineno": 99,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_split_keep_index": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_train_test_split": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_train_test_split_abbr": {
  "lineno": 167,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_train_test_split_keep_index": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multiclass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass.test_Classifications": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.multiclass",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass.test_Classifications_Random": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.multiclass",
   "sklearn.svm.LinearSVC"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass.test_objectmapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.multiclass.OneVsOneClassifier",
   "sklearn.multiclass.OneVsRestClassifier",
   "sklearn.multiclass.OutputCodeClassifier"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multioutput": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput.test_multioutput": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.pi",
   "numpy.random.RandomState",
   "numpy.sin",
   "numpy.sort",
   "pandas.DataFrame",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "sklearn.ensemble.RandomForestRegressor",
   "sklearn.multioutput.MultiOutputRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput.test_objectmapper": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.multioutput.MultiOutputClassifier",
   "sklearn.multioutput.MultiOutputRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes.test_Classifications": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.naive_bayes"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.naive_bayes.BernoulliNB",
   "sklearn.naive_bayes.GaussianNB",
   "sklearn.naive_bayes.MultinomialNB"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_NearestNeigbors": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.neighbors"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_Neigbors": {
  "lineno": 66,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_diabetes",
   "sklearn.neighbors"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_kneighbors_graph": {
  "lineno": 31,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.neighbors.kneighbors_graph"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.neighbors.BallTree",
   "sklearn.neighbors.DistanceMetric",
   "sklearn.neighbors.KDTree",
   "sklearn.neighbors.KNeighborsClassifier",
   "sklearn.neighbors.KNeighborsRegressor",
   "sklearn.neighbors.KernelDensity",
   "sklearn.neighbors.NearestCentroid",
   "sklearn.neighbors.NearestNeighbors",
   "sklearn.neighbors.RadiusNeighborsClassifier",
   "sklearn.neighbors.RadiusNeighborsRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_radius_neighbors_graph": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.neighbors.radius_neighbors_graph"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neural_network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork.test_RBM": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_digits",
   "sklearn.neural_network"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.neural_network.BernoulliRBM",
   "sklearn.neural_network.MLPClassifier",
   "sklearn.neural_network.MLPRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_pipeline": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_pipeline.TestPipeline": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_pipeline.TestPipeline.test_Pipeline": {
  "lineno": 20,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.PCA",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_pipeline.TestPipeline.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.pipeline.FeatureUnion",
   "sklearn.pipeline.Pipeline",
   "sklearn.pipeline.make_pipeline",
   "sklearn.pipeline.make_union"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing._assert_fit_transform": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing._assert_transform": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_FunctionTransformer": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_Imputer": {
  "lineno": 354,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas_ml.ModelSeries"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelBinarizer": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelBinarizer2": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_frame_equal",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelEncoder_frame": {
  "lineno": 426,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelEncoder_series": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_add_dummy_feature": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.add_dummy_feature"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_binarize": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.binarize"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_normalize": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.normalize"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_normalize_abbr": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.normalize"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_objectmapper": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.preprocessing.Binarizer",
   "sklearn.preprocessing.FunctionTransformer",
   "sklearn.preprocessing.Imputer",
   "sklearn.preprocessing.KernelCenterer",
   "sklearn.preprocessing.LabelBinarizer",
   "sklearn.preprocessing.LabelEncoder",
   "sklearn.preprocessing.MaxAbsScaler",
   "sklearn.preprocessing.MinMaxScaler",
   "sklearn.preprocessing.MultiLabelBinarizer",
   "sklearn.preprocessing.Normalizer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.preprocessing.PolynomialFeatures",
   "sklearn.preprocessing.RobustScaler",
   "sklearn.preprocessing.StandardScaler"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_preprocessing_assignment": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.hstack",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.binarize"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_scale": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing.scale"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform": {
  "lineno": 215,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.preprocessing"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_1d_frame_float": {
  "lineno": 257,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pytest.mark.parametrize",
   "sklearn.preprocessing"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_1d_frame_int": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Index",
   "pandas.compat.PY3",
   "pandas_ml.ModelFrame",
   "sklearn.preprocessing"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_series_float": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.preprocessing"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_series_int": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.compat.PY3",
   "pandas_ml.ModelSeries",
   "sklearn.preprocessing"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_random_projection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_random_projection.TestRandomProjection": {
  "lineno": 9,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_random_projection.TestRandomProjection.test_objectmapper": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.random_projection.GaussianRandomProjection",
   "sklearn.random_projection.SparseRandomProjection",
   "sklearn.random_projection.johnson_lindenstrauss_min_dim"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised.test_Classifications": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.semi_supervised"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.semi_supervised.LabelPropagation",
   "sklearn.semi_supervised.LabelSpreading"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_Classifications": {
  "lineno": 77,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.svm"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_Regressions_curve": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.sin",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.svm"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_Regressions_iris": {
  "lineno": 57,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.svm"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_l1_min_c": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_iris",
   "sklearn.svm.l1_min_c"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_objectmapper": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.svm.LinearSVC",
   "sklearn.svm.NuSVC",
   "sklearn.svm.NuSVR",
   "sklearn.svm.OneClassSVM",
   "sklearn.svm.SVC",
   "sklearn.svm.SVR"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree.test_Classifications": {
  "lineno": 42,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.tree"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree.test_Regressions": {
  "lineno": 21,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pytest.mark.parametrize",
   "sklearn.datasets.load_iris",
   "sklearn.tree"
  ],
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree.test_objectmapper": {
  "lineno": 13,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor",
   "sklearn.tree.ExtraTreeClassifier",
   "sklearn.tree.ExtraTreeRegressor",
   "sklearn.tree.export_graphviz"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.smaccessors.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas_ml.core.base._BaseEstimator",
   "pandas_ml.core.base._RegressorMixin"
  ],
  "type": "class"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.fit": {
  "lineno": 45,
  "symbols_in_volume": [
   "statsmodels.api.OLS"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.get_params": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.predict": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.set_params": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.smaccessors.base._maybe_statsmodels_data": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "statsmodels.datasets.utils.Dataset"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.smaccessors.test.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_GEE": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.datasets.load_diabetes",
   "statsmodels.api",
   "statsmodels.genmod.generalized_estimating_equations.GEEResultsWrapper"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_MixedLM": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.array",
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.datasets.load_diabetes",
   "statsmodels.api",
   "statsmodels.regression.mixed_linear_model.MixedLMResultsWrapper"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_OLS": {
  "lineno": 28,
  "symbols_in_volume": [
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.datasets.load_diabetes",
   "statsmodels.api.OLS",
   "statsmodels.regression.linear_model.RegressionResultsWrapper"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_Regressions": {
  "lineno": 49,
  "symbols_in_volume": [
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.datasets.load_diabetes",
   "statsmodels.api"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_gridsearch": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.datasets.load_diabetes",
   "sklearn.model_selection.GridSearchCV",
   "statsmodels.api.GLS",
   "statsmodels.api.OLS"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_methods": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.base.clone",
   "statsmodels.api.GLM",
   "statsmodels.api.OLS"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_pipeline": {
  "lineno": 100,
  "symbols_in_volume": [
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "sklearn.datasets.load_diabetes",
   "sklearn.feature_selection.SelectKBest",
   "sklearn.feature_selection.f_regression",
   "sklearn.pipeline.Pipeline",
   "statsmodels.api"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_precict": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas_ml.smaccessors.base.StatsModelsRegressor",
   "pytest.raises",
   "sklearn.datasets.load_diabetes",
   "statsmodels.api.OLS"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_anes96": {
  "lineno": 15,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.anes96"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_cancer": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.cancer"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_ccard": {
  "lineno": 30,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.ccard"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_co2": {
  "lineno": 172,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.mark.skip",
   "pytest.raises",
   "statsmodels.api.datasets.co2"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_committee": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.committee"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_copper": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.copper"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_cpunish": {
  "lineno": 51,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.cpunish"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_elnino": {
  "lineno": 58,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "statsmodels.api.datasets.elnino"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_engel": {
  "lineno": 64,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.engel"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_fair": {
  "lineno": 151,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.fair"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_grunfeld": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.grunfeld"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_heart": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.heart"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_longley": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.longley"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_macrodata": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "statsmodels.api.datasets.macrodata"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_modechoice": {
  "lineno": 91,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.modechoice"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_nile": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "statsmodels.api.datasets.nile"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_randhie": {
  "lineno": 104,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.randhie"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_scotland": {
  "lineno": 111,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.scotland"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_spector": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.spector"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_stackloss": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.stackloss"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_star98": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "statsmodels.api.datasets.star98"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_statecrime": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.statecrime"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_strikes": {
  "lineno": 138,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "statsmodels.api.datasets.strikes"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_sunspots": {
  "lineno": 145,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "statsmodels.api.datasets.sunspots"
  ],
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets_LoadPandas": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets_LoadPandas.test_star98": {
  "lineno": 185,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.compat._PANDAS_ge_023",
   "pytest.raises",
   "statsmodels.api.datasets.star98.load_pandas"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.snsaccessors.base": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._attach_methods"
  ],
  "type": "module"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods": {
  "lineno": 8,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.FacetGrid": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.JointGrid": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.PairGrid": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods._maybe_target_name": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods._maybe_target_series": {
  "lineno": 37,
  "symbols_in_volume": [
   "pandas.api.types.is_list_like"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.clustermap": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.coefplot": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.countplot": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.distplot": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.heatmap": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.interactplot": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.kdeplot": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.api.types.is_list_like"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.rugplot": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.tsplot": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_categorical_plot": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_categorical_plot.f": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_data_plot": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_data_plot.f": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_xy_plot": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_xy_plot.f": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.snsaccessors.test.test_sns": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "pandas_ml.snsaccessors.test.test_sns.SeabornCase": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.util.testing.PlottingTestCase"
  ],
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.SeabornCase.setup_method": {
  "lineno": 21,
  "symbols_in_volume": [
   "nose.SkipTest",
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_diabetes",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornAttrs": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornAttrs.test_objectmapper": {
  "lineno": 41,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "seaborn.axes_style",
   "seaborn.blend_palette",
   "seaborn.choose_colorbrewer_palette",
   "seaborn.choose_cubehelix_palette",
   "seaborn.choose_dark_palette",
   "seaborn.choose_diverging_palette",
   "seaborn.choose_light_palette",
   "seaborn.color_palette",
   "seaborn.crayon_palette",
   "seaborn.cubehelix_palette",
   "seaborn.dark_palette",
   "seaborn.desaturate",
   "seaborn.despine",
   "seaborn.diverging_palette",
   "seaborn.hls_palette",
   "seaborn.husl_palette",
   "seaborn.light_palette",
   "seaborn.mpl_palette",
   "seaborn.palplot",
   "seaborn.plotting_context",
   "seaborn.reset_defaults",
   "seaborn.reset_orig",
   "seaborn.saturate",
   "seaborn.set",
   "seaborn.set_color_codes",
   "seaborn.set_context",
   "seaborn.set_hls_values",
   "seaborn.set_palette",
   "seaborn.xkcd_palette"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_categorical_mean_plots": {
  "lineno": 300,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_categoricalplots": {
  "lineno": 269,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_clustermap": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_count_plots": {
  "lineno": 331,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "pandas_ml.util.testing.assertRaises",
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_facetgrid": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas_ml.util.testing.close",
   "seaborn.FacetGrid"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_factorplots": {
  "lineno": 249,
  "symbols_in_volume": [
   "pandas_ml.util.testing.close",
   "seaborn.FacetGrid"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_heatmap": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_jointgrid": {
  "lineno": 404,
  "symbols_in_volume": [
   "seaborn.JointGrid"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_pairgrid": {
  "lineno": 397,
  "symbols_in_volume": [
   "seaborn.PairGrid"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_tsplot": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_dist_error": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas_ml.ModelFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_distplot": {
  "lineno": 109,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_jointplot": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas_ml.util.testing.close",
   "seaborn.JointGrid"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_kde_rug_mix": {
  "lineno": 180,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "matplotlib.pyplot.subplots",
   "numpy.random.randn",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_kdeplot": {
  "lineno": 144,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "numpy.random.randn",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_pairplot": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_rugplot": {
  "lineno": 165,
  "symbols_in_volume": [
   "matplotlib.axes.Axes"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_coefplot": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_interactplot": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_lmplot": {
  "lineno": 206,
  "symbols_in_volume": [
   "pandas_ml.util.testing.close",
   "seaborn.FacetGrid"
  ],
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_regression_plot": {
  "lineno": 220,
  "symbols_in_volume": [
   "matplotlib.axes.Axes",
   "pandas_ml.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.test.test_frame": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.test.test_frame.TestModelFrame": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_data_none": {
  "lineno": 223,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_data_proparty": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_data_proparty_series": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_delete_proparty": {
  "lineno": 431,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_array_series": {
  "lineno": 147,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_duplicated": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_none": {
  "lineno": 182,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_series": {
  "lineno": 33,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_str": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_dict_list": {
  "lineno": 89,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_dict_list_series_index": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_instance": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_metadata": {
  "lineno": 616,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas_ml.ModelFrame"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_slice": {
  "lineno": 246,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_target_object": {
  "lineno": 450,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.Index",
   "pandas.Series",
   "pandas.Timestamp",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_target_object_set": {
  "lineno": 469,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_target_proparty": {
  "lineno": 358,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.compat._PANDAS_ge_023",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_produces_warning",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_predict_automatic": {
  "lineno": 564,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_produces_warning",
   "sklearn.datasets.load_iris",
   "sklearn.svm",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_predict_proba": {
  "lineno": 504,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.svm"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_version": {
  "lineno": 19,
  "symbols_in_volume": [
   "pandas_ml.__version__"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges": {
  "lineno": 650,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_init_df_df": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_init_df_duplicated_columns": {
  "lineno": 806,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_init_df_target_setter": {
  "lineno": 712,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_produces_warning"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_instance": {
  "lineno": 652,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_groupby": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_frame_groupby": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.core.groupby.ModelFrameGroupBy",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_grouped_estimator_PCA": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.core.groupby.GroupedEstimator",
   "pandas_ml.core.groupby.ModelFrameGroupBy",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.datasets.load_iris",
   "sklearn.decomposition.PCA"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_grouped_estimator_SVC": {
  "lineno": 45,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.core.groupby.GroupedEstimator",
   "pandas_ml.core.groupby.ModelFrameGroupBy",
   "pandas_ml.core.groupby.ModelSeriesGroupBy",
   "pandas_ml.util.testing.assert_index_equal",
   "pandas_ml.util.testing.assert_numpy_array_equal",
   "sklearn.datasets.load_iris",
   "sklearn.svm.SVC"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_transform_standard": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelSeriesGroupBy": {
  "lineno": 118,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.test.test_groupby.TestModelSeriesGroupBy.test_series_groupby": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas_ml.ModelSeries",
   "pandas_ml.core.groupby.ModelSeriesGroupBy",
   "pandas_ml.util.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_series": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.test.test_series.TestModelSeries": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.test.test_series.TestModelSeries.test_preprocessing_normalize": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.float",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal",
   "sklearn.preprocessing.normalize"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_series.TestModelSeries.test_series_instance": {
  "lineno": 14,
  "symbols_in_volume": [
   "pandas_ml.ModelSeries"
  ],
  "type": "function"
 },
 "pandas_ml.test.test_series.TestModelSeries.test_series_to_frame": {
  "lineno": 22,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "pandas_ml.util.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "pandas_ml.tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.tools._get_version": {
  "lineno": 8,
  "symbols_in_volume": [
   "importlib.import_module"
  ],
  "type": "function"
 },
 "pandas_ml.tools.info": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pandas_ml.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.util._util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.util._util._is_1d_harray": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util._util._is_1d_varray": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing": {
  "lineno": null,
  "symbols_in_volume": [
   "pandas_ml.compat.plotting._flatten"
  ],
  "type": "module"
 },
 "pandas_ml.util.testing.PlottingTestCase": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.util.testing.PlottingTestCase._check_axes_shape": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.round"
  ],
  "type": "function"
 },
 "pandas_ml.util.testing.PlottingTestCase._flatten_visible": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.PlottingTestCase._get_axes_layout": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.PlottingTestCase.teardown_method": {
  "lineno": 65,
  "symbols_in_volume": [
   "pandas.util.testing.close"
  ],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pandas_ml.util.testing.TestCase.assertAlmostEqual": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.util.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertEqual": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertFalse": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertIs": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertIsInstance": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertIsNone": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertTrue": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.bool_"
  ],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assert_numpy_array_almost_equal": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.testing.assert_array_almost_equal"
  ],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.format": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.format_values": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.random_state": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "pandas_ml.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.xgboost": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.xgboost.base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.xgboost.base.XGBoostMethods": {
  "lineno": 12,
  "symbols_in_volume": [
   "pandas_ml.core.accessor._AccessorMethods"
  ],
  "type": "class"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.XGBClassifier": {
  "lineno": 23,
  "symbols_in_volume": [
   "xgboost.XGBClassifier"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.XGBRegressor": {
  "lineno": 18,
  "symbols_in_volume": [
   "xgboost.XGBRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.plot_importance": {
  "lineno": 28,
  "symbols_in_volume": [
   "xgboost.XGBModel",
   "xgboost.plot_importance"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.plot_tree": {
  "lineno": 99,
  "symbols_in_volume": [
   "xgboost.XGBModel",
   "xgboost.plot_tree"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.to_graphviz": {
  "lineno": 66,
  "symbols_in_volume": [
   "xgboost.XGBModel",
   "xgboost.to_graphviz"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.base._to_dmatrix": {
  "lineno": 6,
  "symbols_in_volume": [
   "xgboost.DMatrix"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pandas_ml.xgboost.test.test_base": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost": {
  "lineno": 16,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_XGBClassifier": {
  "lineno": 23,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "sklearn.datasets.load_iris",
   "xgboost"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_XGBRegressor": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.random.rand",
   "numpy.sin",
   "pandas_ml.ModelFrame",
   "pandas_ml.ModelSeries",
   "xgboost"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_grid_search": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas_ml.ModelFrame",
   "pandas_ml.util.testing.RNGContext",
   "pandas_ml.util.testing.assert_frame_equal",
   "sklearn.datasets.load_digits"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_objectmapper": {
  "lineno": 18,
  "symbols_in_volume": [
   "pandas_ml.ModelFrame",
   "xgboost.XGBClassifier",
   "xgboost.XGBRegressor"
  ],
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_plotting": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use"
  ],
  "type": "module"
 },
 "pandas_ml.xgboost.test.test_plotting.TestXGBoostPlotting": {
  "lineno": 17,
  "symbols_in_volume": [
   "pandas_ml.util.testing.TestCase"
  ],
  "type": "class"
 },
 "pandas_ml.xgboost.test.test_plotting.TestXGBoostPlotting.test_plotting": {
  "lineno": 19,
  "symbols_in_volume": [
   "graphviz.Digraph",
   "matplotlib.axes.Axes",
   "nose.SkipTest",
   "pandas_ml.ModelFrame",
   "pytest.raises",
   "sklearn.datasets.load_iris"
  ],
  "type": "function"
 }
}