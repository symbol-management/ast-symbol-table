{
 "pandas_ml": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.ConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.cm.ConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.ModelFrame": {
  "data": {
   "shadows": "pandas_ml.core.ModelFrame"
  },
  "type": "import"
 },
 "pandas_ml.ModelSeries": {
  "data": {
   "shadows": "pandas_ml.core.ModelSeries"
  },
  "type": "import"
 },
 "pandas_ml.__version__": {
  "data": {
   "shadows": "pandas_ml.version.version"
  },
  "type": "import"
 },
 "pandas_ml.compat": {
  "data": {
   "shadows": "pandas_ml.compat"
  },
  "type": "import"
 },
 "pandas_ml.compat.Appender": {
  "data": {
   "shadows": "pandas.util.decorators.Appender"
  },
  "type": "import"
 },
 "pandas_ml.compat.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pandas_ml.compat.PANDAS_VERSION": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pandas_ml.compat._IMBLEARN_INSTALLED": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pandas_ml.compat._PANDAS_ge_021": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pandas_ml.compat._PANDAS_ge_022": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pandas_ml.compat._PANDAS_ge_023": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "pandas_ml.compat._SKLEARN_INSTALLED": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pandas_ml.compat._SKLEARN_ge_019": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pandas_ml.compat.cache_readonly": {
  "data": {
   "shadows": "pandas.util.decorators.cache_readonly"
  },
  "type": "import"
 },
 "pandas_ml.compat.imblearn": {
  "data": {
   "shadows": "imblearn"
  },
  "type": "import"
 },
 "pandas_ml.compat.is_integer_dtype": {
  "data": {
   "shadows": "pandas.api.types.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas_ml.compat.is_list_like": {
  "data": {
   "shadows": "pandas.api.types.is_list_like"
  },
  "type": "import"
 },
 "pandas_ml.compat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.compat.plotting": {
  "data": {
   "shadows": "pandas.tools.plotting"
  },
  "type": "import"
 },
 "pandas_ml.compat.sklearn": {
  "data": {
   "shadows": "sklearn"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.confusion_matrix.BinaryConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.ConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.cm.ConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.LabeledConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.confusion_matrix.abstract.BinaryConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "len",
    "numpy.int64",
    "pandas.Series",
    "pandas.crosstab",
    "pandas_ml.compat._PANDAS_ge_021"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.__repr__": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.__str__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._avg_stat": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "getattr",
    "pandas.Series",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._classes": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._label": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._name_from_dict": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "KeyError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._str_dict": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract._str_stats": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.abstract.collections",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.binarize": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas_ml.confusion_matrix.abstract.collections",
    "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.classes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.classification_report": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "getattr",
    "numpy.array",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.enlarge": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index",
    "pandas_ml.confusion_matrix.abstract.collections",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.get": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.is_binary": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.len": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.max": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.min": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.plot": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "matplotlib.pyplot.cm.gray_r",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.imshow",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "seaborn.heatmap"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.population": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.pred": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.print_stats": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.stats": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.abstract.collections"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.stats_class": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "id",
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.stats_overall": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "KeyError",
    "numpy.diag",
    "numpy.nan",
    "numpy.sum",
    "pandas_ml.confusion_matrix.abstract.collections",
    "pandas_ml.confusion_matrix.stats.binom_interval",
    "pandas_ml.confusion_matrix.stats.class_agreement",
    "pandas_ml.confusion_matrix.stats.prop_test",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.sum": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.title": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.to_array": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.to_dataframe": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.newaxis",
    "pandas.DataFrame",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.toarray": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.true": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.y_pred": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract.y_true": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.abstract.binom_interval": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.stats.binom_interval"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.class_agreement": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.stats.class_agreement"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.prop_test": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.stats.prop_test"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.abstract.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
   ]
  },
  "type": "class"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.ACC": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.DOR": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.F1_score": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FDR": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FN": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FNR": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FOR": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FP": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.FPR": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.LRN": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.LRP": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.MCC": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.bcm.math",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.N": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.NPV": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.NegativeTest": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.P": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.PPV": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.PositiveTest": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.SPC": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TN": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TNR": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TP": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.TPR": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix._class": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix._str_stats": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.dict_class": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "reversed"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.help": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "classmethod",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.hit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.informedness": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.inverse": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.is_binary": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.markedness": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.neg_class": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.pos_class": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.precision": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.prevalence": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "numpy.float64",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.recall": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.sensitivity": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.specificity": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.stats": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "getattr",
    "map",
    "pandas_ml.confusion_matrix.bcm.collections"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.support": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.y_pred": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix.y_true": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.bcm.ConfusionMatrixAbstract": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.bcm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.confusion_matrix.cm.BinaryConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm.ConfusionMatrix": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
   ]
  },
  "type": "class"
 },
 "pandas_ml.confusion_matrix.cm.ConfusionMatrix.__new__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "numpy.unique",
    "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix",
    "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.cm.ConfusionMatrixAbstract": {
  "data": {
   "shadows": "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract"
   ]
  },
  "type": "class"
 },
 "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix.__getattr__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.cm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.cm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.stats": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.confusion_matrix.stats.beta": {
  "data": {
   "shadows": "scipy.stats.beta"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.stats.binom": {
  "data": {
   "shadows": "scipy.stats.binom"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.stats.binom_interval": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "scipy.stats.beta.ppf"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.choose": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "min",
    "numpy.int64",
    "numpy.isnan",
    "numpy.nan",
    "pandas.compat.range"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.class_agreement": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "numpy.diag",
    "numpy.float64",
    "pandas_ml.confusion_matrix.stats.choose"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.stats.prop_test": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.diag",
    "scipy.stats.binom.sf"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.stats.range": {
  "data": {
   "shadows": "pandas.compat.range"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.matplotlib"
   ]
  },
  "type": "module"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.ConfusionMatrix": {
  "data": {
   "shadows": "pandas_ml.ConfusionMatrix"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_binary_cm": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.BinaryConfusionMatrix",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_binary_cm_inverse": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_binarize": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_empty_column": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_empty_row": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_int": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_stats_animals": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_stats_integers": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_cm_strings": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_get": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_matrix_auto_binary": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_matrix_auto_labeled": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_max_min": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
    "print"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_normalized": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_pandas_confusion_normalized_issue1": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.BinaryConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_plot": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.nose",
    "pandas_ml.confusion_matrix.test.test_confusion_matrix.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix.test_value_counts": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas_ml.ConfusionMatrix",
    "pandas_ml.confusion_matrix.LabeledConfusionMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.test.test_confusion_matrix.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.confusion_matrix.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pandas_ml.core": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.core.ModelFrame": {
  "data": {
   "shadows": "pandas_ml.core.frame.ModelFrame"
  },
  "type": "import"
 },
 "pandas_ml.core.ModelSeries": {
  "data": {
   "shadows": "pandas_ml.core.series.ModelSeries"
  },
  "type": "import"
 },
 "pandas_ml.core.accessor": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.core.accessor._AccessorMethods": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.accessor._AccessorMethods.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "getattr",
    "hasattr",
    "pandas_ml.core.accessor.importlib",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._constructor": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._constructor_sliced": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._data": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._decision": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._predicted": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._target": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._AccessorMethods._update_method_mapper": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "getattr",
    "pandas.compat.iteritems"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._attach_methods": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "getattr",
    "hasattr",
    "pandas_ml.core.accessor.importlib",
    "setattr",
    "wrap_func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_func": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_func.f": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_target_func": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_data_target_func.f": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_func": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_func.f": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_noargs": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "pandas_ml.core.accessor._wrap_target_pred_noargs.f": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.accessor.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_ml.core.accessor.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandas_ml.core.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "sklearn.base.BaseEstimator",
    "sklearn.base.ClassifierMixin",
    "sklearn.base.ClusterMixin",
    "sklearn.base.RegressorMixin",
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "module"
 },
 "pandas_ml.core.base._BaseEstimator": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.base._ClassifierMixin": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.base._ClusterMixin": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.base._RegressorMixin": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.base._TransformerMixin": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.base.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "pandas_ml.core.frame": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.core.frame.Appender": {
  "data": {
   "shadows": "pandas_ml.compat.Appender"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.ModelFrame": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "pandas.DataFrame",
    "pandas.core.generic.NDFrame._internal_names",
    "pandas_ml.core.generic.ModelPredictor",
    "pandas_ml.core.series.ModelSeries",
    "pandas_ml.skaccessors.CrossDecompositionMethods",
    "pandas_ml.skaccessors.GaussianProcessMethods",
    "set"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.frame.ModelFrame.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.DataFrame.__init__",
    "pandas.Series",
    "pandas_ml.compat.is_list_like",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.skaccessors._maybe_sklearn_data",
    "pandas_ml.smaccessors._maybe_statsmodels_data"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._calibration": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._call": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "TypeError",
    "method"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._cluster": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.ClusterMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._concat_target": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "_add_meta_columns",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._concat_target._add_meta_columns": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.MultiIndex.from_product",
    "pandas_ml.compat.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._constructor": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas_ml.core.frame.ModelFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._covariance": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.CovarianceMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._cross_decomposition": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._da": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._data_columns": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas.Index",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._decomposition": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.DecompositionMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._dummy": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._ensemble": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.EnsembleMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._feature_extraction": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.FeatureExtractionMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._feature_selection": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.FeatureSelectionMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._gaussian_process": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.GaussianProcessMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._get_method_mapper": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._imbalance": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.imbaccessors.ImbalanceMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._isotonic": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.IsotonicMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._kernel_approximation": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._kernel_ridge": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._linear_model": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.LinearModelMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._manifold": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.ManifoldMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._maybe_convert_data": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_maybe_convert_target",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas_ml.compat.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._maybe_convert_data._maybe_convert_target": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._metrics": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.MetricsMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._mixture": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._model_selection": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.ModelSelectionMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._multiclass": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._multioutput": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._naive_bayes": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._neighbors": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.NeighborsMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._neural_network": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._pipeline": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.PipelineMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._preprocessing": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.PreprocessingMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._random_projection": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._seaborn": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.snsaccessors.SeabornMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._semi_supervised": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._svm": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.SVMMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._tree": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_predicted": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.util._is_1d_varray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_probability": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.core.frame.warnings",
    "pandas_ml.util._is_1d_varray"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_sampled": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "_wrap",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_sampled._wrap": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._wrap_transform": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame._xgboost": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.xgboost.XGBoostMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.calibration": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.cluster": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.covariance": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.cross_decomposition": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.da": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.data": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.decision_function": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.decomposition": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.discriminant_analysis": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.dummy": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.ensemble": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.feature_extraction": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.feature_selection": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_predict": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_resample": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_sample": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.warnings",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.fit_transform": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.compat.string_types",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.core.generic._shared_docs",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.gaussian_process": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.gp": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.groupby": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.generic.NDFrame.groupby.__doc__",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.groupby.groupby"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.has_data": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.has_multi_targets": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Index"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.has_target": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.imbalance": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.inverse_transform": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.isotonic": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.kernel_approximation": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.kernel_ridge": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.lda": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.warnings",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.linear_model": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.lm": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.manifold": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.metrics": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.mixture": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.model_selection": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.ms": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.multiclass": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.multioutput": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.naive_bayes": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.neighbors": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.neural_network": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.pipeline": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.pp": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.predict_log_proba": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.predict_proba": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.preprocessing": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.qda": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.warnings",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.random_projection": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.sample": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.warnings",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.score": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.seaborn": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.semi_supervised": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.sns": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.svm": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.target": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.target_name": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.transform": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "dict",
    "isinstance",
    "pandas.DataFrame.transform",
    "pandas.compat.string_types",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.core.generic._shared_docs",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.tree": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.xgb": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelFrame.xgboost": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.frame.ModelPredictor": {
  "data": {
   "shadows": "pandas_ml.core.generic.ModelPredictor"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.ModelSeries": {
  "data": {
   "shadows": "pandas_ml.core.series.ModelSeries"
  },
  "type": "import"
 },
 "pandas_ml.core.frame._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.core.frame._shared_docs": {
  "data": {
   "shadows": "pandas_ml.core.generic._shared_docs"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.cache_readonly": {
  "data": {
   "shadows": "pandas_ml.compat.cache_readonly"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.groupby": {
  "data": {
   "shadows": "pandas_ml.core.groupby.groupby"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.imbaccessors": {
  "data": {
   "shadows": "pandas_ml.imbaccessors"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.is_list_like": {
  "data": {
   "shadows": "pandas_ml.compat.is_list_like"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.skaccessors": {
  "data": {
   "shadows": "pandas_ml.skaccessors"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.smaccessors": {
  "data": {
   "shadows": "pandas_ml.smaccessors"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.snsaccessors": {
  "data": {
   "shadows": "pandas_ml.snsaccessors"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.util": {
  "data": {
   "shadows": "pandas_ml.util"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas_ml.core.frame.xgboost": {
  "data": {
   "shadows": "pandas_ml.xgboost"
  },
  "type": "import"
 },
 "pandas_ml.core.generic": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "module"
 },
 "pandas_ml.core.generic.Appender": {
  "data": {
   "shadows": "pandas_ml.compat.Appender"
  },
  "type": "import"
 },
 "pandas_ml.core.generic.ModelPredictor": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pandas_ml.core.generic.ModelTransformer"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.generic.ModelPredictor._wrap_predicted": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.decision": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "hasattr",
    "pandas_ml.core.generic.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.estimator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.log_proba": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "hasattr",
    "pandas_ml.core.generic.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.predict": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "dict",
    "mapped",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.predicted": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "hasattr",
    "pandas_ml.core.generic.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelPredictor.proba": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "hasattr",
    "pandas_ml.core.generic.warnings",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.generic.ModelTransformer._call": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer._check_attr": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer._get_method_mapper": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer._wrap_transform": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.fit": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dict",
    "mapped",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.fit_transform": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.inverse_transform": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic.ModelTransformer.transform": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "mapped",
    "pandas.compat.string_types",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "pandas_ml.misc.transform_with_patsy"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.generic._shared_docs": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "pandas_ml.core.generic.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_ml.core.generic.misc": {
  "data": {
   "shadows": "pandas_ml.misc"
  },
  "type": "import"
 },
 "pandas_ml.core.generic.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.core.groupby.Appender": {
  "data": {
   "shadows": "pandas_ml.compat.Appender"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.GroupedEstimator": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pandas_ml.core.base._BaseEstimator"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.groupby.GroupedEstimator.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.core.groupby.DataFrameGroupBy",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrame": {
  "data": {
   "shadows": "pandas_ml.core.frame.ModelFrame"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pandas.core.groupby.DataFrameGroupBy",
    "pandas.core.groupby.DataFrameGroupBy._internal_names",
    "pandas_ml.core.generic.ModelPredictor",
    "set"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._call": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "method",
    "pandas_ml.core.groupby.GroupedEstimator"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._get_mapper": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._wrap_predicted": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._wrap_results": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.compat.iteritems",
    "pandas.concat",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.core.series.ModelSeries"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy._wrap_transform": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelFrameGroupBy.transform": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "pandas.core.groupby.DataFrameGroupBy.transform",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic.ModelPredictor.transform",
    "pandas_ml.core.generic._shared_docs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.ModelPredictor": {
  "data": {
   "shadows": "pandas_ml.core.generic.ModelPredictor"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.ModelSeries": {
  "data": {
   "shadows": "pandas_ml.core.series.ModelSeries"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.ModelSeriesGroupBy": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas.core.groupby.SeriesGroupBy"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.groupby._BaseEstimator": {
  "data": {
   "shadows": "pandas_ml.core.base._BaseEstimator"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby._shared_docs": {
  "data": {
   "shadows": "pandas_ml.core.generic._shared_docs"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.base": {
  "data": {
   "shadows": "sklearn.base"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_ml.core.groupby.groupby": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "klass",
    "pandas.core.groupby.GroupBy.__doc__",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.core.series.ModelSeries",
    "type"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.core.series": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.core.series.Appender": {
  "data": {
   "shadows": "pandas_ml.compat.Appender"
  },
  "type": "import"
 },
 "pandas_ml.core.series.ModelFrame": {
  "data": {
   "shadows": "pandas_ml.core.frame.ModelFrame"
  },
  "type": "import"
 },
 "pandas_ml.core.series.ModelSeries": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas_ml.core.generic.ModelTransformer"
   ]
  },
  "type": "class"
 },
 "pandas_ml.core.series.ModelSeries._call": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "method"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries._constructor": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas_ml.core.series.ModelSeries",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries._preprocessing": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.skaccessors.PreprocessingMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries._wrap_transform": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.util._is_1d_harray",
    "pandas_ml.util._is_1d_varray"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.groupby": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "TypeError",
    "pandas.core.generic.NDFrame.groupby.__doc__",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.groupby.groupby"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.pp": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.preprocessing": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.to_frame": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.Series.to_frame.__doc__",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.frame.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelSeries.transform": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "pandas.Series.transform",
    "pandas_ml.compat.Appender",
    "pandas_ml.core.generic._shared_docs",
    "pandas_ml.core.series.ModelSeries",
    "super"
   ]
  },
  "type": "function"
 },
 "pandas_ml.core.series.ModelTransformer": {
  "data": {
   "shadows": "pandas_ml.core.generic.ModelTransformer"
  },
  "type": "import"
 },
 "pandas_ml.core.series._shared_docs": {
  "data": {
   "shadows": "pandas_ml.core.generic._shared_docs"
  },
  "type": "import"
 },
 "pandas_ml.core.series.cache_readonly": {
  "data": {
   "shadows": "pandas_ml.compat.cache_readonly"
  },
  "type": "import"
 },
 "pandas_ml.core.series.groupby": {
  "data": {
   "shadows": "pandas_ml.core.groupby.groupby"
  },
  "type": "import"
 },
 "pandas_ml.core.series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.core.series.skaccessors": {
  "data": {
   "shadows": "pandas_ml.skaccessors"
  },
  "type": "import"
 },
 "pandas_ml.core.series.util": {
  "data": {
   "shadows": "pandas_ml.util"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.imbaccessors.ImbalanceMethods": {
  "data": {
   "shadows": "pandas_ml.imbaccessors.base.ImbalanceMethods"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.base": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._combine": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._ensemble": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._over_sampling": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods._under_sampling": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.combine": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.ensemble": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.over_sampling": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base.ImbalanceMethods.under_sampling": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.base._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.base.cache_readonly": {
  "data": {
   "shadows": "pandas_ml.compat.cache_readonly"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.imbaccessors.test.test_imbalance": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.imbaccessors.test.test_imbalance.pytest"
   ]
  },
  "type": "module"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.ADASYN": {
  "data": {
   "shadows": "imblearn.over_sampling.ADASYN"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.BalanceCascade": {
  "data": {
   "shadows": "imblearn.ensemble.BalanceCascade"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.ClusterCentroids": {
  "data": {
   "shadows": "imblearn.under_sampling.ClusterCentroids"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.EasyEnsemble": {
  "data": {
   "shadows": "imblearn.ensemble.EasyEnsemble"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.OneSidedSelection": {
  "data": {
   "shadows": "imblearn.under_sampling.OneSidedSelection"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.SMOTE": {
  "data": {
   "shadows": "imblearn.over_sampling.SMOTE"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.SMOTEENN": {
  "data": {
   "shadows": "imblearn.combine.SMOTEENN"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.SMOTETomek": {
  "data": {
   "shadows": "imblearn.combine.SMOTETomek"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_combine": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.SMOTETomek",
    "pandas_ml.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_ensemble": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.EasyEnsemble",
    "pandas_ml.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_oversampling": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "imblearn.over_sampling.ADASYN",
    "imblearn.over_sampling.RandomOverSampler",
    "imblearn.over_sampling.SMOTE",
    "pandas_ml.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_objectmapper_undersampling": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling.CondensedNearestNeighbour",
    "imblearn.under_sampling.EditedNearestNeighbours",
    "imblearn.under_sampling.InstanceHardnessThreshold",
    "imblearn.under_sampling.NearMiss",
    "imblearn.under_sampling.NeighbourhoodCleaningRule",
    "imblearn.under_sampling.OneSidedSelection",
    "imblearn.under_sampling.RandomUnderSampler",
    "imblearn.under_sampling.RepeatedEditedNearestNeighbours",
    "imblearn.under_sampling.TomekLinks",
    "pandas_ml.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_sample": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "imblearn.combine.SMOTEENN",
    "imblearn.combine.SMOTETomek",
    "imblearn.over_sampling.ADASYN",
    "imblearn.over_sampling.SMOTE",
    "imblearn.under_sampling.ClusterCentroids",
    "imblearn.under_sampling.OneSidedSelection",
    "list",
    "model",
    "numpy.array",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance.test_sample_ensemble": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "imblearn.ensemble.BalanceCascade",
    "imblearn.ensemble.EasyEnsemble",
    "list",
    "model",
    "numpy.array",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.combine": {
  "data": {
   "shadows": "imblearn.combine"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.ensemble": {
  "data": {
   "shadows": "imblearn.ensemble"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.imblean": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.os": {
  "data": {
   "shadows": "imblearn.over_sampling"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.imbaccessors.test.test_imbalance.us": {
  "data": {
   "shadows": "imblearn.under_sampling"
  },
  "type": "import"
 },
 "pandas_ml.info": {
  "data": {
   "shadows": "pandas_ml.tools.info"
  },
  "type": "import"
 },
 "pandas_ml.misc": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.misc.patsy_wraps": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.misc.patsy_wraps.patsy": {
  "data": {
   "shadows": "patsy"
  },
  "type": "import"
 },
 "pandas_ml.misc.patsy_wraps.transform_with_patsy": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "len",
    "pandas_ml.misc.patsy_wraps.patsy"
   ]
  },
  "type": "function"
 },
 "pandas_ml.misc.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.misc.test.test_patsy": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame.test_patsy_deviation_coding": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame.test_patsy_matrices": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.misc.test.test_patsy.TestModelFrame.test_patsy_matrix": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.misc.test.test_patsy.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.misc.test.test_patsy.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.misc.test.test_patsy.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.misc.transform_with_patsy": {
  "data": {
   "shadows": "pandas_ml.misc.patsy_wraps.transform_with_patsy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.ClusterMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.cluster.ClusterMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.CovarianceMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.covariance.CovarianceMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.CrossDecompositionMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.DecompositionMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.decomposition.DecompositionMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.EnsembleMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.ensemble.EnsembleMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.FeatureExtractionMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.FeatureSelectionMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.feature_selection.FeatureSelectionMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.GaussianProcessMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.IsotonicMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.isotonic.IsotonicMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.LinearModelMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.linear_model.LinearModelMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.ManifoldMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.manifold.ManifoldMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.MetricsMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.metrics.MetricsMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.ModelSelectionMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.model_selection.ModelSelectionMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.NeighborsMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.neighbors.NeighborsMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.PipelineMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.pipeline.PipelineMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.PreprocessingMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.preprocessing.PreprocessingMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.SVMMethods": {
  "data": {
   "shadows": "pandas_ml.skaccessors.svm.SVMMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors._maybe_sklearn_data": {
  "data": {
   "shadows": "pandas_ml.skaccessors.base._maybe_sklearn_data"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.base.Bunch": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.base._maybe_sklearn_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "pandas.DataFrame",
    "sklearn.datasets.base.Bunch"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.cluster": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.core.accessor._wrap_data_func",
    "pandas_ml.skaccessors.cluster.ClusterMethods",
    "pandas_ml.skaccessors.cluster._cluster_methods"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods._bicluster": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.affinity_propagation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.bicluster": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.dbscan": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.k_means": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.mean_shift": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster.ClusterMethods.spectral_clustering": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cluster._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.cluster._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.cluster._cluster_methods": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.cluster._wrap_data_func": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_data_func"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.cluster.cache_readonly": {
  "data": {
   "shadows": "pandas_ml.compat.cache_readonly"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.covariance": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods.empirical_covariance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods.ledoit_wolf": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.covariance.CovarianceMethods.oas": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.covariance._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.cross_decomposition": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods._fit": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods._predict": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods._transform": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.cross_decomposition._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.decomposition": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.dict_learning": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.dict_learning_online": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.fastica": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition.DecompositionMethods.sparse_encode": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.decomposition._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.ensemble": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.ensemble.EnsembleMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.ensemble.EnsembleMethods.partial_dependence": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.ensemble.PartialDependenceMethods",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.ensemble.PartialDependenceMethods": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.ensemble.PartialDependenceMethods.partial_dependence": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "func",
    "sklearn.ensemble.partial_dependence",
    "sklearn.ensemble.partial_dependence.partial_dependence"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.ensemble.PartialDependenceMethods.plot_partial_dependence": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "func",
    "sklearn.ensemble.partial_dependence.plot_partial_dependence"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.ensemble._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.ensemble.pdp": {
  "data": {
   "shadows": "sklearn.ensemble.partial_dependence"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.feature_extraction": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods._image": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods._text": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas_ml.compat.cache_readonly",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods.image": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods.text": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.feature_extraction._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.feature_extraction.cache_readonly": {
  "data": {
   "shadows": "pandas_ml.compat.cache_readonly"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.feature_selection": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.core.accessor._wrap_data_target_func",
    "pandas_ml.skaccessors.feature_selection.FeatureSelectionMethods",
    "pandas_ml.skaccessors.feature_selection._fs_methods"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.feature_selection.FeatureSelectionMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.feature_selection._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.feature_selection._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.feature_selection._fs_methods": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.feature_selection._wrap_data_target_func": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_data_target_func"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.gaussian_process": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.core.accessor._wrap_data_func",
    "pandas_ml.skaccessors.gaussian_process.RegressionModelsMethods",
    "pandas_ml.skaccessors.gaussian_process._regression_methods"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "dict",
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods._predict": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods.correlation_models": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods.regression_models": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.gaussian_process.RegressionModelsMethods",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.gaussian_process.RegressionModelsMethods": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.gaussian_process._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.gaussian_process._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.gaussian_process._regression_methods": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.gaussian_process._wrap_data_func": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_data_func"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.isotonic": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods.IsotonicRegression": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods.check_increasing": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.isotonic.IsotonicMethods.isotonic_regression": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.isotonic._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.linear_model": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.core.accessor._wrap_data_target_func",
    "pandas_ml.skaccessors.linear_model.LinearModelMethods",
    "pandas_ml.skaccessors.linear_model._lm_methods"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods._enet_path_wraps": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.enet_path": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.lars_path": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.lasso_path": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.lasso_stability_path": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model.LinearModelMethods.orthogonal_mp_gram": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.linear_model._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.linear_model._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.linear_model._lm_methods": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.linear_model._wrap_data_target_func": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_data_target_func"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.manifold": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.manifold.ManifoldMethods": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.manifold.ManifoldMethods.locally_linear_embedding": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.manifold.ManifoldMethods.spectral_embedding": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.manifold._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.metrics": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.core.accessor._wrap_target_pred_func",
    "pandas_ml.core.accessor._wrap_target_pred_noargs",
    "pandas_ml.skaccessors.metrics.MetricsMethods",
    "pandas_ml.skaccessors.metrics._classification_methods",
    "pandas_ml.skaccessors.metrics._cluster_methods",
    "pandas_ml.skaccessors.metrics._cluster_methods_noargs",
    "pandas_ml.skaccessors.metrics._regression_methods",
    "pandas_ml.skaccessors.metrics._true_pred_methods"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods._curve_wraps": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "pandas_ml.util._is_1d_varray",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods._score_wraps": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.auc": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.average_precision_score": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.confusion_matrix": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.consensus_score": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.f1_score": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.fbeta_score": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.hinge_loss": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.log_loss": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.pairwise": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.precision_recall_curve": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.precision_recall_fscore_support": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.precision_score": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.recall_score": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.roc_auc_score": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.roc_curve": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.silhouette_samples": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics.MetricsMethods.silhouette_score": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.metrics._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.metrics._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.metrics._classification_methods": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.metrics._cluster_methods": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.metrics._cluster_methods_noargs": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.metrics._regression_methods": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.metrics._true_pred_methods": {
  "data": {
   "lineno": 254
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.metrics._wrap_target_pred_func": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_target_pred_func"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.metrics._wrap_target_pred_noargs": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_target_pred_noargs"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.metrics.util": {
  "data": {
   "shadows": "pandas_ml.util"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.model_selection": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.StratifiedShuffleSplit": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.check_cv": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.cross_val_score": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.describe": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.iterate": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas_ml.skaccessors.model_selection.warnings"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.learning_curve": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.permutation_test_score": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.split": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.skaccessors.model_selection.warnings"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.train_test_split": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "_init",
    "func",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.train_test_split._init": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "klass"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection.ModelSelectionMethods.validation_curve": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.model_selection._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.model_selection.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.model_selection.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.neighbors": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.core.accessor._wrap_data_func",
    "pandas_ml.skaccessors.neighbors.NeighborsMethods",
    "pandas_ml.skaccessors.neighbors._neighbor_methods"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.neighbors.NeighborsMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.neighbors._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.neighbors._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.neighbors._neighbor_methods": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.neighbors._wrap_data_func": {
  "data": {
   "shadows": "pandas_ml.core.accessor._wrap_data_func"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.pipeline": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.pipeline.PipelineMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.pipeline.PipelineMethods.make_pipeline": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.pipeline.PipelineMethods.make_union": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.pipeline._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.compat._SKLEARN_INSTALLED",
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.skaccessors.preprocessing.PreprocessingMethods",
    "pandas_ml.skaccessors.preprocessing._preprocessing_methods",
    "pandas_ml.skaccessors.preprocessing._wrap_func",
    "sklearn.preprocessing.Binarizer",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.Imputer",
    "sklearn.preprocessing.KernelCenterer",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.preprocessing.ModelFrame": {
  "data": {
   "shadows": "pandas_ml.core.frame.ModelFrame"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing.ModelSeries": {
  "data": {
   "shadows": "pandas_ml.core.series.ModelSeries"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing.PreprocessingMethods": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.preprocessing.PreprocessingMethods._keep_existing_columns": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.preprocessing._keep_col_classes"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing.PreprocessingMethods.add_dummy_feature": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "constructor",
    "func",
    "isinstance",
    "len",
    "pandas_ml.core.frame.ModelFrame",
    "pandas_ml.core.series.ModelSeries"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing._SKLEARN_INSTALLED": {
  "data": {
   "shadows": "pandas_ml.compat._SKLEARN_INSTALLED"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing._keep_col_classes": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.preprocessing._preprocessing_methods": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pandas_ml.skaccessors.preprocessing._wrap_func": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing._wrap_func.f": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "func",
    "isinstance",
    "numpy.atleast_2d",
    "numpy.float",
    "pandas_ml.compat.is_integer_dtype",
    "pandas_ml.core.frame.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.preprocessing.is_integer_dtype": {
  "data": {
   "shadows": "pandas_ml.compat.is_integer_dtype"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.preprocessing.pp": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.svm": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.svm.SVMMethods": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.l1_min_c": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.liblinear": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.libsvm": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.svm.SVMMethods.libsvm_sparse": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.svm._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_base": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_base.TestSklearnBase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_base.TestSklearnBase.test_load_dataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_base.pytest",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_base.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_base.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_base.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_calibration": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_calibration.TestCalibration": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_calibration.TestCalibration.test_objectmapper": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.calibration.CalibratedClassifierCV"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_calibration.calibration": {
  "data": {
   "shadows": "sklearn.calibration"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_calibration.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_calibration.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_Bicluster": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_cluster.pytest",
    "sklearn.cluster.bicluster",
    "sklearn.datasets.make_checkerboard"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_Classifications": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.cluster",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_KMeans": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_cluster.pytest",
    "sklearn.cluster",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_KMeans_scores": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_digits",
    "sklearn.metrics.adjusted_rand_score",
    "sklearn.metrics.completeness_score",
    "sklearn.metrics.homogeneity_score",
    "sklearn.metrics.silhouette_score",
    "sklearn.metrics.v_measure_score",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_affinity_propagation": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "numpy.cov",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cluster.affinity_propagation",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_affinity_propagation_class": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.datasets.samples_generator.make_blobs"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_dbscan": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cluster.dbscan",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_estimate_bandwidth": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.cluster.estimate_bandwidth",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_fit_predict": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_cluster.pytest",
    "sklearn.cluster",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_k_means": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cluster.k_means",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_mean_shift": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cluster.mean_shift",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_objectmapper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.cluster.AffinityPropagation",
    "sklearn.cluster.AgglomerativeClustering",
    "sklearn.cluster.Birch",
    "sklearn.cluster.DBSCAN",
    "sklearn.cluster.FeatureAgglomeration",
    "sklearn.cluster.KMeans",
    "sklearn.cluster.MeanShift",
    "sklearn.cluster.MiniBatchKMeans",
    "sklearn.cluster.SpectralClustering",
    "sklearn.cluster.bicluster.SpectralBiclustering",
    "sklearn.cluster.bicluster.SpectralCoclustering"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_spectral_clustering": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.random.random_integers",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cluster.spectral_clustering",
    "sklearn.metrics",
    "sklearn.metrics.T"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.TestCluster.test_ward_tree": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "pandas_ml.ModelFrame",
    "sklearn.cluster.ward_tree",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cluster.cluster": {
  "data": {
   "shadows": "sklearn.cluster"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.m": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.make_blobs": {
  "data": {
   "shadows": "sklearn.datasets.samples_generator.make_blobs"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.pp": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cluster.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_covariance": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_Covariance": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_covariance.pytest",
    "sklearn.covariance",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_empirical_covariance": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.covariance.empirical_covariance",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_ledoit_wolf": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.covariance.ledoit_wolf",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_oas": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.covariance.oas",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.TestCovariance.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.covariance.EllipticEnvelope",
    "sklearn.covariance.EmpiricalCovariance",
    "sklearn.covariance.GraphLasso",
    "sklearn.covariance.GraphLassoCV",
    "sklearn.covariance.LedoitWolf",
    "sklearn.covariance.MinCovDet",
    "sklearn.covariance.OAS",
    "sklearn.covariance.ShrunkCovariance",
    "sklearn.covariance.graph_lasso",
    "sklearn.covariance.shrunk_covariance"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_covariance.covariance": {
  "data": {
   "shadows": "sklearn.covariance"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_covariance.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_covariance.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_covariance.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_covariance.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_CCA": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.cross_decomposition.CCA"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_CCA_PLSCannonical": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "getattr",
    "numpy.array",
    "numpy.random.normal",
    "pandas.MultiIndex.from_tuples",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_cross_decomposition.pytest",
    "pandas_ml.util.testing.RNGContext",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.cross_decomposition"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_PLSRegression": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dot",
    "numpy.random.normal",
    "pandas_ml.ModelFrame",
    "sklearn.cross_decomposition.PLSRegression"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition.test_objectmapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.cross_decomposition.CCA",
    "sklearn.cross_decomposition.PLSCanonical",
    "sklearn.cross_decomposition.PLSRegression",
    "sklearn.cross_decomposition.PLSSVD"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.cd": {
  "data": {
   "shadows": "sklearn.cross_decomposition"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_cross_decomposition.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_datasets": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_boston": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_boston"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_diabetes": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_diabetes"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_digits": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_iris": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.TestDatasets.test_linnerud": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_datasets.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_datasets.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_datasets.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_decomposition": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_Decompositions_KernelPCA": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_series_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.KernelPCA"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_Decompositions_PCA": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_series_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_dict_learning": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.dict_learning"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_dict_learning_online": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.dict_learning_online"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_fastica": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.fastica"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_fit_transform_KernelPCA": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_series_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.KernelPCA"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_fit_transform_PCA": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_series_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_inverse_transform": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_decomposition.pytest",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.decomposition.DictionaryLearning",
    "sklearn.decomposition.FactorAnalysis",
    "sklearn.decomposition.FastICA",
    "sklearn.decomposition.IncrementalPCA",
    "sklearn.decomposition.KernelPCA",
    "sklearn.decomposition.LatentDirichletAllocation",
    "sklearn.decomposition.MiniBatchDictionaryLearning",
    "sklearn.decomposition.MiniBatchSparsePCA",
    "sklearn.decomposition.NMF",
    "sklearn.decomposition.PCA",
    "sklearn.decomposition.SparseCoder",
    "sklearn.decomposition.SparsePCA",
    "sklearn.decomposition.TruncatedSVD"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition.test_sparse_encode": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.dict_learning",
    "sklearn.decomposition.sparse_encode"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_decomposition.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_decomposition.decomposition": {
  "data": {
   "shadows": "sklearn.decomposition"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_decomposition.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_decomposition.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_decomposition.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis.test_LDA": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_discriminant_analysis.pytest",
    "sklearn.datasets.load_diabetes",
    "sklearn.discriminant_analysis"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis.test_objectmapper": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis.test_objectmapper_deprecated": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "FutureWarning",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_produces_warning",
    "sklearn.discriminant_analysis.LinearDiscriminantAnalysis",
    "sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.da": {
  "data": {
   "shadows": "sklearn.discriminant_analysis"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_discriminant_analysis.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_dummy": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_dummy.TestDummy": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_dummy.TestDummy.test_Classifications": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_dummy.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.dummy"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_dummy.TestDummy.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.dummy.DummyClassifier",
    "sklearn.dummy.DummyRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_dummy.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_dummy.dummy": {
  "data": {
   "shadows": "sklearn.dummy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_dummy.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_dummy.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_dummy.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_ensemble": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_Classifications": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_ensemble.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_GradientBoostingRegression": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.datasets.load_boston",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_Regressions": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_ensemble.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.ensemble"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_objectmapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.ensemble.AdaBoostClassifier",
    "sklearn.ensemble.AdaBoostRegressor",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.ensemble.BaggingRegressor",
    "sklearn.ensemble.ExtraTreesClassifier",
    "sklearn.ensemble.ExtraTreesRegressor",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.GradientBoostingRegressor",
    "sklearn.ensemble.IsolationForest",
    "sklearn.ensemble.RandomForestClassifier",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.ensemble.RandomTreesEmbedding",
    "sklearn.ensemble.VotingClassifier"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_partial_dependence": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "sklearn.ensemble.GradientBoostingClassifier",
    "sklearn.ensemble.partial_dependence.partial_dependence"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble.test_plot_partial_dependence": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_ensemble.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_ensemble.ensemble": {
  "data": {
   "shadows": "sklearn.ensemble"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_ensemble.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_ensemble.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_ensemble.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_ensemble.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.TestFeatureExtraction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.TestFeatureExtraction.test_objectmapper": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.feature_extraction.DictVectorizer",
    "sklearn.feature_extraction.FeatureHasher",
    "sklearn.feature_extraction.image.PatchExtractor",
    "sklearn.feature_extraction.image.extract_patches_2d",
    "sklearn.feature_extraction.image.grid_to_graph",
    "sklearn.feature_extraction.image.img_to_graph",
    "sklearn.feature_extraction.image.reconstruct_from_patches_2d",
    "sklearn.feature_extraction.text.CountVectorizer",
    "sklearn.feature_extraction.text.HashingVectorizer",
    "sklearn.feature_extraction.text.TfidfTransformer",
    "sklearn.feature_extraction.text.TfidfVectorizer"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.fe": {
  "data": {
   "shadows": "sklearn.feature_extraction"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_extraction.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_selection": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_Selection": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_feature_selection.pytest",
    "sklearn.datasets.load_diabetes",
    "sklearn.feature_selection"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_chi2": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.feature_selection.chi2"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_f_classif": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.feature_selection.f_classif"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_f_regression": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_diabetes",
    "sklearn.feature_selection.f_regression"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.feature_selection.GenericUnivariateSelect",
    "sklearn.feature_selection.RFE",
    "sklearn.feature_selection.RFECV",
    "sklearn.feature_selection.SelectFdr",
    "sklearn.feature_selection.SelectFpr",
    "sklearn.feature_selection.SelectFromModel",
    "sklearn.feature_selection.SelectFwe",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.SelectPercentile",
    "sklearn.feature_selection.VarianceThreshold"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.fs": {
  "data": {
   "shadows": "sklearn.feature_selection"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_feature_selection.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "g",
    "numpy.array",
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.GaussianProcessRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D.g": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D_std": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "g",
    "numpy.array",
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.GaussianProcessRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_Gaussian2D_std.g": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_GaussianProcess_ge_018": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.linspace",
    "numpy.sin",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_GaussianProcess_std": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.linspace",
    "numpy.sin",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.RBF"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_constant": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.regression_models.constant"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_linear": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.regression_models.linear"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_objectmapper": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.GaussianProcessRegressor",
    "sklearn.gaussian_process.correlation_models.absolute_exponential",
    "sklearn.gaussian_process.correlation_models.cubic",
    "sklearn.gaussian_process.correlation_models.generalized_exponential",
    "sklearn.gaussian_process.correlation_models.linear",
    "sklearn.gaussian_process.correlation_models.pure_nugget",
    "sklearn.gaussian_process.correlation_models.squared_exponential"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_objectmapper_abbr": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.GaussianProcessClassifier",
    "sklearn.gaussian_process.GaussianProcessRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_objectmapper_kernels": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.kernels.CompoundKernel",
    "sklearn.gaussian_process.kernels.ConstantKernel",
    "sklearn.gaussian_process.kernels.DotProduct",
    "sklearn.gaussian_process.kernels.ExpSineSquared",
    "sklearn.gaussian_process.kernels.Exponentiation",
    "sklearn.gaussian_process.kernels.Hyperparameter",
    "sklearn.gaussian_process.kernels.Kernel",
    "sklearn.gaussian_process.kernels.Matern",
    "sklearn.gaussian_process.kernels.PairwiseKernel",
    "sklearn.gaussian_process.kernels.Product",
    "sklearn.gaussian_process.kernels.RBF",
    "sklearn.gaussian_process.kernels.RationalQuadratic",
    "sklearn.gaussian_process.kernels.Sum",
    "sklearn.gaussian_process.kernels.WhiteKernel"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess.test_quadratic": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas_ml.ModelFrame",
    "sklearn.gaussian_process.regression_models.quadratic"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.gp": {
  "data": {
   "shadows": "sklearn.gaussian_process"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_gaussian_process.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_isotonic": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_IsotonicRegression": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_check_increasing": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "sklearn.isotonic.check_increasing"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_isotonic_regression": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.isotonic.isotonic_regression"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic.test_objectmapper": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.isotonic.IsotonicRegression"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_isotonic.isotonic": {
  "data": {
   "shadows": "sklearn.isotonic"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_isotonic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_isotonic.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_isotonic.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation.test_Classifications": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_kernel_approximation.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.kernel_approximation"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation.test_Classifications_Random": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_kernel_approximation.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.kernel_approximation"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.kernel_approximation.AdditiveChi2Sampler",
    "sklearn.kernel_approximation.Nystroem",
    "sklearn.kernel_approximation.RBFSampler",
    "sklearn.kernel_approximation.SkewedChi2Sampler"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.ka": {
  "data": {
   "shadows": "sklearn.kernel_approximation"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_approximation.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.TestKernelRidge": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.TestKernelRidge.test_objectmapper": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.kernel_ridge.KernelRidge"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.kr": {
  "data": {
   "shadows": "sklearn.kernel_ridge"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_kernel_ridge.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_linear_model": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_LassoCV": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_linear_model.pytest",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.preprocessing.normalize"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_Lasso_Path": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.enet_path",
    "sklearn.linear_model.lars_path",
    "sklearn.linear_model.lasso_path"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_Perceptron": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.Perceptron"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_Regresions": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_linear_model.pytest",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_SGD": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.datasets.load_iris",
    "sklearn.linear_model.SGDClassifier"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_lars_path": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.lars_path"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_lasso_path": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.lasso_path",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_lasso_stability_path": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.lasso_stability_path"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_objectmapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.linear_model.ARDRegression",
    "sklearn.linear_model.BayesianRidge",
    "sklearn.linear_model.ElasticNet",
    "sklearn.linear_model.ElasticNetCV",
    "sklearn.linear_model.HuberRegressor",
    "sklearn.linear_model.Lars",
    "sklearn.linear_model.LarsCV",
    "sklearn.linear_model.Lasso",
    "sklearn.linear_model.LassoCV",
    "sklearn.linear_model.LassoLars",
    "sklearn.linear_model.LassoLarsCV",
    "sklearn.linear_model.LassoLarsIC",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.LogisticRegressionCV",
    "sklearn.linear_model.MultiTaskElasticNet",
    "sklearn.linear_model.MultiTaskElasticNetCV",
    "sklearn.linear_model.MultiTaskLasso",
    "sklearn.linear_model.MultiTaskLassoCV",
    "sklearn.linear_model.OrthogonalMatchingPursuit",
    "sklearn.linear_model.OrthogonalMatchingPursuitCV",
    "sklearn.linear_model.PassiveAggressiveClassifier",
    "sklearn.linear_model.PassiveAggressiveRegressor",
    "sklearn.linear_model.Perceptron",
    "sklearn.linear_model.RANSACRegressor",
    "sklearn.linear_model.RandomizedLasso",
    "sklearn.linear_model.RandomizedLogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.linear_model.RidgeCV",
    "sklearn.linear_model.RidgeClassifier",
    "sklearn.linear_model.RidgeClassifierCV",
    "sklearn.linear_model.SGDClassifier",
    "sklearn.linear_model.SGDRegressor",
    "sklearn.linear_model.TheilSenRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_orthogonal_mp": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.orthogonal_mp"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel.test_orthogonal_mp_gram": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_diabetes",
    "sklearn.linear_model.orthogonal_mp_gram"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_linear_model.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_linear_model.lm": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_linear_model.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_linear_model.pp": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_linear_model.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_linear_model.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_manifold": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_Isomap": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_manifold.pytest",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.manifold"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_MDS": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_manifold.pytest",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.manifold"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_TSNE": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_manifold.pytest",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_digits",
    "sklearn.manifold"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_locally_linear_embedding": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.manifold.locally_linear_embedding"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_objectmapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.manifold.Isomap",
    "sklearn.manifold.LocallyLinearEmbedding",
    "sklearn.manifold.MDS",
    "sklearn.manifold.SpectralEmbedding",
    "sklearn.manifold.TSNE"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.TestManifold.test_spectral_embedding": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.random.random_integers",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.manifold.spectral_embedding"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_manifold.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_manifold.manifold": {
  "data": {
   "shadows": "sklearn.manifold"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_manifold.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_manifold.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_manifold.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_manifold.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_metrics.OneVsRestClassifier": {
  "data": {
   "shadows": "sklearn.multiclass.OneVsRestClassifier"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.setup_method": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_accuracy_score": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_auc": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_average_precision_score": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_classification_report": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "sklearn.metrics.classification_report"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_confusion_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.metrics.confusion_matrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_f1_score": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.f1_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_fbeta_score": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.fbeta_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_fbeta_score_averaging": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.test.test_metrics.pytest",
    "sklearn.metrics.fbeta_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_hamming_loss": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "sklearn.metrics.hamming_loss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_hinge_loss": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sklearn.metrics.hinge_loss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_jaccard_similarity_score": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "sklearn.metrics.jaccard_similarity_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_log_loss": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_make_scorer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.make_scorer"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_matthews_corrcoef": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.compat._SKLEARN_ge_019",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_objectmapper": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.metrics.make_scorer"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_precision_recall_curve": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_precision_recall_fscore_support": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.metrics.precision_recall_fscore_support"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_precision_score": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.precision_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_recall_score": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.recall_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_roc_auc_score": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_roc_curve": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics.test_zero_one_loss": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "sklearn.metrics.zero_one_loss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.setup_method": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_average_precision_score": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.average_precision_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_log_loss": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "sklearn.metrics.log_loss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_matthews_corrcoef": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "sklearn.metrics.matthews_corrcoef"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_precision_recall_curve": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.average_precision_score",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_roc_auc_score": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.roc_auc_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics2Classes.test_roc_curve": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "sklearn.metrics.auc",
    "sklearn.metrics.roc_auc_score",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes.setup_method": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes.test_average_precision_score": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3Classes.test_log_loss": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "sklearn.metrics.log_loss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.setup_method": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_average_precision_score": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.average_precision_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_confusion_matrix": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_hinge_loss": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_log_loss": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "sklearn.metrics.log_loss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_matthews_corrcoef": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.skaccessors.test.test_metrics.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_precision_recall_curve": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "sklearn.metrics.precision_recall_curve"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_roc_auc_score": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "sklearn.metrics.roc_auc_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics3ClassesMultiTargets.test_roc_curve": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pandas.compat.iteritems",
    "sklearn.metrics.roc_curve"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetricsExamples": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetricsExamples.test_hinge_loss": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.setup_method": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.cluster.KMeans",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_adjusted_mutual_info_score": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "sklearn.metrics.adjusted_mutual_info_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_adjusted_rand_score": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "sklearn.metrics.adjusted_rand_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_completeness_score": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "sklearn.metrics.completeness_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_homogeneity_completeness_v_measure": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "sklearn.metrics.homogeneity_completeness_v_measure"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_homogeneity_score": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "sklearn.metrics.homogeneity_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_mutual_info_score": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "sklearn.metrics.mutual_info_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_normalized_mutual_info_score": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "sklearn.metrics.normalized_mutual_info_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_silhouette_samples": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "isinstance",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.metrics.silhouette_samples"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_silhouette_score": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "sklearn.metrics.silhouette_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics.test_v_measure_score": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "sklearn.metrics.v_measure_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon.test_make_scorer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.metrics.fbeta_score",
    "sklearn.metrics.make_scorer"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon.test_objectmapper": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.metrics.make_scorer"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.setup_method": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_explained_variance_score": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "sklearn.metrics.explained_variance_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_mean_absolute_error": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "sklearn.metrics.mean_absolute_error"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_mean_squared_error": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "sklearn.metrics.mean_squared_error"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics.test_r2_score": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "sklearn.metrics.r2_score"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_metrics.cluster": {
  "data": {
   "shadows": "sklearn.cluster"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.compat": {
  "data": {
   "shadows": "pandas.compat"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.pp": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_metrics.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_mixture": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_mixture.TestMixture": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_mixture.TestMixture.test_Classifications": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_mixture.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.mixture"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_mixture.TestMixture.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.mixture.BayesianGaussianMixture",
    "sklearn.mixture.GaussianMixture"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_mixture.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_mixture.mixture": {
  "data": {
   "shadows": "sklearn.mixture"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_mixture.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_mixture.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_mixture.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestHyperParameterOptimizer": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestHyperParameterOptimizer.test_grid_search": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.RNGContext",
    "pandas_ml.util.testing.assert_frame_equal",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection.test_objectmapper": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.ParameterSampler",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.RandomizedSearchCV",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.TimeSeriesSplit"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection.test_objectmapper_abbr": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.GroupKFold",
    "sklearn.model_selection.GroupShuffleSplit",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.LeaveOneOut",
    "sklearn.model_selection.LeavePGroupsOut",
    "sklearn.model_selection.LeavePOut",
    "sklearn.model_selection.ParameterGrid",
    "sklearn.model_selection.ParameterSampler",
    "sklearn.model_selection.PredefinedSplit",
    "sklearn.model_selection.RandomizedSearchCV",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.TimeSeriesSplit"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation.test_learning_curve": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits",
    "sklearn.model_selection.learning_curve",
    "sklearn.naive_bayes.GaussianNB"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation.test_validation_curve": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "len",
    "numpy.logspace",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits",
    "sklearn.model_selection.validation_curve",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_StratifiedShuffleSplit": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "pandas_ml.util.testing.assert_produces_warning",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.StratifiedShuffleSplit",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_check_cv": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.KFold"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_cross_val_score": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits",
    "sklearn.model_selection.cross_val_score",
    "sklearn.svm.SVC",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_iterate": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_produces_warning",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_nested_cross_validation": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "numpy.zeros",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "range",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.GridSearchCV",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_score",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_permutation_test_score": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.model_selection.permutation_test_score",
    "sklearn.svm.SVC",
    "str"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_split": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_split_keep_index": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_train_test_split": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_train_test_split_abbr": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.TestSplitter.test_train_test_split_keep_index": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_model_selection.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.ms": {
  "data": {
   "shadows": "sklearn.model_selection"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.nb": {
  "data": {
   "shadows": "sklearn.naive_bayes"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_model_selection.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multiclass": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass.test_Classifications": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_multiclass.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.multiclass",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass.test_Classifications_Random": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_multiclass.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.multiclass",
    "sklearn.svm.LinearSVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass.test_objectmapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.multiclass.OneVsOneClassifier",
    "sklearn.multiclass.OneVsRestClassifier",
    "sklearn.multiclass.OutputCodeClassifier"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multiclass.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multiclass.multiclass": {
  "data": {
   "shadows": "sklearn.multiclass"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multiclass.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multiclass.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multiclass.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multiclass.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_multioutput.MultiOutputRegressor": {
  "data": {
   "shadows": "sklearn.multioutput.MultiOutputRegressor"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput.RandomForestRegressor": {
  "data": {
   "shadows": "sklearn.ensemble.RandomForestRegressor"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput.test_multioutput": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.sort",
    "pandas.DataFrame",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "sklearn.ensemble.RandomForestRegressor",
    "sklearn.multioutput.MultiOutputRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput.test_objectmapper": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.multioutput.MultiOutputClassifier",
    "sklearn.multioutput.MultiOutputRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_multioutput.multioutput": {
  "data": {
   "shadows": "sklearn.multioutput"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_multioutput.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes.test_Classifications": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_naive_bayes.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.naive_bayes"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.naive_bayes.BernoulliNB",
    "sklearn.naive_bayes.GaussianNB",
    "sklearn.naive_bayes.MultinomialNB"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.nb": {
  "data": {
   "shadows": "sklearn.naive_bayes"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_naive_bayes.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neighbors": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_NearestNeigbors": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_neighbors.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.neighbors"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_Neigbors": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_neighbors.pytest",
    "sklearn.datasets.load_diabetes",
    "sklearn.neighbors"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_kneighbors_graph": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.neighbors.kneighbors_graph"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.neighbors.BallTree",
    "sklearn.neighbors.DistanceMetric",
    "sklearn.neighbors.KDTree",
    "sklearn.neighbors.KNeighborsClassifier",
    "sklearn.neighbors.KNeighborsRegressor",
    "sklearn.neighbors.KernelDensity",
    "sklearn.neighbors.NearestCentroid",
    "sklearn.neighbors.NearestNeighbors",
    "sklearn.neighbors.RadiusNeighborsClassifier",
    "sklearn.neighbors.RadiusNeighborsRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors.test_radius_neighbors_graph": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.neighbors.radius_neighbors_graph"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neighbors.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neighbors.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neighbors.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neighbors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neighbors.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neural_network": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork.test_RBM": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_neural_network.pytest",
    "sklearn.datasets.load_digits",
    "sklearn.neural_network"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.neural_network.BernoulliRBM",
    "sklearn.neural_network.MLPClassifier",
    "sklearn.neural_network.MLPRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_neural_network.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neural_network.nn": {
  "data": {
   "shadows": "sklearn.neural_network"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neural_network.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neural_network.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_neural_network.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_pipeline": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_pipeline.TestPipeline": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_pipeline.TestPipeline.test_Pipeline": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA",
    "sklearn.pipeline.Pipeline"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_pipeline.TestPipeline.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.pipeline.FeatureUnion",
    "sklearn.pipeline.Pipeline",
    "sklearn.pipeline.make_pipeline",
    "sklearn.pipeline.make_union"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_pipeline.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_pipeline.decomposition": {
  "data": {
   "shadows": "sklearn.decomposition"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_pipeline.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_pipeline.pipeline": {
  "data": {
   "shadows": "sklearn.pipeline"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_pipeline.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing._assert_fit_transform": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing._assert_transform": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_FunctionTransformer": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_Imputer": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas_ml.ModelSeries"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelBinarizer": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelBinarizer2": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_frame_equal",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelEncoder_frame": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_LabelEncoder_series": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.array",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_add_dummy_feature": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.add_dummy_feature"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_binarize": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.binarize"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_normalize": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.normalize"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_normalize_abbr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.normalize"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_objectmapper": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.preprocessing.Binarizer",
    "sklearn.preprocessing.FunctionTransformer",
    "sklearn.preprocessing.Imputer",
    "sklearn.preprocessing.KernelCenterer",
    "sklearn.preprocessing.LabelBinarizer",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.preprocessing.MaxAbsScaler",
    "sklearn.preprocessing.MinMaxScaler",
    "sklearn.preprocessing.MultiLabelBinarizer",
    "sklearn.preprocessing.Normalizer",
    "sklearn.preprocessing.OneHotEncoder",
    "sklearn.preprocessing.PolynomialFeatures",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_preprocessing_assignment": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.hstack",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.binarize"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_scale": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing.scale"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_preprocessing.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.preprocessing"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_1d_frame_float": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.array",
    "numpy.float",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.skaccessors.test.test_preprocessing.pytest",
    "sklearn.preprocessing"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_1d_frame_int": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.array",
    "pandas.Index",
    "pandas.compat.PY3",
    "pandas_ml.ModelFrame",
    "sklearn.preprocessing"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_series_float": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "getattr",
    "numpy.array",
    "numpy.float",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_preprocessing.pytest",
    "sklearn.preprocessing"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing.test_transform_series_int": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "getattr",
    "numpy.array",
    "pandas.compat.PY3",
    "pandas_ml.ModelSeries",
    "sklearn.preprocessing"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.pp": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_preprocessing.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_random_projection": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_random_projection.TestRandomProjection": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_random_projection.TestRandomProjection.test_objectmapper": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.random_projection.GaussianRandomProjection",
    "sklearn.random_projection.SparseRandomProjection",
    "sklearn.random_projection.johnson_lindenstrauss_min_dim"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_random_projection.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_random_projection.rp": {
  "data": {
   "shadows": "sklearn.random_projection"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_random_projection.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised.test_Classifications": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_semi_supervised.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.semi_supervised"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.semi_supervised.LabelPropagation",
    "sklearn.semi_supervised.LabelSpreading"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.ss": {
  "data": {
   "shadows": "sklearn.semi_supervised"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_semi_supervised.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_svm": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_Classifications": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_svm.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.svm"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_Regressions_curve": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "getattr",
    "numpy.random.rand",
    "numpy.sin",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_svm.pytest",
    "sklearn.svm"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_Regressions_iris": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_svm.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.svm"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_l1_min_c": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_iris",
    "sklearn.svm.l1_min_c"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.TestSVM.test_objectmapper": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.svm.LinearSVC",
    "sklearn.svm.NuSVC",
    "sklearn.svm.NuSVR",
    "sklearn.svm.OneClassSVM",
    "sklearn.svm.SVC",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_svm.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_svm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_svm.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_svm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_svm.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_svm.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_tree": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree.test_Classifications": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_tree.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.tree"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree.test_Regressions": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.skaccessors.test.test_tree.pytest",
    "sklearn.datasets.load_iris",
    "sklearn.tree"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_tree.TestTree.test_objectmapper": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.tree.DecisionTreeClassifier",
    "sklearn.tree.DecisionTreeRegressor",
    "sklearn.tree.ExtraTreeClassifier",
    "sklearn.tree.ExtraTreeRegressor",
    "sklearn.tree.export_graphviz"
   ]
  },
  "type": "function"
 },
 "pandas_ml.skaccessors.test.test_tree.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_tree.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_tree.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_tree.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.skaccessors.test.test_tree.tree": {
  "data": {
   "shadows": "sklearn.tree"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.smaccessors._maybe_statsmodels_data": {
  "data": {
   "shadows": "pandas_ml.smaccessors.base._maybe_statsmodels_data"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.base": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas_ml.core.base._BaseEstimator",
    "pandas_ml.core.base._RegressorMixin"
   ]
  },
  "type": "class"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.fit": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "statsmodels.api.OLS"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.get_params": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.predict": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.base.StatsModelsRegressor.set_params": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.base._maybe_statsmodels_data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "getattr",
    "hasattr",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "statsmodels.datasets.utils.Dataset"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.base.base": {
  "data": {
   "shadows": "pandas_ml.core.base"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.base.datasets": {
  "data": {
   "shadows": "statsmodels.datasets"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.base.sm": {
  "data": {
   "shadows": "statsmodels.api"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.smaccessors.test.test_base": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.smaccessors.test.test_base.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.SelectKBest": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectKBest"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_GEE": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getattr",
    "klass",
    "numpy.array",
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.datasets.load_diabetes",
    "statsmodels.api",
    "statsmodels.genmod.generalized_estimating_equations.GEEResultsWrapper"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_MixedLM": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "getattr",
    "klass",
    "numpy.array",
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.datasets.load_diabetes",
    "statsmodels.api",
    "statsmodels.regression.mixed_linear_model.MixedLMResultsWrapper"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_OLS": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.datasets.load_diabetes",
    "statsmodels.api.OLS",
    "statsmodels.regression.linear_model.RegressionResultsWrapper"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_Regressions": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr",
    "klass",
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.datasets.load_diabetes",
    "statsmodels.api"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_gridsearch": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.datasets.load_diabetes",
    "sklearn.model_selection.GridSearchCV",
    "statsmodels.api.GLS",
    "statsmodels.api.OLS"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_methods": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.base.clone",
    "statsmodels.api.GLM",
    "statsmodels.api.OLS"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_pipeline": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "getattr",
    "klass",
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "sklearn.datasets.load_diabetes",
    "sklearn.feature_selection.SelectKBest",
    "sklearn.feature_selection.f_regression",
    "sklearn.pipeline.Pipeline",
    "statsmodels.api"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.TestBaseRegressor.test_precict": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.smaccessors.base.StatsModelsRegressor",
    "pandas_ml.smaccessors.test.test_base.pytest",
    "sklearn.datasets.load_diabetes",
    "statsmodels.api.OLS"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_base.base": {
  "data": {
   "shadows": "pandas_ml.smaccessors.base"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.f_regression": {
  "data": {
   "shadows": "sklearn.feature_selection.f_regression"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.geq": {
  "data": {
   "shadows": "statsmodels.genmod.generalized_estimating_equations"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.lm": {
  "data": {
   "shadows": "statsmodels.regression.linear_model"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.mlm": {
  "data": {
   "shadows": "statsmodels.regression.mixed_linear_model"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.ms": {
  "data": {
   "shadows": "sklearn.model_selection"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.sm": {
  "data": {
   "shadows": "statsmodels.api"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_base.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_datasets": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_anes96": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.anes96"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_cancer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.cancer"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_ccard": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.ccard"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_co2": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.co2"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_committee": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.committee"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_copper": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.copper"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_cpunish": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.cpunish"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_elnino": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.elnino"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_engel": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.engel"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_fair": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.fair"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_grunfeld": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.grunfeld"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_heart": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.heart"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_longley": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.longley"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_macrodata": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.macrodata"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_modechoice": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.modechoice"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_nile": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.nile"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_randhie": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.randhie"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_scotland": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.scotland"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_spector": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.spector"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_stackloss": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.stackloss"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_star98": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.star98"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_statecrime": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.statecrime"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_strikes": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "getattr",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_index_equal",
    "statsmodels.api.datasets.strikes"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets.test_sunspots": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.sunspots"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets_LoadPandas": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets"
   ]
  },
  "type": "class"
 },
 "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets_LoadPandas.test_star98": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Exception",
    "pandas_ml.ModelFrame",
    "pandas_ml.compat._PANDAS_ge_023",
    "pandas_ml.smaccessors.test.test_datasets.pytest",
    "statsmodels.api.datasets.star98.load_pandas"
   ]
  },
  "type": "function"
 },
 "pandas_ml.smaccessors.test.test_datasets.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_datasets.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_datasets.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_datasets.sm": {
  "data": {
   "shadows": "statsmodels.api"
  },
  "type": "import"
 },
 "pandas_ml.smaccessors.test.test_datasets.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.snsaccessors.SeabornMethods": {
  "data": {
   "shadows": "pandas_ml.snsaccessors.base.SeabornMethods"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.base": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.core.accessor._attach_methods",
    "pandas_ml.snsaccessors.base.SeabornMethods",
    "pandas_ml.snsaccessors.base._categorical_plots",
    "pandas_ml.snsaccessors.base._data_plots",
    "pandas_ml.snsaccessors.base._wrap_categorical_plot",
    "pandas_ml.snsaccessors.base._wrap_data_plot",
    "pandas_ml.snsaccessors.base._wrap_xy_plot",
    "pandas_ml.snsaccessors.base._xy_plots"
   ]
  },
  "type": "module"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.FacetGrid": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.JointGrid": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.PairGrid": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods._maybe_target_name": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods._maybe_target_series": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "pandas.api.types.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.clustermap": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.coefplot": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.countplot": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.distplot": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.heatmap": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.interactplot": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.kdeplot": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pandas.api.types.is_list_like"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.rugplot": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base.SeabornMethods.tsplot": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.base._attach_methods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._attach_methods"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.base._categorical_plots": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "pandas_ml.snsaccessors.base._data_plots": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "pandas_ml.snsaccessors.base._wrap_categorical_plot": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_categorical_plot.f": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_data_plot": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_data_plot.f": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_xy_plot": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._wrap_xy_plot.f": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.base._xy_plots": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "pandas_ml.snsaccessors.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.snsaccessors.test.test_sns": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib"
   ]
  },
  "type": "module"
 },
 "pandas_ml.snsaccessors.test.test_sns.SeabornCase": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pandas_ml.util.testing.PlottingTestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.SeabornCase.setup_method": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ImportError",
    "int",
    "isinstance",
    "pandas_ml.ModelFrame",
    "pandas_ml.snsaccessors.test.test_sns.nose",
    "sklearn.datasets.load_diabetes",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornAttrs": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pandas_ml.snsaccessors.test.test_sns.SeabornCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornAttrs.test_objectmapper": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "seaborn.axes_style",
    "seaborn.blend_palette",
    "seaborn.choose_colorbrewer_palette",
    "seaborn.choose_cubehelix_palette",
    "seaborn.choose_dark_palette",
    "seaborn.choose_diverging_palette",
    "seaborn.choose_light_palette",
    "seaborn.color_palette",
    "seaborn.crayon_palette",
    "seaborn.cubehelix_palette",
    "seaborn.dark_palette",
    "seaborn.desaturate",
    "seaborn.despine",
    "seaborn.diverging_palette",
    "seaborn.hls_palette",
    "seaborn.husl_palette",
    "seaborn.light_palette",
    "seaborn.mpl_palette",
    "seaborn.palplot",
    "seaborn.plotting_context",
    "seaborn.reset_defaults",
    "seaborn.reset_orig",
    "seaborn.saturate",
    "seaborn.set",
    "seaborn.set_color_codes",
    "seaborn.set_context",
    "seaborn.set_hls_values",
    "seaborn.set_palette",
    "seaborn.xkcd_palette"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pandas_ml.snsaccessors.test.test_sns.SeabornCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_categorical_mean_plots": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "func",
    "getattr",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_categoricalplots": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "func",
    "getattr",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_clustermap": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_count_plots": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "TypeError",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.util.testing.assertRaises",
    "pandas_ml.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_facetgrid": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "pandas_ml.util.testing.close",
    "seaborn.FacetGrid"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_factorplots": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pandas_ml.util.testing.close",
    "seaborn.FacetGrid"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_heatmap": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_jointgrid": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "seaborn.JointGrid"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_pairgrid": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "seaborn.PairGrid"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical.test_tsplot": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pandas_ml.snsaccessors.test.test_sns.SeabornCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_dist_error": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "pandas_ml.snsaccessors.test.test_sns.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_distplot": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_jointplot": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas_ml.util.testing.close",
    "seaborn.JointGrid"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_kde_rug_mix": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib.pyplot"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_kdeplot": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pandas_ml.ModelFrame",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_pairplot": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pandas_ml.util.testing.close",
    "range"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution.test_rugplot": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "pandas_ml.snsaccessors.test.test_sns.matplotlib"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pandas_ml.snsaccessors.test.test_sns.SeabornCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_coefplot": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_interactplot": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_lmplot": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "pandas_ml.util.testing.close",
    "seaborn.FacetGrid"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression.test_regression_plot": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "func",
    "getattr",
    "pandas_ml.snsaccessors.test.test_sns.matplotlib",
    "pandas_ml.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.snsaccessors.test.test_sns.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.matplotlib.pyplot": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "pandas_ml.snsaccessors.test.test_sns.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.test.test_frame": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.test.test_frame.TestModelFrame": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_data_none": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_data_proparty": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_data_proparty_series": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "TypeError",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_delete_proparty": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_array_series": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_duplicated": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_none": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_series": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_df_str": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_dict_list": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_init_dict_list_series_index": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_instance": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_metadata": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas_ml.ModelFrame"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_slice": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_target_object": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.Index",
    "pandas.Series",
    "pandas.Timestamp",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.datetime",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_target_object_set": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.datetime",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_frame_target_proparty": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.compat._PANDAS_ge_023",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_produces_warning",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_predict_automatic": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "UserWarning",
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.test.test_frame.warnings",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_produces_warning",
    "sklearn.datasets.load_iris",
    "sklearn.svm"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_predict_proba": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.datasets.load_iris",
    "sklearn.svm"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrame.test_version": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "pandas_ml.__version__"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_init_df_df": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.test.test_frame.pytest",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_init_df_duplicated_columns": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.MultiIndex.from_tuples",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_init_df_target_setter": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "UserWarning",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_produces_warning"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.TestModelFrameMultiTarges.test_frame_instance": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_frame.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.test.test_frame.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_frame_groupby": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.core.groupby.ModelFrameGroupBy",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_grouped_estimator_PCA": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.core.groupby.GroupedEstimator",
    "pandas_ml.core.groupby.ModelFrameGroupBy",
    "pandas_ml.util.testing.assert_index_equal",
    "range",
    "sklearn.datasets.load_iris",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_grouped_estimator_SVC": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.core.groupby.GroupedEstimator",
    "pandas_ml.core.groupby.ModelFrameGroupBy",
    "pandas_ml.core.groupby.ModelSeriesGroupBy",
    "pandas_ml.util.testing.assert_index_equal",
    "pandas_ml.util.testing.assert_numpy_array_equal",
    "sklearn.datasets.load_iris",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelFrameGroupBy.test_transform_standard": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_groupby.TestModelSeriesGroupBy": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.test.test_groupby.TestModelSeriesGroupBy.test_series_groupby": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas_ml.ModelSeries",
    "pandas_ml.core.groupby.ModelSeriesGroupBy",
    "pandas_ml.util.testing.assert_series_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_groupby.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby.dc": {
  "data": {
   "shadows": "sklearn.decomposition"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby.svm": {
  "data": {
   "shadows": "sklearn.svm"
  },
  "type": "import"
 },
 "pandas_ml.test.test_groupby.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.test.test_series": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.test.test_series.TestModelSeries": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.test.test_series.TestModelSeries.test_preprocessing_normalize": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.float",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal",
    "sklearn.preprocessing.normalize"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_series.TestModelSeries.test_series_instance": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "pandas_ml.ModelSeries"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_series.TestModelSeries.test_series_to_frame": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pandas.Index",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "pandas_ml.util.testing.assert_index_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.test.test_series.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.test.test_series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.test.test_series.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.test.test_series.pp": {
  "data": {
   "shadows": "sklearn.preprocessing"
  },
  "type": "import"
 },
 "pandas_ml.test.test_series.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.tools": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.tools._get_version": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ImportError",
    "pandas_ml.tools.importlib"
   ]
  },
  "type": "function"
 },
 "pandas_ml.tools.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "pandas_ml.tools.info": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas_ml.tools._get_version"
   ]
  },
  "type": "function"
 },
 "pandas_ml.tools.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.util": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.util._is_1d_harray": {
  "data": {
   "shadows": "pandas_ml.util._util._is_1d_harray"
  },
  "type": "import"
 },
 "pandas_ml.util._is_1d_varray": {
  "data": {
   "shadows": "pandas_ml.util._util._is_1d_varray"
  },
  "type": "import"
 },
 "pandas_ml.util._util": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.util._util._is_1d_harray": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util._util._is_1d_varray": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "pandas_ml.compat.plotting._flatten"
   ]
  },
  "type": "module"
 },
 "pandas_ml.util.testing.PlottingTestCase": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.util.testing.PlottingTestCase._check_axes_shape": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.round",
    "pandas_ml.util.testing._flatten"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.PlottingTestCase._flatten_visible": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pandas_ml.util.testing._flatten"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.PlottingTestCase._get_axes_layout": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.PlottingTestCase.teardown_method": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.util.testing.close"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.RNGContext": {
  "data": {
   "shadows": "pandas.util.testing.RNGContext"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.TestCase": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pandas_ml.util.testing.TestCase.assertAlmostEqual": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pandas.util.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertEqual": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertFalse": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertIs": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertIsInstance": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertIsNone": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assertTrue": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.bool_"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.assert_numpy_array_almost_equal": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.format": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.format_values": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pandas_ml.util.testing.TestCase.random_state": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.random.RandomState",
    "property"
   ]
  },
  "type": "function"
 },
 "pandas_ml.util.testing._flatten": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pandas_ml.util.testing.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.assert_index_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_index_equal"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.assert_numpy_array_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_numpy_array_equal"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.assert_produces_warning": {
  "data": {
   "shadows": "pandas.util.testing.assert_produces_warning"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.close": {
  "data": {
   "shadows": "pandas.util.testing.close"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.pandas.plotting._tools": {
  "data": {
   "shadows": "pandas.plotting._tools"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.plotting": {
  "data": {
   "shadows": "pandas_ml.compat.plotting"
  },
  "type": "import"
 },
 "pandas_ml.util.testing.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.version": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "pandas_ml.xgboost": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.xgboost.XGBoostMethods": {
  "data": {
   "shadows": "pandas_ml.xgboost.base.XGBoostMethods"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.base": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.xgboost.base.XGBoostMethods": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "pandas_ml.core.accessor._AccessorMethods"
   ]
  },
  "type": "class"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.XGBClassifier": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property",
    "xgboost.XGBClassifier"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.XGBRegressor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "property",
    "xgboost.XGBRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.plot_importance": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "xgboost.XGBModel",
    "xgboost.plot_importance"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.plot_tree": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "xgboost.XGBModel",
    "xgboost.plot_tree"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.base.XGBoostMethods.to_graphviz": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "xgboost.XGBModel",
    "xgboost.to_graphviz"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.base._AccessorMethods": {
  "data": {
   "shadows": "pandas_ml.core.accessor._AccessorMethods"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.base._to_dmatrix": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "xgboost.DMatrix"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.base.xgb": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test": {
  "data": {},
  "type": "module"
 },
 "pandas_ml.xgboost.test.test_base": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.xgboost.test.test_base.matplotlib"
   ]
  },
  "type": "module"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_XGBClassifier": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "getattr",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "sklearn.datasets.load_iris",
    "xgboost"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_XGBRegressor": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "getattr",
    "numpy.random.rand",
    "numpy.sin",
    "pandas_ml.ModelFrame",
    "pandas_ml.ModelSeries",
    "xgboost"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_grid_search": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas_ml.ModelFrame",
    "pandas_ml.util.testing.RNGContext",
    "pandas_ml.util.testing.assert_frame_equal",
    "sklearn.datasets.load_digits"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.TestXGBoost.test_objectmapper": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "pandas_ml.ModelFrame",
    "xgboost.XGBClassifier",
    "xgboost.XGBRegressor"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_base.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_base.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_base.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_base.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_base.xgb": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting": {
  "data": {
   "symbols_in_volume": [
    "pandas_ml.xgboost.test.test_plotting.matplotlib"
   ]
  },
  "type": "module"
 },
 "pandas_ml.xgboost.test.test_plotting.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.Digraph": {
  "data": {
   "shadows": "graphviz.Digraph"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.TestXGBoostPlotting": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pandas_ml.util.testing.TestCase"
   ]
  },
  "type": "class"
 },
 "pandas_ml.xgboost.test.test_plotting.TestXGBoostPlotting.test_plotting": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "graphviz.Digraph",
    "len",
    "matplotlib.axes.Axes",
    "pandas_ml.ModelFrame",
    "pandas_ml.xgboost.test.test_plotting.nose",
    "pandas_ml.xgboost.test.test_plotting.pytest",
    "sklearn.datasets.load_iris"
   ]
  },
  "type": "function"
 },
 "pandas_ml.xgboost.test.test_plotting.datasets": {
  "data": {
   "shadows": "sklearn.datasets"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.pdml": {
  "data": {
   "shadows": "pandas_ml"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.tm": {
  "data": {
   "shadows": "pandas_ml.util.testing"
  },
  "type": "import"
 },
 "pandas_ml.xgboost.test.test_plotting.xgb": {
  "data": {
   "shadows": "xgboost"
  },
  "type": "import"
 }
}