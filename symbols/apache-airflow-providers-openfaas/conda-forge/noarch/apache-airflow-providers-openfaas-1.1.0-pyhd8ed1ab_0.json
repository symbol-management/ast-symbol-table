{
 "airflow.providers.openfaas": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.openfaas.get_provider_info": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.openfaas.get_provider_info.get_provider_info": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.openfaas.hooks.openfaas": {
  "data": {},
  "type": "module"
 },
 "airflow.providers.openfaas.hooks.openfaas.AirflowException": {
  "data": {
   "shadows": "airflow.exceptions.AirflowException"
  },
  "type": "import"
 },
 "airflow.providers.openfaas.hooks.openfaas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "airflow.providers.openfaas.hooks.openfaas.BaseHook": {
  "data": {
   "shadows": "airflow.hooks.base.BaseHook"
  },
  "type": "import"
 },
 "airflow.providers.openfaas.hooks.openfaas.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "airflow.providers.openfaas.hooks.openfaas.OK_STATUS_CODE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "airflow.hooks.base.BaseHook"
   ]
  },
  "type": "class"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.deploy_function": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.openfaas.hooks.openfaas.OK_STATUS_CODE",
    "airflow.providers.openfaas.hooks.openfaas.requests",
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.does_function_exist": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "airflow.providers.openfaas.hooks.openfaas.requests",
    "bool"
   ]
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.get_conn": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.invoke_async_function": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.openfaas.hooks.openfaas.requests",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.invoke_function": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.openfaas.hooks.openfaas.requests",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.OpenFaasHook.update_function": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "airflow.exceptions.AirflowException",
    "airflow.providers.openfaas.hooks.openfaas.OK_STATUS_CODE",
    "airflow.providers.openfaas.hooks.openfaas.requests",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "airflow.providers.openfaas.hooks.openfaas.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 }
}