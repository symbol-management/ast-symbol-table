{
 "e3fp": {
  "data": {
   "symbols_in_volume": {
    "e3fp.version": {
     "line number": [
      5
     ]
    },
    "e3fp.version_info": {
     "line number": [
      4
     ]
    },
    "str": {
     "line number": [
      4
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "e3fp.config": {
  "data": {},
  "type": "module"
 },
 "e3fp.config.params": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    },
    "e3fp.config.params.CONFIG_DIR": {
     "line number": [
      24
     ]
    },
    "e3fp.config.params.os": {
     "line number": [
      23,
      23,
      24
     ]
    },
    "e3fp.config.params.read_params": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.config.params.CONFIG_DIR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "e3fp.config.params.DEF_PARAM_FILE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "e3fp.config.params.DuplicateSectionError": {
  "data": {
   "shadows": "configparser.DuplicateSectionError"
  },
  "type": "import"
 },
 "e3fp.config.params.NoSectionError": {
  "data": {
   "shadows": "configparser.NoSectionError"
  },
  "type": "import"
 },
 "e3fp.config.params.SafeConfigParser": {
  "data": {
   "shadows": "configparser.SafeConfigParser"
  },
  "type": "import"
 },
 "e3fp.config.params.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "e3fp.config.params.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "e3fp.config.params.default_params": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "e3fp.config.params.get_default_value": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "e3fp.config.params.get_value": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.config.params.get_value": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "SyntaxError": {
     "line number": [
      106
     ]
    },
    "ValueError": {
     "line number": [
      101,
      106,
      119
     ]
    },
    "bool": {
     "line number": [
      114
     ]
    },
    "e3fp.config.params.ast": {
     "line number": [
      105
     ]
    },
    "float": {
     "line number": [
      112
     ]
    },
    "get_function": {
     "line number": [
      118
     ]
    },
    "int": {
     "line number": [
      110
     ]
    },
    "str": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.config.params.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.config.params.params_to_sections_dict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "configparser.NoSectionError": {
     "line number": [
      192
     ]
    },
    "dict": {
     "line number": [
      191
     ]
    },
    "e3fp.config.params.get_value": {
     "line number": [
      196
     ]
    },
    "e3fp.config.params.read_params": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.config.params.read_params": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "configparser.SafeConfigParser": {
     "line number": [
      44,
      53
     ]
    },
    "e3fp.config.params.DEF_PARAM_FILE": {
     "line number": [
      49
     ]
    },
    "e3fp.config.params.copy": {
     "line number": [
      45
     ]
    },
    "isinstance": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.config.params.update_params": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "configparser.DuplicateSectionError": {
     "line number": [
      159
     ]
    },
    "configparser.SafeConfigParser": {
     "line number": [
      152
     ]
    },
    "e3fp.config.params.read_params": {
     "line number": [
      154
     ]
    },
    "str": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.config.params.write_params": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "open": {
     "line number": [
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer": {
  "data": {},
  "type": "module"
 },
 "e3fp.conformer.generate": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      449
     ]
    },
    "bool": {
     "line number": [
      31,
      473
     ]
    },
    "dict": {
     "line number": [
      600
     ]
    },
    "e3fp.config.params.get_default_value": {
     "line number": [
      31,
      32,
      33,
      34,
      37,
      40,
      43,
      44,
      45,
      46
     ]
    },
    "e3fp.conformer.generate.COMPRESS_DEF": {
     "line number": [
      542
     ]
    },
    "e3fp.conformer.generate.FIRST_DEF": {
     "line number": [
      489
     ]
    },
    "e3fp.conformer.generate.FORCEFIELD_DEF": {
     "line number": [
      523
     ]
    },
    "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF": {
     "line number": [
      514
     ]
    },
    "e3fp.conformer.generate.NUM_CONF_DEF": {
     "line number": [
      482
     ]
    },
    "e3fp.conformer.generate.OUTDIR_DEF": {
     "line number": [
      536
     ]
    },
    "e3fp.conformer.generate.POOL_MULTIPLIER_DEF": {
     "line number": [
      498
     ]
    },
    "e3fp.conformer.generate.RMSD_CUTOFF_DEF": {
     "line number": [
      507
     ]
    },
    "e3fp.conformer.generate.SEED_DEF": {
     "line number": [
      529
     ]
    },
    "e3fp.conformer.generate.STANDARDISE_DEF": {
     "line number": [
      474
     ]
    },
    "e3fp.conformer.generate.argparse": {
     "line number": [
      450,
      452
     ]
    },
    "e3fp.conformer.generate.kwargs": {
     "line number": [
      601
     ]
    },
    "e3fp.conformer.generate.params": {
     "line number": [
      600
     ]
    },
    "e3fp.conformer.generate.parser": {
     "line number": [
      454,
      462,
      471,
      478,
      486,
      495,
      503,
      510,
      518,
      526,
      532,
      539,
      549,
      555,
      562,
      567,
      575,
      578,
      585,
      592,
      598
     ]
    },
    "e3fp.conformer.generate.run": {
     "line number": [
      601
     ]
    },
    "e3fp.conformer.generator.FORCEFIELD_CHOICES": {
     "line number": [
      522
     ]
    },
    "float": {
     "line number": [
      38,
      41,
      506,
      513
     ]
    },
    "int": {
     "line number": [
      32,
      33,
      35,
      44,
      481,
      488,
      497,
      528,
      543,
      581
     ]
    },
    "list": {
     "line number": [
      589
     ]
    },
    "python_utilities.parallel.ALL_PARALLEL_MODES": {
     "line number": [
      589
     ]
    },
    "str": {
     "line number": [
      458,
      466,
      521,
      535,
      557,
      569,
      576,
      587
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.conformer.generate.ALL_PARALLEL_MODES": {
  "data": {
   "shadows": "python_utilities.parallel.ALL_PARALLEL_MODES"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.AllChem": {
  "data": {
   "shadows": "rdkit.Chem.AllChem"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.COMPRESS_DEF": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.ConformerGenerator": {
  "data": {
   "shadows": "e3fp.conformer.generator.ConformerGenerator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.FIRST_DEF": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.FORCEFIELD_CHOICES": {
  "data": {
   "shadows": "e3fp.conformer.generator.FORCEFIELD_CHOICES"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.FORCEFIELD_DEF": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.HDF5Buffer": {
  "data": {
   "shadows": "python_utilities.io_tools.HDF5Buffer"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.NUM_CONF_DEF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.OUTDIR_DEF": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.POOL_MULTIPLIER_DEF": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.Parallelizer": {
  "data": {
   "shadows": "python_utilities.parallel.Parallelizer"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.RMSD_CUTOFF_DEF": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.SEED_DEF": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.STANDARDISE_DEF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.generate_conformers": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      160,
      172
     ]
    },
    "e3fp.conformer.generate.COMPRESS_DEF": {
     "line number": [
      63
     ]
    },
    "e3fp.conformer.generate.FIRST_DEF": {
     "line number": [
      54
     ]
    },
    "e3fp.conformer.generate.FORCEFIELD_DEF": {
     "line number": [
      58
     ]
    },
    "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF": {
     "line number": [
      57
     ]
    },
    "e3fp.conformer.generate.NUM_CONF_DEF": {
     "line number": [
      53
     ]
    },
    "e3fp.conformer.generate.OUTDIR_DEF": {
     "line number": [
      61
     ]
    },
    "e3fp.conformer.generate.POOL_MULTIPLIER_DEF": {
     "line number": [
      55
     ]
    },
    "e3fp.conformer.generate.RMSD_CUTOFF_DEF": {
     "line number": [
      56
     ]
    },
    "e3fp.conformer.generate.SEED_DEF": {
     "line number": [
      59
     ]
    },
    "e3fp.conformer.generate.STANDARDISE_DEF": {
     "line number": [
      52
     ]
    },
    "e3fp.conformer.generate.logging": {
     "line number": [
      139,
      142,
      155,
      161,
      169,
      173
     ]
    },
    "e3fp.conformer.generate.os": {
     "line number": [
      134,
      138
     ]
    },
    "e3fp.conformer.generator.ConformerGenerator": {
     "line number": [
      144
     ]
    },
    "e3fp.conformer.util.mol_to_sdf": {
     "line number": [
      168
     ]
    },
    "e3fp.conformer.util.mol_to_standardised_mol": {
     "line number": [
      127
     ]
    },
    "rdkit.Chem.AllChem.CalcNumRotatableBonds": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generate.get_default_value": {
  "data": {
   "shadows": "e3fp.config.params.get_default_value"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.get_value": {
  "data": {
   "shadows": "e3fp.config.params.get_value"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.kwargs": {
  "data": {
   "lineno": 600
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.make_data_iterator": {
  "data": {
   "shadows": "python_utilities.parallel.make_data_iterator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol2_generator": {
  "data": {
   "shadows": "e3fp.conformer.util.mol2_generator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_from_mol2": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_mol2"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_from_smiles": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_smiles"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_to_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_to_sdf"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.mol_to_standardised_mol": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_to_standardised_mol"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.params": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.parser": {
  "data": {
   "lineno": 450
  },
  "type": "constant"
 },
 "e3fp.conformer.generate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.read_params": {
  "data": {
   "shadows": "e3fp.config.params.read_params"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.run": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      292
     ]
    },
    "bool": {
     "line number": [
      275
     ]
    },
    "e3fp.config.params.get_value": {
     "line number": [
      275,
      276,
      277,
      278,
      281,
      284,
      287,
      288
     ]
    },
    "e3fp.config.params.read_params": {
     "line number": [
      274
     ]
    },
    "e3fp.conformer.generate.COMPRESS_DEF": {
     "line number": [
      262
     ]
    },
    "e3fp.conformer.generate.FIRST_DEF": {
     "line number": [
      253
     ]
    },
    "e3fp.conformer.generate.FORCEFIELD_DEF": {
     "line number": [
      257
     ]
    },
    "e3fp.conformer.generate.MAX_ENERGY_DIFF_DEF": {
     "line number": [
      256
     ]
    },
    "e3fp.conformer.generate.NUM_CONF_DEF": {
     "line number": [
      252
     ]
    },
    "e3fp.conformer.generate.OUTDIR_DEF": {
     "line number": [
      261
     ]
    },
    "e3fp.conformer.generate.POOL_MULTIPLIER_DEF": {
     "line number": [
      254
     ]
    },
    "e3fp.conformer.generate.RMSD_CUTOFF_DEF": {
     "line number": [
      255
     ]
    },
    "e3fp.conformer.generate.SEED_DEF": {
     "line number": [
      258
     ]
    },
    "e3fp.conformer.generate.STANDARDISE_DEF": {
     "line number": [
      251
     ]
    },
    "e3fp.conformer.generate.generate_conformers": {
     "line number": [
      430
     ]
    },
    "e3fp.conformer.generate.logging": {
     "line number": [
      304,
      310,
      316,
      329,
      330,
      336,
      337,
      344,
      368,
      376,
      377,
      381,
      384,
      388,
      390,
      392,
      394,
      395,
      396,
      398,
      400,
      405,
      407,
      409
     ]
    },
    "e3fp.conformer.generate.os": {
     "line number": [
      379
     ]
    },
    "e3fp.conformer.generate.sys": {
     "line number": [
      305,
      311,
      319
     ]
    },
    "e3fp.conformer.generate.values_to_hdf5": {
     "line number": [
      442
     ]
    },
    "e3fp.conformer.generator.FORCEFIELD_CHOICES": {
     "line number": [
      291,
      294
     ]
    },
    "e3fp.conformer.util.mol2_generator": {
     "line number": [
      333
     ]
    },
    "e3fp.conformer.util.mol_from_mol2": {
     "line number": [
      332
     ]
    },
    "e3fp.conformer.util.mol_from_smiles": {
     "line number": [
      339
     ]
    },
    "e3fp.conformer.util.smiles_generator": {
     "line number": [
      340
     ]
    },
    "float": {
     "line number": [
      282,
      285
     ]
    },
    "int": {
     "line number": [
      276,
      277,
      279,
      288
     ]
    },
    "iter": {
     "line number": [
      411
     ]
    },
    "len": {
     "line number": [
      330,
      337
     ]
    },
    "python_utilities.io_tools.HDF5Buffer": {
     "line number": [
      434
     ]
    },
    "python_utilities.io_tools.touch_dir": {
     "line number": [
      371
     ]
    },
    "python_utilities.parallel.Parallelizer": {
     "line number": [
      298
     ]
    },
    "python_utilities.parallel.make_data_iterator": {
     "line number": [
      359,
      363
     ]
    },
    "python_utilities.scripting.setup_logging": {
     "line number": [
      271
     ]
    },
    "rdkit.Chem.AllChem.CalcExactMolWt": {
     "line number": [
      353
     ]
    },
    "rdkit.Chem.AllChem.CalcNumRotatableBonds": {
     "line number": [
      352
     ]
    },
    "sorted": {
     "line number": [
      360
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generate.setup_logging": {
  "data": {
   "shadows": "python_utilities.scripting.setup_logging"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.smiles_generator": {
  "data": {
   "shadows": "e3fp.conformer.util.smiles_generator"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.touch_dir": {
  "data": {
   "shadows": "python_utilities.io_tools.touch_dir"
  },
  "type": "import"
 },
 "e3fp.conformer.generate.values_to_hdf5": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "e3fp.conformer.generate.logging": {
     "line number": [
      236,
      241
     ]
    },
    "float": {
     "line number": [
      223,
      229
     ]
    },
    "int": {
     "line number": [
      213,
      214,
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator": {
  "data": {},
  "type": "module"
 },
 "e3fp.conformer.generator.AllChem": {
  "data": {
   "shadows": "rdkit.Chem.AllChem"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.Chem": {
  "data": {
   "shadows": "rdkit.Chem"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.ConformerGenerator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "object": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.conformer.generator.ConformerGenerator.__call__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      114
     ]
    },
    "e3fp.conformer.generator.FIRST_DEF": {
     "line number": [
      58
     ]
    },
    "e3fp.conformer.generator.FORCEFIELD_CHOICES": {
     "line number": [
      113
     ]
    },
    "e3fp.conformer.generator.FORCEFIELD_DEF": {
     "line number": [
      61
     ]
    },
    "e3fp.conformer.generator.MAX_ENERGY_DIFF_DEF": {
     "line number": [
      60
     ]
    },
    "e3fp.conformer.generator.NUM_CONF_DEF": {
     "line number": [
      57
     ]
    },
    "e3fp.conformer.generator.POOL_MULTIPLIER_DEF": {
     "line number": [
      62
     ]
    },
    "e3fp.conformer.generator.RMSD_CUTOFF_DEF": {
     "line number": [
      59
     ]
    },
    "e3fp.conformer.generator.SEED_DEF": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.__repr__": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.__str__": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.embed_molecule": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "e3fp.conformer.generator.logging": {
     "line number": [
      209,
      211,
      212,
      214,
      220,
      231
     ]
    },
    "int": {
     "line number": [
      215
     ]
    },
    "rdkit.Chem.AddHs": {
     "line number": [
      210
     ]
    },
    "rdkit.Chem.AllChem.EmbedMultipleConfs": {
     "line number": [
      223
     ]
    },
    "rdkit.Chem.SanitizeMol": {
     "line number": [
      213
     ]
    },
    "type": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.filter_conformers": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "e3fp.conformer.generator.logging": {
     "line number": [
      311,
      381
     ]
    },
    "enumerate": {
     "line number": [
      323
     ]
    },
    "len": {
     "line number": [
      324
     ]
    },
    "numpy.argsort": {
     "line number": [
      315
     ]
    },
    "numpy.array": {
     "line number": [
      316
     ]
    },
    "numpy.asarray": {
     "line number": [
      382
     ]
    },
    "numpy.bool_": {
     "line number": [
      313
     ]
    },
    "numpy.float": {
     "line number": [
      322,
      349
     ]
    },
    "numpy.int": {
     "line number": [
      382
     ]
    },
    "numpy.ix_": {
     "line number": [
      370
     ]
    },
    "numpy.ones_like": {
     "line number": [
      313
     ]
    },
    "numpy.zeros": {
     "line number": [
      322,
      349
     ]
    },
    "rdkit.Chem.AllChem.GetBestRMS": {
     "line number": [
      352
     ]
    },
    "rdkit.Chem.PropertyMol.PropertyMol": {
     "line number": [
      374
     ]
    },
    "rdkit.Chem.RemoveHs": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.generate_conformers": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      159
     ]
    },
    "add_conformer_energies_to_mol": {
     "line number": [
      166
     ]
    },
    "numpy.triu_indices_from": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.get_conformer_energies": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      293
     ]
    },
    "numpy.empty": {
     "line number": [
      292
     ]
    },
    "numpy.float": {
     "line number": [
      292
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.get_molecule_force_field": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      259
     ]
    },
    "rdkit.Chem.AllChem.MMFFGetMoleculeForceField": {
     "line number": [
      255
     ]
    },
    "rdkit.Chem.AllChem.MMFFGetMoleculeProperties": {
     "line number": [
      252
     ]
    },
    "rdkit.Chem.AllChem.MMFFSanitizeMolecule": {
     "line number": [
      251
     ]
    },
    "rdkit.Chem.AllChem.UFFGetMoleculeForceField": {
     "line number": [
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.get_num_conformers": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "rdkit.Chem.AllChem.CalcNumRotatableBonds": {
     "line number": [
      191
     ]
    },
    "staticmethod": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.minimize_conformers": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "e3fp.conformer.generator.logging": {
     "line number": [
      272,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.ConformerGenerator.reverse_enumerate": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "len": {
     "line number": [
      397
     ]
    },
    "range": {
     "line number": [
      397
     ]
    },
    "reversed": {
     "line number": [
      397,
      397
     ]
    },
    "staticmethod": {
     "line number": [
      384
     ]
    },
    "zip": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.generator.FIRST_DEF": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.FORCEFIELD_CHOICES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.FORCEFIELD_DEF": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.MAX_ENERGY_DIFF_DEF": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.NUM_CONF_DEF": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.POOL_MULTIPLIER_DEF": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.PropertyMol": {
  "data": {
   "shadows": "rdkit.Chem.PropertyMol"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.RMSD_CUTOFF_DEF": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.SEED_DEF": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.__author__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.__copyright__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.__license__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "e3fp.conformer.generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.conformer.generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation": {
  "data": {},
  "type": "module"
 },
 "e3fp.conformer.protonation._chunk_iter_to_lists": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "len": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.smiles_dict_to_proto_smiles_dict": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "MolItemName": {
     "line number": [
      56
     ]
    },
    "e3fp.conformer.protonation._chunk_iter_to_lists": {
     "line number": [
      36
     ]
    },
    "e3fp.conformer.protonation.itertools": {
     "line number": [
      49
     ]
    },
    "e3fp.conformer.protonation.logging": {
     "line number": [
      58
     ]
    },
    "e3fp.conformer.protonation.smiles_list_to_proto_smiles_list": {
     "line number": [
      31,
      43
     ]
    },
    "iter": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.smiles_list_to_proto_smiles_list": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      112
     ]
    },
    "MolItemName": {
     "line number": [
      106
     ]
    },
    "ValueError": {
     "line number": [
      97
     ]
    },
    "e3fp.conformer.protonation.logging": {
     "line number": [
      78,
      98,
      111,
      113
     ]
    },
    "e3fp.conformer.protonation.os": {
     "line number": [
      116
     ]
    },
    "e3fp.conformer.protonation.subprocess": {
     "line number": [
      79,
      85
     ]
    },
    "e3fp.conformer.protonation.tempfile": {
     "line number": [
      73
     ]
    },
    "float": {
     "line number": [
      105
     ]
    },
    "iter": {
     "line number": [
      90
     ]
    },
    "iter_to_smiles": {
     "line number": [
      74
     ]
    },
    "next": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.smiles_to_proto_smiles": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "MolItemName": {
     "line number": [
      150
     ]
    },
    "OSError": {
     "line number": [
      156
     ]
    },
    "ValueError": {
     "line number": [
      144
     ]
    },
    "e3fp.conformer.protonation.logging": {
     "line number": [
      127,
      145,
      155,
      157
     ]
    },
    "e3fp.conformer.protonation.subprocess": {
     "line number": [
      128,
      134
     ]
    },
    "float": {
     "line number": [
      149
     ]
    },
    "iter": {
     "line number": [
      139
     ]
    },
    "next": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.conformer.protonation.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "e3fp.conformer.protonation.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "e3fp.fingerprint": {
  "data": {},
  "type": "module"
 },
 "e3fp.fingerprint.array_ops": {
  "data": {
   "symbols_in_volume": {
    "numpy.float64": {
     "line number": [
      9,
      10
     ]
    },
    "numpy.identity": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.fingerprint.array_ops.EPS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "e3fp.fingerprint.array_ops.QUATERNION_DTYPE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "e3fp.fingerprint.array_ops.as_unit": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.EPS": {
     "line number": [
      32,
      40
     ]
    },
    "numpy.array": {
     "line number": [
      29
     ]
    },
    "numpy.einsum": {
     "line number": [
      36,
      38
     ]
    },
    "numpy.expand_dims": {
     "line number": [
      41
     ]
    },
    "numpy.float64": {
     "line number": [
      29
     ]
    },
    "numpy.sqrt": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.calculate_angles": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      253,
      254
     ]
    },
    "e3fp.fingerprint.array_ops.rotate_angles": {
     "line number": [
      263
     ]
    },
    "numpy.all": {
     "line number": [
      257
     ]
    },
    "numpy.arccos": {
     "line number": [
      255
     ]
    },
    "numpy.clip": {
     "line number": [
      255
     ]
    },
    "numpy.cross": {
     "line number": [
      260
     ]
    },
    "numpy.dot": {
     "line number": [
      255,
      260
     ]
    },
    "numpy.pi": {
     "line number": [
      263
     ]
    },
    "numpy.sign": {
     "line number": [
      259
     ]
    },
    "numpy.zeros": {
     "line number": [
      257
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.make_distance_matrix": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": {
    "scipy.spatial.distance.pdist": {
     "line number": [
      57
     ]
    },
    "scipy.spatial.distance.squareform": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.make_rotation_matrix": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      116,
      117
     ]
    },
    "numpy.all": {
     "line number": [
      119
     ]
    },
    "numpy.array": {
     "line number": [
      125
     ]
    },
    "numpy.cross": {
     "line number": [
      118
     ]
    },
    "numpy.dot": {
     "line number": [
      123
     ]
    },
    "numpy.float64": {
     "line number": [
      120,
      127,
      130
     ]
    },
    "numpy.identity": {
     "line number": [
      120,
      130
     ]
    },
    "numpy.outer": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.make_transform_matrix": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      92
     ]
    },
    "e3fp.fingerprint.array_ops.make_rotation_matrix": {
     "line number": [
      88,
      93,
      96
     ]
    },
    "numpy.asarray": {
     "line number": [
      83
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      85,
      90
     ]
    },
    "numpy.cross": {
     "line number": [
      92
     ]
    },
    "numpy.dot": {
     "line number": [
      94,
      97,
      98
     ]
    },
    "numpy.float64": {
     "line number": [
      82,
      83,
      87,
      91,
      95
     ]
    },
    "numpy.identity": {
     "line number": [
      82,
      87,
      91,
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.fingerprint.array_ops.pad_array": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "list": {
     "line number": [
      175
     ]
    },
    "numpy.ones": {
     "line number": [
      172,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "e3fp.fingerprint.array_ops.project_to_plane": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      220
     ]
    },
    "numpy.array": {
     "line number": [
      223
     ]
    },
    "numpy.dot": {
     "line number": [
      221
     ]
    },
    "numpy.tile": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.quaternion_to_transform_matrix": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      294,
      301
     ]
    },
    "numpy.float64": {
     "line number": [
      294,
      297,
      306
     ]
    },
    "numpy.identity": {
     "line number": [
      297
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      295
     ]
    },
    "numpy.outer": {
     "line number": [
      299
     ]
    },
    "numpy.zeros": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.rotate_angles": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "e3fp.fingerprint.array_ops.transform_array": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.pad_array": {
     "line number": [
      151
     ]
    },
    "e3fp.fingerprint.array_ops.unpad_array": {
     "line number": [
      151
     ]
    },
    "numpy.dot": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.transform_matrix_to_quaternion": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.QUATERNION_DTYPE": {
     "line number": [
      313
     ]
    },
    "numpy.array": {
     "line number": [
      323
     ]
    },
    "numpy.float64": {
     "line number": [
      323
     ]
    },
    "numpy.sqrt": {
     "line number": [
      326
     ]
    },
    "numpy.zeros": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.array_ops.unpad_array": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": {
    "list": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      377
     ]
    },
    "bool": {
     "line number": [
      30,
      31,
      33,
      36,
      39,
      42,
      426,
      432
     ]
    },
    "dict": {
     "line number": [
      512
     ]
    },
    "e3fp.config.params.get_default_value": {
     "line number": [
      25,
      26,
      29,
      30,
      31,
      32,
      35,
      38,
      41
     ]
    },
    "e3fp.fingerprint.fprinter.BITS": {
     "line number": [
      393
     ]
    },
    "e3fp.fingerprint.generate.COUNTS_DEF": {
     "line number": [
      433
     ]
    },
    "e3fp.fingerprint.generate.FIRST_DEF": {
     "line number": [
      401
     ]
    },
    "e3fp.fingerprint.generate.LEVEL_DEF": {
     "line number": [
      410
     ]
    },
    "e3fp.fingerprint.generate.OUT_EXT_DEF": {
     "line number": [
      463
     ]
    },
    "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF": {
     "line number": [
      420
     ]
    },
    "e3fp.fingerprint.generate.STEREO_DEF": {
     "line number": [
      427
     ]
    },
    "e3fp.fingerprint.generate.argparse": {
     "line number": [
      378,
      380
     ]
    },
    "e3fp.fingerprint.generate.kwargs": {
     "line number": [
      513,
      514
     ]
    },
    "e3fp.fingerprint.generate.params": {
     "line number": [
      512
     ]
    },
    "e3fp.fingerprint.generate.parser": {
     "line number": [
      382,
      389,
      398,
      405,
      415,
      424,
      430,
      437,
      451,
      460,
      467,
      475,
      481,
      487,
      490,
      497,
      504,
      510
     ]
    },
    "e3fp.fingerprint.generate.run": {
     "line number": [
      514
     ]
    },
    "e3fp.fingerprint.generate.sdf_files": {
     "line number": [
      514
     ]
    },
    "float": {
     "line number": [
      27,
      419
     ]
    },
    "int": {
     "line number": [
      25,
      29,
      392,
      400,
      409,
      493
     ]
    },
    "list": {
     "line number": [
      501
     ]
    },
    "python_utilities.parallel.ALL_PARALLEL_MODES": {
     "line number": [
      501
     ]
    },
    "str": {
     "line number": [
      385,
      439,
      454,
      462,
      470,
      488,
      499
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.fingerprint.generate.ALL_PARALLEL_MODES": {
  "data": {
   "shadows": "python_utilities.parallel.ALL_PARALLEL_MODES"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.BITS": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.BITS"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.COUNTS_DEF": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.EXCLUDE_FLOATING_DEF": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.FIRST_DEF": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.FingerprintDatabase": {
  "data": {
   "shadows": "e3fp.fingerprint.db.FingerprintDatabase"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.Fingerprinter": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.Fingerprinter"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.INCLUDE_DISCONNECTED_DEF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.LEVEL_DEF": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.MolItemName": {
  "data": {
   "shadows": "e3fp.conformer.util.MolItemName"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.OUT_EXT_DEF": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.Parallelizer": {
  "data": {
   "shadows": "python_utilities.parallel.Parallelizer"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.RDKIT_INVARIANTS_DEF": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.REMOVE_DUPLICATE_SUBSTRUCTS_DEF": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.STEREO_DEF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.fp": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.fprints_dict_from_mol": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      204,
      217,
      230
     ]
    },
    "e3fp.conformer.util.MolItemName.from_str": {
     "line number": [
      197
     ]
    },
    "e3fp.fingerprint.fprint.savez": {
     "line number": [
      215,
      228
     ]
    },
    "e3fp.fingerprint.fprinter.BITS": {
     "line number": [
      63,
      135
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      169
     ]
    },
    "e3fp.fingerprint.generate.COUNTS_DEF": {
     "line number": [
      67
     ]
    },
    "e3fp.fingerprint.generate.EXCLUDE_FLOATING_DEF": {
     "line number": [
      71
     ]
    },
    "e3fp.fingerprint.generate.FIRST_DEF": {
     "line number": [
      66
     ]
    },
    "e3fp.fingerprint.generate.INCLUDE_DISCONNECTED_DEF": {
     "line number": [
      69
     ]
    },
    "e3fp.fingerprint.generate.LEVEL_DEF": {
     "line number": [
      64
     ]
    },
    "e3fp.fingerprint.generate.OUT_EXT_DEF": {
     "line number": [
      74
     ]
    },
    "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF": {
     "line number": [
      65
     ]
    },
    "e3fp.fingerprint.generate.RDKIT_INVARIANTS_DEF": {
     "line number": [
      70
     ]
    },
    "e3fp.fingerprint.generate.REMOVE_DUPLICATE_SUBSTRUCTS_DEF": {
     "line number": [
      72
     ]
    },
    "e3fp.fingerprint.generate.STEREO_DEF": {
     "line number": [
      68
     ]
    },
    "e3fp.fingerprint.generate.logging": {
     "line number": [
      163,
      183,
      201,
      205,
      216,
      218,
      229,
      231
     ]
    },
    "e3fp.fingerprint.generate.os": {
     "line number": [
      147,
      149,
      155,
      159
     ]
    },
    "enumerate": {
     "line number": [
      184
     ]
    },
    "max": {
     "line number": [
      213
     ]
    },
    "python_utilities.io_tools.touch_dir": {
     "line number": [
      145,
      154
     ]
    },
    "range": {
     "line number": [
      152,
      190,
      194
     ]
    },
    "sorted": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate.fprints_dict_from_sdf": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      54
     ]
    },
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      53
     ]
    },
    "e3fp.fingerprint.generate.fprints_dict_from_mol": {
     "line number": [
      57
     ]
    },
    "e3fp.fingerprint.generate.logging": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate.get_default_value": {
  "data": {
   "shadows": "e3fp.config.params.get_default_value"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.get_value": {
  "data": {
   "shadows": "e3fp.config.params.get_value"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.kwargs": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.make_data_iterator": {
  "data": {
   "shadows": "python_utilities.parallel.make_data_iterator"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.mol_from_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_sdf"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.params": {
  "data": {
   "lineno": 510
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.parser": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.read_params": {
  "data": {
   "shadows": "e3fp.config.params.read_params"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.run": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      361
     ]
    },
    "ValueError": {
     "line number": [
      361
     ]
    },
    "bool": {
     "line number": [
      276,
      277,
      279,
      282,
      285,
      288
     ]
    },
    "e3fp.config.params.get_value": {
     "line number": [
      270,
      271,
      272,
      273,
      276,
      277,
      278,
      281,
      284,
      287
     ]
    },
    "e3fp.config.params.read_params": {
     "line number": [
      269
     ]
    },
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      365
     ]
    },
    "e3fp.fingerprint.fprinter.BITS": {
     "line number": [
      244
     ]
    },
    "e3fp.fingerprint.generate.COUNTS_DEF": {
     "line number": [
      248
     ]
    },
    "e3fp.fingerprint.generate.EXCLUDE_FLOATING_DEF": {
     "line number": [
      252
     ]
    },
    "e3fp.fingerprint.generate.FIRST_DEF": {
     "line number": [
      245
     ]
    },
    "e3fp.fingerprint.generate.INCLUDE_DISCONNECTED_DEF": {
     "line number": [
      250
     ]
    },
    "e3fp.fingerprint.generate.LEVEL_DEF": {
     "line number": [
      246
     ]
    },
    "e3fp.fingerprint.generate.OUT_EXT_DEF": {
     "line number": [
      256
     ]
    },
    "e3fp.fingerprint.generate.RADIUS_MULTIPLIER_DEF": {
     "line number": [
      247
     ]
    },
    "e3fp.fingerprint.generate.RDKIT_INVARIANTS_DEF": {
     "line number": [
      251
     ]
    },
    "e3fp.fingerprint.generate.REMOVE_DUPLICATE_SUBSTRUCTS_DEF": {
     "line number": [
      253
     ]
    },
    "e3fp.fingerprint.generate.STEREO_DEF": {
     "line number": [
      249
     ]
    },
    "e3fp.fingerprint.generate.fprints_dict_from_sdf": {
     "line number": [
      353
     ]
    },
    "e3fp.fingerprint.generate.logging": {
     "line number": [
      294,
      295,
      304,
      306,
      307,
      309,
      312,
      313,
      314,
      315,
      318,
      320,
      322,
      324,
      325,
      326,
      368
     ]
    },
    "e3fp.fingerprint.generate.os": {
     "line number": [
      297
     ]
    },
    "e3fp.fingerprint.generate.sys": {
     "line number": [
      311
     ]
    },
    "float": {
     "line number": [
      274
     ]
    },
    "glob.glob": {
     "line number": [
      300
     ]
    },
    "int": {
     "line number": [
      270,
      271,
      272
     ]
    },
    "iter": {
     "line number": [
      328
     ]
    },
    "len": {
     "line number": [
      297,
      304,
      364
     ]
    },
    "list": {
     "line number": [
      374
     ]
    },
    "max": {
     "line number": [
      360
     ]
    },
    "python_utilities.parallel.Parallelizer": {
     "line number": [
      291
     ]
    },
    "python_utilities.parallel.make_data_iterator": {
     "line number": [
      302
     ]
    },
    "python_utilities.scripting.setup_logging": {
     "line number": [
      266
     ]
    },
    "type": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.generate.sdf_files": {
  "data": {
   "lineno": 513
  },
  "type": "constant"
 },
 "e3fp.fingerprint.generate.setup_logging": {
  "data": {
   "shadows": "python_utilities.scripting.setup_logging"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "e3fp.fingerprint.generate.touch_dir": {
  "data": {
   "shadows": "python_utilities.io_tools.touch_dir"
  },
  "type": "import"
 },
 "e3fp.fingerprint.metrics.fprint_metrics": {
  "data": {},
  "type": "module"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.cosine": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      120
     ]
    },
    "sum": {
     "line number": [
      114,
      116,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.dice": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      95
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.distance": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.fprint_metrics.hamming": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.hamming": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.intersect1d": {
     "line number": [
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.pearson": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      143
     ]
    },
    "sum": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.soergel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      66
     ]
    },
    "diff_counts_dict": {
     "line number": [
      63
     ]
    },
    "e3fp.fingerprint.metrics.fprint_metrics.tanimoto": {
     "line number": [
      61
     ]
    },
    "isinstance": {
     "line number": [
      59,
      59
     ]
    },
    "max": {
     "line number": [
      66
     ]
    },
    "numpy.asarray": {
     "line number": [
      64
     ]
    },
    "numpy.float": {
     "line number": [
      69
     ]
    },
    "numpy.sum": {
     "line number": [
      71,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.metrics.fprint_metrics.tanimoto": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "ZeroDivisionError": {
     "line number": [
      31
     ]
    },
    "numpy.intersect1d": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.fingerprint.util": {
  "data": {},
  "type": "module"
 },
 "e3fp.fingerprint.util.E3FPBitsValueError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPCountsError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPInvalidFingerprintError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPMolError": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.fingerprint.util.E3FPOptionError": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.pipeline": {
  "data": {},
  "type": "module"
 },
 "e3fp.pipeline.confs_from_smiles": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "generate_conformers": {
     "line number": [
      28
     ]
    },
    "mol_from_smiles": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_fprints_dict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "max": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_mol": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "e3fp.pipeline.fprints_from_fprints_dict": {
     "line number": [
      59
     ]
    },
    "fprints_dict_from_mol": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_sdf": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "e3fp.pipeline.fprints_from_mol": {
     "line number": [
      81
     ]
    },
    "mol_from_sdf": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.pipeline.fprints_from_smiles": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "e3fp.pipeline.confs_from_smiles": {
     "line number": [
      69
     ]
    },
    "e3fp.pipeline.fprints_from_mol": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.pipeline.params_to_dicts": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "params_to_sections_dict": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.pipeline.sdf_from_smiles": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "e3fp.pipeline.confs_from_smiles": {
     "line number": [
      39
     ]
    },
    "mol_to_sdf": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test": {
  "data": {},
  "type": "module"
 },
 "e3fp.test.test_config": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      17
     ]
    },
    "e3fp.test.test_config.unittest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_config.ConfigTestCases": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "e3fp.test.test_config.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_config.ConfigTestCases.test_config_file_exists": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "e3fp.config.params.DEF_PARAM_FILE": {
     "line number": [
      14
     ]
    },
    "e3fp.test.test_config.os": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_config.DEF_PARAM_FILE": {
  "data": {
   "shadows": "e3fp.config.params.DEF_PARAM_FILE"
  },
  "type": "import"
 },
 "e3fp.test.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_config.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      79
     ]
    },
    "e3fp.test.test_conformer.unittest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_conformer.AllChem": {
  "data": {
   "shadows": "rdkit.Chem.AllChem"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.ConformerTestCases": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "e3fp.test.test_conformer.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_conformer.ConformerTestCases.test_default_is_unseeded": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "e3fp.conformer.generate.generate_conformers": {
     "line number": [
      38
     ]
    },
    "e3fp.conformer.util.mol_from_smiles": {
     "line number": [
      36
     ]
    },
    "range": {
     "line number": [
      39,
      43,
      44
     ]
    },
    "rdkit.Chem.AllChem.GetBestRMS": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_conformer.ConformerTestCases.test_seed_produces_same_conformers": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "e3fp.conformer.generate.generate_conformers": {
     "line number": [
      65
     ]
    },
    "e3fp.conformer.util.mol_from_smiles": {
     "line number": [
      63
     ]
    },
    "range": {
     "line number": [
      66,
      70,
      71
     ]
    },
    "rdkit.Chem.AllChem.GetBestRMS": {
     "line number": [
      72
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_conformer.ConformerTestCases.test_standardisation": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_smiles": {
     "line number": [
      18
     ]
    },
    "e3fp.conformer.util.mol_to_standardised_mol": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_conformer.generate_conformers": {
  "data": {
   "shadows": "e3fp.conformer.generate.generate_conformers"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.mol_from_smiles": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_smiles"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.mol_to_standardised_mol": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_to_standardised_mol"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.rdkit.Chem": {
  "data": {
   "shadows": "rdkit.Chem"
  },
  "type": "import"
 },
 "e3fp.test.test_conformer.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      45
     ]
    },
    "e3fp.test.test_dependencies.unittest": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_dependencies.OptionalFeatureDependenciesTestCase": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "e3fp.test.test_dependencies.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_dependencies.OptionalFeatureDependenciesTestCase.test_h5py": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.OptionalFeatureDependenciesTestCase.test_standardiser": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.OptionalParallelDependenciesTestCase": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "e3fp.test.test_dependencies.unittest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_dependencies.OptionalParallelDependenciesTestCase.test_concurrent": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.OptionalParallelDependenciesTestCase.test_mpi4py": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.OptionalParallelDependenciesTestCase.test_python_utilities": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.RequiredDependenciesTestCase": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "e3fp.test.test_dependencies.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_dependencies.RequiredDependenciesTestCase.test_murmurhash": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.RequiredDependenciesTestCase.test_numpy": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.RequiredDependenciesTestCase.test_python_utilities": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.RequiredDependenciesTestCase.test_rdkit": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.RequiredDependenciesTestCase.test_scipy": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "e3fp.test.test_dependencies.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.mmh3": {
  "data": {
   "shadows": "mmh3"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.mpi4py": {
  "data": {
   "shadows": "mpi4py"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.python_utilities": {
  "data": {
   "shadows": "python_utilities"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.python_utilities.parallel": {
  "data": {
   "shadows": "python_utilities.parallel"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.rdkit": {
  "data": {
   "shadows": "rdkit"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.standardiser": {
  "data": {
   "shadows": "standardiser"
  },
  "type": "import"
 },
 "e3fp.test.test_dependencies.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      142
     ]
    },
    "e3fp.test.test_fingerprint.unittest": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_fingerprint.CountFingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.CountFingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.Fingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.Fingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.FingerprintAlgebraTestCases": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprint.unittest": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprint.FingerprintComparisonTestCases": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprint.unittest": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprint.unittest": {
     "line number": [
      9
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_basic_properties": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      124
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      124
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      124
     ]
    },
    "float": {
     "line number": [
      130
     ]
    },
    "int": {
     "line number": [
      123
     ]
    },
    "len": {
     "line number": [
      127
     ]
    },
    "numpy.random.randint": {
     "line number": [
      121,
      123
     ]
    },
    "numpy.unique": {
     "line number": [
      122
     ]
    },
    "range": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_bitstring_io": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      75
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      75
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_countfprint_from_counts": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint.from_counts": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_floatfprint_from_counts": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.FloatFingerprint.from_counts": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_fprint_from_fprint": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      30
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      30
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_fprint_from_indices": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      17
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      17
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      17
     ]
    },
    "sorted": {
     "line number": [
      21,
      21
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_rdkit_io": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      102
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      102
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_unique_indices": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      62
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      62
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      62
     ]
    },
    "set": {
     "line number": [
      66
     ]
    },
    "sorted": {
     "line number": [
      66,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FingerprintIOTestCases.test_vector_io": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      89
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      89
     ]
    },
    "e3fp.fingerprint.fprint.FloatFingerprint": {
     "line number": [
      89
     ]
    },
    "numpy.array": {
     "line number": [
      90
     ]
    },
    "numpy.bool_": {
     "line number": [
      90
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprint.FloatFingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.FloatFingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprint.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      12
     ]
    },
    "__name__": {
     "line number": [
      952
     ]
    },
    "e3fp.test.test_fingerprinting.DATA_DIR": {
     "line number": [
      18,
      19,
      20,
      21,
      22
     ]
    },
    "e3fp.test.test_fingerprinting.os": {
     "line number": [
      17,
      17,
      18,
      19,
      20,
      21,
      22
     ]
    },
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      953
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      319
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases.test_rot_matrix_array_rotation_correct": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      333,
      338
     ]
    },
    "e3fp.fingerprint.array_ops.make_rotation_matrix": {
     "line number": [
      336
     ]
    },
    "numpy.dot": {
     "line number": [
      337
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      333,
      334
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      339
     ]
    },
    "range": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases.test_rot_matrix_vector_rotation_correct": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      324,
      325
     ]
    },
    "e3fp.fingerprint.array_ops.make_rotation_matrix": {
     "line number": [
      326
     ]
    },
    "numpy.dot": {
     "line number": [
      327
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      324,
      325
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      327
     ]
    },
    "range": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases.test_transform_matrix_rotation_only_correct": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten": {
     "line number": [
      359
     ]
    },
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      357
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      354
     ]
    },
    "e3fp.fingerprint.array_ops.pad_array": {
     "line number": [
      355
     ]
    },
    "e3fp.fingerprint.array_ops.unpad_array": {
     "line number": [
      356
     ]
    },
    "numpy.dot": {
     "line number": [
      356
     ]
    },
    "numpy.float": {
     "line number": [
      351
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      352
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      358
     ]
    },
    "numpy.zeros": {
     "line number": [
      351
     ]
    },
    "range": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases.test_transform_matrix_with_translation_correct": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten": {
     "line number": [
      382
     ]
    },
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      379
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      375
     ]
    },
    "e3fp.fingerprint.array_ops.pad_array": {
     "line number": [
      376
     ]
    },
    "e3fp.fingerprint.array_ops.unpad_array": {
     "line number": [
      377
     ]
    },
    "numpy.dot": {
     "line number": [
      377
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      372
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      380,
      381
     ]
    },
    "numpy.zeros": {
     "line number": [
      380
     ]
    },
    "range": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases.test_two_axis_transform_correct1": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten": {
     "line number": [
      407
     ]
    },
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      403,
      404
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      399
     ]
    },
    "e3fp.fingerprint.array_ops.pad_array": {
     "line number": [
      400
     ]
    },
    "e3fp.fingerprint.array_ops.unpad_array": {
     "line number": [
      401
     ]
    },
    "numpy.dot": {
     "line number": [
      401
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      395
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      405,
      406
     ]
    },
    "numpy.zeros": {
     "line number": [
      405
     ]
    },
    "range": {
     "line number": [
      394
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ArrayVectorTestCases.test_two_axis_transform_correct2": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.Y_AXIS.flatten": {
     "line number": [
      431
     ]
    },
    "e3fp.fingerprint.array_ops.as_unit": {
     "line number": [
      427,
      428
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      424
     ]
    },
    "e3fp.fingerprint.array_ops.transform_array": {
     "line number": [
      425
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      420
     ]
    },
    "numpy.testing.assert_array_almost_equal": {
     "line number": [
      429,
      430
     ]
    },
    "numpy.zeros": {
     "line number": [
      429
     ]
    },
    "range": {
     "line number": [
      419
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.AtomInvariantTestCases": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      932
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.AtomInvariantTestCases.test_daylight_invariants": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      937
     ]
    },
    "e3fp.fingerprint.fprinter.invariants_from_atom": {
     "line number": [
      939
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      937
     ]
    },
    "list": {
     "line number": [
      940
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.AtomInvariantTestCases.test_rdkit_invariants": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      946
     ]
    },
    "e3fp.fingerprint.fprinter.rdkit_invariants_from_atom": {
     "line number": [
      948
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      946
     ]
    },
    "list": {
     "line number": [
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.DATA_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.ENANT1_SDF_FILE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.ENANT2_SDF_FILE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.Fingerprinter": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.Fingerprinter"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.FingerprinterCreationTestCases": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      436
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.FingerprinterCreationTestCases.test_fingerprint_is_transform_invariant": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      506
     ]
    },
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      491
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      502,
      503
     ]
    },
    "e3fp.fingerprint.array_ops.transform_array": {
     "line number": [
      505
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      516
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      491
     ]
    },
    "list": {
     "line number": [
      497,
      512
     ]
    },
    "map": {
     "line number": [
      497,
      512
     ]
    },
    "numpy.array": {
     "line number": [
      496,
      511
     ]
    },
    "numpy.dot": {
     "line number": [
      504
     ]
    },
    "numpy.float": {
     "line number": [
      497,
      512
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      500,
      501
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      507,
      514
     ]
    },
    "numpy.zeros": {
     "line number": [
      503
     ]
    },
    "range": {
     "line number": [
      499
     ]
    },
    "zip": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.FingerprinterCreationTestCases.test_main_parameter_ranges_run_without_fail": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      441
     ]
    },
    "e3fp.fingerprint.fprinter": {
     "line number": [
      451
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      451
     ]
    },
    "e3fp.fingerprint.fprinter.get_fingerprint_at_level": {
     "line number": [
      460
     ]
    },
    "e3fp.fingerprint.fprinter.run": {
     "line number": [
      459
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.FingerprinterCreationTestCases.test_quick": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      530
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      533
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.FingerprinterCreationTestCases.test_repeated_runs_produce_same_results": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      466
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      471
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      466
     ]
    },
    "range": {
     "line number": [
      470
     ]
    },
    "sorted": {
     "line number": [
      475
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_initial_identifiers_assigned_correctly": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      788
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      791
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      788
     ]
    },
    "set": {
     "line number": [
      796,
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_remove_dupe_substructs_makes_same_substruts_diff_shells": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      803
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      806,
      817
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      803
     ]
    },
    "set": {
     "line number": [
      814,
      815,
      825,
      826
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_reordering_conformers_produces_same_fprints": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      876
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      878
     ]
    },
    "e3fp.test.test_fingerprinting.RAND_SDF_DIR": {
     "line number": [
      875
     ]
    },
    "e3fp.test.test_fingerprinting.glob": {
     "line number": [
      875
     ]
    },
    "e3fp.test.test_fingerprinting.os": {
     "line number": [
      875
     ]
    },
    "e3fp.test.test_fingerprinting.random": {
     "line number": [
      891
     ]
    },
    "list": {
     "line number": [
      890
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_reordering_mols_produces_same_fprints": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      904
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      906,
      918
     ]
    },
    "e3fp.test.test_fingerprinting.RAND_SDF_DIR": {
     "line number": [
      903
     ]
    },
    "e3fp.test.test_fingerprinting.glob": {
     "line number": [
      903
     ]
    },
    "e3fp.test.test_fingerprinting.random": {
     "line number": [
      917
     ]
    },
    "list": {
     "line number": [
      904
     ]
    },
    "map": {
     "line number": [
      904
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_runs_without_exception_on_random_mols": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      776
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      778
     ]
    },
    "e3fp.test.test_fingerprinting.RAND_SDF_DIR": {
     "line number": [
      769
     ]
    },
    "e3fp.test.test_fingerprinting.glob": {
     "line number": [
      769
     ]
    },
    "len": {
     "line number": [
      772
     ]
    },
    "numpy.random.randint": {
     "line number": [
      772
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_stereoisomers_produce_equal_fingerprints_nonstereo": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      855,
      856
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      858
     ]
    },
    "e3fp.test.test_fingerprinting.ENANT1_SDF_FILE": {
     "line number": [
      855
     ]
    },
    "e3fp.test.test_fingerprinting.ENANT2_SDF_FILE": {
     "line number": [
      856
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.GenerateFingerprintTestCases.test_stereoisomers_produce_nonequal_fingerprints_stereo": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      835,
      836
     ]
    },
    "e3fp.fingerprint.fprinter.Fingerprinter": {
     "line number": [
      838
     ]
    },
    "e3fp.test.test_fingerprinting.ENANT1_SDF_FILE": {
     "line number": [
      835
     ]
    },
    "e3fp.test.test_fingerprinting.ENANT2_SDF_FILE": {
     "line number": [
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.HashingTestCases": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.HashingTestCases.test_hashing_produces_example_result": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.hash_int64_array": {
     "line number": [
      558
     ]
    },
    "numpy.array": {
     "line number": [
      558
     ]
    },
    "numpy.int64": {
     "line number": [
      558
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.HashingTestCases.test_hashing_wrong_dtype_fails1": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      545
     ]
    },
    "e3fp.fingerprint.fprinter.hash_int64_array": {
     "line number": [
      546
     ]
    },
    "numpy.arange": {
     "line number": [
      546
     ]
    },
    "numpy.float": {
     "line number": [
      546
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.HashingTestCases.test_hashing_wrong_dtype_fails2": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      551
     ]
    },
    "e3fp.fingerprint.fprinter.hash_int64_array": {
     "line number": [
      552
     ]
    },
    "numpy.arange": {
     "line number": [
      552
     ]
    },
    "numpy.int32": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.HashingTestCases.test_mmh3_produces_example_result": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.mmh3": {
     "line number": [
      564
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.NONPLANAR_SDF_FILE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.RAND_SDF_DIR": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "e3fp.test.test_fingerprinting.Shell": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.Shell"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_atom_coords_calculated_correctly": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      36
     ]
    },
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      30
     ]
    },
    "e3fp.fingerprint.fprinter.coords_from_atoms": {
     "line number": [
      35
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      30
     ]
    },
    "len": {
     "line number": [
      37
     ]
    },
    "list": {
     "line number": [
      37
     ]
    },
    "numpy.float": {
     "line number": [
      37
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      39
     ]
    },
    "numpy.zeros": {
     "line number": [
      37
     ]
    },
    "zip": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_connected_match_atoms_rad0_correct": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      89
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      92
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      89
     ]
    },
    "list": {
     "line number": [
      91
     ]
    },
    "range": {
     "line number": [
      91
     ]
    },
    "set": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_connected_match_atoms_rad1_correct1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      103
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      108
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      103
     ]
    },
    "list": {
     "line number": [
      105
     ]
    },
    "range": {
     "line number": [
      105
     ]
    },
    "set": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_connected_match_atoms_rad1_correct2": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      119
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      124
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      119
     ]
    },
    "list": {
     "line number": [
      121
     ]
    },
    "range": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_connected_substructs_converge": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      292
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      302
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      292
     ]
    },
    "list": {
     "line number": [
      294
     ]
    },
    "next": {
     "line number": [
      306,
      311
     ]
    },
    "range": {
     "line number": [
      294,
      305
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_disconnected_substructs_converge": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      270
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      275
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      270
     ]
    },
    "list": {
     "line number": [
      272
     ]
    },
    "next": {
     "line number": [
      279,
      281
     ]
    },
    "range": {
     "line number": [
      272,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_distance_matrix_calculated_correctly1": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.make_distance_matrix": {
     "line number": [
      45
     ]
    },
    "numpy.float": {
     "line number": [
      44,
      47
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      46
     ]
    },
    "numpy.zeros": {
     "line number": [
      44,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_distance_matrix_calculated_correctly2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "e3fp.fingerprint.array_ops.make_distance_matrix": {
     "line number": [
      54
     ]
    },
    "numpy.array": {
     "line number": [
      53
     ]
    },
    "numpy.eye": {
     "line number": [
      56
     ]
    },
    "numpy.float": {
     "line number": [
      53,
      56
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_generates_correct_connected_shells_level0": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      136
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      140
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      139,
      139,
      139
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      136
     ]
    },
    "list": {
     "line number": [
      138
     ]
    },
    "next": {
     "line number": [
      141
     ]
    },
    "range": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_generates_correct_connected_shells_level1": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      184
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      200
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      191,
      192,
      193
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      184
     ]
    },
    "list": {
     "line number": [
      186
     ]
    },
    "next": {
     "line number": [
      204
     ]
    },
    "range": {
     "line number": [
      186,
      203
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_generates_correct_connected_shells_level2": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      239
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      259
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      246,
      247,
      248,
      251,
      252,
      253
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      239
     ]
    },
    "list": {
     "line number": [
      241
     ]
    },
    "next": {
     "line number": [
      263
     ]
    },
    "range": {
     "line number": [
      241,
      262
     ]
    },
    "unittest.mock.patch": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_generates_correct_disconnected_shells_level0": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      149
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      153
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      152,
      152,
      152
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      149
     ]
    },
    "list": {
     "line number": [
      151
     ]
    },
    "next": {
     "line number": [
      154
     ]
    },
    "range": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_generates_correct_disconnected_shells_level1": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      162
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      172
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      168,
      169,
      170
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      162
     ]
    },
    "list": {
     "line number": [
      164
     ]
    },
    "next": {
     "line number": [
      176
     ]
    },
    "range": {
     "line number": [
      164,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_generates_correct_disconnected_shells_level2": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      212
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      227
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      218,
      219,
      220,
      223,
      224,
      225
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      212
     ]
    },
    "list": {
     "line number": [
      214
     ]
    },
    "next": {
     "line number": [
      231
     ]
    },
    "range": {
     "line number": [
      214,
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_shells_generator_creation_success": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      63
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      66
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellCreationTestCases.test_shells_generator_next_works_correctly": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      74
     ]
    },
    "e3fp.fingerprint.fprinter.ShellsGenerator": {
     "line number": [
      77,
      80
     ]
    },
    "e3fp.test.test_fingerprinting.PLANAR_SDF_FILE": {
     "line number": [
      74
     ]
    },
    "next": {
     "line number": [
      83,
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.ShellsGenerator": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.ShellsGenerator"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "e3fp.test.test_fingerprinting.unittest": {
     "line number": [
      567
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_all_indicators_correctly_assigned": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.quad_indicators_from_coords": {
     "line number": [
      702
     ]
    },
    "list": {
     "line number": [
      704
     ]
    },
    "numpy.array": {
     "line number": [
      685,
      698,
      700,
      701
     ]
    },
    "numpy.float": {
     "line number": [
      696,
      698,
      700
     ]
    },
    "numpy.int64": {
     "line number": [
      701
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_empty_tuples_returns_empty": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      622
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      619
     ]
    },
    "len": {
     "line number": [
      625
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_no_neighbors_transform_matrix_is_translate": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      752
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      750
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      751
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      753
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_no_unique_y_along_poles_correct": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      674
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      666,
      673,
      673,
      673
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_no_unique_y_three_evenly_spaced_produces_zeros": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      654
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      646,
      653,
      653,
      653
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_no_unique_y_two_evenly_spaced_correct": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      634
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      631,
      633,
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_stereo_indicators_for_frame": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      607
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      597
     ]
    },
    "e3fp.fingerprint.array_ops.project_to_plane": {
     "line number": [
      596
     ]
    },
    "e3fp.fingerprint.array_ops.transform_array": {
     "line number": [
      600,
      603
     ]
    },
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      608
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      577,
      588,
      589,
      590
     ]
    },
    "list": {
     "line number": [
      607,
      607
     ]
    },
    "numpy.asarray": {
     "line number": [
      578
     ]
    },
    "numpy.float": {
     "line number": [
      585
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      603
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      593,
      594,
      595
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      601
     ]
    },
    "numpy.zeros": {
     "line number": [
      598
     ]
    },
    "range": {
     "line number": [
      592,
      607
     ]
    },
    "zip": {
     "line number": [
      607
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.StereoTestCases.test_stereo_sets_correct_transform_matrix": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      740
     ]
    },
    "e3fp.fingerprint.array_ops.make_transform_matrix": {
     "line number": [
      726
     ]
    },
    "e3fp.fingerprint.array_ops.project_to_plane": {
     "line number": [
      725
     ]
    },
    "e3fp.fingerprint.array_ops.transform_array": {
     "line number": [
      733,
      737
     ]
    },
    "e3fp.fingerprint.fprinter.stereo_indicators_from_shell": {
     "line number": [
      741
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      715,
      720,
      720
     ]
    },
    "list": {
     "line number": [
      740,
      740
     ]
    },
    "numpy.asarray": {
     "line number": [
      716
     ]
    },
    "numpy.dot": {
     "line number": [
      731
     ]
    },
    "numpy.float": {
     "line number": [
      718,
      729
     ]
    },
    "numpy.identity": {
     "line number": [
      729
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      734
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      722,
      723,
      724
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      736,
      742
     ]
    },
    "numpy.zeros": {
     "line number": [
      727
     ]
    },
    "range": {
     "line number": [
      721,
      740
     ]
    },
    "zip": {
     "line number": [
      740
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fingerprinting.Y_AXIS": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.Y_AXIS"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.as_unit": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.as_unit"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.coords_from_atoms": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.coords_from_atoms"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.fprinter": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.hash_int64_array": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.hash_int64_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.make_distance_matrix": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.make_distance_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.make_rotation_matrix": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.make_rotation_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.make_transform_matrix": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.make_transform_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.mmh3": {
  "data": {
   "shadows": "mmh3"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.mol_from_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_sdf"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.pad_array": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.pad_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.project_to_plane": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.project_to_plane"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.quad_indicators_from_coords": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.quad_indicators_from_coords"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.stereo_indicators_from_shell": {
  "data": {
   "shadows": "e3fp.fingerprint.fprinter.stereo_indicators_from_shell"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.transform_array": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.transform_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_fingerprinting.unpad_array": {
  "data": {
   "shadows": "e3fp.fingerprint.array_ops.unpad_array"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      453
     ]
    },
    "e3fp.test.test_fprint_db.unittest": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_fprint_db.CountFingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.CountFingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.E3FPEfficiencyWarning": {
  "data": {
   "shadows": "e3fp.util.E3FPEfficiencyWarning"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.E3FPInvalidFingerprintError": {
  "data": {
   "shadows": "e3fp.fingerprint.util.E3FPInvalidFingerprintError"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.Fingerprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint.Fingerprint"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabase": {
  "data": {
   "shadows": "e3fp.fingerprint.db.FingerprintDatabase"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "e3fp.test.test_fprint_db.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_add_fingerprints": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      91
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      91,
      93
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector": {
     "line number": [
      87
     ]
    },
    "enumerate": {
     "line number": [
      89
     ]
    },
    "int": {
     "line number": [
      99
     ]
    },
    "len": {
     "line number": [
      97
     ]
    },
    "numpy.double": {
     "line number": [
      84
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      94
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      83
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      101
     ]
    },
    "numpy.uint16": {
     "line number": [
      94
     ]
    },
    "range": {
     "line number": [
      87
     ]
    },
    "str": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_add_fingerprints_two_batches": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      117
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      117,
      126
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector": {
     "line number": [
      113,
      120
     ]
    },
    "enumerate": {
     "line number": [
      115,
      122
     ]
    },
    "int": {
     "line number": [
      132
     ]
    },
    "len": {
     "line number": [
      123,
      130
     ]
    },
    "numpy.double": {
     "line number": [
      110
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      127
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      109
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      134
     ]
    },
    "numpy.uint16": {
     "line number": [
      127
     ]
    },
    "range": {
     "line number": [
      113,
      120
     ]
    },
    "str": {
     "line number": [
      116,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_concat_dbs": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      441
     ]
    },
    "e3fp.fingerprint.db.concat": {
     "line number": [
      449
     ]
    },
    "float": {
     "line number": [
      438
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      434
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      450
     ]
    },
    "numpy.uint16": {
     "line number": [
      435
     ]
    },
    "range": {
     "line number": [
      437,
      438,
      440
     ]
    },
    "str": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_create": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      21
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      22,
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_create_from_array": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      67
     ]
    },
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      71
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      68
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint.from_vector": {
     "line number": [
      60
     ]
    },
    "enumerate": {
     "line number": [
      62
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      57
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      75
     ]
    },
    "numpy.uint16": {
     "line number": [
      58
     ]
    },
    "range": {
     "line number": [
      60
     ]
    },
    "str": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_db_equality": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      32,
      33,
      35,
      37,
      39
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      35
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint.from_vector": {
     "line number": [
      43
     ]
    },
    "enumerate": {
     "line number": [
      44
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      40
     ]
    },
    "numpy.uint16": {
     "line number": [
      41
     ]
    },
    "range": {
     "line number": [
      43
     ]
    },
    "str": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_duplicate_fprint_names_detected": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      150
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      150,
      159
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector": {
     "line number": [
      146,
      153
     ]
    },
    "enumerate": {
     "line number": [
      148,
      155
     ]
    },
    "int": {
     "line number": [
      165
     ]
    },
    "len": {
     "line number": [
      163
     ]
    },
    "numpy.double": {
     "line number": [
      143
     ]
    },
    "numpy.issubdtype": {
     "line number": [
      160
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      142
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      168
     ]
    },
    "numpy.uint16": {
     "line number": [
      160
     ]
    },
    "range": {
     "line number": [
      146,
      153
     ]
    },
    "str": {
     "line number": [
      149,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_fingerprint_has_props": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      425
     ]
    },
    "enumerate": {
     "line number": [
      428
     ]
    },
    "float": {
     "line number": [
      424
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      420
     ]
    },
    "numpy.uint16": {
     "line number": [
      421
     ]
    },
    "range": {
     "line number": [
      423,
      424
     ]
    },
    "str": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_fold_db": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      377,
      380
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      368
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      368
     ]
    },
    "enumerate": {
     "line number": [
      374
     ]
    },
    "numpy.double": {
     "line number": [
      370
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      369
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      384
     ]
    },
    "range": {
     "line number": [
      372
     ]
    },
    "str": {
     "line number": [
      375
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_get_db_subset": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      181
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      175
     ]
    },
    "numpy.uint16": {
     "line number": [
      176
     ]
    },
    "range": {
     "line number": [
      179
     ]
    },
    "str": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_load_efficiency_warning": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      326
     ]
    },
    "e3fp.test.test_fprint_db.os": {
     "line number": [
      330,
      343
     ]
    },
    "e3fp.test.test_fprint_db.scipy": {
     "line number": [
      336,
      340
     ]
    },
    "e3fp.test.test_fprint_db.tempfile": {
     "line number": [
      329
     ]
    },
    "e3fp.test.test_fprint_db.warnings": {
     "line number": [
      333,
      334
     ]
    },
    "e3fp.util.E3FPEfficiencyWarning": {
     "line number": [
      337
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      320
     ]
    },
    "numpy.uint16": {
     "line number": [
      321
     ]
    },
    "range": {
     "line number": [
      324,
      327
     ]
    },
    "str": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_lookup": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      349
     ]
    },
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      356
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint.from_vector": {
     "line number": [
      358,
      360
     ]
    },
    "numpy.bool_": {
     "line number": [
      351
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      350
     ]
    },
    "range": {
     "line number": [
      354,
      357
     ]
    },
    "str": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_roundtrip": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      197
     ]
    },
    "e3fp.test.test_fprint_db.os": {
     "line number": [
      201,
      204
     ]
    },
    "e3fp.test.test_fprint_db.tempfile": {
     "line number": [
      200
     ]
    },
    "list": {
     "line number": [
      206
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      191
     ]
    },
    "numpy.uint16": {
     "line number": [
      192
     ]
    },
    "range": {
     "line number": [
      195,
      198,
      206
     ]
    },
    "str": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_roundtrip2": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      224
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      224
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint.from_indices": {
     "line number": [
      216
     ]
    },
    "e3fp.test.test_fprint_db.os": {
     "line number": [
      227,
      230
     ]
    },
    "e3fp.test.test_fprint_db.tempfile": {
     "line number": [
      226
     ]
    },
    "float": {
     "line number": [
      223
     ]
    },
    "list": {
     "line number": [
      232
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      217
     ]
    },
    "range": {
     "line number": [
      214,
      232
     ]
    },
    "str": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_roundtrip_zlib": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      244
     ]
    },
    "e3fp.test.test_fprint_db.os": {
     "line number": [
      248,
      251
     ]
    },
    "e3fp.test.test_fprint_db.tempfile": {
     "line number": [
      247
     ]
    },
    "list": {
     "line number": [
      253
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      238
     ]
    },
    "numpy.uint16": {
     "line number": [
      239
     ]
    },
    "range": {
     "line number": [
      242,
      245,
      253
     ]
    },
    "str": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_save_txt": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      263
     ]
    },
    "e3fp.test.test_fprint_db.os": {
     "line number": [
      266,
      272,
      275,
      281
     ]
    },
    "e3fp.test.test_fprint_db.tempfile": {
     "line number": [
      265,
      274
     ]
    },
    "numpy.array": {
     "line number": [
      260
     ]
    },
    "numpy.bool_": {
     "line number": [
      261
     ]
    },
    "python_utilities.io_tools.smart_open": {
     "line number": [
      269,
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_save_txt_errors": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      295,
      305
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      296
     ]
    },
    "e3fp.fingerprint.util.E3FPInvalidFingerprintError": {
     "line number": [
      301
     ]
    },
    "e3fp.test.test_fprint_db.os": {
     "line number": [
      300,
      312
     ]
    },
    "e3fp.test.test_fprint_db.tempfile": {
     "line number": [
      299
     ]
    },
    "e3fp.test.test_fprint_db.warnings": {
     "line number": [
      306,
      307
     ]
    },
    "e3fp.util.E3FPEfficiencyWarning": {
     "line number": [
      309
     ]
    },
    "numpy.array": {
     "line number": [
      292
     ]
    },
    "numpy.bool_": {
     "line number": [
      293,
      304
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      304
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.FingerprintDatabaseTestCases.test_update_props": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase": {
     "line number": [
      402
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      402
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector": {
     "line number": [
      397,
      405
     ]
    },
    "enumerate": {
     "line number": [
      399,
      407
     ]
    },
    "len": {
     "line number": [
      408
     ]
    },
    "list": {
     "line number": [
      414,
      414
     ]
    },
    "numpy.double": {
     "line number": [
      394
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      393
     ]
    },
    "range": {
     "line number": [
      397,
      405,
      414,
      414
     ]
    },
    "str": {
     "line number": [
      400,
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_fprint_db.concat": {
  "data": {
   "shadows": "e3fp.fingerprint.db.concat"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.smart_open": {
  "data": {
   "shadows": "python_utilities.io_tools.smart_open"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_fprint_db.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      268
     ]
    },
    "e3fp.test.test_metrics.unittest": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "e3fp.test.test_metrics.unittest": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases._eval": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "func": {
     "line number": [
      37
     ]
    },
    "staticmethod": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases.test_cosine": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.array_metrics.cosine": {
     "line number": [
      93
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      95,
      111
     ]
    },
    "func": {
     "line number": [
      93,
      100,
      101,
      105,
      106,
      116,
      117,
      121,
      122,
      127,
      128,
      132,
      133
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      102,
      103,
      107,
      108,
      118,
      119,
      123,
      124,
      129,
      130,
      134,
      135
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      98,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases.test_dice": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.array_metrics.dice": {
     "line number": [
      80
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      78
     ]
    },
    "func": {
     "line number": [
      80,
      82,
      83,
      87,
      88
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      84,
      85,
      89,
      90
     ]
    },
    "scipy.spatial.distance.cdist": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases.test_pearson": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.array_metrics.pearson": {
     "line number": [
      142
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      140
     ]
    },
    "func": {
     "line number": [
      142,
      146,
      147,
      151,
      152
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      148,
      149,
      153,
      154
     ]
    },
    "scipy.corrcoef": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases.test_soergel": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.array_metrics.soergel": {
     "line number": [
      56
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      54
     ]
    },
    "func": {
     "line number": [
      56,
      57,
      58,
      62,
      63
     ]
    },
    "numpy.diag": {
     "line number": [
      59,
      64
     ]
    },
    "numpy.ones": {
     "line number": [
      59,
      64
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      59,
      60,
      64,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases.test_tanimoto": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.array_metrics.tanimoto": {
     "line number": [
      42
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      40
     ]
    },
    "func": {
     "line number": [
      42,
      43,
      44,
      48,
      49
     ]
    },
    "numpy.diag": {
     "line number": [
      45,
      50
     ]
    },
    "numpy.ones": {
     "line number": [
      45,
      50
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      45,
      46,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.ArrayMetricsTestCases.test_tanimoto_soergel_equal_for_binary": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "e3fp.fingerprint.metrics.array_metrics.soergel": {
     "line number": [
      71,
      74
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics.tanimoto": {
     "line number": [
      70,
      73
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      68
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      72,
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "e3fp.test.test_metrics.unittest": {
     "line number": [
      157
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases.test_binary_db_vs_db": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      234,
      239
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      235,
      240
     ]
    },
    "e3fp.fingerprint.metrics": {
     "line number": [
      243
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics": {
     "line number": [
      244
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      232,
      237
     ]
    },
    "getattr": {
     "line number": [
      243,
      244
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      247
     ]
    },
    "range": {
     "line number": [
      233,
      238
     ]
    },
    "str": {
     "line number": [
      233,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases.test_binary_fprint_vs_db": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      201
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint": {
     "line number": [
      202
     ]
    },
    "e3fp.fingerprint.fprint.Fingerprint.from_vector": {
     "line number": [
      198
     ]
    },
    "e3fp.fingerprint.metrics": {
     "line number": [
      205,
      210
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics": {
     "line number": [
      206
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      197,
      199
     ]
    },
    "getattr": {
     "line number": [
      205,
      206,
      210
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      209,
      211
     ]
    },
    "range": {
     "line number": [
      200
     ]
    },
    "str": {
     "line number": [
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases.test_binary_fprint_vs_fprint": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.Fingerprint.from_vector": {
     "line number": [
      165,
      168
     ]
    },
    "e3fp.fingerprint.metrics": {
     "line number": [
      172
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics": {
     "line number": [
      175
     ]
    },
    "e3fp.fingerprint.metrics.fprint_metrics": {
     "line number": [
      173
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      166,
      169
     ]
    },
    "getattr": {
     "line number": [
      172,
      173,
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases.test_count_db_vs_db": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      252,
      257
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      253,
      258
     ]
    },
    "e3fp.fingerprint.metrics": {
     "line number": [
      261
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics": {
     "line number": [
      262
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      250,
      255
     ]
    },
    "getattr": {
     "line number": [
      261,
      262
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      265
     ]
    },
    "range": {
     "line number": [
      251,
      256
     ]
    },
    "str": {
     "line number": [
      251,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases.test_count_fprint_vs_db": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "e3fp.fingerprint.db.FingerprintDatabase.from_array": {
     "line number": [
      218
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint": {
     "line number": [
      219
     ]
    },
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector": {
     "line number": [
      215
     ]
    },
    "e3fp.fingerprint.metrics": {
     "line number": [
      222,
      228
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics": {
     "line number": [
      223
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      214,
      216
     ]
    },
    "getattr": {
     "line number": [
      222,
      223,
      228
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      226,
      229
     ]
    },
    "range": {
     "line number": [
      217
     ]
    },
    "str": {
     "line number": [
      217
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.FlexibleMetricsTestCases.test_count_fprint_vs_fprint": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "e3fp.fingerprint.fprint.CountFingerprint.from_vector": {
     "line number": [
      181,
      184
     ]
    },
    "e3fp.fingerprint.metrics": {
     "line number": [
      188
     ]
    },
    "e3fp.fingerprint.metrics.array_metrics": {
     "line number": [
      191
     ]
    },
    "e3fp.fingerprint.metrics.fprint_metrics": {
     "line number": [
      189
     ]
    },
    "e3fp.test.test_metrics._create_random_sparse": {
     "line number": [
      182,
      185
     ]
    },
    "getattr": {
     "line number": [
      188,
      189,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics._create_random_sparse": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "numpy.double": {
     "line number": [
      18,
      22
     ]
    },
    "numpy.random.randint": {
     "line number": [
      21
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      17
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_metrics.array_metrics": {
  "data": {
   "shadows": "e3fp.fingerprint.metrics.array_metrics"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.corrcoef": {
  "data": {
   "shadows": "scipy.corrcoef"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.db": {
  "data": {
   "shadows": "e3fp.fingerprint.db"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.fprint": {
  "data": {
   "shadows": "e3fp.fingerprint.fprint"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.fprint_metrics": {
  "data": {
   "shadows": "e3fp.fingerprint.metrics.fprint_metrics"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.metrics": {
  "data": {
   "shadows": "e3fp.fingerprint.metrics"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "e3fp.test.test_metrics.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_struct": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      289
     ]
    },
    "e3fp.test.test_struct.DATA_DIR": {
     "line number": [
      10
     ]
    },
    "e3fp.test.test_struct.os": {
     "line number": [
      9,
      9,
      10
     ]
    },
    "e3fp.test.test_struct.unittest": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_struct.DATA_DIR": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "e3fp.test.test_struct.FormatError": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.FormatError"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.PLANAR_SDF_FILE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "e3fp.test.test_struct.Shell": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.Shell"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.ShellComparisonTestCases": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "e3fp.test.test_struct.unittest": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_struct.ShellComparisonTestCases.test_equal_shells_hash_to_same_value": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      132
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      135,
      136
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      132
     ]
    },
    "hash": {
     "line number": [
      137,
      137
     ]
    },
    "list": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellComparisonTestCases.test_same_shell_hashes_to_same_value": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      143
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      146
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      143
     ]
    },
    "hash": {
     "line number": [
      147,
      147
     ]
    },
    "list": {
     "line number": [
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellComparisonTestCases.test_shells_diff_center_same_atoms_nonequal": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      111
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      113,
      114
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      111
     ]
    },
    "list": {
     "line number": [
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellComparisonTestCases.test_shells_same_center_diff_atoms_nonequal": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      121
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      124,
      125
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      121
     ]
    },
    "list": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellComparisonTestCases.test_shells_same_center_same_atoms_equal": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      100
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      103,
      104
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      100
     ]
    },
    "list": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "e3fp.test.test_struct.unittest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_atoms_converted_to_shells": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      62
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      65,
      67
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      62
     ]
    },
    "list": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_create_shell_no_shell": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      43
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      46
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      43
     ]
    },
    "list": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_create_shell_with_same_center_fails": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      52
     ]
    },
    "e3fp.fingerprint.structs.FormatError": {
     "line number": [
      55
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      56
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      52
     ]
    },
    "list": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_creation_with_atoms_or_ids_equivalent": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      32
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      36,
      36
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      32
     ]
    },
    "list": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_creation_with_atoms_or_shells_equal": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      73
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      75,
      77,
      78
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      73
     ]
    },
    "list": {
     "line number": [
      74,
      75
     ]
    },
    "map": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_error_when_center_not_atom": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      17
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_error_when_shells_has_non_shell": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      25
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellCreationTestCases.test_recursive_atom_shells_correct": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      85
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      87,
      88,
      89
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      85
     ]
    },
    "list": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellSubstructInterfaceTestCases": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "e3fp.test.test_struct.unittest": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_struct.ShellSubstructInterfaceTestCases.test_recursive_shell_substruct_correct1": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      155
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      157,
      158,
      159
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      155
     ]
    },
    "list": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellSubstructInterfaceTestCases.test_recursive_shell_substruct_correct2": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      168
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      170,
      171,
      172,
      173,
      174
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      168
     ]
    },
    "list": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellSubstructInterfaceTestCases.test_shell_creation_from_substruct": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      193
     ]
    },
    "e3fp.fingerprint.structs.Shell.from_substruct": {
     "line number": [
      196
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      195
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      193
     ]
    },
    "list": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellSubstructInterfaceTestCases.test_shell_creation_from_substruct_without_center_fails": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      183
     ]
    },
    "e3fp.fingerprint.structs.FormatError": {
     "line number": [
      186
     ]
    },
    "e3fp.fingerprint.structs.Shell.from_substruct": {
     "line number": [
      187
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      185
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      183
     ]
    },
    "list": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.ShellSubstructInterfaceTestCases.test_substruct_creation_from_shell": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      203
     ]
    },
    "e3fp.fingerprint.structs.Shell": {
     "line number": [
      205
     ]
    },
    "e3fp.fingerprint.structs.Substruct.from_shell": {
     "line number": [
      206
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      203
     ]
    },
    "list": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.Substruct": {
  "data": {
   "shadows": "e3fp.fingerprint.structs.Substruct"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.SubstructCreationComparisonCases": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": {
    "e3fp.test.test_struct.unittest": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_struct.SubstructCreationComparisonCases.test_equal_shells_hash_to_same_value": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      271
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      274,
      275
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      271
     ]
    },
    "hash": {
     "line number": [
      276,
      276
     ]
    },
    "list": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationComparisonCases.test_same_shells_hash_to_same_value": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      282
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      285
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      282
     ]
    },
    "hash": {
     "line number": [
      286,
      286
     ]
    },
    "list": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationComparisonCases.test_substructs_diff_center_same_atoms_equal": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      251
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      253,
      254
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      251
     ]
    },
    "list": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationComparisonCases.test_substructs_same_center_diff_atoms_nonequal": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      261
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      263,
      264
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      261
     ]
    },
    "list": {
     "line number": [
      262
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationComparisonCases.test_substructs_same_center_same_atoms_equal": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      240
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      243,
      244
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      240
     ]
    },
    "list": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationTestCases": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "e3fp.test.test_struct.unittest": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_struct.SubstructCreationTestCases.test_center_atom_auto_added_to_atoms": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "e3fp.conformer.util.mol_from_sdf": {
     "line number": [
      228
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      231
     ]
    },
    "e3fp.test.test_struct.PLANAR_SDF_FILE": {
     "line number": [
      228
     ]
    },
    "list": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationTestCases.test_error_when_atoms_has_non_atom": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      221
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.SubstructCreationTestCases.test_error_when_center_not_atom": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      214
     ]
    },
    "e3fp.fingerprint.structs.Substruct": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_struct.mol_from_sdf": {
  "data": {
   "shadows": "e3fp.conformer.util.mol_from_sdf"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "e3fp.test.test_struct.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_util": {
  "data": {
   "symbols_in_volume": {
    "__name__": {
     "line number": [
      49
     ]
    },
    "e3fp.test.test_util.unittest": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.test.test_util.E3FPDeprecationWarning": {
  "data": {
   "shadows": "e3fp.util.E3FPDeprecationWarning"
  },
  "type": "import"
 },
 "e3fp.test.test_util.E3FPEfficiencyWarning": {
  "data": {
   "shadows": "e3fp.util.E3FPEfficiencyWarning"
  },
  "type": "import"
 },
 "e3fp.test.test_util.UtilTestCases": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "e3fp.test.test_util.unittest": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.test.test_util.UtilTestCases.test_deprecated": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "dep_method": {
     "line number": [
      20
     ]
    },
    "dep_method.__doc__": {
     "line number": [
      29,
      31,
      32
     ]
    },
    "e3fp.test.test_util.warnings": {
     "line number": [
      18,
      19
     ]
    },
    "e3fp.util.E3FPDeprecationWarning": {
     "line number": [
      22
     ]
    },
    "issubclass": {
     "line number": [
      22
     ]
    },
    "len": {
     "line number": [
      21
     ]
    },
    "str": {
     "line number": [
      23,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_util.UtilTestCases.test_deprecated.dep_method": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "e3fp.util.deprecated": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_util.UtilTestCases.test_efficiency_warning": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "e3fp.test.test_util.warnings": {
     "line number": [
      41,
      42
     ]
    },
    "e3fp.util.E3FPEfficiencyWarning": {
     "line number": [
      45
     ]
    },
    "test": {
     "line number": [
      43,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_util.UtilTestCases.test_efficiency_warning.test": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "e3fp.util.E3FPEfficiencyWarning": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.test.test_util.deprecated": {
  "data": {
   "shadows": "e3fp.util.deprecated"
  },
  "type": "import"
 },
 "e3fp.test.test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "e3fp.test.test_util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "e3fp.util": {
  "data": {
   "symbols_in_volume": {
    "e3fp.util.E3FPWarning": {
     "line number": [
      25
     ]
    },
    "e3fp.util.warnings": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "e3fp.util.E3FPDeprecationWarning": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      28
     ]
    },
    "e3fp.util.E3FPWarning": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.util.E3FPEfficiencyWarning": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      32
     ]
    },
    "e3fp.util.E3FPWarning": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.util.E3FPError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      10
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.util.E3FPWarning": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "Warning": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.util.deprecated": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "object": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.util.deprecated.__call__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87
     ]
    },
    "e3fp.util.inspect": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.util.deprecated.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "int": {
     "line number": [
      73
     ]
    },
    "len": {
     "line number": [
      74
     ]
    },
    "range": {
     "line number": [
      74
     ]
    },
    "str": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.util.deprecated.deprecate_function": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "f.__dict__": {
     "line number": [
      106
     ]
    },
    "f.__doc__": {
     "line number": [
      107
     ]
    },
    "f.__name__": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.util.deprecated.deprecate_function.new_func": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "e3fp.util.E3FPDeprecationWarning": {
     "line number": [
      102
     ]
    },
    "e3fp.util.warnings": {
     "line number": [
      102
     ]
    },
    "f": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.util.deprecated.update_docstring": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "e3fp.util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "e3fp.util.maybe_jit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "object": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "class"
 },
 "e3fp.util.maybe_jit.__call__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "e3fp.util.maybe_jit.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "e3fp.util.maybe_jit.jit_function": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      138
     ]
    },
    "e3fp.util.numba": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "e3fp.util.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "e3fp.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "e3fp.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "e3fp.version_info": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 }
}